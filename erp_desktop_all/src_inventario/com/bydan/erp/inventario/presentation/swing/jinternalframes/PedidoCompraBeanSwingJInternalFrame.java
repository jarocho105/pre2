/*
*AVISO LEGAL
Â© Copyright
*Este programa esta protegido por la ley de derechos de autor.
*La reproduccion o distribucion ilicita de este programa o de cualquiera de
*sus partes esta penado por la ley con severas sanciones civiles y penales,
*y seran objeto de todas las sanciones legales que correspondan.

*Su contenido no puede copiarse para fines comerciales o de otras,
*ni puede mostrarse, incluso en una version modificada, en otros sitios Web.
Solo esta permitido colocar hipervinculos al sitio web.
*/
package com.bydan.erp.inventario.presentation.swing.jinternalframes;




import com.bydan.erp.seguridad.business.entity.Usuario;
import com.bydan.erp.seguridad.business.entity.ResumenUsuario;
import com.bydan.erp.seguridad.business.entity.Opcion;
import com.bydan.erp.seguridad.business.entity.PerfilOpcion;
import com.bydan.erp.seguridad.business.entity.PerfilCampo;
import com.bydan.erp.seguridad.business.entity.PerfilAccion;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralSg;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralUsuario;
import com.bydan.erp.seguridad.business.entity.Modulo;
import com.bydan.erp.seguridad.business.entity.Accion;

import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneralAdditional;
import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneral;


//import com.bydan.erp.seguridad.business.entity.PerfilAccion;


import com.bydan.erp.seguridad.util.SistemaConstantesFunciones;
import com.bydan.erp.seguridad.util.SistemaConstantesFuncionesAdditional;
import com.bydan.erp.seguridad.business.logic.SistemaLogicAdditional;

import com.bydan.erp.inventario.util.PedidoCompraConstantesFunciones;
import com.bydan.erp.inventario.util.PedidoCompraParameterReturnGeneral;
//import com.bydan.erp.inventario.util.PedidoCompraParameterGeneral;
//import com.bydan.erp.inventario.presentation.report.source.PedidoCompraBean;
import com.bydan.framework.erp.business.dataaccess.ConstantesSql;
import com.bydan.framework.erp.business.entity.Classe;
import com.bydan.framework.erp.business.entity.DatoGeneral;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterGeneral;
import com.bydan.framework.erp.business.entity.OrderBy;
import com.bydan.framework.erp.business.entity.DatoGeneralMinimo;
import com.bydan.framework.erp.business.entity.GeneralEntity;
import com.bydan.framework.erp.business.entity.Mensajes;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterReturnGeneral;
//import com.bydan.framework.erp.business.entity.MaintenanceType;
import com.bydan.framework.erp.util.MaintenanceType;
import com.bydan.framework.erp.util.FuncionesReporte;
import com.bydan.framework.erp.business.logic.DatosCliente;
import com.bydan.framework.erp.business.logic.Pagination;

import com.bydan.erp.inventario.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralTotalModel;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralOrderByModel;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverter;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverterFromDate;
import com.bydan.framework.erp.presentation.desktop.swing.DateRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.DateEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.TextFieldRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.RunnableProceso;
import com.bydan.framework.erp.presentation.desktop.swing.*;
//import com.bydan.framework.erp.presentation.desktop.swing.TextFieldEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.HeaderRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.JInternalFrameBase;
import com.bydan.framework.erp.presentation.desktop.swing.FuncionesSwing;
import com.bydan.framework.erp.presentation.desktop.swing.MainJFrame;
import com.bydan.framework.erp.resources.imagenes.AuxiliarImagenes;
import com.bydan.erp.inventario.resources.reportes.AuxiliarReportes;


import com.bydan.erp.inventario.util.*;
import com.bydan.erp.inventario.business.logic.*;

import com.bydan.erp.seguridad.business.logic.*;
import com.bydan.erp.contabilidad.business.logic.*;
import com.bydan.erp.cartera.business.logic.*;
import com.bydan.erp.importaciones.business.logic.*;
import com.bydan.erp.nomina.business.logic.*;
import com.bydan.erp.facturacion.business.logic.*;
import com.bydan.erp.sris.business.logic.*;
import com.bydan.erp.tesoreria.business.logic.*;

//EJB

//PARAMETROS


//EJB PARAMETROS

import com.bydan.framework.erp.business.logic.*;
import com.bydan.framework.erp.util.*;

import com.bydan.erp.inventario.business.entity.*;
//import com.bydan.framework.erp.business.entity.ConexionBeanFace;
//import com.bydan.framework.erp.business.entity.Mensajes;


import com.bydan.erp.seguridad.presentation.swing.jinternalframes.*;
import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.*;
import com.bydan.erp.cartera.presentation.swing.jinternalframes.*;
import com.bydan.erp.importaciones.presentation.swing.jinternalframes.*;
import com.bydan.erp.nomina.presentation.swing.jinternalframes.*;
import com.bydan.erp.facturacion.presentation.swing.jinternalframes.*;
import com.bydan.erp.sris.presentation.swing.jinternalframes.*;
import com.bydan.erp.tesoreria.presentation.swing.jinternalframes.*;

import com.bydan.erp.seguridad.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.cartera.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.importaciones.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.nomina.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.facturacion.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.sris.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.tesoreria.presentation.swing.jinternalframes.auxiliar.*;






import javax.imageio.ImageIO;
import java.net.NetworkInterface;
import java.net.InterfaceAddress;
import java.net.InetAddress;
import javax.naming.InitialContext;
import java.lang.Long;
import java.util.Date;
import java.util.Enumeration;
import java.util.Iterator;
import java.util.Set;
import java.util.HashSet;
import java.util.List;
import java.util.ArrayList;
import java.io.Serializable;
import java.util.Hashtable;
import java.util.Collections;
import java.io.File;
import java.io.FileInputStream;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.BufferedReader;
import java.io.FileReader;
import java.util.HashMap;
import java.util.Map;
import java.io.PrintWriter;
import java.sql.SQLException;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.stream.StreamSource;

import org.xml.sax.EntityResolver;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;

import org.w3c.dom.Document;
import org.w3c.dom.Document;
import org.w3c.dom.NodeList;
import org.w3c.dom.Node;
import org.w3c.dom.Element;

import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.util.CellRangeAddress;

import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;


import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRRuntimeException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.engine.export.JRHtmlExporter;
import net.sf.jasperreports.j2ee.servlets.BaseHttpServlet;
import net.sf.jasperreports.engine.JRExporterParameter;
import net.sf.jasperreports.engine.data.JRBeanArrayDataSource;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;

import org.apache.log4j.Logger;

import com.bydan.framework.erp.business.entity.Reporte;


//VALIDACION
import org.hibernate.validator.ClassValidator;
import org.hibernate.validator.InvalidValue;

import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.JasperRunManager;
import net.sf.jasperreports.engine.export.JExcelApiExporter;
import net.sf.jasperreports.engine.export.JRCsvExporter;
import net.sf.jasperreports.engine.export.JRRtfExporter;
import net.sf.jasperreports.engine.export.JRXlsExporter;
import net.sf.jasperreports.engine.export.JRXlsExporterParameter;
import net.sf.jasperreports.engine.util.JRSaver;
import net.sf.jasperreports.engine.xml.JRXmlWriter;


import com.bydan.erp.inventario.presentation.web.jsf.sessionbean.*;

import java.util.EventObject;
import javax.swing.*;
import javax.swing.border.Border;
import javax.swing.border.TitledBorder;
import javax.swing.border.EmptyBorder;
import javax.swing.event.*;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import java.awt.*;
import java.awt.event.*;

import org.jdesktop.beansbinding.Binding.SyncFailure;
import org.jdesktop.beansbinding.BindingListener;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.ELProperty;
import org.jdesktop.beansbinding.AutoBinding.UpdateStrategy;
import org.jdesktop.beansbinding.PropertyStateEvent;
import org.jdesktop.swingbinding.JComboBoxBinding;
import org.jdesktop.swingbinding.SwingBindings;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeEvent;

import com.toedter.calendar.JDateChooser;


import com.bydan.erp.seguridad.business.entity.*;
import com.bydan.erp.contabilidad.business.entity.*;
import com.bydan.erp.cartera.business.entity.*;
import com.bydan.erp.importaciones.business.entity.*;
import com.bydan.erp.nomina.business.entity.*;
import com.bydan.erp.facturacion.business.entity.*;
import com.bydan.erp.sris.business.entity.*;
import com.bydan.erp.tesoreria.business.entity.*;
import com.bydan.erp.seguridad.util.*;
import com.bydan.erp.contabilidad.util.*;
import com.bydan.erp.cartera.util.*;
import com.bydan.erp.importaciones.util.*;
import com.bydan.erp.nomina.util.*;
import com.bydan.erp.facturacion.util.*;
import com.bydan.erp.sris.util.*;
import com.bydan.erp.tesoreria.util.*;
import com.bydan.erp.seguridad.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.contabilidad.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.cartera.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.importaciones.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.nomina.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.facturacion.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.sris.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.tesoreria.presentation.web.jsf.sessionbean.*;


@SuppressWarnings("unused")
public class PedidoCompraBeanSwingJInternalFrame extends PedidoCompraJInternalFrame implements WindowListener,WindowFocusListener
{				
	
	public static final long serialVersionUID = 1L;
	
	public static Logger logger = Logger.getLogger(PedidoCompraBeanSwingJInternalFrame.class);  
	
	public static ClassValidator<PedidoCompra> pedidocompraValidator = new ClassValidator<PedidoCompra>(PedidoCompra.class);
	
	public InvalidValue[] invalidValues=null;
		

	//Ejb Foreign Keys
	
	public PedidoCompra pedidocompra;	
	public PedidoCompra pedidocompraAux;
	public PedidoCompra pedidocompraAnterior;//USADO PARA MANEJAR FOCUS GAINED,LOST
	public PedidoCompra pedidocompraTotales;
	public Long idPedidoCompraActual;
	public Long iIdNuevoPedidoCompra=0L;
	public int rowIndexActual=0;
	
	
	
	
	public String sFinalQueryComboEmpresa="";

	public List<Empresa> empresasForeignKey;

	public List<Empresa> getempresasForeignKey() {
		return empresasForeignKey;
	}

	public void setempresasForeignKey(List<Empresa> empresasForeignKey) {
		this.empresasForeignKey = empresasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Empresa empresaForeignKey;

	public Empresa getempresaForeignKey() {
		return empresaForeignKey;
	}

	public void setempresaForeignKey(Empresa empresaForeignKey) {
		this.empresaForeignKey = empresaForeignKey;
	}

	public String sFinalQueryComboSucursal="";

	public List<Sucursal> sucursalsForeignKey;

	public List<Sucursal> getsucursalsForeignKey() {
		return sucursalsForeignKey;
	}

	public void setsucursalsForeignKey(List<Sucursal> sucursalsForeignKey) {
		this.sucursalsForeignKey = sucursalsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Sucursal sucursalForeignKey;

	public Sucursal getsucursalForeignKey() {
		return sucursalForeignKey;
	}

	public void setsucursalForeignKey(Sucursal sucursalForeignKey) {
		this.sucursalForeignKey = sucursalForeignKey;
	}

	public String sFinalQueryComboModulo="";

	public List<Modulo> modulosForeignKey;

	public List<Modulo> getmodulosForeignKey() {
		return modulosForeignKey;
	}

	public void setmodulosForeignKey(List<Modulo> modulosForeignKey) {
		this.modulosForeignKey = modulosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Modulo moduloForeignKey;

	public Modulo getmoduloForeignKey() {
		return moduloForeignKey;
	}

	public void setmoduloForeignKey(Modulo moduloForeignKey) {
		this.moduloForeignKey = moduloForeignKey;
	}

	public String sFinalQueryComboEjercicio="";

	public List<Ejercicio> ejerciciosForeignKey;

	public List<Ejercicio> getejerciciosForeignKey() {
		return ejerciciosForeignKey;
	}

	public void setejerciciosForeignKey(List<Ejercicio> ejerciciosForeignKey) {
		this.ejerciciosForeignKey = ejerciciosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Ejercicio ejercicioForeignKey;

	public Ejercicio getejercicioForeignKey() {
		return ejercicioForeignKey;
	}

	public void setejercicioForeignKey(Ejercicio ejercicioForeignKey) {
		this.ejercicioForeignKey = ejercicioForeignKey;
	}

	public String sFinalQueryComboPeriodo="";

	public List<Periodo> periodosForeignKey;

	public List<Periodo> getperiodosForeignKey() {
		return periodosForeignKey;
	}

	public void setperiodosForeignKey(List<Periodo> periodosForeignKey) {
		this.periodosForeignKey = periodosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Periodo periodoForeignKey;

	public Periodo getperiodoForeignKey() {
		return periodoForeignKey;
	}

	public void setperiodoForeignKey(Periodo periodoForeignKey) {
		this.periodoForeignKey = periodoForeignKey;
	}

	public String sFinalQueryComboAnio="";

	public List<Anio> aniosForeignKey;

	public List<Anio> getaniosForeignKey() {
		return aniosForeignKey;
	}

	public void setaniosForeignKey(List<Anio> aniosForeignKey) {
		this.aniosForeignKey = aniosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Anio anioForeignKey;

	public Anio getanioForeignKey() {
		return anioForeignKey;
	}

	public void setanioForeignKey(Anio anioForeignKey) {
		this.anioForeignKey = anioForeignKey;
	}

	public String sFinalQueryComboMes="";

	public List<Mes> messForeignKey;

	public List<Mes> getmessForeignKey() {
		return messForeignKey;
	}

	public void setmessForeignKey(List<Mes> messForeignKey) {
		this.messForeignKey = messForeignKey;
	}

	//OBJETO FK ACTUAL
	public Mes mesForeignKey;

	public Mes getmesForeignKey() {
		return mesForeignKey;
	}

	public void setmesForeignKey(Mes mesForeignKey) {
		this.mesForeignKey = mesForeignKey;
	}

	public String sFinalQueryComboCliente="";

	public List<Cliente> clientesForeignKey;

	public List<Cliente> getclientesForeignKey() {
		return clientesForeignKey;
	}

	public void setclientesForeignKey(List<Cliente> clientesForeignKey) {
		this.clientesForeignKey = clientesForeignKey;
	}

	//OBJETO FK ACTUAL
	public Cliente clienteForeignKey;

	public Cliente getclienteForeignKey() {
		return clienteForeignKey;
	}

	public void setclienteForeignKey(Cliente clienteForeignKey) {
		this.clienteForeignKey = clienteForeignKey;
	}

	public String sFinalQueryComboUsuario="";

	public List<Usuario> usuariosForeignKey;

	public List<Usuario> getusuariosForeignKey() {
		return usuariosForeignKey;
	}

	public void setusuariosForeignKey(List<Usuario> usuariosForeignKey) {
		this.usuariosForeignKey = usuariosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Usuario usuarioForeignKey;

	public Usuario getusuarioForeignKey() {
		return usuarioForeignKey;
	}

	public void setusuarioForeignKey(Usuario usuarioForeignKey) {
		this.usuarioForeignKey = usuarioForeignKey;
	}

	public String sFinalQueryComboMoneda="";

	public List<Moneda> monedasForeignKey;

	public List<Moneda> getmonedasForeignKey() {
		return monedasForeignKey;
	}

	public void setmonedasForeignKey(List<Moneda> monedasForeignKey) {
		this.monedasForeignKey = monedasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Moneda monedaForeignKey;

	public Moneda getmonedaForeignKey() {
		return monedaForeignKey;
	}

	public void setmonedaForeignKey(Moneda monedaForeignKey) {
		this.monedaForeignKey = monedaForeignKey;
	}

	public String sFinalQueryComboEstadoPedidoCompra="";

	public List<EstadoPedidoCompra> estadopedidocomprasForeignKey;

	public List<EstadoPedidoCompra> getestadopedidocomprasForeignKey() {
		return estadopedidocomprasForeignKey;
	}

	public void setestadopedidocomprasForeignKey(List<EstadoPedidoCompra> estadopedidocomprasForeignKey) {
		this.estadopedidocomprasForeignKey = estadopedidocomprasForeignKey;
	}

	//OBJETO FK ACTUAL
	public EstadoPedidoCompra estadopedidocompraForeignKey;

	public EstadoPedidoCompra getestadopedidocompraForeignKey() {
		return estadopedidocompraForeignKey;
	}

	public void setestadopedidocompraForeignKey(EstadoPedidoCompra estadopedidocompraForeignKey) {
		this.estadopedidocompraForeignKey = estadopedidocompraForeignKey;
	}

	public String sFinalQueryComboEmpleado="";

	public List<Empleado> empleadosForeignKey;

	public List<Empleado> getempleadosForeignKey() {
		return empleadosForeignKey;
	}

	public void setempleadosForeignKey(List<Empleado> empleadosForeignKey) {
		this.empleadosForeignKey = empleadosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Empleado empleadoForeignKey;

	public Empleado getempleadoForeignKey() {
		return empleadoForeignKey;
	}

	public void setempleadoForeignKey(Empleado empleadoForeignKey) {
		this.empleadoForeignKey = empleadoForeignKey;
	}

	public String sFinalQueryComboFormato="";

	public List<Formato> formatosForeignKey;

	public List<Formato> getformatosForeignKey() {
		return formatosForeignKey;
	}

	public void setformatosForeignKey(List<Formato> formatosForeignKey) {
		this.formatosForeignKey = formatosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Formato formatoForeignKey;

	public Formato getformatoForeignKey() {
		return formatoForeignKey;
	}

	public void setformatoForeignKey(Formato formatoForeignKey) {
		this.formatoForeignKey = formatoForeignKey;
	}

	public String sFinalQueryComboTipoCambio="";

	public List<TipoCambio> tipocambiosForeignKey;

	public List<TipoCambio> gettipocambiosForeignKey() {
		return tipocambiosForeignKey;
	}

	public void settipocambiosForeignKey(List<TipoCambio> tipocambiosForeignKey) {
		this.tipocambiosForeignKey = tipocambiosForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoCambio tipocambioForeignKey;

	public TipoCambio gettipocambioForeignKey() {
		return tipocambioForeignKey;
	}

	public void settipocambioForeignKey(TipoCambio tipocambioForeignKey) {
		this.tipocambioForeignKey = tipocambioForeignKey;
	}

		
	
	
	
	//BUSQUEDA INTERNA FK
	public Long idClienteActual=0L;

	public Long getidClienteActual() {
		return idClienteActual;
	}

	public void setidClienteActual(Long idClienteActual) {
		this.idClienteActual= idClienteActual;
	}
	public Long idEmpleadoActual=0L;

	public Long getidEmpleadoActual() {
		return idEmpleadoActual;
	}

	public void setidEmpleadoActual(Long idEmpleadoActual) {
		this.idEmpleadoActual= idEmpleadoActual;
	}
	public Long idTipoCambioActual=0L;

	public Long getidTipoCambioActual() {
		return idTipoCambioActual;
	}

	public void setidTipoCambioActual(Long idTipoCambioActual) {
		this.idTipoCambioActual= idTipoCambioActual;
	}
	
	

	public Boolean isTienePermisosDetallePedidoCompra=false;

	public Boolean getIsTienePermisosDetallePedidoCompra() {
		return isTienePermisosDetallePedidoCompra;
	}

	public void setIsTienePermisosDetallePedidoCompra(Boolean isTienePermisosDetallePedidoCompra) {
		this.isTienePermisosDetallePedidoCompra= isTienePermisosDetallePedidoCompra;
	}

	
	
	//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
	public String sFinalQueryGeneral="";
	public Boolean isEntroOnLoad=false;
	public Boolean isErrorGuardar=false;
	
	public Boolean isGuardarCambiosEnLote=false;
	public Boolean isCargarCombosDependencia=false;
	public Boolean isSeleccionarTodos=false;
	public Boolean isSeleccionados=false;
	public Boolean conGraficoReporte=false;
	
	public Boolean isPostAccionNuevo=false;
	public Boolean isPostAccionSinCerrar=false;
	public Boolean isPostAccionSinMensaje=false;
	
	
	public Boolean esControlTabla=false;
	
	public Boolean isPermisoTodoPedidoCompra;
	public Boolean isPermisoNuevoPedidoCompra;
	public Boolean isPermisoActualizarPedidoCompra;
	public Boolean isPermisoActualizarOriginalPedidoCompra;
	public Boolean isPermisoEliminarPedidoCompra;
	public Boolean isPermisoGuardarCambiosPedidoCompra;
	public Boolean isPermisoConsultaPedidoCompra;
	public Boolean isPermisoBusquedaPedidoCompra;
	public Boolean isPermisoReportePedidoCompra;
	public Boolean isPermisoPaginacionMedioPedidoCompra;
	public Boolean isPermisoPaginacionAltoPedidoCompra;
	public Boolean isPermisoPaginacionTodoPedidoCompra;
	public Boolean isPermisoCopiarPedidoCompra;
	public Boolean isPermisoVerFormPedidoCompra;
	public Boolean isPermisoDuplicarPedidoCompra;
	public Boolean isPermisoOrdenPedidoCompra;
	
	
	public ArrayList<DatoGeneral> arrDatoGeneral;
	public ArrayList<String> arrDatoGeneralNo;
	ArrayList<Classe> classesActual=new ArrayList<Classe>();
	
	public List<Accion> accions;	
	public List<Accion> accionsFormulario;
	
	
	public ArrayList<DatoGeneralMinimo> arrDatoGeneralMinimos;
	
	public ArrayList<Reporte> tiposArchivosReportes;
	public ArrayList<Reporte> tiposArchivosReportesDinamico;
	public ArrayList<Reporte> tiposReportes;
	public ArrayList<Reporte> tiposReportesDinamico;
	public ArrayList<Reporte> tiposGraficosReportes;
	public ArrayList<Reporte> tiposPaginacion;
	public ArrayList<Reporte> tiposRelaciones;
	public ArrayList<Reporte> tiposAcciones;
	public ArrayList<Reporte> tiposAccionesFormulario;
	public ArrayList<Reporte> tiposSeleccionar;
	
	public ArrayList<Reporte> tiposColumnasSelect;
	public ArrayList<Reporte> tiposRelacionesSelect;
	
	
	public Integer iNumeroPaginacion;
	public Integer iNumeroPaginacionPagina;
	public Pagination pagination;
	public DatosCliente datosCliente;
	public DatosDeep datosDeep;
	public String sTipoArchivoReporte="";
	public String sTipoArchivoReporteDinamico="";
	public String sTipoReporte="";
	public String sTipoReporteDinamico="";
	public String sTipoGraficoReporte="";
	public String sTipoPaginacion="";
	public String sTipoRelacion="";
	public String sTipoAccion="";
	public String sTipoAccionFormulario="";
	public String sTipoSeleccionar="";	
	public String sDetalleReporte="";
	public Boolean isMostrarNumeroPaginacion;
	public String sTipoReporteExtra="";
	public String sValorCampoGeneral="";
	public Boolean esReporteDinamico=false;
	public Boolean esReporteAccionProceso=false;
	public Boolean esRecargarFks=false;
	public String sPathReporteDinamico="";
	
	public PedidoCompraParameterReturnGeneral pedidocompraReturnGeneral;
	public PedidoCompraParameterReturnGeneral pedidocompraParameterGeneral;
	
	

	public DetallePedidoCompraLogic detallepedidocompraLogic=null;

	public DetallePedidoCompraLogic getDetallePedidoCompraLogic() {
		return detallepedidocompraLogic;
	}

	public void setDetallePedidoCompraLogic(DetallePedidoCompraLogic detallepedidocompraLogic) {
		this.detallepedidocompraLogic = detallepedidocompraLogic;
	}
 	
	public JasperPrint jasperPrint = null;
	
	public Long lIdUsuarioSesion=0L;				
	
	public Boolean isEsNuevoPedidoCompra=false;
	public Boolean esParaAccionDesdeFormularioPedidoCompra=false;
	public Boolean isEsMantenimientoRelacionesRelacionadoUnico=false;
	public Boolean isEsMantenimientoRelaciones=false;
	public Boolean isEsMantenimientoRelacionado=false;	
	public Boolean isContieneImagenes=false;
		
	//public Boolean conTotales=false; //Viene heredado de JInternalFrameBase
	//public Boolean esParaBusquedaForeignKey=false;
	
	
	protected PedidoCompraSessionBeanAdditional pedidocompraSessionBeanAdditional=null;
	
	public PedidoCompraSessionBeanAdditional getPedidoCompraSessionBeanAdditional() {
		return this.pedidocompraSessionBeanAdditional;
	}
	
	public void setPedidoCompraSessionBeanAdditional(PedidoCompraSessionBeanAdditional pedidocompraSessionBeanAdditional) {
		try {
			this.pedidocompraSessionBeanAdditional=pedidocompraSessionBeanAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	protected PedidoCompraBeanSwingJInternalFrameAdditional pedidocompraBeanSwingJInternalFrameAdditional=null;
	//public class PedidoCompraBeanSwingJInternalFrame
	
	public PedidoCompraBeanSwingJInternalFrameAdditional getPedidoCompraBeanSwingJInternalFrameAdditional() {
		return this.pedidocompraBeanSwingJInternalFrameAdditional;
	}
	
	public void setPedidoCompraBeanSwingJInternalFrameAdditional(PedidoCompraBeanSwingJInternalFrameAdditional pedidocompraBeanSwingJInternalFrameAdditional) {
		try {
			this.pedidocompraBeanSwingJInternalFrameAdditional=pedidocompraBeanSwingJInternalFrameAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	//ESTA EN PADRE
	
	//public PedidoCompraLogic pedidocompraLogic;
	public SistemaLogicAdditional sistemaLogicAdditional;
	
	
	public PedidoCompra pedidocompraBean;
	public PedidoCompraConstantesFunciones pedidocompraConstantesFunciones;
	//public PedidoCompraParameterReturnGeneral pedidocompraReturnGeneral;
	
	//FK
	
	public EmpresaLogic empresaLogic;
	public SucursalLogic sucursalLogic;
	public ModuloLogic moduloLogic;
	public EjercicioLogic ejercicioLogic;
	public PeriodoLogic periodoLogic;
	public AnioLogic anioLogic;
	public MesLogic mesLogic;
	public ClienteLogic clienteLogic;
	public UsuarioLogic usuarioLogic;
	public MonedaLogic monedaLogic;
	public EstadoPedidoCompraLogic estadopedidocompraLogic;
	public EmpleadoLogic empleadoLogic;
	public FormatoLogic formatoLogic;
	public TipoCambioLogic tipocambioLogic;
	
	//PARAMETROS
	
	
	//public List<PedidoCompra> pedidocompras;	
	//public List<PedidoCompra> pedidocomprasEliminados;
	//public List<PedidoCompra> pedidocomprasAux;
	
	public String sAccionMantenimiento="";
	public String sAccionBusqueda="";
	public String sAccionAdicional="";
	public String sUltimaBusqueda="";
	
	public Mensaje mensaje;
	
	
	public String sVisibilidadTablaBusquedas="";					
	public String sVisibilidadTablaElementos="";	
	public String sVisibilidadTablaAcciones="";			
	
	public Boolean isVisibilidadCeldaNuevoPedidoCompra=false;
	public Boolean isVisibilidadCeldaDuplicarPedidoCompra=true;
	public Boolean isVisibilidadCeldaCopiarPedidoCompra=true;
	public Boolean isVisibilidadCeldaVerFormPedidoCompra=true;
	public Boolean isVisibilidadCeldaOrdenPedidoCompra=true;
	public Boolean isVisibilidadCeldaNuevoRelacionesPedidoCompra=false;
	public Boolean isVisibilidadCeldaModificarPedidoCompra=false;
	public Boolean isVisibilidadCeldaActualizarPedidoCompra=false;
	public Boolean isVisibilidadCeldaEliminarPedidoCompra=false;
	public Boolean isVisibilidadCeldaCancelarPedidoCompra=false;
	public Boolean isVisibilidadCeldaGuardarPedidoCompra=false;	
	public Boolean isVisibilidadCeldaGuardarCambiosPedidoCompra=false;	
	
	
	public Boolean isVisibilidadFK_IdAnio=false;
	public Boolean isVisibilidadFK_IdCliente=false;
	public Boolean isVisibilidadFK_IdEjercicio=false;
	public Boolean isVisibilidadFK_IdEmpleado=false;
	public Boolean isVisibilidadFK_IdEmpresa=false;
	public Boolean isVisibilidadFK_IdEstadoPedidoCompraEstadoPedoCompra=false;
	public Boolean isVisibilidadFK_IdFormato=false;
	public Boolean isVisibilidadFK_IdMes=false;
	public Boolean isVisibilidadFK_IdModulo=false;
	public Boolean isVisibilidadFK_IdMoneda=false;
	public Boolean isVisibilidadFK_IdPeriodo=false;
	public Boolean isVisibilidadFK_IdSucursal=false;
	public Boolean isVisibilidadFK_IdTipoCambio=false;
	public Boolean isVisibilidadFK_IdUsuario=false;
	
	public Long getiIdNuevoPedidoCompra() {
		return this.iIdNuevoPedidoCompra;
	}

	public void setiIdNuevoPedidoCompra(Long iIdNuevoPedidoCompra) {
		this.iIdNuevoPedidoCompra = iIdNuevoPedidoCompra;
	}
	
	public Long getidPedidoCompraActual() {
		return this.idPedidoCompraActual;
	}

	public void setidPedidoCompraActual(Long idPedidoCompraActual) {
		this.idPedidoCompraActual = idPedidoCompraActual;
	}
	
	public int getrowIndexActual() {
		return this.rowIndexActual;
	}

	public void setrowIndexActual(int rowIndexActual) {
		this.rowIndexActual=rowIndexActual;
	}
	
	
	public PedidoCompra getpedidocompra() {
		return this.pedidocompra;
	}

	public void setpedidocompra(PedidoCompra pedidocompra) {
		this.pedidocompra = pedidocompra;
	}
	
	public PedidoCompra getpedidocompraAux() {
		return this.pedidocompraAux;
	}

	public void setpedidocompraAux(PedidoCompra pedidocompraAux) {
		this.pedidocompraAux = pedidocompraAux;
	}				
	
	public PedidoCompra getpedidocompraAnterior() {
		return this.pedidocompraAnterior;
	}

	public void setpedidocompraAnterior(PedidoCompra pedidocompraAnterior) {
		this.pedidocompraAnterior = pedidocompraAnterior;
	}	
	
	public PedidoCompra getpedidocompraTotales() {
		return this.pedidocompraTotales;
	}

	public void setpedidocompraTotales(PedidoCompra pedidocompraTotales) {
		this.pedidocompraTotales = pedidocompraTotales;
	}	
	
	public PedidoCompra getpedidocompraBean() {
		return this.pedidocompraBean;
	}

	public void setpedidocompraBean(PedidoCompra pedidocompraBean) {
		this.pedidocompraBean = pedidocompraBean;
	}	
	
	public PedidoCompraParameterReturnGeneral getpedidocompraReturnGeneral() {
		return this.pedidocompraReturnGeneral;
	}

	public void setpedidocompraReturnGeneral(PedidoCompraParameterReturnGeneral pedidocompraReturnGeneral) {
		this.pedidocompraReturnGeneral = pedidocompraReturnGeneral;
	}	
	
	
	public Long id_anioFK_IdAnio=null;

	public Long getid_anioFK_IdAnio() {
		return this.id_anioFK_IdAnio;
	}

	public void setid_anioFK_IdAnio(Long id_anioFK_IdAnio) {
		this.id_anioFK_IdAnio = id_anioFK_IdAnio;
	}

	public Long id_clienteFK_IdCliente=-1L;

	public Long getid_clienteFK_IdCliente() {
		return this.id_clienteFK_IdCliente;
	}

	public void setid_clienteFK_IdCliente(Long id_clienteFK_IdCliente) {
		this.id_clienteFK_IdCliente = id_clienteFK_IdCliente;
	}

	public Long id_ejercicioFK_IdEjercicio=-1L;

	public Long getid_ejercicioFK_IdEjercicio() {
		return this.id_ejercicioFK_IdEjercicio;
	}

	public void setid_ejercicioFK_IdEjercicio(Long id_ejercicioFK_IdEjercicio) {
		this.id_ejercicioFK_IdEjercicio = id_ejercicioFK_IdEjercicio;
	}

	public Long id_empleadoFK_IdEmpleado=-1L;

	public Long getid_empleadoFK_IdEmpleado() {
		return this.id_empleadoFK_IdEmpleado;
	}

	public void setid_empleadoFK_IdEmpleado(Long id_empleadoFK_IdEmpleado) {
		this.id_empleadoFK_IdEmpleado = id_empleadoFK_IdEmpleado;
	}

	public Long id_empresaFK_IdEmpresa=-1L;

	public Long getid_empresaFK_IdEmpresa() {
		return this.id_empresaFK_IdEmpresa;
	}

	public void setid_empresaFK_IdEmpresa(Long id_empresaFK_IdEmpresa) {
		this.id_empresaFK_IdEmpresa = id_empresaFK_IdEmpresa;
	}

	public Long id_estado_pedido_compraFK_IdEstadoPedidoCompraEstadoPedoCompra=-1L;

	public Long getid_estado_pedido_compraFK_IdEstadoPedidoCompraEstadoPedoCompra() {
		return this.id_estado_pedido_compraFK_IdEstadoPedidoCompraEstadoPedoCompra;
	}

	public void setid_estado_pedido_compraFK_IdEstadoPedidoCompraEstadoPedoCompra(Long id_estado_pedido_compraFK_IdEstadoPedidoCompraEstadoPedoCompra) {
		this.id_estado_pedido_compraFK_IdEstadoPedidoCompraEstadoPedoCompra = id_estado_pedido_compraFK_IdEstadoPedidoCompraEstadoPedoCompra;
	}

	public Long id_formatoFK_IdFormato=null;

	public Long getid_formatoFK_IdFormato() {
		return this.id_formatoFK_IdFormato;
	}

	public void setid_formatoFK_IdFormato(Long id_formatoFK_IdFormato) {
		this.id_formatoFK_IdFormato = id_formatoFK_IdFormato;
	}

	public Long id_mesFK_IdMes=null;

	public Long getid_mesFK_IdMes() {
		return this.id_mesFK_IdMes;
	}

	public void setid_mesFK_IdMes(Long id_mesFK_IdMes) {
		this.id_mesFK_IdMes = id_mesFK_IdMes;
	}

	public Long id_moduloFK_IdModulo=-1L;

	public Long getid_moduloFK_IdModulo() {
		return this.id_moduloFK_IdModulo;
	}

	public void setid_moduloFK_IdModulo(Long id_moduloFK_IdModulo) {
		this.id_moduloFK_IdModulo = id_moduloFK_IdModulo;
	}

	public Long id_monedaFK_IdMoneda=-1L;

	public Long getid_monedaFK_IdMoneda() {
		return this.id_monedaFK_IdMoneda;
	}

	public void setid_monedaFK_IdMoneda(Long id_monedaFK_IdMoneda) {
		this.id_monedaFK_IdMoneda = id_monedaFK_IdMoneda;
	}

	public Long id_periodoFK_IdPeriodo=-1L;

	public Long getid_periodoFK_IdPeriodo() {
		return this.id_periodoFK_IdPeriodo;
	}

	public void setid_periodoFK_IdPeriodo(Long id_periodoFK_IdPeriodo) {
		this.id_periodoFK_IdPeriodo = id_periodoFK_IdPeriodo;
	}

	public Long id_sucursalFK_IdSucursal=-1L;

	public Long getid_sucursalFK_IdSucursal() {
		return this.id_sucursalFK_IdSucursal;
	}

	public void setid_sucursalFK_IdSucursal(Long id_sucursalFK_IdSucursal) {
		this.id_sucursalFK_IdSucursal = id_sucursalFK_IdSucursal;
	}

	public Long id_tipo_cambioFK_IdTipoCambio=null;

	public Long getid_tipo_cambioFK_IdTipoCambio() {
		return this.id_tipo_cambioFK_IdTipoCambio;
	}

	public void setid_tipo_cambioFK_IdTipoCambio(Long id_tipo_cambioFK_IdTipoCambio) {
		this.id_tipo_cambioFK_IdTipoCambio = id_tipo_cambioFK_IdTipoCambio;
	}

	public Long id_usuarioFK_IdUsuario=-1L;

	public Long getid_usuarioFK_IdUsuario() {
		return this.id_usuarioFK_IdUsuario;
	}

	public void setid_usuarioFK_IdUsuario(Long id_usuarioFK_IdUsuario) {
		this.id_usuarioFK_IdUsuario = id_usuarioFK_IdUsuario;
	}

		
	
	//ELEMENTOS TABLAS PARAMETOS
	
	
	
	
	
	
	//ELEMENTOS TABLAS PARAMETOS_FIN
	
	
	public PedidoCompraLogic getPedidoCompraLogic()	{		
		return pedidocompraLogic;
	}

	public void setPedidoCompraLogic(PedidoCompraLogic pedidocompraLogic) {
		this.pedidocompraLogic = pedidocompraLogic;
	}
	
	
	public void setsFinalQueryGeneral(String sFinalQueryGeneral) {
		this.sFinalQueryGeneral=sFinalQueryGeneral;
	}
	
	public String getsFinalQueryGeneral() {
		return this.sFinalQueryGeneral;
	}
		
	public Boolean getIsGuardarCambiosEnLote() {
		return isGuardarCambiosEnLote;
	}

	public void setIsGuardarCambiosEnLote(Boolean isGuardarCambiosEnLote) {
		this.isGuardarCambiosEnLote = isGuardarCambiosEnLote;
	}
	
	public Boolean getIsCargarCombosDependencia() {
		return isCargarCombosDependencia;
	}

	public void setIsCargarCombosDependencia(Boolean isCargarCombosDependencia) {
		this.isCargarCombosDependencia = isCargarCombosDependencia;
	}
	
	public Boolean getIsEsNuevoPedidoCompra() {
		return isEsNuevoPedidoCompra;
	}

	public void setIsEsNuevoPedidoCompra(Boolean isEsNuevoPedidoCompra) {
		this.isEsNuevoPedidoCompra = isEsNuevoPedidoCompra;
	}

	public Boolean getEsParaAccionDesdeFormularioPedidoCompra() {
		return esParaAccionDesdeFormularioPedidoCompra;
	}
	
	public void setEsParaAccionDesdeFormularioPedidoCompra(Boolean esParaAccionDesdeFormularioPedidoCompra) {
		this.esParaAccionDesdeFormularioPedidoCompra = esParaAccionDesdeFormularioPedidoCompra;
	}
	
	public Boolean getIsEsMantenimientoRelacionesRelacionadoUnico() {
		return isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public void setIsEsMantenimientoRelacionesRelacionadoUnico(Boolean isEsMantenimientoRelacionesRelacionadoUnico) {
		this.isEsMantenimientoRelacionesRelacionadoUnico = isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public Boolean getIsEsMantenimientoRelaciones() {
		return isEsMantenimientoRelaciones;
	}

	public void setIsEsMantenimientoRelaciones(Boolean isEsMantenimientoRelaciones) {
		this.isEsMantenimientoRelaciones = isEsMantenimientoRelaciones;
	}

	public Boolean getIsEsMantenimientoRelacionado() {
		return isEsMantenimientoRelacionado;
	}

	public void setIsEsMantenimientoRelacionado(Boolean isEsMantenimientoRelacionado) {
		this.isEsMantenimientoRelacionado = isEsMantenimientoRelacionado;
	}

	public Boolean getesParaBusquedaForeignKey() {
		return esParaBusquedaForeignKey;
	}

	public void setesParaBusquedaForeignKey(Boolean esParaBusquedaForeignKey) {
		this.esParaBusquedaForeignKey = esParaBusquedaForeignKey;
	}

	public Boolean getIsContieneImagenes() {
		return isContieneImagenes;
	}

	public void setIsContieneImagenes(Boolean isContieneImagenes) {
		this.isContieneImagenes = isContieneImagenes;
	}		
	
	
	public void cargarCombosEmpresasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.empresasForeignKey=new ArrayList<Empresa>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EmpresaLogic empresaLogic=new EmpresaLogic();

			//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

			if(this.pedidocompraSessionBean==null) {
				this.pedidocompraSessionBean=new PedidoCompraSessionBean();
			}

			if(!this.pedidocompraSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

					empresaLogic.getTodosEmpresasWithConnection(sFinalQuery,new Pagination());

					this.empresasForeignKey=empresaLogic.getEmpresas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEmpresa(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					empresaLogic.getEntityWithConnection(pedidocompraSessionBean.getlidEmpresaActual());
					this.empresasForeignKey.add(empresaLogic.getEmpresa());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosSucursalsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.sucursalsForeignKey=new ArrayList<Sucursal>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			SucursalLogic sucursalLogic=new SucursalLogic();

			//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

			if(this.pedidocompraSessionBean==null) {
				this.pedidocompraSessionBean=new PedidoCompraSessionBean();
			}

			if(!this.pedidocompraSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

					sucursalLogic.getTodosSucursalsWithConnection(sFinalQuery,new Pagination());

					this.sucursalsForeignKey=sucursalLogic.getSucursals();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaSucursal(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					sucursalLogic.getEntityWithConnection(pedidocompraSessionBean.getlidSucursalActual());
					this.sucursalsForeignKey.add(sucursalLogic.getSucursal());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosModulosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.modulosForeignKey=new ArrayList<Modulo>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			ModuloLogic moduloLogic=new ModuloLogic();

			//moduloLogic.getModuloDataAccess().setIsForForeingKeyData(true);

			if(this.pedidocompraSessionBean==null) {
				this.pedidocompraSessionBean=new PedidoCompraSessionBean();
			}

			if(!this.pedidocompraSessionBean.getisBusquedaDesdeForeignKeySesionModulo()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//moduloLogic.getModuloDataAccess().setIsForForeingKeyData(true);

					moduloLogic.getTodosModulosWithConnection(sFinalQuery,new Pagination());

					this.modulosForeignKey=moduloLogic.getModulos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaModulo(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					moduloLogic.getEntityWithConnection(pedidocompraSessionBean.getlidModuloActual());
					this.modulosForeignKey.add(moduloLogic.getModulo());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEjerciciosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.ejerciciosForeignKey=new ArrayList<Ejercicio>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EjercicioLogic ejercicioLogic=new EjercicioLogic();

			//ejercicioLogic.getEjercicioDataAccess().setIsForForeingKeyData(true);

			if(this.pedidocompraSessionBean==null) {
				this.pedidocompraSessionBean=new PedidoCompraSessionBean();
			}

			if(!this.pedidocompraSessionBean.getisBusquedaDesdeForeignKeySesionEjercicio()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//ejercicioLogic.getEjercicioDataAccess().setIsForForeingKeyData(true);

					ejercicioLogic.getTodosEjerciciosWithConnection(sFinalQuery,new Pagination());

					this.ejerciciosForeignKey=ejercicioLogic.getEjercicios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEjercicio(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					ejercicioLogic.getEntityWithConnection(pedidocompraSessionBean.getlidEjercicioActual());
					this.ejerciciosForeignKey.add(ejercicioLogic.getEjercicio());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosPeriodosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.periodosForeignKey=new ArrayList<Periodo>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			PeriodoLogic periodoLogic=new PeriodoLogic();

			//periodoLogic.getPeriodoDataAccess().setIsForForeingKeyData(true);

			if(this.pedidocompraSessionBean==null) {
				this.pedidocompraSessionBean=new PedidoCompraSessionBean();
			}

			if(!this.pedidocompraSessionBean.getisBusquedaDesdeForeignKeySesionPeriodo()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//periodoLogic.getPeriodoDataAccess().setIsForForeingKeyData(true);

					periodoLogic.getTodosPeriodosWithConnection(sFinalQuery,new Pagination());

					this.periodosForeignKey=periodoLogic.getPeriodos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaPeriodo(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					periodoLogic.getEntityWithConnection(pedidocompraSessionBean.getlidPeriodoActual());
					this.periodosForeignKey.add(periodoLogic.getPeriodo());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosAniosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.aniosForeignKey=new ArrayList<Anio>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			AnioLogic anioLogic=new AnioLogic();

			//anioLogic.getAnioDataAccess().setIsForForeingKeyData(true);

			if(this.pedidocompraSessionBean==null) {
				this.pedidocompraSessionBean=new PedidoCompraSessionBean();
			}

			if(!this.pedidocompraSessionBean.getisBusquedaDesdeForeignKeySesionAnio()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//anioLogic.getAnioDataAccess().setIsForForeingKeyData(true);

					anioLogic.getTodosAniosWithConnection(sFinalQuery,new Pagination());

					this.aniosForeignKey=anioLogic.getAnios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaAnio(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					anioLogic.getEntityWithConnection(pedidocompraSessionBean.getlidAnioActual());
					this.aniosForeignKey.add(anioLogic.getAnio());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosMessForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.messForeignKey=new ArrayList<Mes>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			MesLogic mesLogic=new MesLogic();

			//mesLogic.getMesDataAccess().setIsForForeingKeyData(true);

			if(this.pedidocompraSessionBean==null) {
				this.pedidocompraSessionBean=new PedidoCompraSessionBean();
			}

			if(!this.pedidocompraSessionBean.getisBusquedaDesdeForeignKeySesionMes()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//mesLogic.getMesDataAccess().setIsForForeingKeyData(true);

					mesLogic.getTodosMessWithConnection(sFinalQuery,new Pagination());

					this.messForeignKey=mesLogic.getMess();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaMes(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					mesLogic.getEntityWithConnection(pedidocompraSessionBean.getlidMesActual());
					this.messForeignKey.add(mesLogic.getMes());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosClientesForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.clientesForeignKey=new ArrayList<Cliente>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			ClienteLogic clienteLogic=new ClienteLogic();

			//clienteLogic.getClienteDataAccess().setIsForForeingKeyData(true);

			if(this.pedidocompraSessionBean==null) {
				this.pedidocompraSessionBean=new PedidoCompraSessionBean();
			}

			if(!this.pedidocompraSessionBean.getisBusquedaDesdeForeignKeySesionCliente()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//clienteLogic.getClienteDataAccess().setIsForForeingKeyData(true);

					clienteLogic.getTodosClientesWithConnection(sFinalQuery,new Pagination());

					this.clientesForeignKey=clienteLogic.getClientes();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCliente(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteLogic.getEntityWithConnection(pedidocompraSessionBean.getlidClienteActual());
					this.clientesForeignKey.add(clienteLogic.getCliente());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosUsuariosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.usuariosForeignKey=new ArrayList<Usuario>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			UsuarioLogic usuarioLogic=new UsuarioLogic();

			//usuarioLogic.getUsuarioDataAccess().setIsForForeingKeyData(true);

			if(this.pedidocompraSessionBean==null) {
				this.pedidocompraSessionBean=new PedidoCompraSessionBean();
			}

			if(!this.pedidocompraSessionBean.getisBusquedaDesdeForeignKeySesionUsuario()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//usuarioLogic.getUsuarioDataAccess().setIsForForeingKeyData(true);

					usuarioLogic.getTodosUsuariosWithConnection(sFinalQuery,new Pagination());

					this.usuariosForeignKey=usuarioLogic.getUsuarios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaUsuario(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					usuarioLogic.getEntityWithConnection(pedidocompraSessionBean.getlidUsuarioActual());
					this.usuariosForeignKey.add(usuarioLogic.getUsuario());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosMonedasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.monedasForeignKey=new ArrayList<Moneda>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			MonedaLogic monedaLogic=new MonedaLogic();

			//monedaLogic.getMonedaDataAccess().setIsForForeingKeyData(true);

			if(this.pedidocompraSessionBean==null) {
				this.pedidocompraSessionBean=new PedidoCompraSessionBean();
			}

			if(!this.pedidocompraSessionBean.getisBusquedaDesdeForeignKeySesionMoneda()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//monedaLogic.getMonedaDataAccess().setIsForForeingKeyData(true);

					monedaLogic.getTodosMonedasWithConnection(sFinalQuery,new Pagination());

					this.monedasForeignKey=monedaLogic.getMonedas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaMoneda(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					monedaLogic.getEntityWithConnection(pedidocompraSessionBean.getlidMonedaActual());
					this.monedasForeignKey.add(monedaLogic.getMoneda());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEstadoPedidoComprasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.estadopedidocomprasForeignKey=new ArrayList<EstadoPedidoCompra>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EstadoPedidoCompraLogic estadopedidocompraLogic=new EstadoPedidoCompraLogic();

			//estadopedidocompraLogic.getEstadoPedidoCompraDataAccess().setIsForForeingKeyData(true);

			if(this.pedidocompraSessionBean==null) {
				this.pedidocompraSessionBean=new PedidoCompraSessionBean();
			}

			if(!this.pedidocompraSessionBean.getisBusquedaDesdeForeignKeySesionEstadoPedidoCompra()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//estadopedidocompraLogic.getEstadoPedidoCompraDataAccess().setIsForForeingKeyData(true);

					estadopedidocompraLogic.getTodosEstadoPedidoComprasWithConnection(sFinalQuery,new Pagination());

					this.estadopedidocomprasForeignKey=estadopedidocompraLogic.getEstadoPedidoCompras();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEstadoPedidoCompra(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					estadopedidocompraLogic.getEntityWithConnection(pedidocompraSessionBean.getlidEstadoPedidoCompraActual());
					this.estadopedidocomprasForeignKey.add(estadopedidocompraLogic.getEstadoPedidoCompra());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEmpleadosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.empleadosForeignKey=new ArrayList<Empleado>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EmpleadoLogic empleadoLogic=new EmpleadoLogic();

			//empleadoLogic.getEmpleadoDataAccess().setIsForForeingKeyData(true);

			if(this.pedidocompraSessionBean==null) {
				this.pedidocompraSessionBean=new PedidoCompraSessionBean();
			}

			if(!this.pedidocompraSessionBean.getisBusquedaDesdeForeignKeySesionEmpleado()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//empleadoLogic.getEmpleadoDataAccess().setIsForForeingKeyData(true);

					empleadoLogic.getTodosEmpleadosWithConnection(sFinalQuery,new Pagination());

					this.empleadosForeignKey=empleadoLogic.getEmpleados();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEmpleado(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					empleadoLogic.getEntityWithConnection(pedidocompraSessionBean.getlidEmpleadoActual());
					this.empleadosForeignKey.add(empleadoLogic.getEmpleado());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosFormatosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.formatosForeignKey=new ArrayList<Formato>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			Formato formatoNulo = new Formato();

			FormatoLogic formatoLogic=new FormatoLogic();

			//formatoLogic.getFormatoDataAccess().setIsForForeingKeyData(true);

			if(this.pedidocompraSessionBean==null) {
				this.pedidocompraSessionBean=new PedidoCompraSessionBean();
			}

			if(!this.pedidocompraSessionBean.getisBusquedaDesdeForeignKeySesionFormato()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//formatoLogic.getFormatoDataAccess().setIsForForeingKeyData(true);

					formatoLogic.getTodosFormatosWithConnection(sFinalQuery,new Pagination());

					this.formatosForeignKey=formatoLogic.getFormatos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.formatosForeignKey.add(0, formatoNulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaFormato(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					formatoLogic.getEntityWithConnection(pedidocompraSessionBean.getlidFormatoActual());
					this.formatosForeignKey.add(formatoLogic.getFormato());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoCambiosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipocambiosForeignKey=new ArrayList<TipoCambio>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoCambio tipocambioNulo = new TipoCambio();

			TipoCambioLogic tipocambioLogic=new TipoCambioLogic();

			//tipocambioLogic.getTipoCambioDataAccess().setIsForForeingKeyData(true);

			if(this.pedidocompraSessionBean==null) {
				this.pedidocompraSessionBean=new PedidoCompraSessionBean();
			}

			if(!this.pedidocompraSessionBean.getisBusquedaDesdeForeignKeySesionTipoCambio()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tipocambioLogic.getTipoCambioDataAccess().setIsForForeingKeyData(true);

					tipocambioLogic.getTodosTipoCambiosWithConnection(sFinalQuery,new Pagination());

					this.tipocambiosForeignKey=tipocambioLogic.getTipoCambios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.tipocambiosForeignKey.add(0, tipocambioNulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoCambio(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipocambioLogic.getEntityWithConnection(pedidocompraSessionBean.getlidTipoCambioActual());
					this.tipocambiosForeignKey.add(tipocambioLogic.getTipoCambio());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	
	public void setActualEmpresaForeignKey(Long idEmpresaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(empresaTemp!=null) {

					if(this.pedidocompra!=null) {
						this.pedidocompra.setEmpresa(empresaTemp);
					}

					if(this.jInternalFrameDetalleFormPedidoCompra!=null) {
						this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_empresaPedidoCompra.setSelectedItem(empresaTemp);
					}
				} else {
					//jComboBoxid_empresaPedidoCompra.setSelectedItem(empresaTemp);
					if(this.jInternalFrameDetalleFormPedidoCompra!=null) {
						if(this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_empresaPedidoCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_empresaPedidoCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEmpresaForeignKeyDescripcion(Long idEmpresaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}


			sDescripcion=EmpresaConstantesFunciones.getEmpresaDescripcion(empresaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEmpresaForeignKeyGenerico(Long idEmpresaSeleccionado,JComboBox jComboBoxid_empresaPedidoCompraGenerico)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(empresaTemp!=null) {
				jComboBoxid_empresaPedidoCompraGenerico.setSelectedItem(empresaTemp);
			} else {
				if(jComboBoxid_empresaPedidoCompraGenerico!=null && jComboBoxid_empresaPedidoCompraGenerico.getItemCount()>0) {
					jComboBoxid_empresaPedidoCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualSucursalForeignKey(Long idSucursalSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(sucursalTemp!=null) {

					if(this.pedidocompra!=null) {
						this.pedidocompra.setSucursal(sucursalTemp);
					}

					if(this.jInternalFrameDetalleFormPedidoCompra!=null) {
						this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_sucursalPedidoCompra.setSelectedItem(sucursalTemp);
					}
				} else {
					//jComboBoxid_sucursalPedidoCompra.setSelectedItem(sucursalTemp);
					if(this.jInternalFrameDetalleFormPedidoCompra!=null) {
						if(this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_sucursalPedidoCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_sucursalPedidoCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualSucursalForeignKeyDescripcion(Long idSucursalSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}


			sDescripcion=SucursalConstantesFunciones.getSucursalDescripcion(sucursalTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualSucursalForeignKeyGenerico(Long idSucursalSeleccionado,JComboBox jComboBoxid_sucursalPedidoCompraGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sucursalTemp!=null) {
				jComboBoxid_sucursalPedidoCompraGenerico.setSelectedItem(sucursalTemp);
			} else {
				if(jComboBoxid_sucursalPedidoCompraGenerico!=null && jComboBoxid_sucursalPedidoCompraGenerico.getItemCount()>0) {
					jComboBoxid_sucursalPedidoCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualModuloForeignKey(Long idModuloSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Modulo  moduloTemp=null;

			for(Modulo moduloAux:modulosForeignKey) {
				if(moduloAux.getId()!=null && moduloAux.getId().equals(idModuloSeleccionado)) {
					moduloTemp=moduloAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(moduloTemp!=null) {

					if(this.pedidocompra!=null) {
						this.pedidocompra.setModulo(moduloTemp);
					}

					if(this.jInternalFrameDetalleFormPedidoCompra!=null) {
						this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_moduloPedidoCompra.setSelectedItem(moduloTemp);
					}
				} else {
					//jComboBoxid_moduloPedidoCompra.setSelectedItem(moduloTemp);
					if(this.jInternalFrameDetalleFormPedidoCompra!=null) {
						if(this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_moduloPedidoCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_moduloPedidoCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualModuloForeignKeyDescripcion(Long idModuloSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Modulo  moduloTemp=null;

			for(Modulo moduloAux:modulosForeignKey) {
				if(moduloAux.getId()!=null && moduloAux.getId().equals(idModuloSeleccionado)) {
					moduloTemp=moduloAux;
					break;
				}
			}


			sDescripcion=ModuloConstantesFunciones.getModuloDescripcion(moduloTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualModuloForeignKeyGenerico(Long idModuloSeleccionado,JComboBox jComboBoxid_moduloPedidoCompraGenerico)throws Exception
	{
		try
		{
			Modulo  moduloTemp=null;

			for(Modulo moduloAux:modulosForeignKey) {
				if(moduloAux.getId()!=null && moduloAux.getId().equals(idModuloSeleccionado)) {
					moduloTemp=moduloAux;
					break;
				}
			}

			if(moduloTemp!=null) {
				jComboBoxid_moduloPedidoCompraGenerico.setSelectedItem(moduloTemp);
			} else {
				if(jComboBoxid_moduloPedidoCompraGenerico!=null && jComboBoxid_moduloPedidoCompraGenerico.getItemCount()>0) {
					jComboBoxid_moduloPedidoCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEjercicioForeignKey(Long idEjercicioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Ejercicio  ejercicioTemp=null;

			for(Ejercicio ejercicioAux:ejerciciosForeignKey) {
				if(ejercicioAux.getId()!=null && ejercicioAux.getId().equals(idEjercicioSeleccionado)) {
					ejercicioTemp=ejercicioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(ejercicioTemp!=null) {

					if(this.pedidocompra!=null) {
						this.pedidocompra.setEjercicio(ejercicioTemp);
					}

					if(this.jInternalFrameDetalleFormPedidoCompra!=null) {
						this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_ejercicioPedidoCompra.setSelectedItem(ejercicioTemp);
					}
				} else {
					//jComboBoxid_ejercicioPedidoCompra.setSelectedItem(ejercicioTemp);
					if(this.jInternalFrameDetalleFormPedidoCompra!=null) {
						if(this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_ejercicioPedidoCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_ejercicioPedidoCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEjercicioForeignKeyDescripcion(Long idEjercicioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Ejercicio  ejercicioTemp=null;

			for(Ejercicio ejercicioAux:ejerciciosForeignKey) {
				if(ejercicioAux.getId()!=null && ejercicioAux.getId().equals(idEjercicioSeleccionado)) {
					ejercicioTemp=ejercicioAux;
					break;
				}
			}


			sDescripcion=EjercicioConstantesFunciones.getEjercicioDescripcion(ejercicioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEjercicioForeignKeyGenerico(Long idEjercicioSeleccionado,JComboBox jComboBoxid_ejercicioPedidoCompraGenerico)throws Exception
	{
		try
		{
			Ejercicio  ejercicioTemp=null;

			for(Ejercicio ejercicioAux:ejerciciosForeignKey) {
				if(ejercicioAux.getId()!=null && ejercicioAux.getId().equals(idEjercicioSeleccionado)) {
					ejercicioTemp=ejercicioAux;
					break;
				}
			}

			if(ejercicioTemp!=null) {
				jComboBoxid_ejercicioPedidoCompraGenerico.setSelectedItem(ejercicioTemp);
			} else {
				if(jComboBoxid_ejercicioPedidoCompraGenerico!=null && jComboBoxid_ejercicioPedidoCompraGenerico.getItemCount()>0) {
					jComboBoxid_ejercicioPedidoCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualPeriodoForeignKey(Long idPeriodoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Periodo  periodoTemp=null;

			for(Periodo periodoAux:periodosForeignKey) {
				if(periodoAux.getId()!=null && periodoAux.getId().equals(idPeriodoSeleccionado)) {
					periodoTemp=periodoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(periodoTemp!=null) {

					if(this.pedidocompra!=null) {
						this.pedidocompra.setPeriodo(periodoTemp);
					}

					if(this.jInternalFrameDetalleFormPedidoCompra!=null) {
						this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_periodoPedidoCompra.setSelectedItem(periodoTemp);
					}
				} else {
					//jComboBoxid_periodoPedidoCompra.setSelectedItem(periodoTemp);
					if(this.jInternalFrameDetalleFormPedidoCompra!=null) {
						if(this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_periodoPedidoCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_periodoPedidoCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualPeriodoForeignKeyDescripcion(Long idPeriodoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Periodo  periodoTemp=null;

			for(Periodo periodoAux:periodosForeignKey) {
				if(periodoAux.getId()!=null && periodoAux.getId().equals(idPeriodoSeleccionado)) {
					periodoTemp=periodoAux;
					break;
				}
			}


			sDescripcion=PeriodoConstantesFunciones.getPeriodoDescripcion(periodoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualPeriodoForeignKeyGenerico(Long idPeriodoSeleccionado,JComboBox jComboBoxid_periodoPedidoCompraGenerico)throws Exception
	{
		try
		{
			Periodo  periodoTemp=null;

			for(Periodo periodoAux:periodosForeignKey) {
				if(periodoAux.getId()!=null && periodoAux.getId().equals(idPeriodoSeleccionado)) {
					periodoTemp=periodoAux;
					break;
				}
			}

			if(periodoTemp!=null) {
				jComboBoxid_periodoPedidoCompraGenerico.setSelectedItem(periodoTemp);
			} else {
				if(jComboBoxid_periodoPedidoCompraGenerico!=null && jComboBoxid_periodoPedidoCompraGenerico.getItemCount()>0) {
					jComboBoxid_periodoPedidoCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualAnioForeignKey(Long idAnioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Anio  anioTemp=null;

			for(Anio anioAux:aniosForeignKey) {
				if(anioAux.getId()!=null && anioAux.getId().equals(idAnioSeleccionado)) {
					anioTemp=anioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(anioTemp!=null) {

					if(this.pedidocompra!=null) {
						this.pedidocompra.setAnio(anioTemp);
					}

					if(this.jInternalFrameDetalleFormPedidoCompra!=null) {
						this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_anioPedidoCompra.setSelectedItem(anioTemp);
					}
				} else {
					//jComboBoxid_anioPedidoCompra.setSelectedItem(anioTemp);
					if(this.jInternalFrameDetalleFormPedidoCompra!=null) {
						if(this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_anioPedidoCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_anioPedidoCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualAnioForeignKeyDescripcion(Long idAnioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Anio  anioTemp=null;

			for(Anio anioAux:aniosForeignKey) {
				if(anioAux.getId()!=null && anioAux.getId().equals(idAnioSeleccionado)) {
					anioTemp=anioAux;
					break;
				}
			}


			sDescripcion=AnioConstantesFunciones.getAnioDescripcion(anioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualAnioForeignKeyGenerico(Long idAnioSeleccionado,JComboBox jComboBoxid_anioPedidoCompraGenerico)throws Exception
	{
		try
		{
			Anio  anioTemp=null;

			for(Anio anioAux:aniosForeignKey) {
				if(anioAux.getId()!=null && anioAux.getId().equals(idAnioSeleccionado)) {
					anioTemp=anioAux;
					break;
				}
			}

			if(anioTemp!=null) {
				jComboBoxid_anioPedidoCompraGenerico.setSelectedItem(anioTemp);
			} else {
				if(jComboBoxid_anioPedidoCompraGenerico!=null && jComboBoxid_anioPedidoCompraGenerico.getItemCount()>0) {
					jComboBoxid_anioPedidoCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualMesForeignKey(Long idMesSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Mes  mesTemp=null;

			for(Mes mesAux:messForeignKey) {
				if(mesAux.getId()!=null && mesAux.getId().equals(idMesSeleccionado)) {
					mesTemp=mesAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(mesTemp!=null) {

					if(this.pedidocompra!=null) {
						this.pedidocompra.setMes(mesTemp);
					}

					if(this.jInternalFrameDetalleFormPedidoCompra!=null) {
						this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_mesPedidoCompra.setSelectedItem(mesTemp);
					}
				} else {
					//jComboBoxid_mesPedidoCompra.setSelectedItem(mesTemp);
					if(this.jInternalFrameDetalleFormPedidoCompra!=null) {
						if(this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_mesPedidoCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_mesPedidoCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualMesForeignKeyDescripcion(Long idMesSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Mes  mesTemp=null;

			for(Mes mesAux:messForeignKey) {
				if(mesAux.getId()!=null && mesAux.getId().equals(idMesSeleccionado)) {
					mesTemp=mesAux;
					break;
				}
			}


			sDescripcion=MesConstantesFunciones.getMesDescripcion(mesTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualMesForeignKeyGenerico(Long idMesSeleccionado,JComboBox jComboBoxid_mesPedidoCompraGenerico)throws Exception
	{
		try
		{
			Mes  mesTemp=null;

			for(Mes mesAux:messForeignKey) {
				if(mesAux.getId()!=null && mesAux.getId().equals(idMesSeleccionado)) {
					mesTemp=mesAux;
					break;
				}
			}

			if(mesTemp!=null) {
				jComboBoxid_mesPedidoCompraGenerico.setSelectedItem(mesTemp);
			} else {
				if(jComboBoxid_mesPedidoCompraGenerico!=null && jComboBoxid_mesPedidoCompraGenerico.getItemCount()>0) {
					jComboBoxid_mesPedidoCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualClienteForeignKey(Long idClienteSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Cliente  clienteTemp=null;

			for(Cliente clienteAux:clientesForeignKey) {
				if(clienteAux.getId()!=null && clienteAux.getId().equals(idClienteSeleccionado)) {
					clienteTemp=clienteAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(clienteTemp!=null) {

					if(this.pedidocompra!=null) {
						this.pedidocompra.setCliente(clienteTemp);
					}

					if(this.jInternalFrameDetalleFormPedidoCompra!=null) {
						this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_clientePedidoCompra.setSelectedItem(clienteTemp);
					}
				} else {
					//jComboBoxid_clientePedidoCompra.setSelectedItem(clienteTemp);
					if(this.jInternalFrameDetalleFormPedidoCompra!=null) {
						if(this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_clientePedidoCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_clientePedidoCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdCliente") || sFormularioTipoBusqueda.equals("Todos")){
					if(clienteTemp!=null && jComboBoxid_clienteFK_IdClientePedidoCompra!=null) {
						jComboBoxid_clienteFK_IdClientePedidoCompra.setSelectedItem(clienteTemp);
					} else {
						if(jComboBoxid_clienteFK_IdClientePedidoCompra!=null) {
							//jComboBoxid_clienteFK_IdClientePedidoCompra.setSelectedItem(clienteTemp);
							if(jComboBoxid_clienteFK_IdClientePedidoCompra.getItemCount()>0) {
								jComboBoxid_clienteFK_IdClientePedidoCompra.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualClienteForeignKeyDescripcion(Long idClienteSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Cliente  clienteTemp=null;

			for(Cliente clienteAux:clientesForeignKey) {
				if(clienteAux.getId()!=null && clienteAux.getId().equals(idClienteSeleccionado)) {
					clienteTemp=clienteAux;
					break;
				}
			}


			sDescripcion=ClienteConstantesFunciones.getClienteDescripcion(clienteTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualClienteForeignKeyGenerico(Long idClienteSeleccionado,JComboBox jComboBoxid_clientePedidoCompraGenerico)throws Exception
	{
		try
		{
			Cliente  clienteTemp=null;

			for(Cliente clienteAux:clientesForeignKey) {
				if(clienteAux.getId()!=null && clienteAux.getId().equals(idClienteSeleccionado)) {
					clienteTemp=clienteAux;
					break;
				}
			}

			if(clienteTemp!=null) {
				jComboBoxid_clientePedidoCompraGenerico.setSelectedItem(clienteTemp);
			} else {
				if(jComboBoxid_clientePedidoCompraGenerico!=null && jComboBoxid_clientePedidoCompraGenerico.getItemCount()>0) {
					jComboBoxid_clientePedidoCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualUsuarioForeignKey(Long idUsuarioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Usuario  usuarioTemp=null;

			for(Usuario usuarioAux:usuariosForeignKey) {
				if(usuarioAux.getId()!=null && usuarioAux.getId().equals(idUsuarioSeleccionado)) {
					usuarioTemp=usuarioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(usuarioTemp!=null) {

					if(this.pedidocompra!=null) {
						this.pedidocompra.setUsuario(usuarioTemp);
					}

					if(this.jInternalFrameDetalleFormPedidoCompra!=null) {
						this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_usuarioPedidoCompra.setSelectedItem(usuarioTemp);
					}
				} else {
					//jComboBoxid_usuarioPedidoCompra.setSelectedItem(usuarioTemp);
					if(this.jInternalFrameDetalleFormPedidoCompra!=null) {
						if(this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_usuarioPedidoCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_usuarioPedidoCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualUsuarioForeignKeyDescripcion(Long idUsuarioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Usuario  usuarioTemp=null;

			for(Usuario usuarioAux:usuariosForeignKey) {
				if(usuarioAux.getId()!=null && usuarioAux.getId().equals(idUsuarioSeleccionado)) {
					usuarioTemp=usuarioAux;
					break;
				}
			}


			sDescripcion=UsuarioConstantesFunciones.getUsuarioDescripcion(usuarioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualUsuarioForeignKeyGenerico(Long idUsuarioSeleccionado,JComboBox jComboBoxid_usuarioPedidoCompraGenerico)throws Exception
	{
		try
		{
			Usuario  usuarioTemp=null;

			for(Usuario usuarioAux:usuariosForeignKey) {
				if(usuarioAux.getId()!=null && usuarioAux.getId().equals(idUsuarioSeleccionado)) {
					usuarioTemp=usuarioAux;
					break;
				}
			}

			if(usuarioTemp!=null) {
				jComboBoxid_usuarioPedidoCompraGenerico.setSelectedItem(usuarioTemp);
			} else {
				if(jComboBoxid_usuarioPedidoCompraGenerico!=null && jComboBoxid_usuarioPedidoCompraGenerico.getItemCount()>0) {
					jComboBoxid_usuarioPedidoCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualMonedaForeignKey(Long idMonedaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Moneda  monedaTemp=null;

			for(Moneda monedaAux:monedasForeignKey) {
				if(monedaAux.getId()!=null && monedaAux.getId().equals(idMonedaSeleccionado)) {
					monedaTemp=monedaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(monedaTemp!=null) {

					if(this.pedidocompra!=null) {
						this.pedidocompra.setMoneda(monedaTemp);
					}

					if(this.jInternalFrameDetalleFormPedidoCompra!=null) {
						this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_monedaPedidoCompra.setSelectedItem(monedaTemp);
					}
				} else {
					//jComboBoxid_monedaPedidoCompra.setSelectedItem(monedaTemp);
					if(this.jInternalFrameDetalleFormPedidoCompra!=null) {
						if(this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_monedaPedidoCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_monedaPedidoCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualMonedaForeignKeyDescripcion(Long idMonedaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Moneda  monedaTemp=null;

			for(Moneda monedaAux:monedasForeignKey) {
				if(monedaAux.getId()!=null && monedaAux.getId().equals(idMonedaSeleccionado)) {
					monedaTemp=monedaAux;
					break;
				}
			}


			sDescripcion=MonedaConstantesFunciones.getMonedaDescripcion(monedaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualMonedaForeignKeyGenerico(Long idMonedaSeleccionado,JComboBox jComboBoxid_monedaPedidoCompraGenerico)throws Exception
	{
		try
		{
			Moneda  monedaTemp=null;

			for(Moneda monedaAux:monedasForeignKey) {
				if(monedaAux.getId()!=null && monedaAux.getId().equals(idMonedaSeleccionado)) {
					monedaTemp=monedaAux;
					break;
				}
			}

			if(monedaTemp!=null) {
				jComboBoxid_monedaPedidoCompraGenerico.setSelectedItem(monedaTemp);
			} else {
				if(jComboBoxid_monedaPedidoCompraGenerico!=null && jComboBoxid_monedaPedidoCompraGenerico.getItemCount()>0) {
					jComboBoxid_monedaPedidoCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEstadoPedidoCompraForeignKey(Long idEstadoPedidoCompraSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			EstadoPedidoCompra  estadopedidocompraTemp=null;

			for(EstadoPedidoCompra estadopedidocompraAux:estadopedidocomprasForeignKey) {
				if(estadopedidocompraAux.getId()!=null && estadopedidocompraAux.getId().equals(idEstadoPedidoCompraSeleccionado)) {
					estadopedidocompraTemp=estadopedidocompraAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(estadopedidocompraTemp!=null) {

					if(this.pedidocompra!=null) {
						this.pedidocompra.setEstadoPedidoCompra(estadopedidocompraTemp);
					}

					if(this.jInternalFrameDetalleFormPedidoCompra!=null) {
						this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_estado_pedido_compraPedidoCompra.setSelectedItem(estadopedidocompraTemp);
					}
				} else {
					//jComboBoxid_estado_pedido_compraPedidoCompra.setSelectedItem(estadopedidocompraTemp);
					if(this.jInternalFrameDetalleFormPedidoCompra!=null) {
						if(this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_estado_pedido_compraPedidoCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_estado_pedido_compraPedidoCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdEstadoPedidoCompraEstadoPedoCompra") || sFormularioTipoBusqueda.equals("Todos")){
					if(estadopedidocompraTemp!=null && jComboBoxid_estado_pedido_compraFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompra!=null) {
						jComboBoxid_estado_pedido_compraFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompra.setSelectedItem(estadopedidocompraTemp);
					} else {
						if(jComboBoxid_estado_pedido_compraFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompra!=null) {
							//jComboBoxid_estado_pedido_compraFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompra.setSelectedItem(estadopedidocompraTemp);
							if(jComboBoxid_estado_pedido_compraFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompra.getItemCount()>0) {
								jComboBoxid_estado_pedido_compraFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompra.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEstadoPedidoCompraForeignKeyDescripcion(Long idEstadoPedidoCompraSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			EstadoPedidoCompra  estadopedidocompraTemp=null;

			for(EstadoPedidoCompra estadopedidocompraAux:estadopedidocomprasForeignKey) {
				if(estadopedidocompraAux.getId()!=null && estadopedidocompraAux.getId().equals(idEstadoPedidoCompraSeleccionado)) {
					estadopedidocompraTemp=estadopedidocompraAux;
					break;
				}
			}


			sDescripcion=EstadoPedidoCompraConstantesFunciones.getEstadoPedidoCompraDescripcion(estadopedidocompraTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEstadoPedidoCompraForeignKeyGenerico(Long idEstadoPedidoCompraSeleccionado,JComboBox jComboBoxid_estado_pedido_compraPedidoCompraGenerico)throws Exception
	{
		try
		{
			EstadoPedidoCompra  estadopedidocompraTemp=null;

			for(EstadoPedidoCompra estadopedidocompraAux:estadopedidocomprasForeignKey) {
				if(estadopedidocompraAux.getId()!=null && estadopedidocompraAux.getId().equals(idEstadoPedidoCompraSeleccionado)) {
					estadopedidocompraTemp=estadopedidocompraAux;
					break;
				}
			}

			if(estadopedidocompraTemp!=null) {
				jComboBoxid_estado_pedido_compraPedidoCompraGenerico.setSelectedItem(estadopedidocompraTemp);
			} else {
				if(jComboBoxid_estado_pedido_compraPedidoCompraGenerico!=null && jComboBoxid_estado_pedido_compraPedidoCompraGenerico.getItemCount()>0) {
					jComboBoxid_estado_pedido_compraPedidoCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEmpleadoForeignKey(Long idEmpleadoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Empleado  empleadoTemp=null;

			for(Empleado empleadoAux:empleadosForeignKey) {
				if(empleadoAux.getId()!=null && empleadoAux.getId().equals(idEmpleadoSeleccionado)) {
					empleadoTemp=empleadoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(empleadoTemp!=null) {

					if(this.pedidocompra!=null) {
						this.pedidocompra.setEmpleado(empleadoTemp);
					}

					if(this.jInternalFrameDetalleFormPedidoCompra!=null) {
						this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_empleadoPedidoCompra.setSelectedItem(empleadoTemp);
					}
				} else {
					//jComboBoxid_empleadoPedidoCompra.setSelectedItem(empleadoTemp);
					if(this.jInternalFrameDetalleFormPedidoCompra!=null) {
						if(this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_empleadoPedidoCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_empleadoPedidoCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdEmpleado") || sFormularioTipoBusqueda.equals("Todos")){
					if(empleadoTemp!=null && jComboBoxid_empleadoFK_IdEmpleadoPedidoCompra!=null) {
						jComboBoxid_empleadoFK_IdEmpleadoPedidoCompra.setSelectedItem(empleadoTemp);
					} else {
						if(jComboBoxid_empleadoFK_IdEmpleadoPedidoCompra!=null) {
							//jComboBoxid_empleadoFK_IdEmpleadoPedidoCompra.setSelectedItem(empleadoTemp);
							if(jComboBoxid_empleadoFK_IdEmpleadoPedidoCompra.getItemCount()>0) {
								jComboBoxid_empleadoFK_IdEmpleadoPedidoCompra.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEmpleadoForeignKeyDescripcion(Long idEmpleadoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Empleado  empleadoTemp=null;

			for(Empleado empleadoAux:empleadosForeignKey) {
				if(empleadoAux.getId()!=null && empleadoAux.getId().equals(idEmpleadoSeleccionado)) {
					empleadoTemp=empleadoAux;
					break;
				}
			}


			sDescripcion=EmpleadoConstantesFunciones.getEmpleadoDescripcion(empleadoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEmpleadoForeignKeyGenerico(Long idEmpleadoSeleccionado,JComboBox jComboBoxid_empleadoPedidoCompraGenerico)throws Exception
	{
		try
		{
			Empleado  empleadoTemp=null;

			for(Empleado empleadoAux:empleadosForeignKey) {
				if(empleadoAux.getId()!=null && empleadoAux.getId().equals(idEmpleadoSeleccionado)) {
					empleadoTemp=empleadoAux;
					break;
				}
			}

			if(empleadoTemp!=null) {
				jComboBoxid_empleadoPedidoCompraGenerico.setSelectedItem(empleadoTemp);
			} else {
				if(jComboBoxid_empleadoPedidoCompraGenerico!=null && jComboBoxid_empleadoPedidoCompraGenerico.getItemCount()>0) {
					jComboBoxid_empleadoPedidoCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualFormatoForeignKey(Long idFormatoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Formato  formatoTemp=null;

			for(Formato formatoAux:formatosForeignKey) {
				if(formatoAux.getId()!=null && formatoAux.getId().equals(idFormatoSeleccionado)) {
					formatoTemp=formatoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(formatoTemp!=null) {

					if(this.pedidocompra!=null) {
						this.pedidocompra.setFormato(formatoTemp);
					}

					if(this.jInternalFrameDetalleFormPedidoCompra!=null) {
						this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_formatoPedidoCompra.setSelectedItem(formatoTemp);
					}
				} else {
					//jComboBoxid_formatoPedidoCompra.setSelectedItem(formatoTemp);
					if(this.jInternalFrameDetalleFormPedidoCompra!=null) {
						if(this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_formatoPedidoCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_formatoPedidoCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualFormatoForeignKeyDescripcion(Long idFormatoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Formato  formatoTemp=null;

			for(Formato formatoAux:formatosForeignKey) {
				if(formatoAux.getId()!=null && formatoAux.getId().equals(idFormatoSeleccionado)) {
					formatoTemp=formatoAux;
					break;
				}
			}


			sDescripcion=FormatoConstantesFunciones.getFormatoDescripcion(formatoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualFormatoForeignKeyGenerico(Long idFormatoSeleccionado,JComboBox jComboBoxid_formatoPedidoCompraGenerico)throws Exception
	{
		try
		{
			Formato  formatoTemp=null;

			for(Formato formatoAux:formatosForeignKey) {
				if(formatoAux.getId()!=null && formatoAux.getId().equals(idFormatoSeleccionado)) {
					formatoTemp=formatoAux;
					break;
				}
			}

			if(formatoTemp!=null) {
				jComboBoxid_formatoPedidoCompraGenerico.setSelectedItem(formatoTemp);
			} else {
				if(jComboBoxid_formatoPedidoCompraGenerico!=null && jComboBoxid_formatoPedidoCompraGenerico.getItemCount()>0) {
					jComboBoxid_formatoPedidoCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoCambioForeignKey(Long idTipoCambioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoCambio  tipocambioTemp=null;

			for(TipoCambio tipocambioAux:tipocambiosForeignKey) {
				if(tipocambioAux.getId()!=null && tipocambioAux.getId().equals(idTipoCambioSeleccionado)) {
					tipocambioTemp=tipocambioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipocambioTemp!=null) {

					if(this.pedidocompra!=null) {
						this.pedidocompra.setTipoCambio(tipocambioTemp);
					}

					if(this.jInternalFrameDetalleFormPedidoCompra!=null) {
						this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_tipo_cambioPedidoCompra.setSelectedItem(tipocambioTemp);
					}
				} else {
					//jComboBoxid_tipo_cambioPedidoCompra.setSelectedItem(tipocambioTemp);
					if(this.jInternalFrameDetalleFormPedidoCompra!=null) {
						if(this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_tipo_cambioPedidoCompra.getItemCount()>0) {
							this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_tipo_cambioPedidoCompra.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoCambioForeignKeyDescripcion(Long idTipoCambioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoCambio  tipocambioTemp=null;

			for(TipoCambio tipocambioAux:tipocambiosForeignKey) {
				if(tipocambioAux.getId()!=null && tipocambioAux.getId().equals(idTipoCambioSeleccionado)) {
					tipocambioTemp=tipocambioAux;
					break;
				}
			}


			sDescripcion=TipoCambioConstantesFunciones.getTipoCambioDescripcion(tipocambioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoCambioForeignKeyGenerico(Long idTipoCambioSeleccionado,JComboBox jComboBoxid_tipo_cambioPedidoCompraGenerico)throws Exception
	{
		try
		{
			TipoCambio  tipocambioTemp=null;

			for(TipoCambio tipocambioAux:tipocambiosForeignKey) {
				if(tipocambioAux.getId()!=null && tipocambioAux.getId().equals(idTipoCambioSeleccionado)) {
					tipocambioTemp=tipocambioAux;
					break;
				}
			}

			if(tipocambioTemp!=null) {
				jComboBoxid_tipo_cambioPedidoCompraGenerico.setSelectedItem(tipocambioTemp);
			} else {
				if(jComboBoxid_tipo_cambioPedidoCompraGenerico!=null && jComboBoxid_tipo_cambioPedidoCompraGenerico.getItemCount()>0) {
					jComboBoxid_tipo_cambioPedidoCompraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	
	
	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEmpresaForeignKey(PedidoCompra pedidocompra,JComboBox jComboBoxid_empresaPedidoCompraGenerico)throws Exception
	{
		try
		{
			Empresa  empresaAux=new Empresa();

			if(jComboBoxid_empresaPedidoCompraGenerico==null) {
				empresaAux=(Empresa)this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_empresaPedidoCompra.getSelectedItem();
			} else {
				empresaAux=(Empresa)jComboBoxid_empresaPedidoCompraGenerico.getSelectedItem();
			}

			if(empresaAux!=null && empresaAux.getId()!=null) {
				pedidocompra.setid_empresa(empresaAux.getId());
				pedidocompra.setempresa_descripcion(PedidoCompraConstantesFunciones.getEmpresaDescripcion(empresaAux));
				pedidocompra.setEmpresa(empresaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarSucursalForeignKey(PedidoCompra pedidocompra,JComboBox jComboBoxid_sucursalPedidoCompraGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalAux=new Sucursal();

			if(jComboBoxid_sucursalPedidoCompraGenerico==null) {
				sucursalAux=(Sucursal)this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_sucursalPedidoCompra.getSelectedItem();
			} else {
				sucursalAux=(Sucursal)jComboBoxid_sucursalPedidoCompraGenerico.getSelectedItem();
			}

			if(sucursalAux!=null && sucursalAux.getId()!=null) {
				pedidocompra.setid_sucursal(sucursalAux.getId());
				pedidocompra.setsucursal_descripcion(PedidoCompraConstantesFunciones.getSucursalDescripcion(sucursalAux));
				pedidocompra.setSucursal(sucursalAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarModuloForeignKey(PedidoCompra pedidocompra,JComboBox jComboBoxid_moduloPedidoCompraGenerico)throws Exception
	{
		try
		{
			Modulo  moduloAux=new Modulo();

			if(jComboBoxid_moduloPedidoCompraGenerico==null) {
				moduloAux=(Modulo)this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_moduloPedidoCompra.getSelectedItem();
			} else {
				moduloAux=(Modulo)jComboBoxid_moduloPedidoCompraGenerico.getSelectedItem();
			}

			if(moduloAux!=null && moduloAux.getId()!=null) {
				pedidocompra.setid_modulo(moduloAux.getId());
				pedidocompra.setmodulo_descripcion(PedidoCompraConstantesFunciones.getModuloDescripcion(moduloAux));
				pedidocompra.setModulo(moduloAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEjercicioForeignKey(PedidoCompra pedidocompra,JComboBox jComboBoxid_ejercicioPedidoCompraGenerico)throws Exception
	{
		try
		{
			Ejercicio  ejercicioAux=new Ejercicio();

			if(jComboBoxid_ejercicioPedidoCompraGenerico==null) {
				ejercicioAux=(Ejercicio)this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_ejercicioPedidoCompra.getSelectedItem();
			} else {
				ejercicioAux=(Ejercicio)jComboBoxid_ejercicioPedidoCompraGenerico.getSelectedItem();
			}

			if(ejercicioAux!=null && ejercicioAux.getId()!=null) {
				pedidocompra.setid_ejercicio(ejercicioAux.getId());
				pedidocompra.setejercicio_descripcion(PedidoCompraConstantesFunciones.getEjercicioDescripcion(ejercicioAux));
				pedidocompra.setEjercicio(ejercicioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarPeriodoForeignKey(PedidoCompra pedidocompra,JComboBox jComboBoxid_periodoPedidoCompraGenerico)throws Exception
	{
		try
		{
			Periodo  periodoAux=new Periodo();

			if(jComboBoxid_periodoPedidoCompraGenerico==null) {
				periodoAux=(Periodo)this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_periodoPedidoCompra.getSelectedItem();
			} else {
				periodoAux=(Periodo)jComboBoxid_periodoPedidoCompraGenerico.getSelectedItem();
			}

			if(periodoAux!=null && periodoAux.getId()!=null) {
				if(periodoAux.getid_estado_periodo().equals(0L)) {
					throw new Exception("Periodo INACTIVO, NO PUEDE GUARDAR LA INFORMACION CONSULTE CON EL ADMINISTRADOR");
				}

				pedidocompra.setid_periodo(periodoAux.getId());
				pedidocompra.setperiodo_descripcion(PedidoCompraConstantesFunciones.getPeriodoDescripcion(periodoAux));
				pedidocompra.setPeriodo(periodoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarAnioForeignKey(PedidoCompra pedidocompra,JComboBox jComboBoxid_anioPedidoCompraGenerico)throws Exception
	{
		try
		{
			Anio  anioAux=new Anio();

			if(jComboBoxid_anioPedidoCompraGenerico==null) {
				anioAux=(Anio)this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_anioPedidoCompra.getSelectedItem();
			} else {
				anioAux=(Anio)jComboBoxid_anioPedidoCompraGenerico.getSelectedItem();
			}

			if(anioAux!=null) {
				pedidocompra.setid_anio(anioAux.getId());
				pedidocompra.setanio_descripcion(PedidoCompraConstantesFunciones.getAnioDescripcion(anioAux));
				pedidocompra.setAnio(anioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarMesForeignKey(PedidoCompra pedidocompra,JComboBox jComboBoxid_mesPedidoCompraGenerico)throws Exception
	{
		try
		{
			Mes  mesAux=new Mes();

			if(jComboBoxid_mesPedidoCompraGenerico==null) {
				mesAux=(Mes)this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_mesPedidoCompra.getSelectedItem();
			} else {
				mesAux=(Mes)jComboBoxid_mesPedidoCompraGenerico.getSelectedItem();
			}

			if(mesAux!=null) {
				pedidocompra.setid_mes(mesAux.getId());
				pedidocompra.setmes_descripcion(PedidoCompraConstantesFunciones.getMesDescripcion(mesAux));
				pedidocompra.setMes(mesAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarClienteForeignKey(PedidoCompra pedidocompra,JComboBox jComboBoxid_clientePedidoCompraGenerico)throws Exception
	{
		try
		{
			Cliente  clienteAux=new Cliente();

			if(jComboBoxid_clientePedidoCompraGenerico==null) {
				clienteAux=(Cliente)this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_clientePedidoCompra.getSelectedItem();
			} else {
				clienteAux=(Cliente)jComboBoxid_clientePedidoCompraGenerico.getSelectedItem();
			}

			if(clienteAux!=null && clienteAux.getId()!=null) {
				pedidocompra.setid_cliente(clienteAux.getId());
				pedidocompra.setcliente_descripcion(PedidoCompraConstantesFunciones.getClienteDescripcion(clienteAux));
				pedidocompra.setCliente(clienteAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarUsuarioForeignKey(PedidoCompra pedidocompra,JComboBox jComboBoxid_usuarioPedidoCompraGenerico)throws Exception
	{
		try
		{
			Usuario  usuarioAux=new Usuario();

			if(jComboBoxid_usuarioPedidoCompraGenerico==null) {
				usuarioAux=(Usuario)this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_usuarioPedidoCompra.getSelectedItem();
			} else {
				usuarioAux=(Usuario)jComboBoxid_usuarioPedidoCompraGenerico.getSelectedItem();
			}

			if(usuarioAux!=null && usuarioAux.getId()!=null) {
				pedidocompra.setid_usuario(usuarioAux.getId());
				pedidocompra.setusuario_descripcion(PedidoCompraConstantesFunciones.getUsuarioDescripcion(usuarioAux));
				pedidocompra.setUsuario(usuarioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarMonedaForeignKey(PedidoCompra pedidocompra,JComboBox jComboBoxid_monedaPedidoCompraGenerico)throws Exception
	{
		try
		{
			Moneda  monedaAux=new Moneda();

			if(jComboBoxid_monedaPedidoCompraGenerico==null) {
				monedaAux=(Moneda)this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_monedaPedidoCompra.getSelectedItem();
			} else {
				monedaAux=(Moneda)jComboBoxid_monedaPedidoCompraGenerico.getSelectedItem();
			}

			if(monedaAux!=null && monedaAux.getId()!=null) {
				pedidocompra.setid_moneda(monedaAux.getId());
				pedidocompra.setmoneda_descripcion(PedidoCompraConstantesFunciones.getMonedaDescripcion(monedaAux));
				pedidocompra.setMoneda(monedaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEstadoPedidoCompraForeignKey(PedidoCompra pedidocompra,JComboBox jComboBoxid_estado_pedido_compraPedidoCompraGenerico)throws Exception
	{
		try
		{
			EstadoPedidoCompra  estadopedidocompraAux=new EstadoPedidoCompra();

			if(jComboBoxid_estado_pedido_compraPedidoCompraGenerico==null) {
				estadopedidocompraAux=(EstadoPedidoCompra)this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_estado_pedido_compraPedidoCompra.getSelectedItem();
			} else {
				estadopedidocompraAux=(EstadoPedidoCompra)jComboBoxid_estado_pedido_compraPedidoCompraGenerico.getSelectedItem();
			}

			if(estadopedidocompraAux!=null && estadopedidocompraAux.getId()!=null) {
				pedidocompra.setid_estado_pedido_compra(estadopedidocompraAux.getId());
				pedidocompra.setestadopedidocompra_descripcion(PedidoCompraConstantesFunciones.getEstadoPedidoCompraDescripcion(estadopedidocompraAux));
				pedidocompra.setEstadoPedidoCompra(estadopedidocompraAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEmpleadoForeignKey(PedidoCompra pedidocompra,JComboBox jComboBoxid_empleadoPedidoCompraGenerico)throws Exception
	{
		try
		{
			Empleado  empleadoAux=new Empleado();

			if(jComboBoxid_empleadoPedidoCompraGenerico==null) {
				empleadoAux=(Empleado)this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_empleadoPedidoCompra.getSelectedItem();
			} else {
				empleadoAux=(Empleado)jComboBoxid_empleadoPedidoCompraGenerico.getSelectedItem();
			}

			if(empleadoAux!=null && empleadoAux.getId()!=null) {
				pedidocompra.setid_empleado(empleadoAux.getId());
				pedidocompra.setempleado_descripcion(PedidoCompraConstantesFunciones.getEmpleadoDescripcion(empleadoAux));
				pedidocompra.setEmpleado(empleadoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarFormatoForeignKey(PedidoCompra pedidocompra,JComboBox jComboBoxid_formatoPedidoCompraGenerico)throws Exception
	{
		try
		{
			Formato  formatoAux=new Formato();

			if(jComboBoxid_formatoPedidoCompraGenerico==null) {
				formatoAux=(Formato)this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_formatoPedidoCompra.getSelectedItem();
			} else {
				formatoAux=(Formato)jComboBoxid_formatoPedidoCompraGenerico.getSelectedItem();
			}

			if(formatoAux!=null) {
				pedidocompra.setid_formato(formatoAux.getId());
				pedidocompra.setformato_descripcion(PedidoCompraConstantesFunciones.getFormatoDescripcion(formatoAux));
				pedidocompra.setFormato(formatoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoCambioForeignKey(PedidoCompra pedidocompra,JComboBox jComboBoxid_tipo_cambioPedidoCompraGenerico)throws Exception
	{
		try
		{
			TipoCambio  tipocambioAux=new TipoCambio();

			if(jComboBoxid_tipo_cambioPedidoCompraGenerico==null) {
				tipocambioAux=(TipoCambio)this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_tipo_cambioPedidoCompra.getSelectedItem();
			} else {
				tipocambioAux=(TipoCambio)jComboBoxid_tipo_cambioPedidoCompraGenerico.getSelectedItem();
			}

			if(tipocambioAux!=null) {
				pedidocompra.setid_tipo_cambio(tipocambioAux.getId());
				pedidocompra.settipocambio_descripcion(PedidoCompraConstantesFunciones.getTipoCambioDescripcion(tipocambioAux));
				pedidocompra.setTipoCambio(tipocambioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	


		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEmpresasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEmpresa=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PedidoCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPedidoCompra!=null) { 
							this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_empresaPedidoCompra.removeAllItems();

							for(Empresa empresa:this.empresasForeignKey) {
								this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_empresaPedidoCompra.addItem(empresa);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPedidoCompra!=null) { 
					}

					if(!PedidoCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameSucursalsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingSucursal=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PedidoCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPedidoCompra!=null) { 
							this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_sucursalPedidoCompra.removeAllItems();

							for(Sucursal sucursal:this.sucursalsForeignKey) {
								this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_sucursalPedidoCompra.addItem(sucursal);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPedidoCompra!=null) { 
					}

					if(!PedidoCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameModulosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingModulo=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PedidoCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPedidoCompra!=null) { 
							this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_moduloPedidoCompra.removeAllItems();

							for(Modulo modulo:this.modulosForeignKey) {
								this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_moduloPedidoCompra.addItem(modulo);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPedidoCompra!=null) { 
					}

					if(!PedidoCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEjerciciosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEjercicio=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PedidoCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPedidoCompra!=null) { 
							this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_ejercicioPedidoCompra.removeAllItems();

							for(Ejercicio ejercicio:this.ejerciciosForeignKey) {
								this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_ejercicioPedidoCompra.addItem(ejercicio);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPedidoCompra!=null) { 
					}

					if(!PedidoCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFramePeriodosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingPeriodo=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PedidoCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPedidoCompra!=null) { 
							this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_periodoPedidoCompra.removeAllItems();

							for(Periodo periodo:this.periodosForeignKey) {
								this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_periodoPedidoCompra.addItem(periodo);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPedidoCompra!=null) { 
					}

					if(!PedidoCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameAniosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingAnio=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PedidoCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPedidoCompra!=null) { 
							this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_anioPedidoCompra.removeAllItems();

							for(Anio anio:this.aniosForeignKey) {
								this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_anioPedidoCompra.addItem(anio);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPedidoCompra!=null) { 
					}

					if(!PedidoCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameMessForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingMes=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PedidoCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPedidoCompra!=null) { 
							this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_mesPedidoCompra.removeAllItems();

							for(Mes mes:this.messForeignKey) {
								this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_mesPedidoCompra.addItem(mes);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPedidoCompra!=null) { 
					}

					if(!PedidoCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameClientesForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCliente=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PedidoCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPedidoCompra!=null) { 
							this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_clientePedidoCompra.removeAllItems();

							for(Cliente cliente:this.clientesForeignKey) {
								this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_clientePedidoCompra.addItem(cliente);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPedidoCompra!=null) { 
					}

					if(!PedidoCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdCliente") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!PedidoCompraJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_clienteFK_IdClientePedidoCompra.removeAllItems();

							for(Cliente cliente:this.clientesForeignKey) {
								this.jComboBoxid_clienteFK_IdClientePedidoCompra.addItem(cliente);
							}
						}

						if(!PedidoCompraJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameUsuariosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingUsuario=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PedidoCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPedidoCompra!=null) { 
							this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_usuarioPedidoCompra.removeAllItems();

							for(Usuario usuario:this.usuariosForeignKey) {
								this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_usuarioPedidoCompra.addItem(usuario);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPedidoCompra!=null) { 
					}

					if(!PedidoCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameMonedasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingMoneda=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PedidoCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPedidoCompra!=null) { 
							this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_monedaPedidoCompra.removeAllItems();

							for(Moneda moneda:this.monedasForeignKey) {
								this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_monedaPedidoCompra.addItem(moneda);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPedidoCompra!=null) { 
					}

					if(!PedidoCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEstadoPedidoComprasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEstadoPedidoCompra=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PedidoCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPedidoCompra!=null) { 
							this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_estado_pedido_compraPedidoCompra.removeAllItems();

							for(EstadoPedidoCompra estadopedidocompra:this.estadopedidocomprasForeignKey) {
								this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_estado_pedido_compraPedidoCompra.addItem(estadopedidocompra);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPedidoCompra!=null) { 
					}

					if(!PedidoCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdEstadoPedidoCompraEstadoPedoCompra") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!PedidoCompraJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_estado_pedido_compraFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompra.removeAllItems();

							for(EstadoPedidoCompra estadopedidocompra:this.estadopedidocomprasForeignKey) {
								this.jComboBoxid_estado_pedido_compraFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompra.addItem(estadopedidocompra);
							}
						}

						if(!PedidoCompraJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEmpleadosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEmpleado=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PedidoCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPedidoCompra!=null) { 
							this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_empleadoPedidoCompra.removeAllItems();

							for(Empleado empleado:this.empleadosForeignKey) {
								this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_empleadoPedidoCompra.addItem(empleado);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPedidoCompra!=null) { 
					}

					if(!PedidoCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdEmpleado") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!PedidoCompraJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_empleadoFK_IdEmpleadoPedidoCompra.removeAllItems();

							for(Empleado empleado:this.empleadosForeignKey) {
								this.jComboBoxid_empleadoFK_IdEmpleadoPedidoCompra.addItem(empleado);
							}
						}

						if(!PedidoCompraJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameFormatosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingFormato=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PedidoCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPedidoCompra!=null) { 
							this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_formatoPedidoCompra.removeAllItems();

							for(Formato formato:this.formatosForeignKey) {
								this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_formatoPedidoCompra.addItem(formato);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPedidoCompra!=null) { 
					}

					if(!PedidoCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoCambiosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoCambio=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PedidoCompraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPedidoCompra!=null) { 
							this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_tipo_cambioPedidoCompra.removeAllItems();

							for(TipoCambio tipocambio:this.tipocambiosForeignKey) {
								this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_tipo_cambioPedidoCompra.addItem(tipocambio);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPedidoCompra!=null) { 
					}

					if(!PedidoCompraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

	


		public void setSelectedItemCombosFrameEmpresaForeignKey(Empresa empresa,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPedidoCompra!=null) {
							this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_empresaPedidoCompra.setSelectedItem(empresa);
						}
					} else {
						if(this.jInternalFrameDetalleFormPedidoCompra!=null) {
							this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_empresaPedidoCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameSucursalForeignKey(Sucursal sucursal,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPedidoCompra!=null) {
							this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_sucursalPedidoCompra.setSelectedItem(sucursal);
						}
					} else {
						if(this.jInternalFrameDetalleFormPedidoCompra!=null) {
							this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_sucursalPedidoCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameModuloForeignKey(Modulo modulo,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPedidoCompra!=null) {
							this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_moduloPedidoCompra.setSelectedItem(modulo);
						}
					} else {
						if(this.jInternalFrameDetalleFormPedidoCompra!=null) {
							this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_moduloPedidoCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEjercicioForeignKey(Ejercicio ejercicio,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPedidoCompra!=null) {
							this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_ejercicioPedidoCompra.setSelectedItem(ejercicio);
						}
					} else {
						if(this.jInternalFrameDetalleFormPedidoCompra!=null) {
							this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_ejercicioPedidoCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFramePeriodoForeignKey(Periodo periodo,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPedidoCompra!=null) {
							this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_periodoPedidoCompra.setSelectedItem(periodo);
						}
					} else {
						if(this.jInternalFrameDetalleFormPedidoCompra!=null) {
							this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_periodoPedidoCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameAnioForeignKey(Anio anio,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPedidoCompra!=null) {
							this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_anioPedidoCompra.setSelectedItem(anio);
						}
					} else {
						if(this.jInternalFrameDetalleFormPedidoCompra!=null) {
							this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_anioPedidoCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameMesForeignKey(Mes mes,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPedidoCompra!=null) {
							this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_mesPedidoCompra.setSelectedItem(mes);
						}
					} else {
						if(this.jInternalFrameDetalleFormPedidoCompra!=null) {
							this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_mesPedidoCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameClienteForeignKey(Cliente cliente,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPedidoCompra!=null) {
							this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_clientePedidoCompra.setSelectedItem(cliente);
						}
					} else {
						if(this.jInternalFrameDetalleFormPedidoCompra!=null) {
							this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_clientePedidoCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_clienteFK_IdClientePedidoCompra.setSelectedItem(cliente);
						} else {
							this.jComboBoxid_clienteFK_IdClientePedidoCompra.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameUsuarioForeignKey(Usuario usuario,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPedidoCompra!=null) {
							this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_usuarioPedidoCompra.setSelectedItem(usuario);
						}
					} else {
						if(this.jInternalFrameDetalleFormPedidoCompra!=null) {
							this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_usuarioPedidoCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameMonedaForeignKey(Moneda moneda,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPedidoCompra!=null) {
							this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_monedaPedidoCompra.setSelectedItem(moneda);
						}
					} else {
						if(this.jInternalFrameDetalleFormPedidoCompra!=null) {
							this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_monedaPedidoCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEstadoPedidoCompraForeignKey(EstadoPedidoCompra estadopedidocompra,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPedidoCompra!=null) {
							this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_estado_pedido_compraPedidoCompra.setSelectedItem(estadopedidocompra);
						}
					} else {
						if(this.jInternalFrameDetalleFormPedidoCompra!=null) {
							this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_estado_pedido_compraPedidoCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_estado_pedido_compraFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompra.setSelectedItem(estadopedidocompra);
						} else {
							this.jComboBoxid_estado_pedido_compraFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompra.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEmpleadoForeignKey(Empleado empleado,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPedidoCompra!=null) {
							this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_empleadoPedidoCompra.setSelectedItem(empleado);
						}
					} else {
						if(this.jInternalFrameDetalleFormPedidoCompra!=null) {
							this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_empleadoPedidoCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_empleadoFK_IdEmpleadoPedidoCompra.setSelectedItem(empleado);
						} else {
							this.jComboBoxid_empleadoFK_IdEmpleadoPedidoCompra.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameFormatoForeignKey(Formato formato,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPedidoCompra!=null) {
							this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_formatoPedidoCompra.setSelectedItem(formato);
						}
					} else {
						if(this.jInternalFrameDetalleFormPedidoCompra!=null) {
							this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_formatoPedidoCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoCambioForeignKey(TipoCambio tipocambio,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPedidoCompra!=null) {
							this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_tipo_cambioPedidoCompra.setSelectedItem(tipocambio);
						}
					} else {
						if(this.jInternalFrameDetalleFormPedidoCompra!=null) {
							this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_tipo_cambioPedidoCompra.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

	


	
	public void refrescarForeignKeysDescripcionesPedidoCompra() throws Exception {
		//SI FUNCIONA DEEPLOAD ESTO VA AL ULTIMO
		if(Constantes.ISUSAEJBLOGICLAYER) {
			PedidoCompraConstantesFunciones.refrescarForeignKeysDescripcionesPedidoCompra(this.pedidocompraLogic.getPedidoCompras());
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			PedidoCompraConstantesFunciones.refrescarForeignKeysDescripcionesPedidoCompra(this.pedidocompras);
		}
		
		/*
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		classes.add(new Classe(Empresa.class));
		classes.add(new Classe(Sucursal.class));
		classes.add(new Classe(Modulo.class));
		classes.add(new Classe(Ejercicio.class));
		classes.add(new Classe(Periodo.class));
		classes.add(new Classe(Anio.class));
		classes.add(new Classe(Mes.class));
		classes.add(new Classe(Cliente.class));
		classes.add(new Classe(Usuario.class));
		classes.add(new Classe(Moneda.class));
		classes.add(new Classe(EstadoPedidoCompra.class));
		classes.add(new Classe(Empleado.class));
		classes.add(new Classe(Formato.class));
		classes.add(new Classe(TipoCambio.class));
			
		if(Constantes.ISUSAEJBLOGICLAYER) {
			//USA LOS OBJETOS DE LOGIC DIRECTAMENTE
			//pedidocompraLogic.setPedidoCompras(this.pedidocompras);
			pedidocompraLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
	
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		*/				
	}	
	
	
	
	public Integer getiNumeroPaginacion() {
		return iNumeroPaginacion;
	}

	public void setiNumeroPaginacion(Integer iNumeroPaginacion) {
		this.iNumeroPaginacion= iNumeroPaginacion;
	}
	
	public Integer getiNumeroPaginacionPagina() {
		return iNumeroPaginacionPagina;
	}

	public void setiNumeroPaginacionPagina(Integer iNumeroPaginacionPagina) {
		this.iNumeroPaginacionPagina= iNumeroPaginacionPagina;
	}
	
	
	public Boolean getIsSeleccionarTodos() {
		return this.isSeleccionarTodos;
	}

	public void setIsSeleccionarTodos(Boolean isSeleccionarTodos) {
		this.isSeleccionarTodos= isSeleccionarTodos;
	}
	
	public Boolean getEsControlTabla() {
		return this.esControlTabla;
	}

	public void setEsControlTabla(Boolean esControlTabla) {
		this.esControlTabla= esControlTabla;
	}
	
	public Boolean getIsSeleccionados() {
		return this.isSeleccionados;
	}

	public void setIsSeleccionados(Boolean isSeleccionados) {
		this.isSeleccionados= isSeleccionados;
	}
	
	public Boolean getIsPostAccionNuevo() {
		return this.isPostAccionNuevo;
	}

	public void setIsPostAccionNuevo(Boolean isPostAccionNuevo) {
		this.isPostAccionNuevo= isPostAccionNuevo;
	}
	
	public Boolean getIsPostAccionSinCerrar() {
		return this.isPostAccionSinCerrar;
	}

	public void setIsPostAccionSinCerrar(Boolean isPostAccionSinCerrar) {
		this.isPostAccionSinCerrar= isPostAccionSinCerrar;
	}
	
	public Boolean getIsPostAccionSinMensaje() {
		return this.isPostAccionSinMensaje;
	}

	public void setIsPostAccionSinMensaje(Boolean isPostAccionSinMensaje) {
		this.isPostAccionSinMensaje= isPostAccionSinMensaje;
	}
	
	public Boolean getConGraficoReporte() {
		return this.conGraficoReporte;
	}

	public void setConGraficoReporte(Boolean conGraficoReporte) {
		this.conGraficoReporte= conGraficoReporte;
	}
	
	
	public ArrayList<Reporte> gettiposArchivosReportes() {
		return this.tiposArchivosReportes;
	}
	
	public void settiposArchivosReportes(ArrayList<Reporte> tiposArchivosReportes) {
		this.tiposArchivosReportes = tiposArchivosReportes;
	}
	
	//TIPOS ARCHIVOS DINAMICOS
	public ArrayList<Reporte> gettiposArchivosReportesDinamico() {
		return this.tiposArchivosReportesDinamico;
	}
	
	public void settiposArchivosReportesDinamico(ArrayList<Reporte> tiposArchivosReportesDinamico) {
		this.tiposArchivosReportesDinamico = tiposArchivosReportesDinamico;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportes() {
		return this.tiposReportes;
	}
	
	public void settiposReportes(ArrayList<Reporte> tiposReportes) {
		this.tiposReportes = tiposReportes;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportesDinamico() {
		return this.tiposReportesDinamico;
	}
	
	public void settiposReportesDinamico(ArrayList<Reporte> tiposReportesDinamico) {
		this.tiposReportesDinamico = tiposReportesDinamico;
	}
	
	//TIPOS GRAFICOS REPORTES
	public ArrayList<Reporte> gettiposGraficosReportes() {
		return this.tiposGraficosReportes;
	}
	
	public void settiposGraficosReportes(ArrayList<Reporte> tiposGraficosReportes) {
		this.tiposGraficosReportes = tiposGraficosReportes;
	}
	
	public ArrayList<Reporte> gettiposPaginacion() {
		return this.tiposPaginacion;
	}
	
	public void settiposPaginacion(ArrayList<Reporte> tiposPaginacion) {
		this.tiposPaginacion = tiposPaginacion;
	}
	
	public ArrayList<Reporte> gettiposRelaciones() {
		return this.tiposRelaciones;
	}
	
	public void settiposRelaciones(ArrayList<Reporte> tiposRelaciones) {
		this.tiposRelaciones= tiposRelaciones;
	}
	
	public ArrayList<Reporte> gettiposAcciones() {
		return this.tiposAcciones;
	}
	
	public void settiposAcciones(ArrayList<Reporte> tiposAcciones) {
		this.tiposAcciones = tiposAcciones;
	}
	
	public ArrayList<Reporte> gettiposAccionesFormulario() {
		return this.tiposAccionesFormulario;
	}
	
	public void settiposAccionesFormulario(ArrayList<Reporte> tiposAccionesFormulario) {
		this.tiposAccionesFormulario = tiposAccionesFormulario;
	}
	
	public ArrayList<Reporte> gettiposSeleccionar() {
		return this.tiposSeleccionar;
	}
	
	public void settiposSeleccionar(ArrayList<Reporte> tiposSeleccionar) {
		this.tiposSeleccionar = tiposSeleccionar;
	}
	
	public ArrayList<Reporte> gettiposColumnasSelect() {
		return this.tiposColumnasSelect;
	}
	
	public void settiposColumnasSelect(ArrayList<Reporte> tiposColumnasSelect) {
		this.tiposColumnasSelect = tiposColumnasSelect;
	}
		
	public ArrayList<Reporte> gettiposRelacionesSelect() {
		return this.tiposRelacionesSelect;
	}
	
	public void settiposRelacionesSelect(ArrayList<Reporte> tiposRelacionesSelect) {
		this.tiposRelacionesSelect = tiposRelacionesSelect;
	}
	
	public Long getIIdUsuarioSesion() {
		return lIdUsuarioSesion;
	}

	public void setIIdUsuarioSesion(Long lIdUsuarioSesion) {
		this.lIdUsuarioSesion = lIdUsuarioSesion;
	}
	
	
	public List<Accion> getAccions() {
		return this.accions;
	}

	public void setAccions(List<Accion> accions) {
		this.accions = accions;
	}
	
	public List<Accion> getAccionsFormulario() {
		return this.accionsFormulario;
	}

	public void setAccionsFormulario(List<Accion> accionsFormulario) {
		this.accionsFormulario = accionsFormulario;
	}
	
	public String getsAccionMantenimiento() {
		return sAccionMantenimiento;
	}

	public void setsAccionMantenimiento(String sAccionMantenimiento) {
		this.sAccionMantenimiento = sAccionMantenimiento;
	}

	public String getsAccionBusqueda() {
		return sAccionBusqueda;
	}

	public void setsAccionBusqueda(String sAccionBusqueda) {
		this.sAccionBusqueda = sAccionBusqueda;
	}

	public String getsAccionAdicional() {
		return sAccionAdicional;
	}

	public void setsAccionAdicional(String sAccionAdicional) {
		this.sAccionAdicional = sAccionAdicional;
	}

	public String getsUltimaBusqueda() {
		return sUltimaBusqueda;
	}

	public void setsUltimaBusqueda(String sUltimaBusqueda) {
		this.sUltimaBusqueda = sUltimaBusqueda;
	}
	
	public String getsTipoArchivoReporte() {
		return sTipoArchivoReporte;
	}

	public void setsTipoArchivoReporte(String sTipoArchivoReporte) {
		this.sTipoArchivoReporte = sTipoArchivoReporte;
	}
	
	public String getsTipoArchivoReporteDinamico() {
		return sTipoArchivoReporteDinamico;
	}

	public void setsTipoArchivoReporteDinamico(String sTipoArchivoReporteDinamico) {
		this.sTipoArchivoReporteDinamico = sTipoArchivoReporteDinamico;
	}
	
	public String getsTipoReporte() {
		return sTipoReporte;
	}

	public void setsTipoReporte(String sTipoReporte) {
		this.sTipoReporte = sTipoReporte;
	}
	
	public String getsTipoReporteDinamico() {
		return sTipoReporteDinamico;
	}

	public void setsTipoReporteDinamico(String sTipoReporteDinamico) {
		this.sTipoReporteDinamico = sTipoReporteDinamico;
	}
	
	public String getsTipoGraficoReporte() {
		return sTipoGraficoReporte;
	}

	public void setsTipoGraficoReporte(String sTipoGraficoReporte) {
		this.sTipoGraficoReporte = sTipoGraficoReporte;
	}
	
	public String getsTipoPaginacion() {
		return sTipoPaginacion;
	}

	public void setsTipoPaginacion(String sTipoPaginacion) {
		this.sTipoPaginacion = sTipoPaginacion;
	}
	
	public String getsTipoRelacion() {
		return sTipoRelacion;
	}

	public void setsTipoRelacion(String sTipoRelacion) {
		this.sTipoRelacion = sTipoRelacion;
	}
	
	public String getsTipoAccion() {
		return sTipoAccion;
	}

	public void setsTipoAccion(String sTipoAccion) {
		this.sTipoAccion = sTipoAccion;
	}
	
	public String getsTipoAccionFormulario() {
		return sTipoAccionFormulario;
	}

	public void setsTipoAccionFormulario(String sTipoAccionFormulario) {
		this.sTipoAccionFormulario = sTipoAccionFormulario;
	}
	
	public String getsTipoSeleccionar() {
		return sTipoSeleccionar;
	}

	public void setsTipoSeleccionar(String sTipoSeleccionar) {
		this.sTipoSeleccionar = sTipoSeleccionar;
	}
	
	public String getsValorCampoGeneral() {
		return sValorCampoGeneral;
	}

	public void setsValorCampoGeneral(String sValorCampoGeneral) {
		this.sValorCampoGeneral = sValorCampoGeneral;
	}			

	public String getsDetalleReporte() {
		return sDetalleReporte;
	}

	public void setsDetalleReporte(String sDetalleReporte) {
		this.sDetalleReporte = sDetalleReporte;
	}
	
	
	public String getsTipoReporteExtra() {
		return sTipoReporteExtra;
	}

	public void setsTipoReporteExtra(String sTipoReporteExtra) {
		this.sTipoReporteExtra = sTipoReporteExtra;
	}
	
	public Boolean getesReporteDinamico() {
		return esReporteDinamico;
	}	
	
	public void setesReporteDinamico(Boolean esReporteDinamico) {
		this.esReporteDinamico = esReporteDinamico;
	}
	
	public Boolean getesRecargarFks() {
		return esRecargarFks;
	}	
	
	public void setesRecargarFks(Boolean esRecargarFks) {
		this.esRecargarFks = esRecargarFks;
	}
	
	public Boolean getesReporteAccionProceso() {
		return esReporteAccionProceso;
	}	
	
	public void setesReporteAccionProceso(Boolean esReporteAccionProceso) {
		this.esReporteAccionProceso= esReporteAccionProceso;
	}
		
	public PedidoCompraParameterReturnGeneral getPedidoCompraParameterGeneral() {
		return this.pedidocompraParameterGeneral;
	}
	
	public void setPedidoCompraParameterGeneral(PedidoCompraParameterReturnGeneral pedidocompraParameterGeneral) {
		this.pedidocompraParameterGeneral = pedidocompraParameterGeneral;
	}
	
	public String getsPathReporteDinamico() {
		return sPathReporteDinamico;
	}

	public void setsPathReporteDinamico(String sPathReporteDinamico) {
		this.sPathReporteDinamico = sPathReporteDinamico;
	}
		
	public Boolean getisMostrarNumeroPaginacion() {
		return isMostrarNumeroPaginacion;
	}

	public void setisMostrarNumeroPaginacion(Boolean isMostrarNumeroPaginacion) {
		this.isMostrarNumeroPaginacion = isMostrarNumeroPaginacion;
	}
	
	public Mensaje getMensaje() {
		return mensaje;
	}

	public void setMensaje(Mensaje mensaje) {
		this.mensaje = mensaje;
	}
	
	public Boolean getIsPermisoTodoPedidoCompra() {
		return isPermisoTodoPedidoCompra;
	}

	public void setIsPermisoTodoPedidoCompra(Boolean isPermisoTodoPedidoCompra) {
		this.isPermisoTodoPedidoCompra = isPermisoTodoPedidoCompra;
	}

	public Boolean getIsPermisoNuevoPedidoCompra() {
		return isPermisoNuevoPedidoCompra;
	}

	public void setIsPermisoNuevoPedidoCompra(Boolean isPermisoNuevoPedidoCompra) {
		this.isPermisoNuevoPedidoCompra = isPermisoNuevoPedidoCompra;
	}

	public Boolean getIsPermisoActualizarPedidoCompra() {
		return isPermisoActualizarPedidoCompra;
	}

	public void setIsPermisoActualizarPedidoCompra(Boolean isPermisoActualizarPedidoCompra) {
		this.isPermisoActualizarPedidoCompra = isPermisoActualizarPedidoCompra;
	}

	public Boolean getIsPermisoEliminarPedidoCompra() {
		return isPermisoEliminarPedidoCompra;
	}

	public void setIsPermisoEliminarPedidoCompra(Boolean isPermisoEliminarPedidoCompra) {
		this.isPermisoEliminarPedidoCompra = isPermisoEliminarPedidoCompra;
	}

	public Boolean getIsPermisoGuardarCambiosPedidoCompra() {
		return isPermisoGuardarCambiosPedidoCompra;
	}

	public void setIsPermisoGuardarCambiosPedidoCompra(Boolean isPermisoGuardarCambiosPedidoCompra) {
		this.isPermisoGuardarCambiosPedidoCompra = isPermisoGuardarCambiosPedidoCompra;
	}
	
	public Boolean getIsPermisoConsultaPedidoCompra() {
		return isPermisoConsultaPedidoCompra;
	}

	public void setIsPermisoConsultaPedidoCompra(Boolean isPermisoConsultaPedidoCompra) {
		this.isPermisoConsultaPedidoCompra = isPermisoConsultaPedidoCompra;
	}

	public Boolean getIsPermisoBusquedaPedidoCompra() {
		return isPermisoBusquedaPedidoCompra;
	}

	public void setIsPermisoBusquedaPedidoCompra(Boolean isPermisoBusquedaPedidoCompra) {
		this.isPermisoBusquedaPedidoCompra = isPermisoBusquedaPedidoCompra;
	}

	public Boolean getIsPermisoReportePedidoCompra() {
		return isPermisoReportePedidoCompra;
	}

	public void setIsPermisoReportePedidoCompra(Boolean isPermisoReportePedidoCompra) {
		this.isPermisoReportePedidoCompra = isPermisoReportePedidoCompra;
	}
	
	public Boolean getIsPermisoPaginacionMedioPedidoCompra() {
		return isPermisoPaginacionMedioPedidoCompra;
	}

	public void setIsPermisoPaginacionMedioPedidoCompra(Boolean isPermisoPaginacionMedioPedidoCompra) {
		this.isPermisoPaginacionMedioPedidoCompra = isPermisoPaginacionMedioPedidoCompra;
	}
	
	public Boolean getIsPermisoPaginacionTodoPedidoCompra() {
		return isPermisoPaginacionTodoPedidoCompra;
	}

	public void setIsPermisoPaginacionTodoPedidoCompra(Boolean isPermisoPaginacionTodoPedidoCompra) {
		this.isPermisoPaginacionTodoPedidoCompra = isPermisoPaginacionTodoPedidoCompra;
	}
	
	public Boolean getIsPermisoPaginacionAltoPedidoCompra() {
		return isPermisoPaginacionAltoPedidoCompra;
	}

	public void setIsPermisoPaginacionAltoPedidoCompra(Boolean isPermisoPaginacionAltoPedidoCompra) {
		this.isPermisoPaginacionAltoPedidoCompra = isPermisoPaginacionAltoPedidoCompra;
	}
	
	public Boolean getIsPermisoCopiarPedidoCompra() {
		return isPermisoCopiarPedidoCompra;
	}

	public void setIsPermisoCopiarPedidoCompra(Boolean isPermisoCopiarPedidoCompra) {
		this.isPermisoCopiarPedidoCompra = isPermisoCopiarPedidoCompra;
	}
	
	public Boolean getIsPermisoVerFormPedidoCompra() {
		return isPermisoVerFormPedidoCompra;
	}

	public void setIsPermisoVerFormPedidoCompra(Boolean isPermisoVerFormPedidoCompra) {
		this.isPermisoVerFormPedidoCompra = isPermisoVerFormPedidoCompra;
	}
	
	public Boolean getIsPermisoDuplicarPedidoCompra() {
		return isPermisoDuplicarPedidoCompra;
	}

	public void setIsPermisoDuplicarPedidoCompra(Boolean isPermisoDuplicarPedidoCompra) {
		this.isPermisoDuplicarPedidoCompra = isPermisoDuplicarPedidoCompra;
	}
	
	public Boolean getIsPermisoOrdenPedidoCompra() {
		return isPermisoOrdenPedidoCompra;
	}

	public void setIsPermisoOrdenPedidoCompra(Boolean isPermisoOrdenPedidoCompra) {
		this.isPermisoOrdenPedidoCompra = isPermisoOrdenPedidoCompra;
	}
	
	public String getsVisibilidadTablaBusquedas() {
		return sVisibilidadTablaBusquedas;
	}

	public void setsVisibilidadTablaBusquedas(String sVisibilidadTablaBusquedas) {
		this.sVisibilidadTablaBusquedas = sVisibilidadTablaBusquedas;
	}
	
	public String getsVisibilidadTablaElementos() {
		return sVisibilidadTablaElementos;
	}

	public void setsVisibilidadTablaElementos(String sVisibilidadTablaElementos) {
		this.sVisibilidadTablaElementos = sVisibilidadTablaElementos;
	}

	public String getsVisibilidadTablaAcciones() {
		return sVisibilidadTablaAcciones;
	}

	public void setsVisibilidadTablaAcciones(String sVisibilidadTablaAcciones) {
		this.sVisibilidadTablaAcciones = sVisibilidadTablaAcciones;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoPedidoCompra() {
		return isVisibilidadCeldaNuevoPedidoCompra;
	}

	public void setIsVisibilidadCeldaNuevoPedidoCompra(Boolean isVisibilidadCeldaNuevoPedidoCompra) {
		this.isVisibilidadCeldaNuevoPedidoCompra = isVisibilidadCeldaNuevoPedidoCompra;
	}
	
	public Boolean getIsVisibilidadCeldaDuplicarPedidoCompra() {
		return isVisibilidadCeldaDuplicarPedidoCompra;
	}

	public void setIsVisibilidadCeldaDuplicarPedidoCompra(Boolean isVisibilidadCeldaDuplicarPedidoCompra) {
		this.isVisibilidadCeldaDuplicarPedidoCompra = isVisibilidadCeldaDuplicarPedidoCompra;
	}
	
	public Boolean getIsVisibilidadCeldaCopiarPedidoCompra() {
		return isVisibilidadCeldaCopiarPedidoCompra;
	}

	public void setIsVisibilidadCeldaCopiarPedidoCompra(Boolean isVisibilidadCeldaCopiarPedidoCompra) {
		this.isVisibilidadCeldaCopiarPedidoCompra = isVisibilidadCeldaCopiarPedidoCompra;
	}
	
	public Boolean getIsVisibilidadCeldaVerFormPedidoCompra() {
		return isVisibilidadCeldaVerFormPedidoCompra;
	}

	public void setIsVisibilidadCeldaVerFormPedidoCompra(Boolean isVisibilidadCeldaVerFormPedidoCompra) {
		this.isVisibilidadCeldaVerFormPedidoCompra = isVisibilidadCeldaVerFormPedidoCompra;
	}
	
	public Boolean getIsVisibilidadCeldaOrdenPedidoCompra() {
		return isVisibilidadCeldaOrdenPedidoCompra;
	}

	public void setIsVisibilidadCeldaOrdenPedidoCompra(Boolean isVisibilidadCeldaOrdenPedidoCompra) {
		this.isVisibilidadCeldaOrdenPedidoCompra = isVisibilidadCeldaOrdenPedidoCompra;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoRelacionesPedidoCompra() {
		return isVisibilidadCeldaNuevoRelacionesPedidoCompra;
	}

	public void setIsVisibilidadCeldaNuevoRelacionesPedidoCompra(Boolean isVisibilidadCeldaNuevoRelacionesPedidoCompra) {
		this.isVisibilidadCeldaNuevoRelacionesPedidoCompra = isVisibilidadCeldaNuevoRelacionesPedidoCompra;
	}
	
	public Boolean getIsVisibilidadCeldaModificarPedidoCompra() {
		return isVisibilidadCeldaModificarPedidoCompra;
	}

	public void setIsVisibilidadCeldaModificarPedidoCompra(Boolean isVisibilidadCeldaModificarPedidoCompra) {
		this.isVisibilidadCeldaModificarPedidoCompra = isVisibilidadCeldaModificarPedidoCompra;
	}
	
	public Boolean getIsVisibilidadCeldaActualizarPedidoCompra() {
		return isVisibilidadCeldaActualizarPedidoCompra;
	}

	public void setIsVisibilidadCeldaActualizarPedidoCompra(Boolean isVisibilidadCeldaActualizarPedidoCompra) {
		this.isVisibilidadCeldaActualizarPedidoCompra = isVisibilidadCeldaActualizarPedidoCompra;
	}

	public Boolean getIsVisibilidadCeldaEliminarPedidoCompra() {
		return isVisibilidadCeldaEliminarPedidoCompra;
	}

	public void setIsVisibilidadCeldaEliminarPedidoCompra(Boolean isVisibilidadCeldaEliminarPedidoCompra) {
		this.isVisibilidadCeldaEliminarPedidoCompra = isVisibilidadCeldaEliminarPedidoCompra;
	}

	public Boolean getIsVisibilidadCeldaCancelarPedidoCompra() {
		return isVisibilidadCeldaCancelarPedidoCompra;
	}

	public void setIsVisibilidadCeldaCancelarPedidoCompra(Boolean isVisibilidadCeldaCancelarPedidoCompra) {
		this.isVisibilidadCeldaCancelarPedidoCompra = isVisibilidadCeldaCancelarPedidoCompra;
	}

	public Boolean getIsVisibilidadCeldaGuardarPedidoCompra() {
		return isVisibilidadCeldaGuardarPedidoCompra;
	}

	public void setIsVisibilidadCeldaGuardarPedidoCompra(Boolean isVisibilidadCeldaGuardarPedidoCompra) {
		this.isVisibilidadCeldaGuardarPedidoCompra = isVisibilidadCeldaGuardarPedidoCompra;
	}
	
	public Boolean getIsVisibilidadCeldaGuardarCambiosPedidoCompra() {
		return isVisibilidadCeldaGuardarCambiosPedidoCompra;
	}

	public void setIsVisibilidadCeldaGuardarCambiosPedidoCompra(Boolean isVisibilidadCeldaGuardarCambiosPedidoCompra) {
		this.isVisibilidadCeldaGuardarCambiosPedidoCompra = isVisibilidadCeldaGuardarCambiosPedidoCompra;
	}
		
	public PedidoCompraSessionBean getpedidocompraSessionBean() {
		return this.pedidocompraSessionBean;
	}
	
	public void setpedidocompraSessionBean(PedidoCompraSessionBean pedidocompraSessionBean) {
		this.pedidocompraSessionBean=pedidocompraSessionBean;
	}
	
	
	public Boolean getisVisibilidadFK_IdAnio() {
		return this.isVisibilidadFK_IdAnio;
	}

	public void setisVisibilidadFK_IdAnio(Boolean isVisibilidadFK_IdAnio) {
		this.isVisibilidadFK_IdAnio=isVisibilidadFK_IdAnio;
	}

	public Boolean getisVisibilidadFK_IdCliente() {
		return this.isVisibilidadFK_IdCliente;
	}

	public void setisVisibilidadFK_IdCliente(Boolean isVisibilidadFK_IdCliente) {
		this.isVisibilidadFK_IdCliente=isVisibilidadFK_IdCliente;
	}

	public Boolean getisVisibilidadFK_IdEjercicio() {
		return this.isVisibilidadFK_IdEjercicio;
	}

	public void setisVisibilidadFK_IdEjercicio(Boolean isVisibilidadFK_IdEjercicio) {
		this.isVisibilidadFK_IdEjercicio=isVisibilidadFK_IdEjercicio;
	}

	public Boolean getisVisibilidadFK_IdEmpleado() {
		return this.isVisibilidadFK_IdEmpleado;
	}

	public void setisVisibilidadFK_IdEmpleado(Boolean isVisibilidadFK_IdEmpleado) {
		this.isVisibilidadFK_IdEmpleado=isVisibilidadFK_IdEmpleado;
	}

	public Boolean getisVisibilidadFK_IdEmpresa() {
		return this.isVisibilidadFK_IdEmpresa;
	}

	public void setisVisibilidadFK_IdEmpresa(Boolean isVisibilidadFK_IdEmpresa) {
		this.isVisibilidadFK_IdEmpresa=isVisibilidadFK_IdEmpresa;
	}

	public Boolean getisVisibilidadFK_IdEstadoPedidoCompraEstadoPedoCompra() {
		return this.isVisibilidadFK_IdEstadoPedidoCompraEstadoPedoCompra;
	}

	public void setisVisibilidadFK_IdEstadoPedidoCompraEstadoPedoCompra(Boolean isVisibilidadFK_IdEstadoPedidoCompraEstadoPedoCompra) {
		this.isVisibilidadFK_IdEstadoPedidoCompraEstadoPedoCompra=isVisibilidadFK_IdEstadoPedidoCompraEstadoPedoCompra;
	}

	public Boolean getisVisibilidadFK_IdFormato() {
		return this.isVisibilidadFK_IdFormato;
	}

	public void setisVisibilidadFK_IdFormato(Boolean isVisibilidadFK_IdFormato) {
		this.isVisibilidadFK_IdFormato=isVisibilidadFK_IdFormato;
	}

	public Boolean getisVisibilidadFK_IdMes() {
		return this.isVisibilidadFK_IdMes;
	}

	public void setisVisibilidadFK_IdMes(Boolean isVisibilidadFK_IdMes) {
		this.isVisibilidadFK_IdMes=isVisibilidadFK_IdMes;
	}

	public Boolean getisVisibilidadFK_IdModulo() {
		return this.isVisibilidadFK_IdModulo;
	}

	public void setisVisibilidadFK_IdModulo(Boolean isVisibilidadFK_IdModulo) {
		this.isVisibilidadFK_IdModulo=isVisibilidadFK_IdModulo;
	}

	public Boolean getisVisibilidadFK_IdMoneda() {
		return this.isVisibilidadFK_IdMoneda;
	}

	public void setisVisibilidadFK_IdMoneda(Boolean isVisibilidadFK_IdMoneda) {
		this.isVisibilidadFK_IdMoneda=isVisibilidadFK_IdMoneda;
	}

	public Boolean getisVisibilidadFK_IdPeriodo() {
		return this.isVisibilidadFK_IdPeriodo;
	}

	public void setisVisibilidadFK_IdPeriodo(Boolean isVisibilidadFK_IdPeriodo) {
		this.isVisibilidadFK_IdPeriodo=isVisibilidadFK_IdPeriodo;
	}

	public Boolean getisVisibilidadFK_IdSucursal() {
		return this.isVisibilidadFK_IdSucursal;
	}

	public void setisVisibilidadFK_IdSucursal(Boolean isVisibilidadFK_IdSucursal) {
		this.isVisibilidadFK_IdSucursal=isVisibilidadFK_IdSucursal;
	}

	public Boolean getisVisibilidadFK_IdTipoCambio() {
		return this.isVisibilidadFK_IdTipoCambio;
	}

	public void setisVisibilidadFK_IdTipoCambio(Boolean isVisibilidadFK_IdTipoCambio) {
		this.isVisibilidadFK_IdTipoCambio=isVisibilidadFK_IdTipoCambio;
	}

	public Boolean getisVisibilidadFK_IdUsuario() {
		return this.isVisibilidadFK_IdUsuario;
	}

	public void setisVisibilidadFK_IdUsuario(Boolean isVisibilidadFK_IdUsuario) {
		this.isVisibilidadFK_IdUsuario=isVisibilidadFK_IdUsuario;
	}

	
	
	public void setVariablesFormularioToObjetoActualForeignKeysPedidoCompra(PedidoCompra pedidocompra)throws Exception {
		try {
			
				this.setActualParaGuardarEmpresaForeignKey(pedidocompra,null);
				this.setActualParaGuardarSucursalForeignKey(pedidocompra,null);
				this.setActualParaGuardarModuloForeignKey(pedidocompra,null);
				this.setActualParaGuardarEjercicioForeignKey(pedidocompra,null);
				this.setActualParaGuardarPeriodoForeignKey(pedidocompra,null);
				this.setActualParaGuardarAnioForeignKey(pedidocompra,null);
				this.setActualParaGuardarMesForeignKey(pedidocompra,null);
				this.setActualParaGuardarClienteForeignKey(pedidocompra,null);
				this.setActualParaGuardarUsuarioForeignKey(pedidocompra,null);
				this.setActualParaGuardarMonedaForeignKey(pedidocompra,null);
				this.setActualParaGuardarEstadoPedidoCompraForeignKey(pedidocompra,null);
				this.setActualParaGuardarEmpleadoForeignKey(pedidocompra,null);
				this.setActualParaGuardarFormatoForeignKey(pedidocompra,null);
				this.setActualParaGuardarTipoCambioForeignKey(pedidocompra,null);
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarLicenciaCliente(DatosCliente datosCliente) throws Exception {
		Boolean existe=false;
			
		try {
				InputStream reportFile=null;
				
				String sPath=this.parametroGeneralUsuario.getpath_exportar()+"erp_bydan/license/license.xml";
				
				reportFile = new FileInputStream(sPath);
				
				Document documentBuilder=null;
				
				if(this.constantes2.DOCUMENT_BUILDER==null) {
					documentBuilder=Funciones2.parseXml(reportFile);
				} else {
					documentBuilder=this.constantes2.DOCUMENT_BUILDER;
				}
				
				//GlobalSeguridad.readXml(documentBuilder);
				
				String sNamePCServerLicencia="";
				String sClaveSistemaLicencia="";
				Date dFechaServerLicencia=null;
				
				//CARGAR ELEMENTOS DE LICENCIA
				NodeList nodeList = documentBuilder.getElementsByTagName("Licencia");
				
				for (int iIndice = 0; iIndice < nodeList.getLength(); iIndice++) {
					Node node = nodeList.item(iIndice);
				
					if (node.getNodeType() == Node.ELEMENT_NODE) {
						Element element = (Element) node;
						 
						sNamePCServerLicencia=element.getElementsByTagName("NombrePc").item(0).getTextContent();
						sClaveSistemaLicencia=element.getElementsByTagName("ClaveSistema").item(0).getTextContent();
						
						existe=true;
						break;
					}
				}														
			
				
			if(existe) {
				datosCliente.setsClaveSistema(sClaveSistemaLicencia);
				
				if(!datosCliente.getsNamePCServer().equals(sNamePCServerLicencia)
					&& !datosCliente.getsNamePCServer().equals("")) {
					
					datosCliente.setsNamePCServer(sNamePCServerLicencia);
				}
			} else {
				throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
			}
		} catch(Exception e) {
			throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
		}						
	}
	
	public void cargarDatosCliente() throws Exception {
		String sPrimerMacAddress="";		
		String sHostName="";		 
		String sHostIp="";		  
		String sHostUser="";
		
		
		sPrimerMacAddress=FuncionesNetwork.getPrimerMacAddress();		
		sHostName=FuncionesNetwork.getHostName();		 
		sHostIp=FuncionesNetwork.getHostIp();		  
		sHostUser=FuncionesNetwork.getHostUser();
		
		
		this.datosCliente=new DatosCliente();
		if(lIdUsuarioSesion!=null){datosCliente.setIdUsuario(this.lIdUsuarioSesion);}
		
		//SERVIDOR WEB Y TALVEZ SERVIDOR SWING WINDOWS
		this.datosCliente.setsUsuarioPCServer(sHostUser);
		this.datosCliente.setsNamePCServer(sHostName);
		this.datosCliente.setsIPPCServer(sHostIp);
		this.datosCliente.setsMacAddressPCServer(sPrimerMacAddress);
			
			//CLIENTE SWING WINDOWS
			this.datosCliente.setIsClienteWeb(false);
			
			this.datosCliente.setsUsuarioPC(sHostUser);
			this.datosCliente.setsNamePC(sHostName);
			this.datosCliente.setsIPPC(sHostIp);
			this.datosCliente.setsMacAddressPC(sPrimerMacAddress);	
			
			
			//this.cargarLicenciaCliente(this.datosCliente);
			
	}
	
	public void bugActualizarReferenciaActual(PedidoCompra pedidocompra,PedidoCompra pedidocompraAux) throws Exception {
		//ARCHITECTURE		
		//EL ID NEGATIVO GUARDADO EN ORIGINAL SIRVE PARA VERIFICAR Y ACTUALIZAR EL REGISTRO NUEVO (ID,VERSIONROW)
		this.setCamposBaseDesdeOriginalPedidoCompra(pedidocompra);
					
		//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
		pedidocompraAux.setId(pedidocompra.getId());
		pedidocompraAux.setVersionRow(pedidocompra.getVersionRow());					
	}
	
	public void ejecutarMantenimiento(MaintenanceType maintenanceType)throws Exception {	
		try	{								
			
			//this.startProcessPedidoCompra();
		
			int intSelectedRow = this.jTableDatosPedidoCompra.getSelectedRow();	       
			
			//PUEDE SER -1 CUANDO SE ELIMINA EN GUARDAR CAMBIOS
			if(intSelectedRow>=0 && maintenanceType!=MaintenanceType.GUARDARCAMBIOS) {
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
					
				//ARCHITECTURE
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompra =(PedidoCompra) this.pedidocompraLogic.getPedidoCompras().toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
					this.pedidocompra =(PedidoCompra) this.pedidocompras.toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
				}
				
				//ARCHITECTURE
				
				if(PedidoCompraJInternalFrame.ISBINDING_MANUAL_TABLA) {
					//this.setVariablesFormularioToObjetoActualPedidoCompra(this.pedidocompra,true);
				}
				
				this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompra(this.pedidocompra);
			}
			
			//LUEGO DE TRAER DATOS CORRESPONDIENTES QUE COINCIDA LISTA TABLA QUITO FILA TOTALES
			if(this.conTotales) {
				//MEJOR LO DEJO, SI EXISTE EXCEPCION SE PIEDE FILA TOTALES Y ORDEN INDICE FILA ACTUAL
				//this.quitarFilaTotales();
			}
			
			this.cargarDatosCliente();
			
			this.datosDeep=new DatosDeep();
			
			//SE CAMBIA ESTADOS CON ERROR, ENTONCES SE EJECUTA ANTES
			//this.invalidValues = pedidocompraValidator.getInvalidValues(this.pedidocompra);
			
			//if(this.invalidValues==null || this.invalidValues.length<=0) {
			
			pedidocompraLogic.setDatosCliente(datosCliente);
			pedidocompraLogic.setIsConDeep(false);
			
			if(maintenanceType==MaintenanceType.NUEVO) {
				pedidocompraAux=new  PedidoCompra();
				
				pedidocompraAux.setIsNew(true);
				pedidocompraAux.setIsChanged(true);
				
				pedidocompraAux.setPedidoCompraOriginal(this.pedidocompra);
				
				pedidocompraAux.setId(this.pedidocompra.getId());	
				pedidocompraAux.setVersionRow(this.pedidocompra.getVersionRow());	
				pedidocompraAux.setid_empresa(this.pedidocompra.getid_empresa());	
				pedidocompraAux.setid_sucursal(this.pedidocompra.getid_sucursal());	
				pedidocompraAux.setid_modulo(this.pedidocompra.getid_modulo());	
				pedidocompraAux.setid_ejercicio(this.pedidocompra.getid_ejercicio());	
				pedidocompraAux.setid_periodo(this.pedidocompra.getid_periodo());	
				pedidocompraAux.setid_anio(this.pedidocompra.getid_anio());	
				pedidocompraAux.setid_mes(this.pedidocompra.getid_mes());	
				pedidocompraAux.setnumero_secuencial(this.pedidocompra.getnumero_secuencial());	
				pedidocompraAux.setid_cliente(this.pedidocompra.getid_cliente());	
				pedidocompraAux.setid_usuario(this.pedidocompra.getid_usuario());	
				pedidocompraAux.setid_moneda(this.pedidocompra.getid_moneda());	
				pedidocompraAux.setid_estado_pedido_compra(this.pedidocompra.getid_estado_pedido_compra());	
				pedidocompraAux.settotal(this.pedidocompra.gettotal());	
				pedidocompraAux.setfecha(this.pedidocompra.getfecha());	
				pedidocompraAux.setid_empleado(this.pedidocompra.getid_empleado());	
				pedidocompraAux.setresponsable(this.pedidocompra.getresponsable());	
				pedidocompraAux.setsolicitado_por(this.pedidocompra.getsolicitado_por());	
				pedidocompraAux.setmotivo_solicitud(this.pedidocompra.getmotivo_solicitud());	
				pedidocompraAux.setarea_solicitud(this.pedidocompra.getarea_solicitud());	
				pedidocompraAux.setpara_uso_de(this.pedidocompra.getpara_uso_de());	
				pedidocompraAux.setlugar_entrega(this.pedidocompra.getlugar_entrega());	
				pedidocompraAux.setdescripcion(this.pedidocompra.getdescripcion());	
				pedidocompraAux.setfecha_emision(this.pedidocompra.getfecha_emision());	
				pedidocompraAux.setfecha_entrega(this.pedidocompra.getfecha_entrega());	
				
				if(this.pedidocompra.getid_formato()!=null && this.pedidocompra.getid_formato()>0L) {
					pedidocompraAux.setid_formato(this.pedidocompra.getid_formato());
				} else {
					pedidocompraAux.setid_formato(null);
				}	
				
				if(this.pedidocompra.getid_tipo_cambio()!=null && this.pedidocompra.getid_tipo_cambio()>0L) {
					pedidocompraAux.setid_tipo_cambio(this.pedidocompra.getid_tipo_cambio());
				} else {
					pedidocompraAux.setid_tipo_cambio(null);
				}	
								
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.pedidocompraSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.pedidocompraSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(pedidocompraAux,pedidocompraLogic.getPedidoCompras());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(pedidocompraAux,pedidocompras);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote  && !this.pedidocompraSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.pedidocompraSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidocompraLogic.savePedidoCompras();//WithConnection
						//pedidocompraLogic.getSetVersionRowPedidoCompras();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE		
					
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.pedidocompra,pedidocompraAux);
					
					this.refrescarForeignKeysDescripcionesPedidoCompra();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.pedidocompraSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
							this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraBeanSwingJInternalFrame.detallepedidocompraLogic.getDetallePedidoCompras().addAll(this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraBeanSwingJInternalFrame.detallepedidocomprasEliminados);
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
							this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraBeanSwingJInternalFrame.detallepedidocompras.addAll(this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraBeanSwingJInternalFrame.detallepedidocomprasEliminados);
						}
						//ARCHITECTURE	
						
						if(!this.pedidocompraSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
								if(this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraBeanSwingJInternalFrame.quitarFilaTotales();*/}
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
								if(this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraBeanSwingJInternalFrame.quitarFilaTotales();*/}	
							}
							//ARCHITECTURE
												
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								pedidocompraLogic.savePedidoCompraRelaciones(pedidocompraAux,this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraBeanSwingJInternalFrame.detallepedidocompraLogic.getDetallePedidoCompras());//WithConnection
								//pedidocompraLogic.getSetVersionRowPedidoCompras();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.pedidocompra,pedidocompraAux);
					
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraBeanSwingJInternalFrame.detallepedidocompraLogic.setDetallePedidoCompras(new ArrayList<DetallePedidoCompra>());
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraBeanSwingJInternalFrame.detallepedidocompras= new ArrayList<DetallePedidoCompra>();
							}
							//ARCHITECTURE	
						} else {
							
							

							if(this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraBeanSwingJInternalFrame.quitarFilaTotales();}
							pedidocompraAux.setDetallePedidoCompras(this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraBeanSwingJInternalFrame.detallepedidocompraLogic.getDetallePedidoCompras());
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.pedidocompraSessionBean.getEstaModoGuardarRelaciones() 
									|| this.pedidocompraSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(pedidocompraAux,pedidocompraLogic.getPedidoCompras());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(pedidocompraAux,pedidocompras);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.pedidocompra,pedidocompraAux);												
						}
					}
				}
			} else if(maintenanceType==MaintenanceType.ACTUALIZAR) {
				pedidocompraAux=new  PedidoCompra();
				
				//PUEDE QUE SE ACTUALIZE ALGUN REGISTRO NUEVO
				if(!this.pedidocompraSessionBean.getEsGuardarRelacionado() 
					|| (this.pedidocompraSessionBean.getEsGuardarRelacionado() && this.pedidocompra.getId()>=0)) {
						
					pedidocompraAux.setIsNew(false);
				}
				
				pedidocompraAux.setIsDeleted(false);
			
				pedidocompraAux.setId(this.pedidocompra.getId());	
				pedidocompraAux.setVersionRow(this.pedidocompra.getVersionRow());	
				pedidocompraAux.setid_empresa(this.pedidocompra.getid_empresa());	
				pedidocompraAux.setid_sucursal(this.pedidocompra.getid_sucursal());	
				pedidocompraAux.setid_modulo(this.pedidocompra.getid_modulo());	
				pedidocompraAux.setid_ejercicio(this.pedidocompra.getid_ejercicio());	
				pedidocompraAux.setid_periodo(this.pedidocompra.getid_periodo());	
				pedidocompraAux.setid_anio(this.pedidocompra.getid_anio());	
				pedidocompraAux.setid_mes(this.pedidocompra.getid_mes());	
				pedidocompraAux.setnumero_secuencial(this.pedidocompra.getnumero_secuencial());	
				pedidocompraAux.setid_cliente(this.pedidocompra.getid_cliente());	
				pedidocompraAux.setid_usuario(this.pedidocompra.getid_usuario());	
				pedidocompraAux.setid_moneda(this.pedidocompra.getid_moneda());	
				pedidocompraAux.setid_estado_pedido_compra(this.pedidocompra.getid_estado_pedido_compra());	
				pedidocompraAux.settotal(this.pedidocompra.gettotal());	
				pedidocompraAux.setfecha(this.pedidocompra.getfecha());	
				pedidocompraAux.setid_empleado(this.pedidocompra.getid_empleado());	
				pedidocompraAux.setresponsable(this.pedidocompra.getresponsable());	
				pedidocompraAux.setsolicitado_por(this.pedidocompra.getsolicitado_por());	
				pedidocompraAux.setmotivo_solicitud(this.pedidocompra.getmotivo_solicitud());	
				pedidocompraAux.setarea_solicitud(this.pedidocompra.getarea_solicitud());	
				pedidocompraAux.setpara_uso_de(this.pedidocompra.getpara_uso_de());	
				pedidocompraAux.setlugar_entrega(this.pedidocompra.getlugar_entrega());	
				pedidocompraAux.setdescripcion(this.pedidocompra.getdescripcion());	
				pedidocompraAux.setfecha_emision(this.pedidocompra.getfecha_emision());	
				pedidocompraAux.setfecha_entrega(this.pedidocompra.getfecha_entrega());	
				
				if(this.pedidocompra.getid_formato()!=null && this.pedidocompra.getid_formato()>0L) {
					pedidocompraAux.setid_formato(this.pedidocompra.getid_formato());
				} else {
					pedidocompraAux.setid_formato(null);
				}	
				
				if(this.pedidocompra.getid_tipo_cambio()!=null && this.pedidocompra.getid_tipo_cambio()>0L) {
					pedidocompraAux.setid_tipo_cambio(this.pedidocompra.getid_tipo_cambio());
				} else {
					pedidocompraAux.setid_tipo_cambio(null);
				}	
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(pedidocompraAux,pedidocompraLogic.getPedidoCompras());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(pedidocompraAux,pedidocompras);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote && !this.pedidocompraSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.pedidocompraSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidocompraLogic.savePedidoCompras();//WithConnection
						//pedidocompraLogic.getSetVersionRowPedidoCompras();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
					
					//TALVEZ ESTA DEMAS POR SER UPDATE
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.pedidocompra,pedidocompraAux);
					
					this.refrescarForeignKeysDescripcionesPedidoCompra();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.pedidocompraSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
							this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraBeanSwingJInternalFrame.detallepedidocompraLogic.getDetallePedidoCompras().addAll(this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraBeanSwingJInternalFrame.detallepedidocomprasEliminados);
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
							this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraBeanSwingJInternalFrame.detallepedidocompras.addAll(this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraBeanSwingJInternalFrame.detallepedidocomprasEliminados);
						}
						//ARCHITECTURE
						
						if(!this.pedidocompraSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
								if(this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraBeanSwingJInternalFrame.quitarFilaTotales();*/}
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
								if(this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraBeanSwingJInternalFrame.quitarFilaTotales();*/}	
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								pedidocompraLogic.savePedidoCompraRelaciones(pedidocompraAux,this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraBeanSwingJInternalFrame.detallepedidocompraLogic.getDetallePedidoCompras());//WithConnection
								//pedidocompraLogic.getSetVersionRowPedidoCompras();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.pedidocompra,pedidocompraAux);
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraBeanSwingJInternalFrame.detallepedidocompraLogic.setDetallePedidoCompras(new ArrayList<DetallePedidoCompra>());
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraBeanSwingJInternalFrame.detallepedidocompras= new ArrayList<DetallePedidoCompra>();
							}
							//ARCHITECTURE
						} else {
							
							

							if(this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraBeanSwingJInternalFrame.quitarFilaTotales();}
							pedidocompraAux.setDetallePedidoCompras(this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraBeanSwingJInternalFrame.detallepedidocompraLogic.getDetallePedidoCompras());
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.pedidocompraSessionBean.getEstaModoGuardarRelaciones() 
									|| this.pedidocompraSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(pedidocompraAux,pedidocompraLogic.getPedidoCompras());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(pedidocompraAux,pedidocompras);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.pedidocompra,pedidocompraAux);
					
						}
					}
				}				
			} else if(maintenanceType==MaintenanceType.ELIMINAR) {
				pedidocompraAux=new  PedidoCompra();
				
				pedidocompraAux.setIsNew(false);
				pedidocompraAux.setIsChanged(false);
				
				pedidocompraAux.setIsDeleted(true);
				
				pedidocompraAux.setId(this.pedidocompra.getId());	
				pedidocompraAux.setVersionRow(this.pedidocompra.getVersionRow());	
				pedidocompraAux.setid_empresa(this.pedidocompra.getid_empresa());	
				pedidocompraAux.setid_sucursal(this.pedidocompra.getid_sucursal());	
				pedidocompraAux.setid_modulo(this.pedidocompra.getid_modulo());	
				pedidocompraAux.setid_ejercicio(this.pedidocompra.getid_ejercicio());	
				pedidocompraAux.setid_periodo(this.pedidocompra.getid_periodo());	
				pedidocompraAux.setid_anio(this.pedidocompra.getid_anio());	
				pedidocompraAux.setid_mes(this.pedidocompra.getid_mes());	
				pedidocompraAux.setnumero_secuencial(this.pedidocompra.getnumero_secuencial());	
				pedidocompraAux.setid_cliente(this.pedidocompra.getid_cliente());	
				pedidocompraAux.setid_usuario(this.pedidocompra.getid_usuario());	
				pedidocompraAux.setid_moneda(this.pedidocompra.getid_moneda());	
				pedidocompraAux.setid_estado_pedido_compra(this.pedidocompra.getid_estado_pedido_compra());	
				pedidocompraAux.settotal(this.pedidocompra.gettotal());	
				pedidocompraAux.setfecha(this.pedidocompra.getfecha());	
				pedidocompraAux.setid_empleado(this.pedidocompra.getid_empleado());	
				pedidocompraAux.setresponsable(this.pedidocompra.getresponsable());	
				pedidocompraAux.setsolicitado_por(this.pedidocompra.getsolicitado_por());	
				pedidocompraAux.setmotivo_solicitud(this.pedidocompra.getmotivo_solicitud());	
				pedidocompraAux.setarea_solicitud(this.pedidocompra.getarea_solicitud());	
				pedidocompraAux.setpara_uso_de(this.pedidocompra.getpara_uso_de());	
				pedidocompraAux.setlugar_entrega(this.pedidocompra.getlugar_entrega());	
				pedidocompraAux.setdescripcion(this.pedidocompra.getdescripcion());	
				pedidocompraAux.setfecha_emision(this.pedidocompra.getfecha_emision());	
				pedidocompraAux.setfecha_entrega(this.pedidocompra.getfecha_entrega());	
				
				if(this.pedidocompra.getid_formato()!=null && this.pedidocompra.getid_formato()>0L) {
					pedidocompraAux.setid_formato(this.pedidocompra.getid_formato());
				} else {
					pedidocompraAux.setid_formato(null);
				}	
				
				if(this.pedidocompra.getid_tipo_cambio()!=null && this.pedidocompra.getid_tipo_cambio()>0L) {
					pedidocompraAux.setid_tipo_cambio(this.pedidocompra.getid_tipo_cambio());
				} else {
					pedidocompraAux.setid_tipo_cambio(null);
				}	
				
				if(this.pedidocompraSessionBean.getEsGuardarRelacionado()) {
					//ELEMENTO ACTUAL NO SE HA INGRESADO AL SISTEMA, NO SE PUEDE ELIMINAR ALGO QUE NO EXISTE
					if(this.pedidocompraAux.getId()>=0) {	
						this.pedidocomprasEliminados.add(pedidocompraAux);											
					}
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					actualizarLista(pedidocompraAux,pedidocompraLogic.getPedidoCompras());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(pedidocompraAux,pedidocompras);
				}
				//ARCHITECTURE
				
				
				if(!isGuardarCambiosEnLote && !this.pedidocompraSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.pedidocompraSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidocompraLogic.savePedidoCompras();//WithConnection
						//pedidocompraLogic.getSetVersionRowPedidoCompras();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.pedidocompraSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
							this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraBeanSwingJInternalFrame.detallepedidocompraLogic.getDetallePedidoCompras().addAll(this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraBeanSwingJInternalFrame.detallepedidocomprasEliminados);
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
							this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraBeanSwingJInternalFrame.detallepedidocompras.addAll(this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraBeanSwingJInternalFrame.detallepedidocomprasEliminados);
						}
						//ARCHITECTURE
						
						
						if(!this.pedidocompraSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
								if(this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraBeanSwingJInternalFrame.quitarFilaTotales();*/}
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
								if(this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraBeanSwingJInternalFrame.quitarFilaTotales();*/}	
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								pedidocompraLogic.savePedidoCompraRelaciones(pedidocompraAux,this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraBeanSwingJInternalFrame.detallepedidocompraLogic.getDetallePedidoCompras());//WithConnection
								//pedidocompraLogic.getSetVersionRowPedidoCompras();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraBeanSwingJInternalFrame.detallepedidocompraLogic.setDetallePedidoCompras(new ArrayList<DetallePedidoCompra>());
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraBeanSwingJInternalFrame.detallepedidocompras= new ArrayList<DetallePedidoCompra>();
							}
							//ARCHITECTURE
						}
					}  else {
							
						

							if(this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraBeanSwingJInternalFrame.quitarFilaTotales();}
							pedidocompraAux.setDetallePedidoCompras(this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraBeanSwingJInternalFrame.detallepedidocompraLogic.getDetallePedidoCompras());
								
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							if(this.pedidocompraSessionBean.getEstaModoGuardarRelaciones() 
								|| this.pedidocompraSessionBean.getEsGuardarRelacionado())	{
								actualizarLista(pedidocompraAux,pedidocompraLogic.getPedidoCompras());
							}
						} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
							actualizarLista(pedidocompraAux,pedidocompras);
						}
						//ARCHITECTURE
					}
				}				
			} else if(maintenanceType==MaintenanceType.GUARDARCAMBIOS) {		
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.getPedidoCompras().addAll(this.pedidocomprasEliminados);
					
					pedidocompraLogic.savePedidoCompras();//WithConnection
					//pedidocompraLogic.getSetVersionRowPedidoCompras();//WithConnection
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}	
				//ARCHITECTURE
				this.refrescarForeignKeysDescripcionesPedidoCompra();
				
				this.pedidocomprasEliminados= new ArrayList<PedidoCompra>();		
			}
			
			if(this.pedidocompraSessionBean.getEsGuardarRelacionado()) {
				 this.crearFilaTotales();
			}
			
			
									
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.pedidocompraSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				if(!this.isPostAccionSinMensaje) {
					JOptionPane.showMessageDialog(this,"Pedido Compra GUARDADO CORRECTAMENTE","MANTENIMIENTO DE Pedido Compra",JOptionPane.INFORMATION_MESSAGE);
					if(maintenanceType==MaintenanceType.NUEVO || maintenanceType==MaintenanceType.ACTUALIZAR) {
						//CUANDO ES NUEVO SE PIERDE REFERENCIA NO SE PORQUE
						this.pedidocompra=pedidocompraAux;
					}
				}
			}
			
			this.isErrorGuardar=false;
			
			this.inicializarInvalidValues();
		/*
		} else {
			this.mostrarInvalidValues();	
		}
		*/
			
		} catch(Exception e) {
			this.isErrorGuardar=true;
			
			this.crearFilaTotales();
			
			throw e;
		} finally {
      		//this.finishProcessPedidoCompra();
      	}
		
	}	
	
	public void actualizarRelaciones(PedidoCompra pedidocompraLocal) throws Exception {
		
		if(this.pedidocompraSessionBean.getConGuardarRelaciones()) {			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
			
				pedidocompraLocal.setDetallePedidoCompras(this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraBeanSwingJInternalFrame.detallepedidocompraLogic.getDetallePedidoCompras());
			
			} else {
			
				pedidocompraLocal.setDetallePedidoCompras(this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraBeanSwingJInternalFrame.detallepedidocompras);	
			}
		}
	}
	
	public void actualizarRelacionFkPadreActual(PedidoCompra pedidocompraLocal) throws Exception {	
		if(this.pedidocompraSessionBean.getEsGuardarRelacionado()) {			
			
		
			if(this.jInternalFrameParent.getClass().equals(EmpresaDetalleFormJInternalFrame.class)) {
				EmpresaBeanSwingJInternalFrame empresaBeanSwingJInternalFrameLocal=(EmpresaBeanSwingJInternalFrame) ((EmpresaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				empresaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEmpresa(empresaBeanSwingJInternalFrameLocal.getempresa(),true);
				empresaBeanSwingJInternalFrameLocal.actualizarLista(empresaBeanSwingJInternalFrameLocal.empresa,this.empresasForeignKey);

				empresaBeanSwingJInternalFrameLocal.actualizarRelaciones(empresaBeanSwingJInternalFrameLocal.empresa);

				pedidocompraLocal.setEmpresa(empresaBeanSwingJInternalFrameLocal.empresa);

				this.addItemDefectoCombosForeignKeyEmpresa();
				this.cargarCombosFrameEmpresasForeignKey("Formulario");
				this.setActualEmpresaForeignKey(empresaBeanSwingJInternalFrameLocal.empresa.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(SucursalDetalleFormJInternalFrame.class)) {
				SucursalBeanSwingJInternalFrame sucursalBeanSwingJInternalFrameLocal=(SucursalBeanSwingJInternalFrame) ((SucursalDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				sucursalBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoSucursal(sucursalBeanSwingJInternalFrameLocal.getsucursal(),true);
				sucursalBeanSwingJInternalFrameLocal.actualizarLista(sucursalBeanSwingJInternalFrameLocal.sucursal,this.sucursalsForeignKey);

				sucursalBeanSwingJInternalFrameLocal.actualizarRelaciones(sucursalBeanSwingJInternalFrameLocal.sucursal);

				pedidocompraLocal.setSucursal(sucursalBeanSwingJInternalFrameLocal.sucursal);

				this.addItemDefectoCombosForeignKeySucursal();
				this.cargarCombosFrameSucursalsForeignKey("Formulario");
				this.setActualSucursalForeignKey(sucursalBeanSwingJInternalFrameLocal.sucursal.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(ModuloDetalleFormJInternalFrame.class)) {
				ModuloBeanSwingJInternalFrame moduloBeanSwingJInternalFrameLocal=(ModuloBeanSwingJInternalFrame) ((ModuloDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				moduloBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoModulo(moduloBeanSwingJInternalFrameLocal.getmodulo(),true);
				moduloBeanSwingJInternalFrameLocal.actualizarLista(moduloBeanSwingJInternalFrameLocal.modulo,this.modulosForeignKey);

				moduloBeanSwingJInternalFrameLocal.actualizarRelaciones(moduloBeanSwingJInternalFrameLocal.modulo);

				pedidocompraLocal.setModulo(moduloBeanSwingJInternalFrameLocal.modulo);

				this.addItemDefectoCombosForeignKeyModulo();
				this.cargarCombosFrameModulosForeignKey("Formulario");
				this.setActualModuloForeignKey(moduloBeanSwingJInternalFrameLocal.modulo.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EjercicioDetalleFormJInternalFrame.class)) {
				EjercicioBeanSwingJInternalFrame ejercicioBeanSwingJInternalFrameLocal=(EjercicioBeanSwingJInternalFrame) ((EjercicioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				ejercicioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEjercicio(ejercicioBeanSwingJInternalFrameLocal.getejercicio(),true);
				ejercicioBeanSwingJInternalFrameLocal.actualizarLista(ejercicioBeanSwingJInternalFrameLocal.ejercicio,this.ejerciciosForeignKey);

				ejercicioBeanSwingJInternalFrameLocal.actualizarRelaciones(ejercicioBeanSwingJInternalFrameLocal.ejercicio);

				pedidocompraLocal.setEjercicio(ejercicioBeanSwingJInternalFrameLocal.ejercicio);

				this.addItemDefectoCombosForeignKeyEjercicio();
				this.cargarCombosFrameEjerciciosForeignKey("Formulario");
				this.setActualEjercicioForeignKey(ejercicioBeanSwingJInternalFrameLocal.ejercicio.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(PeriodoDetalleFormJInternalFrame.class)) {
				PeriodoBeanSwingJInternalFrame periodoBeanSwingJInternalFrameLocal=(PeriodoBeanSwingJInternalFrame) ((PeriodoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				periodoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoPeriodo(periodoBeanSwingJInternalFrameLocal.getperiodo(),true);
				periodoBeanSwingJInternalFrameLocal.actualizarLista(periodoBeanSwingJInternalFrameLocal.periodo,this.periodosForeignKey);

				periodoBeanSwingJInternalFrameLocal.actualizarRelaciones(periodoBeanSwingJInternalFrameLocal.periodo);

				pedidocompraLocal.setPeriodo(periodoBeanSwingJInternalFrameLocal.periodo);

				this.addItemDefectoCombosForeignKeyPeriodo();
				this.cargarCombosFramePeriodosForeignKey("Formulario");
				this.setActualPeriodoForeignKey(periodoBeanSwingJInternalFrameLocal.periodo.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(AnioDetalleFormJInternalFrame.class)) {
				AnioBeanSwingJInternalFrame anioBeanSwingJInternalFrameLocal=(AnioBeanSwingJInternalFrame) ((AnioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				anioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoAnio(anioBeanSwingJInternalFrameLocal.getanio(),true);
				anioBeanSwingJInternalFrameLocal.actualizarLista(anioBeanSwingJInternalFrameLocal.anio,this.aniosForeignKey);

				anioBeanSwingJInternalFrameLocal.actualizarRelaciones(anioBeanSwingJInternalFrameLocal.anio);

				pedidocompraLocal.setAnio(anioBeanSwingJInternalFrameLocal.anio);

				this.addItemDefectoCombosForeignKeyAnio();
				this.cargarCombosFrameAniosForeignKey("Formulario");
				this.setActualAnioForeignKey(anioBeanSwingJInternalFrameLocal.anio.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(MesDetalleFormJInternalFrame.class)) {
				MesBeanSwingJInternalFrame mesBeanSwingJInternalFrameLocal=(MesBeanSwingJInternalFrame) ((MesDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				mesBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoMes(mesBeanSwingJInternalFrameLocal.getmes(),true);
				mesBeanSwingJInternalFrameLocal.actualizarLista(mesBeanSwingJInternalFrameLocal.mes,this.messForeignKey);

				mesBeanSwingJInternalFrameLocal.actualizarRelaciones(mesBeanSwingJInternalFrameLocal.mes);

				pedidocompraLocal.setMes(mesBeanSwingJInternalFrameLocal.mes);

				this.addItemDefectoCombosForeignKeyMes();
				this.cargarCombosFrameMessForeignKey("Formulario");
				this.setActualMesForeignKey(mesBeanSwingJInternalFrameLocal.mes.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(ClienteDetalleFormJInternalFrame.class)) {
				ClienteBeanSwingJInternalFrame clienteBeanSwingJInternalFrameLocal=(ClienteBeanSwingJInternalFrame) ((ClienteDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				clienteBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCliente(clienteBeanSwingJInternalFrameLocal.getcliente(),true);
				clienteBeanSwingJInternalFrameLocal.actualizarLista(clienteBeanSwingJInternalFrameLocal.cliente,this.clientesForeignKey);

				clienteBeanSwingJInternalFrameLocal.actualizarRelaciones(clienteBeanSwingJInternalFrameLocal.cliente);

				pedidocompraLocal.setCliente(clienteBeanSwingJInternalFrameLocal.cliente);

				this.addItemDefectoCombosForeignKeyCliente();
				this.cargarCombosFrameClientesForeignKey("Formulario");
				this.setActualClienteForeignKey(clienteBeanSwingJInternalFrameLocal.cliente.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(UsuarioDetalleFormJInternalFrame.class)) {
				UsuarioBeanSwingJInternalFrame usuarioBeanSwingJInternalFrameLocal=(UsuarioBeanSwingJInternalFrame) ((UsuarioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				usuarioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoUsuario(usuarioBeanSwingJInternalFrameLocal.getusuario(),true);
				usuarioBeanSwingJInternalFrameLocal.actualizarLista(usuarioBeanSwingJInternalFrameLocal.usuario,this.usuariosForeignKey);

				usuarioBeanSwingJInternalFrameLocal.actualizarRelaciones(usuarioBeanSwingJInternalFrameLocal.usuario);

				pedidocompraLocal.setUsuario(usuarioBeanSwingJInternalFrameLocal.usuario);

				this.addItemDefectoCombosForeignKeyUsuario();
				this.cargarCombosFrameUsuariosForeignKey("Formulario");
				this.setActualUsuarioForeignKey(usuarioBeanSwingJInternalFrameLocal.usuario.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(MonedaDetalleFormJInternalFrame.class)) {
				MonedaBeanSwingJInternalFrame monedaBeanSwingJInternalFrameLocal=(MonedaBeanSwingJInternalFrame) ((MonedaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				monedaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoMoneda(monedaBeanSwingJInternalFrameLocal.getmoneda(),true);
				monedaBeanSwingJInternalFrameLocal.actualizarLista(monedaBeanSwingJInternalFrameLocal.moneda,this.monedasForeignKey);

				monedaBeanSwingJInternalFrameLocal.actualizarRelaciones(monedaBeanSwingJInternalFrameLocal.moneda);

				pedidocompraLocal.setMoneda(monedaBeanSwingJInternalFrameLocal.moneda);

				this.addItemDefectoCombosForeignKeyMoneda();
				this.cargarCombosFrameMonedasForeignKey("Formulario");
				this.setActualMonedaForeignKey(monedaBeanSwingJInternalFrameLocal.moneda.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EstadoPedidoCompraDetalleFormJInternalFrame.class)) {
				EstadoPedidoCompraBeanSwingJInternalFrame estadopedidocompraBeanSwingJInternalFrameLocal=(EstadoPedidoCompraBeanSwingJInternalFrame) ((EstadoPedidoCompraDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				estadopedidocompraBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEstadoPedidoCompra(estadopedidocompraBeanSwingJInternalFrameLocal.getestadopedidocompra(),true);
				estadopedidocompraBeanSwingJInternalFrameLocal.actualizarLista(estadopedidocompraBeanSwingJInternalFrameLocal.estadopedidocompra,this.estadopedidocomprasForeignKey);

				estadopedidocompraBeanSwingJInternalFrameLocal.actualizarRelaciones(estadopedidocompraBeanSwingJInternalFrameLocal.estadopedidocompra);

				pedidocompraLocal.setEstadoPedidoCompra(estadopedidocompraBeanSwingJInternalFrameLocal.estadopedidocompra);

				this.addItemDefectoCombosForeignKeyEstadoPedidoCompra();
				this.cargarCombosFrameEstadoPedidoComprasForeignKey("Formulario");
				this.setActualEstadoPedidoCompraForeignKey(estadopedidocompraBeanSwingJInternalFrameLocal.estadopedidocompra.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EmpleadoDetalleFormJInternalFrame.class)) {
				EmpleadoBeanSwingJInternalFrame empleadoBeanSwingJInternalFrameLocal=(EmpleadoBeanSwingJInternalFrame) ((EmpleadoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				empleadoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEmpleado(empleadoBeanSwingJInternalFrameLocal.getempleado(),true);
				empleadoBeanSwingJInternalFrameLocal.actualizarLista(empleadoBeanSwingJInternalFrameLocal.empleado,this.empleadosForeignKey);

				empleadoBeanSwingJInternalFrameLocal.actualizarRelaciones(empleadoBeanSwingJInternalFrameLocal.empleado);

				pedidocompraLocal.setEmpleado(empleadoBeanSwingJInternalFrameLocal.empleado);

				this.addItemDefectoCombosForeignKeyEmpleado();
				this.cargarCombosFrameEmpleadosForeignKey("Formulario");
				this.setActualEmpleadoForeignKey(empleadoBeanSwingJInternalFrameLocal.empleado.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(FormatoDetalleFormJInternalFrame.class)) {
				FormatoBeanSwingJInternalFrame formatoBeanSwingJInternalFrameLocal=(FormatoBeanSwingJInternalFrame) ((FormatoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				formatoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoFormato(formatoBeanSwingJInternalFrameLocal.getformato(),true);
				formatoBeanSwingJInternalFrameLocal.actualizarLista(formatoBeanSwingJInternalFrameLocal.formato,this.formatosForeignKey);

				formatoBeanSwingJInternalFrameLocal.actualizarRelaciones(formatoBeanSwingJInternalFrameLocal.formato);

				pedidocompraLocal.setFormato(formatoBeanSwingJInternalFrameLocal.formato);

				this.addItemDefectoCombosForeignKeyFormato();
				this.cargarCombosFrameFormatosForeignKey("Formulario");
				this.setActualFormatoForeignKey(formatoBeanSwingJInternalFrameLocal.formato.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoCambioDetalleFormJInternalFrame.class)) {
				TipoCambioBeanSwingJInternalFrame tipocambioBeanSwingJInternalFrameLocal=(TipoCambioBeanSwingJInternalFrame) ((TipoCambioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipocambioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoCambio(tipocambioBeanSwingJInternalFrameLocal.gettipocambio(),true);
				tipocambioBeanSwingJInternalFrameLocal.actualizarLista(tipocambioBeanSwingJInternalFrameLocal.tipocambio,this.tipocambiosForeignKey);

				tipocambioBeanSwingJInternalFrameLocal.actualizarRelaciones(tipocambioBeanSwingJInternalFrameLocal.tipocambio);

				pedidocompraLocal.setTipoCambio(tipocambioBeanSwingJInternalFrameLocal.tipocambio);

				this.addItemDefectoCombosForeignKeyTipoCambio();
				this.cargarCombosFrameTipoCambiosForeignKey("Formulario");
				this.setActualTipoCambioForeignKey(tipocambioBeanSwingJInternalFrameLocal.tipocambio.getId(),false,"Formulario");
			}
		
		}
	}
	
	public Boolean validarPedidoCompraActual() throws Exception {
		Boolean estaValidado=false;
		this.inicializarInvalidValues();
		
		/*
		int intSelectedRow = this.jTableDatosPedidoCompra.getSelectedRow();
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.pedidocompra =(PedidoCompra) this.pedidocompraLogic.getPedidoCompras().toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
			this.pedidocompra =(PedidoCompra) this.pedidocompras.toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
		}
		//ARCHITECTURE
		*/
		
		this.invalidValues = pedidocompraValidator.getInvalidValues(this.pedidocompra);
					
		if(this.invalidValues==null || this.invalidValues.length<=0) {
			estaValidado=true;
		} else {
			this.mostrarInvalidValues();	
		}
		
		return estaValidado;
	}
	
	public void actualizarLista(PedidoCompra pedidocompra,List<PedidoCompra> pedidocompras) throws Exception {
		try	{		
			PedidoCompraConstantesFunciones.actualizarLista(pedidocompra,pedidocompras,this.pedidocompraSessionBean.getEsGuardarRelacionado());		
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void actualizarSelectedLista(PedidoCompra pedidocompra,List<PedidoCompra> pedidocompras) throws Exception {
		try	{			
			PedidoCompraConstantesFunciones.actualizarSelectedLista(pedidocompra,pedidocompras);
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public Boolean tieneElementosSeleccionados() throws Exception {
		Boolean tiene=false;
		
		List<PedidoCompra> pedidocomprasLocal=null;
		
		try	{			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				pedidocomprasLocal=this.pedidocompraLogic.getPedidoCompras();
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				pedidocomprasLocal=this.pedidocompras;
			}
			//ARCHITECTURE
		
			for(PedidoCompra pedidocompraLocal:pedidocomprasLocal) {
				if(this.permiteMantenimiento(pedidocompraLocal) && pedidocompraLocal.getIsSelected()) {
					tiene=true;
					break;
				}
			}
		} catch(Exception e) {
			throw e;
		}
		
		return tiene;
	}			
	
	public void mostrarInvalidValues() throws Exception {
		String sMensaje="";
				
		for (InvalidValue invalidValue : this.invalidValues) {
			sMensaje+="\r\n"+PedidoCompraConstantesFunciones.getPedidoCompraLabelDesdeNombre(invalidValue.getPropertyName())+"->"+invalidValue.getMessage();
			
			//MOSTRAR CAMPOS INVALIDOS
			if(invalidValue.getPropertyName().equals(PedidoCompraConstantesFunciones.IDEMPRESA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompra.jLabelid_empresaPedidoCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoCompraConstantesFunciones.IDSUCURSAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompra.jLabelid_sucursalPedidoCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoCompraConstantesFunciones.IDMODULO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompra.jLabelid_moduloPedidoCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoCompraConstantesFunciones.IDEJERCICIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompra.jLabelid_ejercicioPedidoCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoCompraConstantesFunciones.IDPERIODO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompra.jLabelid_periodoPedidoCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoCompraConstantesFunciones.IDANIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompra.jLabelid_anioPedidoCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoCompraConstantesFunciones.IDMES)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompra.jLabelid_mesPedidoCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoCompraConstantesFunciones.NUMEROSECUENCIAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompra.jLabelnumero_secuencialPedidoCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoCompraConstantesFunciones.IDCLIENTE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompra.jLabelid_clientePedidoCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoCompraConstantesFunciones.IDUSUARIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompra.jLabelid_usuarioPedidoCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoCompraConstantesFunciones.IDMONEDA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompra.jLabelid_monedaPedidoCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoCompraConstantesFunciones.IDESTADOPEDIDOCOMPRA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompra.jLabelid_estado_pedido_compraPedidoCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoCompraConstantesFunciones.TOTAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompra.jLabeltotalPedidoCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoCompraConstantesFunciones.FECHA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompra.jLabelfechaPedidoCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoCompraConstantesFunciones.IDEMPLEADO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompra.jLabelid_empleadoPedidoCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoCompraConstantesFunciones.RESPONSABLE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompra.jLabelresponsablePedidoCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoCompraConstantesFunciones.SOLICITADOPOR)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompra.jLabelsolicitado_porPedidoCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoCompraConstantesFunciones.MOTIVOSOLICITUD)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompra.jLabelmotivo_solicitudPedidoCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoCompraConstantesFunciones.AREASOLICITUD)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompra.jLabelarea_solicitudPedidoCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoCompraConstantesFunciones.PARAUSODE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompra.jLabelpara_uso_dePedidoCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoCompraConstantesFunciones.LUGARENTREGA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompra.jLabellugar_entregaPedidoCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoCompraConstantesFunciones.DESCRIPCION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompra.jLabeldescripcionPedidoCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoCompraConstantesFunciones.FECHAEMISION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompra.jLabelfecha_emisionPedidoCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoCompraConstantesFunciones.FECHAENTREGA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompra.jLabelfecha_entregaPedidoCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoCompraConstantesFunciones.IDFORMATO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompra.jLabelid_formatoPedidoCompra,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoCompraConstantesFunciones.IDTIPOCAMBIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompra.jLabelid_tipo_cambioPedidoCompra,invalidValue.getMessage());}
        }
		
		
		if(!sMensaje.equals("")) {
			//JOptionPane.showMessageDialog(this,sMensaje,"VALIDACION ",JOptionPane.ERROR_MESSAGE);
			throw new Exception(sMensaje);			
		}
		
		/*
		System.out.println(invalidValue);
        System.out.println("message=" + invalidValue.getMessage());
        System.out.println("propertyName=" + invalidValue.getPropertyName());
        System.out.println("propertyPath=" + invalidValue.getPropertyPath());
        System.out.println("value=" + invalidValue.getValue());
        */
	}		
	
	public void inicializarInvalidValues() throws Exception {
		String sMensaje="";	
		
		if(this.jInternalFrameDetalleFormPedidoCompra!=null) {
		
		//MOSTRAR CAMPOS INVALIDOS
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoCompra.jLabelid_empresaPedidoCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoCompra.jLabelid_sucursalPedidoCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoCompra.jLabelid_moduloPedidoCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoCompra.jLabelid_ejercicioPedidoCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoCompra.jLabelid_periodoPedidoCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoCompra.jLabelid_anioPedidoCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoCompra.jLabelid_mesPedidoCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoCompra.jLabelnumero_secuencialPedidoCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoCompra.jLabelid_clientePedidoCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoCompra.jLabelid_usuarioPedidoCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoCompra.jLabelid_monedaPedidoCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoCompra.jLabelid_estado_pedido_compraPedidoCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoCompra.jLabeltotalPedidoCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoCompra.jLabelfechaPedidoCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoCompra.jLabelid_empleadoPedidoCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoCompra.jLabelresponsablePedidoCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoCompra.jLabelsolicitado_porPedidoCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoCompra.jLabelmotivo_solicitudPedidoCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoCompra.jLabelarea_solicitudPedidoCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoCompra.jLabelpara_uso_dePedidoCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoCompra.jLabellugar_entregaPedidoCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoCompra.jLabeldescripcionPedidoCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoCompra.jLabelfecha_emisionPedidoCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoCompra.jLabelfecha_entregaPedidoCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoCompra.jLabelid_formatoPedidoCompra,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoCompra.jLabelid_tipo_cambioPedidoCompra,"");
		
		}
	}
	
	
	
	public void actualizarObjetoPadreFk(String sTipo)  throws Exception {
		if(sTipo.equals("XXXAuxiliar")) {
		
		}
		
		 else  if(sTipo.equals("DetallePedidoCompra")) {
			if(this.pedidocompra==null) {
				this.pedidocompra= new PedidoCompra();
			}

			if(this.pedidocompraSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoPedidoCompra
				this.setVariablesFormularioToObjetoActualPedidoCompra(this.pedidocompra,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompra(this.pedidocompra);

				this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraBeanSwingJInternalFrame.getdetallepedidocompra().setPedidoCompra(this.pedidocompra);
			}

			return;
		}
	}
	
	public void nuevoPreparar() throws Exception {
		this.nuevoPreparar(false);
	}
	
	public void nuevoPreparar(Boolean esNuevoGuardarCambios) throws Exception {
		this.iIdNuevoPedidoCompra--;	
		
		
		this.pedidocompraAux=new PedidoCompra();
		
		this.pedidocompraAux.setId(this.iIdNuevoPedidoCompra);
		this.pedidocompraAux.setIsChanged(true);
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.pedidocompraLogic.getPedidoCompras().add(this.pedidocompraAux);
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.pedidocompras.add(this.pedidocompraAux);
		}
		//ARCHITECTURE
		
		this.pedidocompra=this.pedidocompraAux;
		
		if(PedidoCompraJInternalFrame.ISBINDING_MANUAL_TABLA) {
			this.setVariablesObjetoActualToFormularioPedidoCompra(this.pedidocompra);
			this.setVariablesObjetoActualToFormularioForeignKeyPedidoCompra(this.pedidocompra);
		}
				
		//this.setDefaultControlesPedidoCompra();
		
		this.inicializarInvalidValues();
				
		//SELECCIONA ITEM DEFECTO-->SET O SELECTED INDEX
		this.setItemDefectoCombosForeignKeyPedidoCompra();
		
		
		//INICIALIZA VARIABLES COMBOS GLOBALES A FORMULARIO(ParametroGeneralUsuario)
		this.setVariablesGlobalesCombosForeignKeyPedidoCompra();
		
		//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
		//this.setVariablesGlobalesAuxiliaresCombosForeignKeyPedidoCompra();
		
		//SI TIENE FOREIGN KEY CON CAMPO esDefecto=true, SE ACTUALIZA A OBJETO ACTUAL
		this.setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualPedidoCompra(this.pedidocompraBean,this.pedidocompra,false,false);
		
		//ACTUALIZA VALORES PARA EL OBJETO ACTUAL ANTES DE ENVIARLO A ACTUALIZAR
		this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompra(this.pedidocompra);
				
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		if(this.jInternalFrameParent!=null) {
			this.jInternalFrameParent.actualizarObjetoPadreFk(PedidoCompraConstantesFunciones.CLASSNAME);
		}	
		
		
		if(this.pedidocompraSessionBean.getConGuardarRelaciones()) {
			classes=PedidoCompraConstantesFunciones.getClassesRelationshipsOfPedidoCompra(new ArrayList<Classe>(),DeepLoadType.NONE);
		}
		
		this.classesActual=new ArrayList<Classe>();
		this.classesActual.addAll(classes);
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {						
			this.pedidocompraReturnGeneral=pedidocompraLogic.procesarEventosPedidoComprasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,EventoGlobalTipo.FORM_RECARGAR,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.pedidocompraLogic.getPedidoCompras(),this.pedidocompra,this.pedidocompraParameterGeneral,this.isEsNuevoPedidoCompra,classes);//this.pedidocompraLogic.getPedidoCompra()
						
		} else if(Constantes.ISUSAEJBREMOTE) {
						
		} else if(Constantes.ISUSAEJBHOME) {
		}
		//ARCHITECTURE
		
		//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
		//this.setVariablesObjetoReturnGeneralToBeanPedidoCompra(this.pedidocompraReturnGeneral,this.pedidocompraBean,false);
		
		if(this.pedidocompraReturnGeneral.getConRecargarPropiedades()) {
			//INICIALIZA VARIABLES COMBOS NORMALES (FK)
			this.setVariablesObjetoActualToFormularioForeignKeyPedidoCompra(this.pedidocompraReturnGeneral.getPedidoCompra());
			
			//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
			this.setVariablesObjetoActualToFormularioPedidoCompra(this.pedidocompraReturnGeneral.getPedidoCompra());
		}
		
		if(this.pedidocompraReturnGeneral.getConRecargarRelaciones()) {
			//INICIALIZA VARIABLES RELACIONES A FORMULARIO
			this.setVariablesRelacionesObjetoActualToFormularioPedidoCompra(this.pedidocompraReturnGeneral.getPedidoCompra(),classes);//this.pedidocompraBean);	
		}
			
		//ACTUALIZA VARIABLES FORMULARIO A OBJETO ACTUAL (PARA NUEVO TABLA O GUARDAR CAMBIOS
		if(esNuevoGuardarCambios) {
			this.setVariablesFormularioToObjetoActualPedidoCompra(this.pedidocompra,false);
		}
		
		//INICIALIZA VARIABLES COMBOS DEFAULT DEL PROYECTO(|DEFAULT para FK)
		//this.setVariablesDefaultCombosForeignKeyPedidoCompra();
		
		//INICIALIZA VARIABLES COMBOS PARAMETRO DEL PROYECTO(|VALORPARAM Era para ParametroModulo, ahora en logic)
		//this.setVariablesParametroCombosForeignKeyPedidoCompra();						
		
		if(!esNuevoGuardarCambios) {
			//INICIALIZA VARIABLES POR OPCION MENU
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			PedidoCompraBeanSwingJInternalFrameAdditional.RecargarFormPedidoCompra(this,"NUEVO_PREPARAR","",this.arrDatoGeneral);
		
			//NO FUNCIONA BINDINGS			
			this.inicializarActualizarBindingPedidoCompra(false);
						
			if(pedidocompraSessionBean.getConGuardarRelaciones()) {
				//DEBERIA YA ESTAR CARGADO LOS COMBOS Y SI SE NECESITA ALGO MAS SE DEBE CREAR FUNCION LIMITADA
				//SI DEBE TRAER Y RESETEAR TABLA
				

				if(this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraBeanSwingJInternalFrame.detallepedidocompraSessionBean.getEsGuardarRelacionado() && DetallePedidoCompraJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonDetallePedidoCompraActionPerformed(null,-1,false,true,null);
				}				
			}
				
			//SI ES MANUAL
			if(PedidoCompraJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualPedidoCompra();
			}
			
			this.actualizarVisualTableDatosPedidoCompra();
			
			this.jTableDatosPedidoCompra.setRowSelectionInterval(this.getIndiceNuevoPedidoCompra(), this.getIndiceNuevoPedidoCompra());
			
			this.seleccionarFilaTablaPedidoCompraActual();
						
			this.actualizarEstadoCeldasBotonesPedidoCompra("a", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		}		
	}
	
	public void habilitarDeshabilitarControlesPedidoCompra(Boolean isHabilitar) throws Exception {
		//
		this.jInternalFrameDetalleFormPedidoCompra.jTextFieldnumero_secuencialPedidoCompra.setEnabled(isHabilitar && this.pedidocompraConstantesFunciones.activarnumero_secuencialPedidoCompra);//
		this.jInternalFrameDetalleFormPedidoCompra.jTextFieldtotalPedidoCompra.setEnabled(isHabilitar && this.pedidocompraConstantesFunciones.activartotalPedidoCompra);//
		this.jInternalFrameDetalleFormPedidoCompra.jDateChooserfechaPedidoCompra.setEnabled(isHabilitar && this.pedidocompraConstantesFunciones.activarfechaPedidoCompra);
		this.jInternalFrameDetalleFormPedidoCompra.jTextArearesponsablePedidoCompra.setEnabled(isHabilitar && this.pedidocompraConstantesFunciones.activarresponsablePedidoCompra);
		this.jInternalFrameDetalleFormPedidoCompra.jTextAreasolicitado_porPedidoCompra.setEnabled(isHabilitar && this.pedidocompraConstantesFunciones.activarsolicitado_porPedidoCompra);
		this.jInternalFrameDetalleFormPedidoCompra.jTextAreamotivo_solicitudPedidoCompra.setEnabled(isHabilitar && this.pedidocompraConstantesFunciones.activarmotivo_solicitudPedidoCompra);
		this.jInternalFrameDetalleFormPedidoCompra.jTextAreaarea_solicitudPedidoCompra.setEnabled(isHabilitar && this.pedidocompraConstantesFunciones.activararea_solicitudPedidoCompra);
		this.jInternalFrameDetalleFormPedidoCompra.jTextAreapara_uso_dePedidoCompra.setEnabled(isHabilitar && this.pedidocompraConstantesFunciones.activarpara_uso_dePedidoCompra);
		this.jInternalFrameDetalleFormPedidoCompra.jTextFieldlugar_entregaPedidoCompra.setEnabled(isHabilitar && this.pedidocompraConstantesFunciones.activarlugar_entregaPedidoCompra);
		this.jInternalFrameDetalleFormPedidoCompra.jTextAreadescripcionPedidoCompra.setEnabled(isHabilitar && this.pedidocompraConstantesFunciones.activardescripcionPedidoCompra);
		this.jInternalFrameDetalleFormPedidoCompra.jDateChooserfecha_emisionPedidoCompra.setEnabled(isHabilitar && this.pedidocompraConstantesFunciones.activarfecha_emisionPedidoCompra);
		this.jInternalFrameDetalleFormPedidoCompra.jDateChooserfecha_entregaPedidoCompra.setEnabled(isHabilitar && this.pedidocompraConstantesFunciones.activarfecha_entregaPedidoCompra);	
		//
		this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_empresaPedidoCompra.setEnabled(isHabilitar && this.pedidocompraConstantesFunciones.activarid_empresaPedidoCompra);//
		this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_sucursalPedidoCompra.setEnabled(isHabilitar && this.pedidocompraConstantesFunciones.activarid_sucursalPedidoCompra);//
		this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_moduloPedidoCompra.setEnabled(isHabilitar && this.pedidocompraConstantesFunciones.activarid_moduloPedidoCompra);//
		this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_ejercicioPedidoCompra.setEnabled(isHabilitar && this.pedidocompraConstantesFunciones.activarid_ejercicioPedidoCompra);//
		this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_periodoPedidoCompra.setEnabled(isHabilitar && this.pedidocompraConstantesFunciones.activarid_periodoPedidoCompra);//
		this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_anioPedidoCompra.setEnabled(isHabilitar && this.pedidocompraConstantesFunciones.activarid_anioPedidoCompra);//
		this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_mesPedidoCompra.setEnabled(isHabilitar && this.pedidocompraConstantesFunciones.activarid_mesPedidoCompra);
		this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_clientePedidoCompra.setEnabled(isHabilitar && this.pedidocompraConstantesFunciones.activarid_clientePedidoCompra);//
		this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_usuarioPedidoCompra.setEnabled(isHabilitar && this.pedidocompraConstantesFunciones.activarid_usuarioPedidoCompra);//
		this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_monedaPedidoCompra.setEnabled(isHabilitar && this.pedidocompraConstantesFunciones.activarid_monedaPedidoCompra);//
		this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_estado_pedido_compraPedidoCompra.setEnabled(isHabilitar && this.pedidocompraConstantesFunciones.activarid_estado_pedido_compraPedidoCompra);
		this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_empleadoPedidoCompra.setEnabled(isHabilitar && this.pedidocompraConstantesFunciones.activarid_empleadoPedidoCompra);
		this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_formatoPedidoCompra.setEnabled(isHabilitar && this.pedidocompraConstantesFunciones.activarid_formatoPedidoCompra);//
		this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_tipo_cambioPedidoCompra.setEnabled(isHabilitar && this.pedidocompraConstantesFunciones.activarid_tipo_cambioPedidoCompra);
	};
	
	public void setDefaultControlesPedidoCompra() throws Exception {
			
	};
	
	
	public void habilitarDeshabilitarTipoMantenimientoPedidoCompra(Boolean esRelaciones) throws Exception {
		if(esRelaciones) {
			//this.pedidocompraSessionBean.setConGuardarRelaciones(true);			
			this.pedidocompraSessionBean.setEstaModoGuardarRelaciones(true);				
			this.jInternalFrameDetalleFormPedidoCompra.jTabbedPaneRelacionesPedidoCompra.setVisible(true);
			
			

			if(this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraBeanSwingJInternalFrame.detallepedidocompraSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}		
		} else {
			//this.pedidocompraSessionBean.setConGuardarRelaciones(false);			
			this.pedidocompraSessionBean.setEstaModoGuardarRelaciones(false);						
			this.jInternalFrameDetalleFormPedidoCompra.jTabbedPaneRelacionesPedidoCompra.setVisible(false);
			
			

			if(this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraBeanSwingJInternalFrame.detallepedidocompraSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}
		}
	};
	
	public int getIndiceNuevoPedidoCompra() throws Exception {
		int iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(PedidoCompra pedidocompraAux:this.pedidocompraLogic.getPedidoCompras()) {
				if(pedidocompraAux.getId().equals(this.iIdNuevoPedidoCompra)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(PedidoCompra pedidocompraAux:this.pedidocompras) {
				if(pedidocompraAux.getId().equals(this.iIdNuevoPedidoCompra)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndice-1;
		}
		
		return iIndice;
	}
	
	public int getIndiceActualPedidoCompra(PedidoCompra pedidocompra,Integer iIndiceActual) throws Exception {
		Integer iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(PedidoCompra pedidocompraAux:this.pedidocompraLogic.getPedidoCompras()) {
				if(pedidocompraAux.getId().equals(pedidocompra.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(PedidoCompra pedidocompraAux:this.pedidocompras) {
				if(pedidocompraAux.getId().equals(pedidocompra.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndiceActual;
		}
		
		return iIndice;
	}
	
	public void setCamposBaseDesdeOriginalPedidoCompra(PedidoCompra pedidocompraOriginal) throws Exception {
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(PedidoCompra pedidocompraAux:this.pedidocompraLogic.getPedidoCompras()) {
				if(pedidocompraAux.getPedidoCompraOriginal().getId().equals(pedidocompraOriginal.getId())) {
					existe=true;
					pedidocompraOriginal.setId(pedidocompraAux.getId());
					pedidocompraOriginal.setVersionRow(pedidocompraAux.getVersionRow());
					break;
				}
				
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(PedidoCompra pedidocompraAux:this.pedidocompras) {
				if(pedidocompraAux.getPedidoCompraOriginal().getId().equals(pedidocompraOriginal.getId())) {
					existe=true;
					pedidocompraOriginal.setId(pedidocompraAux.getId());
					pedidocompraOriginal.setVersionRow(pedidocompraAux.getVersionRow());
					break;
				}				
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
		}
	}
	
	public void cancelarNuevosPedidoCompra(Boolean esParaCancelar) throws Exception {
		pedidocomprasAux=new ArrayList<PedidoCompra>();
		pedidocompraAux=new PedidoCompra();
		
		if(!this.pedidocompraSessionBean.getEsGuardarRelacionado()) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(PedidoCompra pedidocompraAux:this.pedidocompraLogic.getPedidoCompras()) {
					if(pedidocompraAux.getId()<0) {
						pedidocomprasAux.add(pedidocompraAux);
					}		
				}
				this.iIdNuevoPedidoCompra=0L;
				this.pedidocompraLogic.getPedidoCompras().removeAll(pedidocomprasAux);
					
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(PedidoCompra pedidocompraAux:this.pedidocompras) {
					if(pedidocompraAux.getId()<0) {
						pedidocomprasAux.add(pedidocompraAux);
					}		
				}
				this.iIdNuevoPedidoCompra=0L;
				this.pedidocompras.removeAll(pedidocomprasAux);
			}	
		} else {			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				if(esParaCancelar && this.isEsNuevoPedidoCompra 
					&& this.pedidocompraLogic.getPedidoCompras().size()>0
					) {
					pedidocompraAux=this.pedidocompraLogic.getPedidoCompras().get(this.pedidocompraLogic.getPedidoCompras().size() - 1);
				
					if(pedidocompraAux.getId()<0) {
						this.pedidocompraLogic.getPedidoCompras().remove(pedidocompraAux);
					}
				}
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				if(esParaCancelar && this.isEsNuevoPedidoCompra && this.pedidocompras.size()>0) {
					pedidocompraAux=this.pedidocompras.get(this.pedidocompras.size() - 1);
				
					if(pedidocompraAux.getId()<0) {
						this.pedidocompras.remove(pedidocompraAux);
					}
				}
			}	
		}
	}
	
	public void cancelarNuevoPedidoCompra(Boolean esParaCancelar) throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			if(pedidocompra.getId()<0) {
				this.pedidocompraLogic.getPedidoCompras().remove(this.pedidocompra);
			}					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			if(pedidocompra.getId()<0) {
				this.pedidocompras.remove(this.pedidocompra);
			}
		}			
	}
	
	public void setEstadosInicialesPedidoCompra(List<PedidoCompra> pedidocomprasAux) throws Exception {
		PedidoCompraConstantesFunciones.setEstadosInicialesPedidoCompra(pedidocomprasAux);
	}
	
	public void setEstadosInicialesPedidoCompra(PedidoCompra pedidocompraAux) throws Exception {
		PedidoCompraConstantesFunciones.setEstadosInicialesPedidoCompra(pedidocompraAux);		
	}
	
	public void nuevo() throws Exception {
		try	{
			//ESTA VALIDADO EN FUNCION ACTUALIZAR
			//if(this.validarPedidoCompraActual()) {
				this.ejecutarMantenimiento(MaintenanceType.NUEVO);
				
				this.actualizarEstadoCeldasBotonesPedidoCompra("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
				
			//}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void actualizar() throws Exception {
		try	{
			if(this.validarPedidoCompraActual()) {
				if(!this.isEsNuevoPedidoCompra) {
					this.ejecutarMantenimiento(MaintenanceType.ACTUALIZAR);
					
					this.actualizarEstadoCeldasBotonesPedidoCompra("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
					
				} else {					
					this.nuevo();
					this.isEsNuevoPedidoCompra=false;
				}
				
				//SE CANCELA AL FINAL DEL PROCESO JBUTTONACTUALIZAR
				//this.cancelar(false);
			}		
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void eliminar() throws Exception {
		try	{	
			if(this.validarPedidoCompraActual()) {
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE ELIMINAR EL/LA Pedido Compra ?", "MANTENIMIENTO DE Pedido Compra", JOptionPane.OK_CANCEL_OPTION) == 0) {
					this.ejecutarMantenimiento(MaintenanceType.ELIMINAR);			
					this.actualizarEstadoCeldasBotonesPedidoCompra("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
				}
			
			}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void guardarCambios() throws Exception {
		try	{
			this.ejecutarMantenimiento(MaintenanceType.GUARDARCAMBIOS);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarAsignar(PedidoCompra pedidocompra) throws Exception {
		PedidoCompraConstantesFunciones.seleccionarAsignar(this.pedidocompra,pedidocompra);
	}
	
	public void seleccionar() throws Exception {
		try	{
			//ACTUALIZO EL PERMISO ACTUALIZAR CON EL PERMISO ACTUALIZAR ORIGINAL ESTE PERMISO SE UTILIZA PARA EL NUEVO TAMBIEN
			this.isPermisoActualizarPedidoCompra=this.isPermisoActualizarOriginalPedidoCompra;
			
			
			this.seleccionarAsignar(pedidocompra);
			
			

			idClienteActual=pedidocompra.getid_cliente();
			this.seleccionarClienteActual();

			idEmpleadoActual=pedidocompra.getid_empleado();
			this.seleccionarEmpleadoActual();

			idTipoCambioActual=pedidocompra.getid_tipo_cambio();
			this.seleccionarTipoCambioActual();
			
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			PedidoCompraConstantesFunciones.quitarEspaciosPedidoCompra(this.pedidocompra,this.arrDatoGeneral);
			
			
			this.actualizarEstadoCeldasBotonesPedidoCompra("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarBusqueda(Long id) throws Exception {
		try	{
			this.pedidocompraSessionBean.setsFuncionBusquedaRapida(this.pedidocompraSessionBean.getsFuncionBusquedaRapida().replace("TO_REPLACE", id.toString()));
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	
	//BUSQUEDA INTERNA FK
	public void seleccionarClienteActual() throws Exception {
		try	{
			Cliente clienteAux=new Cliente();

			if(this.idClienteActual != null && this.idClienteActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteLogic.getEntityWithConnection(this.idClienteActual);
					clienteAux= clienteLogic.getCliente();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				clientesForeignKey=new ArrayList<Cliente>();
				clientesForeignKey.add(clienteAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	public void seleccionarEmpleadoActual() throws Exception {
		try	{
			Empleado empleadoAux=new Empleado();

			if(this.idEmpleadoActual != null && this.idEmpleadoActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					empleadoLogic.getEntityWithConnection(this.idEmpleadoActual);
					empleadoAux= empleadoLogic.getEmpleado();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				empleadosForeignKey=new ArrayList<Empleado>();
				empleadosForeignKey.add(empleadoAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	public void seleccionarTipoCambioActual() throws Exception {
		try	{
			TipoCambio tipocambioAux=new TipoCambio();

			if(this.idTipoCambioActual != null && this.idTipoCambioActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipocambioLogic.getEntityWithConnection(this.idTipoCambioActual);
					tipocambioAux= tipocambioLogic.getTipoCambio();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				tipocambiosForeignKey=new ArrayList<TipoCambio>();
				tipocambiosForeignKey.add(tipocambioAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	
	public void cancelar() throws Exception {
		this.cancelar(true);
	}
	
	public void cancelar(Boolean esParaCancelar) throws Exception {
		try {
														
			
			//SE UTILIZA COLUMNA ELIMINAR EN TABLA
			if(this.isEsNuevoPedidoCompra) {
				//NO CANCELA TODOS NUEVOS POR FUNCIONALIDAD GUARDAR CAMBIOS
				//this.cancelarNuevosPedidoCompra(esParaCancelar);				
				this.cancelarNuevoPedidoCompra(esParaCancelar);								
			}
			
			this.pedidocompra=new PedidoCompra();
			
			this.inicializarPedidoCompra();
			
			this.actualizarEstadoCeldasBotonesPedidoCompra("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void inicializarPedidoCompra() throws Exception {
		try {
			PedidoCompraConstantesFunciones.inicializarPedidoCompra(this.pedidocompra);
			
			} catch(Exception e) {
			throw e;
		}
	}
	
	public void anteriores()throws Exception {
		try	{
			//this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			
			if(this.iNumeroPaginacionPagina-this.iNumeroPaginacion<this.iNumeroPaginacion) {
				this.iNumeroPaginacionPagina=0;		
			} else {
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			}
			
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void siguientes()throws Exception {
		try	{			
			if(this.pedidocompraLogic.getPedidoCompras().size()>0) {
					
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina+this.iNumeroPaginacion;
			}
				
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void generarReportePedidoCompras(String sAccionBusqueda,List<PedidoCompra> pedidocomprasParaReportes) throws Exception {
		//HttpSession httpSession = httpServletRequest.getSession();
		Long iIdUsuarioSesion=0L;	
		
		
		if(usuarioActual==null) {
			this.usuarioActual=new Usuario();
		}
		
		iIdUsuarioSesion=usuarioActual.getId();
		
		String sPathReportes="";
		
		InputStream reportFile=null;
		InputStream imageFile=null;
			
		imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		String sPathReporteFinal="";
		
		if(!esReporteAccionProceso) {
			if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
				if(!this.esReporteDinamico) {
					sPathReporteFinal="PedidoCompra"+this.sTipoReporteExtra+"Design.jasper";
					reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
				} else {
					sPathReporteFinal=this.sPathReporteDinamico;
					reportFile = new FileInputStream(sPathReporteFinal);
				}
			} else {
				sPathReporteFinal="PedidoCompraMasterRelaciones"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);
				//sPathReportes=reportFile.getPath().replace("PedidoCompraMasterRelacionesDesign.jasper", "");
			}
		} else {
				sPathReporteFinal="PedidoCompra"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
		}
		
		if(reportFile==null) {
			throw new JRRuntimeException(sPathReporteFinal+" no existe");
		}
		
		String sUsuario="";
		
		if(usuarioActual!=null) {
			sUsuario=usuarioActual.getuser_name();
		}
		
		Map<String, Object> parameters = new HashMap<String, Object>();
		parameters.put("usuario", sUsuario);
		
		parameters.put("titulo", Funciones.GetTituloSistemaReporte(this.parametroGeneralSg,this.moduloActual,this.usuarioActual));
		parameters.put("subtitulo", "Reporte De  Pedido Compras");		
		parameters.put("busquedapor", PedidoCompraConstantesFunciones.getNombreIndice(sAccionBusqueda)+sDetalleReporte);
		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			parameters.put("SUBREPORT_DIR", sPathReportes);
		}
		
		parameters.put("con_grafico", this.conGraficoReporte);
		
		JasperReport jasperReport = (JasperReport)JRLoader.loadObject(reportFile);
				
		this.cargarDatosCliente();
		
		ArrayList<Classe> classes=new ArrayList<Classe>();		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			
			classes.add(new Classe(DetallePedidoCompra.class));
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {		
				try	{
					
					PedidoCompraLogic pedidocompraLogicAuxiliar=new PedidoCompraLogic();
					pedidocompraLogicAuxiliar.setDatosCliente(pedidocompraLogic.getDatosCliente());				
					pedidocompraLogicAuxiliar.setPedidoCompras(pedidocomprasParaReportes);
					
					pedidocompraLogicAuxiliar.cargarRelacionesLoteForeignKeyPedidoCompraWithConnection(); //deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes, "");
					
					pedidocomprasParaReportes=pedidocompraLogicAuxiliar.getPedidoCompras();
					
					//pedidocompraLogic.getNewConnexionToDeep();
					
					//for (PedidoCompra pedidocompra:pedidocomprasParaReportes) {
					//	pedidocompraLogic.deepLoad(pedidocompra, false, DeepLoadType.INCLUDE, classes);
					//}						
					//pedidocompraLogic.commitNewConnexionToDeep();
					
						
				} catch(Exception e) {
					throw e;
					
				} finally {
					//pedidocompraLogic.closeNewConnexionToDeep();
				}
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
			//ARCHITECTURE		
			
		
			
			

			InputStream reportFileDetallePedidoCompra = AuxiliarReportes.class.getResourceAsStream("DetallePedidoCompraDetalleRelacionesDesign.jasper");
			parameters.put("subreport_detallepedidocompra", reportFileDetallePedidoCompra);
		} else {
			//FK DEBERIA TRAERSE DE ANTEMANO
			
		}
								
		
		//CLASSES PARA REPORTES OBJETOS RELACIONADOS
		if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
			classes=new ArrayList<Classe>();
		}
		
		JRBeanArrayDataSource jrbeanArrayDataSourcePedidoCompra=null;
		
		if(this.sTipoReporteExtra!=null && !this.sTipoReporteExtra.equals("")) {
			PedidoCompraConstantesFunciones.S_TIPOREPORTE_EXTRA=this.sTipoReporteExtra;
		} else {
			PedidoCompraConstantesFunciones.S_TIPOREPORTE_EXTRA="";
		}
		
		jrbeanArrayDataSourcePedidoCompra=new JRBeanArrayDataSource(PedidoCompraJInternalFrame.TraerPedidoCompraBeans(pedidocomprasParaReportes,classes).toArray());
		
		jasperPrint = JasperFillManager.fillReport(jasperReport,parameters,jrbeanArrayDataSourcePedidoCompra);
				
		
		String sPathDest=Constantes.SUNIDAD_ARCHIVOS+":/"+Constantes.SCONTEXTSERVER+"/"+PedidoCompraConstantesFunciones.SCHEMA+"/reportes";
		
		File filePathDest = new File(sPathDest);
		
		if(!filePathDest.exists()) {
			filePathDest.mkdirs();				
		}
				
		String sDestFileName=sPathDest+"/"+PedidoCompraConstantesFunciones.CLASSNAME;
				
		if(this.sTipoArchivoReporte=="VISUALIZAR") {
			JasperViewer jasperViewer = new JasperViewer(jasperPrint,false) ;
			jasperViewer.setVisible(true) ; 

		} else if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML") {	
			//JasperFillManager.fillReportToFile(reportFile.getAbsolutePath(),parameters, new JRBeanArrayDataSource(PedidoCompraBean.TraerPedidoCompraBeans(pedidocomprasParaReportes).toArray()));
							
			if(this.sTipoArchivoReporte=="HTML") {
				sDestFileName+=".html";
				JasperExportManager.exportReportToHtmlFile(jasperPrint,sDestFileName);
					
			} else if(this.sTipoArchivoReporte=="PDF") {
				sDestFileName+=".pdf";
				JasperExportManager.exportReportToPdfFile(jasperPrint,sDestFileName);
			} else {
				sDestFileName+=".xml";
				JasperExportManager.exportReportToXmlFile(jasperPrint,sDestFileName, false);
			}	
			
		} else if(this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {
				
			if(this.sTipoArchivoReporte=="WORD") {
				sDestFileName+=".rtf";
					
				JRRtfExporter exporter = new JRRtfExporter();
		
				exporter.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporter.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
		
				exporter.exportReport();
				
			} else	{
				sDestFileName+=".xls";
					
				JRXlsExporter exporterXls = new JRXlsExporter();
		
				exporterXls.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporterXls.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
				exporterXls.setParameter(JRXlsExporterParameter.IS_ONE_PAGE_PER_SHEET, Boolean.TRUE);
		
				exporterXls.exportReport();
			}
			
		} else if(this.sTipoArchivoReporte=="EXCEL2"||this.sTipoArchivoReporte=="EXCEL2_2") {
			//sDestFileName+=".xlsx";
			
			if(this.sTipoReporte.equals("NORMAL")) {
				this.generarExcelReportePedidoCompras(sAccionBusqueda,sTipoArchivoReporte,pedidocomprasParaReportes);
			
			} else if(this.sTipoReporte.equals("FORMULARIO")){
				this.generarExcelReporteVerticalPedidoCompras(sAccionBusqueda,sTipoArchivoReporte,pedidocomprasParaReportes,false);
			
			} else if(this.sTipoReporte.equals("DINAMICO")){
				
				if(this.sTipoReporteDinamico.equals("NORMAL")) {
					
					this.jButtonGenerarExcelReporteDinamicoPedidoCompraActionPerformed(null);
					//this.generarExcelReportePedidoCompras(sAccionBusqueda,sTipoArchivoReporte,pedidocomprasParaReportes);
					
				
				} else if(this.sTipoReporteDinamico.equals("FORMULARIO")){
					this.generarExcelReporteVerticalPedidoCompras(sAccionBusqueda,sTipoArchivoReporte,pedidocomprasParaReportes,true);
				
				} else if(this.sTipoReporteDinamico.equals("RELACIONES")){
					this.generarExcelReporteRelacionesPedidoCompras(sAccionBusqueda,sTipoArchivoReporte,pedidocomprasParaReportes,true);
				}
				
			} else if(this.sTipoReporte.equals("RELACIONES")){
				this.generarExcelReporteRelacionesPedidoCompras(sAccionBusqueda,sTipoArchivoReporte,pedidocomprasParaReportes,false);
			}
		}
		
		if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML"||this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {				
			JOptionPane.showMessageDialog(this,"REPORTE "+sDestFileName+" GENERADO SATISFACTORIAMENTE","REPORTES ",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReportePedidoCompras(String sAccionBusqueda,String sTipoArchivoReporte,List<PedidoCompra> pedidocomprasParaReportes) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"pedidocompra";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("PedidoCompras");
         
        int iRow = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderPedidoCompra("NORMAL",row,workbook);
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux=null;
		
		int i=0;
		
      	for(PedidoCompra pedidocompra : pedidocomprasParaReportes) {            
			row = sheet.createRow(iRow++);
			iCell = 0;
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				cellStyleDataAux=cellStyleData;
			}
			
			PedidoCompraConstantesFunciones.generarExcelReporteDataPedidoCompra("NORMAL",row,workbook,pedidocompra,cellStyleDataAux);
		
			
			/*
            Cell cell0 = row.createCell(0);
            cell0.setCellValue(country.getName());
            Cell cell1 = row.createCell(1);
            cell1.setCellValue(country.getShortCode());
			*/
			
			i++;
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.pedidocompraSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Pedido Compra",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteHeaderPedidoCompra(String sTipo,Row row,Workbook workbook) {
		
		PedidoCompraConstantesFunciones.generarExcelReporteHeaderPedidoCompra(sTipo,row,workbook);
		
		/*
		Cell cell=null;
		int iCell=0;
		
		CellStyle cellStyle = workbook.createCellStyle();
		cellStyle.setFillBackgroundColor(IndexedColors.GREEN.getIndex());
		cellStyle.setFillPattern(CellStyle.ALIGN_FILL);
		*/
		
	}
	
	public void generarExcelReporteVerticalPedidoCompras(String sAccionBusqueda,String sTipoArchivoReporte,List<PedidoCompra> pedidocomprasParaReportes,Boolean paraDinamico) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"pedidocompra_vertical";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("PedidoCompras");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		CellStyle cellStyle = Funciones2.getStyleTitulo(workbook,"ZEBRA");;
		
		CellStyle cellStyleTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL_VERTICAL");
		
		
		for(PedidoCompra pedidocompra : pedidocomprasParaReportes) {
			row = sheet.createRow(iRow++);
			iRowLast=iRow - 1;
			
			cell = row.createCell(0);
			cell.setCellValue(PedidoCompraConstantesFunciones.getPedidoCompraDescripcion(pedidocompra));
			cell.setCellStyle(cellStyleTitulo);
			
			sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
	
			


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoCompraConstantesFunciones.LABEL_IDEMPRESA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoCompraConstantesFunciones.LABEL_IDEMPRESA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidocompra.getempresa_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoCompraConstantesFunciones.LABEL_IDSUCURSAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoCompraConstantesFunciones.LABEL_IDSUCURSAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidocompra.getsucursal_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoCompraConstantesFunciones.LABEL_IDMODULO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoCompraConstantesFunciones.LABEL_IDMODULO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidocompra.getmodulo_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoCompraConstantesFunciones.LABEL_IDEJERCICIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoCompraConstantesFunciones.LABEL_IDEJERCICIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidocompra.getejercicio_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoCompraConstantesFunciones.LABEL_IDPERIODO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoCompraConstantesFunciones.LABEL_IDPERIODO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidocompra.getperiodo_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoCompraConstantesFunciones.LABEL_IDANIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoCompraConstantesFunciones.LABEL_IDANIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidocompra.getanio_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoCompraConstantesFunciones.LABEL_IDMES))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoCompraConstantesFunciones.LABEL_IDMES);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidocompra.getmes_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoCompraConstantesFunciones.LABEL_NUMEROSECUENCIAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoCompraConstantesFunciones.LABEL_NUMEROSECUENCIAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidocompra.getnumero_secuencial());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoCompraConstantesFunciones.LABEL_IDCLIENTE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoCompraConstantesFunciones.LABEL_IDCLIENTE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidocompra.getcliente_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoCompraConstantesFunciones.LABEL_IDUSUARIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoCompraConstantesFunciones.LABEL_IDUSUARIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidocompra.getusuario_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoCompraConstantesFunciones.LABEL_IDMONEDA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoCompraConstantesFunciones.LABEL_IDMONEDA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidocompra.getmoneda_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoCompraConstantesFunciones.LABEL_IDESTADOPEDIDOCOMPRA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoCompraConstantesFunciones.LABEL_IDESTADOPEDIDOCOMPRA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidocompra.getestadopedidocompra_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoCompraConstantesFunciones.LABEL_TOTAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoCompraConstantesFunciones.LABEL_TOTAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidocompra.gettotal());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoCompraConstantesFunciones.LABEL_FECHA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoCompraConstantesFunciones.LABEL_FECHA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidocompra.getfecha());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoCompraConstantesFunciones.LABEL_IDEMPLEADO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoCompraConstantesFunciones.LABEL_IDEMPLEADO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidocompra.getempleado_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoCompraConstantesFunciones.LABEL_RESPONSABLE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoCompraConstantesFunciones.LABEL_RESPONSABLE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidocompra.getresponsable());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoCompraConstantesFunciones.LABEL_SOLICITADOPOR))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoCompraConstantesFunciones.LABEL_SOLICITADOPOR);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidocompra.getsolicitado_por());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoCompraConstantesFunciones.LABEL_MOTIVOSOLICITUD))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoCompraConstantesFunciones.LABEL_MOTIVOSOLICITUD);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidocompra.getmotivo_solicitud());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoCompraConstantesFunciones.LABEL_AREASOLICITUD))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoCompraConstantesFunciones.LABEL_AREASOLICITUD);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidocompra.getarea_solicitud());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoCompraConstantesFunciones.LABEL_PARAUSODE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoCompraConstantesFunciones.LABEL_PARAUSODE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidocompra.getpara_uso_de());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoCompraConstantesFunciones.LABEL_LUGARENTREGA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoCompraConstantesFunciones.LABEL_LUGARENTREGA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidocompra.getlugar_entrega());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoCompraConstantesFunciones.LABEL_DESCRIPCION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoCompraConstantesFunciones.LABEL_DESCRIPCION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidocompra.getdescripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoCompraConstantesFunciones.LABEL_FECHAEMISION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoCompraConstantesFunciones.LABEL_FECHAEMISION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidocompra.getfecha_emision());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoCompraConstantesFunciones.LABEL_FECHAENTREGA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoCompraConstantesFunciones.LABEL_FECHAENTREGA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidocompra.getfecha_entrega());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoCompraConstantesFunciones.LABEL_IDFORMATO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoCompraConstantesFunciones.LABEL_IDFORMATO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidocompra.getformato_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoCompraConstantesFunciones.LABEL_IDTIPOCAMBIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoCompraConstantesFunciones.LABEL_IDTIPOCAMBIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidocompra.gettipocambio_descripcion());


			}						
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.pedidocompraSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Pedido Compra",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteRelacionesPedidoCompras(String sAccionBusqueda,String sTipoArchivoReporte,List<PedidoCompra> pedidocomprasParaReportes,Boolean paraDinamico) throws Exception {
		
		ArrayList<Classe> classes=new ArrayList<Classe>();
		List<PedidoCompra> pedidocomprasRespaldo=null;
		
		classes=PedidoCompraConstantesFunciones.getClassesRelationshipsOfPedidoCompra(new ArrayList<Classe>(),DeepLoadType.NONE,false);
					
		this.datosDeep=new DatosDeep();
		
		this.datosDeep.setIsDeep(false);
		this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
		this.datosDeep.setClases(classes);
			
		this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
		this.datosCliente.setIsConDeep(true);	
		this.datosCliente.setIsConExportar(false);
		
						
		this.pedidocompraLogic.setDatosCliente(this.datosCliente);
		this.pedidocompraLogic.setDatosDeep(this.datosDeep);
		this.pedidocompraLogic.setIsConDeep(true);
		
		pedidocomprasRespaldo=this.pedidocompraLogic.getPedidoCompras();
		
		this.pedidocompraLogic.setPedidoCompras(pedidocomprasParaReportes);	
		this.pedidocompraLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
		
		pedidocomprasParaReportes=this.pedidocompraLogic.getPedidoCompras();
		this.pedidocompraLogic.setPedidoCompras(pedidocomprasRespaldo);
		
		
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"pedidocompra_relacion";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("PedidoCompras");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderPedidoCompra("NORMAL",row,workbook);
		
		int i=0;
		int i2=0;
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL");
		CellStyle cellStyleDataZebra = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux =null;
		CellStyle cellStyleDataAuxHijo =null;
		
		for(PedidoCompra pedidocompra : pedidocomprasParaReportes) {			
			if(i!=0) {
				row = sheet.createRow(iRow++);				
				this.generarExcelReporteHeaderPedidoCompra("NORMAL",row,workbook);
			}
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				//cellStyleDataAux=cellStyleData;
			}
			
			row = sheet.createRow(iRow++);						
			PedidoCompraConstantesFunciones.generarExcelReporteDataPedidoCompra("NORMAL",row,workbook,pedidocompra,cellStyleDataAux);
		
			
			


				//DetallePedidoCompra
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(DetallePedidoCompraConstantesFunciones.SCLASSWEBTITULO))) {

				if(pedidocompra.getDetallePedidoCompras()!=null && pedidocompra.getDetallePedidoCompras().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(DetallePedidoCompraConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					DetallePedidoCompraConstantesFunciones.generarExcelReporteHeaderDetallePedidoCompra("RELACIONADO",row,workbook);
				}

				if(pedidocompra.getDetallePedidoCompras()!=null) {
					i2=0;
					for(DetallePedidoCompra detallepedidocompra : pedidocompra.getDetallePedidoCompras()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						DetallePedidoCompraConstantesFunciones.generarExcelReporteDataDetallePedidoCompra("RELACIONADO",row,workbook,detallepedidocompra,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}
			
			i++;
        }
        
		/*
		row = sheet.createRow(iRow++);
		iRowLast=iRow - 1;
			
		cell = row.createCell(0);
		cell.setCellValue(PedidoCompraConstantesFunciones.getPedidoCompraDescripcion(pedidocompra));
		cell.setCellStyle(cellStyleTitulo);
			
		sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
		*/
		
			
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.pedidocompraSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Pedido Compra",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	
	public Boolean existeColumnaReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoPedidoCompra.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoPedidoCompra.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public Boolean existeRelacionReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoPedidoCompra.getjListRelacionesSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoPedidoCompra.getjListRelacionesSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public void startProcessPedidoCompra() throws Exception {		
		this.startProcessPedidoCompra(true);
	}
	
	public void startProcessPedidoCompra(Boolean conSplash) throws Exception {		
		//FuncionesSwing.enableDisablePanels(false,this.jTabbedPaneBusquedasPedidoCompra ,this.jPanelParametrosReportesPedidoCompra, this.jScrollPanelDatosPedidoCompra,this.jPanelPaginacionPedidoCompra, this.jScrollPanelDatosEdicionPedidoCompra, this.jPanelAccionesPedidoCompra,this.jPanelAccionesFormularioPedidoCompra,this.jmenuBarPedidoCompra,this.jmenuBarDetallePedidoCompra,this.jTtoolBarPedidoCompra,this.jTtoolBarDetallePedidoCompra);		
		
		final JTabbedPane jTabbedPaneBusquedasPedidoCompra=this.jTabbedPaneBusquedasPedidoCompra; 
		
		final JPanel jPanelParametrosReportesPedidoCompra=this.jPanelParametrosReportesPedidoCompra;
		//final JScrollPane jScrollPanelDatosPedidoCompra=this.jScrollPanelDatosPedidoCompra;
		final JTable jTableDatosPedidoCompra=this.jTableDatosPedidoCompra;		
		final JPanel jPanelPaginacionPedidoCompra=this.jPanelPaginacionPedidoCompra;
		//final JScrollPane jScrollPanelDatosEdicionPedidoCompra=this.jScrollPanelDatosEdicionPedidoCompra;
		final JPanel jPanelAccionesPedidoCompra=this.jPanelAccionesPedidoCompra;
		
		JPanel jPanelCamposAuxiliarPedidoCompra=new JPanelMe();
		JPanel jPanelAccionesFormularioAuxiliarPedidoCompra=new JPanelMe();
		
		if(this.jInternalFrameDetalleFormPedidoCompra!=null) {
			jPanelCamposAuxiliarPedidoCompra=this.jInternalFrameDetalleFormPedidoCompra.jPanelCamposPedidoCompra;
			jPanelAccionesFormularioAuxiliarPedidoCompra=this.jInternalFrameDetalleFormPedidoCompra.jPanelAccionesFormularioPedidoCompra;
		}
		
		final JPanel jPanelCamposPedidoCompra=jPanelCamposAuxiliarPedidoCompra;
		final JPanel jPanelAccionesFormularioPedidoCompra=jPanelAccionesFormularioAuxiliarPedidoCompra;
		
		
		final JMenuBar jmenuBarPedidoCompra=this.jmenuBarPedidoCompra;
		final JToolBar jTtoolBarPedidoCompra=this.jTtoolBarPedidoCompra;		
		
		
		JMenuBar jmenuBarDetalleAuxiliarPedidoCompra=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarPedidoCompra=new JToolBar();		
		
		if(this.jInternalFrameDetalleFormPedidoCompra!=null) {
			jmenuBarDetalleAuxiliarPedidoCompra=this.jInternalFrameDetalleFormPedidoCompra.jmenuBarDetallePedidoCompra;
			jTtoolBarDetalleAuxiliarPedidoCompra=this.jInternalFrameDetalleFormPedidoCompra.jTtoolBarDetallePedidoCompra;
		}
		
		final JMenuBar jmenuBarDetallePedidoCompra=jmenuBarDetalleAuxiliarPedidoCompra;
		final JToolBar jTtoolBarDetallePedidoCompra=jTtoolBarDetalleAuxiliarPedidoCompra;		
		
		
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("START");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasPedidoCompra;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesPedidoCompra;
			processRunnable.jTableDatos=jTableDatosPedidoCompra;
			processRunnable.jPanelCampos=jPanelCamposPedidoCompra;
			processRunnable.jPanelPaginacion=jPanelPaginacionPedidoCompra;
			processRunnable.jPanelAcciones=jPanelAccionesPedidoCompra;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioPedidoCompra;
			
			
			processRunnable.jmenuBar=jmenuBarPedidoCompra;
			processRunnable.jmenuBarDetalle=jmenuBarDetallePedidoCompra;
			processRunnable.jTtoolBar=jTtoolBarPedidoCompra;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetallePedidoCompra;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasPedidoCompra ,jPanelParametrosReportesPedidoCompra,jTableDatosPedidoCompra, /*jScrollPanelDatosPedidoCompra,*/jPanelCamposPedidoCompra,jPanelPaginacionPedidoCompra, /*jScrollPanelDatosEdicionPedidoCompra,*/ jPanelAccionesPedidoCompra,jPanelAccionesFormularioPedidoCompra,jmenuBarPedidoCompra,jmenuBarDetallePedidoCompra,jTtoolBarPedidoCompra,jTtoolBarDetallePedidoCompra);
		
			startProcess();//this.
		}
						
		/*
		if(conSplash) {
			SwingUtilities.invokeLater(new Runnable() {
			      public void run() {
			    	  try {
							FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasPedidoCompra ,jPanelParametrosReportesPedidoCompra, jScrollPanelDatosPedidoCompra,jPanelPaginacionPedidoCompra, jScrollPanelDatosEdicionPedidoCompra, jPanelAccionesPedidoCompra,jPanelAccionesFormularioPedidoCompra,jmenuBarPedidoCompra,jmenuBarDetallePedidoCompra,jTtoolBarPedidoCompra,jTtoolBarDetallePedidoCompra);
						
							startProcess();//this.
							
						} catch (Exception e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
			      }
			});
		}
		*/
	}
	
	public void finishProcessPedidoCompra() {// throws Exception 
		this.finishProcessPedidoCompra(true);
	}
	
	public void finishProcessPedidoCompra(Boolean conSplash) {// throws Exception 
		//FuncionesSwing.enableDisablePanels(true,this.jTabbedPaneBusquedasPedidoCompra ,this.jPanelParametrosReportesPedidoCompra, this.jScrollPanelDatosPedidoCompra,this.jPanelPaginacionPedidoCompra, this.jScrollPanelDatosEdicionPedidoCompra, this.jPanelAccionesPedidoCompra,this.jPanelAccionesFormularioPedidoCompra,this.jmenuBarPedidoCompra,this.jmenuBarDetallePedidoCompra,this.jTtoolBarPedidoCompra,this.jTtoolBarDetallePedidoCompra);		
		
		final JTabbedPane jTabbedPaneBusquedasPedidoCompra=this.jTabbedPaneBusquedasPedidoCompra; 
		
		final JPanel jPanelParametrosReportesPedidoCompra=this.jPanelParametrosReportesPedidoCompra;
		//final JScrollPane jScrollPanelDatosPedidoCompra=this.jScrollPanelDatosPedidoCompra;
		final JTable jTableDatosPedidoCompra=this.jTableDatosPedidoCompra;		
		final JPanel jPanelPaginacionPedidoCompra=this.jPanelPaginacionPedidoCompra;
		//final JScrollPane jScrollPanelDatosEdicionPedidoCompra=this.jScrollPanelDatosEdicionPedidoCompra;
		final JPanel jPanelAccionesPedidoCompra=this.jPanelAccionesPedidoCompra;
		
		JPanel jPanelCamposAuxiliarPedidoCompra=new JPanel();
		JPanel jPanelAccionesFormularioAuxiliarPedidoCompra=new JPanel();
		
		if(this.jInternalFrameDetalleFormPedidoCompra!=null) {
			jPanelCamposAuxiliarPedidoCompra=this.jInternalFrameDetalleFormPedidoCompra.jPanelCamposPedidoCompra;
			jPanelAccionesFormularioAuxiliarPedidoCompra=this.jInternalFrameDetalleFormPedidoCompra.jPanelAccionesFormularioPedidoCompra;
		}
		
		final JPanel jPanelCamposPedidoCompra=jPanelCamposAuxiliarPedidoCompra;
		final JPanel jPanelAccionesFormularioPedidoCompra=jPanelAccionesFormularioAuxiliarPedidoCompra;
		
		
		final JMenuBar jmenuBarPedidoCompra=this.jmenuBarPedidoCompra;		
		final JToolBar jTtoolBarPedidoCompra=this.jTtoolBarPedidoCompra;
				
		JMenuBar jmenuBarDetalleAuxiliarPedidoCompra=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarPedidoCompra=new JToolBar();
		
		if(this.jInternalFrameDetalleFormPedidoCompra!=null) {
			jmenuBarDetalleAuxiliarPedidoCompra=this.jInternalFrameDetalleFormPedidoCompra.jmenuBarDetallePedidoCompra;
			jTtoolBarDetalleAuxiliarPedidoCompra=this.jInternalFrameDetalleFormPedidoCompra.jTtoolBarDetallePedidoCompra;		
		}
		
		final JMenuBar jmenuBarDetallePedidoCompra=jmenuBarDetalleAuxiliarPedidoCompra;
		final JToolBar jTtoolBarDetallePedidoCompra=jTtoolBarDetalleAuxiliarPedidoCompra;
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("END");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasPedidoCompra;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesPedidoCompra;
			processRunnable.jTableDatos=jTableDatosPedidoCompra;
			processRunnable.jPanelCampos=jPanelCamposPedidoCompra;
			processRunnable.jPanelPaginacion=jPanelPaginacionPedidoCompra;
			processRunnable.jPanelAcciones=jPanelAccionesPedidoCompra;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioPedidoCompra;
			
			
			processRunnable.jmenuBar=jmenuBarPedidoCompra;
			processRunnable.jmenuBarDetalle=jmenuBarDetallePedidoCompra;
			processRunnable.jTtoolBar=jTtoolBarPedidoCompra;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetallePedidoCompra;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			if(conSplash) {
				SwingUtilities.invokeLater(new RunnableProceso(true,this,jTabbedPaneBusquedasPedidoCompra ,jPanelParametrosReportesPedidoCompra, jTableDatosPedidoCompra,/*jScrollPanelDatosPedidoCompra,*/jPanelCamposPedidoCompra,jPanelPaginacionPedidoCompra, /*jScrollPanelDatosEdicionPedidoCompra,*/ jPanelAccionesPedidoCompra,jPanelAccionesFormularioPedidoCompra,jmenuBarPedidoCompra,jmenuBarDetallePedidoCompra,jTtoolBarPedidoCompra,jTtoolBarDetallePedidoCompra));
			}
		}						
	}
	
	/*
	public void habilitarDeshabilitarControlesPedidoCompra(Boolean esHabilitar,Boolean conDetalle) {
		this.habilitarDeshabilitarToolBarPedidoCompra(esHabilitar,conDetalle);
		this.habilitarDeshabilitarMenuPedidoCompra(esHabilitar,conDetalle);
	}
	
	public void habilitarDeshabilitarToolBarPedidoCompra(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jTtoolBarPedidoCompra,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jTtoolBarDetallePedidoCompra,esHabilitar,1,1);
		}
	}
	
	public void habilitarDeshabilitarMenuPedidoCompra(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jmenuBarPedidoCompra,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jmenuBarDetallePedidoCompra,esHabilitar,1,1);
		}
	}
	*/
	
	
	
	public void procesarBusqueda(String sAccionBusqueda) throws Exception {		
		String  finalQueryPaginacion=this.pedidocompraConstantesFunciones.getsFinalQueryPedidoCompra();
		String  finalQueryPaginacionTodos=this.pedidocompraConstantesFunciones.getsFinalQueryPedidoCompra();
		
		Boolean esBusqueda=false;
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!sAccionBusqueda.equals("Todos"))	{
			esBusqueda=true;
		}
		
		this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
		this.arrDatoGeneralNo= new  ArrayList<String>();
		
		ArrayList<String> arrColumnasGlobalesNo=PedidoCompraConstantesFunciones.getArrayColumnasGlobalesNoPedidoCompra(this.arrDatoGeneral);
		ArrayList<String> arrColumnasGlobales=PedidoCompraConstantesFunciones.getArrayColumnasGlobalesPedidoCompra(this.arrDatoGeneral,arrColumnasGlobalesNo);
		
			
		String  finalQueryGlobal="";
		
		finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,!esBusqueda,esBusqueda,arrColumnasGlobales,PedidoCompraConstantesFunciones.TABLENAME);
		
		String sOrderBy="";
		
		
		sOrderBy=Funciones2.getFinalQueryOrderBy(this.arrOrderBy);
		
		
		if(!sOrderBy.equals("")) {			
			finalQueryPaginacion=sOrderBy;
			finalQueryPaginacionTodos=sOrderBy;
		}
		
		
		//INICIALIZA ELIMINADOS
		this.pedidocomprasEliminados= new ArrayList<PedidoCompra>();
		
		if(!this.isEntroOnLoad) {
			this.onLoad();
		}/* else {
			this.isEntroOnLoad=false;
		}*/
		
		
		
				
		try	{		
			
			//this.startProcessPedidoCompra();
		
				///*PedidoCompraSessionBean*/this.pedidocompraSessionBean=new PedidoCompraSessionBean();
			
			if(this.pedidocompraSessionBean==null) {
				this.pedidocompraSessionBean=new PedidoCompraSessionBean();
			}
			
			//ACTUALIZA EL TAMANIO DE PAGINACION DESDE EL COMBO
			if(this.sTipoPaginacion!=null && !this.sTipoPaginacion.equals("")) {
				if(!this.sTipoPaginacion.equals("TODOS")) {
					this.iNumeroPaginacion=Integer.parseInt(this.sTipoPaginacion);
				} else {
					this.iNumeroPaginacion=-1;
					this.iNumeroPaginacionPagina=-1;
				}
			} else {
				if(this.iNumeroPaginacion==null || (this.iNumeroPaginacion!=null && this.iNumeroPaginacion<=0)) {
					this.iNumeroPaginacion=PedidoCompraConstantesFunciones.INUMEROPAGINACION;
				}
			}
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);
			
			this.cargarDatosCliente();
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			classes=PedidoCompraConstantesFunciones.getClassesForeignKeysOfPedidoCompra(new ArrayList<Classe>(),DeepLoadType.NONE);
			
		
			this.datosDeep=new DatosDeep();
			this.datosDeep.setIsDeep(false);
			this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
			this.datosDeep.setClases(classes);
			
			this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
			this.datosCliente.setIsConDeep(true);
			
			if(false) {//this.conExportar
				this.datosCliente.setIsConExportar(true);
				this.datosCliente.setDatosExportarParametros(Funciones2.getTipoExportar(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getcon_exportar_cabecera(),Funciones2.getTipoDelimiter(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getpath_exportar()+"/pedidocompra."+Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario));
			} else {
				this.datosCliente.setIsConExportar(false);
			}
			
			pedidocomprasAux= new ArrayList<PedidoCompra>();
			
				
			pedidocompraLogic.setDatosCliente(this.datosCliente);
			pedidocompraLogic.setDatosDeep(this.datosDeep);
			pedidocompraLogic.setIsConDeep(true);
			
			
			pedidocompraLogic.getPedidoCompraDataAccess().setIsForForeingsKeysDataRelationships(true);
			
			if(sAccionBusqueda.equals("Todos") || sAccionBusqueda.equals("Query"))	{	
				if(sAccionBusqueda.equals("Todos")) {
					//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
					//this.sFinalQueryGeneral="";
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacionTodos );
					
					pedidocompraLogic.getTodosPedidoCompras(finalQueryGlobal,pagination);
					
					//pedidocompraLogic.getTodosPedidoComprasWithConnection(finalQueryGlobal,pagination);										
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
				
				if(pedidocompraLogic.getPedidoCompras()==null|| pedidocompraLogic.getPedidoCompras().size()==0)	{
					
				
				}
				
				if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(-1);
						this.pagination.setiMaxResults(-1);
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							pedidocomprasAux= new ArrayList<PedidoCompra>();
							pedidocomprasAux.addAll(pedidocompraLogic.getPedidoCompras());						
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidocomprasAux= new ArrayList<PedidoCompra>();
							pedidocomprasAux.addAll(pedidocompras);
						}
						//ARCHITECTURE
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							pedidocompraLogic.getTodosPedidoCompras(finalQueryGlobal+"",this.pagination);												
							
							//pedidocompraLogic.getTodosPedidoComprasWithConnection(finalQueryGlobal+"",this.pagination);												
						} else if(Constantes.ISUSAEJBREMOTE) {
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
					}
					
					this.generarReportePedidoCompras("Todos",pedidocompraLogic.getPedidoCompras() );
					
					if(false) {//isMostrarTodosResultadosReporte						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							pedidocompraLogic.setPedidoCompras(new ArrayList<PedidoCompra>());					
							pedidocompraLogic.getPedidoCompras().addAll(pedidocomprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidocompras=new ArrayList<PedidoCompra>();
							pedidocompras.addAll(pedidocomprasAux);
						}
						//ARCHITECTURE
						
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);														
					}
				}
			}
			else if(sAccionBusqueda.equals("PorId")) {
				Long idPedidoCompra=0L;
				
				if(this.idActual!=null && this.idActual!=0L) {
					idPedidoCompra=this.idActual;
				
				} else if(this.idPedidoCompraActual!=null && this.idPedidoCompraActual!=0L) {
					idPedidoCompra=idPedidoCompraActual;
				}
				
					
				this.sDetalleReporte=PedidoCompraConstantesFunciones.getDetalleIndicePorId(idPedidoCompra);
				
				this.pedidocompras=new ArrayList<PedidoCompra>();
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {					
					pedidocompraLogic.getEntity(idPedidoCompra);
					
					//pedidocompraLogic.getEntityWithConnection(idPedidoCompra);
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
								
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidocompraLogic.setPedidoCompras(new ArrayList<PedidoCompra>());
					pedidocompraLogic.getPedidoCompras().add(pedidocompraLogic.getPedidoCompra());
				
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pedidocompras=new ArrayList<PedidoCompra>();
					this.pedidocompras.add(pedidocompra);
				}
				
				if(pedidocompraLogic.getPedidoCompra()==null)	{
					
				
				}			
			}
			
		
			else if(sAccionBusqueda.equals("FK_IdCliente")) {
				this.sDetalleReporte=PedidoCompraConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					pedidocompraLogic.getPedidoComprasFK_IdCliente(finalQueryGlobal,pagination,id_clienteFK_IdCliente);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoCompraConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoCompraConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=pedidocompraLogic.getPedidoCompras()==null||pedidocompraLogic.getPedidoCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=pedidocompras==null|| pedidocompras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidocomprasAux=new ArrayList<PedidoCompra>();
						pedidocomprasAux.addAll(pedidocompraLogic.getPedidoCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidocomprasAux=new ArrayList<PedidoCompra>();
							pedidocomprasAux.addAll(pedidocompras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							pedidocompraLogic.getPedidoComprasFK_IdCliente(finalQueryGlobal,pagination,id_clienteFK_IdCliente);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoCompraConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoCompraConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePedidoCompras("FK_IdCliente",pedidocompraLogic.getPedidoCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePedidoCompras("FK_IdCliente",pedidocompras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidocompraLogic.setPedidoCompras(new ArrayList<PedidoCompra>());
						pedidocompraLogic.getPedidoCompras().addAll(pedidocomprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidocompras=new ArrayList<PedidoCompra>();
							pedidocompras.addAll(pedidocomprasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEjercicio")) {
				this.sDetalleReporte=PedidoCompraConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					pedidocompraLogic.getPedidoComprasFK_IdEjercicio(finalQueryGlobal,pagination,id_ejercicioFK_IdEjercicio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoCompraConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoCompraConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=pedidocompraLogic.getPedidoCompras()==null||pedidocompraLogic.getPedidoCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=pedidocompras==null|| pedidocompras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidocomprasAux=new ArrayList<PedidoCompra>();
						pedidocomprasAux.addAll(pedidocompraLogic.getPedidoCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidocomprasAux=new ArrayList<PedidoCompra>();
							pedidocomprasAux.addAll(pedidocompras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							pedidocompraLogic.getPedidoComprasFK_IdEjercicio(finalQueryGlobal,pagination,id_ejercicioFK_IdEjercicio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoCompraConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoCompraConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePedidoCompras("FK_IdEjercicio",pedidocompraLogic.getPedidoCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePedidoCompras("FK_IdEjercicio",pedidocompras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidocompraLogic.setPedidoCompras(new ArrayList<PedidoCompra>());
						pedidocompraLogic.getPedidoCompras().addAll(pedidocomprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidocompras=new ArrayList<PedidoCompra>();
							pedidocompras.addAll(pedidocomprasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEmpleado")) {
				this.sDetalleReporte=PedidoCompraConstantesFunciones.getDetalleIndiceFK_IdEmpleado(id_empleadoFK_IdEmpleado);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					pedidocompraLogic.getPedidoComprasFK_IdEmpleado(finalQueryGlobal,pagination,id_empleadoFK_IdEmpleado);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoCompraConstantesFunciones.getDetalleIndiceFK_IdEmpleado(id_empleadoFK_IdEmpleado);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoCompraConstantesFunciones.getDetalleIndiceFK_IdEmpleado(id_empleadoFK_IdEmpleado);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=pedidocompraLogic.getPedidoCompras()==null||pedidocompraLogic.getPedidoCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=pedidocompras==null|| pedidocompras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidocomprasAux=new ArrayList<PedidoCompra>();
						pedidocomprasAux.addAll(pedidocompraLogic.getPedidoCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidocomprasAux=new ArrayList<PedidoCompra>();
							pedidocomprasAux.addAll(pedidocompras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							pedidocompraLogic.getPedidoComprasFK_IdEmpleado(finalQueryGlobal,pagination,id_empleadoFK_IdEmpleado);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoCompraConstantesFunciones.getDetalleIndiceFK_IdEmpleado(id_empleadoFK_IdEmpleado);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoCompraConstantesFunciones.getDetalleIndiceFK_IdEmpleado(id_empleadoFK_IdEmpleado);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePedidoCompras("FK_IdEmpleado",pedidocompraLogic.getPedidoCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePedidoCompras("FK_IdEmpleado",pedidocompras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidocompraLogic.setPedidoCompras(new ArrayList<PedidoCompra>());
						pedidocompraLogic.getPedidoCompras().addAll(pedidocomprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidocompras=new ArrayList<PedidoCompra>();
							pedidocompras.addAll(pedidocomprasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEmpresa")) {
				this.sDetalleReporte=PedidoCompraConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					pedidocompraLogic.getPedidoComprasFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoCompraConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoCompraConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=pedidocompraLogic.getPedidoCompras()==null||pedidocompraLogic.getPedidoCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=pedidocompras==null|| pedidocompras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidocomprasAux=new ArrayList<PedidoCompra>();
						pedidocomprasAux.addAll(pedidocompraLogic.getPedidoCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidocomprasAux=new ArrayList<PedidoCompra>();
							pedidocomprasAux.addAll(pedidocompras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							pedidocompraLogic.getPedidoComprasFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoCompraConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoCompraConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePedidoCompras("FK_IdEmpresa",pedidocompraLogic.getPedidoCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePedidoCompras("FK_IdEmpresa",pedidocompras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidocompraLogic.setPedidoCompras(new ArrayList<PedidoCompra>());
						pedidocompraLogic.getPedidoCompras().addAll(pedidocomprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidocompras=new ArrayList<PedidoCompra>();
							pedidocompras.addAll(pedidocomprasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEstadoPedidoCompraEstadoPedoCompra")) {
				this.sDetalleReporte=PedidoCompraConstantesFunciones.getDetalleIndiceFK_IdEstadoPedidoCompraEstadoPedoCompra(id_estado_pedido_compraFK_IdEstadoPedidoCompraEstadoPedoCompra);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					pedidocompraLogic.getPedidoComprasFK_IdEstadoPedidoCompraEstadoPedoCompra(finalQueryGlobal,pagination,id_estado_pedido_compraFK_IdEstadoPedidoCompraEstadoPedoCompra);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoCompraConstantesFunciones.getDetalleIndiceFK_IdEstadoPedidoCompraEstadoPedoCompra(id_estado_pedido_compraFK_IdEstadoPedidoCompraEstadoPedoCompra);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoCompraConstantesFunciones.getDetalleIndiceFK_IdEstadoPedidoCompraEstadoPedoCompra(id_estado_pedido_compraFK_IdEstadoPedidoCompraEstadoPedoCompra);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=pedidocompraLogic.getPedidoCompras()==null||pedidocompraLogic.getPedidoCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=pedidocompras==null|| pedidocompras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidocomprasAux=new ArrayList<PedidoCompra>();
						pedidocomprasAux.addAll(pedidocompraLogic.getPedidoCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidocomprasAux=new ArrayList<PedidoCompra>();
							pedidocomprasAux.addAll(pedidocompras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							pedidocompraLogic.getPedidoComprasFK_IdEstadoPedidoCompraEstadoPedoCompra(finalQueryGlobal,pagination,id_estado_pedido_compraFK_IdEstadoPedidoCompraEstadoPedoCompra);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoCompraConstantesFunciones.getDetalleIndiceFK_IdEstadoPedidoCompraEstadoPedoCompra(id_estado_pedido_compraFK_IdEstadoPedidoCompraEstadoPedoCompra);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoCompraConstantesFunciones.getDetalleIndiceFK_IdEstadoPedidoCompraEstadoPedoCompra(id_estado_pedido_compraFK_IdEstadoPedidoCompraEstadoPedoCompra);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePedidoCompras("FK_IdEstadoPedidoCompraEstadoPedoCompra",pedidocompraLogic.getPedidoCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePedidoCompras("FK_IdEstadoPedidoCompraEstadoPedoCompra",pedidocompras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidocompraLogic.setPedidoCompras(new ArrayList<PedidoCompra>());
						pedidocompraLogic.getPedidoCompras().addAll(pedidocomprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidocompras=new ArrayList<PedidoCompra>();
							pedidocompras.addAll(pedidocomprasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdModulo")) {
				this.sDetalleReporte=PedidoCompraConstantesFunciones.getDetalleIndiceFK_IdModulo(id_moduloFK_IdModulo);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					pedidocompraLogic.getPedidoComprasFK_IdModulo(finalQueryGlobal,pagination,id_moduloFK_IdModulo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoCompraConstantesFunciones.getDetalleIndiceFK_IdModulo(id_moduloFK_IdModulo);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoCompraConstantesFunciones.getDetalleIndiceFK_IdModulo(id_moduloFK_IdModulo);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=pedidocompraLogic.getPedidoCompras()==null||pedidocompraLogic.getPedidoCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=pedidocompras==null|| pedidocompras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidocomprasAux=new ArrayList<PedidoCompra>();
						pedidocomprasAux.addAll(pedidocompraLogic.getPedidoCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidocomprasAux=new ArrayList<PedidoCompra>();
							pedidocomprasAux.addAll(pedidocompras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							pedidocompraLogic.getPedidoComprasFK_IdModulo(finalQueryGlobal,pagination,id_moduloFK_IdModulo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoCompraConstantesFunciones.getDetalleIndiceFK_IdModulo(id_moduloFK_IdModulo);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoCompraConstantesFunciones.getDetalleIndiceFK_IdModulo(id_moduloFK_IdModulo);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePedidoCompras("FK_IdModulo",pedidocompraLogic.getPedidoCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePedidoCompras("FK_IdModulo",pedidocompras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidocompraLogic.setPedidoCompras(new ArrayList<PedidoCompra>());
						pedidocompraLogic.getPedidoCompras().addAll(pedidocomprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidocompras=new ArrayList<PedidoCompra>();
							pedidocompras.addAll(pedidocomprasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdPeriodo")) {
				this.sDetalleReporte=PedidoCompraConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					pedidocompraLogic.getPedidoComprasFK_IdPeriodo(finalQueryGlobal,pagination,id_periodoFK_IdPeriodo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoCompraConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoCompraConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=pedidocompraLogic.getPedidoCompras()==null||pedidocompraLogic.getPedidoCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=pedidocompras==null|| pedidocompras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidocomprasAux=new ArrayList<PedidoCompra>();
						pedidocomprasAux.addAll(pedidocompraLogic.getPedidoCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidocomprasAux=new ArrayList<PedidoCompra>();
							pedidocomprasAux.addAll(pedidocompras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							pedidocompraLogic.getPedidoComprasFK_IdPeriodo(finalQueryGlobal,pagination,id_periodoFK_IdPeriodo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoCompraConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoCompraConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePedidoCompras("FK_IdPeriodo",pedidocompraLogic.getPedidoCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePedidoCompras("FK_IdPeriodo",pedidocompras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidocompraLogic.setPedidoCompras(new ArrayList<PedidoCompra>());
						pedidocompraLogic.getPedidoCompras().addAll(pedidocomprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidocompras=new ArrayList<PedidoCompra>();
							pedidocompras.addAll(pedidocomprasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdSucursal")) {
				this.sDetalleReporte=PedidoCompraConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					pedidocompraLogic.getPedidoComprasFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoCompraConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoCompraConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=pedidocompraLogic.getPedidoCompras()==null||pedidocompraLogic.getPedidoCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=pedidocompras==null|| pedidocompras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidocomprasAux=new ArrayList<PedidoCompra>();
						pedidocomprasAux.addAll(pedidocompraLogic.getPedidoCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidocomprasAux=new ArrayList<PedidoCompra>();
							pedidocomprasAux.addAll(pedidocompras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							pedidocompraLogic.getPedidoComprasFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoCompraConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoCompraConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePedidoCompras("FK_IdSucursal",pedidocompraLogic.getPedidoCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePedidoCompras("FK_IdSucursal",pedidocompras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidocompraLogic.setPedidoCompras(new ArrayList<PedidoCompra>());
						pedidocompraLogic.getPedidoCompras().addAll(pedidocomprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidocompras=new ArrayList<PedidoCompra>();
							pedidocompras.addAll(pedidocomprasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdUsuario")) {
				this.sDetalleReporte=PedidoCompraConstantesFunciones.getDetalleIndiceFK_IdUsuario(id_usuarioFK_IdUsuario);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					pedidocompraLogic.getPedidoComprasFK_IdUsuario(finalQueryGlobal,pagination,id_usuarioFK_IdUsuario);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoCompraConstantesFunciones.getDetalleIndiceFK_IdUsuario(id_usuarioFK_IdUsuario);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoCompraConstantesFunciones.getDetalleIndiceFK_IdUsuario(id_usuarioFK_IdUsuario);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=pedidocompraLogic.getPedidoCompras()==null||pedidocompraLogic.getPedidoCompras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=pedidocompras==null|| pedidocompras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidocomprasAux=new ArrayList<PedidoCompra>();
						pedidocomprasAux.addAll(pedidocompraLogic.getPedidoCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidocomprasAux=new ArrayList<PedidoCompra>();
							pedidocomprasAux.addAll(pedidocompras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							pedidocompraLogic.getPedidoComprasFK_IdUsuario(finalQueryGlobal,pagination,id_usuarioFK_IdUsuario);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoCompraConstantesFunciones.getDetalleIndiceFK_IdUsuario(id_usuarioFK_IdUsuario);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoCompraConstantesFunciones.getDetalleIndiceFK_IdUsuario(id_usuarioFK_IdUsuario);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePedidoCompras("FK_IdUsuario",pedidocompraLogic.getPedidoCompras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePedidoCompras("FK_IdUsuario",pedidocompras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidocompraLogic.setPedidoCompras(new ArrayList<PedidoCompra>());
						pedidocompraLogic.getPedidoCompras().addAll(pedidocomprasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidocompras=new ArrayList<PedidoCompra>();
							pedidocompras.addAll(pedidocomprasAux);
						}
						//ARCHITECTURE
					}
				}

			} 
		
		
		
		this.redimensionarTablaDatos();
		//this.refrescarForeignKeysDescripcionesPedidoCompra();
		
		
		if(this.conTotales) {
			this.crearFilaTotales();
		}		
		} catch (JRException e) {
			throw e;
		} catch(Exception e) {
			throw e;
      	} finally {
      		//this.finishProcessPedidoCompra();
      	}
		
	}				
	
	public void redimensionarTablaDatos() throws Exception {
		int iSizeTabla=0;
				
		iSizeTabla=this.getSizeTablaDatos();
		
		//ARCHITECTURE
		/*
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=pedidocompraLogic.getPedidoCompras().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=pedidocompras.size();
		}
		*/
		//ARCHITECTURE
											
		this.redimensionarTablaDatos(iSizeTabla);		
	}
	
	public Integer getSizeTablaDatos() throws Exception {
		Integer iSizeTabla=0;
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=pedidocompraLogic.getPedidoCompras().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=pedidocompras.size();
		}
		//ARCHITECTURE
											
		return iSizeTabla;		
	}
	
			
	public Boolean permiteMantenimiento(PedidoCompra pedidocompra) {
		Boolean permite=true;
		
		if(this.pedidocompra.getsType().equals(Constantes2.S_TOTALES)) {
			permite=false;
		}
		
		return permite;
	}
	
	public void traerValoresTablaTotales() throws Exception {
	}
	
	
	public void traerValoresTablaOrderBy() throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.arrOrderBy=PedidoCompraConstantesFunciones.getOrderByListaPedidoCompra();							
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.arrOrderBy=PedidoCompraConstantesFunciones.getOrderByListaPedidoCompra();
		}		
	}
	
	
	public Boolean existeFilaTotales() throws Exception {
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(PedidoCompra pedidocompra:pedidocompraLogic.getPedidoCompras()) {
				if(pedidocompra.getsType().equals(Constantes2.S_TOTALES)) {
					pedidocompraTotales=pedidocompra;
					existe=true;
					break;
				}
			}
								
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(PedidoCompra pedidocompra:this.pedidocompras) {
				if(pedidocompra.getsType().equals(Constantes2.S_TOTALES)) {
					pedidocompraTotales=pedidocompra;
					existe=true;
					break;
				}
			}
		}
		
		return existe;
	}
	
	public void crearFilaTotales() throws Exception {
		Boolean existe=false;
		
		existe=this.existeFilaTotales();
		
		if(!existe) {
			//SI NO ES UNO A UNO SE CREA FILA TOTALES
			this.pedidocompraAux=new PedidoCompra();
			this.pedidocompraAux.setsType(Constantes2.S_TOTALES);
			this.pedidocompraAux.setIsNew(false);
			this.pedidocompraAux.setIsChanged(false);
			this.pedidocompraAux.setIsDeleted(false);
				
			if(Constantes.ISUSAEJBLOGICLAYER) {
				PedidoCompraConstantesFunciones.TotalizarValoresFilaPedidoCompra(this.pedidocompraLogic.getPedidoCompras(),this.pedidocompraAux);
				
				this.pedidocompraLogic.getPedidoCompras().add(this.pedidocompraAux);
				
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				PedidoCompraConstantesFunciones.TotalizarValoresFilaPedidoCompra(this.pedidocompras,this.pedidocompraAux);
				
				this.pedidocompras.add(this.pedidocompraAux);
			}
		}
	}
	
	public void quitarFilaTotales() throws Exception {
		pedidocompraTotales=new PedidoCompra();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.pedidocompraLogic.getPedidoCompras().remove(pedidocompraTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.pedidocompras.remove(pedidocompraTotales);
			}
		}
	}
	
	public void actualizarFilaTotales() throws Exception {
		pedidocompraTotales=new PedidoCompra();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(PedidoCompra pedidocompra:pedidocompraLogic.getPedidoCompras()) {
				if(pedidocompra.getsType().equals(Constantes2.S_TOTALES)) {
					pedidocompraTotales=pedidocompra;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				PedidoCompraConstantesFunciones.TotalizarValoresFilaPedidoCompra(this.pedidocompraLogic.getPedidoCompras(),pedidocompraTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(PedidoCompra pedidocompra:this.pedidocompras) {
				if(pedidocompra.getsType().equals(Constantes2.S_TOTALES)) {
					pedidocompraTotales=pedidocompra;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				PedidoCompraConstantesFunciones.TotalizarValoresFilaPedidoCompra(this.pedidocompras,pedidocompraTotales);
			}
		}
	}		
	
	public void recargarInformacion()throws Exception {
		try {
			sAccionBusqueda="Todos";
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
		}	
	}		
	
	
	public void getPedidoComprasFK_IdAnio()throws Exception {
		try {
			sAccionBusqueda="FK_IdAnio";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPedidoComprasFK_IdCliente()throws Exception {
		try {
			sAccionBusqueda="FK_IdCliente";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPedidoComprasFK_IdEjercicio()throws Exception {
		try {
			sAccionBusqueda="FK_IdEjercicio";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPedidoComprasFK_IdEmpleado()throws Exception {
		try {
			sAccionBusqueda="FK_IdEmpleado";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPedidoComprasFK_IdEmpresa()throws Exception {
		try {
			sAccionBusqueda="FK_IdEmpresa";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPedidoComprasFK_IdEstadoPedidoCompraEstadoPedoCompra()throws Exception {
		try {
			sAccionBusqueda="FK_IdEstadoPedidoCompraEstadoPedoCompra";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPedidoComprasFK_IdFormato()throws Exception {
		try {
			sAccionBusqueda="FK_IdFormato";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPedidoComprasFK_IdMes()throws Exception {
		try {
			sAccionBusqueda="FK_IdMes";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPedidoComprasFK_IdModulo()throws Exception {
		try {
			sAccionBusqueda="FK_IdModulo";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPedidoComprasFK_IdMoneda()throws Exception {
		try {
			sAccionBusqueda="FK_IdMoneda";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPedidoComprasFK_IdPeriodo()throws Exception {
		try {
			sAccionBusqueda="FK_IdPeriodo";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPedidoComprasFK_IdSucursal()throws Exception {
		try {
			sAccionBusqueda="FK_IdSucursal";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPedidoComprasFK_IdTipoCambio()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoCambio";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPedidoComprasFK_IdUsuario()throws Exception {
		try {
			sAccionBusqueda="FK_IdUsuario";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	
	
	public void getPedidoComprasFK_IdAnio(String sFinalQuery,Long id_anio)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidocompraLogic.getPedidoComprasFK_IdAnio(sFinalQuery,this.pagination,id_anio);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPedidoComprasFK_IdCliente(String sFinalQuery,Long id_cliente)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidocompraLogic.getPedidoComprasFK_IdCliente(sFinalQuery,this.pagination,id_cliente);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPedidoComprasFK_IdEjercicio(String sFinalQuery,Long id_ejercicio)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidocompraLogic.getPedidoComprasFK_IdEjercicio(sFinalQuery,this.pagination,id_ejercicio);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPedidoComprasFK_IdEmpleado(String sFinalQuery,Long id_empleado)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidocompraLogic.getPedidoComprasFK_IdEmpleado(sFinalQuery,this.pagination,id_empleado);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPedidoComprasFK_IdEmpresa(String sFinalQuery,Long id_empresa)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidocompraLogic.getPedidoComprasFK_IdEmpresa(sFinalQuery,this.pagination,id_empresa);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPedidoComprasFK_IdEstadoPedidoCompraEstadoPedoCompra(String sFinalQuery,Long id_estado_pedido_compra)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidocompraLogic.getPedidoComprasFK_IdEstadoPedidoCompraEstadoPedoCompra(sFinalQuery,this.pagination,id_estado_pedido_compra);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPedidoComprasFK_IdFormato(String sFinalQuery,Long id_formato)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidocompraLogic.getPedidoComprasFK_IdFormato(sFinalQuery,this.pagination,id_formato);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPedidoComprasFK_IdMes(String sFinalQuery,Long id_mes)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidocompraLogic.getPedidoComprasFK_IdMes(sFinalQuery,this.pagination,id_mes);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPedidoComprasFK_IdModulo(String sFinalQuery,Long id_modulo)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidocompraLogic.getPedidoComprasFK_IdModulo(sFinalQuery,this.pagination,id_modulo);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPedidoComprasFK_IdMoneda(String sFinalQuery,Long id_moneda)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidocompraLogic.getPedidoComprasFK_IdMoneda(sFinalQuery,this.pagination,id_moneda);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPedidoComprasFK_IdPeriodo(String sFinalQuery,Long id_periodo)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidocompraLogic.getPedidoComprasFK_IdPeriodo(sFinalQuery,this.pagination,id_periodo);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPedidoComprasFK_IdSucursal(String sFinalQuery,Long id_sucursal)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidocompraLogic.getPedidoComprasFK_IdSucursal(sFinalQuery,this.pagination,id_sucursal);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPedidoComprasFK_IdTipoCambio(String sFinalQuery,Long id_tipo_cambio)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidocompraLogic.getPedidoComprasFK_IdTipoCambio(sFinalQuery,this.pagination,id_tipo_cambio);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPedidoComprasFK_IdUsuario(String sFinalQuery,Long id_usuario)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidocompraLogic.getPedidoComprasFK_IdUsuario(sFinalQuery,this.pagination,id_usuario);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	
	public void onLoad()throws Exception {		
		try {		
			isEntroOnLoad=true;
			//INTENTA TRAER DATOS DE BUSQUEDA ANTERIOR
			this.traerDatosBusquedaDesdeSession();
					
			//SINO SE CUMPLE VIENE DE PADRE FOREIGN O BUSQUEDA ANTIGUA
			if(this.sAccionBusqueda.equals("")) {
				this.sAccionBusqueda="Todos";
			}
								
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch (Exception e) {
			throw e;
		}
	}		
	
	public void inicializarPermisosPedidoCompra() {
		this.isPermisoTodoPedidoCompra=false;
		this.isPermisoNuevoPedidoCompra=false;
		this.isPermisoActualizarPedidoCompra=false;
		this.isPermisoActualizarOriginalPedidoCompra=false;
		this.isPermisoEliminarPedidoCompra=false;
		this.isPermisoGuardarCambiosPedidoCompra=false;
		this.isPermisoConsultaPedidoCompra=false;
		this.isPermisoBusquedaPedidoCompra=false;
		this.isPermisoReportePedidoCompra=false;		
		this.isPermisoOrdenPedidoCompra=false;		
		this.isPermisoPaginacionMedioPedidoCompra=false;		
		this.isPermisoPaginacionAltoPedidoCompra=false;
		this.isPermisoPaginacionTodoPedidoCompra=false;
		this.isPermisoCopiarPedidoCompra=false;		
		this.isPermisoVerFormPedidoCompra=false;		
		this.isPermisoDuplicarPedidoCompra=false;		
		this.isPermisoOrdenPedidoCompra=false;		
	}
	
	public void setPermisosUsuarioPedidoCompra(Boolean isPermiso) {
		this.isPermisoTodoPedidoCompra=isPermiso;
		this.isPermisoNuevoPedidoCompra=isPermiso;
		this.isPermisoActualizarPedidoCompra=isPermiso;
		this.isPermisoActualizarOriginalPedidoCompra=isPermiso;
		this.isPermisoEliminarPedidoCompra=isPermiso;
		this.isPermisoGuardarCambiosPedidoCompra=isPermiso;
		this.isPermisoConsultaPedidoCompra=isPermiso;
		this.isPermisoBusquedaPedidoCompra=isPermiso;
		this.isPermisoReportePedidoCompra=isPermiso;
		this.isPermisoOrdenPedidoCompra=isPermiso;		
		this.isPermisoPaginacionMedioPedidoCompra=isPermiso;		
		this.isPermisoPaginacionAltoPedidoCompra=isPermiso;		
		this.isPermisoPaginacionTodoPedidoCompra=isPermiso;		
		this.isPermisoCopiarPedidoCompra=isPermiso;		
		this.isPermisoVerFormPedidoCompra=isPermiso;		
		this.isPermisoDuplicarPedidoCompra=isPermiso;
		this.isPermisoOrdenPedidoCompra=isPermiso;
	}
	
	public void setPermisosMantenimientoUsuarioPedidoCompra(Boolean isPermiso) {
		//this.isPermisoTodoPedidoCompra=isPermiso;
		this.isPermisoNuevoPedidoCompra=isPermiso;
		this.isPermisoActualizarPedidoCompra=isPermiso;
		this.isPermisoActualizarOriginalPedidoCompra=isPermiso;
		this.isPermisoEliminarPedidoCompra=isPermiso;
		this.isPermisoGuardarCambiosPedidoCompra=isPermiso;
		//this.isPermisoConsultaPedidoCompra=isPermiso;
		//this.isPermisoBusquedaPedidoCompra=isPermiso;
		//this.isPermisoReportePedidoCompra=isPermiso;
		//this.isPermisoOrdenPedidoCompra=isPermiso;		
		//this.isPermisoPaginacionMedioPedidoCompra=isPermiso;		
		//this.isPermisoPaginacionAltoPedidoCompra=isPermiso;		
		//this.isPermisoPaginacionTodoPedidoCompra=isPermiso;		
		//this.isPermisoCopiarPedidoCompra=isPermiso;		
		//this.isPermisoDuplicarPedidoCompra=isPermiso;
		//this.isPermisoOrdenPedidoCompra=isPermiso;
	}
	
	public void inicializarSetPermisosUsuarioPedidoCompraClasesRelacionadas() throws Exception {
		ArrayList<String> arrPaginas=new ArrayList<String>();		
		ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
		
		arrPaginas.add(DetallePedidoCompraConstantesFunciones.SNOMBREOPCION);
		
		if(PedidoCompraJInternalFrame.CON_LLAMADA_SIMPLE) {
			this.opcionsRelacionadas.addAll(this.sistemaReturnGeneral.getOpcionsRelacionadas());
			
		} else {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				opcionsFinal=sistemaLogicAdditional.tienePermisosOpcionesEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, arrPaginas);
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
			
			this.opcionsRelacionadas.addAll(opcionsFinal);
		}
		
		

		this.isTienePermisosDetallePedidoCompra=false;
		this.isTienePermisosDetallePedidoCompra=this.verificarGetPermisosUsuarioOpcionPedidoCompraClaseRelacionada(this.opcionsRelacionadas,DetallePedidoCompraConstantesFunciones.SNOMBREOPCION);
		
	}
	
	public Boolean tienePermisosUsuarioEnPaginaWebPedidoCompra(String sPagina) throws Exception {
		Boolean tienePermisos=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			tienePermisos=sistemaLogicAdditional.tienePermisosEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, sPagina);
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		
		return tienePermisos;
	}
	
	public void inicializarSetPermisosUsuarioPedidoCompraClasesRelacionadas(Boolean conPermiso) throws Exception {
		
		this.isTienePermisosDetallePedidoCompra=conPermiso;
	}
	
	public Boolean verificarGetPermisosUsuarioPedidoCompraClaseRelacionada(ArrayList<String> arrPaginasFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioClaseRelacionada(arrPaginasFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public Boolean verificarGetPermisosUsuarioOpcionPedidoCompraClaseRelacionada(List<Opcion> opcionsFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioOpcionClaseRelacionada(opcionsFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public void actualizarTabsSetPermisosUsuarioPedidoCompraClasesRelacionadas() throws Exception {
		

		if(!this.isTienePermisosDetallePedidoCompra && this.jInternalFrameDetalleFormPedidoCompra!=null && this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormPedidoCompra.jTabbedPaneRelacionesPedidoCompra.remove(this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraBeanSwingJInternalFrame.getContentPane());
		}
	}
	
	public void setPermisosUsuarioPedidoCompra() throws Exception {
		
		PerfilOpcion perfilOpcionUsuario=new PerfilOpcion();		
		Long idOpcion=this.opcionActual.getId();
		
		if(PedidoCompraJInternalFrame.CON_LLAMADA_SIMPLE) {
			perfilOpcionUsuario=this.sistemaReturnGeneral.getPerfilOpcion();
			
		} else {
			if(this.pedidocompraSessionBean.getEsGuardarRelacionado()) {
				idOpcion=0L;
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				perfilOpcionUsuario=sistemaLogicAdditional.traerPermisosPaginaWebPerfilOpcion(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, PedidoCompraConstantesFunciones.SNOMBREOPCION,idOpcion);				
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
		}
		
		if(perfilOpcionUsuario!=null && perfilOpcionUsuario.getId()>0) {
			this.isPermisoNuevoPedidoCompra=perfilOpcionUsuario.getingreso()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarPedidoCompra=perfilOpcionUsuario.getmodificacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarOriginalPedidoCompra=this.isPermisoActualizarPedidoCompra;
			this.isPermisoEliminarPedidoCompra=perfilOpcionUsuario.geteliminacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoGuardarCambiosPedidoCompra=perfilOpcionUsuario.getguardar_cambios()||perfilOpcionUsuario.gettodo();
			this.isPermisoConsultaPedidoCompra=perfilOpcionUsuario.getconsulta()||perfilOpcionUsuario.gettodo();
			this.isPermisoBusquedaPedidoCompra=perfilOpcionUsuario.getbusqueda()||perfilOpcionUsuario.gettodo();
			this.isPermisoTodoPedidoCompra=perfilOpcionUsuario.gettodo()||perfilOpcionUsuario.gettodo();
			this.isPermisoReportePedidoCompra=perfilOpcionUsuario.getreporte()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenPedidoCompra=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionMedioPedidoCompra=perfilOpcionUsuario.getpaginacion_medio()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionAltoPedidoCompra=perfilOpcionUsuario.getpaginacion_alto()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionTodoPedidoCompra=perfilOpcionUsuario.getpaginacion_todo()||perfilOpcionUsuario.gettodo();
			this.isPermisoCopiarPedidoCompra=perfilOpcionUsuario.getcopiar()||perfilOpcionUsuario.gettodo();
			this.isPermisoVerFormPedidoCompra=true;//perfilOpcionUsuario.getver_form()||perfilOpcionUsuario.gettodo();
			this.isPermisoDuplicarPedidoCompra=perfilOpcionUsuario.getduplicar()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenPedidoCompra=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			
			if(this.pedidocompraSessionBean.getEsGuardarRelacionado()) {
				this.opcionActual.setId(perfilOpcionUsuario.getid_opcion());
				
				this.jTableDatosPedidoCompra.setToolTipText(this.jTableDatosPedidoCompra.getToolTipText()+"_"+perfilOpcionUsuario.getid_opcion());		
			}
		} else {
			this.setPermisosUsuarioPedidoCompra(false);
		}
		
		//SI SE NECESITA PONER TODOS LOS PERMISOS POR DEFECTO
		//
		
	}
	
	public void setAccionesUsuarioPedidoCompra(Boolean esParaAccionesFormulario) throws Exception {		
		Reporte reporte=null;
		
		if(!esParaAccionesFormulario) {
			this.accions=new ArrayList<Accion>();
			
			if(PedidoCompraJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accions=this.sistemaReturnGeneral.getAccions();
				
				
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accions=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,false);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accions.size()>0) {			
				for(Accion accion:this.accions) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
		
		
					this.tiposAcciones.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAcciones.add(reporte);
			
		} else {
			//ACCIONES FORMULARIO
			this.accionsFormulario=new ArrayList<Accion>();
			
			if(PedidoCompraJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accionsFormulario=this.sistemaReturnGeneral.getAccionsFormulario();
			
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accionsFormulario=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,true);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accionsFormulario.size()>0) {			
				for(Accion accion:this.accionsFormulario) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
					
					this.tiposAccionesFormulario.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAccionesFormulario.add(reporte);
		}				
	}	 	
	
	public void setRelacionesUsuarioPedidoCompra() throws Exception {
		Reporte reporte=null;
		
		

		if(this.isTienePermisosDetallePedidoCompra && this.pedidocompraConstantesFunciones.mostrarDetallePedidoCompraPedidoCompra && !PedidoCompraConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Detalle Pedido Compra");
			reporte.setsDescripcion("Detalle Pedido Compra");
			this.tiposRelaciones.add(reporte);
		}
		
		
		//ORDENAR ALFABETICAMENTE
		Collections.sort(this.tiposRelaciones, new ReporteComparator());
		/*
		reporte=new Reporte();
		reporte.setsCodigo(accion.getcodigo());
		reporte.setsDescripcion(accion.getnombre());
			
		this.tiposRelaciones.add(reporte);
		*/
	}	
	
		
	@SuppressWarnings({ "unchecked", "rawtypes" } )
	public void inicializarCombosForeignKeyPedidoCompraListas()throws Exception {
		try	{						
			
				this.empresasForeignKey=new ArrayList();
				this.sucursalsForeignKey=new ArrayList();
				this.modulosForeignKey=new ArrayList();
				this.ejerciciosForeignKey=new ArrayList();
				this.periodosForeignKey=new ArrayList();
				this.aniosForeignKey=new ArrayList();
				this.messForeignKey=new ArrayList();
				this.clientesForeignKey=new ArrayList();
				this.usuariosForeignKey=new ArrayList();
				this.monedasForeignKey=new ArrayList();
				this.estadopedidocomprasForeignKey=new ArrayList();
				this.empleadosForeignKey=new ArrayList();
				this.formatosForeignKey=new ArrayList();
				this.tipocambiosForeignKey=new ArrayList();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void cargarCombosTodosForeignKeyPedidoCompraListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			String sFinalQueryCombo="";
			
			Modulo  moduloActualAux=new Modulo();
			
			if(PedidoCompraJInternalFrame.ISLOAD_FKLOTE) {
				this.cargarCombosLoteForeignKeyPedidoCompraListas(false);
			} else {
			
				this.cargarCombosForeignKeyEmpresaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeySucursalListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyModuloListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEjercicioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyPeriodoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyAnioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyMesListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyClienteListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyUsuarioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyMonedaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEstadoPedidoCompraListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEmpleadoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyFormatoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoCambioListas(cargarCombosDependencia,sFinalQueryCombo);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	

	public void cargarCombosForeignKeyEmpresaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EmpresaConstantesFunciones.SFINALQUERY;

				this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeySucursalListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=SucursalConstantesFunciones.SFINALQUERY;

				this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyModuloListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.modulosForeignKey==null||this.modulosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=ModuloConstantesFunciones.getArrayColumnasGlobalesModulo(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ModuloConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=ModuloConstantesFunciones.SFINALQUERY;

				this.cargarCombosModulosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEjercicioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.ejerciciosForeignKey==null||this.ejerciciosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EjercicioConstantesFunciones.getArrayColumnasGlobalesEjercicio(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EjercicioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EjercicioConstantesFunciones.SFINALQUERY;

				this.cargarCombosEjerciciosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyPeriodoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.periodosForeignKey==null||this.periodosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=PeriodoConstantesFunciones.getArrayColumnasGlobalesPeriodo(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PeriodoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=PeriodoConstantesFunciones.SFINALQUERY;

				this.cargarCombosPeriodosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyAnioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.aniosForeignKey==null||this.aniosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=AnioConstantesFunciones.getArrayColumnasGlobalesAnio(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,AnioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=AnioConstantesFunciones.SFINALQUERY;

				this.cargarCombosAniosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyMesListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.messForeignKey==null||this.messForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=MesConstantesFunciones.getArrayColumnasGlobalesMes(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,MesConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=MesConstantesFunciones.SFINALQUERY;

				this.cargarCombosMessForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyClienteListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.clientesForeignKey==null||this.clientesForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=ClienteConstantesFunciones.getArrayColumnasGlobalesCliente(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ClienteConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=ClienteConstantesFunciones.SFINALQUERY;

				this.cargarCombosClientesForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyUsuarioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.usuariosForeignKey==null||this.usuariosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=UsuarioConstantesFunciones.getArrayColumnasGlobalesUsuario(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,UsuarioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=UsuarioConstantesFunciones.SFINALQUERY;

				this.cargarCombosUsuariosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyMonedaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.monedasForeignKey==null||this.monedasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=MonedaConstantesFunciones.getArrayColumnasGlobalesMoneda(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,MonedaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=MonedaConstantesFunciones.SFINALQUERY;

				this.cargarCombosMonedasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEstadoPedidoCompraListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.estadopedidocomprasForeignKey==null||this.estadopedidocomprasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EstadoPedidoCompraConstantesFunciones.getArrayColumnasGlobalesEstadoPedidoCompra(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EstadoPedidoCompraConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EstadoPedidoCompraConstantesFunciones.SFINALQUERY;

				this.cargarCombosEstadoPedidoComprasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEmpleadoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.empleadosForeignKey==null||this.empleadosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EmpleadoConstantesFunciones.getArrayColumnasGlobalesEmpleado(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpleadoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EmpleadoConstantesFunciones.SFINALQUERY;

				this.cargarCombosEmpleadosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyFormatoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.formatosForeignKey==null||this.formatosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=FormatoConstantesFunciones.getArrayColumnasGlobalesFormato(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,FormatoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=FormatoConstantesFunciones.SFINALQUERY;

				this.cargarCombosFormatosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoCambioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipocambiosForeignKey==null||this.tipocambiosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoCambioConstantesFunciones.getArrayColumnasGlobalesTipoCambio(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoCambioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoCambioConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoCambiosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarCombosLoteForeignKeyPedidoCompraListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			Modulo  moduloActualAux=new Modulo();
			
			
			PedidoCompraParameterReturnGeneral pedidocompraReturnGeneral=new PedidoCompraParameterReturnGeneral();
						
			


				String finalQueryGlobalEmpresa="";

				if(((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0) && this.pedidocompraConstantesFunciones.cargarid_empresaPedidoCompra)
					 || (this.esRecargarFks && this.pedidocompraConstantesFunciones.cargarid_empresaPedidoCompra)) {

					if(!this.pedidocompraSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEmpresa=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

						finalQueryGlobalEmpresa=Funciones.GetFinalQueryAppend(finalQueryGlobalEmpresa, "");
						finalQueryGlobalEmpresa+=EmpresaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEmpresa=" WHERE " + ConstantesSql.ID + "="+pedidocompraSessionBean.getlidEmpresaActual();
					}
				} else {
					finalQueryGlobalEmpresa="NONE";
				}


				String finalQueryGlobalSucursal="";

				if(((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0) && this.pedidocompraConstantesFunciones.cargarid_sucursalPedidoCompra)
					 || (this.esRecargarFks && this.pedidocompraConstantesFunciones.cargarid_sucursalPedidoCompra)) {

					if(!this.pedidocompraSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalSucursal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

						finalQueryGlobalSucursal=Funciones.GetFinalQueryAppend(finalQueryGlobalSucursal, "");
						finalQueryGlobalSucursal+=SucursalConstantesFunciones.SFINALQUERY;

						//this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalSucursal=" WHERE " + ConstantesSql.ID + "="+pedidocompraSessionBean.getlidSucursalActual();
					}
				} else {
					finalQueryGlobalSucursal="NONE";
				}


				String finalQueryGlobalModulo="";

				if(((this.modulosForeignKey==null||this.modulosForeignKey.size()<=0) && this.pedidocompraConstantesFunciones.cargarid_moduloPedidoCompra)
					 || (this.esRecargarFks && this.pedidocompraConstantesFunciones.cargarid_moduloPedidoCompra)) {

					if(!this.pedidocompraSessionBean.getisBusquedaDesdeForeignKeySesionModulo()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=ModuloConstantesFunciones.getArrayColumnasGlobalesModulo(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalModulo=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ModuloConstantesFunciones.TABLENAME);

						finalQueryGlobalModulo=Funciones.GetFinalQueryAppend(finalQueryGlobalModulo, "");
						finalQueryGlobalModulo+=ModuloConstantesFunciones.SFINALQUERY;

						//this.cargarCombosModulosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalModulo=" WHERE " + ConstantesSql.ID + "="+pedidocompraSessionBean.getlidModuloActual();
					}
				} else {
					finalQueryGlobalModulo="NONE";
				}


				String finalQueryGlobalEjercicio="";

				if(((this.ejerciciosForeignKey==null||this.ejerciciosForeignKey.size()<=0) && this.pedidocompraConstantesFunciones.cargarid_ejercicioPedidoCompra)
					 || (this.esRecargarFks && this.pedidocompraConstantesFunciones.cargarid_ejercicioPedidoCompra)) {

					if(!this.pedidocompraSessionBean.getisBusquedaDesdeForeignKeySesionEjercicio()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EjercicioConstantesFunciones.getArrayColumnasGlobalesEjercicio(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEjercicio=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EjercicioConstantesFunciones.TABLENAME);

						finalQueryGlobalEjercicio=Funciones.GetFinalQueryAppend(finalQueryGlobalEjercicio, "");
						finalQueryGlobalEjercicio+=EjercicioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEjerciciosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEjercicio=" WHERE " + ConstantesSql.ID + "="+pedidocompraSessionBean.getlidEjercicioActual();
					}
				} else {
					finalQueryGlobalEjercicio="NONE";
				}


				String finalQueryGlobalPeriodo="";

				if(((this.periodosForeignKey==null||this.periodosForeignKey.size()<=0) && this.pedidocompraConstantesFunciones.cargarid_periodoPedidoCompra)
					 || (this.esRecargarFks && this.pedidocompraConstantesFunciones.cargarid_periodoPedidoCompra)) {

					if(!this.pedidocompraSessionBean.getisBusquedaDesdeForeignKeySesionPeriodo()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=PeriodoConstantesFunciones.getArrayColumnasGlobalesPeriodo(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalPeriodo=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PeriodoConstantesFunciones.TABLENAME);

						finalQueryGlobalPeriodo=Funciones.GetFinalQueryAppend(finalQueryGlobalPeriodo, "");
						finalQueryGlobalPeriodo+=PeriodoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosPeriodosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalPeriodo=" WHERE " + ConstantesSql.ID + "="+pedidocompraSessionBean.getlidPeriodoActual();
					}
				} else {
					finalQueryGlobalPeriodo="NONE";
				}


				String finalQueryGlobalAnio="";

				if(((this.aniosForeignKey==null||this.aniosForeignKey.size()<=0) && this.pedidocompraConstantesFunciones.cargarid_anioPedidoCompra)
					 || (this.esRecargarFks && this.pedidocompraConstantesFunciones.cargarid_anioPedidoCompra)) {

					if(!this.pedidocompraSessionBean.getisBusquedaDesdeForeignKeySesionAnio()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=AnioConstantesFunciones.getArrayColumnasGlobalesAnio(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalAnio=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,AnioConstantesFunciones.TABLENAME);

						finalQueryGlobalAnio=Funciones.GetFinalQueryAppend(finalQueryGlobalAnio, "");
						finalQueryGlobalAnio+=AnioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosAniosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalAnio=" WHERE " + ConstantesSql.ID + "="+pedidocompraSessionBean.getlidAnioActual();
					}
				} else {
					finalQueryGlobalAnio="NONE";
				}


				String finalQueryGlobalMes="";

				if(((this.messForeignKey==null||this.messForeignKey.size()<=0) && this.pedidocompraConstantesFunciones.cargarid_mesPedidoCompra)
					 || (this.esRecargarFks && this.pedidocompraConstantesFunciones.cargarid_mesPedidoCompra)) {

					if(!this.pedidocompraSessionBean.getisBusquedaDesdeForeignKeySesionMes()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=MesConstantesFunciones.getArrayColumnasGlobalesMes(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalMes=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,MesConstantesFunciones.TABLENAME);

						finalQueryGlobalMes=Funciones.GetFinalQueryAppend(finalQueryGlobalMes, "");
						finalQueryGlobalMes+=MesConstantesFunciones.SFINALQUERY;

						//this.cargarCombosMessForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalMes=" WHERE " + ConstantesSql.ID + "="+pedidocompraSessionBean.getlidMesActual();
					}
				} else {
					finalQueryGlobalMes="NONE";
				}


				String finalQueryGlobalCliente="";

				if(((this.clientesForeignKey==null||this.clientesForeignKey.size()<=0) && this.pedidocompraConstantesFunciones.cargarid_clientePedidoCompra)
					 || (this.esRecargarFks && this.pedidocompraConstantesFunciones.cargarid_clientePedidoCompra)) {

					if(!this.pedidocompraSessionBean.getisBusquedaDesdeForeignKeySesionCliente()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=ClienteConstantesFunciones.getArrayColumnasGlobalesCliente(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCliente=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ClienteConstantesFunciones.TABLENAME);

						finalQueryGlobalCliente=Funciones.GetFinalQueryAppend(finalQueryGlobalCliente, "");
						finalQueryGlobalCliente+=ClienteConstantesFunciones.SFINALQUERY;

						//this.cargarCombosClientesForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCliente=" WHERE " + ConstantesSql.ID + "="+pedidocompraSessionBean.getlidClienteActual();
					}
				} else {
					finalQueryGlobalCliente="NONE";
				}


				String finalQueryGlobalUsuario="";

				if(((this.usuariosForeignKey==null||this.usuariosForeignKey.size()<=0) && this.pedidocompraConstantesFunciones.cargarid_usuarioPedidoCompra)
					 || (this.esRecargarFks && this.pedidocompraConstantesFunciones.cargarid_usuarioPedidoCompra)) {

					if(!this.pedidocompraSessionBean.getisBusquedaDesdeForeignKeySesionUsuario()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=UsuarioConstantesFunciones.getArrayColumnasGlobalesUsuario(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalUsuario=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,UsuarioConstantesFunciones.TABLENAME);

						finalQueryGlobalUsuario=Funciones.GetFinalQueryAppend(finalQueryGlobalUsuario, "");
						finalQueryGlobalUsuario+=UsuarioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosUsuariosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalUsuario=" WHERE " + ConstantesSql.ID + "="+pedidocompraSessionBean.getlidUsuarioActual();
					}
				} else {
					finalQueryGlobalUsuario="NONE";
				}


				String finalQueryGlobalMoneda="";

				if(((this.monedasForeignKey==null||this.monedasForeignKey.size()<=0) && this.pedidocompraConstantesFunciones.cargarid_monedaPedidoCompra)
					 || (this.esRecargarFks && this.pedidocompraConstantesFunciones.cargarid_monedaPedidoCompra)) {

					if(!this.pedidocompraSessionBean.getisBusquedaDesdeForeignKeySesionMoneda()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=MonedaConstantesFunciones.getArrayColumnasGlobalesMoneda(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalMoneda=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,MonedaConstantesFunciones.TABLENAME);

						finalQueryGlobalMoneda=Funciones.GetFinalQueryAppend(finalQueryGlobalMoneda, "");
						finalQueryGlobalMoneda+=MonedaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosMonedasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalMoneda=" WHERE " + ConstantesSql.ID + "="+pedidocompraSessionBean.getlidMonedaActual();
					}
				} else {
					finalQueryGlobalMoneda="NONE";
				}


				String finalQueryGlobalEstadoPedidoCompra="";

				if(((this.estadopedidocomprasForeignKey==null||this.estadopedidocomprasForeignKey.size()<=0) && this.pedidocompraConstantesFunciones.cargarid_estado_pedido_compraPedidoCompra)
					 || (this.esRecargarFks && this.pedidocompraConstantesFunciones.cargarid_estado_pedido_compraPedidoCompra)) {

					if(!this.pedidocompraSessionBean.getisBusquedaDesdeForeignKeySesionEstadoPedidoCompra()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EstadoPedidoCompraConstantesFunciones.getArrayColumnasGlobalesEstadoPedidoCompra(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEstadoPedidoCompra=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EstadoPedidoCompraConstantesFunciones.TABLENAME);

						finalQueryGlobalEstadoPedidoCompra=Funciones.GetFinalQueryAppend(finalQueryGlobalEstadoPedidoCompra, "");
						finalQueryGlobalEstadoPedidoCompra+=EstadoPedidoCompraConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEstadoPedidoComprasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEstadoPedidoCompra=" WHERE " + ConstantesSql.ID + "="+pedidocompraSessionBean.getlidEstadoPedidoCompraActual();
					}
				} else {
					finalQueryGlobalEstadoPedidoCompra="NONE";
				}


				String finalQueryGlobalEmpleado="";

				if(((this.empleadosForeignKey==null||this.empleadosForeignKey.size()<=0) && this.pedidocompraConstantesFunciones.cargarid_empleadoPedidoCompra)
					 || (this.esRecargarFks && this.pedidocompraConstantesFunciones.cargarid_empleadoPedidoCompra)) {

					if(!this.pedidocompraSessionBean.getisBusquedaDesdeForeignKeySesionEmpleado()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EmpleadoConstantesFunciones.getArrayColumnasGlobalesEmpleado(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEmpleado=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpleadoConstantesFunciones.TABLENAME);

						finalQueryGlobalEmpleado=Funciones.GetFinalQueryAppend(finalQueryGlobalEmpleado, "");
						finalQueryGlobalEmpleado+=EmpleadoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEmpleadosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEmpleado=" WHERE " + ConstantesSql.ID + "="+pedidocompraSessionBean.getlidEmpleadoActual();
					}
				} else {
					finalQueryGlobalEmpleado="NONE";
				}


				String finalQueryGlobalFormato="";

				if(((this.formatosForeignKey==null||this.formatosForeignKey.size()<=0) && this.pedidocompraConstantesFunciones.cargarid_formatoPedidoCompra)
					 || (this.esRecargarFks && this.pedidocompraConstantesFunciones.cargarid_formatoPedidoCompra)) {

					if(!this.pedidocompraSessionBean.getisBusquedaDesdeForeignKeySesionFormato()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=FormatoConstantesFunciones.getArrayColumnasGlobalesFormato(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalFormato=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,FormatoConstantesFunciones.TABLENAME);

						finalQueryGlobalFormato=Funciones.GetFinalQueryAppend(finalQueryGlobalFormato, "");
						finalQueryGlobalFormato+=FormatoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosFormatosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalFormato=" WHERE " + ConstantesSql.ID + "="+pedidocompraSessionBean.getlidFormatoActual();
					}
				} else {
					finalQueryGlobalFormato="NONE";
				}


				String finalQueryGlobalTipoCambio="";

				if(((this.tipocambiosForeignKey==null||this.tipocambiosForeignKey.size()<=0) && this.pedidocompraConstantesFunciones.cargarid_tipo_cambioPedidoCompra)
					 || (this.esRecargarFks && this.pedidocompraConstantesFunciones.cargarid_tipo_cambioPedidoCompra)) {

					if(!this.pedidocompraSessionBean.getisBusquedaDesdeForeignKeySesionTipoCambio()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoCambioConstantesFunciones.getArrayColumnasGlobalesTipoCambio(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoCambio=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoCambioConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoCambio=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoCambio, "");
						finalQueryGlobalTipoCambio+=TipoCambioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoCambiosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoCambio=" WHERE " + ConstantesSql.ID + "="+pedidocompraSessionBean.getlidTipoCambioActual();
					}
				} else {
					finalQueryGlobalTipoCambio="NONE";
				}
			
			//ARCHITECTURE			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				pedidocompraReturnGeneral=pedidocompraLogic.cargarCombosLoteForeignKeyPedidoCompra(finalQueryGlobalEmpresa,finalQueryGlobalSucursal,finalQueryGlobalModulo,finalQueryGlobalEjercicio,finalQueryGlobalPeriodo,finalQueryGlobalAnio,finalQueryGlobalMes,finalQueryGlobalCliente,finalQueryGlobalUsuario,finalQueryGlobalMoneda,finalQueryGlobalEstadoPedidoCompra,finalQueryGlobalEmpleado,finalQueryGlobalFormato,finalQueryGlobalTipoCambio);//WithConnection
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}			
			//ARCHITECTURE
			
			

			if(!finalQueryGlobalEmpresa.equals("NONE")) {
				this.empresasForeignKey=pedidocompraReturnGeneral.getempresasForeignKey();
			}

			if(!finalQueryGlobalSucursal.equals("NONE")) {
				this.sucursalsForeignKey=pedidocompraReturnGeneral.getsucursalsForeignKey();
			}

			if(!finalQueryGlobalModulo.equals("NONE")) {
				this.modulosForeignKey=pedidocompraReturnGeneral.getmodulosForeignKey();
			}

			if(!finalQueryGlobalEjercicio.equals("NONE")) {
				this.ejerciciosForeignKey=pedidocompraReturnGeneral.getejerciciosForeignKey();
			}

			if(!finalQueryGlobalPeriodo.equals("NONE")) {
				this.periodosForeignKey=pedidocompraReturnGeneral.getperiodosForeignKey();
			}

			if(!finalQueryGlobalAnio.equals("NONE")) {
				this.aniosForeignKey=pedidocompraReturnGeneral.getaniosForeignKey();
			}

			if(!finalQueryGlobalMes.equals("NONE")) {
				this.messForeignKey=pedidocompraReturnGeneral.getmessForeignKey();
			}

			if(!finalQueryGlobalCliente.equals("NONE")) {
				this.clientesForeignKey=pedidocompraReturnGeneral.getclientesForeignKey();
			}

			if(!finalQueryGlobalUsuario.equals("NONE")) {
				this.usuariosForeignKey=pedidocompraReturnGeneral.getusuariosForeignKey();
			}

			if(!finalQueryGlobalMoneda.equals("NONE")) {
				this.monedasForeignKey=pedidocompraReturnGeneral.getmonedasForeignKey();
			}

			if(!finalQueryGlobalEstadoPedidoCompra.equals("NONE")) {
				this.estadopedidocomprasForeignKey=pedidocompraReturnGeneral.getestadopedidocomprasForeignKey();
			}

			if(!finalQueryGlobalEmpleado.equals("NONE")) {
				this.empleadosForeignKey=pedidocompraReturnGeneral.getempleadosForeignKey();
			}

			if(!finalQueryGlobalFormato.equals("NONE")) {
				this.formatosForeignKey=pedidocompraReturnGeneral.getformatosForeignKey();
			}

			if(!finalQueryGlobalTipoCambio.equals("NONE")) {
				this.tipocambiosForeignKey=pedidocompraReturnGeneral.gettipocambiosForeignKey();
			}
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void addItemDefectoCombosTodosForeignKeyPedidoCompra()throws Exception {
		try {
			
			this.addItemDefectoCombosForeignKeyEmpresa();
			this.addItemDefectoCombosForeignKeySucursal();
			this.addItemDefectoCombosForeignKeyModulo();
			this.addItemDefectoCombosForeignKeyEjercicio();
			this.addItemDefectoCombosForeignKeyPeriodo();
			this.addItemDefectoCombosForeignKeyAnio();
			this.addItemDefectoCombosForeignKeyMes();
			this.addItemDefectoCombosForeignKeyCliente();
			this.addItemDefectoCombosForeignKeyUsuario();
			this.addItemDefectoCombosForeignKeyMoneda();
			this.addItemDefectoCombosForeignKeyEstadoPedidoCompra();
			this.addItemDefectoCombosForeignKeyEmpleado();
			this.addItemDefectoCombosForeignKeyFormato();
			this.addItemDefectoCombosForeignKeyTipoCambio();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	



	public void addItemDefectoCombosForeignKeyEmpresa()throws Exception {
		try {
			if(this.pedidocompraSessionBean==null) {
				this.pedidocompraSessionBean=new PedidoCompraSessionBean();
			}

			if(!this.pedidocompraSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				Empresa empresa=new Empresa();
				EmpresaConstantesFunciones.setEmpresaDescripcion(empresa,Constantes.SMENSAJE_ESCOJA_OPCION);
				empresa.setId(null);

				if(!EmpresaConstantesFunciones.ExisteEnLista(this.empresasForeignKey,empresa,true)) {

					this.empresasForeignKey.add(0,empresa);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeySucursal()throws Exception {
		try {

			if(!this.pedidocompraSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				Sucursal sucursal=new Sucursal();
				SucursalConstantesFunciones.setSucursalDescripcion(sucursal,Constantes.SMENSAJE_ESCOJA_OPCION);
				sucursal.setId(null);

				if(!SucursalConstantesFunciones.ExisteEnLista(this.sucursalsForeignKey,sucursal,true)) {

					this.sucursalsForeignKey.add(0,sucursal);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyModulo()throws Exception {
		try {

			if(!this.pedidocompraSessionBean.getisBusquedaDesdeForeignKeySesionModulo()) {
				Modulo modulo=new Modulo();
				ModuloConstantesFunciones.setModuloDescripcion(modulo,Constantes.SMENSAJE_ESCOJA_OPCION);
				modulo.setId(null);

				if(!ModuloConstantesFunciones.ExisteEnLista(this.modulosForeignKey,modulo,true)) {

					this.modulosForeignKey.add(0,modulo);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEjercicio()throws Exception {
		try {

			if(!this.pedidocompraSessionBean.getisBusquedaDesdeForeignKeySesionEjercicio()) {
				Ejercicio ejercicio=new Ejercicio();
				EjercicioConstantesFunciones.setEjercicioDescripcion(ejercicio,Constantes.SMENSAJE_ESCOJA_OPCION);
				ejercicio.setId(null);

				if(!EjercicioConstantesFunciones.ExisteEnLista(this.ejerciciosForeignKey,ejercicio,true)) {

					this.ejerciciosForeignKey.add(0,ejercicio);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyPeriodo()throws Exception {
		try {

			if(!this.pedidocompraSessionBean.getisBusquedaDesdeForeignKeySesionPeriodo()) {
				Periodo periodo=new Periodo();
				PeriodoConstantesFunciones.setPeriodoDescripcion(periodo,Constantes.SMENSAJE_ESCOJA_OPCION);
				periodo.setId(null);

				if(!PeriodoConstantesFunciones.ExisteEnLista(this.periodosForeignKey,periodo,true)) {

					this.periodosForeignKey.add(0,periodo);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyAnio()throws Exception {
		try {

			if(!this.pedidocompraSessionBean.getisBusquedaDesdeForeignKeySesionAnio()) {
				Anio anio=new Anio();
				AnioConstantesFunciones.setAnioDescripcion(anio,Constantes.SMENSAJE_ESCOJA_OPCION);
				anio.setId(null);

				if(!AnioConstantesFunciones.ExisteEnLista(this.aniosForeignKey,anio,true)) {

					this.aniosForeignKey.add(0,anio);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyMes()throws Exception {
		try {

			if(!this.pedidocompraSessionBean.getisBusquedaDesdeForeignKeySesionMes()) {
				Mes mes=new Mes();
				MesConstantesFunciones.setMesDescripcion(mes,Constantes.SMENSAJE_ESCOJA_OPCION);
				mes.setId(null);

				if(!MesConstantesFunciones.ExisteEnLista(this.messForeignKey,mes,true)) {

					this.messForeignKey.add(0,mes);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCliente()throws Exception {
		try {

			if(!this.pedidocompraSessionBean.getisBusquedaDesdeForeignKeySesionCliente()) {
				Cliente cliente=new Cliente();
				ClienteConstantesFunciones.setClienteDescripcion(cliente,Constantes.SMENSAJE_ESCOJA_OPCION);
				cliente.setId(null);

				if(!ClienteConstantesFunciones.ExisteEnLista(this.clientesForeignKey,cliente,true)) {

					this.clientesForeignKey.add(0,cliente);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyUsuario()throws Exception {
		try {

			if(!this.pedidocompraSessionBean.getisBusquedaDesdeForeignKeySesionUsuario()) {
				Usuario usuario=new Usuario();
				UsuarioConstantesFunciones.setUsuarioDescripcion(usuario,Constantes.SMENSAJE_ESCOJA_OPCION);
				usuario.setId(null);

				if(!UsuarioConstantesFunciones.ExisteEnLista(this.usuariosForeignKey,usuario,true)) {

					this.usuariosForeignKey.add(0,usuario);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyMoneda()throws Exception {
		try {

			if(!this.pedidocompraSessionBean.getisBusquedaDesdeForeignKeySesionMoneda()) {
				Moneda moneda=new Moneda();
				MonedaConstantesFunciones.setMonedaDescripcion(moneda,Constantes.SMENSAJE_ESCOJA_OPCION);
				moneda.setId(null);

				if(!MonedaConstantesFunciones.ExisteEnLista(this.monedasForeignKey,moneda,true)) {

					this.monedasForeignKey.add(0,moneda);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEstadoPedidoCompra()throws Exception {
		try {

			if(!this.pedidocompraSessionBean.getisBusquedaDesdeForeignKeySesionEstadoPedidoCompra()) {
				EstadoPedidoCompra estadopedidocompra=new EstadoPedidoCompra();
				EstadoPedidoCompraConstantesFunciones.setEstadoPedidoCompraDescripcion(estadopedidocompra,Constantes.SMENSAJE_ESCOJA_OPCION);
				estadopedidocompra.setId(null);

				if(!EstadoPedidoCompraConstantesFunciones.ExisteEnLista(this.estadopedidocomprasForeignKey,estadopedidocompra,true)) {

					this.estadopedidocomprasForeignKey.add(0,estadopedidocompra);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEmpleado()throws Exception {
		try {

			if(!this.pedidocompraSessionBean.getisBusquedaDesdeForeignKeySesionEmpleado()) {
				Empleado empleado=new Empleado();
				EmpleadoConstantesFunciones.setEmpleadoDescripcion(empleado,Constantes.SMENSAJE_ESCOJA_OPCION);
				empleado.setId(null);

				if(!EmpleadoConstantesFunciones.ExisteEnLista(this.empleadosForeignKey,empleado,true)) {

					this.empleadosForeignKey.add(0,empleado);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyFormato()throws Exception {
		try {

			if(!this.pedidocompraSessionBean.getisBusquedaDesdeForeignKeySesionFormato()) {
				Formato formato=new Formato();
				FormatoConstantesFunciones.setFormatoDescripcion(formato,Constantes.SMENSAJE_ESCOJA_OPCION);
				formato.setId(null);

				if(!FormatoConstantesFunciones.ExisteEnLista(this.formatosForeignKey,formato,true)) {

					this.formatosForeignKey.add(0,formato);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoCambio()throws Exception {
		try {

			if(!this.pedidocompraSessionBean.getisBusquedaDesdeForeignKeySesionTipoCambio()) {
				TipoCambio tipocambio=new TipoCambio();
				TipoCambioConstantesFunciones.setTipoCambioDescripcion(tipocambio,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipocambio.setId(null);

				if(!TipoCambioConstantesFunciones.ExisteEnLista(this.tipocambiosForeignKey,tipocambio,true)) {

					this.tipocambiosForeignKey.add(0,tipocambio);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void initActionsCombosTodosForeignKeyPedidoCompra()throws Exception {
		try {
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void initActionsCombosTodosForeignKeyPedidoCompra(String sFormularioTipoBusqueda)throws Exception {
		try {
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	


	
	


	
	public void setVariablesGlobalesCombosForeignKeyPedidoCompra()throws Exception {	
		try {
			if(this.parametroGeneralUsuario!=null && this.parametroGeneralUsuario.getId()>0) {
			
				this.setActualEmpresaForeignKey(this.parametroGeneralUsuario.getid_empresa(),false,"Formulario");
				this.setActualSucursalForeignKey(this.parametroGeneralUsuario.getid_sucursal(),false,"Formulario");
				this.setActualModuloForeignKey(this.moduloActual.getId(),false,"Formulario");
				this.setActualEjercicioForeignKey(this.parametroGeneralUsuario.getid_ejercicio(),false,"Formulario");
				this.setActualPeriodoForeignKey(this.parametroGeneralUsuario.getid_periodo(),false,"Formulario");
				this.setActualUsuarioForeignKey(this.parametroGeneralUsuario.getid_usuario(),false,"Formulario");
				this.setActualMonedaForeignKey(this.parametroGeneralUsuario.getid_moneda(),false,"Formulario");
			
			
				this.pedidocompra.setfecha(this.parametroGeneralUsuario.getfecha_sistema());
				this.pedidocompra.setfecha_emision(this.parametroGeneralUsuario.getfecha_sistema());
				this.pedidocompra.setfecha_entrega(this.parametroGeneralUsuario.getfecha_sistema());
			}
			
			//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
			this.setVariablesGlobalesAuxiliaresCombosForeignKeyPedidoCompra();
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToFormularioForeignKeyPedidoCompra(PedidoCompra pedidocompra)throws Exception {	
		try {
			
			this.setActualClienteForeignKey(pedidocompra.getid_cliente(),false,"Formulario");
			this.setActualEstadoPedidoCompraForeignKey(pedidocompra.getid_estado_pedido_compra(),false,"Formulario");
			this.setActualEmpleadoForeignKey(pedidocompra.getid_empleado(),false,"Formulario");
			this.setActualFormatoForeignKey(pedidocompra.getid_formato(),false,"Formulario");
			this.setActualTipoCambioForeignKey(pedidocompra.getid_tipo_cambio(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToListasForeignKeyPedidoCompra(PedidoCompra pedidocompra,String sTipoEvento)throws Exception {	
		try {
			
			

				if(pedidocompra.getCliente()!=null && !sTipoEvento.equals("id_clientePedidoCompra")) { //sTipoEvento Evita Bucle Infinito

					this.clientesForeignKey=new ArrayList<Cliente>();
					this.clientesForeignKey.add(pedidocompra.getCliente());

					this.addItemDefectoCombosForeignKeyCliente();
					this.cargarCombosFrameClientesForeignKey("Todos");
				}

				if(pedidocompra.getEmpleado()!=null && !sTipoEvento.equals("id_empleadoPedidoCompra")) { //sTipoEvento Evita Bucle Infinito

					this.empleadosForeignKey=new ArrayList<Empleado>();
					this.empleadosForeignKey.add(pedidocompra.getEmpleado());

					this.addItemDefectoCombosForeignKeyEmpleado();
					this.cargarCombosFrameEmpleadosForeignKey("Todos");
				}

				if(pedidocompra.getTipoCambio()!=null && !sTipoEvento.equals("id_tipo_cambioPedidoCompra")) { //sTipoEvento Evita Bucle Infinito

					this.tipocambiosForeignKey=new ArrayList<TipoCambio>();
					this.tipocambiosForeignKey.add(pedidocompra.getTipoCambio());

					this.addItemDefectoCombosForeignKeyTipoCambio();
					this.cargarCombosFrameTipoCambiosForeignKey("Todos");
				}
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	/*
	public void setVariablesCombosFromBeanForeignKeyPedidoCompra()throws Exception {	
		try {
			
			this.setActualClienteForeignKey(this.pedidocompraConstantesFunciones.getid_cliente(),false,"Formulario");
			this.setActualEstadoPedidoCompraForeignKey(this.pedidocompraConstantesFunciones.getid_estado_pedido_compra(),false,"Formulario");
			this.setActualEmpleadoForeignKey(this.pedidocompraConstantesFunciones.getid_empleado(),false,"Formulario");
			this.setActualFormatoForeignKey(this.pedidocompraConstantesFunciones.getid_formato(),false,"Formulario");
			this.setActualTipoCambioForeignKey(this.pedidocompraConstantesFunciones.getid_tipo_cambio(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	*/
	
	public void setVariablesGlobalesAuxiliaresCombosForeignKeyPedidoCompra()throws Exception {	
		try {
			

				if(this.jInternalFrameDetalleFormPedidoCompra!=null) {
					Ejercicio ejercicioActual=(Ejercicio)this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_ejercicioPedidoCompra.getSelectedItem();
					this.setActualAnioForeignKey(ejercicioActual.getid_anio(),false,"Formulario");
				}

				if(this.jInternalFrameDetalleFormPedidoCompra!=null) {
					Periodo periodoActual=(Periodo)this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_periodoPedidoCompra.getSelectedItem();
					this.setActualMesForeignKey(periodoActual.getid_mes(),false,"Formulario");
				}

				this.setActualUsuarioForeignKey(this.usuarioActual.getId(),false,"Formulario");
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesDefaultCombosForeignKeyPedidoCompra()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesParametroCombosForeignKeyPedidoCompra()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void cargarCombosParametroPedidoCompra()throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			//this.cargarDatosCliente();
			
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
		
	public void cargarCombosFrameForeignKeyPedidoCompra()throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey("Todos");
			this.cargarCombosFrameSucursalsForeignKey("Todos");
			this.cargarCombosFrameModulosForeignKey("Todos");
			this.cargarCombosFrameEjerciciosForeignKey("Todos");
			this.cargarCombosFramePeriodosForeignKey("Todos");
			this.cargarCombosFrameAniosForeignKey("Todos");
			this.cargarCombosFrameMessForeignKey("Todos");
			this.cargarCombosFrameClientesForeignKey("Todos");
			this.cargarCombosFrameUsuariosForeignKey("Todos");
			this.cargarCombosFrameMonedasForeignKey("Todos");
			this.cargarCombosFrameEstadoPedidoComprasForeignKey("Todos");
			this.cargarCombosFrameEmpleadosForeignKey("Todos");
			this.cargarCombosFrameFormatosForeignKey("Todos");
			this.cargarCombosFrameTipoCambiosForeignKey("Todos");

		} catch(Exception e) {
			throw e;
		}		
	}		
	
	public void cargarCombosFrameForeignKeyPedidoCompra(String sFormularioTipoBusqueda)throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameSucursalsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameModulosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEjerciciosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFramePeriodosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameAniosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameMessForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameClientesForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameUsuariosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameMonedasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEstadoPedidoComprasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEmpleadosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameFormatosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoCambiosForeignKey(sFormularioTipoBusqueda);

		} catch(Exception e) {
			throw e;
		}		
	}	
	
	public void setItemDefectoCombosForeignKeyPedidoCompra()throws Exception {
		try {
			



			if(this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_empresaPedidoCompra!=null && this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_empresaPedidoCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_empresaPedidoCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_sucursalPedidoCompra!=null && this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_sucursalPedidoCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_sucursalPedidoCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_moduloPedidoCompra!=null && this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_moduloPedidoCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_moduloPedidoCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_ejercicioPedidoCompra!=null && this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_ejercicioPedidoCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_ejercicioPedidoCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_periodoPedidoCompra!=null && this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_periodoPedidoCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_periodoPedidoCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_anioPedidoCompra!=null && this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_anioPedidoCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_anioPedidoCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_mesPedidoCompra!=null && this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_mesPedidoCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_mesPedidoCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_clientePedidoCompra!=null && this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_clientePedidoCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_clientePedidoCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_usuarioPedidoCompra!=null && this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_usuarioPedidoCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_usuarioPedidoCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_monedaPedidoCompra!=null && this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_monedaPedidoCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_monedaPedidoCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_estado_pedido_compraPedidoCompra!=null && this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_estado_pedido_compraPedidoCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_estado_pedido_compraPedidoCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_empleadoPedidoCompra!=null && this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_empleadoPedidoCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_empleadoPedidoCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_formatoPedidoCompra!=null && this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_formatoPedidoCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_formatoPedidoCompra.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_tipo_cambioPedidoCompra!=null && this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_tipo_cambioPedidoCompra.getItemCount()>0) {
				this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_tipo_cambioPedidoCompra.setSelectedIndex(0);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	




























	
	

	public PedidoCompraBeanSwingJInternalFrame() throws Exception {
		super(false,PaginaTipo.PRINCIPAL);
	}
	
	public PedidoCompraBeanSwingJInternalFrame(Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
	}
	
	public PedidoCompraBeanSwingJInternalFrame(Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
		
		this.pedidocompraSessionBean=new PedidoCompraSessionBean(); 
		this.pedidocompraConstantesFunciones=new PedidoCompraConstantesFunciones(); 
		this.pedidocompraBean=new PedidoCompra();//(this.pedidocompraConstantesFunciones); 		
		this.pedidocompraReturnGeneral=new PedidoCompraParameterReturnGeneral(); 
		
		this.pedidocompraSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
		this.pedidocompraSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
				
	}
	
	public PedidoCompraBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,cargarTodosDatos);
	}
		
	public PedidoCompraBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,false,false,cargarRelaciones,cargarTodosDatos);
	}	
	
	public PedidoCompraBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,PaginaTipo paginaTipo,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos) throws Exception //Boolean esParaBusquedaForeignKey
    {
		super(jdesktopPane,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		try {
			
			this.permiteRecargarForm=false;
			
			this.startProcessPedidoCompra(true);
			
			Boolean esParaBusquedaForeignKey=false;//ANTES USADO COMO PARAMETRO DEL CONSTRUCTOR
			
			if(paginaTipo.equals(PaginaTipo.BUSQUEDA)) {
				esParaBusquedaForeignKey=true;
			}
			
			//OBLIGA VALIDA CON GUARDAR RELACIONES, TAMBIEN EN SWING
			conGuardarRelaciones=true;
			
			
			//SE ASIGNA EN CLASE PADRE
			/*
			this.parametroGeneralSg=parametroGeneralSg;		
			this.parametroGeneralUsuario=parametroGeneralUsuario;	
			this.usuarioActual=usuarioActual;
			this.moduloActual=moduloActual;
			*/						
			
			long start_time=0;
			long end_time=0;
			
			if(Constantes2.ISDEVELOPING2) {
				start_time = System.currentTimeMillis();
			}
			
			if(!cargarTodosDatos) {
				this.sAccionBusqueda="NINGUNO";
			}
			
			this.pedidocompraConstantesFunciones=new PedidoCompraConstantesFunciones(); 
			this.pedidocompraBean=new PedidoCompra();//this.pedidocompraConstantesFunciones); 			
			this.pedidocompraReturnGeneral=new PedidoCompraParameterReturnGeneral(); 
		
			PedidoCompraBeanSwingJInternalFrameAdditional.CargaInicialInicio(this, "NORMAL", null);
			
			this.setTitle(Funciones.GetTituloSistema(this.parametroGeneralSg,this.moduloActual,this.usuarioActual,"Pedido Compra Mantenimiento",paginaTipo));			
			
			this.conTotales=false;
			
			this.conTotales=true;
			
			
			this.pedidocompra=new PedidoCompra();
			this.pedidocompras = new ArrayList<PedidoCompra>();
			this.pedidocomprasAux = new ArrayList<PedidoCompra>();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic=new PedidoCompraLogic();
				this.pedidocompraLogic.getNewConnexionToDeep("");
			}
			
			//this.pedidocompraSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
			//this.pedidocompraSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
			
			this.jDesktopPane=jdesktopPane;
			
			if(this.jDesktopPane.getClass().equals(JDesktopPaneMe.class)) {
				this.constantes2=((JDesktopPaneMe)this.jDesktopPane).constantes2;
			}
			
			if(!Constantes.CON_VARIAS_VENTANAS) {
    			MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameDetalleFormPedidoCompra);
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameReporteDinamicoPedidoCompra!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoPedidoCompra);	
					}
					
					if(this.jInternalFrameImportacionPedidoCompra!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionPedidoCompra);							
					}
					
				}
				
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameOrderByPedidoCompra!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameOrderByPedidoCompra);					
					}
					
				}
			}
			
			//DETALLE DATOS
			if(this.jInternalFrameDetalleFormPedidoCompra!=null) { //this.conCargarFormDetalle) {
				this.jDesktopPane.add(this.jInternalFrameDetalleFormPedidoCompra);
				this.jInternalFrameDetalleFormPedidoCompra.setVisible(false);
				this.jInternalFrameDetalleFormPedidoCompra.setSelected(false);						
			}
			
			if(!this.conCargarMinimo) {
				
				//REPORTE DINAMICO
				if(this.jInternalFrameReporteDinamicoPedidoCompra!=null) {
					this.jDesktopPane.add(this.jInternalFrameReporteDinamicoPedidoCompra);
					this.jInternalFrameReporteDinamicoPedidoCompra.setVisible(false);
					this.jInternalFrameReporteDinamicoPedidoCompra.setSelected(false);
				}
				
				//IMPORTACION
				if(this.jInternalFrameImportacionPedidoCompra!=null) {
					this.jDesktopPane.add(this.jInternalFrameImportacionPedidoCompra);
					this.jInternalFrameImportacionPedidoCompra.setVisible(false);
					this.jInternalFrameImportacionPedidoCompra.setSelected(false);
				}
				
				
			}
			
			
			if(!this.conCargarMinimo) {
				
				if(this.jInternalFrameOrderByPedidoCompra!=null) {
					this.jDesktopPane.add(this.jInternalFrameOrderByPedidoCompra);
					this.jInternalFrameOrderByPedidoCompra.setVisible(false);
					this.jInternalFrameOrderByPedidoCompra.setSelected(false);				
				}
				
			}
			
			
			//this.esParaBusquedaForeignKey=false;
			this.esParaBusquedaForeignKey=esParaBusquedaForeignKey;
			
			this.invalidValues=new InvalidValue[0];
			
			
			
			this.idPedidoCompraActual=0L;
			this.rowIndexActual=0;
			
			
			this.iNumeroPaginacionPagina=0;
			this.iNumeroPaginacion=PedidoCompraConstantesFunciones.INUMEROPAGINACION;
			this.pagination=new Pagination();
			this.datosCliente=new DatosCliente();
			this.lIdUsuarioSesion=0L;	
			this.sTipoArchivoReporte="";
			this.sTipoArchivoReporteDinamico="";
			this.sTipoReporte="";
			this.sTipoReporteDinamico="";
			this.sTipoPaginacion="";
			this.sTipoRelacion="";
			this.sTipoAccion="";
			this.sTipoAccionFormulario="";
			this.sTipoSeleccionar="";			
			this.sDetalleReporte="";
			this.sTipoReporteExtra="";
			this.sValorCampoGeneral="";
			this.sPathReporteDinamico="";			
			
			this.isMostrarNumeroPaginacion=false;
			this.isSeleccionarTodos=false;
			this.isSeleccionados=false;
			this.conGraficoReporte=false;
			this.isPostAccionNuevo=false;
			this.isPostAccionSinCerrar=false;
			this.isPostAccionSinMensaje=false;
			this.esReporteDinamico=false;
			this.esRecargarFks=false;
			this.esReporteAccionProceso=false;
			
			this.pedidocompraReturnGeneral=new PedidoCompraParameterReturnGeneral();
			
			this.pedidocompraParameterGeneral=new PedidoCompraParameterReturnGeneral();
			
			
			
			this.sistemaLogicAdditional=new SistemaLogicAdditional();
			
			this.sistemaLogicAdditional.setConnexion(this.pedidocompraLogic.getConnexion());			
			
			
			
			
			
			
			
			//VERIFICAR GLOBAL
			this.cargarDatosCliente();			
			
			
			if(!this.pedidocompraSessionBean.getEsGuardarRelacionado()) {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarLicenciaCliente(this.datosCliente,this.moduloActual,this.usuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_CONTROLGLOBAL);
					}
					
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}			
			
			//VERIFICAR GLOBAL
			
			//VERIFICAR SESSION ACTUAL
			//this.cargarDatosCliente();
			
			this.sistemaReturnGeneral=new SistemaParameterReturnGeneral();
			
			SistemaParameterReturnGeneralAdditional.inicializarSinSeguridad(this.sistemaReturnGeneral);
			
			if(PedidoCompraJInternalFrame.CON_LLAMADA_SIMPLE) {
				if(this.pedidocompraSessionBean.getEsGuardarRelacionado()) {
					this.opcionActual.setId(0L);
					
					//idOpcion=0L;					
				}
				
				ArrayList<String> arrPaginas=new ArrayList<String>();		
				ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
				
				arrPaginas.add(DetallePedidoCompraConstantesFunciones.SNOMBREOPCION);
		
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					//this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActualWithConnection(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,PedidoCompraConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.pedidocompraSessionBean.getEsGuardarRelacionado(),this.pedidocompraSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,PedidoCompraConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.pedidocompraSessionBean.getEsGuardarRelacionado(),this.pedidocompraSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					if(!this.sistemaReturnGeneral.getEsValidado()) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
					//FALTA
				}
			} else { 
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			} 
			//VERIFICAR SESSION ACTUAL
			
			
			this.sVisibilidadTablaBusquedas="table-row";
			this.sVisibilidadTablaElementos="none";
			this.sVisibilidadTablaAcciones="none";
			
			this.isVisibilidadCeldaNuevoPedidoCompra=false;
			this.isVisibilidadCeldaDuplicarPedidoCompra=true;
			this.isVisibilidadCeldaCopiarPedidoCompra=true;
			this.isVisibilidadCeldaVerFormPedidoCompra=true;
			this.isVisibilidadCeldaOrdenPedidoCompra=true;
			this.isVisibilidadCeldaNuevoRelacionesPedidoCompra=false;
			this.isVisibilidadCeldaModificarPedidoCompra=false;
			this.isVisibilidadCeldaActualizarPedidoCompra=false;
			this.isVisibilidadCeldaEliminarPedidoCompra=false;
			this.isVisibilidadCeldaCancelarPedidoCompra=false;
			this.isVisibilidadCeldaGuardarPedidoCompra=false;
			this.isVisibilidadCeldaGuardarCambiosPedidoCompra=false;
			
			
			this.isVisibilidadFK_IdAnio=true;
			this.isVisibilidadFK_IdCliente=true;
			this.isVisibilidadFK_IdEjercicio=true;
			this.isVisibilidadFK_IdEmpleado=true;
			this.isVisibilidadFK_IdEmpresa=true;
			this.isVisibilidadFK_IdEstadoPedidoCompraEstadoPedoCompra=true;
			this.isVisibilidadFK_IdFormato=true;
			this.isVisibilidadFK_IdMes=true;
			this.isVisibilidadFK_IdModulo=true;
			this.isVisibilidadFK_IdMoneda=true;
			this.isVisibilidadFK_IdPeriodo=true;
			this.isVisibilidadFK_IdSucursal=true;
			this.isVisibilidadFK_IdTipoCambio=true;
			this.isVisibilidadFK_IdUsuario=true;
			
			//ELEMENTOS TABLAS PARAMETOS
			
			
			
			//ELEMENTOS TABLAS PARAMETOS_FIN
			
			//this.actualizarEstadoCeldasBotonesPedidoCompra("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
						
			
			
			this.inicializarPermisosPedidoCompra();
			
			//INICIALIZAR FALSE, TALVEZ COMENTAR
			this.setPermisosUsuarioPedidoCompra(false);
			
			this.setPermisosUsuarioPedidoCompra();
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.pedidocompraSessionBean.getEsGuardarRelacionado() 
				|| (this.pedidocompraSessionBean.getEsGuardarRelacionado() && this.pedidocompraSessionBean.getConGuardarRelaciones())) {
				
				this.inicializarSetPermisosUsuarioPedidoCompraClasesRelacionadas();
			}
			
			if(this.pedidocompraSessionBean.getConGuardarRelaciones()) {
				this.actualizarTabsSetPermisosUsuarioPedidoCompraClasesRelacionadas();
			}
			
			
			
			//SOLO SE EJECUTA LA PRIMERA VEZ, BINDINGS SI FUNCIONA
			if(!PedidoCompraJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingBotonesPermisosPedidoCompra();
			} else {
				this.inicializarActualizarBindingBotonesPermisosManualPedidoCompra();
			}
			
			if(!this.isPermisoBusquedaPedidoCompra) {
				//BYDAN_BUSQUEDAS
				
				this.jTabbedPaneBusquedasPedidoCompra.setVisible(false);				
				
			}
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.pedidocompraSessionBean.getEsGuardarRelacionado()) {				
				this.tiposArchivosReportes=Funciones.getListTiposArchivosReportes();
				this.tiposArchivosReportesDinamico=Funciones.getListTiposArchivosReportes();
				this.tiposReportes=Funciones.getListTiposReportes(true);
				this.tiposReportesDinamico=Funciones.getListTiposReportesDinamico(true);
				
				
				this.tiposReportes.add(new Reporte("RELACIONES","RELACIONES"));
				this.tiposReportesDinamico.add(new Reporte("RELACIONES","RELACIONES"));
				
				this.tiposGraficosReportes=Funciones2.getListTiposGraficosReportes();
				this.tiposPaginacion=Funciones2.getListTiposPaginacion(this.isPermisoPaginacionMedioPedidoCompra,this.isPermisoPaginacionMedioPedidoCompra,this.isPermisoPaginacionTodoPedidoCompra);
				this.tiposSeleccionar=Funciones2.getListTiposSeleccionar();
				this.tiposSeleccionar.addAll(PedidoCompraConstantesFunciones.getTiposSeleccionarPedidoCompra());
				
				this.tiposColumnasSelect=PedidoCompraConstantesFunciones.getTiposSeleccionarPedidoCompra(true);
				
				this.tiposRelacionesSelect=new ArrayList<Reporte>();								
				
				this.cargarTiposRelacionesSelectPedidoCompra();				
				//this.tiposRelacionesSelect=PedidoCompraConstantesFunciones.getTiposRelacionesPedidoCompra(true);
				
			} else {
				this.tiposArchivosReportes=new ArrayList<Reporte>();
				this.tiposArchivosReportesDinamico=new ArrayList<Reporte>();
				this.tiposReportes=new ArrayList<Reporte>();
				this.tiposReportesDinamico=new ArrayList<Reporte>();
				this.tiposGraficosReportes=new ArrayList<Reporte>();
				this.tiposPaginacion=new ArrayList<Reporte>();
				this.tiposSeleccionar=new ArrayList<Reporte>();			
				this.tiposColumnasSelect=new ArrayList<Reporte>();	
				this.tiposRelacionesSelect=new ArrayList<Reporte>();	
			}
						
			
			//FUNCIONALIDAD_RELACIONADO
			//if(!this.pedidocompraSessionBean.getEsGuardarRelacionado()) {
				//SE ENCUENTRA MAS ADELANTE CON ACCIONES POR USUARIO
				//ACCIONES GENERALES Y POR USUARIO
				this.tiposRelaciones=Funciones2.getListTiposRelaciones();
				this.setRelacionesUsuarioPedidoCompra();
				
				this.tiposAcciones=Funciones2.getListTiposAcciones(true,false,true);
				this.setAccionesUsuarioPedidoCompra(false);	
				
				this.tiposAccionesFormulario=Funciones2.getListTiposAccionesFormulario(true,false,true);							
				this.setAccionesUsuarioPedidoCompra(true);	
				
				this.inicializarActualizarBindingtiposArchivosReportesAccionesPedidoCompra() ;
			
			/*
			} else {
				this.tiposAcciones=new ArrayList<Reporte>();
				this.tiposAccionesFormulario=new ArrayList<Reporte>();
			}
			*/						
			
			this.inicializarInvalidValues();
						
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			
			
			this.arrOrderBy= new  ArrayList<OrderBy>();
			
			
			this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
			
			
			this.traerValoresTablaOrderBy();			
			
			
			this.isGuardarCambiosEnLote=false;
			this.isCargarCombosDependencia=false;
			
			
			this.detallepedidocompraLogic=new DetallePedidoCompraLogic(); 
			jasperPrint = null;												
			
			//FK
			
			this.empresaLogic=new EmpresaLogic();
			this.sucursalLogic=new SucursalLogic();
			this.moduloLogic=new ModuloLogic();
			this.ejercicioLogic=new EjercicioLogic();
			this.periodoLogic=new PeriodoLogic();
			this.anioLogic=new AnioLogic();
			this.mesLogic=new MesLogic();
			this.clienteLogic=new ClienteLogic();
			this.usuarioLogic=new UsuarioLogic();
			this.monedaLogic=new MonedaLogic();
			this.estadopedidocompraLogic=new EstadoPedidoCompraLogic();
			this.empleadoLogic=new EmpleadoLogic();
			this.formatoLogic=new FormatoLogic();
			this.tipocambioLogic=new TipoCambioLogic();
			
			//PARAMETROS
			
			
			/*
			if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {		
				hashtableEnv =  Funciones.getHashtableEnv();		
				initialContext = new InitialContext(hashtableEnv);	
			}
			*/
			/*
			if(Constantes.ISUSAEJBREMOTE) {
				pedidocompraImplementable= (PedidoCompraImplementable) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+PedidoCompraConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBREMOTE);
			} else if(Constantes.ISUSAEJBHOME) {
				pedidocompraImplementableHome= (PedidoCompraImplementableHome) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+PedidoCompraConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBLOCAL);
			}			
			*/
			
			
			this.pedidocompras= new ArrayList<PedidoCompra>();
			this.pedidocomprasEliminados= new ArrayList<PedidoCompra>();
						
			this.isEsNuevoPedidoCompra=false;
			this.esParaAccionDesdeFormularioPedidoCompra=false;
			this.isEsMantenimientoRelacionesRelacionadoUnico=false;
			this.isEsMantenimientoRelaciones=false;
			this.isEsMantenimientoRelacionado=false;
			this.isContieneImagenes=false;
			
			
			
			
			//BUSQUEDA INTERNA FK
			this.idClienteActual=0L;
			this.idEmpleadoActual=0L;
			this.idTipoCambioActual=0L;
			
			//INICIALIZAR LISTAS FK
			
			this.empresasForeignKey=new ArrayList<Empresa>() ;
			this.sucursalsForeignKey=new ArrayList<Sucursal>() ;
			this.modulosForeignKey=new ArrayList<Modulo>() ;
			this.ejerciciosForeignKey=new ArrayList<Ejercicio>() ;
			this.periodosForeignKey=new ArrayList<Periodo>() ;
			this.aniosForeignKey=new ArrayList<Anio>() ;
			this.messForeignKey=new ArrayList<Mes>() ;
			this.clientesForeignKey=new ArrayList<Cliente>() ;
			this.usuariosForeignKey=new ArrayList<Usuario>() ;
			this.monedasForeignKey=new ArrayList<Moneda>() ;
			this.estadopedidocomprasForeignKey=new ArrayList<EstadoPedidoCompra>() ;
			this.empleadosForeignKey=new ArrayList<Empleado>() ;
			this.formatosForeignKey=new ArrayList<Formato>() ;
			this.tipocambiosForeignKey=new ArrayList<TipoCambio>() ;
			
			
			
			
			if(blncargarCombostrForeignKey) {
				this.cargarCombosForeignKeyPedidoCompra(this.isCargarCombosDependencia);
			}
			
			this.cargarCombosParametroPedidoCompra();
			
			
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.pedidocompraSessionBean.getEsGuardarRelacionado()) {
				this.onLoad();
			}
						
			PedidoCompraBeanSwingJInternalFrameAdditional.RecargarVentanaSegunOpcion(this,opcionActual);
			
			/*
			if(blnCargarInformacionInicial) {
				this.recargarInformacion();
			}
			*/
			//this.iNumeroPaginacionPagina=0;
			//this.iNumeroPaginacion=PedidoCompraConstantesFunciones.INUMEROPAGINACION;
			
			this.actualizarEstadoCeldasBotonesPedidoCompra("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			//SOLO LA PRIMERA VEZ HACE LOS BINDINGS, SOLO AHI FUNCIONA
			this.inicializarActualizarBindingPedidoCompra(true); 
			
			//SE REDIMENSIONA SINO NO SE ACTUALIZA
			this.redimensionarTablaDatos();
			
			
			this.initActions();
			
			;
						
			if(this.jInternalFrameDetalleFormPedidoCompra!=null) {//if(this.conCargarFormDetalle) {
				this.cargarMenuRelaciones();
			}
			
			//OBLIGA CARGAR DETALLE, MEJOR DESHABILITAR, FALTA TALVEZ PONER EN SELECCIONAR
			//MAYBE
			//this.updateControlesFormularioPedidoCompra();
			
			if(!this.conCargarMinimo) {
				this.updateBusquedasFormularioPedidoCompra();
			}
			
			PedidoCompraBeanSwingJInternalFrameAdditional.CargaInicial(this, "NORMAL", null);
			
			
			//SE REALIZA ESTO PARA QUE SE PUEDA RECORRER TAB SIN IMPORTAR ORDEN
			Boolean existeTabBusqueda=false;
			
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				
				for(int i=0; i<this.jTabbedPaneBusquedasPedidoCompra.getTabCount(); i++) {
					this.jTabbedPaneBusquedasPedidoCompra.setSelectedIndex(i);
						
					if(!existeTabBusqueda) {
						existeTabBusqueda=true;
					}
				}
					
				if(existeTabBusqueda) {
					this.jTabbedPaneBusquedasPedidoCompra.setSelectedIndex(0);
				}	
				
				
			}
			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.commitNewConnexionToDeep();
			}
			
			
			if(Constantes2.ISDEVELOPING2) {
				end_time = System.currentTimeMillis();			
				String sTipo="Load Ventana";
				Funciones2.getMensajeTiempoEjecucion(start_time, end_time, sTipo,false);
			}  
			
			this.finishProcessPedidoCompra(true);
			
			this.dEnd=(double)System.currentTimeMillis();
			
			this.dDif=this.dEnd - this.dStart;
			
			if(Constantes.ISDEVELOPING) {
				System.out.println("Tiempo(ms) Carga PedidoCompra: " + this.dDif); 
			}
			
			this.permiteRecargarForm=true;
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.closeNewConnexionToDeep();
			}
		}	 
    }
	
	public void cargarTiposRelacionesSelectPedidoCompra() {
		Reporte reporte=new Reporte();
		
	

		reporte=new Reporte();
		reporte.setsCodigo(DetallePedidoCompraConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(DetallePedidoCompraConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);
	}
	
	
	
	public void jTabbedPaneChangeListenerGeneral(String sTipo,ChangeEvent evt) { 	  
		Boolean procesaCargarParteTab=false;
			
		try {
			int iIndex=0;		    			
			String sTitle="";
			
			//TABBED PANE RELACIONES
			if(sTipo.equals("RelacionesPedidoCompra")) {
				iIndex=this.jInternalFrameDetalleFormPedidoCompra.jTabbedPaneRelacionesPedidoCompra.getSelectedIndex();		    
			
				sTitle=this.jInternalFrameDetalleFormPedidoCompra.jTabbedPaneRelacionesPedidoCompra.getTitleAt(iIndex);
				
				Integer intSelectedRow = 0;	
			
				intSelectedRow = this.jTableDatosPedidoCompra.getSelectedRow();	
				
				

				if(sTitle.equals("Detalle Pedido Compras")) {
					if(!DetallePedidoCompraJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessPedidoCompra();

						this.cargarParteTabPanelRelacionadaDetallePedidoCompra(iIndex,intSelectedRow);
					}
					
				}
				
			}
			
			//TABBED PANE RELACIONES FIN(EXTRA TAB)
			;
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		} finally {
			if(procesaCargarParteTab) {				
				this.finishProcessPedidoCompra();	
			}
		}
    }
	
	

	public void cargarParteTabPanelRelacionadaDetallePedidoCompra(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormPedidoCompra.cargarSessionConBeanSwingJInternalFrameDetallePedidoCompra(false,true,iIndex);
		this.jButtonDetallePedidoCompraActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaDetallePedidoCompra();

		//this.jTabbedPaneRelacionesPedidoCompra.updateUI();
		//this.jTabbedPaneRelacionesPedidoCompra.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesPedidoCompra.setSelectedIndex(iIndex);


	}
	
	public void jButtonRelacionActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
				 if(sTipo.equals("DetallePedidoCompra")) {
				int row=this.jTableDatosPedidoCompra.getSelectedRow();
				jButtonDetallePedidoCompraActionPerformed(evt,row,true,false,null);
				}
  		} catch(Exception e) {
  			e.printStackTrace();
  		}
    }
	
	public void cargarMenuRelaciones() {	
		JMenuItem jmenuItem= new JMenuItem("General");
		String sLabelMenu="";
		
		if(!this.pedidocompraSessionBean.getEsGuardarRelacionado()) {
			for(Reporte reporte:this.tiposRelaciones) {
			

				if(reporte.getsCodigo().equals("Detalle Pedido Compra")) {

					if(this.isTienePermisosDetallePedidoCompra && this.pedidocompraConstantesFunciones.mostrarDetallePedidoCompraPedidoCompra && !PedidoCompraConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Detalle Pedido Compras"+"("+DetallePedidoCompraConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Detalle Pedido Compras");

						if(pedidocompraConstantesFunciones.resaltarDetallePedidoCompraPedidoCompra!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(pedidocompraConstantesFunciones.resaltarDetallePedidoCompraPedidoCompra);
						}

						jmenuItem.setEnabled(this.pedidocompraConstantesFunciones.activarDetallePedidoCompraPedidoCompra);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"DetallePedidoCompra"));

						

						this.jInternalFrameDetalleFormPedidoCompra.jmenuDetallePedidoCompra.add(jmenuItem);

						
					}

					continue;
				}
			}
		}
	}		
	
	public void cargarCombosForeignKeyPedidoCompra(Boolean cargarCombosDependencia) throws Exception {   
		this.cargarCombosForeignKeyPedidoCompra(cargarCombosDependencia,true,true);
	}
	
	//CARGAR COMBOS EN LOTE
	public void cargarCombosForeignKeyPedidoCompra(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales) throws Exception {   
		this.cargarCombosTodosForeignKeyPedidoCompraListas(cargarCombosDependencia);
				
		this.addItemDefectoCombosTodosForeignKeyPedidoCompra();
		
		this.cargarCombosFrameForeignKeyPedidoCompra();						
		
		if(conInitActions) {
			this.initActionsCombosTodosForeignKeyPedidoCompra();
		}
		
		if(conSetVariablesGlobales) {
			this.setVariablesGlobalesCombosForeignKeyPedidoCompra();
		}
	}
	
	

	public void cargarCombosForeignKeyAnio(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyAnioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyAnio();
				this.cargarCombosFrameAniosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaAnio(this.aniosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyMes(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyMesListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyMes();
				this.cargarCombosFrameMessForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaMes(this.messForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCliente(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyClienteListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCliente();
				this.cargarCombosFrameClientesForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaCliente(this.clientesForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEstadoPedidoCompra(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyEstadoPedidoCompraListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyEstadoPedidoCompra();
				this.cargarCombosFrameEstadoPedidoComprasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaEstadoPedidoCompra(this.estadopedidocomprasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEmpleado(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyEmpleadoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyEmpleado();
				this.cargarCombosFrameEmpleadosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaEmpleado(this.empleadosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyFormato(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyFormatoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyFormato();
				this.cargarCombosFrameFormatosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaFormato(this.formatosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoCambio(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoCambioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoCambio();
				this.cargarCombosFrameTipoCambiosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTipoCambio(this.tipocambiosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void jButtonNuevoPedidoCompraActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.FORM_RECARGAR;
			String sTipo="NUEVO_NORMAL";
			
			this.estaModoNuevo=true;
			
			if(this.pedidocompraSessionBean.getConGuardarRelaciones()) {
				this.dStart=(double)System.currentTimeMillis();
			}
				
			//if(this.esUsoDesdeHijo) {
			//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			//}
											
			if(this.jInternalFrameDetalleFormPedidoCompra==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}			
				
			PedidoCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.pedidocompra,new Object(),this.pedidocompraParameterGeneral,this.pedidocompraReturnGeneral);
			
			
			if(jTableDatosPedidoCompra.getRowCount()>=1) {
				jTableDatosPedidoCompra.removeRowSelectionInterval(0, jTableDatosPedidoCompra.getRowCount()-1);						
			}
			
			this.isEsNuevoPedidoCompra=true;
			
			//ESTABLECE SI ES RELACIONADO O NO 
			this.habilitarDeshabilitarTipoMantenimientoPedidoCompra(esRelaciones);
			
			this.nuevoPreparar(false); 
			this.habilitarDeshabilitarControlesPedidoCompra(true);			
			//this.pedidocompra=new PedidoCompra();
			//this.pedidocompra.setIsChanged(true);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesPedidoCompra(false) ;						
			 
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualPedidoCompra() ;
			
			if(PedidoCompraJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetallePedidoCompra(esRelaciones);
			}
					
			//Se Duplica, sin sentido
			//this.actualizarInformacion("EVENTO_NUEVO",false,this.pedidocompra);	
			this.actualizarInformacion("INFO_PADRE",false,this.pedidocompra);				
			
			PedidoCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.pedidocompra,new Object(),this.pedidocompraParameterGeneral,this.pedidocompraReturnGeneral);
			
			if(this.pedidocompraSessionBean.getConGuardarRelaciones()) {
				this.dEnd=(double)System.currentTimeMillis();					
				this.dDif=this.dEnd - this.dStart;
					
				if(Constantes.ISDEVELOPING) {
					System.out.println("Tiempo(ms) Nuevo Preparar PedidoCompra: " + this.dDif); 
				}
			}
			
			//false para que pueda generar eventos
			this.estaModoNuevo=false;
							
			//Con this.estaModoNuevo=false;, se permite actualizar y usar eventos control al mismo tiempo (FuncionTipo.LAST)			
			PedidoCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.LAST,ControlTipo.FORM,EventoTipo.CLIC,EventoSubTipo.NEW,sTipo,this.pedidocompra,new Object(),this.pedidocompraParameterGeneral,this.pedidocompraReturnGeneral);
			
		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;			
		}
	}
	
	public void jButtonDuplicarPedidoCompraActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			Boolean soloDuplicarUno=false;
			Boolean conSeleccionarFilaTabla=false;
			
			this.estaModoNuevo=true;
			this.estaModoDuplicar=true;
			
			ArrayList<PedidoCompra> pedidocomprasSeleccionados=new ArrayList<PedidoCompra>();
			int intSelectedRow =-1;
			Integer iNumRowsSeleccionados=0;
			int[] arrNumRowsSeleccionados=null;
			
			//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
			if(conSeleccionarFilaTabla) {
				arrNumRowsSeleccionados=this.jTableDatosPedidoCompra.getSelectedRows();
				iNumRowsSeleccionados=this.jTableDatosPedidoCompra.getSelectedRows().length;			
			}
			
			pedidocomprasSeleccionados=this.getPedidoComprasSeleccionados(false);
				
			if((soloDuplicarUno && iNumRowsSeleccionados.equals(1)) || !soloDuplicarUno) {
				//LO HACE NUEVOPREPARAR
				//this.iIdNuevoPedidoCompra--;			
				//PedidoCompra pedidocompraAux= new PedidoCompra();			
				//pedidocompraAux.setId(this.iIdNuevoPedidoCompra);																
				
				//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
				//PedidoCompra pedidocompraOrigen=new PedidoCompra();
				//for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {				
				
				for(PedidoCompra pedidocompraOrigen : pedidocomprasSeleccionados) {
					if(conSeleccionarFilaTabla) {
						if(!soloDuplicarUno) {
							//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
							//intSelectedRow =iNumRowSeleccionado;
						} else {
							intSelectedRow = this.jTableDatosPedidoCompra.getSelectedRow();
						}
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							pedidocompraOrigen =(PedidoCompra) this.pedidocompraLogic.getPedidoCompras().toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidocompraOrigen =(PedidoCompra) this.pedidocompras.toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
						}
					}
					
					this.aumentarTamanioFilaNuevaTablaPedidoCompra();
					
					if(this.conTotales) {
						this.quitarFilaTotales();
					}
					
					this.nuevoPreparar(true);
					
					this.pedidocompra.setsType("DUPLICADO");
					
					this.setCopiarVariablesObjetosPedidoCompra(pedidocompraOrigen,this.pedidocompra,true,true);
					
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompra(this.pedidocompra);
					
					//LO HACE NUEVOPREPARAR
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.pedidocompraLogic.getPedidoCompras().add(this.pedidocompraAux);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.pedidocompras.add(this.pedidocompraAux);				
					}
					*/
				}
				
				this.inicializarActualizarBindingTablaPedidoCompra(false);
				
				this.jTableDatosPedidoCompra.setRowSelectionInterval(this.getIndiceNuevoPedidoCompra(), this.getIndiceNuevoPedidoCompra());
				
				int iLastRow =  this.jTableDatosPedidoCompra.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosPedidoCompra.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosPedidoCompra.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaPedidoCompra(false);
				}
			} else {
				throw new Exception("DEBE ESTAR SELECCIONADO 1 REGISTRO");
			}
			
		} catch(Exception e) {			
			FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
		
		} finally {
			this.estaModoNuevo=false;
			this.estaModoDuplicar=false;
		}
	}
	
	public void jButtonCopiarPedidoCompraActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			Boolean conSeleccionarFilaTabla=false;
			Integer iNumRowsSeleccionados=0;
			int[] intSelectedRows =null;
			int intSelectedRow =0;
			
			this.estaModoCopiar=true;
			
			ArrayList<PedidoCompra> pedidocomprasSeleccionados=new ArrayList<PedidoCompra>();									
		
			PedidoCompra pedidocompraOrigen=new PedidoCompra();
			PedidoCompra pedidocompraDestino=new PedidoCompra();
				
			pedidocomprasSeleccionados=this.getPedidoComprasSeleccionados(false);
			
			if(conSeleccionarFilaTabla) {
				iNumRowsSeleccionados=this.jTableDatosPedidoCompra.getSelectedRows().length;	
			}
			
			if(iNumRowsSeleccionados.equals(2) || pedidocomprasSeleccionados.size()==2) {
				if(conSeleccionarFilaTabla) {
					intSelectedRows =this.jTableDatosPedidoCompra.getSelectedRows();
					intSelectedRow = intSelectedRows[0];	
									
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidocompraOrigen =(PedidoCompra) this.pedidocompraLogic.getPedidoCompras().toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						pedidocompraOrigen =(PedidoCompra) this.pedidocompras.toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					intSelectedRow = intSelectedRows[1];
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidocompraDestino =(PedidoCompra) this.pedidocompraLogic.getPedidoCompras().toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						pedidocompraDestino =(PedidoCompra) this.pedidocompras.toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				}
				
				pedidocompraOrigen =pedidocomprasSeleccionados.get(0);
				pedidocompraDestino =pedidocomprasSeleccionados.get(1);
				
				this.setCopiarVariablesObjetosPedidoCompra(pedidocompraOrigen,pedidocompraDestino,true,false);
				
				pedidocompraDestino.setsType("DUPLICADO");
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(pedidocompraDestino,pedidocompraLogic.getPedidoCompras());					
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(pedidocompraDestino,pedidocompras);
				}
				//ARCHITECTURE
				
				this.inicializarActualizarBindingTablaPedidoCompra(false);
				
				//this.jTableDatosPedidoCompra.setRowSelectionInterval(this.getIndiceNuevoPedidoCompra(), this.getIndiceNuevoPedidoCompra());
				
				int iLastRow =  this.jTableDatosPedidoCompra.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosPedidoCompra.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosPedidoCompra.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					//this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaPedidoCompra(false);
				}
			} else {
				throw new Exception("DEBEN ESTAR SELECCIONADOS 2 REGISTROS");
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.estaModoCopiar=false;
		}
	}
	
	public void jButtonVerFormPedidoCompraActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormPedidoCompra==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.jInternalFrameDetalleFormPedidoCompra.setSelected(true);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonMostrarOcultarPedidoCompraActionPerformed(ActionEvent evt) throws Exception {   
		try {
			Boolean isVisible=this.jPanelParametrosReportesPedidoCompra.isVisible();
			
			//BYDAN_BUSQUEDAS
			
			this.jTabbedPaneBusquedasPedidoCompra.setVisible(!isVisible);			
			
			
			this.jPanelParametrosReportesPedidoCompra.setVisible(!isVisible);
			this.jPanelPaginacionPedidoCompra.setVisible(!isVisible);
			this.jPanelAccionesPedidoCompra.setVisible(!isVisible);
							
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarPedidoCompraActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.closingInternalFramePedidoCompra();
			
			//if(this.jInternalFrameParent==null) {
				//this.dispose();
			/*} else {
				this.setVisible(false);
	        	this.setSelected(false);	
			}*/			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarReporteDinamicoPedidoCompraActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameReporteDinamicoPedidoCompra();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarImportacionPedidoCompraActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameImportacionPedidoCompra();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonAbrirOrderByPedidoCompraActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			
			this.abrirInicializarFrameOrderByPedidoCompra();
			
			this.abrirFrameOrderByPedidoCompra();
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarOrderByPedidoCompraActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameOrderByPedidoCompra();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void abrirFrameDetallePedidoCompra(Boolean esRelaciones) throws Exception {	    	        
	    try {
			//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
			//this.jDesktopPane.add(jInternalFrameDetalleFormPedidoCompra);
			
			if(!esRelaciones) {
				if(this.jInternalFrameDetalleFormPedidoCompra.isMaximum()) {
					this.jInternalFrameDetalleFormPedidoCompra.setMaximum(false);
				}								
				
	    		this.jInternalFrameDetalleFormPedidoCompra.setSize(this.jInternalFrameDetalleFormPedidoCompra.iWidthFormulario,this.jInternalFrameDetalleFormPedidoCompra.iHeightFormulario);
	    	} else {
				if(this.iWidthScroll<this.jInternalFrameDetalleFormPedidoCompra.iWidthFormularioMaximo) {
	    			this.jInternalFrameDetalleFormPedidoCompra.setSize(this.iWidthScroll,this.iHeightScroll);
				} else {
					if(!this.jInternalFrameDetalleFormPedidoCompra.isMaximum()) {
						this.jInternalFrameDetalleFormPedidoCompra.setMaximum(true);
					}
				}
				
				if(this.jInternalFrameDetalleFormPedidoCompra.jContentPaneDetallePedidoCompra.getWidth() > this.getWidth()) {
					this.jInternalFrameDetalleFormPedidoCompra.jTabbedPaneRelacionesPedidoCompra.setMinimumSize(new Dimension(this.jInternalFrameDetalleFormPedidoCompra.jContentPaneDetallePedidoCompra.getWidth(),PedidoCompraConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormPedidoCompra.jTabbedPaneRelacionesPedidoCompra.setMaximumSize(new Dimension(this.jInternalFrameDetalleFormPedidoCompra.jContentPaneDetallePedidoCompra.getWidth(),PedidoCompraConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormPedidoCompra.jTabbedPaneRelacionesPedidoCompra.setPreferredSize(new Dimension(this.jInternalFrameDetalleFormPedidoCompra.jContentPaneDetallePedidoCompra.getWidth(),PedidoCompraConstantesFunciones.ALTO_TABPANE_RELACIONES));
					
					Dimension dimension=new Dimension(); 
					
					

					if(DetallePedidoCompraJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaDetallePedidoCompra();
					}
					
				}
	    	}
			
		
	       	this.jInternalFrameDetalleFormPedidoCompra.setVisible(true);
	        this.jInternalFrameDetalleFormPedidoCompra.setSelected(true);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirInicializarFrameOrderByPedidoCompra() throws Exception {	    	        
	    try {
			if(this.jInternalFrameOrderByPedidoCompra==null) {
				
				if(!this.conCargarMinimo) {
					this.jInternalFrameOrderByPedidoCompra=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByPedidoCompra,false,this);
				} else {
					this.jInternalFrameOrderByPedidoCompra=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByPedidoCompra,true,this);
				}
				
				this.jDesktopPane.add(this.jInternalFrameOrderByPedidoCompra);
				this.jInternalFrameOrderByPedidoCompra.setVisible(false);
				this.jInternalFrameOrderByPedidoCompra.setSelected(false);
				
				this.jInternalFrameOrderByPedidoCompra.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByPedidoCompra"));
				
				this.inicializarActualizarBindingTablaOrderByPedidoCompra();
			}
		} catch (final Exception e) {
			
		}
	}
	
	
	
	public void abrirInicializarFrameImportacionPedidoCompra() throws Exception {	    	        
	    try {
			if(this.jInternalFrameImportacionPedidoCompra==null) {
				
				this.jInternalFrameImportacionPedidoCompra=new ImportacionJInternalFrame(PedidoCompraConstantesFunciones.SCLASSWEBTITULO,this);			
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionPedidoCompra);							
				
				this.jDesktopPane.add(this.jInternalFrameImportacionPedidoCompra);
				this.jInternalFrameImportacionPedidoCompra.setVisible(false);
				this.jInternalFrameImportacionPedidoCompra.setSelected(false);


				this.jInternalFrameImportacionPedidoCompra.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionPedidoCompra"));
				this.jInternalFrameImportacionPedidoCompra.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionPedidoCompra"));
				this.jInternalFrameImportacionPedidoCompra.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionPedidoCompra"));


			}
		} catch (final Exception e) {
			
		}
	}		
	
	
	
	public void abrirInicializarFrameReporteDinamicoPedidoCompra() throws Exception {	    	        
	    try {
			
			if(this.jInternalFrameReporteDinamicoPedidoCompra==null) {
				this.jInternalFrameReporteDinamicoPedidoCompra=new ReporteDinamicoJInternalFrame(PedidoCompraConstantesFunciones.SCLASSWEBTITULO,this);	
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoPedidoCompra);	
	
	
				this.jDesktopPane.add(this.jInternalFrameReporteDinamicoPedidoCompra);
				this.jInternalFrameReporteDinamicoPedidoCompra.setVisible(false);
				this.jInternalFrameReporteDinamicoPedidoCompra.setSelected(false);
	
	
	
				this.jInternalFrameReporteDinamicoPedidoCompra.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoPedidoCompra"));
				this.jInternalFrameReporteDinamicoPedidoCompra.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoPedidoCompra"));
				this.jInternalFrameReporteDinamicoPedidoCompra.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoPedidoCompra"));
	
				this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualPedidoCompra();
			}

		} catch (final Exception e) {
			
		}
	}	
	
	
	
		

	public void redimensionarTablaPanelRelacionadaDetallePedidoCompra() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraBeanSwingJInternalFrame.jScrollPanelDatosDetallePedidoCompra.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormPedidoCompra.jContentPaneDetallePedidoCompra.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraBeanSwingJInternalFrame.jScrollPanelDatosDetallePedidoCompra.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraBeanSwingJInternalFrame.jScrollPanelDatosDetallePedidoCompra.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraBeanSwingJInternalFrame.jScrollPanelDatosDetallePedidoCompra.setPreferredSize(dimension);


	}
					
	public void cerrarFrameDetallePedidoCompra() throws Exception {	    	        
	    try {
			//this.jDesktopPane.add(jInternalFrameDetalleFormPedidoCompra);
			
	       	this.jInternalFrameDetalleFormPedidoCompra.setVisible(false);
	        this.jInternalFrameDetalleFormPedidoCompra.setSelected(false);
			
			//this.jInternalFrameDetalleFormPedidoCompra.dispose();
			//this.jInternalFrameDetalleFormPedidoCompra=null;
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirFrameReporteDinamicoPedidoCompra() throws Exception {	    	        
	    try {
			
			this.jInternalFrameReporteDinamicoPedidoCompra.setVisible(true);
	        this.jInternalFrameReporteDinamicoPedidoCompra.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void abrirFrameImportacionPedidoCompra() throws Exception {	    	        		
	    try {			
			this.jInternalFrameImportacionPedidoCompra.setVisible(true);
	        this.jInternalFrameImportacionPedidoCompra.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
	    }		
	}	
	
	
	
	
	
	public void abrirFrameOrderByPedidoCompra() throws Exception {	    	        		
	    try {
			this.jInternalFrameOrderByPedidoCompra.setVisible(true);
	        this.jInternalFrameOrderByPedidoCompra.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameOrderByPedidoCompra() throws Exception {	    	        		
	    try {			
			this.jInternalFrameOrderByPedidoCompra.setVisible(false);
	        this.jInternalFrameOrderByPedidoCompra.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameReporteDinamicoPedidoCompra() throws Exception {			
	    try {
			this.jInternalFrameReporteDinamicoPedidoCompra.setVisible(false);
	        this.jInternalFrameReporteDinamicoPedidoCompra.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameImportacionPedidoCompra() throws Exception {	    	        		
	    try {
			this.jInternalFrameImportacionPedidoCompra.setVisible(false);
	        this.jInternalFrameImportacionPedidoCompra.setSelected(false);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	
	public void jButtonModificarPedidoCompraActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.modificarPedidoCompra(evt,-1,false);
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void modificarPedidoCompra(ActionEvent evt,int rowIndex,Boolean esRelaciones) throws Exception {   
		try {
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosPedidoCompra.getSelectedRow();
			}
			
			this.habilitarDeshabilitarControlesPedidoCompra(true);
			//this.isEsNuevoPedidoCompra=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompra =(PedidoCompra) this.pedidocompraLogic.getPedidoCompras().toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.pedidocompra =(PedidoCompra) this.pedidocompras.toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.actualizarEstadoCeldasBotonesPedidoCompra("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesPedidoCompra(false) ;
			
			if(pedidocompraSessionBean.getConGuardarRelaciones()) {
			

				if(this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraBeanSwingJInternalFrame.detallepedidocompraSessionBean.getEsGuardarRelacionado() && DetallePedidoCompraJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonDetallePedidoCompraActionPerformed(null,intSelectedRow,false,true,null);
				}
			}
			
			if(PedidoCompraJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetallePedidoCompra(esRelaciones);
			}
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualPedidoCompra(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarFilaTablaPedidoCompraActual() { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL
			Integer intSelectedRow = this.jTableDatosPedidoCompra.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompra =(PedidoCompra) this.pedidocompraLogic.getPedidoCompras().toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.pedidocompra =(PedidoCompra) this.pedidocompras.toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void seleccionarPedidoCompra(ActionEvent evt,int rowIndex) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormPedidoCompra==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosPedidoCompra.getSelectedRow();
			}
			
			//this.habilitarDeshabilitarControlesPedidoCompra(true);
			//this.isEsNuevoPedidoCompra=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompra =(PedidoCompra) this.pedidocompraLogic.getPedidoCompras().toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.pedidocompra =(PedidoCompra) this.pedidocompras.toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.jInternalFrameParent.setIdCombosCodigoDesdeBusquedaForeignKey(this.pedidocompra.getId(),this.sTipoBusqueda);
			
			this.dispose();
			
			//this.actualizarEstadoCeldasBotonesPedidoCompra("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			/*
			this.inicializarActualizarBindingBotonesPedidoCompra(false) ;
			
			if(PedidoCompraJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetallePedidoCompra(esRelaciones);
			}
			*/
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualPedidoCompra(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void setIdCombosCodigoDesdeBusquedaForeignKey(Long id,String sType)throws Exception{
		
		try {
			
			if(sType.equals("Cliente")) {
				if(!this.pedidocompraConstantesFunciones.cargarid_clientePedidoCompra) {
					this.cargarCombosClientesForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingPedidoCompra(false,false);
					this.cargarCombosFrameClientesForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_cliente (id);

				this.recargarComboTablaCliente(this.clientesForeignKey);

			}
			
			if(sType.equals("Empleado")) {
				if(!this.pedidocompraConstantesFunciones.cargarid_empleadoPedidoCompra) {
					this.cargarCombosEmpleadosForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingPedidoCompra(false,false);
					this.cargarCombosFrameEmpleadosForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_empleado (id);

				this.recargarComboTablaEmpleado(this.empleadosForeignKey);

			}
			
			if(sType.equals("TipoCambio")) {
				if(!this.pedidocompraConstantesFunciones.cargarid_tipo_cambioPedidoCompra) {
					this.cargarCombosTipoCambiosForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingPedidoCompra(false,false);
					this.cargarCombosFrameTipoCambiosForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_tipo_cambio (id);

				this.recargarComboTablaTipoCambio(this.tipocambiosForeignKey);

			}
		} catch(Exception e) {
			throw e;
		}
	}
	
						
	
	public void recargarComboTablaAnio(List<Anio> aniosForeignKey)throws Exception{
		TableColumn tableColumnAnio=this.jTableDatosPedidoCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompra,PedidoCompraConstantesFunciones.LABEL_IDANIO));
		TableCellEditor tableCellEditorAnio =tableColumnAnio.getCellEditor();

		AnioTableCell anioTableCellFk=(AnioTableCell)tableCellEditorAnio;

		if(anioTableCellFk!=null) {
			anioTableCellFk.setaniosForeignKey(aniosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosPedidoCompra.getSelectedRow();

		//if(intSelectedRow<=0) {
			//anioTableCellFk.setRowActual(intSelectedRow);
			//anioTableCellFk.setaniosForeignKeyActual(aniosForeignKey);
		//}


		if(anioTableCellFk!=null) {
			anioTableCellFk.RecargarAniosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaMes(List<Mes> messForeignKey)throws Exception{
		TableColumn tableColumnMes=this.jTableDatosPedidoCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompra,PedidoCompraConstantesFunciones.LABEL_IDMES));
		TableCellEditor tableCellEditorMes =tableColumnMes.getCellEditor();

		MesTableCell mesTableCellFk=(MesTableCell)tableCellEditorMes;

		if(mesTableCellFk!=null) {
			mesTableCellFk.setmessForeignKey(messForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosPedidoCompra.getSelectedRow();

		//if(intSelectedRow<=0) {
			//mesTableCellFk.setRowActual(intSelectedRow);
			//mesTableCellFk.setmessForeignKeyActual(messForeignKey);
		//}


		if(mesTableCellFk!=null) {
			mesTableCellFk.RecargarMessForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCliente(List<Cliente> clientesForeignKey)throws Exception{
		TableColumn tableColumnCliente=this.jTableDatosPedidoCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompra,PedidoCompraConstantesFunciones.LABEL_IDCLIENTE));
		TableCellEditor tableCellEditorCliente =tableColumnCliente.getCellEditor();

		ClienteTableCell clienteTableCellFk=(ClienteTableCell)tableCellEditorCliente;

		if(clienteTableCellFk!=null) {
			clienteTableCellFk.setclientesForeignKey(clientesForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosPedidoCompra.getSelectedRow();

		//if(intSelectedRow<=0) {
			//clienteTableCellFk.setRowActual(intSelectedRow);
			//clienteTableCellFk.setclientesForeignKeyActual(clientesForeignKey);
		//}


		if(clienteTableCellFk!=null) {
			clienteTableCellFk.RecargarClientesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
			
	
	public void recargarComboTablaEstadoPedidoCompra(List<EstadoPedidoCompra> estadopedidocomprasForeignKey)throws Exception{
		TableColumn tableColumnEstadoPedidoCompra=this.jTableDatosPedidoCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompra,PedidoCompraConstantesFunciones.LABEL_IDESTADOPEDIDOCOMPRA));
		TableCellEditor tableCellEditorEstadoPedidoCompra =tableColumnEstadoPedidoCompra.getCellEditor();

		EstadoPedidoCompraTableCell estadopedidocompraTableCellFk=(EstadoPedidoCompraTableCell)tableCellEditorEstadoPedidoCompra;

		if(estadopedidocompraTableCellFk!=null) {
			estadopedidocompraTableCellFk.setestadopedidocomprasForeignKey(estadopedidocomprasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosPedidoCompra.getSelectedRow();

		//if(intSelectedRow<=0) {
			//estadopedidocompraTableCellFk.setRowActual(intSelectedRow);
			//estadopedidocompraTableCellFk.setestadopedidocomprasForeignKeyActual(estadopedidocomprasForeignKey);
		//}


		if(estadopedidocompraTableCellFk!=null) {
			estadopedidocompraTableCellFk.RecargarEstadoPedidoComprasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaEmpleado(List<Empleado> empleadosForeignKey)throws Exception{
		TableColumn tableColumnEmpleado=this.jTableDatosPedidoCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompra,PedidoCompraConstantesFunciones.LABEL_IDEMPLEADO));
		TableCellEditor tableCellEditorEmpleado =tableColumnEmpleado.getCellEditor();

		EmpleadoTableCell empleadoTableCellFk=(EmpleadoTableCell)tableCellEditorEmpleado;

		if(empleadoTableCellFk!=null) {
			empleadoTableCellFk.setempleadosForeignKey(empleadosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosPedidoCompra.getSelectedRow();

		//if(intSelectedRow<=0) {
			//empleadoTableCellFk.setRowActual(intSelectedRow);
			//empleadoTableCellFk.setempleadosForeignKeyActual(empleadosForeignKey);
		//}


		if(empleadoTableCellFk!=null) {
			empleadoTableCellFk.RecargarEmpleadosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaFormato(List<Formato> formatosForeignKey)throws Exception{
		TableColumn tableColumnFormato=this.jTableDatosPedidoCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompra,PedidoCompraConstantesFunciones.LABEL_IDFORMATO));
		TableCellEditor tableCellEditorFormato =tableColumnFormato.getCellEditor();

		FormatoTableCell formatoTableCellFk=(FormatoTableCell)tableCellEditorFormato;

		if(formatoTableCellFk!=null) {
			formatoTableCellFk.setformatosForeignKey(formatosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosPedidoCompra.getSelectedRow();

		//if(intSelectedRow<=0) {
			//formatoTableCellFk.setRowActual(intSelectedRow);
			//formatoTableCellFk.setformatosForeignKeyActual(formatosForeignKey);
		//}


		if(formatoTableCellFk!=null) {
			formatoTableCellFk.RecargarFormatosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoCambio(List<TipoCambio> tipocambiosForeignKey)throws Exception{
		TableColumn tableColumnTipoCambio=this.jTableDatosPedidoCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompra,PedidoCompraConstantesFunciones.LABEL_IDTIPOCAMBIO));
		TableCellEditor tableCellEditorTipoCambio =tableColumnTipoCambio.getCellEditor();

		TipoCambioTableCell tipocambioTableCellFk=(TipoCambioTableCell)tableCellEditorTipoCambio;

		if(tipocambioTableCellFk!=null) {
			tipocambioTableCellFk.settipocambiosForeignKey(tipocambiosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosPedidoCompra.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipocambioTableCellFk.setRowActual(intSelectedRow);
			//tipocambioTableCellFk.settipocambiosForeignKeyActual(tipocambiosForeignKey);
		//}


		if(tipocambioTableCellFk!=null) {
			tipocambioTableCellFk.RecargarTipoCambiosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	

	public void setCombosCodigoDesdeBusquedaid_cliente (Long id) throws Exception {
		this.setActualClienteForeignKey(id,true,"Todos");

	};
	

	public void setCombosCodigoDesdeBusquedaid_empleado (Long id) throws Exception {
		this.setActualEmpleadoForeignKey(id,true,"Todos");

	};
	

	public void setCombosCodigoDesdeBusquedaid_tipo_cambio (Long id) throws Exception {
		this.setActualTipoCambioForeignKey(id,true,"Todos");

	};
	
	public void jButtonActualizarPedidoCompraActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingParametrosReportesPedidoCompra(false);
			
			//if(!this.isEsNuevoPedidoCompra) {								
				int intSelectedRow = this.jTableDatosPedidoCompra.getSelectedRow();	
				
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompra =(PedidoCompra) this.pedidocompraLogic.getPedidoCompras().toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pedidocompra =(PedidoCompra) this.pedidocompras.toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
			//}
				
			if(PedidoCompraJInternalFrame.ISBINDING_MANUAL_TABLA) {
				this.setVariablesFormularioToObjetoActualPedidoCompra(this.pedidocompra,true);
				this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompra(this.pedidocompra);
				
			}
			
			if(this.permiteMantenimiento(this.pedidocompra)) {	
				this.actualizar();
				
				if(!this.isGuardarCambiosEnLote && !this.pedidocompraSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
					
					this.isEsNuevoPedidoCompra=true;
					this.inicializarActualizarBindingTablaPedidoCompra(false);
					this.isEsNuevoPedidoCompra=false;
				
				} else {					
					
					//PARA RELACIONADO ACTUALIZAR FILA TOTALES
					this.isEsNuevoPedidoCompra=true;
					this.procesoActualizarFilaTotales(false,"MANTENIMIENTO");
					this.isEsNuevoPedidoCompra=false;
				}
						
								
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesPedidoCompra(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualPedidoCompra(false);
				
				this.habilitarDeshabilitarControlesPedidoCompra(false);
			
												
				
				if(PedidoCompraJInternalFrame.CON_DATOS_FRAME) {
					if(!this.isPostAccionSinCerrar) {
						this.cerrarFrameDetallePedidoCompra();
					}
				}
				
				if(this.isPostAccionNuevo) {
					this.jButtonNuevoPedidoCompraActionPerformed(evt,pedidocompraSessionBean.getConGuardarRelaciones());
				} else {
					if(this.isPostAccionSinCerrar) {
						Integer intSelectedRowActual=this.getIndiceActualPedidoCompra(this.pedidocompra,intSelectedRow);
						
						if(intSelectedRow>-1) {
							this.jTableDatosPedidoCompra.setRowSelectionInterval(intSelectedRowActual, intSelectedRowActual);
							this.jButtonIdActionPerformed(evt,intSelectedRowActual,pedidocompraSessionBean.getConGuardarRelaciones(),false);
						}
					}
				}
				
				this.cancelar(false);
				
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.commitNewConnexionToDeep();
			}
			
			
			if(this.jInternalFrameParent!=null) { //&& this.isEsMantenimientoRelacionado) {
				Boolean esUsoDesdeHijoLocal=true;
				String sTipo="Formulario";
				Boolean conIrServidorAplicacionParent=false;
				Long id=this.pedidocompra.getId();
				ArrayList<String> arrClasses=new ArrayList<String>();
				
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();
				
				generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
				generalEntityParameterGeneral.setsDominio("Formulario");
				generalEntityParameterGeneral.setsDominioTipo(PedidoCompra.class.getName());
				
				this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",PedidoCompra.class.getName(),sTipo,"FORMULARIO",esControlTabla,conIrServidorAplicacionParent,
					id,this, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.FORM,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
					evt,generalEntityParameterGeneral,this);
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonEliminarPedidoCompraActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.getNewConnexionToDeep("");
			}
			
			int intSelectedRow = this.jTableDatosPedidoCompra.getSelectedRow();	       
							
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompra =(PedidoCompra) this.pedidocompraLogic.getPedidoCompras().toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
				this.pedidocompra.setIsDeleted(true);
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.pedidocompra =(PedidoCompra) this.pedidocompras.toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
				this.pedidocompra.setIsDeleted(true);
			}
			//ARCHITECTURE
			
			if(this.permiteMantenimiento(this.pedidocompra)) {
				this.eliminar();
				
				if(!this.isGuardarCambiosEnLote && !this.pedidocompraSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
				}
				
				((PedidoCompraModel) this.jTableDatosPedidoCompra.getModel()).fireTableRowsDeleted(intSelectedRow,intSelectedRow);
				
				this.isEsNuevoPedidoCompra=true;
				this.inicializarActualizarBindingTablaPedidoCompra(false);
				this.isEsNuevoPedidoCompra=false;									
					
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesPedidoCompra(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualPedidoCompra(false);
				
				this.habilitarDeshabilitarControlesPedidoCompra(false);
				
				
				
				if(PedidoCompraJInternalFrame.CON_DATOS_FRAME) {
					this.cerrarFrameDetallePedidoCompra();
				}
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.closeNewConnexionToDeep();
			}
		}		
	}
		
	public void jButtonCancelarPedidoCompraActionPerformed(ActionEvent evt) throws Exception {                                         	   	       
	  	try {
			if(jTableDatosPedidoCompra.getRowCount()>=1) {
				jTableDatosPedidoCompra.removeRowSelectionInterval(0, jTableDatosPedidoCompra.getRowCount()-1);						
			}
						
			this.invalidValues=new InvalidValue[0];
			this.habilitarDeshabilitarControlesPedidoCompra(false);
			this.cancelar(true);			
			this.inicializarActualizarBindingTablaPedidoCompra(false);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesPedidoCompra(false) ;
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualPedidoCompra(false) ;
			
			this.isEsNuevoPedidoCompra=false;
			
			if(PedidoCompraJInternalFrame.CON_DATOS_FRAME) {
				this.cerrarFrameDetallePedidoCompra();
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonGuardarCambiosPedidoCompraActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.getNewConnexionToDeep("");
			}
			
			//this.estaModoGuardarCambios=true;
			
	    	this.guardarCambios();
			
			if(!this.isErrorGuardar) {
				this.procesarBusqueda(this.sAccionBusqueda);
				
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingPedidoCompra(false);
				
				//SI ES MANUAL
				if(PedidoCompraJInternalFrame.ISBINDING_MANUAL) {				
					//this.inicializarActualizarBindingManualPedidoCompra();				
				}
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.closeNewConnexionToDeep();
			}
			
			//this.estaModoGuardarCambios=false;
		}
	}
	
	public void jButtonNuevoGuardarCambiosPedidoCompraActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			this.estaModoNuevo=true;
			this.estaModoNuevoGuardarCambios=true;
			
			//LO HACE NUEVOPREPARAR
			//this.iIdNuevoPedidoCompra--;			
			//PedidoCompra pedidocompraAux= new PedidoCompra();			
			//pedidocompraAux.setId(this.iIdNuevoPedidoCompra);
			
			if(this.jInternalFrameDetalleFormPedidoCompra==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.aumentarTamanioFilaNuevaTablaPedidoCompra();
			
			if(this.conTotales) {
				this.quitarFilaTotales();
			}
			
			this.nuevoPreparar(true);
			
			this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompra(this.pedidocompra);
			
			this.pedidocompra.setsType("NUEVO_GUARDAR_CAMBIOS");
			
			//LO HACE NUEVOPREPARAR
			/*
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				this.pedidocompraLogic.getPedidoCompras().add(this.pedidocompraAux);
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				this.pedidocompras.add(this.pedidocompraAux);				
			}
			*/
			
			this.inicializarActualizarBindingTablaPedidoCompra(false);
			
			this.jTableDatosPedidoCompra.setRowSelectionInterval(this.getIndiceNuevoPedidoCompra(), this.getIndiceNuevoPedidoCompra());
			
			int iLastRow =  this.jTableDatosPedidoCompra.getRowCount () - 1;
			Rectangle rectangle = this.jTableDatosPedidoCompra.getCellRect(iLastRow, 0, true);
			
			this.jTableDatosPedidoCompra.scrollRectToVisible(rectangle);
			
			//FILA TOTALES
			if(this.conTotales) {
				this.crearFilaTotales();
				
				this.inicializarActualizarBindingTablaPedidoCompra(false);
			}

		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;
			this.estaModoNuevoGuardarCambios=false;
		}
	}		
	
	public void jButtonRecargarInformacionPedidoCompraActionPerformed(ActionEvent evt) throws Exception {    		
		try {
			this.iNumeroPaginacionPagina=0;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingPedidoCompra(false,false);
			
	    	this.recargarInformacion();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingPedidoCompra(false);
			
			//SI ES MANUAL
			if(PedidoCompraJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualPedidoCompra();
			}
			
			//this.abrirFrameTreePedidoCompra();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.closeNewConnexionToDeep();
			}
		}	
	}
	
	
	public void jButtonGenerarImportacionPedidoCompraActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedReader bufferedReader = null;
		String sXmlStringFile="";
		String sPath="";
		this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
		DatoGeneralMinimo datoGeneralMinimo=new DatoGeneralMinimo();
		String sLine="";
		
		try {			
			if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR IMPORTACION DE Pedido CompraS ?", "MANTENIMIENTO DE Pedido Compra", JOptionPane.OK_CANCEL_OPTION) == 0) {
				bufferedReader = new BufferedReader(new FileReader(this.jInternalFrameImportacionPedidoCompra.getFileImportacion().getAbsolutePath()));
								
				while ((sLine = bufferedReader.readLine()) != null) {
					datoGeneralMinimo=new DatoGeneralMinimo();
					datoGeneralMinimo.setsDescripcion(sLine);
					
					this.arrDatoGeneralMinimos.add(datoGeneralMinimo);
				}
				
				this.actualizarParametrosGeneralPedidoCompra();
						
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {						
					this.pedidocompraReturnGeneral=pedidocompraLogic.procesarImportacionPedidoComprasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this.arrDatoGeneralMinimos,this.pedidocompraParameterGeneral);
						
				} else if(Constantes.ISUSAEJBREMOTE) {
						
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
						
				this.procesarPedidoCompraReturnGeneral();
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedReader != null) {
				bufferedReader.close();
			}	
		}				
	}
	
	
	
	public void jButtonAbrirImportacionPedidoCompraActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {
			int iReturnArchivo = this.jInternalFrameImportacionPedidoCompra.getjFileChooserImportacion().showOpenDialog(this);
 
            if (iReturnArchivo == JFileChooser.APPROVE_OPTION) {
            	this.jInternalFrameImportacionPedidoCompra.setFileImportacion(this.jInternalFrameImportacionPedidoCompra.getjFileChooserImportacion().getSelectedFile());
            	
				this.jInternalFrameImportacionPedidoCompra.getjTextFieldPathArchivoImportacion().setText(this.jInternalFrameImportacionPedidoCompra.getFileImportacion().getName());
				
				//System.out.println("ARCHIVO ESCOGIDO: "+this.fileImportacionPedidoCompra.getName());
				
            } else {
                //System.out.println("CANCELAR SELECCION");
				this.jInternalFrameImportacionPedidoCompra.getjTextFieldPathArchivoImportacion().setText("SELECCION CANCELADA");
            }			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}		
	}
	
	
	public void jButtonGenerarReporteDinamicoPedidoCompraActionPerformed(ActionEvent evt) throws Exception {    		
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {	
		
		ArrayList<PedidoCompra> pedidocomprasSeleccionados=new ArrayList<PedidoCompra>();		

		pedidocomprasSeleccionados=this.getPedidoComprasSeleccionados(true);
		
		
		this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoPedidoCompra.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();
		
		this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoPedidoCompra.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
		
		
		this.sTipoArchivoReporte=this.sTipoArchivoReporteDinamico;
		
		//this.sTipoReporteExtra="Base";
		
			InputStream reportFile=null;
			InputStream imageFile=null;
			
			imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		
			reportFile = AuxiliarReportes.class.getResourceAsStream("PedidoCompraBaseDesign.jrxml");	
			
			sPath=this.parametroGeneralUsuario.getpath_exportar()+"PedidoCompraBaseDesign.jrxml";
			
			sXmlStringFile=Funciones2.getStringFromInputStream(reportFile);
						
			bufferedWriter = new BufferedWriter(new FileWriter(sPath));
			
			
			sXmlStringFile=this.actualizarReporteDinamico(sXmlStringFile);
			
			
			bufferedWriter.write(sXmlStringFile);
			
			bufferedWriter.close();
			
			try{JasperCompileManager.compileReportToFile(sPath);}catch(Exception e){e.printStackTrace();}
			
			this.actualizarVariablesTipoReporte(false,true,false,sPath);
			
			/*
			this.esReporteDinamico=true;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");
			this.sTipoReporteExtra="";
			*/
			
			this.generarReportePedidoCompras("Todos",pedidocomprasSeleccionados );

			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.pedidocompraSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				//DEBE APARECER EL REPORTE DIRECTAMENTE
				//JOptionPane.showMessageDialog(this,"GENERADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Pedido Compra",JOptionPane.INFORMATION_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}
	}		
	
	
	public String actualizarReporteDinamico(String sXmlStringFile) {				
		Reporte reporte=new Reporte();
		Integer iAnchoMaximoVertical=535;//781,782
		Integer iAnchoMaximoHorizontal=782;
		Integer iAnchoSum=0;
		Integer iAnchoColumna=0;
		
		Integer iAnchoMargenes=60;
		String sWidthGrafico="535";
		
		for(int index:this.jInternalFrameReporteDinamicoPedidoCompra.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoPedidoCompra.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case PedidoCompraConstantesFunciones.LABEL_IDEMPRESA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Empresa_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Empresa_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Empresa_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Empresa_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoCompraConstantesFunciones.LABEL_IDSUCURSAL:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Sucursal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Sucursal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Sucursal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Sucursal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoCompraConstantesFunciones.LABEL_IDMODULO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Modulo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Modulo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Modulo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Modulo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoCompraConstantesFunciones.LABEL_IDEJERCICIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Ejercicio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Ejercicio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Ejercicio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Ejercicio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoCompraConstantesFunciones.LABEL_IDPERIODO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Periodo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Periodo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Periodo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Periodo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoCompraConstantesFunciones.LABEL_IDANIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Anio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Anio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Anio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Anio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoCompraConstantesFunciones.LABEL_IDMES:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Mes_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Mes_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Mes_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Mes_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoCompraConstantesFunciones.LABEL_NUMEROSECUENCIAL:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_meroSecuencial_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_meroSecuencial_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_meroSecuencial_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_meroSecuencial_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoCompraConstantesFunciones.LABEL_IDCLIENTE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Cliente_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Cliente_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Cliente_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Cliente_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoCompraConstantesFunciones.LABEL_IDUSUARIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Usuario_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Usuario_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Usuario_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Usuario_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoCompraConstantesFunciones.LABEL_IDMONEDA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Moneda_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Moneda_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Moneda_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Moneda_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoCompraConstantesFunciones.LABEL_IDESTADOPEDIDOCOMPRA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_EstadoPedidoCompra_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_EstadoPedidoCompra_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_EstadoPedidoCompra_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_EstadoPedidoCompra_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoCompraConstantesFunciones.LABEL_TOTAL:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_tal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_tal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_tal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_tal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoCompraConstantesFunciones.LABEL_FECHA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_cha_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_cha_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_cha_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_cha_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoCompraConstantesFunciones.LABEL_IDEMPLEADO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Empleado_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Empleado_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Empleado_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Empleado_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoCompraConstantesFunciones.LABEL_RESPONSABLE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_sponsable_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_sponsable_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_sponsable_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_sponsable_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoCompraConstantesFunciones.LABEL_SOLICITADOPOR:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_licitadoPor_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_licitadoPor_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_licitadoPor_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_licitadoPor_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoCompraConstantesFunciones.LABEL_MOTIVOSOLICITUD:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_tivoSolicitud_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_tivoSolicitud_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_tivoSolicitud_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_tivoSolicitud_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoCompraConstantesFunciones.LABEL_AREASOLICITUD:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_eaSolicitud_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_eaSolicitud_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_eaSolicitud_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_eaSolicitud_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoCompraConstantesFunciones.LABEL_PARAUSODE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_raUsoDe_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_raUsoDe_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_raUsoDe_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_raUsoDe_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoCompraConstantesFunciones.LABEL_LUGARENTREGA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_garEntrega_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_garEntrega_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_garEntrega_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_garEntrega_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoCompraConstantesFunciones.LABEL_DESCRIPCION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_scripcion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_scripcion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_scripcion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_scripcion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoCompraConstantesFunciones.LABEL_FECHAEMISION:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_chaEmision_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_chaEmision_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_chaEmision_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_chaEmision_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoCompraConstantesFunciones.LABEL_FECHAENTREGA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_chaEntrega_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_chaEntrega_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_chaEntrega_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_chaEntrega_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoCompraConstantesFunciones.LABEL_IDFORMATO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Formato_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Formato_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Formato_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Formato_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoCompraConstantesFunciones.LABEL_IDTIPOCAMBIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoCambio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoCambio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoCambio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoCambio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;
					
				default :
					break;
			}
		}
		
		iAnchoSum+=iAnchoMargenes;
		
		if(iAnchoSum>iAnchoMaximoVertical) {
			sXmlStringFile=sXmlStringFile.replace("595", "842");
			//sXmlStringFile=sXmlStringFile.replace("842", "595");
			sXmlStringFile=sXmlStringFile.replace("535", "782");
			sXmlStringFile=sXmlStringFile.replace("Portrait", "Landscape");			
			sWidthGrafico="782";
		
		} else {
			sXmlStringFile=sXmlStringFile.replace("842", "595");
			//sXmlStringFile=sXmlStringFile.replace("595", "842");
			sXmlStringFile=sXmlStringFile.replace("782", "535");
			sXmlStringFile=sXmlStringFile.replace("Landscape", "Portrait");
			sWidthGrafico="535";
		}
		
		if(this.jInternalFrameReporteDinamicoPedidoCompra.getjCheckBoxConGraficoDinamico().isSelected()) {
			sXmlStringFile=this.actualizarGraficoReporteDinamico(sXmlStringFile,sWidthGrafico);
		} else {
			sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "30");
		}
		
		return sXmlStringFile;
	}
	
	
	
	public String actualizarGraficoReporteDinamico(String sXmlStringFile,String sWidthGrafico) {		
		String strGrafico="";		
		String sTipo="NORMAL";
		String strCategorySeries="";
		String sNombreCampoCategoria="";
		String sNombreCampoCategoriaValor="";
		Reporte reporte=new Reporte();
		Reporte reporteCategoriaValor=new Reporte();
		Reporte reporteTipoGraficoReporte=new Reporte();
		Boolean existe=false;
		
		sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "280");
		
		//CATEGORIA GRAFICO				
		reporte=((Reporte)this.jInternalFrameReporteDinamicoPedidoCompra.getjComboBoxColumnaCategoriaGrafico().getSelectedItem());
				
		//TIPO GRAFICO REPORTE
		reporteTipoGraficoReporte=((Reporte)this.jInternalFrameReporteDinamicoPedidoCompra.getjComboBoxTiposGraficosReportesDinamico().getSelectedItem());
		
		String sTipoGraficoReporte=reporteTipoGraficoReporte.getsCodigo();
		
		switch(reporte.getsCodigo()) {
			
				case PedidoCompraConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoria="id_empresa";
					break;

				case PedidoCompraConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoria="id_sucursal";
					break;

				case PedidoCompraConstantesFunciones.LABEL_IDMODULO:
					sNombreCampoCategoria="id_modulo";
					break;

				case PedidoCompraConstantesFunciones.LABEL_IDEJERCICIO:
					sNombreCampoCategoria="id_ejercicio";
					break;

				case PedidoCompraConstantesFunciones.LABEL_IDPERIODO:
					sNombreCampoCategoria="id_periodo";
					break;

				case PedidoCompraConstantesFunciones.LABEL_IDANIO:
					sNombreCampoCategoria="id_anio";
					break;

				case PedidoCompraConstantesFunciones.LABEL_IDMES:
					sNombreCampoCategoria="id_mes";
					break;

				case PedidoCompraConstantesFunciones.LABEL_NUMEROSECUENCIAL:
					sNombreCampoCategoria="numero_secuencial";
					break;

				case PedidoCompraConstantesFunciones.LABEL_IDCLIENTE:
					sNombreCampoCategoria="id_cliente";
					break;

				case PedidoCompraConstantesFunciones.LABEL_IDUSUARIO:
					sNombreCampoCategoria="id_usuario";
					break;

				case PedidoCompraConstantesFunciones.LABEL_IDMONEDA:
					sNombreCampoCategoria="id_moneda";
					break;

				case PedidoCompraConstantesFunciones.LABEL_IDESTADOPEDIDOCOMPRA:
					sNombreCampoCategoria="id_estado_pedido_compra";
					break;

				case PedidoCompraConstantesFunciones.LABEL_TOTAL:
					sNombreCampoCategoria="total";
					break;

				case PedidoCompraConstantesFunciones.LABEL_FECHA:
					sNombreCampoCategoria="fecha";
					break;

				case PedidoCompraConstantesFunciones.LABEL_IDEMPLEADO:
					sNombreCampoCategoria="id_empleado";
					break;

				case PedidoCompraConstantesFunciones.LABEL_RESPONSABLE:
					sNombreCampoCategoria="responsable";
					break;

				case PedidoCompraConstantesFunciones.LABEL_SOLICITADOPOR:
					sNombreCampoCategoria="solicitado_por";
					break;

				case PedidoCompraConstantesFunciones.LABEL_MOTIVOSOLICITUD:
					sNombreCampoCategoria="motivo_solicitud";
					break;

				case PedidoCompraConstantesFunciones.LABEL_AREASOLICITUD:
					sNombreCampoCategoria="area_solicitud";
					break;

				case PedidoCompraConstantesFunciones.LABEL_PARAUSODE:
					sNombreCampoCategoria="para_uso_de";
					break;

				case PedidoCompraConstantesFunciones.LABEL_LUGARENTREGA:
					sNombreCampoCategoria="lugar_entrega";
					break;

				case PedidoCompraConstantesFunciones.LABEL_DESCRIPCION:
					sNombreCampoCategoria="descripcion";
					break;

				case PedidoCompraConstantesFunciones.LABEL_FECHAEMISION:
					sNombreCampoCategoria="fecha_emision";
					break;

				case PedidoCompraConstantesFunciones.LABEL_FECHAENTREGA:
					sNombreCampoCategoria="fecha_entrega";
					break;

				case PedidoCompraConstantesFunciones.LABEL_IDFORMATO:
					sNombreCampoCategoria="id_formato";
					break;

				case PedidoCompraConstantesFunciones.LABEL_IDTIPOCAMBIO:
					sNombreCampoCategoria="id_tipo_cambio";
					break;
					
			default :
				break;
		}		
		//CATEGORIA GRAFICO
		
		//CATEGORIA VALOR				
		reporteCategoriaValor=((Reporte)this.jInternalFrameReporteDinamicoPedidoCompra.getjComboBoxColumnaCategoriaValor().getSelectedItem());
		
		switch(reporteCategoriaValor.getsCodigo()) {
			
				case PedidoCompraConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoriaValor="id_empresa";
					break;

				case PedidoCompraConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoriaValor="id_sucursal";
					break;

				case PedidoCompraConstantesFunciones.LABEL_IDMODULO:
					sNombreCampoCategoriaValor="id_modulo";
					break;

				case PedidoCompraConstantesFunciones.LABEL_IDEJERCICIO:
					sNombreCampoCategoriaValor="id_ejercicio";
					break;

				case PedidoCompraConstantesFunciones.LABEL_IDPERIODO:
					sNombreCampoCategoriaValor="id_periodo";
					break;

				case PedidoCompraConstantesFunciones.LABEL_IDANIO:
					sNombreCampoCategoriaValor="id_anio";
					break;

				case PedidoCompraConstantesFunciones.LABEL_IDMES:
					sNombreCampoCategoriaValor="id_mes";
					break;

				case PedidoCompraConstantesFunciones.LABEL_NUMEROSECUENCIAL:
					sNombreCampoCategoriaValor="numero_secuencial";
					break;

				case PedidoCompraConstantesFunciones.LABEL_IDCLIENTE:
					sNombreCampoCategoriaValor="id_cliente";
					break;

				case PedidoCompraConstantesFunciones.LABEL_IDUSUARIO:
					sNombreCampoCategoriaValor="id_usuario";
					break;

				case PedidoCompraConstantesFunciones.LABEL_IDMONEDA:
					sNombreCampoCategoriaValor="id_moneda";
					break;

				case PedidoCompraConstantesFunciones.LABEL_IDESTADOPEDIDOCOMPRA:
					sNombreCampoCategoriaValor="id_estado_pedido_compra";
					break;

				case PedidoCompraConstantesFunciones.LABEL_TOTAL:
					sNombreCampoCategoriaValor="total";
					break;

				case PedidoCompraConstantesFunciones.LABEL_FECHA:
					sNombreCampoCategoriaValor="fecha";
					break;

				case PedidoCompraConstantesFunciones.LABEL_IDEMPLEADO:
					sNombreCampoCategoriaValor="id_empleado";
					break;

				case PedidoCompraConstantesFunciones.LABEL_RESPONSABLE:
					sNombreCampoCategoriaValor="responsable";
					break;

				case PedidoCompraConstantesFunciones.LABEL_SOLICITADOPOR:
					sNombreCampoCategoriaValor="solicitado_por";
					break;

				case PedidoCompraConstantesFunciones.LABEL_MOTIVOSOLICITUD:
					sNombreCampoCategoriaValor="motivo_solicitud";
					break;

				case PedidoCompraConstantesFunciones.LABEL_AREASOLICITUD:
					sNombreCampoCategoriaValor="area_solicitud";
					break;

				case PedidoCompraConstantesFunciones.LABEL_PARAUSODE:
					sNombreCampoCategoriaValor="para_uso_de";
					break;

				case PedidoCompraConstantesFunciones.LABEL_LUGARENTREGA:
					sNombreCampoCategoriaValor="lugar_entrega";
					break;

				case PedidoCompraConstantesFunciones.LABEL_DESCRIPCION:
					sNombreCampoCategoriaValor="descripcion";
					break;

				case PedidoCompraConstantesFunciones.LABEL_FECHAEMISION:
					sNombreCampoCategoriaValor="fecha_emision";
					break;

				case PedidoCompraConstantesFunciones.LABEL_FECHAENTREGA:
					sNombreCampoCategoriaValor="fecha_entrega";
					break;

				case PedidoCompraConstantesFunciones.LABEL_IDFORMATO:
					sNombreCampoCategoriaValor="id_formato";
					break;

				case PedidoCompraConstantesFunciones.LABEL_IDTIPOCAMBIO:
					sNombreCampoCategoriaValor="id_tipo_cambio";
					break;
					
			default :
				break;
		}	
		//CATEGORIA VALOR
		
		//VALORES GRAFICO
		for(int index:this.jInternalFrameReporteDinamicoPedidoCompra.getjListColumnasValoresGrafico().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoPedidoCompra.getjListColumnasValoresGrafico().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case PedidoCompraConstantesFunciones.LABEL_IDEMPRESA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Empresa",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_empresa");
					break;

				case PedidoCompraConstantesFunciones.LABEL_IDSUCURSAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Sucursal",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_sucursal");
					break;

				case PedidoCompraConstantesFunciones.LABEL_IDMODULO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Modulo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_modulo");
					break;

				case PedidoCompraConstantesFunciones.LABEL_IDEJERCICIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Ejercicio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_ejercicio");
					break;

				case PedidoCompraConstantesFunciones.LABEL_IDPERIODO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Periodo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_periodo");
					break;

				case PedidoCompraConstantesFunciones.LABEL_IDANIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Anio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_anio");
					break;

				case PedidoCompraConstantesFunciones.LABEL_IDMES:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Mes",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_mes");
					break;

				case PedidoCompraConstantesFunciones.LABEL_NUMEROSECUENCIAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"No Secuencial",sNombreCampoCategoria,sNombreCampoCategoriaValor,"numero_secuencial");
					break;

				case PedidoCompraConstantesFunciones.LABEL_IDCLIENTE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cliente",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cliente");
					break;

				case PedidoCompraConstantesFunciones.LABEL_IDUSUARIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Usuario",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_usuario");
					break;

				case PedidoCompraConstantesFunciones.LABEL_IDMONEDA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Moneda",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_moneda");
					break;

				case PedidoCompraConstantesFunciones.LABEL_IDESTADOPEDIDOCOMPRA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Estado",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_estado_pedido_compra");
					break;

				case PedidoCompraConstantesFunciones.LABEL_TOTAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Total",sNombreCampoCategoria,sNombreCampoCategoriaValor,"total");
					break;

				case PedidoCompraConstantesFunciones.LABEL_FECHA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fecha",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha");
					break;

				case PedidoCompraConstantesFunciones.LABEL_IDEMPLEADO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Empleado",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_empleado");
					break;

				case PedidoCompraConstantesFunciones.LABEL_RESPONSABLE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Responsable",sNombreCampoCategoria,sNombreCampoCategoriaValor,"responsable");
					break;

				case PedidoCompraConstantesFunciones.LABEL_SOLICITADOPOR:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Solicitado Por",sNombreCampoCategoria,sNombreCampoCategoriaValor,"solicitado_por");
					break;

				case PedidoCompraConstantesFunciones.LABEL_MOTIVOSOLICITUD:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Motivo Solicitud",sNombreCampoCategoria,sNombreCampoCategoriaValor,"motivo_solicitud");
					break;

				case PedidoCompraConstantesFunciones.LABEL_AREASOLICITUD:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Area Solicitud",sNombreCampoCategoria,sNombreCampoCategoriaValor,"area_solicitud");
					break;

				case PedidoCompraConstantesFunciones.LABEL_PARAUSODE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Para Uso De",sNombreCampoCategoria,sNombreCampoCategoriaValor,"para_uso_de");
					break;

				case PedidoCompraConstantesFunciones.LABEL_LUGARENTREGA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Lugar Entrega",sNombreCampoCategoria,sNombreCampoCategoriaValor,"lugar_entrega");
					break;

				case PedidoCompraConstantesFunciones.LABEL_DESCRIPCION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Descripcion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"descripcion");
					break;

				case PedidoCompraConstantesFunciones.LABEL_FECHAEMISION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fecha Emision",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha_emision");
					break;

				case PedidoCompraConstantesFunciones.LABEL_FECHAENTREGA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fecha Entrega",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha_entrega");
					break;

				case PedidoCompraConstantesFunciones.LABEL_IDFORMATO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Formato",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_formato");
					break;

				case PedidoCompraConstantesFunciones.LABEL_IDTIPOCAMBIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tipo Cambio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_cambio");
					break;
					
				default :
					break;
			}
		}
		//VALORES GRAFICO
		//if(sTipoGraficoReporte.equals("BARRAS") || sTipoGraficoReporte.equals("BARRAS_3D") || sTipoGraficoReporte.equals("BARRAS_XY") ||
		//   sTipoGraficoReporte.equals("PASTEL") || sTipoGraficoReporte.equals("PASTEL_3D") || sTipoGraficoReporte.equals("APILADO")) {
			
			existe=true;
			strGrafico=FuncionesReporte.getStringGraficoReporte(sTipoGraficoReporte,sWidthGrafico,strCategorySeries);			
		//}
		
		if(existe) {
			sXmlStringFile=sXmlStringFile.replace("<!--GRAFICO-->", strGrafico);
		}												
		
		return sXmlStringFile;
	}
	
	
	//@SuppressWarnings("deprecation")
	
	public void jButtonGenerarExcelReporteDinamicoPedidoCompraActionPerformed(ActionEvent evt) throws Exception {		
		ArrayList<PedidoCompra> pedidocomprasSeleccionados=new ArrayList<PedidoCompra>();		
		
		pedidocomprasSeleccionados=this.getPedidoComprasSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"pedidocompra";//.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		Boolean existeFilas=false;
		
		Workbook workbook = null;
		FileOutputStream fileOutputStream=null;
		Reporte reporte=new Reporte();
		
		try {
			
			if(sTipoArchivoReporte=="EXCEL2") {
				workbook = new HSSFWorkbook();
				sPath+=".xls";
			
			} else if(sTipoArchivoReporte=="EXCEL2_2") {
				workbook = new XSSFWorkbook();
				sPath+=".xlsx";			
			}
		
			Sheet sheet = workbook.createSheet("PedidoCompras");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			Row row = sheet.createRow(iRow);
			Cell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");
			
			for(int index:this.jInternalFrameReporteDinamicoPedidoCompra.getjListColumnasSelectReporte().getSelectedIndices()) {
				reporte=(Reporte)this.jInternalFrameReporteDinamicoPedidoCompra.getjListColumnasSelectReporte().getModel().getElementAt(index);
				
				switch(reporte.getsCodigo()) {
					
				case PedidoCompraConstantesFunciones.LABEL_IDEMPRESA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoCompraConstantesFunciones.LABEL_IDEMPRESA);
					iRow++;

					for(PedidoCompra pedidocompra:pedidocomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidocompra.getempresa_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoCompraConstantesFunciones.LABEL_IDSUCURSAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoCompraConstantesFunciones.LABEL_IDSUCURSAL);
					iRow++;

					for(PedidoCompra pedidocompra:pedidocomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidocompra.getsucursal_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoCompraConstantesFunciones.LABEL_IDMODULO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoCompraConstantesFunciones.LABEL_IDMODULO);
					iRow++;

					for(PedidoCompra pedidocompra:pedidocomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidocompra.getmodulo_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoCompraConstantesFunciones.LABEL_IDEJERCICIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoCompraConstantesFunciones.LABEL_IDEJERCICIO);
					iRow++;

					for(PedidoCompra pedidocompra:pedidocomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidocompra.getejercicio_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoCompraConstantesFunciones.LABEL_IDPERIODO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoCompraConstantesFunciones.LABEL_IDPERIODO);
					iRow++;

					for(PedidoCompra pedidocompra:pedidocomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidocompra.getperiodo_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoCompraConstantesFunciones.LABEL_IDANIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoCompraConstantesFunciones.LABEL_IDANIO);
					iRow++;

					for(PedidoCompra pedidocompra:pedidocomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidocompra.getanio_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoCompraConstantesFunciones.LABEL_IDMES:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoCompraConstantesFunciones.LABEL_IDMES);
					iRow++;

					for(PedidoCompra pedidocompra:pedidocomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidocompra.getmes_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoCompraConstantesFunciones.LABEL_NUMEROSECUENCIAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoCompraConstantesFunciones.LABEL_NUMEROSECUENCIAL);
					iRow++;

					for(PedidoCompra pedidocompra:pedidocomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidocompra.getnumero_secuencial());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoCompraConstantesFunciones.LABEL_IDCLIENTE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoCompraConstantesFunciones.LABEL_IDCLIENTE);
					iRow++;

					for(PedidoCompra pedidocompra:pedidocomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidocompra.getcliente_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoCompraConstantesFunciones.LABEL_IDUSUARIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoCompraConstantesFunciones.LABEL_IDUSUARIO);
					iRow++;

					for(PedidoCompra pedidocompra:pedidocomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidocompra.getusuario_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoCompraConstantesFunciones.LABEL_IDMONEDA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoCompraConstantesFunciones.LABEL_IDMONEDA);
					iRow++;

					for(PedidoCompra pedidocompra:pedidocomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidocompra.getmoneda_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoCompraConstantesFunciones.LABEL_IDESTADOPEDIDOCOMPRA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoCompraConstantesFunciones.LABEL_IDESTADOPEDIDOCOMPRA);
					iRow++;

					for(PedidoCompra pedidocompra:pedidocomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidocompra.getestadopedidocompra_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoCompraConstantesFunciones.LABEL_TOTAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoCompraConstantesFunciones.LABEL_TOTAL);
					iRow++;

					for(PedidoCompra pedidocompra:pedidocomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidocompra.gettotal());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoCompraConstantesFunciones.LABEL_FECHA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoCompraConstantesFunciones.LABEL_FECHA);
					iRow++;

					for(PedidoCompra pedidocompra:pedidocomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidocompra.getfecha());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoCompraConstantesFunciones.LABEL_IDEMPLEADO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoCompraConstantesFunciones.LABEL_IDEMPLEADO);
					iRow++;

					for(PedidoCompra pedidocompra:pedidocomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidocompra.getempleado_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoCompraConstantesFunciones.LABEL_RESPONSABLE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoCompraConstantesFunciones.LABEL_RESPONSABLE);
					iRow++;

					for(PedidoCompra pedidocompra:pedidocomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidocompra.getresponsable());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoCompraConstantesFunciones.LABEL_SOLICITADOPOR:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoCompraConstantesFunciones.LABEL_SOLICITADOPOR);
					iRow++;

					for(PedidoCompra pedidocompra:pedidocomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidocompra.getsolicitado_por());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoCompraConstantesFunciones.LABEL_MOTIVOSOLICITUD:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoCompraConstantesFunciones.LABEL_MOTIVOSOLICITUD);
					iRow++;

					for(PedidoCompra pedidocompra:pedidocomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidocompra.getmotivo_solicitud());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoCompraConstantesFunciones.LABEL_AREASOLICITUD:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoCompraConstantesFunciones.LABEL_AREASOLICITUD);
					iRow++;

					for(PedidoCompra pedidocompra:pedidocomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidocompra.getarea_solicitud());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoCompraConstantesFunciones.LABEL_PARAUSODE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoCompraConstantesFunciones.LABEL_PARAUSODE);
					iRow++;

					for(PedidoCompra pedidocompra:pedidocomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidocompra.getpara_uso_de());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoCompraConstantesFunciones.LABEL_LUGARENTREGA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoCompraConstantesFunciones.LABEL_LUGARENTREGA);
					iRow++;

					for(PedidoCompra pedidocompra:pedidocomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidocompra.getlugar_entrega());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoCompraConstantesFunciones.LABEL_DESCRIPCION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoCompraConstantesFunciones.LABEL_DESCRIPCION);
					iRow++;

					for(PedidoCompra pedidocompra:pedidocomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidocompra.getdescripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoCompraConstantesFunciones.LABEL_FECHAEMISION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoCompraConstantesFunciones.LABEL_FECHAEMISION);
					iRow++;

					for(PedidoCompra pedidocompra:pedidocomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidocompra.getfecha_emision());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoCompraConstantesFunciones.LABEL_FECHAENTREGA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoCompraConstantesFunciones.LABEL_FECHAENTREGA);
					iRow++;

					for(PedidoCompra pedidocompra:pedidocomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidocompra.getfecha_entrega());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoCompraConstantesFunciones.LABEL_IDFORMATO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoCompraConstantesFunciones.LABEL_IDFORMATO);
					iRow++;

					for(PedidoCompra pedidocompra:pedidocomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidocompra.getformato_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoCompraConstantesFunciones.LABEL_IDTIPOCAMBIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoCompraConstantesFunciones.LABEL_IDTIPOCAMBIO);
					iRow++;

					for(PedidoCompra pedidocompra:pedidocomprasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidocompra.gettipocambio_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;
					
					default :
						break;
				}
			}
			
			
			//if(conCabecera) {
			//	this.getFilaCabeceraExportarExcelPedidoCompra(row);				
			//	iRow++;
			//}				
			
			//for(PedidoCompra pedidocompraAux:pedidocomprasSeleccionados) {
			//	row = sheet.createRow(iRow);
				
			//	this.getFilaDatosExportarExcelPedidoCompra(pedidocompraAux,row);
				
			//	iRow++;
			//}
			
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.pedidocompraSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Pedido Compra",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}				
	}	
	
	
	
	
	public void buscarPorId(Long idActual) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.getNewConnexionToDeep("");
			}
			
			this.idActual=idActual;
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda("PorId");
				    	
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingPedidoCompra(false);
			
			//SI ES MANUAL
			if(PedidoCompraJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualPedidoCompra();
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger);
			
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonAnterioresPedidoCompraActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion-=this.iNumeroPaginacion;
			/*
			if(this.iNumeroPaginacion<0) {
				this.iNumeroPaginacion=0;
			}
			*/
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.getNewConnexionToDeep("");
			}
			
			this.anteriores();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingPedidoCompra(false);
			
			//SI ES MANUAL
			if(PedidoCompraJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualPedidoCompra();
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonSiguientesPedidoCompraActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion+=this.iNumeroPaginacion;
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.getNewConnexionToDeep("");
			}
			
			this.siguientes();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingPedidoCompra(false);
			
			//SI ES MANUAL
			if(PedidoCompraJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualPedidoCompra();
			}		
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void aumentarTamanioFilaNuevaTablaPedidoCompra() throws Exception {		
		Dimension dimensionMinimum=this.jTableDatosPedidoCompra.getMinimumSize();
		Dimension dimensionMaximum=this.jTableDatosPedidoCompra.getMaximumSize();
		Dimension dimensionPreferred=this.jTableDatosPedidoCompra.getPreferredSize();
	
		double iHeightConFilaNueva=dimensionPreferred.getHeight();
		
		iHeightConFilaNueva+=this.jTableDatosPedidoCompra.getRowHeight();
		
		dimensionMinimum.setSize(dimensionMinimum.getWidth(),iHeightConFilaNueva);
		dimensionMaximum.setSize(dimensionMaximum.getWidth(),iHeightConFilaNueva);
		dimensionPreferred.setSize(dimensionPreferred.getWidth(),iHeightConFilaNueva);
		
		this.jTableDatosPedidoCompra.setMinimumSize(dimensionMinimum);
		this.jTableDatosPedidoCompra.setMaximumSize(dimensionMaximum);
		this.jTableDatosPedidoCompra.setPreferredSize(dimensionPreferred);	
	}
	
	public void inicializarActualizarBindingPedidoCompra(Boolean esInicializar) throws Exception {
		this.inicializarActualizarBindingPedidoCompra(esInicializar,true);
	}
	
	public void inicializarActualizarBindingPedidoCompra(Boolean esInicializar,Boolean conTabla) throws Exception {		
		if(conTabla) {
			this.inicializarActualizarBindingTablaPedidoCompra(esInicializar);
		}
		
		this.inicializarActualizarBindingBotonesPedidoCompra(esInicializar);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.pedidocompraSessionBean.getEsGuardarRelacionado()) {
			try{this.inicializarActualizarBindingBusquedasPedidoCompra(esInicializar);}catch(Exception e){e.printStackTrace();}
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesPedidoCompra(esInicializar) ;
			
			this.inicializarActualizarBindingParametrosReportesPedidoCompra(esInicializar) ;
		}
		
		if(esInicializar) {
			if( !PedidoCompraJInternalFrame.ISBINDING_MANUAL_TABLA ||
			   	!PedidoCompraJInternalFrame.ISBINDING_MANUAL) {
			   	
			}
		}
	}
	
	public void inicializarActualizarBindingManualPedidoCompra() throws Exception {		
		//NO SE NECESITA HACER BINDING OTRA VEZ
		//this.inicializarActualizarBindingTablaPedidoCompra();
		
		this.inicializarActualizarBindingBotonesManualPedidoCompra(true);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.pedidocompraSessionBean.getEsGuardarRelacionado()) {
			
			this.inicializarActualizarBindingBusquedasManualPedidoCompra();			
			
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesPedidoCompra() ;
			
			this.inicializarActualizarBindingParametrosReportesPostAccionesManualPedidoCompra(false) ;			
			
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesPostAccionesManualPedidoCompra(Boolean esSetControles) throws Exception {
		try	{					
			if(!esSetControles) {
				this.isSeleccionarTodos=this.jCheckBoxSeleccionarTodosPedidoCompra.isSelected();
				this.isSeleccionados=this.jCheckBoxSeleccionadosPedidoCompra.isSelected();
				
				
				this.conGraficoReporte=this.jCheckBoxConGraficoReportePedidoCompra.isSelected();															
				
				
				if(this.jInternalFrameDetalleFormPedidoCompra!=null) {
				this.isPostAccionNuevo=this.jInternalFrameDetalleFormPedidoCompra.jCheckBoxPostAccionNuevoPedidoCompra.isSelected();
				this.isPostAccionSinCerrar=this.jInternalFrameDetalleFormPedidoCompra.jCheckBoxPostAccionSinCerrarPedidoCompra.isSelected();
				this.isPostAccionSinMensaje=this.jInternalFrameDetalleFormPedidoCompra.jCheckBoxPostAccionSinMensajePedidoCompra.isSelected();
				}
			
			} else {
				this.jCheckBoxSeleccionarTodosPedidoCompra.setSelected(this.isSeleccionarTodos);
				this.jCheckBoxSeleccionadosPedidoCompra.setSelected(this.isSeleccionados);
				
				
				this.jCheckBoxConGraficoReportePedidoCompra.setSelected(this.conGraficoReporte);				
				
				
				if(this.jInternalFrameDetalleFormPedidoCompra!=null) {
				this.jInternalFrameDetalleFormPedidoCompra.jCheckBoxPostAccionNuevoPedidoCompra.setSelected(this.isPostAccionNuevo);
				this.jInternalFrameDetalleFormPedidoCompra.jCheckBoxPostAccionSinCerrarPedidoCompra.setSelected(this.isPostAccionSinCerrar);
				this.jInternalFrameDetalleFormPedidoCompra.jCheckBoxPostAccionSinMensajePedidoCompra.setSelected(this.isPostAccionSinMensaje);
				}
			}
			
			
			if(this.jComboBoxTiposPaginacionPedidoCompra.getSelectedItem()!=null) {
				this.sTipoPaginacion=((Reporte)this.jComboBoxTiposPaginacionPedidoCompra.getSelectedItem()).getsCodigo();			
			}
			
			
			
			if(this.jInternalFrameDetalleFormPedidoCompra!=null) {
			this.sTipoAccionFormulario=((Reporte)this.jInternalFrameDetalleFormPedidoCompra.jComboBoxTiposAccionesFormularioPedidoCompra.getSelectedItem()).getsCodigo();
			}
			
			
			
			if(!this.conCargarMinimo) {
				this.sTipoArchivoReporte=((Reporte)this.jComboBoxTiposArchivosReportesPedidoCompra.getSelectedItem()).getsCodigo();			
				
				if(this.jInternalFrameReporteDinamicoPedidoCompra!=null) {
					this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoPedidoCompra.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
				}
				
				this.sTipoRelacion=((Reporte)this.jComboBoxTiposRelacionesPedidoCompra.getSelectedItem()).getsCodigo();
									
				this.sTipoAccion=((Reporte)this.jComboBoxTiposAccionesPedidoCompra.getSelectedItem()).getsCodigo();
													
				this.sTipoSeleccionar=((Reporte)this.jComboBoxTiposSeleccionarPedidoCompra.getSelectedItem()).getsCodigo();
									
				this.sTipoReporte=((Reporte)this.jComboBoxTiposReportesPedidoCompra.getSelectedItem()).getsCodigo();							
					
				if(this.jInternalFrameReporteDinamicoPedidoCompra!=null) {
					this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoPedidoCompra.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();							
				}
				
				this.sTipoGraficoReporte=((Reporte)this.jComboBoxTiposGraficosReportesPedidoCompra.getSelectedItem()).getsCodigo();											
			}			
			
			this.sValorCampoGeneral=this.jTextFieldValorCampoGeneralPedidoCompra.getText();						
			
			
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesPedidoCompra(Boolean esInicializar) throws Exception {
		try	{	
			if(PedidoCompraJInternalFrame.ISBINDING_MANUAL) {
				this. inicializarActualizarBindingParametrosReportesPostAccionesManualPedidoCompra(false);
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public void inicializarActualizarBindingtiposArchivosReportesAccionesPedidoCompra() throws Exception {
		try	{
			if(PedidoCompraJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingtiposArchivosReportesAccionesManualPedidoCompra();
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetallePedidoCompra() throws Exception {
		//TIPOS ACCIONES FORMULARIO	
		this.jInternalFrameDetalleFormPedidoCompra.jComboBoxTiposAccionesFormularioPedidoCompra.removeAllItems();
				
		for(Reporte reporte:this.tiposAccionesFormulario) {
			this.jInternalFrameDetalleFormPedidoCompra.jComboBoxTiposAccionesFormularioPedidoCompra.addItem(reporte);
		}
		
		//TIPOS ACCIONES FORMULARIO
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualPedidoCompra() throws Exception {
		try	{
			
			//TIPOS ARCHIVOS REPORTES
			this.jComboBoxTiposArchivosReportesPedidoCompra.removeAllItems();
				
			for(Reporte reporte:this.tiposArchivosReportes) {
				this.jComboBoxTiposArchivosReportesPedidoCompra.addItem(reporte);
			}
			
			
				
			//TIPOS REPORTES
			this.jComboBoxTiposReportesPedidoCompra.removeAllItems();
				
			for(Reporte reporte:this.tiposReportes) {
				this.jComboBoxTiposReportesPedidoCompra.addItem(reporte);
			}
			
			
			//TIPOS GRAFICOS REPORTES
			this.jComboBoxTiposGraficosReportesPedidoCompra.removeAllItems();
				
			for(Reporte reporte:this.tiposGraficosReportes) {
				this.jComboBoxTiposGraficosReportesPedidoCompra.addItem(reporte);
			}
			
			
			//TIPOS PAGINACION
			this.jComboBoxTiposPaginacionPedidoCompra.removeAllItems();
				
			for(Reporte reporte:this.tiposPaginacion) {
				this.jComboBoxTiposPaginacionPedidoCompra.addItem(reporte);
			}
			
			
			if(!this.pedidocompraSessionBean.getEsGuardarRelacionado()) {
				this.jComboBoxTiposPaginacionPedidoCompra.setSelectedItem(Funciones2.getTipoPaginacionDefecto("NORMAL",this.tiposPaginacion));
			} else {
				this.jComboBoxTiposPaginacionPedidoCompra.setSelectedItem(Funciones2.getTipoPaginacionDefecto("RELACIONADO",this.tiposPaginacion));
			}
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposRelacionesPedidoCompra.removeAllItems();
				
			for(Reporte reporte:this.tiposRelaciones) {
				this.jComboBoxTiposRelacionesPedidoCompra.addItem(reporte);
			}
			
			//TIPOS ACCIONES
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposAccionesPedidoCompra.removeAllItems();
				
			for(Reporte reporte:this.tiposAcciones) {
				this.jComboBoxTiposAccionesPedidoCompra.addItem(reporte);
			}
			
			//TIPOS ACCIONES			
			
			
			
			//TIPOS ACCIONES FORMULARIO	
			if(this.jInternalFrameDetalleFormPedidoCompra!=null) { //if(this.conCargarFormDetalle) {
				this.jInternalFrameDetalleFormPedidoCompra.jComboBoxTiposAccionesFormularioPedidoCompra.removeAllItems();
				
				for(Reporte reporte:this.tiposAccionesFormulario) {
					this.jInternalFrameDetalleFormPedidoCompra.jComboBoxTiposAccionesFormularioPedidoCompra.addItem(reporte);
				}
				
			}
			//TIPOS ACCIONES FORMULARIO
			
			
			
			//TIPOS SELECCIONAR
			this.jComboBoxTiposSeleccionarPedidoCompra.removeAllItems();
				
			for(Reporte reporte:this.tiposSeleccionar) {
				this.jComboBoxTiposSeleccionarPedidoCompra.addItem(reporte);
			}
			
			
			if(this.tiposSeleccionar!=null && this.tiposSeleccionar.size()>1) {
				this.jComboBoxTiposSeleccionarPedidoCompra.setSelectedIndex(1);
			}
				
			//REPORTE DINAMICO
			this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualPedidoCompra();
							
			//TIPOS COLUMNAS SELECT
			//TIPOS SELECCIONAR
			
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualPedidoCompra() throws Exception {
		try	{
			DefaultListModel<Reporte> defaultListModel=new DefaultListModel<Reporte>();
			
			
			//TIPOS ARCHIVOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoPedidoCompra!=null) {
				this.jInternalFrameReporteDinamicoPedidoCompra.getjComboBoxTiposArchivosReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposArchivosReportesDinamico) {
					this.jInternalFrameReporteDinamicoPedidoCompra.getjComboBoxTiposArchivosReportesDinamico().addItem(reporte);
				}
				
			}
			
			//TIPOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoPedidoCompra!=null) {
				this.jInternalFrameReporteDinamicoPedidoCompra.getjComboBoxTiposReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposReportesDinamico) {
					this.jInternalFrameReporteDinamicoPedidoCompra.getjComboBoxTiposReportesDinamico().addItem(reporte);
				}
				
			}
			
			defaultListModel=new DefaultListModel<Reporte>();
			
			if(this.jInternalFrameReporteDinamicoPedidoCompra!=null) {
				
				if(this.jInternalFrameReporteDinamicoPedidoCompra.getjListColumnasSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoPedidoCompra.getjListColumnasSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposColumnasSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoPedidoCompra.getjListColumnasSelectReporte().setModel(defaultListModel);									
						
				}	
					
				//TIPOS RELACIONES SELECT
				//TIPOS SELECCIONAR
				defaultListModel=new DefaultListModel<Reporte>();
				if(this.jInternalFrameReporteDinamicoPedidoCompra.getjListRelacionesSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoPedidoCompra.getjListRelacionesSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposRelacionesSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoPedidoCompra.getjListRelacionesSelectReporte().setModel(defaultListModel);									
						
				}	
				
				
				//TIPOS COLUMNAS CATEGORIA DINAMICO
				if(this.jInternalFrameReporteDinamicoPedidoCompra.getjComboBoxColumnaCategoriaGrafico()!=null) {
					this.jInternalFrameReporteDinamicoPedidoCompra.getjComboBoxColumnaCategoriaGrafico().removeAllItems();
						
					ArrayList<Reporte> tiposColumnasCategoria=PedidoCompraConstantesFunciones.getTiposSeleccionarPedidoCompra(true,true,false,true,true);
						
					for(Reporte reporte:tiposColumnasCategoria) {//this.tiposSeleccionar
						this.jInternalFrameReporteDinamicoPedidoCompra.getjComboBoxColumnaCategoriaGrafico().addItem(reporte);
					}
					
				}
					
				//TIPOS COLUMNAS CATEGORIA VALOR DINAMICO
				if(this.jInternalFrameReporteDinamicoPedidoCompra.getjComboBoxColumnaCategoriaValor()!=null) {
					this.jInternalFrameReporteDinamicoPedidoCompra.getjComboBoxColumnaCategoriaValor().removeAllItems();
						
					ArrayList<Reporte> tiposColumnasCategoriaValor=PedidoCompraConstantesFunciones.getTiposSeleccionarPedidoCompra(false,false,true,false,false);
						
					for(Reporte reporte:tiposColumnasCategoriaValor) {//this.tiposSeleccionar
						this.jInternalFrameReporteDinamicoPedidoCompra.getjComboBoxColumnaCategoriaValor().addItem(reporte);
					}
					
				}
					
				//TIPOS COLUMNAS VALOR
				defaultListModel=new DefaultListModel<Reporte>();
					
				if(this.jInternalFrameReporteDinamicoPedidoCompra.getjListColumnasValoresGrafico()!=null) {
					this.jInternalFrameReporteDinamicoPedidoCompra.getjListColumnasValoresGrafico().removeAll();
						
					ArrayList<Reporte> tiposColumnasValor=PedidoCompraConstantesFunciones.getTiposSeleccionarPedidoCompra(false,false,true,false,false);
						
					for(Reporte reporte:tiposColumnasValor) {//this.tiposSeleccionar
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoPedidoCompra.getjListColumnasValoresGrafico().setModel(defaultListModel);									
						
				}
					
				//TIPOS GRAFICOS REPORTES DINAMICOS
				if(this.jInternalFrameReporteDinamicoPedidoCompra.getjComboBoxTiposGraficosReportesDinamico()!=null) {
					this.jInternalFrameReporteDinamicoPedidoCompra.getjComboBoxTiposGraficosReportesDinamico().removeAllItems();
						
					for(Reporte reporte:this.tiposGraficosReportes) {
						this.jInternalFrameReporteDinamicoPedidoCompra.getjComboBoxTiposGraficosReportesDinamico().addItem(reporte);
					}
					
				}
			
			
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	
	
	public void inicializarActualizarBindingBusquedasManualPedidoCompra()  throws Exception {				
		//BYDAN_BUSQUEDAS		
		
		if(this.jComboBoxid_clienteFK_IdClientePedidoCompra.getSelectedItem()!=null){this.id_clienteFK_IdCliente=((Cliente)this.jComboBoxid_clienteFK_IdClientePedidoCompra.getSelectedItem()).getId();}
		if(this.jComboBoxid_empleadoFK_IdEmpleadoPedidoCompra.getSelectedItem()!=null){this.id_empleadoFK_IdEmpleado=((Empleado)this.jComboBoxid_empleadoFK_IdEmpleadoPedidoCompra.getSelectedItem()).getId();}
		if(this.jComboBoxid_estado_pedido_compraFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompra.getSelectedItem()!=null){this.id_estado_pedido_compraFK_IdEstadoPedidoCompraEstadoPedoCompra=((EstadoPedidoCompra)this.jComboBoxid_estado_pedido_compraFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompra.getSelectedItem()).getId();}
		
	}
	
	
	
	
	public void inicializarActualizarBindingBusquedasPedidoCompra(Boolean esInicializar) throws Exception {				
		if(PedidoCompraJInternalFrame.ISBINDING_MANUAL) {
			
			this.inicializarActualizarBindingBusquedasManualPedidoCompra();			
			
		} else {
		}
	}		
		
	public void inicializarActualizarBindingTablaPedidoCompra() throws Exception {
		this.inicializarActualizarBindingTablaPedidoCompra(false);
	}
	
	
	public void inicializarActualizarBindingTablaOrderByPedidoCompra() {
		//TABLA OrderBy	
		TableColumn tableColumn=new TableColumn();
		Integer iWidthTableDefinicionOrderBy=0;			
			
		this.jInternalFrameOrderByPedidoCompra.getjTableDatosOrderBy().setModel(new TablaGeneralOrderByModel(this.arrOrderBy));
					
		//DEFINIR RENDERERS OrderBy
		tableColumn=this.jInternalFrameOrderByPedidoCompra.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByPedidoCompra.getjTableDatosOrderBy(),OrderBy.ISSELECTED));			
		//tableColumn.addPropertyChangeListener(new PedidoCompraPropertyChangeListener());
					
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		iWidthTableDefinicionOrderBy+=50;
					
		tableColumn=this.jInternalFrameOrderByPedidoCompra.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByPedidoCompra.getjTableDatosOrderBy(),OrderBy.NOMBRE));
		//tableColumn.addPropertyChangeListener(new PedidoCompraPropertyChangeListener());
					
		tableColumn.setPreferredWidth(150); 	 
		tableColumn.setWidth(150); 	 
		tableColumn.setMinWidth(150);
		tableColumn.setMaxWidth(150);
				
		iWidthTableDefinicionOrderBy+=150;
					
		//tableColumn=this.jTableDatosPedidoCompraOrderBy.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompraOrderBy,OrderBy.NOMBREDB));			
		////tableColumn.addPropertyChangeListener(new PedidoCompraPropertyChangeListener());
								
		tableColumn=this.jInternalFrameOrderByPedidoCompra.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByPedidoCompra.getjTableDatosOrderBy(),OrderBy.ESDESC));
		//tableColumn.addPropertyChangeListener(new PedidoCompraPropertyChangeListener());
												
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		((AbstractTableModel) this.jInternalFrameOrderByPedidoCompra.getjTableDatosOrderBy().getModel()).fireTableDataChanged();
				
		iWidthTableDefinicionOrderBy+=50;
	}
	
	
	
	public void inicializarActualizarBindingTablaPedidoCompra(Boolean esInicializar) throws Exception {
		Boolean isNoExiste=false;
		Integer iCountNumeroColumnasNormal=0;
		Integer iCountNumeroColumnasFk=0;
		
		this.iWidthTableDefinicion=0;
		
		int iSizeTabla=0;
		
		iSizeTabla=this.getSizeTablaDatos();
		
	if(esInicializar || ConstantesSwing.FORZAR_INICIALIZAR_TABLA) {//esInicializar
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			isNoExiste=pedidocompraLogic.getPedidoCompras().size()==0;
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			isNoExiste=pedidocompras.size()==0;
		}
		//ARCHITECTURE
			
		if(isNoExiste) {
			if(this.iNumeroPaginacion-this.iNumeroPaginacion>0) {
				this.iNumeroPaginacion-=this.iNumeroPaginacion;
			}
		}
		
		TableColumn tableColumn=new TableColumn();
		
		if(PedidoCompraJInternalFrame.ISBINDING_MANUAL_TABLA) {
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.jTableDatosPedidoCompra.setModel(new PedidoCompraModel(this.pedidocompraLogic.getPedidoCompras(),this));
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.jTableDatosPedidoCompra.setModel(new PedidoCompraModel(this.pedidocompras,this));
			}
			//ARCHITECTURE
			
							
			
			
			if(this.jInternalFrameOrderByPedidoCompra!=null && this.jInternalFrameOrderByPedidoCompra.getjTableDatosOrderBy()!=null) {
				this.inicializarActualizarBindingTablaOrderByPedidoCompra();
			}
			
								
			//DEFINIR RENDERERS
			tableColumn=this.jTableDatosPedidoCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompra,Constantes2.S_SELECCIONAR));
			//tableColumn.addPropertyChangeListener(new PedidoCompraPropertyChangeListener());
			tableColumn.setCellRenderer(new BooleanRenderer(true,"Seleccionar "+PedidoCompraConstantesFunciones.SCLASSWEBTITULO,pedidocompraConstantesFunciones.resaltarSeleccionarPedidoCompra,iSizeTabla,true,false,"","",this));
			tableColumn.setCellEditor(new BooleanEditorRenderer(true,"Seleccionar "+PedidoCompraConstantesFunciones.SCLASSWEBTITULO,pedidocompraConstantesFunciones.resaltarSeleccionarPedidoCompra,false,"","",this));			
			
			tableColumn.setPreferredWidth(50); 	 
			tableColumn.setWidth(50); 	 
			tableColumn.setMinWidth(50); 
			tableColumn.setMaxWidth(50); 
			
			this.iWidthTableDefinicion+=50;
			
			


			tableColumn=this.jTableDatosPedidoCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompra,PedidoCompraConstantesFunciones.LABEL_ID));

		if(this.pedidocompraConstantesFunciones.mostraridPedidoCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoCompraConstantesFunciones.LABEL_ID,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.pedidocompraConstantesFunciones.resaltaridPedidoCompra,this.pedidocompraConstantesFunciones.activaridPedidoCompra,iSizeTabla,this,true,"idPedidoCompra","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pedidocompraConstantesFunciones.resaltaridPedidoCompra,this.pedidocompraConstantesFunciones.activaridPedidoCompra,this,true,"idPedidoCompra","BASICO",false));

			tableColumn.setPreferredWidth(50);
			tableColumn.setWidth(50);
			tableColumn.setMinWidth(50);
			tableColumn.setMaxWidth(50);

			this.iWidthTableDefinicion+=50;
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompra,PedidoCompraConstantesFunciones.LABEL_IDEMPRESA));

		if(this.pedidocompraConstantesFunciones.mostrarid_empresaPedidoCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoCompraConstantesFunciones.LABEL_IDEMPRESA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new EmpresaTableCell(this.empresasForeignKey,this.pedidocompraConstantesFunciones.resaltarid_empresaPedidoCompra,this,this.pedidocompraConstantesFunciones.activarid_empresaPedidoCompra,iSizeTabla));
			tableColumn.setCellEditor(new EmpresaTableCell(this.empresasForeignKey,this.pedidocompraConstantesFunciones.resaltarid_empresaPedidoCompra,this,this.pedidocompraConstantesFunciones.activarid_empresaPedidoCompra,false,"id_empresaPedidoCompra","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompra,PedidoCompraConstantesFunciones.LABEL_IDSUCURSAL));

		if(this.pedidocompraConstantesFunciones.mostrarid_sucursalPedidoCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoCompraConstantesFunciones.LABEL_IDSUCURSAL,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new SucursalTableCell(this.sucursalsForeignKey,this.pedidocompraConstantesFunciones.resaltarid_sucursalPedidoCompra,this,this.pedidocompraConstantesFunciones.activarid_sucursalPedidoCompra,iSizeTabla));
			tableColumn.setCellEditor(new SucursalTableCell(this.sucursalsForeignKey,this.pedidocompraConstantesFunciones.resaltarid_sucursalPedidoCompra,this,this.pedidocompraConstantesFunciones.activarid_sucursalPedidoCompra,false,"id_sucursalPedidoCompra","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompra,PedidoCompraConstantesFunciones.LABEL_IDMODULO));

		if(this.pedidocompraConstantesFunciones.mostrarid_moduloPedidoCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoCompraConstantesFunciones.LABEL_IDMODULO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new ModuloTableCell(this.modulosForeignKey,this.pedidocompraConstantesFunciones.resaltarid_moduloPedidoCompra,this,this.pedidocompraConstantesFunciones.activarid_moduloPedidoCompra,iSizeTabla));
			tableColumn.setCellEditor(new ModuloTableCell(this.modulosForeignKey,this.pedidocompraConstantesFunciones.resaltarid_moduloPedidoCompra,this,this.pedidocompraConstantesFunciones.activarid_moduloPedidoCompra,false,"id_moduloPedidoCompra","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompra,PedidoCompraConstantesFunciones.LABEL_IDEJERCICIO));

		if(this.pedidocompraConstantesFunciones.mostrarid_ejercicioPedidoCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoCompraConstantesFunciones.LABEL_IDEJERCICIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new EjercicioTableCell(this.ejerciciosForeignKey,this.pedidocompraConstantesFunciones.resaltarid_ejercicioPedidoCompra,this,this.pedidocompraConstantesFunciones.activarid_ejercicioPedidoCompra,iSizeTabla));
			tableColumn.setCellEditor(new EjercicioTableCell(this.ejerciciosForeignKey,this.pedidocompraConstantesFunciones.resaltarid_ejercicioPedidoCompra,this,this.pedidocompraConstantesFunciones.activarid_ejercicioPedidoCompra,false,"id_ejercicioPedidoCompra","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompra,PedidoCompraConstantesFunciones.LABEL_IDPERIODO));

		if(this.pedidocompraConstantesFunciones.mostrarid_periodoPedidoCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoCompraConstantesFunciones.LABEL_IDPERIODO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new PeriodoTableCell(this.periodosForeignKey,this.pedidocompraConstantesFunciones.resaltarid_periodoPedidoCompra,this,this.pedidocompraConstantesFunciones.activarid_periodoPedidoCompra,iSizeTabla));
			tableColumn.setCellEditor(new PeriodoTableCell(this.periodosForeignKey,this.pedidocompraConstantesFunciones.resaltarid_periodoPedidoCompra,this,this.pedidocompraConstantesFunciones.activarid_periodoPedidoCompra,false,"id_periodoPedidoCompra","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompra,PedidoCompraConstantesFunciones.LABEL_IDANIO));

		if(this.pedidocompraConstantesFunciones.mostrarid_anioPedidoCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoCompraConstantesFunciones.LABEL_IDANIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new AnioTableCell(this.aniosForeignKey,this.pedidocompraConstantesFunciones.resaltarid_anioPedidoCompra,this,this.pedidocompraConstantesFunciones.activarid_anioPedidoCompra,iSizeTabla));
			tableColumn.setCellEditor(new AnioTableCell(this.aniosForeignKey,this.pedidocompraConstantesFunciones.resaltarid_anioPedidoCompra,this,this.pedidocompraConstantesFunciones.activarid_anioPedidoCompra,true,"id_anioPedidoCompra","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompra,PedidoCompraConstantesFunciones.LABEL_IDMES));

		if(this.pedidocompraConstantesFunciones.mostrarid_mesPedidoCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoCompraConstantesFunciones.LABEL_IDMES,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new MesTableCell(this.messForeignKey,this.pedidocompraConstantesFunciones.resaltarid_mesPedidoCompra,this,this.pedidocompraConstantesFunciones.activarid_mesPedidoCompra,iSizeTabla));
			tableColumn.setCellEditor(new MesTableCell(this.messForeignKey,this.pedidocompraConstantesFunciones.resaltarid_mesPedidoCompra,this,this.pedidocompraConstantesFunciones.activarid_mesPedidoCompra,true,"id_mesPedidoCompra","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompra,PedidoCompraConstantesFunciones.LABEL_NUMEROSECUENCIAL));

		if(this.pedidocompraConstantesFunciones.mostrarnumero_secuencialPedidoCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoCompraConstantesFunciones.LABEL_NUMEROSECUENCIAL,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.pedidocompraConstantesFunciones.resaltarnumero_secuencialPedidoCompra,this.pedidocompraConstantesFunciones.activarnumero_secuencialPedidoCompra,iSizeTabla,this,true,"numero_secuencialPedidoCompra","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pedidocompraConstantesFunciones.resaltarnumero_secuencialPedidoCompra,this.pedidocompraConstantesFunciones.activarnumero_secuencialPedidoCompra,this,true,"numero_secuencialPedidoCompra","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompra,PedidoCompraConstantesFunciones.LABEL_IDCLIENTE));

		if(this.pedidocompraConstantesFunciones.mostrarid_clientePedidoCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoCompraConstantesFunciones.LABEL_IDCLIENTE,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new ClienteTableCell(this.clientesForeignKey,this.pedidocompraConstantesFunciones.resaltarid_clientePedidoCompra,this,this.pedidocompraConstantesFunciones.activarid_clientePedidoCompra,iSizeTabla));
			tableColumn.setCellEditor(new ClienteTableCell(this.clientesForeignKey,this.pedidocompraConstantesFunciones.resaltarid_clientePedidoCompra,this,this.pedidocompraConstantesFunciones.activarid_clientePedidoCompra,true,"id_clientePedidoCompra","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75);
			//tableColumn.addPropertyChangeListener(new PedidoCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompra,PedidoCompraConstantesFunciones.LABEL_IDUSUARIO));

		if(this.pedidocompraConstantesFunciones.mostrarid_usuarioPedidoCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoCompraConstantesFunciones.LABEL_IDUSUARIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new UsuarioTableCell(this.usuariosForeignKey,this.pedidocompraConstantesFunciones.resaltarid_usuarioPedidoCompra,this,this.pedidocompraConstantesFunciones.activarid_usuarioPedidoCompra,iSizeTabla));
			tableColumn.setCellEditor(new UsuarioTableCell(this.usuariosForeignKey,this.pedidocompraConstantesFunciones.resaltarid_usuarioPedidoCompra,this,this.pedidocompraConstantesFunciones.activarid_usuarioPedidoCompra,false,"id_usuarioPedidoCompra","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompra,PedidoCompraConstantesFunciones.LABEL_IDESTADOPEDIDOCOMPRA));

		if(this.pedidocompraConstantesFunciones.mostrarid_estado_pedido_compraPedidoCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoCompraConstantesFunciones.LABEL_IDESTADOPEDIDOCOMPRA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new EstadoPedidoCompraTableCell(this.estadopedidocomprasForeignKey,this.pedidocompraConstantesFunciones.resaltarid_estado_pedido_compraPedidoCompra,this,this.pedidocompraConstantesFunciones.activarid_estado_pedido_compraPedidoCompra,iSizeTabla));
			tableColumn.setCellEditor(new EstadoPedidoCompraTableCell(this.estadopedidocomprasForeignKey,this.pedidocompraConstantesFunciones.resaltarid_estado_pedido_compraPedidoCompra,this,this.pedidocompraConstantesFunciones.activarid_estado_pedido_compraPedidoCompra,true,"id_estado_pedido_compraPedidoCompra","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompra,PedidoCompraConstantesFunciones.LABEL_IDEMPLEADO));

		if(this.pedidocompraConstantesFunciones.mostrarid_empleadoPedidoCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoCompraConstantesFunciones.LABEL_IDEMPLEADO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new EmpleadoTableCell(this.empleadosForeignKey,this.pedidocompraConstantesFunciones.resaltarid_empleadoPedidoCompra,this,this.pedidocompraConstantesFunciones.activarid_empleadoPedidoCompra,iSizeTabla));
			tableColumn.setCellEditor(new EmpleadoTableCell(this.empleadosForeignKey,this.pedidocompraConstantesFunciones.resaltarid_empleadoPedidoCompra,this,this.pedidocompraConstantesFunciones.activarid_empleadoPedidoCompra,true,"id_empleadoPedidoCompra","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100);
			//tableColumn.addPropertyChangeListener(new PedidoCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompra,PedidoCompraConstantesFunciones.LABEL_RESPONSABLE));

		if(this.pedidocompraConstantesFunciones.mostrarresponsablePedidoCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoCompraConstantesFunciones.LABEL_RESPONSABLE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.pedidocompraConstantesFunciones.resaltarresponsablePedidoCompra,this.pedidocompraConstantesFunciones.activarresponsablePedidoCompra,iSizeTabla,this,true,"responsablePedidoCompra","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pedidocompraConstantesFunciones.resaltarresponsablePedidoCompra,this.pedidocompraConstantesFunciones.activarresponsablePedidoCompra,this,true,"responsablePedidoCompra","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompra,PedidoCompraConstantesFunciones.LABEL_SOLICITADOPOR));

		if(this.pedidocompraConstantesFunciones.mostrarsolicitado_porPedidoCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoCompraConstantesFunciones.LABEL_SOLICITADOPOR,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.pedidocompraConstantesFunciones.resaltarsolicitado_porPedidoCompra,this.pedidocompraConstantesFunciones.activarsolicitado_porPedidoCompra,iSizeTabla,this,true,"solicitado_porPedidoCompra","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pedidocompraConstantesFunciones.resaltarsolicitado_porPedidoCompra,this.pedidocompraConstantesFunciones.activarsolicitado_porPedidoCompra,this,true,"solicitado_porPedidoCompra","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompra,PedidoCompraConstantesFunciones.LABEL_MOTIVOSOLICITUD));

		if(this.pedidocompraConstantesFunciones.mostrarmotivo_solicitudPedidoCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoCompraConstantesFunciones.LABEL_MOTIVOSOLICITUD,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.pedidocompraConstantesFunciones.resaltarmotivo_solicitudPedidoCompra,this.pedidocompraConstantesFunciones.activarmotivo_solicitudPedidoCompra,iSizeTabla,this,true,"motivo_solicitudPedidoCompra","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pedidocompraConstantesFunciones.resaltarmotivo_solicitudPedidoCompra,this.pedidocompraConstantesFunciones.activarmotivo_solicitudPedidoCompra,this,true,"motivo_solicitudPedidoCompra","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompra,PedidoCompraConstantesFunciones.LABEL_AREASOLICITUD));

		if(this.pedidocompraConstantesFunciones.mostrararea_solicitudPedidoCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoCompraConstantesFunciones.LABEL_AREASOLICITUD,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.pedidocompraConstantesFunciones.resaltararea_solicitudPedidoCompra,this.pedidocompraConstantesFunciones.activararea_solicitudPedidoCompra,iSizeTabla,this,true,"area_solicitudPedidoCompra","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pedidocompraConstantesFunciones.resaltararea_solicitudPedidoCompra,this.pedidocompraConstantesFunciones.activararea_solicitudPedidoCompra,this,true,"area_solicitudPedidoCompra","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompra,PedidoCompraConstantesFunciones.LABEL_PARAUSODE));

		if(this.pedidocompraConstantesFunciones.mostrarpara_uso_dePedidoCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoCompraConstantesFunciones.LABEL_PARAUSODE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.pedidocompraConstantesFunciones.resaltarpara_uso_dePedidoCompra,this.pedidocompraConstantesFunciones.activarpara_uso_dePedidoCompra,iSizeTabla,this,true,"para_uso_dePedidoCompra","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pedidocompraConstantesFunciones.resaltarpara_uso_dePedidoCompra,this.pedidocompraConstantesFunciones.activarpara_uso_dePedidoCompra,this,true,"para_uso_dePedidoCompra","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompra,PedidoCompraConstantesFunciones.LABEL_LUGARENTREGA));

		if(this.pedidocompraConstantesFunciones.mostrarlugar_entregaPedidoCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoCompraConstantesFunciones.LABEL_LUGARENTREGA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.pedidocompraConstantesFunciones.resaltarlugar_entregaPedidoCompra,this.pedidocompraConstantesFunciones.activarlugar_entregaPedidoCompra,iSizeTabla,this,true,"lugar_entregaPedidoCompra","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pedidocompraConstantesFunciones.resaltarlugar_entregaPedidoCompra,this.pedidocompraConstantesFunciones.activarlugar_entregaPedidoCompra,this,true,"lugar_entregaPedidoCompra","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompra,PedidoCompraConstantesFunciones.LABEL_DESCRIPCION));

		if(this.pedidocompraConstantesFunciones.mostrardescripcionPedidoCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoCompraConstantesFunciones.LABEL_DESCRIPCION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.pedidocompraConstantesFunciones.resaltardescripcionPedidoCompra,this.pedidocompraConstantesFunciones.activardescripcionPedidoCompra,iSizeTabla,this,true,"descripcionPedidoCompra","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pedidocompraConstantesFunciones.resaltardescripcionPedidoCompra,this.pedidocompraConstantesFunciones.activardescripcionPedidoCompra,this,true,"descripcionPedidoCompra","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,200));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,200));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,200));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,200));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,200);
			//tableColumn.addPropertyChangeListener(new PedidoCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompra,PedidoCompraConstantesFunciones.LABEL_FECHAEMISION));

		if(this.pedidocompraConstantesFunciones.mostrarfecha_emisionPedidoCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoCompraConstantesFunciones.LABEL_FECHAEMISION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new DateRenderer(this.pedidocompraConstantesFunciones.resaltarfecha_emisionPedidoCompra,this.pedidocompraConstantesFunciones.activarfecha_emisionPedidoCompra,iSizeTabla,this,true,"fecha_emisionPedidoCompra","BASICO"));
			tableColumn.setCellEditor(new DateEditorRenderer(this.pedidocompraConstantesFunciones.resaltarfecha_emisionPedidoCompra,this.pedidocompraConstantesFunciones.activarfecha_emisionPedidoCompra,this,true,"fecha_emisionPedidoCompra","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30);
			//tableColumn.addPropertyChangeListener(new PedidoCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompra,PedidoCompraConstantesFunciones.LABEL_FECHAENTREGA));

		if(this.pedidocompraConstantesFunciones.mostrarfecha_entregaPedidoCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoCompraConstantesFunciones.LABEL_FECHAENTREGA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new DateRenderer(this.pedidocompraConstantesFunciones.resaltarfecha_entregaPedidoCompra,this.pedidocompraConstantesFunciones.activarfecha_entregaPedidoCompra,iSizeTabla,this,true,"fecha_entregaPedidoCompra","BASICO"));
			tableColumn.setCellEditor(new DateEditorRenderer(this.pedidocompraConstantesFunciones.resaltarfecha_entregaPedidoCompra,this.pedidocompraConstantesFunciones.activarfecha_entregaPedidoCompra,this,true,"fecha_entregaPedidoCompra","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30);
			//tableColumn.addPropertyChangeListener(new PedidoCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompra,PedidoCompraConstantesFunciones.LABEL_IDFORMATO));

		if(this.pedidocompraConstantesFunciones.mostrarid_formatoPedidoCompra && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoCompraConstantesFunciones.LABEL_IDFORMATO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new FormatoTableCell(this.formatosForeignKey,this.pedidocompraConstantesFunciones.resaltarid_formatoPedidoCompra,this,this.pedidocompraConstantesFunciones.activarid_formatoPedidoCompra,iSizeTabla));
			tableColumn.setCellEditor(new FormatoTableCell(this.formatosForeignKey,this.pedidocompraConstantesFunciones.resaltarid_formatoPedidoCompra,this,this.pedidocompraConstantesFunciones.activarid_formatoPedidoCompra,true,"id_formatoPedidoCompra","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoCompraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}
			
		} else {
		}			
					
		if(!this.pedidocompraSessionBean.getEsGuardarRelacionado()
			&& !this.esParaBusquedaForeignKey) {
			

			if(this.isTienePermisosDetallePedidoCompra && this.pedidocompraConstantesFunciones.mostrarDetallePedidoCompraPedidoCompra && !PedidoCompraConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Detalle Pedido Compras");
				tableColumn.setHeaderValue("Detalle Pedido Compras");
				tableColumn.setCellRenderer(new DetallePedidoCompraTableCell(pedidocompraConstantesFunciones.resaltarDetallePedidoCompraPedidoCompra,this,this.pedidocompraConstantesFunciones.activarDetallePedidoCompraPedidoCompra));
				tableColumn.setCellEditor(new DetallePedidoCompraTableCell(pedidocompraConstantesFunciones.resaltarDetallePedidoCompraPedidoCompra,this,this.pedidocompraConstantesFunciones.activarDetallePedidoCompraPedidoCompra));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosPedidoCompra.addColumn(tableColumn);
			}
		}
		
		if(true) {
			String sLabelColumnAccion="Editar";
			String sLabelColumnAccionEli="Eli";
			
			if(this.esParaBusquedaForeignKey)  {
				sLabelColumnAccion="Seleccionar";
				
				//LO MISMO QUE ELSE
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.pedidocompraSessionBean.getEsGuardarRelacionado(),iSizeTabla));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.pedidocompraSessionBean.getEsGuardarRelacionado(),iSizeTabla));
	
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosPedidoCompra.addColumn(tableColumn);
			
			} else {				
				
				//LO MISMO QUE IF
				
				//tableColumn= new TableColumn();
				//tableColumn.setIdentifier(sLabelColumnAccion);
				//tableColumn.setHeaderValue(sLabelColumnAccion);
				//tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.pedidocompraSessionBean.getEsGuardarRelacionado(),iSizeTabla));
				//tableColumn.setCellEditor(new IdTableCell(this,false,false,this.pedidocompraSessionBean.getEsGuardarRelacionado(),iSizeTabla));
		
				//tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				//tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				//tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				//tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				//this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				//this.jTableDatosPedidoCompra.addColumn(tableColumn);				
					
				//ELIMINAR
				if(this.isPermisoEliminarPedidoCompra && this.isPermisoGuardarCambiosPedidoCompra) {
					//tableColumn= new TableColumn();
					//tableColumn.setIdentifier(Constantes2.S_ELI);
					//tableColumn.setHeaderValue(sLabelColumnAccionEli);
					//tableColumn.setCellRenderer(new IdTableCell(this,false,true,this.pedidocompraSessionBean.getEsGuardarRelacionado(),iSizeTabla));
					//tableColumn.setCellEditor(new IdTableCell(this,false,true,this.pedidocompraSessionBean.getEsGuardarRelacionado(),iSizeTabla));
			
					//tableColumn.setPreferredWidth(65); 	 
					//tableColumn.setWidth(65); 	 
					//tableColumn.setMinWidth(65); 
					//tableColumn.setMaxWidth(65);
					
					//this.iWidthTableDefinicion+=65;
						
					//this.jTableDatosPedidoCompra.addColumn(tableColumn);
				}
			}			
						
			if(this.conMaximoRelaciones && this.pedidocompraSessionBean.getConGuardarRelaciones()) {
				if(this.conFuncionalidadRelaciones) {
					tableColumn= new TableColumn();
					tableColumn.setIdentifier("Editar Rel");
					tableColumn.setHeaderValue("Editar Rel");
					tableColumn.setCellRenderer(new IdTableCell(this,true,false,iSizeTabla));
					tableColumn.setCellEditor(new IdTableCell(this,true,false,iSizeTabla));
		
					tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
					tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
					tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
					tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
					
					this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
					this.jTableDatosPedidoCompra.addColumn(tableColumn);
				}
			}
			
			/*
			tableColumn= new TableColumn();
			tableColumn.setIdentifier(Constantes2.S_SELECCIONAR);
			tableColumn.setHeaderValue(Constantes2.S_SELECCIONAR);
			tableColumn.setCellRenderer(new IdSeleccionarTableCell(this));
			tableColumn.setCellEditor(new IdSeleccionarTableCell(this));
			
			tableColumn.setPreferredWidth(30); 	 
			tableColumn.setWidth(30); 	 
			tableColumn.setMinWidth(30); 
			
			this.iWidthTableDefinicion+=30;
			
			this.jTableDatosPedidoCompra.addColumn(tableColumn);
			*/
		}
		
		Integer iUltimaColumna=0;//1
		Integer iNuevaPosicionColumna=0;
		
		
		//PERMITE ELIMINAR SIMPLE
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarPedidoCompra && this.isPermisoGuardarCambiosPedidoCompra) {
				//iUltimaColumna++;
			}	
		}
		
		//PERMITE EDITAR SIMPLE
		//iUltimaColumna++;	
		
				
		if(this.conFuncionalidadRelaciones) {
			if(this.conMaximoRelaciones && this.pedidocompraSessionBean.getConGuardarRelaciones()) {			
				//PERMITE EDITAR RELACIONES
				iUltimaColumna++;//2
			}
		}
		
		//MOVIA SELECCIONAR
		//iUltimaColumna++;
		
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarPedidoCompra && this.isPermisoGuardarCambiosPedidoCompra) {
				////REUBICA ELIMINAR SIMPLE
				//jTableDatosPedidoCompra.moveColumn(this.jTableDatosPedidoCompra.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3
					
				//iUltimaColumna--;
			}
		}
		//REUBICA EDITAR SIMPLE
		//jTableDatosPedidoCompra.moveColumn(this.jTableDatosPedidoCompra.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3				
		
		
		if(this.conFuncionalidadRelaciones) {
			if(this.conMaximoRelaciones && this.pedidocompraSessionBean.getConGuardarRelaciones()) {	
				if(iUltimaColumna>1) {
					iUltimaColumna--;
				}
				
				//iNuevaPosicionColumna++;
				
				//REUBICA EDITAR RELACIONES
				jTableDatosPedidoCompra.moveColumn(this.jTableDatosPedidoCompra.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1
			}
		}
		
		
		//REUBICABA SELECCIONAR
		/*
		if(iUltimaColumna>1) {
			iUltimaColumna--;
		}
		
		//iNuevaPosicionColumna++;
			
		//REUBICA SELECCIONAR FILA CHECK
		jTableDatosPedidoCompra.moveColumn(this.jTableDatosPedidoCompra.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1		
		*/
		
		//DEFINEN HEADERS
		final TableCellRenderer tableHeaderDefaultCellRenderer = this.jTableDatosPedidoCompra.getTableHeader().getDefaultRenderer();
		
		this.jTableDatosPedidoCompra.getTableHeader().setDefaultRenderer(new TableCellRendererHeader(this.jTableDatosPedidoCompra,tableHeaderDefaultCellRenderer));
	    
		TableColumn column=null;
		
		if(!PedidoCompraJInternalFrame.ISBINDING_MANUAL_TABLA) {
			for(int i = 0; i < this.jTableDatosPedidoCompra.getColumnModel().getColumnCount(); i++) { 
				column = this.jTableDatosPedidoCompra.getColumnModel().getColumn(i); 
				
				if(column.getIdentifier()!=null) {
					//SI SE UTILIZA UN HEADER ES GENERICO
					//column.setHeaderRenderer(new HeaderRenderer(column.getIdentifier().toString()));
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_ELI)) {
					continue;
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_SELECCIONAR)) {
					if(!PedidoCompraJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(50); 	 
						column.setWidth(50); 	 
						column.setMinWidth(50); 	
						column.setMaxWidth(50); 
						
						this.iWidthTableDefinicion+=50;
					}
					
				} else {
					if(!PedidoCompraJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						column.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						
						this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
					}
				}
			}
		}
		
		this.jTableDatosPedidoCompra.setSelectionBackground(FuncionesSwing.getColorSelectedBackground());
		this.jTableDatosPedidoCompra.setSelectionForeground(FuncionesSwing.getColorSelectedForeground());
		
		/*
		this.jTableDatosPedidoCompra.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
			private static final long serialVersionUID = 1L;
			
		    @Override
		    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
		        final Component component= super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
		        //POR DEFECTO ES MEJOR, SE PIERDE DATOS AL SELECCIONAR BLANCO LETRAS BLANCAS
				component.setBackground(row % 2 == 0 ? FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR) : Funciones2.getColorFilaTabla2()); //FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR)
				component.setForeground(Funciones2.getColorTextoFilaTabla1());
				
				try {
		        	int iSize=-999;
		        	
		        	if(conTotales) {
						//FILA TOTALES OTRO COLOR, SI TABLA NO ES UNO A UNO
			        	if(Constantes.ISUSAEJBLOGICLAYER) {
							iSize=pedidocompraLogic.getPedidoCompras().size()-1;
								
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							iSize=pedidocompras.size()-1;
						}
						
						if(iSize==row) {
							component.setBackground(Funciones2.getColorFilaTablaTotales());
						}
		        	}
					
					//POR EFICIENCIA NO UTILIZAR					
					//if (component instanceof JComponent) {
		            //    JComponent jcomponent = (JComponent) component;		                 		                
		        	//}				
					
				} catch (Exception e) {
					e.printStackTrace();
				}
				
		        return component;
		    }
		});
		*/
		
		//ESTA EN LA DEFINICION DE LA TABLA
		//this.jTableDatosPedidoCompra.setRowHeight(Constantes.ISWING_ALTO_FILA_TABLA);
		
		/*
		column=this.jTableDatosPedidoCompra.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSistema,Constantes2.S_SELECCIONAR));
		
		if(column!=null) {
			column.setPreferredWidth(25); 	 
			column.setWidth(25); 	 
			column.setMinWidth(25); 	
		}
		*/
			
			//CopyTableToTableTotal();
		} else {
			
			this.actualizarVisualTableDatosPedidoCompra();
			
		}
	}
	
	/*
	//COPY_TABLES
	/* FALTARIA RESOLVER:
	   1 SOLO SCROLL PARA 2 TABLAS
	   COPIA EXACTA DE COLUMNAS DE UNA TABLA A OTRA, SI SE MODIFICA TAMANIO TAMBIEN LA OTRA
	*/
	
	public void jButtonIdActionPerformed(ActionEvent evt,int rowIndex,Boolean esRelaciones,Boolean esEliminar) { 
		try {
			if(!esEliminar) {
				this.estaModoSeleccionar=true;
				
				//this.isEsNuevoPedidoCompra=false;
					
				PedidoCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.pedidocompra,new Object(),this.pedidocompraParameterGeneral,this.pedidocompraReturnGeneral);
			
				if(this.pedidocompraSessionBean.getConGuardarRelaciones()) {
					this.dStart=(double)System.currentTimeMillis();
				}
				
				if(this.jInternalFrameDetalleFormPedidoCompra==null) {
					this.inicializarFormDetalle();
				}
				
				this.inicializarInvalidValues();
				
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosPedidoCompra.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosPedidoCompra.getSelectedRow();	       
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompra =(PedidoCompra) this.pedidocompraLogic.getPedidoCompras().toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.pedidocompra =(PedidoCompra) this.pedidocompras.toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//PUEDE SER PARA DUPLICADO O NUEVO TABLA
				
				if(this.pedidocompra.getsType().equals("DUPLICADO")
				   || this.pedidocompra.getsType().equals("NUEVO_GUARDAR_CAMBIOS")) {
					
					this.isEsNuevoPedidoCompra=true;
				
				} else {
					this.isEsNuevoPedidoCompra=false;	
				}
				
				//CONTROL VERSION ANTERIOR
				/*
				if(!this.pedidocompraSessionBean.getEsGuardarRelacionado()) {
					if(this.pedidocompra.getId()>=0 && !this.pedidocompra.getIsNew()) {						
						this.isEsNuevoPedidoCompra=false;
						
					} else {
						this.isEsNuevoPedidoCompra=true;
					}
					
				} else {
					//CONTROLAR PARA RELACIONADO
				}
				*/
				
				//ESTABLECE SI ES RELACIONADO O NO 
				this.habilitarDeshabilitarTipoMantenimientoPedidoCompra(esRelaciones);						
				
				this.seleccionarPedidoCompra(evt,null,rowIndex);
				
				//SELECCIONA ACTUAL PERO AUN NO SE HA INGRESADO AL SISTEMA
				//SE DESHABILITA POR GUARDAR CAMBIOS
				/*
				if(this.pedidocompra.getId()<0) {
					this.isEsNuevoPedidoCompra=true;
				}
				*/
				
				if(!this.esParaBusquedaForeignKey) {
					this.modificarPedidoCompra(evt,rowIndex,esRelaciones);
				} else {
					this.seleccionarPedidoCompra(evt,rowIndex);
				}	
				
				if(this.pedidocompraSessionBean.getConGuardarRelaciones()) {
					this.dEnd=(double)System.currentTimeMillis();					
					this.dDif=this.dEnd - this.dStart;
					
					if(Constantes.ISDEVELOPING) {
						System.out.println("Tiempo(ms) Seleccion PedidoCompra: " + this.dDif); 
					}
				}								
				
				PedidoCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.pedidocompra,new Object(),this.pedidocompraParameterGeneral,this.pedidocompraReturnGeneral);
				
			} else {
				this.estaModoEliminarGuardarCambios=true;
				
				this.seleccionarPedidoCompra(evt,null,rowIndex);
				
				if(this.permiteMantenimiento(this.pedidocompra)) {
					if(this.pedidocompra.getId()>0) {
						this.pedidocompra.setIsDeleted(true);
						
						this.pedidocomprasEliminados.add(this.pedidocompra);
					}
					
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.pedidocompraLogic.getPedidoCompras().remove(this.pedidocompra);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.pedidocompras.remove(this.pedidocompra);				
					}
					
					
					((PedidoCompraModel) this.jTableDatosPedidoCompra.getModel()).fireTableRowsDeleted(rowIndex,rowIndex);
					
					this.actualizarFilaTotales();
					
					this.inicializarActualizarBindingTablaPedidoCompra(false);					
				}								
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException2(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoSeleccionar=false;				
			this.estaModoEliminarGuardarCambios=false;
		}
	}
	
	
	public void seleccionarPedidoCompra(ActionEvent evt,javax.swing.event.ListSelectionEvent evt2,int rowIndex) throws Exception { 
		try {
			//SI PUEDE SER NUEVO Y SELECCIONAR (PARA DUPLICAR Y NUEVO TABLA)
			//if(!this.isEsNuevoPedidoCompra) {
			
			if(this.jInternalFrameDetalleFormPedidoCompra==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosPedidoCompra.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosPedidoCompra.getSelectedRow();	       
				}
				
				//CUANDO SE RECARGA TABLA TAMBIEN SE SELECCIONA PERO CON -1 POR LO QUE SE NECESITA VALIDAR ANTES
				if(intSelectedRow<0) {
					return;
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompra =(PedidoCompra) this.pedidocompraLogic.getPedidoCompras().toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.pedidocompra =(PedidoCompra) this.pedidocompras.toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
				}
				
				if(PedidoCompraJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesObjetoActualToFormularioPedidoCompra(this.pedidocompra);
				}
				
				//ARCHITECTURE
				try {
					

					//Empresa
					if(!this.pedidocompraConstantesFunciones.cargarid_empresaPedidoCompra || this.pedidocompraConstantesFunciones.event_dependid_empresaPedidoCompra) {
						//this.cargarCombosEmpresasForeignKeyLista(" where id="+this.pedidocompra.getid_empresa());
									//this.inicializarActualizarBindingPedidoCompra(false,false);
						this.empresasForeignKey=new ArrayList<Empresa>();

						if(pedidocompra.getEmpresa()!=null) {
							this.empresasForeignKey.add(pedidocompra.getEmpresa());
						}

						this.addItemDefectoCombosForeignKeyEmpresa();
						this.cargarCombosFrameEmpresasForeignKey("Todos");
					}
					this.setActualEmpresaForeignKey(this.pedidocompra.getid_empresa(),false,"Formulario");

					//Sucursal
					if(!this.pedidocompraConstantesFunciones.cargarid_sucursalPedidoCompra || this.pedidocompraConstantesFunciones.event_dependid_sucursalPedidoCompra) {
						//this.cargarCombosSucursalsForeignKeyLista(" where id="+this.pedidocompra.getid_sucursal());
									//this.inicializarActualizarBindingPedidoCompra(false,false);
						this.sucursalsForeignKey=new ArrayList<Sucursal>();

						if(pedidocompra.getSucursal()!=null) {
							this.sucursalsForeignKey.add(pedidocompra.getSucursal());
						}

						this.addItemDefectoCombosForeignKeySucursal();
						this.cargarCombosFrameSucursalsForeignKey("Todos");
					}
					this.setActualSucursalForeignKey(this.pedidocompra.getid_sucursal(),false,"Formulario");

					//Modulo
					if(!this.pedidocompraConstantesFunciones.cargarid_moduloPedidoCompra || this.pedidocompraConstantesFunciones.event_dependid_moduloPedidoCompra) {
						//this.cargarCombosModulosForeignKeyLista(" where id="+this.pedidocompra.getid_modulo());
									//this.inicializarActualizarBindingPedidoCompra(false,false);
						this.modulosForeignKey=new ArrayList<Modulo>();

						if(pedidocompra.getModulo()!=null) {
							this.modulosForeignKey.add(pedidocompra.getModulo());
						}

						this.addItemDefectoCombosForeignKeyModulo();
						this.cargarCombosFrameModulosForeignKey("Todos");
					}
					this.setActualModuloForeignKey(this.pedidocompra.getid_modulo(),false,"Formulario");

					//Ejercicio
					if(!this.pedidocompraConstantesFunciones.cargarid_ejercicioPedidoCompra || this.pedidocompraConstantesFunciones.event_dependid_ejercicioPedidoCompra) {
						//this.cargarCombosEjerciciosForeignKeyLista(" where id="+this.pedidocompra.getid_ejercicio());
									//this.inicializarActualizarBindingPedidoCompra(false,false);
						this.ejerciciosForeignKey=new ArrayList<Ejercicio>();

						if(pedidocompra.getEjercicio()!=null) {
							this.ejerciciosForeignKey.add(pedidocompra.getEjercicio());
						}

						this.addItemDefectoCombosForeignKeyEjercicio();
						this.cargarCombosFrameEjerciciosForeignKey("Todos");
					}
					this.setActualEjercicioForeignKey(this.pedidocompra.getid_ejercicio(),false,"Formulario");

					//Periodo
					if(!this.pedidocompraConstantesFunciones.cargarid_periodoPedidoCompra || this.pedidocompraConstantesFunciones.event_dependid_periodoPedidoCompra) {
						//this.cargarCombosPeriodosForeignKeyLista(" where id="+this.pedidocompra.getid_periodo());
									//this.inicializarActualizarBindingPedidoCompra(false,false);
						this.periodosForeignKey=new ArrayList<Periodo>();

						if(pedidocompra.getPeriodo()!=null) {
							this.periodosForeignKey.add(pedidocompra.getPeriodo());
						}

						this.addItemDefectoCombosForeignKeyPeriodo();
						this.cargarCombosFramePeriodosForeignKey("Todos");
					}
					this.setActualPeriodoForeignKey(this.pedidocompra.getid_periodo(),false,"Formulario");

					//Anio
					if(!this.pedidocompraConstantesFunciones.cargarid_anioPedidoCompra || this.pedidocompraConstantesFunciones.event_dependid_anioPedidoCompra) {
						//this.cargarCombosAniosForeignKeyLista(" where id="+this.pedidocompra.getid_anio());
									//this.inicializarActualizarBindingPedidoCompra(false,false);
						this.aniosForeignKey=new ArrayList<Anio>();

						if(pedidocompra.getAnio()!=null) {
							this.aniosForeignKey.add(pedidocompra.getAnio());
						}

						this.addItemDefectoCombosForeignKeyAnio();
						this.cargarCombosFrameAniosForeignKey("Todos");
					}
					this.setActualAnioForeignKey(this.pedidocompra.getid_anio(),false,"Formulario");

					//Mes
					if(!this.pedidocompraConstantesFunciones.cargarid_mesPedidoCompra || this.pedidocompraConstantesFunciones.event_dependid_mesPedidoCompra) {
						//this.cargarCombosMessForeignKeyLista(" where id="+this.pedidocompra.getid_mes());
									//this.inicializarActualizarBindingPedidoCompra(false,false);
						this.messForeignKey=new ArrayList<Mes>();

						if(pedidocompra.getMes()!=null) {
							this.messForeignKey.add(pedidocompra.getMes());
						}

						this.addItemDefectoCombosForeignKeyMes();
						this.cargarCombosFrameMessForeignKey("Todos");
					}
					this.setActualMesForeignKey(this.pedidocompra.getid_mes(),false,"Formulario");

					//Cliente
					if(!this.pedidocompraConstantesFunciones.cargarid_clientePedidoCompra || this.pedidocompraConstantesFunciones.event_dependid_clientePedidoCompra) {
						//this.cargarCombosClientesForeignKeyLista(" where id="+this.pedidocompra.getid_cliente());
									//this.inicializarActualizarBindingPedidoCompra(false,false);
						this.clientesForeignKey=new ArrayList<Cliente>();

						if(pedidocompra.getCliente()!=null) {
							this.clientesForeignKey.add(pedidocompra.getCliente());
						}

						this.addItemDefectoCombosForeignKeyCliente();
						this.cargarCombosFrameClientesForeignKey("Todos");
					}
					this.setActualClienteForeignKey(this.pedidocompra.getid_cliente(),false,"Formulario");

					//Usuario
					if(!this.pedidocompraConstantesFunciones.cargarid_usuarioPedidoCompra || this.pedidocompraConstantesFunciones.event_dependid_usuarioPedidoCompra) {
						//this.cargarCombosUsuariosForeignKeyLista(" where id="+this.pedidocompra.getid_usuario());
									//this.inicializarActualizarBindingPedidoCompra(false,false);
						this.usuariosForeignKey=new ArrayList<Usuario>();

						if(pedidocompra.getUsuario()!=null) {
							this.usuariosForeignKey.add(pedidocompra.getUsuario());
						}

						this.addItemDefectoCombosForeignKeyUsuario();
						this.cargarCombosFrameUsuariosForeignKey("Todos");
					}
					this.setActualUsuarioForeignKey(this.pedidocompra.getid_usuario(),false,"Formulario");

					//Moneda
					if(!this.pedidocompraConstantesFunciones.cargarid_monedaPedidoCompra || this.pedidocompraConstantesFunciones.event_dependid_monedaPedidoCompra) {
						//this.cargarCombosMonedasForeignKeyLista(" where id="+this.pedidocompra.getid_moneda());
									//this.inicializarActualizarBindingPedidoCompra(false,false);
						this.monedasForeignKey=new ArrayList<Moneda>();

						if(pedidocompra.getMoneda()!=null) {
							this.monedasForeignKey.add(pedidocompra.getMoneda());
						}

						this.addItemDefectoCombosForeignKeyMoneda();
						this.cargarCombosFrameMonedasForeignKey("Todos");
					}
					this.setActualMonedaForeignKey(this.pedidocompra.getid_moneda(),false,"Formulario");

					//EstadoPedidoCompra
					if(!this.pedidocompraConstantesFunciones.cargarid_estado_pedido_compraPedidoCompra || this.pedidocompraConstantesFunciones.event_dependid_estado_pedido_compraPedidoCompra) {
						//this.cargarCombosEstadoPedidoComprasForeignKeyLista(" where id="+this.pedidocompra.getid_estado_pedido_compra());
									//this.inicializarActualizarBindingPedidoCompra(false,false);
						this.estadopedidocomprasForeignKey=new ArrayList<EstadoPedidoCompra>();

						if(pedidocompra.getEstadoPedidoCompra()!=null) {
							this.estadopedidocomprasForeignKey.add(pedidocompra.getEstadoPedidoCompra());
						}

						this.addItemDefectoCombosForeignKeyEstadoPedidoCompra();
						this.cargarCombosFrameEstadoPedidoComprasForeignKey("Todos");
					}
					this.setActualEstadoPedidoCompraForeignKey(this.pedidocompra.getid_estado_pedido_compra(),false,"Formulario");

					//Empleado
					if(!this.pedidocompraConstantesFunciones.cargarid_empleadoPedidoCompra || this.pedidocompraConstantesFunciones.event_dependid_empleadoPedidoCompra) {
						//this.cargarCombosEmpleadosForeignKeyLista(" where id="+this.pedidocompra.getid_empleado());
									//this.inicializarActualizarBindingPedidoCompra(false,false);
						this.empleadosForeignKey=new ArrayList<Empleado>();

						if(pedidocompra.getEmpleado()!=null) {
							this.empleadosForeignKey.add(pedidocompra.getEmpleado());
						}

						this.addItemDefectoCombosForeignKeyEmpleado();
						this.cargarCombosFrameEmpleadosForeignKey("Todos");
					}
					this.setActualEmpleadoForeignKey(this.pedidocompra.getid_empleado(),false,"Formulario");

					//Formato
					if(!this.pedidocompraConstantesFunciones.cargarid_formatoPedidoCompra || this.pedidocompraConstantesFunciones.event_dependid_formatoPedidoCompra) {
						//this.cargarCombosFormatosForeignKeyLista(" where id="+this.pedidocompra.getid_formato());
									//this.inicializarActualizarBindingPedidoCompra(false,false);
						this.formatosForeignKey=new ArrayList<Formato>();

						if(pedidocompra.getFormato()!=null) {
							this.formatosForeignKey.add(pedidocompra.getFormato());
						}

						this.addItemDefectoCombosForeignKeyFormato();
						this.cargarCombosFrameFormatosForeignKey("Todos");
					}
					this.setActualFormatoForeignKey(this.pedidocompra.getid_formato(),false,"Formulario");

					//TipoCambio
					if(!this.pedidocompraConstantesFunciones.cargarid_tipo_cambioPedidoCompra || this.pedidocompraConstantesFunciones.event_dependid_tipo_cambioPedidoCompra) {
						//this.cargarCombosTipoCambiosForeignKeyLista(" where id="+this.pedidocompra.getid_tipo_cambio());
									//this.inicializarActualizarBindingPedidoCompra(false,false);
						this.tipocambiosForeignKey=new ArrayList<TipoCambio>();

						if(pedidocompra.getTipoCambio()!=null) {
							this.tipocambiosForeignKey.add(pedidocompra.getTipoCambio());
						}

						this.addItemDefectoCombosForeignKeyTipoCambio();
						this.cargarCombosFrameTipoCambiosForeignKey("Todos");
					}
					this.setActualTipoCambioForeignKey(this.pedidocompra.getid_tipo_cambio(),false,"Formulario");
				} catch(Exception e) {
					throw e;
				}
				
				this.actualizarEstadoCeldasBotonesPedidoCompra("s", this.isGuardarCambiosEnLote, this.isEsMantenimientoRelacionado);
				
				//NO FUNCIONA BINDING PERO SE MANTIENE
				this.inicializarActualizarBindingBotonesPedidoCompra(false) ;
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualPedidoCompra() ;
			//}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesObjetoActualToFormularioTodoPedidoCompra(PedidoCompra pedidocompra) throws Exception { 
		this.setVariablesObjetoActualToFormularioTodoPedidoCompra(pedidocompra,false,"NINGUNO");
	}
	
	public void setVariablesObjetoActualToFormularioTodoPedidoCompra(PedidoCompra pedidocompra,Boolean conCargarListasDesdeObjetoActual,String sTipoEvento) throws Exception { 
		this.setVariablesObjetoActualToFormularioPedidoCompra(pedidocompra);
		
		if(conCargarListasDesdeObjetoActual) {
			this.setVariablesObjetoActualToListasForeignKeyPedidoCompra(pedidocompra,sTipoEvento);
		}
		
		this.setVariablesObjetoActualToFormularioForeignKeyPedidoCompra(pedidocompra);
	}
	
	public void setVariablesObjetoActualToFormularioPedidoCompra(PedidoCompra pedidocompra) throws Exception { 
		try {			
			Image imageActual=null;
			ImageIcon imageIcon = null;
			
			if(this.jInternalFrameDetalleFormPedidoCompra==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			
			this.jInternalFrameDetalleFormPedidoCompra.jLabelidPedidoCompra.setText(pedidocompra.getId().toString());
			this.jInternalFrameDetalleFormPedidoCompra.jTextFieldnumero_secuencialPedidoCompra.setText(pedidocompra.getnumero_secuencial());
			this.jInternalFrameDetalleFormPedidoCompra.jTextArearesponsablePedidoCompra.setText(pedidocompra.getresponsable());
			this.jInternalFrameDetalleFormPedidoCompra.jTextAreasolicitado_porPedidoCompra.setText(pedidocompra.getsolicitado_por());
			this.jInternalFrameDetalleFormPedidoCompra.jTextAreamotivo_solicitudPedidoCompra.setText(pedidocompra.getmotivo_solicitud());
			this.jInternalFrameDetalleFormPedidoCompra.jTextAreaarea_solicitudPedidoCompra.setText(pedidocompra.getarea_solicitud());
			this.jInternalFrameDetalleFormPedidoCompra.jTextAreapara_uso_dePedidoCompra.setText(pedidocompra.getpara_uso_de());
			this.jInternalFrameDetalleFormPedidoCompra.jTextFieldlugar_entregaPedidoCompra.setText(pedidocompra.getlugar_entrega());
			this.jInternalFrameDetalleFormPedidoCompra.jTextAreadescripcionPedidoCompra.setText(pedidocompra.getdescripcion());
			this.jInternalFrameDetalleFormPedidoCompra.jDateChooserfecha_emisionPedidoCompra.setDate(pedidocompra.getfecha_emision());
			this.jInternalFrameDetalleFormPedidoCompra.jDateChooserfecha_entregaPedidoCompra.setDate(pedidocompra.getfecha_entrega());
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
		}
	}
		
	public void actualizarInformacion(String sTipo,PedidoCompra pedidocompraLocal) throws Exception {
		this.actualizarInformacion(sTipo,false,pedidocompraLocal);
	}	
	
	public void actualizarInformacion(String sTipo,Boolean conParametroObjeto,PedidoCompra pedidocompraLocal) throws Exception {
		
		if(!conParametroObjeto) {
			if(!this.getEsControlTabla()) {
				pedidocompraLocal=this.pedidocompra;
			} else {
				pedidocompraLocal=this.pedidocompraAnterior;
			}
		}
		
		if(this.permiteMantenimiento(pedidocompraLocal)) {
			if(sTipo.equals("EVENTO_CONTROL")) { // || sTipo.equals("EVENTO_NUEVO")
				if(!this.esControlTabla) {
					this.setVariablesFormularioToObjetoActualTodoPedidoCompra(pedidocompraLocal,true);
					
					if(pedidocompraSessionBean.getConGuardarRelaciones()) {
						this.actualizarRelaciones(pedidocompraLocal);
					}
				}
			
			} else if(sTipo.equals("INFO_PADRE")) {
				
				if(this.pedidocompraSessionBean.getEsGuardarRelacionado()) {
					this.actualizarRelacionFkPadreActual(pedidocompraLocal);
				}
			}
		}
	}
	
	public void setVariablesFormularioToObjetoActualTodoPedidoCompra(PedidoCompra pedidocompra,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualPedidoCompra(pedidocompra,conColumnasBase);
		this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompra(pedidocompra);
	}
	
	public void setVariablesFormularioToObjetoActualPedidoCompra(PedidoCompra pedidocompra,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualPedidoCompra(pedidocompra,conColumnasBase,true);
	}
	
	public void setVariablesFormularioToObjetoActualPedidoCompra(PedidoCompra pedidocompra,Boolean conColumnasBase,Boolean conInicializarInvalidValues) throws Exception { 
		String sMensajeCampoActual="";
		Boolean estaValidado=true;
		try {
			
			if(this.jInternalFrameDetalleFormPedidoCompra==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			if(conInicializarInvalidValues) {
				this.inicializarInvalidValues();
			}
			
			

		try {
			if(this.jInternalFrameDetalleFormPedidoCompra.jLabelidPedidoCompra.getText()==null || this.jInternalFrameDetalleFormPedidoCompra.jLabelidPedidoCompra.getText()=="" || this.jInternalFrameDetalleFormPedidoCompra.jLabelidPedidoCompra.getText()=="Id") {
				this.jInternalFrameDetalleFormPedidoCompra.jLabelidPedidoCompra.setText("0");
			}

			if(conColumnasBase) {pedidocompra.setId(Long.parseLong(this.jInternalFrameDetalleFormPedidoCompra.jLabelidPedidoCompra.getText()));}
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoCompraConstantesFunciones.LABEL_ID+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompra.jLabelIdPedidoCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedidocompra.setnumero_secuencial(this.jInternalFrameDetalleFormPedidoCompra.jTextFieldnumero_secuencialPedidoCompra.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoCompraConstantesFunciones.LABEL_NUMEROSECUENCIAL+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompra.jLabelnumero_secuencialPedidoCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedidocompra.setresponsable(this.jInternalFrameDetalleFormPedidoCompra.jTextArearesponsablePedidoCompra.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoCompraConstantesFunciones.LABEL_RESPONSABLE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompra.jLabelresponsablePedidoCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedidocompra.setsolicitado_por(this.jInternalFrameDetalleFormPedidoCompra.jTextAreasolicitado_porPedidoCompra.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoCompraConstantesFunciones.LABEL_SOLICITADOPOR+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompra.jLabelsolicitado_porPedidoCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedidocompra.setmotivo_solicitud(this.jInternalFrameDetalleFormPedidoCompra.jTextAreamotivo_solicitudPedidoCompra.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoCompraConstantesFunciones.LABEL_MOTIVOSOLICITUD+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompra.jLabelmotivo_solicitudPedidoCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedidocompra.setarea_solicitud(this.jInternalFrameDetalleFormPedidoCompra.jTextAreaarea_solicitudPedidoCompra.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoCompraConstantesFunciones.LABEL_AREASOLICITUD+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompra.jLabelarea_solicitudPedidoCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedidocompra.setpara_uso_de(this.jInternalFrameDetalleFormPedidoCompra.jTextAreapara_uso_dePedidoCompra.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoCompraConstantesFunciones.LABEL_PARAUSODE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompra.jLabelpara_uso_dePedidoCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedidocompra.setlugar_entrega(this.jInternalFrameDetalleFormPedidoCompra.jTextFieldlugar_entregaPedidoCompra.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoCompraConstantesFunciones.LABEL_LUGARENTREGA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompra.jLabellugar_entregaPedidoCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedidocompra.setdescripcion(this.jInternalFrameDetalleFormPedidoCompra.jTextAreadescripcionPedidoCompra.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoCompraConstantesFunciones.LABEL_DESCRIPCION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompra.jLabeldescripcionPedidoCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedidocompra.setfecha_emision(this.jInternalFrameDetalleFormPedidoCompra.jDateChooserfecha_emisionPedidoCompra.getDate());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoCompraConstantesFunciones.LABEL_FECHAEMISION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompra.jLabelfecha_emisionPedidoCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedidocompra.setfecha_entrega(this.jInternalFrameDetalleFormPedidoCompra.jDateChooserfecha_entregaPedidoCompra.getDate());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoCompraConstantesFunciones.LABEL_FECHAENTREGA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoCompra.jLabelfecha_entregaPedidoCompra,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}
			
			if(!estaValidado) {
				throw new Exception(sMensajeCampoActual);
			}
		} catch(NumberFormatException e) {
			throw new Exception(sMensajeCampoActual);
			//FuncionesSwing.manageException(this, e,logger,MovimientoInventarioConstantesFunciones.CLASSNAME);
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualPedidoCompra(PedidoCompra pedidocompraBean,PedidoCompra pedidocompra,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setCopiarVariablesObjetosPedidoCompra(PedidoCompra pedidocompraOrigen,PedidoCompra pedidocompra,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			if(conColumnasBase) {if(conDefault || (!conDefault && pedidocompraOrigen.getId()!=null && !pedidocompraOrigen.getId().equals(0L))) {pedidocompra.setId(pedidocompraOrigen.getId());}}
			if(conDefault || (!conDefault && pedidocompraOrigen.getnumero_secuencial()!=null && !pedidocompraOrigen.getnumero_secuencial().equals(""))) {pedidocompra.setnumero_secuencial(pedidocompraOrigen.getnumero_secuencial());}
			if(conDefault || (!conDefault && pedidocompraOrigen.gettotal()!=null && !pedidocompraOrigen.gettotal().equals(0.0))) {pedidocompra.settotal(pedidocompraOrigen.gettotal());}
			if(conDefault || (!conDefault && pedidocompraOrigen.getfecha()!=null && !pedidocompraOrigen.getfecha().equals(new Date()))) {pedidocompra.setfecha(pedidocompraOrigen.getfecha());}
			if(conDefault || (!conDefault && pedidocompraOrigen.getresponsable()!=null && !pedidocompraOrigen.getresponsable().equals(""))) {pedidocompra.setresponsable(pedidocompraOrigen.getresponsable());}
			if(conDefault || (!conDefault && pedidocompraOrigen.getsolicitado_por()!=null && !pedidocompraOrigen.getsolicitado_por().equals(""))) {pedidocompra.setsolicitado_por(pedidocompraOrigen.getsolicitado_por());}
			if(conDefault || (!conDefault && pedidocompraOrigen.getmotivo_solicitud()!=null && !pedidocompraOrigen.getmotivo_solicitud().equals(""))) {pedidocompra.setmotivo_solicitud(pedidocompraOrigen.getmotivo_solicitud());}
			if(conDefault || (!conDefault && pedidocompraOrigen.getarea_solicitud()!=null && !pedidocompraOrigen.getarea_solicitud().equals(""))) {pedidocompra.setarea_solicitud(pedidocompraOrigen.getarea_solicitud());}
			if(conDefault || (!conDefault && pedidocompraOrigen.getpara_uso_de()!=null && !pedidocompraOrigen.getpara_uso_de().equals(""))) {pedidocompra.setpara_uso_de(pedidocompraOrigen.getpara_uso_de());}
			if(conDefault || (!conDefault && pedidocompraOrigen.getlugar_entrega()!=null && !pedidocompraOrigen.getlugar_entrega().equals(""))) {pedidocompra.setlugar_entrega(pedidocompraOrigen.getlugar_entrega());}
			if(conDefault || (!conDefault && pedidocompraOrigen.getdescripcion()!=null && !pedidocompraOrigen.getdescripcion().equals(""))) {pedidocompra.setdescripcion(pedidocompraOrigen.getdescripcion());}
			if(conDefault || (!conDefault && pedidocompraOrigen.getfecha_emision()!=null && !pedidocompraOrigen.getfecha_emision().equals(new Date()))) {pedidocompra.setfecha_emision(pedidocompraOrigen.getfecha_emision());}
			if(conDefault || (!conDefault && pedidocompraOrigen.getfecha_entrega()!=null && !pedidocompraOrigen.getfecha_entrega().equals(new Date()))) {pedidocompra.setfecha_entrega(pedidocompraOrigen.getfecha_entrega());}
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	/*
	public void setVariablesObjetoBeanActualToFormularioPedidoCompra(PedidoCompra pedidocompra) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormPedidoCompra.jLabelidPedidoCompra.setText(pedidocompra.getId().toString());
			this.jInternalFrameDetalleFormPedidoCompra.jTextFieldnumero_secuencialPedidoCompra.setText(pedidocompra.getnumero_secuencial());
			this.jInternalFrameDetalleFormPedidoCompra.jTextArearesponsablePedidoCompra.setText(pedidocompra.getresponsable());
			this.jInternalFrameDetalleFormPedidoCompra.jTextAreasolicitado_porPedidoCompra.setText(pedidocompra.getsolicitado_por());
			this.jInternalFrameDetalleFormPedidoCompra.jTextAreamotivo_solicitudPedidoCompra.setText(pedidocompra.getmotivo_solicitud());
			this.jInternalFrameDetalleFormPedidoCompra.jTextAreaarea_solicitudPedidoCompra.setText(pedidocompra.getarea_solicitud());
			this.jInternalFrameDetalleFormPedidoCompra.jTextAreapara_uso_dePedidoCompra.setText(pedidocompra.getpara_uso_de());
			this.jInternalFrameDetalleFormPedidoCompra.jTextFieldlugar_entregaPedidoCompra.setText(pedidocompra.getlugar_entrega());
			this.jInternalFrameDetalleFormPedidoCompra.jTextAreadescripcionPedidoCompra.setText(pedidocompra.getdescripcion());
			this.jInternalFrameDetalleFormPedidoCompra.jDateChooserfecha_emisionPedidoCompra.setDate(pedidocompra.getfecha_emision());
			this.jInternalFrameDetalleFormPedidoCompra.jDateChooserfecha_entregaPedidoCompra.setDate(pedidocompra.getfecha_entrega());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoBeanActualToFormularioPedidoCompra(PedidoCompraBean pedidocompraBean) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormPedidoCompra.jLabelidPedidoCompra.setText(pedidocompraBean.getId().toString());
			this.jInternalFrameDetalleFormPedidoCompra.jTextFieldnumero_secuencialPedidoCompra.setText(pedidocompraBean.getnumero_secuencial());
			this.jInternalFrameDetalleFormPedidoCompra.jTextArearesponsablePedidoCompra.setText(pedidocompraBean.getresponsable());
			this.jInternalFrameDetalleFormPedidoCompra.jTextAreasolicitado_porPedidoCompra.setText(pedidocompraBean.getsolicitado_por());
			this.jInternalFrameDetalleFormPedidoCompra.jTextAreamotivo_solicitudPedidoCompra.setText(pedidocompraBean.getmotivo_solicitud());
			this.jInternalFrameDetalleFormPedidoCompra.jTextAreaarea_solicitudPedidoCompra.setText(pedidocompraBean.getarea_solicitud());
			this.jInternalFrameDetalleFormPedidoCompra.jTextAreapara_uso_dePedidoCompra.setText(pedidocompraBean.getpara_uso_de());
			this.jInternalFrameDetalleFormPedidoCompra.jTextFieldlugar_entregaPedidoCompra.setText(pedidocompraBean.getlugar_entrega());
			this.jInternalFrameDetalleFormPedidoCompra.jTextAreadescripcionPedidoCompra.setText(pedidocompraBean.getdescripcion());
			this.jInternalFrameDetalleFormPedidoCompra.jDateChooserfecha_emisionPedidoCompra.setDate(pedidocompraBean.getfecha_emision());
			this.jInternalFrameDetalleFormPedidoCompra.jDateChooserfecha_entregaPedidoCompra.setDate(pedidocompraBean.getfecha_entrega());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoReturnGeneralToBeanPedidoCompra(PedidoCompraParameterReturnGeneral pedidocompraReturnGeneral,PedidoCompraBean pedidocompraBean,Boolean conDefault) throws Exception { 
		try {
			PedidoCompra pedidocompraLocal=new PedidoCompra();
			
			pedidocompraLocal=pedidocompraReturnGeneral.getPedidoCompra();
			
			
			if(conColumnasBase) {if(conDefault || (!conDefault && pedidocompraLocal.getId()!=null && !pedidocompraLocal.getId().equals(0L))) {pedidocompraBean.setId(pedidocompraLocal.getId());}}
			if(conDefault || (!conDefault && pedidocompraLocal.getnumero_secuencial()!=null && !pedidocompraLocal.getnumero_secuencial().equals(""))) {pedidocompraBean.setnumero_secuencial(pedidocompraLocal.getnumero_secuencial());}
			if(conDefault || (!conDefault && pedidocompraLocal.getresponsable()!=null && !pedidocompraLocal.getresponsable().equals(""))) {pedidocompraBean.setresponsable(pedidocompraLocal.getresponsable());}
			if(conDefault || (!conDefault && pedidocompraLocal.getsolicitado_por()!=null && !pedidocompraLocal.getsolicitado_por().equals(""))) {pedidocompraBean.setsolicitado_por(pedidocompraLocal.getsolicitado_por());}
			if(conDefault || (!conDefault && pedidocompraLocal.getmotivo_solicitud()!=null && !pedidocompraLocal.getmotivo_solicitud().equals(""))) {pedidocompraBean.setmotivo_solicitud(pedidocompraLocal.getmotivo_solicitud());}
			if(conDefault || (!conDefault && pedidocompraLocal.getarea_solicitud()!=null && !pedidocompraLocal.getarea_solicitud().equals(""))) {pedidocompraBean.setarea_solicitud(pedidocompraLocal.getarea_solicitud());}
			if(conDefault || (!conDefault && pedidocompraLocal.getpara_uso_de()!=null && !pedidocompraLocal.getpara_uso_de().equals(""))) {pedidocompraBean.setpara_uso_de(pedidocompraLocal.getpara_uso_de());}
			if(conDefault || (!conDefault && pedidocompraLocal.getlugar_entrega()!=null && !pedidocompraLocal.getlugar_entrega().equals(""))) {pedidocompraBean.setlugar_entrega(pedidocompraLocal.getlugar_entrega());}
			if(conDefault || (!conDefault && pedidocompraLocal.getdescripcion()!=null && !pedidocompraLocal.getdescripcion().equals(""))) {pedidocompraBean.setdescripcion(pedidocompraLocal.getdescripcion());}
			if(conDefault || (!conDefault && pedidocompraLocal.getfecha_emision()!=null && !pedidocompraLocal.getfecha_emision().equals(new Date()))) {pedidocompraBean.setfecha_emision(pedidocompraLocal.getfecha_emision());}
			if(conDefault || (!conDefault && pedidocompraLocal.getfecha_entrega()!=null && !pedidocompraLocal.getfecha_entrega().equals(new Date()))) {pedidocompraBean.setfecha_entrega(pedidocompraLocal.getfecha_entrega());}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	@SuppressWarnings("rawtypes")
	public static void setActualComboBoxPedidoCompraGenerico(Long idPedidoCompraSeleccionado,JComboBox jComboBoxPedidoCompra,List<PedidoCompra> pedidocomprasLocal)throws Exception {
		try {
			PedidoCompra  pedidocompraTemp=null;

			for(PedidoCompra pedidocompraAux:pedidocomprasLocal) {
				if(pedidocompraAux.getId()!=null && pedidocompraAux.getId().equals(idPedidoCompraSeleccionado)) {
					pedidocompraTemp=pedidocompraAux;
					break;
				}
			}

			jComboBoxPedidoCompra.setSelectedItem(pedidocompraTemp);

		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("rawtypes")
	public static void setHotKeysComboBoxPedidoCompraGenerico(JComboBox jComboBoxPedidoCompra,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda)throws Exception {
		try {
			//GLOBAL(id_empresa,id_sucursal,id_ejercicio)
			//BASICO(normal)
			//CON_BUSQUEDA(Permite buscar Fk)
			
			String sKeyStrokeName="";
			KeyStroke keyStrokeControl=null;
			
			if(!sTipoBusqueda.equals("GLOBAL")) {
				
				//BUSCAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSCAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSCAR");
				
				jComboBoxPedidoCompra.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxPedidoCompra.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Busqueda"));
				//BUSCAR
				
				
				//ACTUALIZAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_ACTUALIZAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_ACTUALIZAR");
				
				jComboBoxPedidoCompra.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxPedidoCompra.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Update"));
				//ACTUALIZAR
				
				if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxPedidoCompra.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
						jComboBoxPedidoCompra.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));						
					}
					
					/*
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxPedidoCompra.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					} else {
						jComboBoxPedidoCompra.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					}
					*/
				}								
				
				//CON_BUSQUEDA								
				if(sTipoBusqueda.contains("CON_BUSQUEDA")) {
					sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSQUEDA");
					keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSQUEDA");
							
					jComboBoxPedidoCompra.getInputMap().put(keyStrokeControl, sKeyStrokeName);
					jComboBoxPedidoCompra.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction));
				}
				//CON_BUSQUEDA
				
				
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	@SuppressWarnings("rawtypes")
	public void setHotKeysComboBoxGenerico(JComboBox jComboBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
			if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
				jComboBox.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			} else {
				jComboBox.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			}
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextFieldGenerico(JTextField jTextField,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextField.addFocusListener(new TextFieldFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		jTextField.addActionListener(new TextFieldActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextAreaGenerico(JTextArea jTextArea,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextArea.addFocusListener(new TextAreaFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jTextArea.addActionListener(new TextAreaActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJLabelGenerico(JLabel jLabel,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jLabel.addFocusListener(new LabelFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jLabel.addActionListener(new LabelActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJCheckBoxGenerico(JCheckBox jCheckBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jCheckBox.addFocusListener(new CheckBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//SI SE DEFINE AL CAMBIAR VALOR, ESTE NUEVO VALOR NO SE ENVIA AL EVENTO
		//jCheckBox.addItemListener(new CheckBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJDateChooserGenerico(JDateChooser jDateChooser,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		FuncionesSwing.addDateListener(jDateChooser, jInternalFrameBase, sNombreHotKeyAbstractAction);
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJButtonGenerico(JButton jButton,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jButton.addActionListener(new ButtonActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	public void jButtonRelacionActionPerformed(String sTipo,ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado) {
		//ABRIR RELACIONES
		try {
			
		if(sTipo.equals("DetallePedidoCompra")) {
			jButtonDetallePedidoCompraActionPerformed(evt,rowIndex,true,false,null);
		}
		} catch (Exception e) {
			FuncionesSwing.manageException2(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public String getDescripcionFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		String sDescripcion="";
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			pedidocompra=(PedidoCompra) pedidocompraLogic.getPedidoCompras().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			pedidocompra =(PedidoCompra) pedidocompras.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		if(sTipo.equals("Empresa")) {
			//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
			if(!pedidocompra.getIsNew() && !pedidocompra.getIsChanged() && !pedidocompra.getIsDeleted()) {
				sDescripcion=pedidocompra.getempresa_descripcion();
			} else {
				//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
				sDescripcion=pedidocompra.getempresa_descripcion();
			}
		}

		if(sTipo.equals("Sucursal")) {
			//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
			if(!pedidocompra.getIsNew() && !pedidocompra.getIsChanged() && !pedidocompra.getIsDeleted()) {
				sDescripcion=pedidocompra.getsucursal_descripcion();
			} else {
				//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
				sDescripcion=pedidocompra.getsucursal_descripcion();
			}
		}

		if(sTipo.equals("Modulo")) {
			//sDescripcion=this.getActualModuloForeignKeyDescripcion((Long)value);
			if(!pedidocompra.getIsNew() && !pedidocompra.getIsChanged() && !pedidocompra.getIsDeleted()) {
				sDescripcion=pedidocompra.getmodulo_descripcion();
			} else {
				//sDescripcion=this.getActualModuloForeignKeyDescripcion((Long)value);
				sDescripcion=pedidocompra.getmodulo_descripcion();
			}
		}

		if(sTipo.equals("Ejercicio")) {
			//sDescripcion=this.getActualEjercicioForeignKeyDescripcion((Long)value);
			if(!pedidocompra.getIsNew() && !pedidocompra.getIsChanged() && !pedidocompra.getIsDeleted()) {
				sDescripcion=pedidocompra.getejercicio_descripcion();
			} else {
				//sDescripcion=this.getActualEjercicioForeignKeyDescripcion((Long)value);
				sDescripcion=pedidocompra.getejercicio_descripcion();
			}
		}

		if(sTipo.equals("Periodo")) {
			//sDescripcion=this.getActualPeriodoForeignKeyDescripcion((Long)value);
			if(!pedidocompra.getIsNew() && !pedidocompra.getIsChanged() && !pedidocompra.getIsDeleted()) {
				sDescripcion=pedidocompra.getperiodo_descripcion();
			} else {
				//sDescripcion=this.getActualPeriodoForeignKeyDescripcion((Long)value);
				sDescripcion=pedidocompra.getperiodo_descripcion();
			}
		}

		if(sTipo.equals("Anio")) {
			//sDescripcion=this.getActualAnioForeignKeyDescripcion((Long)value);
			if(!pedidocompra.getIsNew() && !pedidocompra.getIsChanged() && !pedidocompra.getIsDeleted()) {
				sDescripcion=pedidocompra.getanio_descripcion();
			} else {
				//sDescripcion=this.getActualAnioForeignKeyDescripcion((Long)value);
				sDescripcion=pedidocompra.getanio_descripcion();
			}
		}

		if(sTipo.equals("Mes")) {
			//sDescripcion=this.getActualMesForeignKeyDescripcion((Long)value);
			if(!pedidocompra.getIsNew() && !pedidocompra.getIsChanged() && !pedidocompra.getIsDeleted()) {
				sDescripcion=pedidocompra.getmes_descripcion();
			} else {
				//sDescripcion=this.getActualMesForeignKeyDescripcion((Long)value);
				sDescripcion=pedidocompra.getmes_descripcion();
			}
		}

		if(sTipo.equals("Cliente")) {
			//sDescripcion=this.getActualClienteForeignKeyDescripcion((Long)value);
			if(!pedidocompra.getIsNew() && !pedidocompra.getIsChanged() && !pedidocompra.getIsDeleted()) {
				sDescripcion=pedidocompra.getcliente_descripcion();
			} else {
				//sDescripcion=this.getActualClienteForeignKeyDescripcion((Long)value);
				sDescripcion=pedidocompra.getcliente_descripcion();
			}
		}

		if(sTipo.equals("Usuario")) {
			//sDescripcion=this.getActualUsuarioForeignKeyDescripcion((Long)value);
			if(!pedidocompra.getIsNew() && !pedidocompra.getIsChanged() && !pedidocompra.getIsDeleted()) {
				sDescripcion=pedidocompra.getusuario_descripcion();
			} else {
				//sDescripcion=this.getActualUsuarioForeignKeyDescripcion((Long)value);
				sDescripcion=pedidocompra.getusuario_descripcion();
			}
		}

		if(sTipo.equals("Moneda")) {
			//sDescripcion=this.getActualMonedaForeignKeyDescripcion((Long)value);
			if(!pedidocompra.getIsNew() && !pedidocompra.getIsChanged() && !pedidocompra.getIsDeleted()) {
				sDescripcion=pedidocompra.getmoneda_descripcion();
			} else {
				//sDescripcion=this.getActualMonedaForeignKeyDescripcion((Long)value);
				sDescripcion=pedidocompra.getmoneda_descripcion();
			}
		}

		if(sTipo.equals("EstadoPedidoCompra")) {
			//sDescripcion=this.getActualEstadoPedidoCompraForeignKeyDescripcion((Long)value);
			if(!pedidocompra.getIsNew() && !pedidocompra.getIsChanged() && !pedidocompra.getIsDeleted()) {
				sDescripcion=pedidocompra.getestadopedidocompra_descripcion();
			} else {
				//sDescripcion=this.getActualEstadoPedidoCompraForeignKeyDescripcion((Long)value);
				sDescripcion=pedidocompra.getestadopedidocompra_descripcion();
			}
		}

		if(sTipo.equals("Empleado")) {
			//sDescripcion=this.getActualEmpleadoForeignKeyDescripcion((Long)value);
			if(!pedidocompra.getIsNew() && !pedidocompra.getIsChanged() && !pedidocompra.getIsDeleted()) {
				sDescripcion=pedidocompra.getempleado_descripcion();
			} else {
				//sDescripcion=this.getActualEmpleadoForeignKeyDescripcion((Long)value);
				sDescripcion=pedidocompra.getempleado_descripcion();
			}
		}

		if(sTipo.equals("Formato")) {
			//sDescripcion=this.getActualFormatoForeignKeyDescripcion((Long)value);
			if(!pedidocompra.getIsNew() && !pedidocompra.getIsChanged() && !pedidocompra.getIsDeleted()) {
				sDescripcion=pedidocompra.getformato_descripcion();
			} else {
				//sDescripcion=this.getActualFormatoForeignKeyDescripcion((Long)value);
				sDescripcion=pedidocompra.getformato_descripcion();
			}
		}

		if(sTipo.equals("TipoCambio")) {
			//sDescripcion=this.getActualTipoCambioForeignKeyDescripcion((Long)value);
			if(!pedidocompra.getIsNew() && !pedidocompra.getIsChanged() && !pedidocompra.getIsDeleted()) {
				sDescripcion=pedidocompra.gettipocambio_descripcion();
			} else {
				//sDescripcion=this.getActualTipoCambioForeignKeyDescripcion((Long)value);
				sDescripcion=pedidocompra.gettipocambio_descripcion();
			}
		}

		
		return sDescripcion;
	}
	
	public Color getColorFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		Color color=Color.WHITE;
		
		PedidoCompra pedidocompraRow=new PedidoCompra();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			pedidocompraRow=(PedidoCompra) pedidocompraLogic.getPedidoCompras().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			pedidocompraRow=(PedidoCompra) pedidocompras.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		
		return color;
	}
	
	
	
	
	public void jButtonDetallePedidoCompraActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,PedidoCompra pedidocompra) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormPedidoCompra==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidocompra = (PedidoCompra)this.pedidocompraLogic.getPedidoCompras().toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.pedidocompra = (PedidoCompra)this.pedidocompras.toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(pedidocompra!=null) {
						this.pedidocompra = pedidocompra;
					} else {
						this.pedidocompra = new PedidoCompra();
					}
				}

				if(this.isTienePermisosDetallePedidoCompra && this.permiteMantenimiento(this.pedidocompra)) {
					DetallePedidoCompraBeanSwingJInternalFrame detallepedidocompraBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraBeanSwingJInternalFramePopup=new DetallePedidoCompraBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						detallepedidocompraBeanSwingJInternalFrame=this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraBeanSwingJInternalFramePopup;
					} else {
						detallepedidocompraBeanSwingJInternalFrame=this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraBeanSwingJInternalFrame;
					}

					List<PedidoCompra> pedidocompras=new ArrayList<PedidoCompra>();
					pedidocompras.add(this.pedidocompra);
					if(!esRelacionado) {
						//detallepedidocompraBeanSwingJInternalFrame.detallepedidocompraSessionBean.setConGuardarRelaciones(false);
						//detallepedidocompraBeanSwingJInternalFrame.detallepedidocompraSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					detallepedidocompraBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormPedidoCompra.cargarDetallePedidoCompraBeanSwingJInternalFrame(pedidocompras,this.pedidocompra,detallepedidocompraBeanSwingJInternalFrame,/*conInicializar,*/detallepedidocompraBeanSwingJInternalFrame.detallepedidocompraSessionBean.getConGuardarRelaciones(),detallepedidocompraBeanSwingJInternalFrame.detallepedidocompraSessionBean.getEsGuardarRelacionado());
					detallepedidocompraBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						detallepedidocompraBeanSwingJInternalFrame.actualizarEstadoPanelsDetallePedidoCompra("no_relacionado");

						detallepedidocompraBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(DetallePedidoCompraConstantesFunciones.ITAMANIOFILATABLA + (DetallePedidoCompraConstantesFunciones.ITAMANIOFILATABLA/2));

						detallepedidocompraBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderPedidoCompra=(TitledBorder)this.jScrollPanelDatosPedidoCompra.getBorder();
						TitledBorder titledBorderDetallePedidoCompra=(TitledBorder)detallepedidocompraBeanSwingJInternalFrame.jScrollPanelDatosDetallePedidoCompra.getBorder();

						titledBorderDetallePedidoCompra.setTitle(titledBorderPedidoCompra.getTitle() + " -> Detalle Pedido Compra");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,detallepedidocompraBeanSwingJInternalFrame);
						}

						detallepedidocompraBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(detallepedidocompraBeanSwingJInternalFrame);

						detallepedidocompraBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.pedidocompraSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Detalle Pedido Compra",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	
	
	
	public void refrescarBindingTabla(Boolean blnSoloTabla) {
	}
	
	public void inicializarActualizarBindingBotonesManualPedidoCompra(Boolean esSetControles) {						
		if(esSetControles) {
			this.jButtonNuevoPedidoCompra.setVisible((this.isVisibilidadCeldaNuevoPedidoCompra && this.isPermisoNuevoPedidoCompra));			
			this.jButtonDuplicarPedidoCompra.setVisible((this.isVisibilidadCeldaDuplicarPedidoCompra && this.isPermisoDuplicarPedidoCompra));			
			this.jButtonCopiarPedidoCompra.setVisible((this.isVisibilidadCeldaCopiarPedidoCompra && this.isPermisoCopiarPedidoCompra));
			this.jButtonVerFormPedidoCompra.setVisible((this.isVisibilidadCeldaVerFormPedidoCompra && this.isPermisoVerFormPedidoCompra));
			
			this.jButtonAbrirOrderByPedidoCompra.setVisible((this.isVisibilidadCeldaOrdenPedidoCompra && this.isPermisoOrdenPedidoCompra));			
			
			this.jButtonNuevoRelacionesPedidoCompra.setVisible((this.isVisibilidadCeldaNuevoRelacionesPedidoCompra && this.isPermisoNuevoPedidoCompra));			
			this.jButtonNuevoGuardarCambiosPedidoCompra.setVisible((this.isVisibilidadCeldaNuevoPedidoCompra && this.isPermisoNuevoPedidoCompra && this.isPermisoGuardarCambiosPedidoCompra));
			
			if(this.jInternalFrameDetalleFormPedidoCompra!=null) {
			this.jInternalFrameDetalleFormPedidoCompra.jButtonModificarPedidoCompra.setVisible((this.isVisibilidadCeldaModificarPedidoCompra && this.isPermisoActualizarPedidoCompra));	
			this.jInternalFrameDetalleFormPedidoCompra.jButtonActualizarPedidoCompra.setVisible((this.isVisibilidadCeldaActualizarPedidoCompra && this.isPermisoActualizarPedidoCompra));	
			this.jInternalFrameDetalleFormPedidoCompra.jButtonEliminarPedidoCompra.setVisible((this.isVisibilidadCeldaEliminarPedidoCompra && this.isPermisoEliminarPedidoCompra));
			this.jInternalFrameDetalleFormPedidoCompra.jButtonCancelarPedidoCompra.setVisible(this.isVisibilidadCeldaCancelarPedidoCompra);							
			this.jInternalFrameDetalleFormPedidoCompra.jButtonGuardarCambiosPedidoCompra.setVisible((this.isVisibilidadCeldaGuardarPedidoCompra && this.isPermisoGuardarCambiosPedidoCompra));			
			
			}
						
			this.jButtonGuardarCambiosTablaPedidoCompra.setVisible((this.isVisibilidadCeldaGuardarCambiosPedidoCompra && this.isPermisoGuardarCambiosPedidoCompra));							
			
			//TOOLBAR
			
			this.jButtonNuevoToolBarPedidoCompra.setVisible((this.isVisibilidadCeldaNuevoPedidoCompra && this.isPermisoNuevoPedidoCompra));						
			this.jButtonDuplicarToolBarPedidoCompra.setVisible((this.isVisibilidadCeldaDuplicarPedidoCompra && this.isPermisoDuplicarPedidoCompra));						
			this.jButtonCopiarToolBarPedidoCompra.setVisible((this.isVisibilidadCeldaCopiarPedidoCompra && this.isPermisoCopiarPedidoCompra));			
			this.jButtonVerFormToolBarPedidoCompra.setVisible((this.isVisibilidadCeldaVerFormPedidoCompra && this.isPermisoVerFormPedidoCompra));			
			this.jButtonAbrirOrderByToolBarPedidoCompra.setVisible((this.isVisibilidadCeldaOrdenPedidoCompra && this.isPermisoOrdenPedidoCompra));
			this.jButtonNuevoRelacionesToolBarPedidoCompra.setVisible((this.isVisibilidadCeldaNuevoRelacionesPedidoCompra && this.isPermisoNuevoPedidoCompra));			
			this.jButtonNuevoGuardarCambiosToolBarPedidoCompra.setVisible((this.isVisibilidadCeldaNuevoPedidoCompra && this.isPermisoNuevoPedidoCompra && this.isPermisoGuardarCambiosPedidoCompra));			
			
			if(this.jInternalFrameDetalleFormPedidoCompra!=null) {
			this.jInternalFrameDetalleFormPedidoCompra.jButtonModificarToolBarPedidoCompra.setVisible((this.isVisibilidadCeldaModificarPedidoCompra && this.isPermisoActualizarPedidoCompra));	
			this.jInternalFrameDetalleFormPedidoCompra.jButtonActualizarToolBarPedidoCompra.setVisible((this.isVisibilidadCeldaActualizarPedidoCompra  && this.isPermisoActualizarPedidoCompra));	
			this.jInternalFrameDetalleFormPedidoCompra.jButtonEliminarToolBarPedidoCompra.setVisible((this.isVisibilidadCeldaEliminarPedidoCompra && this.isPermisoEliminarPedidoCompra));
			this.jInternalFrameDetalleFormPedidoCompra.jButtonCancelarToolBarPedidoCompra.setVisible(this.isVisibilidadCeldaCancelarPedidoCompra);				
			this.jInternalFrameDetalleFormPedidoCompra.jButtonGuardarCambiosToolBarPedidoCompra.setVisible((this.isVisibilidadCeldaGuardarPedidoCompra && this.isPermisoGuardarCambiosPedidoCompra));									
			}
			
			this.jButtonGuardarCambiosTablaToolBarPedidoCompra.setVisible((this.isVisibilidadCeldaGuardarCambiosPedidoCompra && this.isPermisoGuardarCambiosPedidoCompra));									
			
			//TOOLBAR
			
			//MENUS
			
			this.jMenuItemNuevoPedidoCompra.setVisible((this.isVisibilidadCeldaNuevoPedidoCompra && this.isPermisoNuevoPedidoCompra));			
			this.jMenuItemDuplicarPedidoCompra.setVisible((this.isVisibilidadCeldaDuplicarPedidoCompra && this.isPermisoDuplicarPedidoCompra));			
			this.jMenuItemCopiarPedidoCompra.setVisible((this.isVisibilidadCeldaCopiarPedidoCompra && this.isPermisoCopiarPedidoCompra));			
			this.jMenuItemVerFormPedidoCompra.setVisible((this.isVisibilidadCeldaVerFormPedidoCompra && this.isPermisoVerFormPedidoCompra));			
			this.jMenuItemAbrirOrderByPedidoCompra.setVisible((this.isVisibilidadCeldaOrdenPedidoCompra && this.isPermisoOrdenPedidoCompra));			
			//this.jMenuItemMostrarOcultarPedidoCompra.setVisible((this.isVisibilidadCeldaOrdenPedidoCompra && this.isPermisoOrdenPedidoCompra));
			this.jMenuItemDetalleAbrirOrderByPedidoCompra.setVisible((this.isVisibilidadCeldaOrdenPedidoCompra && this.isPermisoOrdenPedidoCompra));			
			//this.jMenuItemDetalleMostrarOcultarPedidoCompra.setVisible((this.isVisibilidadCeldaOrdenPedidoCompra && this.isPermisoOrdenPedidoCompra));			
			this.jMenuItemNuevoRelacionesPedidoCompra.setVisible((this.isVisibilidadCeldaNuevoRelacionesPedidoCompra && this.isPermisoNuevoPedidoCompra));			
			this.jMenuItemNuevoGuardarCambiosPedidoCompra.setVisible((this.isVisibilidadCeldaNuevoPedidoCompra && this.isPermisoNuevoPedidoCompra && this.isPermisoGuardarCambiosPedidoCompra));									
			
			if(this.jInternalFrameDetalleFormPedidoCompra!=null) {
			this.jInternalFrameDetalleFormPedidoCompra.jMenuItemModificarPedidoCompra.setVisible((this.isVisibilidadCeldaModificarPedidoCompra && this.isPermisoActualizarPedidoCompra));	
			this.jInternalFrameDetalleFormPedidoCompra.jMenuItemActualizarPedidoCompra.setVisible((this.isVisibilidadCeldaActualizarPedidoCompra && this.isPermisoActualizarPedidoCompra));	
			this.jInternalFrameDetalleFormPedidoCompra.jMenuItemEliminarPedidoCompra.setVisible((this.isVisibilidadCeldaEliminarPedidoCompra && this.isPermisoEliminarPedidoCompra));
			this.jInternalFrameDetalleFormPedidoCompra.jMenuItemCancelarPedidoCompra.setVisible(this.isVisibilidadCeldaCancelarPedidoCompra);				
			}
			
			this.jMenuItemGuardarCambiosPedidoCompra.setVisible((this.isVisibilidadCeldaGuardarPedidoCompra && this.isPermisoGuardarCambiosPedidoCompra));						
			this.jMenuItemGuardarCambiosTablaPedidoCompra.setVisible((this.isVisibilidadCeldaGuardarCambiosPedidoCompra && this.isPermisoGuardarCambiosPedidoCompra));						
			
			//MENUS
			
		} else {
			this.isVisibilidadCeldaNuevoPedidoCompra=this.jButtonNuevoPedidoCompra.isVisible();
			this.isVisibilidadCeldaDuplicarPedidoCompra=this.jButtonDuplicarPedidoCompra.isVisible();
			this.isVisibilidadCeldaCopiarPedidoCompra=this.jButtonCopiarPedidoCompra.isVisible();
			this.isVisibilidadCeldaVerFormPedidoCompra=this.jButtonVerFormPedidoCompra.isVisible();
			
			this.isVisibilidadCeldaOrdenPedidoCompra=this.jButtonAbrirOrderByPedidoCompra.isVisible();			
			
			this.isVisibilidadCeldaNuevoRelacionesPedidoCompra=this.jButtonNuevoRelacionesPedidoCompra.isVisible();
			this.isVisibilidadCeldaModificarPedidoCompra=this.jButtonModificarPedidoCompra.isVisible();
			
			if(this.jInternalFrameDetalleFormPedidoCompra!=null) {
			this.isVisibilidadCeldaActualizarPedidoCompra=this.jInternalFrameDetalleFormPedidoCompra.jButtonActualizarPedidoCompra.isVisible();
			this.isVisibilidadCeldaEliminarPedidoCompra=this.jInternalFrameDetalleFormPedidoCompra.jButtonEliminarPedidoCompra.isVisible();
			this.isVisibilidadCeldaCancelarPedidoCompra=this.jInternalFrameDetalleFormPedidoCompra.jButtonCancelarPedidoCompra.isVisible();
			this.isVisibilidadCeldaGuardarPedidoCompra=this.jInternalFrameDetalleFormPedidoCompra.jButtonGuardarCambiosPedidoCompra.isVisible();			
			}
			
			this.isVisibilidadCeldaGuardarCambiosPedidoCompra=this.jButtonGuardarCambiosTablaPedidoCompra.isVisible();
			
			//TOOLBAR
			
			this.isVisibilidadCeldaNuevoPedidoCompra=this.jButtonNuevoToolBarPedidoCompra.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesPedidoCompra=this.jButtonNuevoRelacionesToolBarPedidoCompra.isVisible();
			
			if(this.jInternalFrameDetalleFormPedidoCompra!=null) {
			this.isVisibilidadCeldaModificarPedidoCompra=this.jInternalFrameDetalleFormPedidoCompra.jButtonModificarToolBarPedidoCompra.isVisible();
			this.isVisibilidadCeldaActualizarPedidoCompra=this.jInternalFrameDetalleFormPedidoCompra.jButtonActualizarToolBarPedidoCompra.isVisible();
			this.isVisibilidadCeldaEliminarPedidoCompra=this.jInternalFrameDetalleFormPedidoCompra.jButtonEliminarToolBarPedidoCompra.isVisible();
			this.isVisibilidadCeldaCancelarPedidoCompra=this.jInternalFrameDetalleFormPedidoCompra.jButtonCancelarToolBarPedidoCompra.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarPedidoCompra=this.jButtonGuardarCambiosToolBarPedidoCompra.isVisible();
			this.isVisibilidadCeldaGuardarCambiosPedidoCompra=this.jButtonGuardarCambiosTablaToolBarPedidoCompra.isVisible();						
			
			//TOOLBAR
			
			//MENUS
			
			this.isVisibilidadCeldaNuevoPedidoCompra=this.jMenuItemNuevoPedidoCompra.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesPedidoCompra=this.jMenuItemNuevoRelacionesPedidoCompra.isVisible();
			
			if(this.jInternalFrameDetalleFormPedidoCompra!=null) {
			this.isVisibilidadCeldaModificarPedidoCompra=this.jInternalFrameDetalleFormPedidoCompra.jMenuItemModificarPedidoCompra.isVisible();
			this.isVisibilidadCeldaActualizarPedidoCompra=this.jInternalFrameDetalleFormPedidoCompra.jMenuItemActualizarPedidoCompra.isVisible();
			this.isVisibilidadCeldaEliminarPedidoCompra=this.jInternalFrameDetalleFormPedidoCompra.jMenuItemEliminarPedidoCompra.isVisible();
			this.isVisibilidadCeldaCancelarPedidoCompra=this.jInternalFrameDetalleFormPedidoCompra.jMenuItemCancelarPedidoCompra.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarPedidoCompra=this.jMenuItemGuardarCambiosPedidoCompra.isVisible();
			this.isVisibilidadCeldaGuardarCambiosPedidoCompra=this.jMenuItemGuardarCambiosTablaPedidoCompra.isVisible();						
			
			//MENUS
		}
	}
	
	public void inicializarActualizarBindingBotonesPedidoCompra(Boolean esInicializar) {
		if(PedidoCompraJInternalFrame.ISBINDING_MANUAL) {			
			if(this.pedidocompraSessionBean.getConGuardarRelaciones()) {
				//if(this.pedidocompraSessionBean.getEsGuardarRelacionado()) {
				
				this.actualizarEstadoCeldasBotonesConGuardarRelacionesPedidoCompra();
			}
			
			this.inicializarActualizarBindingBotonesManualPedidoCompra(true);
			
		} else {	
		}
	}		
	
	public void inicializarActualizarBindingBotonesPermisosManualPedidoCompra() {
		this.jButtonNuevoPedidoCompra.setVisible(this.isPermisoNuevoPedidoCompra);			
		this.jButtonDuplicarPedidoCompra.setVisible(this.isPermisoDuplicarPedidoCompra);			
		this.jButtonCopiarPedidoCompra.setVisible(this.isPermisoCopiarPedidoCompra);			
		this.jButtonVerFormPedidoCompra.setVisible(this.isPermisoVerFormPedidoCompra);			
		
		this.jButtonAbrirOrderByPedidoCompra.setVisible(this.isPermisoOrdenPedidoCompra);					
		
		this.jButtonNuevoRelacionesPedidoCompra.setVisible(this.isPermisoNuevoPedidoCompra);			
		
		if(this.jInternalFrameDetalleFormPedidoCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPedidoCompra.jButtonModificarPedidoCompra.setVisible(this.isPermisoActualizarPedidoCompra);	
			this.jInternalFrameDetalleFormPedidoCompra.jButtonActualizarPedidoCompra.setVisible(this.isPermisoActualizarPedidoCompra);	
			this.jInternalFrameDetalleFormPedidoCompra.jButtonEliminarPedidoCompra.setVisible(this.isPermisoEliminarPedidoCompra);
			this.jInternalFrameDetalleFormPedidoCompra.jButtonCancelarPedidoCompra.setVisible(this.isVisibilidadCeldaCancelarPedidoCompra);						
			this.jInternalFrameDetalleFormPedidoCompra.jButtonGuardarCambiosPedidoCompra.setVisible(this.isPermisoGuardarCambiosPedidoCompra);							
		}
		
		this.jButtonGuardarCambiosTablaPedidoCompra.setVisible(this.isPermisoActualizarPedidoCompra);
	}
	
	public void inicializarActualizarBindingBotonesPermisosManualFormDetallePedidoCompra() {
		this.jInternalFrameDetalleFormPedidoCompra.jButtonModificarPedidoCompra.setVisible(this.isPermisoActualizarPedidoCompra);	
		this.jInternalFrameDetalleFormPedidoCompra.jButtonActualizarPedidoCompra.setVisible(this.isPermisoActualizarPedidoCompra);	
		this.jInternalFrameDetalleFormPedidoCompra.jButtonEliminarPedidoCompra.setVisible(this.isPermisoEliminarPedidoCompra);
		this.jInternalFrameDetalleFormPedidoCompra.jButtonCancelarPedidoCompra.setVisible(this.isVisibilidadCeldaCancelarPedidoCompra);							
		this.jInternalFrameDetalleFormPedidoCompra.jButtonGuardarCambiosPedidoCompra.setVisible((this.isVisibilidadCeldaGuardarPedidoCompra && this.isPermisoGuardarCambiosPedidoCompra));			
	}
	
	public void inicializarActualizarBindingBotonesPermisosPedidoCompra() {
		if(PedidoCompraJInternalFrame.ISBINDING_MANUAL) {
			this.inicializarActualizarBindingBotonesPermisosManualPedidoCompra();
		} else {
		}
	}
	
	
	public void refrescarBindingBotonesPedidoCompra() {
	}
	
	public void jTableDatosPedidoCompraListSelectionListener(javax.swing.event.ListSelectionEvent evt) throws Exception { 
		try {
			this.seleccionarPedidoCompra(null,evt,-1);
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonidPedidoCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoCompra(this.getpedidocompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompra(this.pedidocompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidocompra =(PedidoCompra) this.pedidocompraLogic.getPedidoCompras().toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidocompra =(PedidoCompra) this.pedidocompras.toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidocompra==null) {
						this.pedidocompra = new PedidoCompra();
					}

					this.setVariablesFormularioToObjetoActualPedidoCompra(this.pedidocompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompra(this.pedidocompra);
				}

				if(this.pedidocompra.getId()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id = "+this.pedidocompra.getId().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_empresaPedidoCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoempresa=true;

			idTienePermisoempresa=this.tienePermisosUsuarioEnPaginaWebPedidoCompra(EmpresaConstantesFunciones.CLASSNAME);

			if(idTienePermisoempresa) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPedidoCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPedidoCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompra =(PedidoCompra) this.pedidocompraLogic.getPedidoCompras().toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pedidocompra =(PedidoCompra) this.pedidocompras.toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPedidoCompra(this.getpedidocompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompra(this.pedidocompra);

				this.empresaBeanSwingJInternalFrame=new EmpresaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.empresaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.empresaBeanSwingJInternalFrame.getEmpresaLogic().setConnexion(this.pedidocompraLogic.getConnexion());

				if(this.pedidocompra.getid_empresa()!=null) {
					this.empresaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.empresaBeanSwingJInternalFrame.setIdActual(this.pedidocompra.getid_empresa());
					this.empresaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpresa();
				}

				JInternalFrameBase jinternalFrame =this.empresaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPedidoCompra=(TitledBorder)this.jScrollPanelDatosPedidoCompra.getBorder();
				TitledBorder titledBorderempresa=(TitledBorder)this.empresaBeanSwingJInternalFrame.jScrollPanelDatosEmpresa.getBorder();

				titledBorderempresa.setTitle(titledBorderPedidoCompra.getTitle() + " -> Empresa");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_empresaPedidoCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoCompra(this.getpedidocompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompra(this.pedidocompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidocompra =(PedidoCompra) this.pedidocompraLogic.getPedidoCompras().toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidocompra =(PedidoCompra) this.pedidocompras.toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidocompra==null) {
						this.pedidocompra = new PedidoCompra();
					}

					this.setVariablesFormularioToObjetoActualPedidoCompra(this.pedidocompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompra(this.pedidocompra);
				}

				if(this.pedidocompra.getid_empresa()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_empresa = "+this.pedidocompra.getid_empresa().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_sucursalPedidoCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisosucursal=true;

			idTienePermisosucursal=this.tienePermisosUsuarioEnPaginaWebPedidoCompra(SucursalConstantesFunciones.CLASSNAME);

			if(idTienePermisosucursal) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPedidoCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPedidoCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompra =(PedidoCompra) this.pedidocompraLogic.getPedidoCompras().toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pedidocompra =(PedidoCompra) this.pedidocompras.toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPedidoCompra(this.getpedidocompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompra(this.pedidocompra);

				this.sucursalBeanSwingJInternalFrame=new SucursalBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.sucursalBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.sucursalBeanSwingJInternalFrame.getSucursalLogic().setConnexion(this.pedidocompraLogic.getConnexion());

				if(this.pedidocompra.getid_sucursal()!=null) {
					this.sucursalBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.sucursalBeanSwingJInternalFrame.setIdActual(this.pedidocompra.getid_sucursal());
					this.sucursalBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.inicializarActualizarBindingTablaSucursal();
				}

				JInternalFrameBase jinternalFrame =this.sucursalBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPedidoCompra=(TitledBorder)this.jScrollPanelDatosPedidoCompra.getBorder();
				TitledBorder titledBordersucursal=(TitledBorder)this.sucursalBeanSwingJInternalFrame.jScrollPanelDatosSucursal.getBorder();

				titledBordersucursal.setTitle(titledBorderPedidoCompra.getTitle() + " -> Sucursal");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_sucursalPedidoCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoCompra(this.getpedidocompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompra(this.pedidocompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidocompra =(PedidoCompra) this.pedidocompraLogic.getPedidoCompras().toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidocompra =(PedidoCompra) this.pedidocompras.toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidocompra==null) {
						this.pedidocompra = new PedidoCompra();
					}

					this.setVariablesFormularioToObjetoActualPedidoCompra(this.pedidocompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompra(this.pedidocompra);
				}

				if(this.pedidocompra.getid_sucursal()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_sucursal = "+this.pedidocompra.getid_sucursal().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_moduloPedidoCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisomodulo=true;

			idTienePermisomodulo=this.tienePermisosUsuarioEnPaginaWebPedidoCompra(ModuloConstantesFunciones.CLASSNAME);

			if(idTienePermisomodulo) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPedidoCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPedidoCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompra =(PedidoCompra) this.pedidocompraLogic.getPedidoCompras().toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pedidocompra =(PedidoCompra) this.pedidocompras.toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPedidoCompra(this.getpedidocompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompra(this.pedidocompra);

				this.moduloBeanSwingJInternalFrame=new ModuloBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.moduloBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.moduloBeanSwingJInternalFrame.getModuloLogic().setConnexion(this.pedidocompraLogic.getConnexion());

				if(this.pedidocompra.getid_modulo()!=null) {
					this.moduloBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.moduloBeanSwingJInternalFrame.setIdActual(this.pedidocompra.getid_modulo());
					this.moduloBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.moduloBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.moduloBeanSwingJInternalFrame.inicializarActualizarBindingTablaModulo();
				}

				JInternalFrameBase jinternalFrame =this.moduloBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPedidoCompra=(TitledBorder)this.jScrollPanelDatosPedidoCompra.getBorder();
				TitledBorder titledBordermodulo=(TitledBorder)this.moduloBeanSwingJInternalFrame.jScrollPanelDatosModulo.getBorder();

				titledBordermodulo.setTitle(titledBorderPedidoCompra.getTitle() + " -> Modulo");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_moduloPedidoCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoCompra(this.getpedidocompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompra(this.pedidocompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidocompra =(PedidoCompra) this.pedidocompraLogic.getPedidoCompras().toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidocompra =(PedidoCompra) this.pedidocompras.toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidocompra==null) {
						this.pedidocompra = new PedidoCompra();
					}

					this.setVariablesFormularioToObjetoActualPedidoCompra(this.pedidocompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompra(this.pedidocompra);
				}

				if(this.pedidocompra.getid_modulo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_modulo = "+this.pedidocompra.getid_modulo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_ejercicioPedidoCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoejercicio=true;

			idTienePermisoejercicio=this.tienePermisosUsuarioEnPaginaWebPedidoCompra(EjercicioConstantesFunciones.CLASSNAME);

			if(idTienePermisoejercicio) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPedidoCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPedidoCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompra =(PedidoCompra) this.pedidocompraLogic.getPedidoCompras().toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pedidocompra =(PedidoCompra) this.pedidocompras.toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPedidoCompra(this.getpedidocompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompra(this.pedidocompra);

				this.ejercicioBeanSwingJInternalFrame=new EjercicioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.ejercicioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.ejercicioBeanSwingJInternalFrame.getEjercicioLogic().setConnexion(this.pedidocompraLogic.getConnexion());

				if(this.pedidocompra.getid_ejercicio()!=null) {
					this.ejercicioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.ejercicioBeanSwingJInternalFrame.setIdActual(this.pedidocompra.getid_ejercicio());
					this.ejercicioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.ejercicioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.ejercicioBeanSwingJInternalFrame.inicializarActualizarBindingTablaEjercicio();
				}

				JInternalFrameBase jinternalFrame =this.ejercicioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPedidoCompra=(TitledBorder)this.jScrollPanelDatosPedidoCompra.getBorder();
				TitledBorder titledBorderejercicio=(TitledBorder)this.ejercicioBeanSwingJInternalFrame.jScrollPanelDatosEjercicio.getBorder();

				titledBorderejercicio.setTitle(titledBorderPedidoCompra.getTitle() + " -> Ejercicio");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_ejercicioPedidoCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoCompra(this.getpedidocompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompra(this.pedidocompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidocompra =(PedidoCompra) this.pedidocompraLogic.getPedidoCompras().toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidocompra =(PedidoCompra) this.pedidocompras.toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidocompra==null) {
						this.pedidocompra = new PedidoCompra();
					}

					this.setVariablesFormularioToObjetoActualPedidoCompra(this.pedidocompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompra(this.pedidocompra);
				}

				if(this.pedidocompra.getid_ejercicio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_ejercicio = "+this.pedidocompra.getid_ejercicio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_periodoPedidoCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoperiodo=true;

			idTienePermisoperiodo=this.tienePermisosUsuarioEnPaginaWebPedidoCompra(PeriodoConstantesFunciones.CLASSNAME);

			if(idTienePermisoperiodo) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPedidoCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPedidoCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompra =(PedidoCompra) this.pedidocompraLogic.getPedidoCompras().toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pedidocompra =(PedidoCompra) this.pedidocompras.toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPedidoCompra(this.getpedidocompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompra(this.pedidocompra);

				this.periodoBeanSwingJInternalFrame=new PeriodoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.periodoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.periodoBeanSwingJInternalFrame.getPeriodoLogic().setConnexion(this.pedidocompraLogic.getConnexion());

				if(this.pedidocompra.getid_periodo()!=null) {
					this.periodoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.periodoBeanSwingJInternalFrame.setIdActual(this.pedidocompra.getid_periodo());
					this.periodoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.periodoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.periodoBeanSwingJInternalFrame.inicializarActualizarBindingTablaPeriodo();
				}

				JInternalFrameBase jinternalFrame =this.periodoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPedidoCompra=(TitledBorder)this.jScrollPanelDatosPedidoCompra.getBorder();
				TitledBorder titledBorderperiodo=(TitledBorder)this.periodoBeanSwingJInternalFrame.jScrollPanelDatosPeriodo.getBorder();

				titledBorderperiodo.setTitle(titledBorderPedidoCompra.getTitle() + " -> Periodo");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_periodoPedidoCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoCompra(this.getpedidocompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompra(this.pedidocompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidocompra =(PedidoCompra) this.pedidocompraLogic.getPedidoCompras().toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidocompra =(PedidoCompra) this.pedidocompras.toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidocompra==null) {
						this.pedidocompra = new PedidoCompra();
					}

					this.setVariablesFormularioToObjetoActualPedidoCompra(this.pedidocompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompra(this.pedidocompra);
				}

				if(this.pedidocompra.getid_periodo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_periodo = "+this.pedidocompra.getid_periodo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_anioPedidoCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoanio=true;

			idTienePermisoanio=this.tienePermisosUsuarioEnPaginaWebPedidoCompra(AnioConstantesFunciones.CLASSNAME);

			if(idTienePermisoanio) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPedidoCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPedidoCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompra =(PedidoCompra) this.pedidocompraLogic.getPedidoCompras().toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pedidocompra =(PedidoCompra) this.pedidocompras.toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPedidoCompra(this.getpedidocompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompra(this.pedidocompra);

				this.anioBeanSwingJInternalFrame=new AnioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.anioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.anioBeanSwingJInternalFrame.getAnioLogic().setConnexion(this.pedidocompraLogic.getConnexion());

				if(this.pedidocompra.getid_anio()!=null) {
					this.anioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.anioBeanSwingJInternalFrame.setIdActual(this.pedidocompra.getid_anio());
					this.anioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.anioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.anioBeanSwingJInternalFrame.inicializarActualizarBindingTablaAnio();
				}

				JInternalFrameBase jinternalFrame =this.anioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPedidoCompra=(TitledBorder)this.jScrollPanelDatosPedidoCompra.getBorder();
				TitledBorder titledBorderanio=(TitledBorder)this.anioBeanSwingJInternalFrame.jScrollPanelDatosAnio.getBorder();

				titledBorderanio.setTitle(titledBorderPedidoCompra.getTitle() + " -> Anio");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_anioPedidoCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoCompra(this.getpedidocompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompra(this.pedidocompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidocompra =(PedidoCompra) this.pedidocompraLogic.getPedidoCompras().toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidocompra =(PedidoCompra) this.pedidocompras.toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidocompra==null) {
						this.pedidocompra = new PedidoCompra();
					}

					this.setVariablesFormularioToObjetoActualPedidoCompra(this.pedidocompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompra(this.pedidocompra);
				}

				if(this.pedidocompra.getid_anio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_anio = "+this.pedidocompra.getid_anio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_mesPedidoCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisomes=true;

			idTienePermisomes=this.tienePermisosUsuarioEnPaginaWebPedidoCompra(MesConstantesFunciones.CLASSNAME);

			if(idTienePermisomes) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPedidoCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPedidoCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompra =(PedidoCompra) this.pedidocompraLogic.getPedidoCompras().toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pedidocompra =(PedidoCompra) this.pedidocompras.toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPedidoCompra(this.getpedidocompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompra(this.pedidocompra);

				this.mesBeanSwingJInternalFrame=new MesBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.mesBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.mesBeanSwingJInternalFrame.getMesLogic().setConnexion(this.pedidocompraLogic.getConnexion());

				if(this.pedidocompra.getid_mes()!=null) {
					this.mesBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.mesBeanSwingJInternalFrame.setIdActual(this.pedidocompra.getid_mes());
					this.mesBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.mesBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.mesBeanSwingJInternalFrame.inicializarActualizarBindingTablaMes();
				}

				JInternalFrameBase jinternalFrame =this.mesBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPedidoCompra=(TitledBorder)this.jScrollPanelDatosPedidoCompra.getBorder();
				TitledBorder titledBordermes=(TitledBorder)this.mesBeanSwingJInternalFrame.jScrollPanelDatosMes.getBorder();

				titledBordermes.setTitle(titledBorderPedidoCompra.getTitle() + " -> Mes");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_mesPedidoCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoCompra(this.getpedidocompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompra(this.pedidocompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidocompra =(PedidoCompra) this.pedidocompraLogic.getPedidoCompras().toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidocompra =(PedidoCompra) this.pedidocompras.toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidocompra==null) {
						this.pedidocompra = new PedidoCompra();
					}

					this.setVariablesFormularioToObjetoActualPedidoCompra(this.pedidocompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompra(this.pedidocompra);
				}

				if(this.pedidocompra.getid_mes()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_mes = "+this.pedidocompra.getid_mes().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnumero_secuencialPedidoCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoCompra(this.getpedidocompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompra(this.pedidocompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidocompra =(PedidoCompra) this.pedidocompraLogic.getPedidoCompras().toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidocompra =(PedidoCompra) this.pedidocompras.toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidocompra==null) {
						this.pedidocompra = new PedidoCompra();
					}

					this.setVariablesFormularioToObjetoActualPedidoCompra(this.pedidocompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompra(this.pedidocompra);
				}

				if(this.pedidocompra.getnumero_secuencial()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where numero_secuencial like '%"+this.pedidocompra.getnumero_secuencial()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_clientePedidoCompraActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.clienteBeanSwingJInternalFrame=new ClienteBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.clienteBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.clienteBeanSwingJInternalFrame.sTipoBusqueda="Cliente";

			if(!this.sFinalQueryGeneral_cliente.equals("")) {
				this.clienteBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_cliente);
				this.clienteBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.clienteBeanSwingJInternalFrame.procesarBusqueda(this.clienteBeanSwingJInternalFrame.sAccionBusqueda);
				this.clienteBeanSwingJInternalFrame.inicializarActualizarBindingCliente(false);
			}

			if(!this.sFinalQueryComboCliente.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.clienteBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderPedidoCompra=null;
			TitledBorder titledBordercliente=null;

			if(!this.jScrollPanelDatosPedidoCompra.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderPedidoCompra=(TitledBorder)this.jScrollPanelDatosPedidoCompra.getBorder();
				titledBordercliente=(TitledBorder)this.clienteBeanSwingJInternalFrame.jScrollPanelDatosCliente.getBorder();

				titledBordercliente.setTitle(titledBorderPedidoCompra.getTitle() + " -> Cliente");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_clientePedidoCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocliente=true;

			idTienePermisocliente=this.tienePermisosUsuarioEnPaginaWebPedidoCompra(ClienteConstantesFunciones.CLASSNAME);

			if(idTienePermisocliente) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPedidoCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPedidoCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompra =(PedidoCompra) this.pedidocompraLogic.getPedidoCompras().toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pedidocompra =(PedidoCompra) this.pedidocompras.toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPedidoCompra(this.getpedidocompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompra(this.pedidocompra);

				this.clienteBeanSwingJInternalFrame=new ClienteBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.clienteBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.clienteBeanSwingJInternalFrame.getClienteLogic().setConnexion(this.pedidocompraLogic.getConnexion());

				if(this.pedidocompra.getid_cliente()!=null) {
					this.clienteBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.clienteBeanSwingJInternalFrame.setIdActual(this.pedidocompra.getid_cliente());
					this.clienteBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.clienteBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.clienteBeanSwingJInternalFrame.inicializarActualizarBindingTablaCliente();
				}

				JInternalFrameBase jinternalFrame =this.clienteBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPedidoCompra=(TitledBorder)this.jScrollPanelDatosPedidoCompra.getBorder();
				TitledBorder titledBordercliente=(TitledBorder)this.clienteBeanSwingJInternalFrame.jScrollPanelDatosCliente.getBorder();

				titledBordercliente.setTitle(titledBorderPedidoCompra.getTitle() + " -> Cliente");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_clientePedidoCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoCompra(this.getpedidocompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompra(this.pedidocompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidocompra =(PedidoCompra) this.pedidocompraLogic.getPedidoCompras().toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidocompra =(PedidoCompra) this.pedidocompras.toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidocompra==null) {
						this.pedidocompra = new PedidoCompra();
					}

					this.setVariablesFormularioToObjetoActualPedidoCompra(this.pedidocompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompra(this.pedidocompra);
				}

				if(this.pedidocompra.getid_cliente()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cliente = "+this.pedidocompra.getid_cliente().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_usuarioPedidoCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisousuario=true;

			idTienePermisousuario=this.tienePermisosUsuarioEnPaginaWebPedidoCompra(UsuarioConstantesFunciones.CLASSNAME);

			if(idTienePermisousuario) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPedidoCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPedidoCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompra =(PedidoCompra) this.pedidocompraLogic.getPedidoCompras().toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pedidocompra =(PedidoCompra) this.pedidocompras.toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPedidoCompra(this.getpedidocompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompra(this.pedidocompra);

				this.usuarioBeanSwingJInternalFrame=new UsuarioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.usuarioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.usuarioBeanSwingJInternalFrame.getUsuarioLogic().setConnexion(this.pedidocompraLogic.getConnexion());

				if(this.pedidocompra.getid_usuario()!=null) {
					this.usuarioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.usuarioBeanSwingJInternalFrame.setIdActual(this.pedidocompra.getid_usuario());
					this.usuarioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.usuarioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.usuarioBeanSwingJInternalFrame.inicializarActualizarBindingTablaUsuario();
				}

				JInternalFrameBase jinternalFrame =this.usuarioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPedidoCompra=(TitledBorder)this.jScrollPanelDatosPedidoCompra.getBorder();
				TitledBorder titledBorderusuario=(TitledBorder)this.usuarioBeanSwingJInternalFrame.jScrollPanelDatosUsuario.getBorder();

				titledBorderusuario.setTitle(titledBorderPedidoCompra.getTitle() + " -> Usuario");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_usuarioPedidoCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoCompra(this.getpedidocompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompra(this.pedidocompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidocompra =(PedidoCompra) this.pedidocompraLogic.getPedidoCompras().toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidocompra =(PedidoCompra) this.pedidocompras.toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidocompra==null) {
						this.pedidocompra = new PedidoCompra();
					}

					this.setVariablesFormularioToObjetoActualPedidoCompra(this.pedidocompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompra(this.pedidocompra);
				}

				if(this.pedidocompra.getid_usuario()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_usuario = "+this.pedidocompra.getid_usuario().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_monedaPedidoCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisomoneda=true;

			idTienePermisomoneda=this.tienePermisosUsuarioEnPaginaWebPedidoCompra(MonedaConstantesFunciones.CLASSNAME);

			if(idTienePermisomoneda) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPedidoCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPedidoCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompra =(PedidoCompra) this.pedidocompraLogic.getPedidoCompras().toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pedidocompra =(PedidoCompra) this.pedidocompras.toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPedidoCompra(this.getpedidocompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompra(this.pedidocompra);

				this.monedaBeanSwingJInternalFrame=new MonedaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.monedaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.monedaBeanSwingJInternalFrame.getMonedaLogic().setConnexion(this.pedidocompraLogic.getConnexion());

				if(this.pedidocompra.getid_moneda()!=null) {
					this.monedaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.monedaBeanSwingJInternalFrame.setIdActual(this.pedidocompra.getid_moneda());
					this.monedaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.monedaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.monedaBeanSwingJInternalFrame.inicializarActualizarBindingTablaMoneda();
				}

				JInternalFrameBase jinternalFrame =this.monedaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPedidoCompra=(TitledBorder)this.jScrollPanelDatosPedidoCompra.getBorder();
				TitledBorder titledBordermoneda=(TitledBorder)this.monedaBeanSwingJInternalFrame.jScrollPanelDatosMoneda.getBorder();

				titledBordermoneda.setTitle(titledBorderPedidoCompra.getTitle() + " -> Moneda");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_monedaPedidoCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoCompra(this.getpedidocompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompra(this.pedidocompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidocompra =(PedidoCompra) this.pedidocompraLogic.getPedidoCompras().toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidocompra =(PedidoCompra) this.pedidocompras.toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidocompra==null) {
						this.pedidocompra = new PedidoCompra();
					}

					this.setVariablesFormularioToObjetoActualPedidoCompra(this.pedidocompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompra(this.pedidocompra);
				}

				if(this.pedidocompra.getid_moneda()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_moneda = "+this.pedidocompra.getid_moneda().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_estado_pedido_compraPedidoCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoestadopedidocompra=true;

			idTienePermisoestadopedidocompra=this.tienePermisosUsuarioEnPaginaWebPedidoCompra(EstadoPedidoCompraConstantesFunciones.CLASSNAME);

			if(idTienePermisoestadopedidocompra) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPedidoCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPedidoCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompra =(PedidoCompra) this.pedidocompraLogic.getPedidoCompras().toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pedidocompra =(PedidoCompra) this.pedidocompras.toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPedidoCompra(this.getpedidocompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompra(this.pedidocompra);

				this.estadopedidocompraBeanSwingJInternalFrame=new EstadoPedidoCompraBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.estadopedidocompraBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.estadopedidocompraBeanSwingJInternalFrame.getEstadoPedidoCompraLogic().setConnexion(this.pedidocompraLogic.getConnexion());

				if(this.pedidocompra.getid_estado_pedido_compra()!=null) {
					this.estadopedidocompraBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.estadopedidocompraBeanSwingJInternalFrame.setIdActual(this.pedidocompra.getid_estado_pedido_compra());
					this.estadopedidocompraBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.estadopedidocompraBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.estadopedidocompraBeanSwingJInternalFrame.inicializarActualizarBindingTablaEstadoPedidoCompra();
				}

				JInternalFrameBase jinternalFrame =this.estadopedidocompraBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPedidoCompra=(TitledBorder)this.jScrollPanelDatosPedidoCompra.getBorder();
				TitledBorder titledBorderestadopedidocompra=(TitledBorder)this.estadopedidocompraBeanSwingJInternalFrame.jScrollPanelDatosEstadoPedidoCompra.getBorder();

				titledBorderestadopedidocompra.setTitle(titledBorderPedidoCompra.getTitle() + " -> Estado Pedido Compra");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_estado_pedido_compraPedidoCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoCompra(this.getpedidocompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompra(this.pedidocompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidocompra =(PedidoCompra) this.pedidocompraLogic.getPedidoCompras().toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidocompra =(PedidoCompra) this.pedidocompras.toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidocompra==null) {
						this.pedidocompra = new PedidoCompra();
					}

					this.setVariablesFormularioToObjetoActualPedidoCompra(this.pedidocompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompra(this.pedidocompra);
				}

				if(this.pedidocompra.getid_estado_pedido_compra()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_estado_pedido_compra = "+this.pedidocompra.getid_estado_pedido_compra().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtontotalPedidoCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoCompra(this.getpedidocompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompra(this.pedidocompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidocompra =(PedidoCompra) this.pedidocompraLogic.getPedidoCompras().toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidocompra =(PedidoCompra) this.pedidocompras.toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidocompra==null) {
						this.pedidocompra = new PedidoCompra();
					}

					this.setVariablesFormularioToObjetoActualPedidoCompra(this.pedidocompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompra(this.pedidocompra);
				}

				if(this.pedidocompra.gettotal()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where total = "+this.pedidocompra.gettotal().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfechaPedidoCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoCompra(this.getpedidocompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompra(this.pedidocompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidocompra =(PedidoCompra) this.pedidocompraLogic.getPedidoCompras().toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidocompra =(PedidoCompra) this.pedidocompras.toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidocompra==null) {
						this.pedidocompra = new PedidoCompra();
					}

					this.setVariablesFormularioToObjetoActualPedidoCompra(this.pedidocompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompra(this.pedidocompra);
				}

				if(this.pedidocompra.getfecha()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha = '"+Funciones2.getStringPostgresDate(this.pedidocompra.getfecha())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_empleadoPedidoCompraActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.empleadoBeanSwingJInternalFrame=new EmpleadoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.empleadoBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.empleadoBeanSwingJInternalFrame.sTipoBusqueda="Empleado";

			if(!this.sFinalQueryGeneral_empleado.equals("")) {
				this.empleadoBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_empleado);
				this.empleadoBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.empleadoBeanSwingJInternalFrame.procesarBusqueda(this.empleadoBeanSwingJInternalFrame.sAccionBusqueda);
				this.empleadoBeanSwingJInternalFrame.inicializarActualizarBindingEmpleado(false);
			}

			if(!this.sFinalQueryComboEmpleado.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.empleadoBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderPedidoCompra=null;
			TitledBorder titledBorderempleado=null;

			if(!this.jScrollPanelDatosPedidoCompra.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderPedidoCompra=(TitledBorder)this.jScrollPanelDatosPedidoCompra.getBorder();
				titledBorderempleado=(TitledBorder)this.empleadoBeanSwingJInternalFrame.jScrollPanelDatosEmpleado.getBorder();

				titledBorderempleado.setTitle(titledBorderPedidoCompra.getTitle() + " -> Empleado");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_empleadoPedidoCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoempleado=true;

			idTienePermisoempleado=this.tienePermisosUsuarioEnPaginaWebPedidoCompra(EmpleadoConstantesFunciones.CLASSNAME);

			if(idTienePermisoempleado) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPedidoCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPedidoCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompra =(PedidoCompra) this.pedidocompraLogic.getPedidoCompras().toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pedidocompra =(PedidoCompra) this.pedidocompras.toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPedidoCompra(this.getpedidocompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompra(this.pedidocompra);

				this.empleadoBeanSwingJInternalFrame=new EmpleadoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.empleadoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.empleadoBeanSwingJInternalFrame.getEmpleadoLogic().setConnexion(this.pedidocompraLogic.getConnexion());

				if(this.pedidocompra.getid_empleado()!=null) {
					this.empleadoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.empleadoBeanSwingJInternalFrame.setIdActual(this.pedidocompra.getid_empleado());
					this.empleadoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.empleadoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.empleadoBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpleado();
				}

				JInternalFrameBase jinternalFrame =this.empleadoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPedidoCompra=(TitledBorder)this.jScrollPanelDatosPedidoCompra.getBorder();
				TitledBorder titledBorderempleado=(TitledBorder)this.empleadoBeanSwingJInternalFrame.jScrollPanelDatosEmpleado.getBorder();

				titledBorderempleado.setTitle(titledBorderPedidoCompra.getTitle() + " -> Empleado");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_empleadoPedidoCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoCompra(this.getpedidocompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompra(this.pedidocompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidocompra =(PedidoCompra) this.pedidocompraLogic.getPedidoCompras().toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidocompra =(PedidoCompra) this.pedidocompras.toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidocompra==null) {
						this.pedidocompra = new PedidoCompra();
					}

					this.setVariablesFormularioToObjetoActualPedidoCompra(this.pedidocompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompra(this.pedidocompra);
				}

				if(this.pedidocompra.getid_empleado()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_empleado = "+this.pedidocompra.getid_empleado().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonresponsablePedidoCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoCompra(this.getpedidocompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompra(this.pedidocompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidocompra =(PedidoCompra) this.pedidocompraLogic.getPedidoCompras().toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidocompra =(PedidoCompra) this.pedidocompras.toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidocompra==null) {
						this.pedidocompra = new PedidoCompra();
					}

					this.setVariablesFormularioToObjetoActualPedidoCompra(this.pedidocompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompra(this.pedidocompra);
				}

				if(this.pedidocompra.getresponsable()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where responsable like '%"+this.pedidocompra.getresponsable()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonsolicitado_porPedidoCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoCompra(this.getpedidocompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompra(this.pedidocompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidocompra =(PedidoCompra) this.pedidocompraLogic.getPedidoCompras().toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidocompra =(PedidoCompra) this.pedidocompras.toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidocompra==null) {
						this.pedidocompra = new PedidoCompra();
					}

					this.setVariablesFormularioToObjetoActualPedidoCompra(this.pedidocompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompra(this.pedidocompra);
				}

				if(this.pedidocompra.getsolicitado_por()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where solicitado_por like '%"+this.pedidocompra.getsolicitado_por()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonmotivo_solicitudPedidoCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoCompra(this.getpedidocompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompra(this.pedidocompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidocompra =(PedidoCompra) this.pedidocompraLogic.getPedidoCompras().toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidocompra =(PedidoCompra) this.pedidocompras.toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidocompra==null) {
						this.pedidocompra = new PedidoCompra();
					}

					this.setVariablesFormularioToObjetoActualPedidoCompra(this.pedidocompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompra(this.pedidocompra);
				}

				if(this.pedidocompra.getmotivo_solicitud()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where motivo_solicitud like '%"+this.pedidocompra.getmotivo_solicitud()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonarea_solicitudPedidoCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoCompra(this.getpedidocompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompra(this.pedidocompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidocompra =(PedidoCompra) this.pedidocompraLogic.getPedidoCompras().toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidocompra =(PedidoCompra) this.pedidocompras.toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidocompra==null) {
						this.pedidocompra = new PedidoCompra();
					}

					this.setVariablesFormularioToObjetoActualPedidoCompra(this.pedidocompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompra(this.pedidocompra);
				}

				if(this.pedidocompra.getarea_solicitud()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where area_solicitud like '%"+this.pedidocompra.getarea_solicitud()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonpara_uso_dePedidoCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoCompra(this.getpedidocompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompra(this.pedidocompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidocompra =(PedidoCompra) this.pedidocompraLogic.getPedidoCompras().toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidocompra =(PedidoCompra) this.pedidocompras.toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidocompra==null) {
						this.pedidocompra = new PedidoCompra();
					}

					this.setVariablesFormularioToObjetoActualPedidoCompra(this.pedidocompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompra(this.pedidocompra);
				}

				if(this.pedidocompra.getpara_uso_de()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where para_uso_de like '%"+this.pedidocompra.getpara_uso_de()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonlugar_entregaPedidoCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoCompra(this.getpedidocompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompra(this.pedidocompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidocompra =(PedidoCompra) this.pedidocompraLogic.getPedidoCompras().toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidocompra =(PedidoCompra) this.pedidocompras.toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidocompra==null) {
						this.pedidocompra = new PedidoCompra();
					}

					this.setVariablesFormularioToObjetoActualPedidoCompra(this.pedidocompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompra(this.pedidocompra);
				}

				if(this.pedidocompra.getlugar_entrega()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where lugar_entrega like '%"+this.pedidocompra.getlugar_entrega()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtondescripcionPedidoCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoCompra(this.getpedidocompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompra(this.pedidocompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidocompra =(PedidoCompra) this.pedidocompraLogic.getPedidoCompras().toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidocompra =(PedidoCompra) this.pedidocompras.toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidocompra==null) {
						this.pedidocompra = new PedidoCompra();
					}

					this.setVariablesFormularioToObjetoActualPedidoCompra(this.pedidocompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompra(this.pedidocompra);
				}

				if(this.pedidocompra.getdescripcion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where descripcion like '%"+this.pedidocompra.getdescripcion()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfecha_emisionPedidoCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoCompra(this.getpedidocompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompra(this.pedidocompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidocompra =(PedidoCompra) this.pedidocompraLogic.getPedidoCompras().toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidocompra =(PedidoCompra) this.pedidocompras.toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidocompra==null) {
						this.pedidocompra = new PedidoCompra();
					}

					this.setVariablesFormularioToObjetoActualPedidoCompra(this.pedidocompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompra(this.pedidocompra);
				}

				if(this.pedidocompra.getfecha_emision()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha_emision = '"+Funciones2.getStringPostgresDate(this.pedidocompra.getfecha_emision())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfecha_entregaPedidoCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoCompra(this.getpedidocompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompra(this.pedidocompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidocompra =(PedidoCompra) this.pedidocompraLogic.getPedidoCompras().toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidocompra =(PedidoCompra) this.pedidocompras.toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidocompra==null) {
						this.pedidocompra = new PedidoCompra();
					}

					this.setVariablesFormularioToObjetoActualPedidoCompra(this.pedidocompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompra(this.pedidocompra);
				}

				if(this.pedidocompra.getfecha_entrega()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha_entrega = '"+Funciones2.getStringPostgresDate(this.pedidocompra.getfecha_entrega())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_formatoPedidoCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoformato=true;

			idTienePermisoformato=this.tienePermisosUsuarioEnPaginaWebPedidoCompra(FormatoConstantesFunciones.CLASSNAME);

			if(idTienePermisoformato) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPedidoCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPedidoCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompra =(PedidoCompra) this.pedidocompraLogic.getPedidoCompras().toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pedidocompra =(PedidoCompra) this.pedidocompras.toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPedidoCompra(this.getpedidocompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompra(this.pedidocompra);

				this.formatoBeanSwingJInternalFrame=new FormatoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.formatoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.formatoBeanSwingJInternalFrame.getFormatoLogic().setConnexion(this.pedidocompraLogic.getConnexion());

				if(this.pedidocompra.getid_formato()!=null) {
					this.formatoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.formatoBeanSwingJInternalFrame.setIdActual(this.pedidocompra.getid_formato());
					this.formatoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.formatoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.formatoBeanSwingJInternalFrame.inicializarActualizarBindingTablaFormato();
				}

				JInternalFrameBase jinternalFrame =this.formatoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPedidoCompra=(TitledBorder)this.jScrollPanelDatosPedidoCompra.getBorder();
				TitledBorder titledBorderformato=(TitledBorder)this.formatoBeanSwingJInternalFrame.jScrollPanelDatosFormato.getBorder();

				titledBorderformato.setTitle(titledBorderPedidoCompra.getTitle() + " -> Formato");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_formatoPedidoCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoCompra(this.getpedidocompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompra(this.pedidocompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidocompra =(PedidoCompra) this.pedidocompraLogic.getPedidoCompras().toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidocompra =(PedidoCompra) this.pedidocompras.toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidocompra==null) {
						this.pedidocompra = new PedidoCompra();
					}

					this.setVariablesFormularioToObjetoActualPedidoCompra(this.pedidocompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompra(this.pedidocompra);
				}

				if(this.pedidocompra.getid_formato()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_formato = "+this.pedidocompra.getid_formato().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_cambioPedidoCompraActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.tipocambioBeanSwingJInternalFrame=new TipoCambioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.tipocambioBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.tipocambioBeanSwingJInternalFrame.sTipoBusqueda="TipoCambio";

			if(!this.sFinalQueryGeneral_tipocambio.equals("")) {
				this.tipocambioBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_tipocambio);
				this.tipocambioBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.tipocambioBeanSwingJInternalFrame.procesarBusqueda(this.tipocambioBeanSwingJInternalFrame.sAccionBusqueda);
				this.tipocambioBeanSwingJInternalFrame.inicializarActualizarBindingTipoCambio(false);
			}

			if(!this.sFinalQueryComboTipoCambio.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.tipocambioBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderPedidoCompra=null;
			TitledBorder titledBordertipocambio=null;

			if(!this.jScrollPanelDatosPedidoCompra.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderPedidoCompra=(TitledBorder)this.jScrollPanelDatosPedidoCompra.getBorder();
				titledBordertipocambio=(TitledBorder)this.tipocambioBeanSwingJInternalFrame.jScrollPanelDatosTipoCambio.getBorder();

				titledBordertipocambio.setTitle(titledBorderPedidoCompra.getTitle() + " -> Tipo Cambio");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_tipo_cambioPedidoCompraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipocambio=true;

			idTienePermisotipocambio=this.tienePermisosUsuarioEnPaginaWebPedidoCompra(TipoCambioConstantesFunciones.CLASSNAME);

			if(idTienePermisotipocambio) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompra.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPedidoCompra.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPedidoCompra.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompra =(PedidoCompra) this.pedidocompraLogic.getPedidoCompras().toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pedidocompra =(PedidoCompra) this.pedidocompras.toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPedidoCompra(this.getpedidocompra(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompra(this.pedidocompra);

				this.tipocambioBeanSwingJInternalFrame=new TipoCambioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipocambioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipocambioBeanSwingJInternalFrame.getTipoCambioLogic().setConnexion(this.pedidocompraLogic.getConnexion());

				if(this.pedidocompra.getid_tipo_cambio()!=null) {
					this.tipocambioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipocambioBeanSwingJInternalFrame.setIdActual(this.pedidocompra.getid_tipo_cambio());
					this.tipocambioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipocambioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipocambioBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoCambio();
				}

				JInternalFrameBase jinternalFrame =this.tipocambioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPedidoCompra=(TitledBorder)this.jScrollPanelDatosPedidoCompra.getBorder();
				TitledBorder titledBordertipocambio=(TitledBorder)this.tipocambioBeanSwingJInternalFrame.jScrollPanelDatosTipoCambio.getBorder();

				titledBordertipocambio.setTitle(titledBorderPedidoCompra.getTitle() + " -> Tipo Cambio");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_cambioPedidoCompraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoCompra.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoCompra(this.getpedidocompra(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompra(this.pedidocompra);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidocompra =(PedidoCompra) this.pedidocompraLogic.getPedidoCompras().toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidocompra =(PedidoCompra) this.pedidocompras.toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidocompra==null) {
						this.pedidocompra = new PedidoCompra();
					}

					this.setVariablesFormularioToObjetoActualPedidoCompra(this.pedidocompra,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompra(this.pedidocompra);
				}

				if(this.pedidocompra.getid_tipo_cambio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_cambio = "+this.pedidocompra.getid_tipo_cambio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoCompra(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraLogic.closeNewConnexionToDeep();
				}

			}
		}

	
	
	public void jButtonFK_IdAnioPedidoCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPedidoCompra(false,false);

			this.getPedidoComprasFK_IdAnio();

			this.inicializarActualizarBindingPedidoCompra(false);

			//if(PedidoCompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPedidoCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdClientePedidoCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPedidoCompra(false,false);

			this.getPedidoComprasFK_IdCliente();

			this.inicializarActualizarBindingPedidoCompra(false);

			//if(PedidoCompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPedidoCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEjercicioPedidoCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPedidoCompra(false,false);

			this.getPedidoComprasFK_IdEjercicio();

			this.inicializarActualizarBindingPedidoCompra(false);

			//if(PedidoCompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPedidoCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEmpleadoPedidoCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPedidoCompra(false,false);

			this.getPedidoComprasFK_IdEmpleado();

			this.inicializarActualizarBindingPedidoCompra(false);

			//if(PedidoCompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPedidoCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEmpresaPedidoCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPedidoCompra(false,false);

			this.getPedidoComprasFK_IdEmpresa();

			this.inicializarActualizarBindingPedidoCompra(false);

			//if(PedidoCompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPedidoCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPedidoCompra(false,false);

			this.getPedidoComprasFK_IdEstadoPedidoCompraEstadoPedoCompra();

			this.inicializarActualizarBindingPedidoCompra(false);

			//if(PedidoCompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPedidoCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdFormatoPedidoCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPedidoCompra(false,false);

			this.getPedidoComprasFK_IdFormato();

			this.inicializarActualizarBindingPedidoCompra(false);

			//if(PedidoCompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPedidoCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdMesPedidoCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPedidoCompra(false,false);

			this.getPedidoComprasFK_IdMes();

			this.inicializarActualizarBindingPedidoCompra(false);

			//if(PedidoCompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPedidoCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdModuloPedidoCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPedidoCompra(false,false);

			this.getPedidoComprasFK_IdModulo();

			this.inicializarActualizarBindingPedidoCompra(false);

			//if(PedidoCompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPedidoCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdMonedaPedidoCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPedidoCompra(false,false);

			this.getPedidoComprasFK_IdMoneda();

			this.inicializarActualizarBindingPedidoCompra(false);

			//if(PedidoCompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPedidoCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdPeriodoPedidoCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPedidoCompra(false,false);

			this.getPedidoComprasFK_IdPeriodo();

			this.inicializarActualizarBindingPedidoCompra(false);

			//if(PedidoCompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPedidoCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdSucursalPedidoCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPedidoCompra(false,false);

			this.getPedidoComprasFK_IdSucursal();

			this.inicializarActualizarBindingPedidoCompra(false);

			//if(PedidoCompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPedidoCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoCambioPedidoCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPedidoCompra(false,false);

			this.getPedidoComprasFK_IdTipoCambio();

			this.inicializarActualizarBindingPedidoCompra(false);

			//if(PedidoCompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPedidoCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdUsuarioPedidoCompraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPedidoCompra(false,false);

			this.getPedidoComprasFK_IdUsuario();

			this.inicializarActualizarBindingPedidoCompra(false);

			//if(PedidoCompraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPedidoCompra(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidocompraLogic.closeNewConnexionToDeep();
			}
		}
	}

	
	public void closingInternalFramePedidoCompra() {
		if(this.jInternalFrameDetalleFormPedidoCompra!=null) {
		

		if(this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraBeanSwingJInternalFramePopup=null;
		}	
		
		
		}
		
		if(this.jInternalFrameDetalleFormPedidoCompra!=null) {
			this.jInternalFrameDetalleFormPedidoCompra.setVisible(false);	    			
			this.jInternalFrameDetalleFormPedidoCompra.dispose();
			this.jInternalFrameDetalleFormPedidoCompra=null;
		}
		
		
		if(this.jInternalFrameReporteDinamicoPedidoCompra!=null) {
			this.jInternalFrameReporteDinamicoPedidoCompra.setVisible(false);	    			
			this.jInternalFrameReporteDinamicoPedidoCompra.dispose();
			this.jInternalFrameReporteDinamicoPedidoCompra=null;
		}
		
		if(this.jInternalFrameImportacionPedidoCompra!=null) {
			this.jInternalFrameImportacionPedidoCompra.setVisible(false);	    			
			this.jInternalFrameImportacionPedidoCompra.dispose();
			this.jInternalFrameImportacionPedidoCompra=null;
		}		
		
		
		this.setVisible(false);
		this.dispose();
		//this=null;
	}
	
	
	
	public void jButtonActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {			
			this.startProcessPedidoCompra();
			
			PedidoCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.pedidocompra,new Object(),this.pedidocompraParameterGeneral,this.pedidocompraReturnGeneral);
			
			
			if(sTipo.equals("NuevoPedidoCompra")) {
				jButtonNuevoPedidoCompraActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarPedidoCompra")) {
				jButtonDuplicarPedidoCompraActionPerformed(evt,false);
			} else if(sTipo.equals("CopiarPedidoCompra")) {
				jButtonCopiarPedidoCompraActionPerformed(evt);
			} else if(sTipo.equals("VerFormPedidoCompra")) {
				jButtonVerFormPedidoCompraActionPerformed(evt);
			} else if(sTipo.equals("NuevoToolBarPedidoCompra")) {
				jButtonNuevoPedidoCompraActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarToolBarPedidoCompra")) {
				jButtonDuplicarPedidoCompraActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemNuevoPedidoCompra")) {
				jButtonNuevoPedidoCompraActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemDuplicarPedidoCompra")) {
				jButtonDuplicarPedidoCompraActionPerformed(evt,false);
			} else if(sTipo.equals("NuevoRelacionesPedidoCompra")) {
				jButtonNuevoPedidoCompraActionPerformed(evt,true);
			} else if(sTipo.equals("NuevoRelacionesToolBarPedidoCompra")) {
				jButtonNuevoPedidoCompraActionPerformed(evt,true);
			} else if(sTipo.equals("MenuItemNuevoRelacionesPedidoCompra")) {
				jButtonNuevoPedidoCompraActionPerformed(evt,true);
			} else if(sTipo.equals("ModificarPedidoCompra")) {
				jButtonModificarPedidoCompraActionPerformed(evt);
			} else if(sTipo.equals("ModificarToolBarPedidoCompra")) {
				jButtonModificarPedidoCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemModificarPedidoCompra")) {
				jButtonModificarPedidoCompraActionPerformed(evt);
			} else if(sTipo.equals("ActualizarPedidoCompra")) {
				jButtonActualizarPedidoCompraActionPerformed(evt);
			} else if(sTipo.equals("ActualizarToolBarPedidoCompra")) {
				jButtonActualizarPedidoCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemActualizarPedidoCompra")) {
				jButtonActualizarPedidoCompraActionPerformed(evt);
			} else if(sTipo.equals("EliminarPedidoCompra")) {
				jButtonEliminarPedidoCompraActionPerformed(evt);
			} else if(sTipo.equals("EliminarToolBarPedidoCompra")) {
				jButtonEliminarPedidoCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemEliminarPedidoCompra")) {
				jButtonEliminarPedidoCompraActionPerformed(evt);
			} else if(sTipo.equals("CancelarPedidoCompra")) {
				jButtonCancelarPedidoCompraActionPerformed(evt);
			} else if(sTipo.equals("CancelarToolBarPedidoCompra")) {
				jButtonCancelarPedidoCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCancelarPedidoCompra")) {
				jButtonCancelarPedidoCompraActionPerformed(evt);
			} else if(sTipo.equals("CerrarPedidoCompra")) {
				jButtonCerrarPedidoCompraActionPerformed(evt);
			} else if(sTipo.equals("CerrarToolBarPedidoCompra")) {
				jButtonCerrarPedidoCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCerrarPedidoCompra")) {
				jButtonCerrarPedidoCompraActionPerformed(evt);
			} else if(sTipo.equals("MostrarOcultarToolBarPedidoCompra")) {
				jButtonMostrarOcultarPedidoCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemDetalleCerrarPedidoCompra")) {
				jButtonCancelarPedidoCompraActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosPedidoCompra")) {
				jButtonGuardarCambiosPedidoCompraActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosToolBarPedidoCompra")) {
				jButtonGuardarCambiosPedidoCompraActionPerformed(evt);
			} else if(sTipo.equals("CopiarToolBarPedidoCompra")) {
				jButtonCopiarPedidoCompraActionPerformed(evt);
			} else if(sTipo.equals("VerFormToolBarPedidoCompra")) {
				jButtonVerFormPedidoCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosPedidoCompra")) {
				jButtonGuardarCambiosPedidoCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCopiarPedidoCompra")) {
				jButtonCopiarPedidoCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemVerFormPedidoCompra")) {
				jButtonVerFormPedidoCompraActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaPedidoCompra")) {
				jButtonGuardarCambiosPedidoCompraActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaToolBarPedidoCompra")) {
				jButtonGuardarCambiosPedidoCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosTablaPedidoCompra")) {
				jButtonGuardarCambiosPedidoCompraActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionPedidoCompra")) {
				jButtonRecargarInformacionPedidoCompraActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionToolBarPedidoCompra")) {
				jButtonRecargarInformacionPedidoCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemRecargarInformacionPedidoCompra")) {
				jButtonRecargarInformacionPedidoCompraActionPerformed(evt);
			}
			else if(sTipo.equals("AnterioresPedidoCompra")) {
				jButtonAnterioresPedidoCompraActionPerformed(evt);
			} else if(sTipo.equals("AnterioresToolBarPedidoCompra")) {
				jButtonAnterioresPedidoCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAnteriorePedidoCompra")) {
				jButtonAnterioresPedidoCompraActionPerformed(evt);
			} else if(sTipo.equals("SiguientesPedidoCompra")) {
				jButtonSiguientesPedidoCompraActionPerformed(evt);
			} else if(sTipo.equals("SiguientesToolBarPedidoCompra")) {
				jButtonSiguientesPedidoCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemSiguientesPedidoCompra")) {
				jButtonSiguientesPedidoCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAbrirOrderByPedidoCompra") || sTipo.equals("MenuItemDetalleAbrirOrderByPedidoCompra")) {
				jButtonAbrirOrderByPedidoCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemMostrarOcultarPedidoCompra") || sTipo.equals("MenuItemDetalleMostrarOcultarPedidoCompra")) {
				jButtonMostrarOcultarPedidoCompraActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosPedidoCompra")) {
				jButtonNuevoGuardarCambiosPedidoCompraActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosToolBarPedidoCompra")) {
				jButtonNuevoGuardarCambiosPedidoCompraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemNuevoGuardarCambiosPedidoCompra")) {
				jButtonNuevoGuardarCambiosPedidoCompraActionPerformed(evt);
			} 
			else if(sTipo.equals("CerrarReporteDinamicoPedidoCompra")) {
				jButtonCerrarReporteDinamicoPedidoCompraActionPerformed(evt);
			} else if(sTipo.equals("GenerarReporteDinamicoPedidoCompra")) {
				jButtonGenerarReporteDinamicoPedidoCompraActionPerformed(evt);
			} else if(sTipo.equals("GenerarExcelReporteDinamicoPedidoCompra")) {
				
				jButtonGenerarExcelReporteDinamicoPedidoCompraActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarImportacionPedidoCompra")) {
				jButtonCerrarImportacionPedidoCompraActionPerformed(evt);
			} else if(sTipo.equals("GenerarImportacionPedidoCompra")) {
				
				jButtonGenerarImportacionPedidoCompraActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirImportacionPedidoCompra")) {
				
				jButtonAbrirImportacionPedidoCompraActionPerformed(evt);
				
			} else if(sTipo.equals("TiposAccionesPedidoCompra")) {
				jComboBoxTiposAccionesPedidoCompraActionListener(evt,false);
			} else if(sTipo.equals("TiposRelacionesPedidoCompra")) {
				jComboBoxTiposRelacionesPedidoCompraActionListener(evt);
			} else if(sTipo.equals("TiposAccionesFormularioPedidoCompra")) {
				jComboBoxTiposAccionesPedidoCompraActionListener(evt,true);
			} else if(sTipo.equals("TiposSeleccionarPedidoCompra")) {
				
				jComboBoxTiposSeleccionarPedidoCompraActionListener(evt);
				
			} else if(sTipo.equals("ValorCampoGeneralPedidoCompra")) {
				jTextFieldValorCampoGeneralPedidoCompraActionListener(evt);
			}
			
			
			else if(sTipo.equals("AbrirOrderByPedidoCompra")) {
				jButtonAbrirOrderByPedidoCompraActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirOrderByToolBarPedidoCompra")) {
				jButtonAbrirOrderByPedidoCompraActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarOrderByPedidoCompra")) {
				jButtonCerrarOrderByPedidoCompraActionPerformed(evt);
			} 
						
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idPedidoCompraBusqueda")) {
				this.jButtonidPedidoCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaPedidoCompraUpdate")) {
				this.jButtonid_empresaPedidoCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaPedidoCompraBusqueda")) {
				this.jButtonid_empresaPedidoCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalPedidoCompraUpdate")) {
				this.jButtonid_sucursalPedidoCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalPedidoCompraBusqueda")) {
				this.jButtonid_sucursalPedidoCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_moduloPedidoCompraUpdate")) {
				this.jButtonid_moduloPedidoCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_moduloPedidoCompraBusqueda")) {
				this.jButtonid_moduloPedidoCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_ejercicioPedidoCompraUpdate")) {
				this.jButtonid_ejercicioPedidoCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_ejercicioPedidoCompraBusqueda")) {
				this.jButtonid_ejercicioPedidoCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_periodoPedidoCompraUpdate")) {
				this.jButtonid_periodoPedidoCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_periodoPedidoCompraBusqueda")) {
				this.jButtonid_periodoPedidoCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_anioPedidoCompraUpdate")) {
				this.jButtonid_anioPedidoCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_anioPedidoCompraBusqueda")) {
				this.jButtonid_anioPedidoCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_mesPedidoCompraUpdate")) {
				this.jButtonid_mesPedidoCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_mesPedidoCompraBusqueda")) {
				this.jButtonid_mesPedidoCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_secuencialPedidoCompraBusqueda")) {
				this.jButtonnumero_secuencialPedidoCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_clientePedidoCompra")) {
				this.jButtonid_clientePedidoCompraActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_clientePedidoCompraUpdate")) {
				this.jButtonid_clientePedidoCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_clientePedidoCompraBusqueda")) {
				this.jButtonid_clientePedidoCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_usuarioPedidoCompraUpdate")) {
				this.jButtonid_usuarioPedidoCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_usuarioPedidoCompraBusqueda")) {
				this.jButtonid_usuarioPedidoCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_monedaPedidoCompraUpdate")) {
				this.jButtonid_monedaPedidoCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_monedaPedidoCompraBusqueda")) {
				this.jButtonid_monedaPedidoCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_estado_pedido_compraPedidoCompraUpdate")) {
				this.jButtonid_estado_pedido_compraPedidoCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_estado_pedido_compraPedidoCompraBusqueda")) {
				this.jButtonid_estado_pedido_compraPedidoCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("totalPedidoCompraBusqueda")) {
				this.jButtontotalPedidoCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fechaPedidoCompraBusqueda")) {
				this.jButtonfechaPedidoCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_empleadoPedidoCompra")) {
				this.jButtonid_empleadoPedidoCompraActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empleadoPedidoCompraUpdate")) {
				this.jButtonid_empleadoPedidoCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empleadoPedidoCompraBusqueda")) {
				this.jButtonid_empleadoPedidoCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("responsablePedidoCompraBusqueda")) {
				this.jButtonresponsablePedidoCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("solicitado_porPedidoCompraBusqueda")) {
				this.jButtonsolicitado_porPedidoCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("motivo_solicitudPedidoCompraBusqueda")) {
				this.jButtonmotivo_solicitudPedidoCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("area_solicitudPedidoCompraBusqueda")) {
				this.jButtonarea_solicitudPedidoCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("para_uso_dePedidoCompraBusqueda")) {
				this.jButtonpara_uso_dePedidoCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("lugar_entregaPedidoCompraBusqueda")) {
				this.jButtonlugar_entregaPedidoCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descripcionPedidoCompraBusqueda")) {
				this.jButtondescripcionPedidoCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_emisionPedidoCompraBusqueda")) {
				this.jButtonfecha_emisionPedidoCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_entregaPedidoCompraBusqueda")) {
				this.jButtonfecha_entregaPedidoCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_formatoPedidoCompraUpdate")) {
				this.jButtonid_formatoPedidoCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_formatoPedidoCompraBusqueda")) {
				this.jButtonid_formatoPedidoCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_tipo_cambioPedidoCompra")) {
				this.jButtonid_tipo_cambioPedidoCompraActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_cambioPedidoCompraUpdate")) {
				this.jButtonid_tipo_cambioPedidoCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_cambioPedidoCompraBusqueda")) {
				this.jButtonid_tipo_cambioPedidoCompraBusquedaActionPerformed(evt);
			}
			
			
			else if(sTipo.equals("id_clientePedidoCompra")) {
				this.jButtonid_clientePedidoCompraActionPerformed(evt);
			}
			else if(sTipo.equals("id_empleadoPedidoCompra")) {
				this.jButtonid_empleadoPedidoCompraActionPerformed(evt);
			}
			
			
			else if(sTipo.equals("FK_IdClientePedidoCompra")) {
				this.jButtonFK_IdClientePedidoCompraActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdEmpleadoPedidoCompra")) {
				this.jButtonFK_IdEmpleadoPedidoCompraActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompra")) {
				this.jButtonFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompraActionPerformed(evt);
			}
			
			;
			
			
			PedidoCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.pedidocompra,new Object(),this.pedidocompraParameterGeneral,this.pedidocompraReturnGeneral);
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
			
  		} finally {
      		this.finishProcessPedidoCompra();
      	}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaPedidoCompraActual();
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				JTextField jTextField=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				if(containerParent!=null && containerParent.getClass().equals(JTableMe.class)) {
					esControlTabla=true;
				}
						
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.pedidocompra);
				
				this.actualizarInformacion("INFO_PADRE",false,this.pedidocompra);
				
				PedidoCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pedidocompra,new Object(),this.pedidocompraParameterGeneral,this.pedidocompraReturnGeneral);
				
				


				
				PedidoCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pedidocompra,new Object(),this.pedidocompraParameterGeneral,this.pedidocompraReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(PedidoCompra.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",PedidoCompra.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
				}
				
			} catch(Exception e) {
  				FuncionesSwing.manageException2(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
  			}
    }
	
	public Boolean existeCambioValor(ControlTipo controlTipo,String sTipo) throws Exception {
		Boolean existeCambio=true;
		
		try {
			PedidoCompra pedidocompraLocal=null;
			
			if(!this.getEsControlTabla()) {
				pedidocompraLocal=this.pedidocompra;
			} else {
				pedidocompraLocal=this.pedidocompraAnterior;
			}
			
			if(controlTipo.equals(ControlTipo.TEXTBOX)) {
				


			}
		
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
  		}
		
		return existeCambio;
	}
	
	public void jTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.pedidocompra);
				
				this.actualizarInformacion("INFO_PADRE",false,this.pedidocompra);
				
				PedidoCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pedidocompra,new Object(),this.pedidocompraParameterGeneral,this.pedidocompraReturnGeneral);
							
				
				


				
				PedidoCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pedidocompra,new Object(),this.pedidocompraParameterGeneral,this.pedidocompraReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(PedidoCompra.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",PedidoCompra.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaPedidoCompraActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosPedidoCompra.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraAnterior =(PedidoCompra) this.pedidocompraLogic.getPedidoCompras().toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.pedidocompraAnterior =(PedidoCompra) this.pedidocompras.toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
  		}
    }	
	
	//CUANDO SE CAMBIA ALGUN FORMATO(TIPO DE LETRA,NEGRILLA,ETC)
	public void jTextFieldChangedUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextField jTextField=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			PedidoCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pedidocompra,new Object(),this.pedidocompraParameterGeneral,this.pedidocompraReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextField=(JTextField)evt.getSource();
			
			containerParent=jTextField.getParent();
					
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {					
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			PedidoCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pedidocompra,new Object(),this.pedidocompraParameterGeneral,this.pedidocompraReturnGeneral);
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE QUITA ALGUN CARACTER
	public void jTextFieldRemoveUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE INGRESA ALGUN CARACTER
	public void jTextFieldInsertUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jFormattedTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaPedidoCompraActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				Container containerParentAux=null;
				JFormattedTextField JFormattedTextField=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JFormattedTextField=(JFormattedTextField)evt.getSource();
				
				containerParentAux=JFormattedTextField.getParent();
				
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.pedidocompra);
				
				this.actualizarInformacion("INFO_PADRE",false,this.pedidocompra);
				
				PedidoCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pedidocompra,new Object(),this.pedidocompraParameterGeneral,this.pedidocompraReturnGeneral);
								
						
				


				
				PedidoCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pedidocompra,new Object(),this.pedidocompraParameterGeneral,this.pedidocompraReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(PedidoCompra.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",PedidoCompra.class.getName(),sTipo,"DATE",esControlTabla,conIrServidorAplicacionParent,
							id,JFormattedTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Container containerParentAux=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParentAux=jTextField.getParent();
						
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.pedidocompra);
				
				this.actualizarInformacion("INFO_PADRE",false,this.pedidocompra);
				
				PedidoCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pedidocompra,new Object(),this.pedidocompraParameterGeneral,this.pedidocompraReturnGeneral);
								
				
				


				
				PedidoCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pedidocompra,new Object(),this.pedidocompraParameterGeneral,this.pedidocompraReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(PedidoCompra.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",PedidoCompra.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaPedidoCompraActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosPedidoCompra.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraAnterior =(PedidoCompra) this.pedidocompraLogic.getPedidoCompras().toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.pedidocompraAnterior =(PedidoCompra) this.pedidocompras.toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.DATE,sTipo)) {
				this.actualizarInformacion("EVENTO_CONTROL",false,this.pedidocompra);
				
				this.actualizarInformacion("INFO_PADRE",false,this.pedidocompra);
			}	
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaPedidoCompraActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosPedidoCompra.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraAnterior =(PedidoCompra) this.pedidocompraLogic.getPedidoCompras().toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.pedidocompraAnterior =(PedidoCompra) this.pedidocompras.toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaPedidoCompraActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.pedidocompra);
			
			this.actualizarInformacion("INFO_PADRE",false,this.pedidocompra);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jTextAreaFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTAREA,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextArea jTextArea=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextArea=(JTextArea)evt.getSource();
				
				containerParent=jTextArea.getParent();
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.pedidocompra);
				
				this.actualizarInformacion("INFO_PADRE",false,this.pedidocompra);
				
				PedidoCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pedidocompra,new Object(),this.pedidocompraParameterGeneral,this.pedidocompraReturnGeneral);
							
				
				


				
				PedidoCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pedidocompra,new Object(),this.pedidocompraParameterGeneral,this.pedidocompraReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(PedidoCompra.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",PedidoCompra.class.getName(),sTipo,"TEXTAREA",esControlTabla,conIrServidorAplicacionParent,
							id,jTextArea, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaPedidoCompraActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosPedidoCompra.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidocompraAnterior =(PedidoCompra) this.pedidocompraLogic.getPedidoCompras().toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.pedidocompraAnterior =(PedidoCompra) this.pedidocompras.toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaChangedUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextArea jTextArea=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			PedidoCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pedidocompra,new Object(),this.pedidocompraParameterGeneral,this.pedidocompraReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextArea=(JTextArea)evt.getSource();
			
			containerParent=jTextArea.getParent();
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			PedidoCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pedidocompra,new Object(),this.pedidocompraParameterGeneral,this.pedidocompraReturnGeneral);
			
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaRemoveUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaInsertUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jTextAreaActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaPedidoCompraActual();
			
			this.actualizarInformacion("EVENTO_CONTROL",false,this.pedidocompra);
			
			this.actualizarInformacion("INFO_PADRE",false,this.pedidocompra);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JLabel jLabel=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jLabel=(JLabel)evt.getSource();
				
				containerParent=jLabel.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.pedidocompra);
				
				this.actualizarInformacion("INFO_PADRE",false,this.pedidocompra);
				
				PedidoCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pedidocompra,new Object(),this.pedidocompraParameterGeneral,this.pedidocompraReturnGeneral);
								
				
				


				
				PedidoCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pedidocompra,new Object(),this.pedidocompraParameterGeneral,this.pedidocompraReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(PedidoCompra.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",PedidoCompra.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jLabel, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaPedidoCompraActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosPedidoCompra.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraAnterior =(PedidoCompra) this.pedidocompraLogic.getPedidoCompras().toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.pedidocompraAnterior =(PedidoCompra) this.pedidocompras.toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jLabelActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaPedidoCompraActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.pedidocompra);
			
			this.actualizarInformacion("INFO_PADRE",false,this.pedidocompra);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxItemListenerGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaPedidoCompraActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
							
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.pedidocompra);
				
				this.actualizarInformacion("INFO_PADRE",false,this.pedidocompra);
				
				PedidoCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.pedidocompra,new Object(),this.pedidocompraParameterGeneral,this.pedidocompraReturnGeneral);
												
				
				if(sTipo.equals("SeleccionarTodosPedidoCompra")) {
					jCheckBoxSeleccionarTodosPedidoCompraItemListener(evt);
				
				} else if(sTipo.equals("SeleccionadosPedidoCompra")) {
					jCheckBoxSeleccionadosPedidoCompraItemListener(evt);
				
				} else if(sTipo.equals("NuevoToolBarPedidoCompra")) {
					
				}
				
				


				
				
				PedidoCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.pedidocompra,new Object(),this.pedidocompraParameterGeneral,this.pedidocompraReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(PedidoCompra.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",PedidoCompra.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.CHECKBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				//this.actualizarInformacion("EVENTO_CONTROL",false,this.pedidocompra);
				
				//this.actualizarInformacion("INFO_PADRE",false,this.pedidocompra);
				
				PedidoCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.pedidocompra,new Object(),this.pedidocompraParameterGeneral,this.pedidocompraReturnGeneral);
												
				
				


				
				
				PedidoCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.pedidocompra,new Object(),this.pedidocompraParameterGeneral,this.pedidocompraReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(PedidoCompra.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",PedidoCompra.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaPedidoCompraActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosPedidoCompra.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidocompraAnterior =(PedidoCompra) this.pedidocompraLogic.getPedidoCompras().toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.pedidocompraAnterior =(PedidoCompra) this.pedidocompras.toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaPedidoCompraActual();
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.pedidocompra);
				
				this.actualizarInformacion("INFO_PADRE",false,this.pedidocompra);
				
				PedidoCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.pedidocompra,new Object(),this.pedidocompraParameterGeneral,this.pedidocompraReturnGeneral);
				
				
				PedidoCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.pedidocompra,new Object(),this.pedidocompraParameterGeneral,this.pedidocompraReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO SE UTILIZA, SE USA EL DE ABAJO, IGUAL SE DEJA EL CODIGO COMO RESPALDO Y ES CASI IGUAL
	//ERROR:SI SE USA,AL HACER CLIC EN EL MISMO ELEMENTO O EJECUTAR SELECTEDITEM, SIEMPRE SE EJECUTA COMO SI ESCOGIERA OTRO ELEMENTO(NO DEBERIA)
	//@SuppressWarnings("rawtypes")
	public void jComboBoxActionPerformedGeneral(String sTipo,ActionEvent evt) {		
		try {
			/*		
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			Container containerParent=null;
			Component componentOpposite=null;
			Boolean esControlTabla=false;
				
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			PedidoCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.pedidocompra,new Object(),this.pedidocompraParameterGeneral,this.pedidocompraReturnGeneral);
			JComboBox jComboBoxGenerico=null;						
			
			if(evt.getSource().getClass().equals(JComboBox.class)
				|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
					
				jComboBoxGenerico=(JComboBox)evt.getSource();
				
				containerParent=jComboBoxGenerico.getParent();
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
			}
			
			String sFinalQueryCombo="";
			
			


			
			PedidoCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pedidocompra,new Object(),this.pedidocompraParameterGeneral,this.pedidocompraReturnGeneral);
			*/						
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
  		}		
    }
	
	@SuppressWarnings("rawtypes")
	public void jComboBoxItemStateChangedGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if (evt.getStateChange() == ItemEvent.SELECTED && this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaPedidoCompraActual();
			
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=null;//evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}		
					
					this.esControlTabla=esControlTabla;
				}
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.pedidocompra);
				
				this.actualizarInformacion("INFO_PADRE",false,this.pedidocompra);
				
				PedidoCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.pedidocompra,new Object(),this.pedidocompraParameterGeneral,this.pedidocompraReturnGeneral);
				
				
				String sFinalQueryCombo="";
				
				


				
				PedidoCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pedidocompra,new Object(),this.pedidocompraParameterGeneral,this.pedidocompraReturnGeneral);
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(PedidoCompra.class.getName());
								
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",PedidoCompra.class.getName(),sTipo,"COMBOBOX",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	//@SuppressWarnings("rawtypes")
	public void jComboBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		//MANEJADO EN ITEMLISTENER
		/*
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				
				//if(this.esUsoDesdeHijo) {
				//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				//}
				
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
				this.actualizarInformacion("EVENTO_CONTROL",false,this.pedidocompra);
				
				this.actualizarInformacion("INFO_PADRE",false,this.pedidocompra);
				
				PedidoCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.pedidocompra,new Object(),this.pedidocompraParameterGeneral,this.pedidocompraReturnGeneral);
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}
					
					this.esControlTabla=esControlTabla;
				}
				
				String sFinalQueryCombo="";
				
				


				
				PedidoCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pedidocompra,new Object(),this.pedidocompraParameterGeneral,this.pedidocompraReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(PedidoCompra.class.getName());
				
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",PedidoCompra.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
  		}
		
		*/
    }
	
	public void jComboBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaPedidoCompraActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosPedidoCompra.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidocompraAnterior =(PedidoCompra) this.pedidocompraLogic.getPedidoCompras().toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.pedidocompraAnterior =(PedidoCompra) this.pedidocompras.toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
  		}
    }		
	
	public void tableValueChangedGeneral(String sTipo,ListSelectionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				PedidoCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pedidocompra,new Object(),this.pedidocompraParameterGeneral,this.pedidocompraReturnGeneral);
				
				if(sTipo.equals("TableDatosSeleccionarPedidoCompra")) {
					//BYDAN_DESHABILITADO
					//try {jTableDatosPedidoCompraListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
					
					//SOLO CUANDO MOUSE ES SOLTADO
					if (!evt.getValueIsAdjusting()) {
						//SELECCIONA FILA A OBJETO ACTUAL
						Integer intSelectedRow = this.jTableDatosPedidoCompra.getSelectedRow();
						
						if(intSelectedRow!=null && intSelectedRow>-1) {
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								this.pedidocompra =(PedidoCompra) this.pedidocompraLogic.getPedidoCompras().toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
							} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
								this.pedidocompra =(PedidoCompra) this.pedidocompras.toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(intSelectedRow)];
							}
							//ARCHITECTURE
							
							//System.out.println(this.pedidocompra);
						}
					}
					
				} else if(sTipo.equals("jButtonCancelarPedidoCompra")) {
				
				}
				
				PedidoCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pedidocompra,new Object(),this.pedidocompraParameterGeneral,this.pedidocompraReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void tableMouseAdapterGeneral(String sTipo,MouseEvent evt) { 	  
		try {
			PedidoCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.pedidocompra,new Object(),this.pedidocompraParameterGeneral,this.pedidocompraReturnGeneral);
			
			if(sTipo.equals("DatosSeleccionarPedidoCompra")) {
				if (evt.getClickCount() == 2) {
					jButtonIdActionPerformed(null,jTableDatosPedidoCompra.getSelectedRow(),false,false);
				}	
			} else if(sTipo.equals("jButtonCancelarPedidoCompra")) {
			
			}
			
			PedidoCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.pedidocompra,new Object(),this.pedidocompraParameterGeneral,this.pedidocompraReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	;
	
	public void jButtonActionPerformedTecladoGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			this.startProcessPedidoCompra();
			
			PedidoCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.pedidocompra,new Object(),this.pedidocompraParameterGeneral,this.pedidocompraReturnGeneral);
			
			if(sTipo.equals("NuevoPedidoCompra")) {
				jButtonNuevoPedidoCompraActionPerformed(evt,false);
				
			} else if(sTipo.equals("DuplicarPedidoCompra")) {
				jButtonDuplicarPedidoCompraActionPerformed(evt,false);
				
			} else if(sTipo.equals("CopiarPedidoCompra")) {
				jButtonCopiarPedidoCompraActionPerformed(evt);
				
			} else if(sTipo.equals("VerFormPedidoCompra")) {
				jButtonVerFormPedidoCompraActionPerformed(evt);
				
			} else if(sTipo.equals("NuevoRelacionesPedidoCompra")) {
				jButtonNuevoPedidoCompraActionPerformed(evt,true);
				
			} else if(sTipo.equals("ModificarPedidoCompra")) {
				jButtonModificarPedidoCompraActionPerformed(evt);
				
			} else if(sTipo.equals("ActualizarPedidoCompra")) {
				jButtonActualizarPedidoCompraActionPerformed(evt);
				
			} else if(sTipo.equals("EliminarPedidoCompra")) {
				jButtonEliminarPedidoCompraActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosTablaPedidoCompra")) {
				jButtonGuardarCambiosPedidoCompraActionPerformed(evt);
				
			} else if(sTipo.equals("CancelarPedidoCompra")) {
				jButtonCancelarPedidoCompraActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarPedidoCompra")) {
				jButtonCerrarPedidoCompraActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosPedidoCompra")) {
				jButtonGuardarCambiosPedidoCompraActionPerformed(evt);
			
			} else if(sTipo.equals("NuevoGuardarCambiosPedidoCompra")) {
				jButtonNuevoGuardarCambiosPedidoCompraActionPerformed(evt);
			
			} else if(sTipo.equals("AbrirOrderByPedidoCompra")) {
				jButtonAbrirOrderByPedidoCompraActionPerformed(evt);
			
			} else if(sTipo.equals("RecargarInformacionPedidoCompra")) {
				jButtonRecargarInformacionPedidoCompraActionPerformed(evt);
			
			} else if(sTipo.equals("AnterioresPedidoCompra")) {
				jButtonAnterioresPedidoCompraActionPerformed(evt);			
			
			}  else if(sTipo.equals("SiguientesPedidoCompra")) {
				jButtonSiguientesPedidoCompraActionPerformed(evt);			
			} 
			
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idPedidoCompraBusqueda")) {
				this.jButtonidPedidoCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaPedidoCompraUpdate")) {
				this.jButtonid_empresaPedidoCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaPedidoCompraBusqueda")) {
				this.jButtonid_empresaPedidoCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalPedidoCompraUpdate")) {
				this.jButtonid_sucursalPedidoCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalPedidoCompraBusqueda")) {
				this.jButtonid_sucursalPedidoCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_moduloPedidoCompraUpdate")) {
				this.jButtonid_moduloPedidoCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_moduloPedidoCompraBusqueda")) {
				this.jButtonid_moduloPedidoCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_ejercicioPedidoCompraUpdate")) {
				this.jButtonid_ejercicioPedidoCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_ejercicioPedidoCompraBusqueda")) {
				this.jButtonid_ejercicioPedidoCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_periodoPedidoCompraUpdate")) {
				this.jButtonid_periodoPedidoCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_periodoPedidoCompraBusqueda")) {
				this.jButtonid_periodoPedidoCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_anioPedidoCompraUpdate")) {
				this.jButtonid_anioPedidoCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_anioPedidoCompraBusqueda")) {
				this.jButtonid_anioPedidoCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_mesPedidoCompraUpdate")) {
				this.jButtonid_mesPedidoCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_mesPedidoCompraBusqueda")) {
				this.jButtonid_mesPedidoCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_secuencialPedidoCompraBusqueda")) {
				this.jButtonnumero_secuencialPedidoCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_clientePedidoCompra")) {
				this.jButtonid_clientePedidoCompraActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_clientePedidoCompraUpdate")) {
				this.jButtonid_clientePedidoCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_clientePedidoCompraBusqueda")) {
				this.jButtonid_clientePedidoCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_usuarioPedidoCompraUpdate")) {
				this.jButtonid_usuarioPedidoCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_usuarioPedidoCompraBusqueda")) {
				this.jButtonid_usuarioPedidoCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_monedaPedidoCompraUpdate")) {
				this.jButtonid_monedaPedidoCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_monedaPedidoCompraBusqueda")) {
				this.jButtonid_monedaPedidoCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_estado_pedido_compraPedidoCompraUpdate")) {
				this.jButtonid_estado_pedido_compraPedidoCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_estado_pedido_compraPedidoCompraBusqueda")) {
				this.jButtonid_estado_pedido_compraPedidoCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("totalPedidoCompraBusqueda")) {
				this.jButtontotalPedidoCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fechaPedidoCompraBusqueda")) {
				this.jButtonfechaPedidoCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_empleadoPedidoCompra")) {
				this.jButtonid_empleadoPedidoCompraActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empleadoPedidoCompraUpdate")) {
				this.jButtonid_empleadoPedidoCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empleadoPedidoCompraBusqueda")) {
				this.jButtonid_empleadoPedidoCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("responsablePedidoCompraBusqueda")) {
				this.jButtonresponsablePedidoCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("solicitado_porPedidoCompraBusqueda")) {
				this.jButtonsolicitado_porPedidoCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("motivo_solicitudPedidoCompraBusqueda")) {
				this.jButtonmotivo_solicitudPedidoCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("area_solicitudPedidoCompraBusqueda")) {
				this.jButtonarea_solicitudPedidoCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("para_uso_dePedidoCompraBusqueda")) {
				this.jButtonpara_uso_dePedidoCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("lugar_entregaPedidoCompraBusqueda")) {
				this.jButtonlugar_entregaPedidoCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descripcionPedidoCompraBusqueda")) {
				this.jButtondescripcionPedidoCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_emisionPedidoCompraBusqueda")) {
				this.jButtonfecha_emisionPedidoCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_entregaPedidoCompraBusqueda")) {
				this.jButtonfecha_entregaPedidoCompraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_formatoPedidoCompraUpdate")) {
				this.jButtonid_formatoPedidoCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_formatoPedidoCompraBusqueda")) {
				this.jButtonid_formatoPedidoCompraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_tipo_cambioPedidoCompra")) {
				this.jButtonid_tipo_cambioPedidoCompraActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_cambioPedidoCompraUpdate")) {
				this.jButtonid_tipo_cambioPedidoCompraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_cambioPedidoCompraBusqueda")) {
				this.jButtonid_tipo_cambioPedidoCompraBusquedaActionPerformed(evt);
			}
			
			PedidoCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.pedidocompra,new Object(),this.pedidocompraParameterGeneral,this.pedidocompraReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
			
  		}  finally {
      		this.finishProcessPedidoCompra();
      	}
    }
	
	public void internalFrameClosingInternalFrameGeneral(String sTipo,InternalFrameEvent evt) { 	  
		try {
			PedidoCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.pedidocompra,new Object(),this.pedidocompraParameterGeneral,this.pedidocompraReturnGeneral);
			
			if(sTipo.equals("CloseInternalFramePedidoCompra")) {
				closingInternalFramePedidoCompra();
				
			} else if(sTipo.equals("jButtonCancelarPedidoCompra")) {
				JInternalFrameBase jInternalFrameDetalleFormPedidoCompra = (JInternalFrameBase)evt.getSource();
	            	
	            PedidoCompraBeanSwingJInternalFrame jInternalFrameParent=(PedidoCompraBeanSwingJInternalFrame)jInternalFrameDetalleFormPedidoCompra.getjInternalFrameParent();
	            
				jInternalFrameParent.jButtonCancelarPedidoCompraActionPerformed(null);
			}
			
			PedidoCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.pedidocompra,new Object(),this.pedidocompraParameterGeneral,this.pedidocompraReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void recargarFormPedidoCompra(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion) throws Exception {
		this.recargarFormPedidoCompra(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,false);
	}
	
	public void recargarFormPedidoCompra(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion,Boolean esControlTabla) throws Exception {
		if(this.permiteRecargarForm && this.permiteMantenimiento(this.pedidocompra)) {
			if(!esControlTabla) {
				if(PedidoCompraJInternalFrame.ISBINDING_MANUAL_TABLA) {			
					this.setVariablesFormularioToObjetoActualPedidoCompra(this.pedidocompra,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompra(this.pedidocompra);			
				}
				
				if(this.pedidocompraSessionBean.getEstaModoGuardarRelaciones()) {
					this.setVariablesFormularioRelacionesToObjetoActualPedidoCompra(this.pedidocompra,classes);				
				}
			
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.pedidocompraReturnGeneral=pedidocompraLogic.procesarEventosPedidoComprasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.pedidocompraLogic.getPedidoCompras(),this.pedidocompra,this.pedidocompraParameterGeneral,this.isEsNuevoPedidoCompra,classes);//this.pedidocompraLogic.getPedidoCompra()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
					
					//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					//this.setVariablesObjetoReturnGeneralToBeanPedidoCompra(this.pedidocompraReturnGeneral,this.pedidocompraBean,false);
						
					//ACTUALIZA VARIABLES RELACIONES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					if(this.pedidocompraSessionBean.getEstaModoGuardarRelaciones()) {
						//this.setVariablesRelacionesObjetoReturnGeneralToBeanPedidoCompra(classes,this.pedidocompraReturnGeneral,this.pedidocompraBean,false);
					}
						
					if(this.pedidocompraReturnGeneral.getConRecargarPropiedades()) {
						//INICIALIZA VARIABLES COMBOS NORMALES (FK)
						this.setVariablesObjetoActualToFormularioForeignKeyPedidoCompra(this.pedidocompraReturnGeneral.getPedidoCompra());
							
						//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
						this.setVariablesObjetoActualToFormularioPedidoCompra(this.pedidocompraReturnGeneral.getPedidoCompra());	
					}
						
					if(this.pedidocompraReturnGeneral.getConRecargarRelaciones()) {
						//INICIALIZA VARIABLES RELACIONES A FORMULARIO
						this.setVariablesRelacionesObjetoActualToFormularioPedidoCompra(this.pedidocompraReturnGeneral.getPedidoCompra(),classes);//this.pedidocompraBean);	
					}									
					
				} else {				
					//INICIALIZA VARIABLES RELACIONES A FORMULARIO
					this.setVariablesRelacionesObjetoActualToFormularioPedidoCompra(this.pedidocompra,classes);//this.pedidocompraBean);									
				}
			
				if(PedidoCompraJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesFormularioToObjetoActualPedidoCompra(this.pedidocompra,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoCompra(this.pedidocompra);				
				}
				
			} else {
				
				if(((controlTipo.equals(ControlTipo.TEXTBOX) || controlTipo.equals(ControlTipo.DATE)
					|| controlTipo.equals(ControlTipo.TEXTAREA) || controlTipo.equals(ControlTipo.COMBOBOX)
					)				
					&& eventoTipo.equals(EventoTipo.CHANGE)
					)
					
					|| (controlTipo.equals(ControlTipo.CHECKBOX) && eventoTipo.equals(EventoTipo.CLIC))
					
				) { // && sTipoGeneral.equals("TEXTBOX")
					
					if(this.pedidocompraAnterior!=null) {
						this.pedidocompra=this.pedidocompraAnterior;
					}
				}
				
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.pedidocompraReturnGeneral=pedidocompraLogic.procesarEventosPedidoComprasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.pedidocompraLogic.getPedidoCompras(),this.pedidocompra,this.pedidocompraParameterGeneral,this.isEsNuevoPedidoCompra,classes);//this.pedidocompraLogic.getPedidoCompra()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.pedidocompraSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.pedidocompraSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(this.pedidocompraReturnGeneral.getPedidoCompra(),pedidocompraLogic.getPedidoCompras());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(this.pedidocompraReturnGeneral.getPedidoCompra(),this.pedidocompras);
				}
				//ARCHITECTURE
				
				//this.jTableDatosPedidoCompra.repaint();
				
				//((AbstractTableModel) this.jTableDatosPedidoCompra.getModel()).fireTableDataChanged();
				
				this.actualizarVisualTableDatosPedidoCompra();
			}
		}
	}
	
	public void actualizarVisualTableDatosPedidoCompra() throws Exception {
		
		PedidoCompraModel pedidocompraModel=(PedidoCompraModel)this.jTableDatosPedidoCompra.getModel();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			pedidocompraModel.pedidocompras=this.pedidocompraLogic.getPedidoCompras();
		
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
			pedidocompraModel.pedidocompras=this.pedidocompras;
		}
		
		
		((PedidoCompraModel) this.jTableDatosPedidoCompra.getModel()).fireTableDataChanged();
	}
	
	public void actualizarVisualTableDatosEventosVistaPedidoCompra() throws Exception {
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.actualizarLista(this.getpedidocompraAnterior(),this.pedidocompraLogic.getPedidoCompras());
					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			this.actualizarLista(this.getpedidocompraAnterior(),this.pedidocompras);
		}
		//ARCHITECTURE
						
		this.actualizarFilaTotales();
						
		this.actualizarVisualTableDatosPedidoCompra();	
	}
	
	public void setVariablesRelacionesObjetoActualToFormularioPedidoCompra(PedidoCompra pedidocompra,ArrayList<Classe> classes) throws Exception { 
		try {
			
			for(Classe clas:classes) {
				if(clas.clas.equals(DetallePedidoCompra.class)) {
					this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraBeanSwingJInternalFrame.detallepedidocompraLogic.setDetallePedidoCompras(pedidocompra.getDetallePedidoCompras());
					this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraBeanSwingJInternalFrame.inicializarActualizarBindingTablaDetallePedidoCompra(false);
					break;
				}
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setEventoParentGeneral(Boolean esUsoDesdeHijo,String sDominio,String sDominioTipo,String sTipo,String sTipoGeneral,Boolean esControlTabla,Boolean conIrServidorAplicacion,
						Long id,Component control, EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,ArrayList<String> arrClasses,
						Object evt,GeneralEntityParameterReturnGeneral generalEntityParameterGeneral,Object otro) { 	  
		try {
			
			if(this.permiteManejarEventosControl()) {
				
				//BASE COPIADO DESDE TEXTFIELLOSTFOCUS
				
				//EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				Boolean conTodasRelaciones=false;
				
				this.esUsoDesdeHijo=esUsoDesdeHijo;
										
				PedidoCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.pedidocompra,new Object(),generalEntityParameterGeneral,this.pedidocompraReturnGeneral);
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				for(String sClasse:arrClasses) {
					if(sClasse.equals("TODOS")) {
						conTodasRelaciones=true;
						break;
					}
				}
				
				if(this.pedidocompraSessionBean.getConGuardarRelaciones()) {
					if(conTodasRelaciones) {
						classes=PedidoCompraConstantesFunciones.getClassesRelationshipsOfPedidoCompra(new ArrayList<Classe>(),DeepLoadType.NONE);
					} else {
						classes=PedidoCompraConstantesFunciones.getClassesRelationshipsFromStringsOfPedidoCompra(arrClasses,DeepLoadType.NONE);
					}
				}
	
				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);
	
				this.recargarFormPedidoCompra(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,esControlTabla);
										
				PedidoCompraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.pedidocompra,new Object(),generalEntityParameterGeneral,this.pedidocompraReturnGeneral);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
  		}
    }
	
	/*
	public void setVariablesRelacionesObjetoBeanActualToFormularioPedidoCompra(PedidoCompraBean pedidocompraBean) throws Exception { 
		try {
			
			for(Classe clas:classes) {
				if(clas.clas.equals(DetallePedidoCompra.class)) {
					this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraBeanSwingJInternalFrame.detallepedidocompraLogic.setDetallePedidoCompras(pedidocompra.getDetallePedidoCompras());
					this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraBeanSwingJInternalFrame.inicializarActualizarBindingTablaDetallePedidoCompra(false);
					break;
				}
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesRelacionesObjetoReturnGeneralToBeanPedidoCompra(ArrayList<Classe> classes,PedidoCompraReturnGeneral pedidocompraReturnGeneral,PedidoCompraBean pedidocompraBean,Boolean conDefault) throws Exception {
		
			this.pedidocompraBean.setDetallePedidoCompras(pedidocompraReturnGeneral.getPedidoCompra().getDetallePedidoCompras());
	}
	*/
	
	public void setVariablesFormularioRelacionesToObjetoActualPedidoCompra(PedidoCompra pedidocompra,ArrayList<Classe> classes) throws Exception {
		
			for(Classe clas:classes) {
				if(clas.clas.equals(DetallePedidoCompra.class)) {
					pedidocompra.setDetallePedidoCompras(this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraBeanSwingJInternalFrame.detallepedidocompraLogic.getDetallePedidoCompras());
					break;
				}
			}
	}
	
	public Boolean permiteManejarEventosControl() {
		Boolean permite=true;				
		
		if(this.estaModoNuevo || this.estaModoSeleccionar || this.estaModoEliminarGuardarCambios) {
			permite=false;
			
		} 
		
		//NO DEBE MEZCLARSE CONCEPTOS
		/*	
		if(!paraTabla && !this.permiteMantenimiento(this.pedidocompra)) {
			System.out.println("ERROR:EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES");
				
			//JOptionPane.showMessageDialog(this,"EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES","EVENTO",JOptionPane.ERROR_MESSAGE);			
		}
		*/
		
		return permite;
	}
	
	public void inicializarFormDetalle() throws Exception {
		
		this.jInternalFrameDetalleFormPedidoCompra = new PedidoCompraDetalleFormJInternalFrame(jDesktopPane,this.pedidocompraSessionBean.getConGuardarRelaciones(),this.pedidocompraSessionBean.getEsGuardarRelacionado(),this.cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		this.jDesktopPane.add(this.jInternalFrameDetalleFormPedidoCompra);
		this.jInternalFrameDetalleFormPedidoCompra.setVisible(false);
		this.jInternalFrameDetalleFormPedidoCompra.setSelected(false);						
		
		this.jInternalFrameDetalleFormPedidoCompra.setJInternalFrameParent(this);
		
		this.jInternalFrameDetalleFormPedidoCompra.pedidocompraLogic=this.pedidocompraLogic;
		
		this.cargarCombosFrameForeignKeyPedidoCompra("Formulario");
		
		this.inicializarActualizarBindingBotonesPermisosManualFormDetallePedidoCompra();
		this.inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetallePedidoCompra();
		
		this.initActionsFormDetalle();		
		
		this.initActionsCombosTodosForeignKeyPedidoCompra("Formulario");
		
		//TALVEZ conSetVariablesGlobales COMO if() 
		this.setVariablesGlobalesCombosForeignKeyPedidoCompra();
		
		this.cargarMenuRelaciones();
		
	}
	
	public void initActionsFormDetalle() {	
		
		this.jInternalFrameDetalleFormPedidoCompra.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarPedidoCompra"));
		
		this.jInternalFrameDetalleFormPedidoCompra.jButtonModificarPedidoCompra.addActionListener(new ButtonActionListener(this,"ModificarPedidoCompra"));

		
		this.jInternalFrameDetalleFormPedidoCompra.jButtonModificarToolBarPedidoCompra.addActionListener(new ButtonActionListener(this,"ModificarToolBarPedidoCompra"));
					
		this.jInternalFrameDetalleFormPedidoCompra.jMenuItemModificarPedidoCompra.addActionListener(new ButtonActionListener(this,"MenuItemModificarPedidoCompra"));		
		
		
		
		this.jInternalFrameDetalleFormPedidoCompra.jButtonActualizarPedidoCompra.addActionListener (new ButtonActionListener(this,"ActualizarPedidoCompra"));
		
		
		this.jInternalFrameDetalleFormPedidoCompra.jButtonActualizarToolBarPedidoCompra.addActionListener(new ButtonActionListener(this,"ActualizarToolBarPedidoCompra"));
						
		this.jInternalFrameDetalleFormPedidoCompra.jMenuItemActualizarPedidoCompra.addActionListener (new ButtonActionListener(this,"MenuItemActualizarPedidoCompra"));		
		
		
		
		this.jInternalFrameDetalleFormPedidoCompra.jButtonEliminarPedidoCompra.addActionListener (new ButtonActionListener(this,"EliminarPedidoCompra"));
		
		
		this.jInternalFrameDetalleFormPedidoCompra.jButtonEliminarToolBarPedidoCompra.addActionListener (new ButtonActionListener(this,"EliminarToolBarPedidoCompra"));
								
		this.jInternalFrameDetalleFormPedidoCompra.jMenuItemEliminarPedidoCompra.addActionListener (new ButtonActionListener(this,"MenuItemEliminarPedidoCompra"));		
		
		
		
		this.jInternalFrameDetalleFormPedidoCompra.jButtonCancelarPedidoCompra.addActionListener (new ButtonActionListener(this,"CancelarPedidoCompra"));
		
		
		this.jInternalFrameDetalleFormPedidoCompra.jButtonCancelarToolBarPedidoCompra.addActionListener (new ButtonActionListener(this,"CancelarToolBarPedidoCompra"));
					
		this.jInternalFrameDetalleFormPedidoCompra.jMenuItemCancelarPedidoCompra.addActionListener (new ButtonActionListener(this,"MenuItemCancelarPedidoCompra"));		
		
		
		
		
		
		this.jInternalFrameDetalleFormPedidoCompra.jMenuItemDetalleCerrarPedidoCompra.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarPedidoCompra"));		
		
		
		
		this.jInternalFrameDetalleFormPedidoCompra.jButtonGuardarCambiosToolBarPedidoCompra.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarPedidoCompra"));
		
		
		
		this.jInternalFrameDetalleFormPedidoCompra.jButtonGuardarCambiosToolBarPedidoCompra.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarPedidoCompra"));
		
		
		
		this.jInternalFrameDetalleFormPedidoCompra.jComboBoxTiposAccionesFormularioPedidoCompra.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioPedidoCompra"));
		
		
				
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompra.jButtonidPedidoCompraBusqueda.addActionListener(new ButtonActionListener(this,"idPedidoCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_empresaPedidoCompraUpdate.addActionListener(new ButtonActionListener(this,"id_empresaPedidoCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_empresaPedidoCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaPedidoCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_sucursalPedidoCompraUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalPedidoCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_sucursalPedidoCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalPedidoCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_moduloPedidoCompraUpdate.addActionListener(new ButtonActionListener(this,"id_moduloPedidoCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_moduloPedidoCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_moduloPedidoCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_ejercicioPedidoCompraUpdate.addActionListener(new ButtonActionListener(this,"id_ejercicioPedidoCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_ejercicioPedidoCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_ejercicioPedidoCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_periodoPedidoCompraUpdate.addActionListener(new ButtonActionListener(this,"id_periodoPedidoCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_periodoPedidoCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_periodoPedidoCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_anioPedidoCompraUpdate.addActionListener(new ButtonActionListener(this,"id_anioPedidoCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_anioPedidoCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_anioPedidoCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_mesPedidoCompraUpdate.addActionListener(new ButtonActionListener(this,"id_mesPedidoCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_mesPedidoCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_mesPedidoCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompra.jButtonnumero_secuencialPedidoCompraBusqueda.addActionListener(new ButtonActionListener(this,"numero_secuencialPedidoCompraBusqueda"));
		//jButtonid_clientePedidoCompra.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_clientePedidoCompraActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_clientePedidoCompra.addActionListener(new ButtonActionListener(this,"id_clientePedidoCompra"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_clientePedidoCompraUpdate.addActionListener(new ButtonActionListener(this,"id_clientePedidoCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_clientePedidoCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_clientePedidoCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_usuarioPedidoCompraUpdate.addActionListener(new ButtonActionListener(this,"id_usuarioPedidoCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_usuarioPedidoCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_usuarioPedidoCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_monedaPedidoCompraUpdate.addActionListener(new ButtonActionListener(this,"id_monedaPedidoCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_monedaPedidoCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_monedaPedidoCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_estado_pedido_compraPedidoCompraUpdate.addActionListener(new ButtonActionListener(this,"id_estado_pedido_compraPedidoCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_estado_pedido_compraPedidoCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_pedido_compraPedidoCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompra.jButtontotalPedidoCompraBusqueda.addActionListener(new ButtonActionListener(this,"totalPedidoCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompra.jButtonfechaPedidoCompraBusqueda.addActionListener(new ButtonActionListener(this,"fechaPedidoCompraBusqueda"));
		//jButtonid_empleadoPedidoCompra.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_empleadoPedidoCompraActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_empleadoPedidoCompra.addActionListener(new ButtonActionListener(this,"id_empleadoPedidoCompra"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_empleadoPedidoCompraUpdate.addActionListener(new ButtonActionListener(this,"id_empleadoPedidoCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_empleadoPedidoCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_empleadoPedidoCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompra.jButtonresponsablePedidoCompraBusqueda.addActionListener(new ButtonActionListener(this,"responsablePedidoCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompra.jButtonsolicitado_porPedidoCompraBusqueda.addActionListener(new ButtonActionListener(this,"solicitado_porPedidoCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompra.jButtonmotivo_solicitudPedidoCompraBusqueda.addActionListener(new ButtonActionListener(this,"motivo_solicitudPedidoCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompra.jButtonarea_solicitudPedidoCompraBusqueda.addActionListener(new ButtonActionListener(this,"area_solicitudPedidoCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompra.jButtonpara_uso_dePedidoCompraBusqueda.addActionListener(new ButtonActionListener(this,"para_uso_dePedidoCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompra.jButtonlugar_entregaPedidoCompraBusqueda.addActionListener(new ButtonActionListener(this,"lugar_entregaPedidoCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompra.jButtondescripcionPedidoCompraBusqueda.addActionListener(new ButtonActionListener(this,"descripcionPedidoCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompra.jButtonfecha_emisionPedidoCompraBusqueda.addActionListener(new ButtonActionListener(this,"fecha_emisionPedidoCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompra.jButtonfecha_entregaPedidoCompraBusqueda.addActionListener(new ButtonActionListener(this,"fecha_entregaPedidoCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_formatoPedidoCompraUpdate.addActionListener(new ButtonActionListener(this,"id_formatoPedidoCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_formatoPedidoCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_formatoPedidoCompraBusqueda"));
		//jButtonid_tipo_cambioPedidoCompra.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_tipo_cambioPedidoCompraActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_tipo_cambioPedidoCompra.addActionListener(new ButtonActionListener(this,"id_tipo_cambioPedidoCompra"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_tipo_cambioPedidoCompraUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_cambioPedidoCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_tipo_cambioPedidoCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_cambioPedidoCompraBusqueda"));
		
		
		;

		//TABBED PANE RELACIONES
		this.jInternalFrameDetalleFormPedidoCompra.jTabbedPaneRelacionesPedidoCompra.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesPedidoCompra"));
		
		;		
		//TABBED PANE RELACIONES FIN(EXTRA TAB)	
	}
	
	public void initActions() {				
		this.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"CloseInternalFramePedidoCompra"));
		
		if(this.jInternalFrameDetalleFormPedidoCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPedidoCompra.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarPedidoCompra"));
		}
		
		this.jTableDatosPedidoCompra.getSelectionModel().addListSelectionListener(new TableListSelectionListener(this,"TableDatosSeleccionarPedidoCompra"));
		
		this.jTableDatosPedidoCompra.addMouseListener(new TableMouseAdapter(this,"DatosSeleccionarPedidoCompra"));
		
		this.jButtonNuevoPedidoCompra.addActionListener(new ButtonActionListener(this,"NuevoPedidoCompra"));
		
		this.jButtonDuplicarPedidoCompra.addActionListener(new ButtonActionListener(this,"DuplicarPedidoCompra"));
		
		this.jButtonCopiarPedidoCompra.addActionListener(new ButtonActionListener(this,"CopiarPedidoCompra"));
		
		this.jButtonVerFormPedidoCompra.addActionListener(new ButtonActionListener(this,"VerFormPedidoCompra"));
		
		
		this.jButtonNuevoToolBarPedidoCompra.addActionListener(new ButtonActionListener(this,"NuevoToolBarPedidoCompra"));
			
		this.jButtonDuplicarToolBarPedidoCompra.addActionListener(new ButtonActionListener(this,"DuplicarToolBarPedidoCompra"));
			
		this.jMenuItemNuevoPedidoCompra.addActionListener (new ButtonActionListener(this,"MenuItemNuevoPedidoCompra"));
			
		this.jMenuItemDuplicarPedidoCompra.addActionListener (new ButtonActionListener(this,"MenuItemDuplicarPedidoCompra"));		
		
		
		this.jButtonNuevoRelacionesPedidoCompra.addActionListener (new ButtonActionListener(this,"NuevoRelacionesPedidoCompra"));
		
		
		this.jButtonNuevoRelacionesToolBarPedidoCompra.addActionListener(new ButtonActionListener(this,"NuevoRelacionesToolBarPedidoCompra"));
			
		this.jMenuItemNuevoRelacionesPedidoCompra.addActionListener(new ButtonActionListener(this,"MenuItemNuevoRelacionesPedidoCompra"));		
		
		
		if(this.jInternalFrameDetalleFormPedidoCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPedidoCompra.jButtonModificarPedidoCompra.addActionListener(new ButtonActionListener(this,"ModificarPedidoCompra"));
		}
		
		
		if(this.jInternalFrameDetalleFormPedidoCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPedidoCompra.jButtonModificarToolBarPedidoCompra.addActionListener(new ButtonActionListener(this,"ModificarToolBarPedidoCompra"));
			
			this.jInternalFrameDetalleFormPedidoCompra.jMenuItemModificarPedidoCompra.addActionListener(new ButtonActionListener(this,"MenuItemModificarPedidoCompra"));		
		}
		
		
		if(this.jInternalFrameDetalleFormPedidoCompra!=null) { //if(this.conCargarFormDetalle) {			
			this.jInternalFrameDetalleFormPedidoCompra.jButtonActualizarPedidoCompra.addActionListener (new ButtonActionListener(this,"ActualizarPedidoCompra"));
		}
		
		
		if(this.jInternalFrameDetalleFormPedidoCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPedidoCompra.jButtonActualizarToolBarPedidoCompra.addActionListener(new ButtonActionListener(this,"ActualizarToolBarPedidoCompra"));
				
			this.jInternalFrameDetalleFormPedidoCompra.jMenuItemActualizarPedidoCompra.addActionListener (new ButtonActionListener(this,"MenuItemActualizarPedidoCompra"));		
		}
		
		
		if(this.jInternalFrameDetalleFormPedidoCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPedidoCompra.jButtonEliminarPedidoCompra.addActionListener (new ButtonActionListener(this,"EliminarPedidoCompra"));
		}
		
		
		if(this.jInternalFrameDetalleFormPedidoCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPedidoCompra.jButtonEliminarToolBarPedidoCompra.addActionListener (new ButtonActionListener(this,"EliminarToolBarPedidoCompra"));
						
			this.jInternalFrameDetalleFormPedidoCompra.jMenuItemEliminarPedidoCompra.addActionListener (new ButtonActionListener(this,"MenuItemEliminarPedidoCompra"));		
		}
		
		
		if(this.jInternalFrameDetalleFormPedidoCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPedidoCompra.jButtonCancelarPedidoCompra.addActionListener (new ButtonActionListener(this,"CancelarPedidoCompra"));
		}
		
		
		if(this.jInternalFrameDetalleFormPedidoCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPedidoCompra.jButtonCancelarToolBarPedidoCompra.addActionListener (new ButtonActionListener(this,"CancelarToolBarPedidoCompra"));
			
			this.jInternalFrameDetalleFormPedidoCompra.jMenuItemCancelarPedidoCompra.addActionListener (new ButtonActionListener(this,"MenuItemCancelarPedidoCompra"));		
		}
		
		this.jButtonMostrarOcultarTablaToolBarPedidoCompra.addActionListener (new ButtonActionListener(this,"MostrarOcultarToolBarPedidoCompra"));		
		
		
		this.jButtonCerrarPedidoCompra.addActionListener (new ButtonActionListener(this,"CerrarPedidoCompra"));
		
		
		this.jButtonCerrarToolBarPedidoCompra.addActionListener (new ButtonActionListener(this,"CerrarToolBarPedidoCompra"));
			
		this.jMenuItemCerrarPedidoCompra.addActionListener (new ButtonActionListener(this,"MenuItemCerrarPedidoCompra"));
			
		if(this.jInternalFrameDetalleFormPedidoCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPedidoCompra.jMenuItemDetalleCerrarPedidoCompra.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarPedidoCompra"));		
		}
		
		
		if(this.jInternalFrameDetalleFormPedidoCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPedidoCompra.jButtonGuardarCambiosPedidoCompra.addActionListener (new ButtonActionListener(this,"GuardarCambiosPedidoCompra"));
		}
		
		
		if(this.jInternalFrameDetalleFormPedidoCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPedidoCompra.jButtonGuardarCambiosToolBarPedidoCompra.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarPedidoCompra"));
		}
		
		this.jButtonCopiarToolBarPedidoCompra.addActionListener (new ButtonActionListener(this,"CopiarToolBarPedidoCompra"));
			
		this.jButtonVerFormToolBarPedidoCompra.addActionListener (new ButtonActionListener(this,"VerFormToolBarPedidoCompra"));
		
		this.jMenuItemGuardarCambiosPedidoCompra.addActionListener (new ButtonActionListener(this,"MenuItemGuardarCambiosPedidoCompra"));
			
		this.jMenuItemCopiarPedidoCompra.addActionListener (new ButtonActionListener(this,"MenuItemCopiarPedidoCompra"));		
		
		this.jMenuItemVerFormPedidoCompra.addActionListener (new ButtonActionListener(this,"MenuItemVerFormPedidoCompra"));		
		
		
		this.jButtonGuardarCambiosTablaPedidoCompra.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaPedidoCompra"));
		
		
		this.jButtonGuardarCambiosTablaToolBarPedidoCompra.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaToolBarPedidoCompra"));
			
		this.jMenuItemGuardarCambiosTablaPedidoCompra.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaPedidoCompra"));		
		
		
		
		this.jButtonRecargarInformacionPedidoCompra.addActionListener (new ButtonActionListener(this,"RecargarInformacionPedidoCompra"));
					
		this.jButtonRecargarInformacionToolBarPedidoCompra.addActionListener (new ButtonActionListener(this,"RecargarInformacionToolBarPedidoCompra"));
		
		this.jMenuItemRecargarInformacionPedidoCompra.addActionListener (new ButtonActionListener(this,"MenuItemRecargarInformacionPedidoCompra"));		
		
		
		
		this.jButtonAnterioresPedidoCompra.addActionListener (new ButtonActionListener(this,"AnterioresPedidoCompra"));
		
		
		this.jButtonAnterioresToolBarPedidoCompra.addActionListener (new ButtonActionListener(this,"AnterioresToolBarPedidoCompra"));
		
		this.jMenuItemAnterioresPedidoCompra.addActionListener (new ButtonActionListener(this,"MenuItemAnterioresPedidoCompra"));		
		
		
		this.jButtonSiguientesPedidoCompra.addActionListener (new ButtonActionListener(this,"SiguientesPedidoCompra"));
		
		
		this.jButtonSiguientesToolBarPedidoCompra.addActionListener (new ButtonActionListener(this,"SiguientesToolBarPedidoCompra"));
			
		this.jMenuItemSiguientesPedidoCompra.addActionListener (new ButtonActionListener(this,"MenuItemSiguientesPedidoCompra"));
			
		this.jMenuItemAbrirOrderByPedidoCompra.addActionListener (new ButtonActionListener(this,"MenuItemAbrirOrderByPedidoCompra"));
			
		this.jMenuItemMostrarOcultarPedidoCompra.addActionListener (new ButtonActionListener(this,"MenuItemMostrarOcultarPedidoCompra"));
			
		this.jMenuItemDetalleAbrirOrderByPedidoCompra.addActionListener (new ButtonActionListener(this,"MenuItemDetalleAbrirOrderByPedidoCompra"));
			
		this.jMenuItemDetalleMostarOcultarPedidoCompra.addActionListener (new ButtonActionListener(this,"MenuItemDetalleMostrarOcultarPedidoCompra"));		
		
		
		this.jButtonNuevoGuardarCambiosPedidoCompra.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosPedidoCompra"));
		
		
		this.jButtonNuevoGuardarCambiosToolBarPedidoCompra.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosToolBarPedidoCompra"));
			
		this.jMenuItemNuevoGuardarCambiosPedidoCompra.addActionListener (new ButtonActionListener(this,"MenuItemNuevoGuardarCambiosPedidoCompra"));		
		
		
		
		//SELECCIONAR TODOS
		
		this.jCheckBoxSeleccionarTodosPedidoCompra.addItemListener(new CheckBoxItemListener(this,"SeleccionarTodosPedidoCompra"));

		this.jCheckBoxSeleccionadosPedidoCompra.addItemListener(new CheckBoxItemListener(this,"SeleccionadosPedidoCompra"));
		
		if(this.jInternalFrameDetalleFormPedidoCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPedidoCompra.jComboBoxTiposAccionesFormularioPedidoCompra.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioPedidoCompra"));
		}
		
		
		this.jComboBoxTiposRelacionesPedidoCompra.addActionListener (new ButtonActionListener(this,"TiposRelacionesPedidoCompra"));
			
		this.jComboBoxTiposAccionesPedidoCompra.addActionListener (new ButtonActionListener(this,"TiposAccionesPedidoCompra"));
					
		this.jComboBoxTiposSeleccionarPedidoCompra.addActionListener (new ButtonActionListener(this,"TiposSeleccionarPedidoCompra"));
			
		this.jTextFieldValorCampoGeneralPedidoCompra.addActionListener (new ButtonActionListener(this,"ValorCampoGeneralPedidoCompra"));		
		
		
		if(this.jInternalFrameDetalleFormPedidoCompra!=null) { //if(this.conCargarFormDetalle) {
		
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompra.jButtonidPedidoCompraBusqueda.addActionListener(new ButtonActionListener(this,"idPedidoCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_empresaPedidoCompraUpdate.addActionListener(new ButtonActionListener(this,"id_empresaPedidoCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_empresaPedidoCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaPedidoCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_sucursalPedidoCompraUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalPedidoCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_sucursalPedidoCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalPedidoCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_moduloPedidoCompraUpdate.addActionListener(new ButtonActionListener(this,"id_moduloPedidoCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_moduloPedidoCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_moduloPedidoCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_ejercicioPedidoCompraUpdate.addActionListener(new ButtonActionListener(this,"id_ejercicioPedidoCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_ejercicioPedidoCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_ejercicioPedidoCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_periodoPedidoCompraUpdate.addActionListener(new ButtonActionListener(this,"id_periodoPedidoCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_periodoPedidoCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_periodoPedidoCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_anioPedidoCompraUpdate.addActionListener(new ButtonActionListener(this,"id_anioPedidoCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_anioPedidoCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_anioPedidoCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_mesPedidoCompraUpdate.addActionListener(new ButtonActionListener(this,"id_mesPedidoCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_mesPedidoCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_mesPedidoCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompra.jButtonnumero_secuencialPedidoCompraBusqueda.addActionListener(new ButtonActionListener(this,"numero_secuencialPedidoCompraBusqueda"));
		//jButtonid_clientePedidoCompra.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_clientePedidoCompraActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_clientePedidoCompra.addActionListener(new ButtonActionListener(this,"id_clientePedidoCompra"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_clientePedidoCompraUpdate.addActionListener(new ButtonActionListener(this,"id_clientePedidoCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_clientePedidoCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_clientePedidoCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_usuarioPedidoCompraUpdate.addActionListener(new ButtonActionListener(this,"id_usuarioPedidoCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_usuarioPedidoCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_usuarioPedidoCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_monedaPedidoCompraUpdate.addActionListener(new ButtonActionListener(this,"id_monedaPedidoCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_monedaPedidoCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_monedaPedidoCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_estado_pedido_compraPedidoCompraUpdate.addActionListener(new ButtonActionListener(this,"id_estado_pedido_compraPedidoCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_estado_pedido_compraPedidoCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_pedido_compraPedidoCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompra.jButtontotalPedidoCompraBusqueda.addActionListener(new ButtonActionListener(this,"totalPedidoCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompra.jButtonfechaPedidoCompraBusqueda.addActionListener(new ButtonActionListener(this,"fechaPedidoCompraBusqueda"));
		//jButtonid_empleadoPedidoCompra.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_empleadoPedidoCompraActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_empleadoPedidoCompra.addActionListener(new ButtonActionListener(this,"id_empleadoPedidoCompra"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_empleadoPedidoCompraUpdate.addActionListener(new ButtonActionListener(this,"id_empleadoPedidoCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_empleadoPedidoCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_empleadoPedidoCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompra.jButtonresponsablePedidoCompraBusqueda.addActionListener(new ButtonActionListener(this,"responsablePedidoCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompra.jButtonsolicitado_porPedidoCompraBusqueda.addActionListener(new ButtonActionListener(this,"solicitado_porPedidoCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompra.jButtonmotivo_solicitudPedidoCompraBusqueda.addActionListener(new ButtonActionListener(this,"motivo_solicitudPedidoCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompra.jButtonarea_solicitudPedidoCompraBusqueda.addActionListener(new ButtonActionListener(this,"area_solicitudPedidoCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompra.jButtonpara_uso_dePedidoCompraBusqueda.addActionListener(new ButtonActionListener(this,"para_uso_dePedidoCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompra.jButtonlugar_entregaPedidoCompraBusqueda.addActionListener(new ButtonActionListener(this,"lugar_entregaPedidoCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompra.jButtondescripcionPedidoCompraBusqueda.addActionListener(new ButtonActionListener(this,"descripcionPedidoCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompra.jButtonfecha_emisionPedidoCompraBusqueda.addActionListener(new ButtonActionListener(this,"fecha_emisionPedidoCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompra.jButtonfecha_entregaPedidoCompraBusqueda.addActionListener(new ButtonActionListener(this,"fecha_entregaPedidoCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_formatoPedidoCompraUpdate.addActionListener(new ButtonActionListener(this,"id_formatoPedidoCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_formatoPedidoCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_formatoPedidoCompraBusqueda"));
		//jButtonid_tipo_cambioPedidoCompra.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_tipo_cambioPedidoCompraActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_tipo_cambioPedidoCompra.addActionListener(new ButtonActionListener(this,"id_tipo_cambioPedidoCompra"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_tipo_cambioPedidoCompraUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_cambioPedidoCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_tipo_cambioPedidoCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_cambioPedidoCompraBusqueda"));
		}
		
		if(!this.conCargarMinimo) {
		//BYDAN_BUSQUEDAS
		
		
			this.jButtonFK_IdClientePedidoCompra.addActionListener(new ButtonActionListener(this,"FK_IdClientePedidoCompra"));

			this.jButtonBuscarFK_IdClienteid_clientePedidoCompra.addActionListener(new ButtonActionListener(this,"id_clientePedidoCompra"));

			this.jButtonFK_IdEmpleadoPedidoCompra.addActionListener(new ButtonActionListener(this,"FK_IdEmpleadoPedidoCompra"));

			this.jButtonBuscarFK_IdEmpleadoid_empleadoPedidoCompra.addActionListener(new ButtonActionListener(this,"id_empleadoPedidoCompra"));

			this.jButtonFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompra.addActionListener(new ButtonActionListener(this,"FK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompra"));
		
		
		
			//REPORTE DINAMICO
			
			if(this.jInternalFrameReporteDinamicoPedidoCompra!=null) {
				this.jInternalFrameReporteDinamicoPedidoCompra.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoPedidoCompra"));
				this.jInternalFrameReporteDinamicoPedidoCompra.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoPedidoCompra"));
				this.jInternalFrameReporteDinamicoPedidoCompra.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoPedidoCompra"));
			}
			
			//this.jButtonCerrarReporteDinamicoPedidoCompra.addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoPedidoCompra"));				
			//this.jButtonGenerarReporteDinamicoPedidoCompra.addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoPedidoCompra"));
			//this.jButtonGenerarExcelReporteDinamicoPedidoCompra.addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoPedidoCompra"));
				
				
			//IMPORTACION			
			if(this.jInternalFrameImportacionPedidoCompra!=null) {
				this.jInternalFrameImportacionPedidoCompra.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionPedidoCompra"));
				this.jInternalFrameImportacionPedidoCompra.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionPedidoCompra"));
				this.jInternalFrameImportacionPedidoCompra.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionPedidoCompra"));
			}
			
			//ORDER BY
			this.jButtonAbrirOrderByPedidoCompra.addActionListener (new ButtonActionListener(this,"AbrirOrderByPedidoCompra"));
			
			this.jButtonAbrirOrderByToolBarPedidoCompra.addActionListener (new ButtonActionListener(this,"AbrirOrderByToolBarPedidoCompra"));			
			
			if(this.jInternalFrameOrderByPedidoCompra!=null) {
				this.jInternalFrameOrderByPedidoCompra.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByPedidoCompra"));				
			}
			
			
		}
		
		
		
		if(!this.conCargarMinimo) {
			if(this.jInternalFrameDetalleFormPedidoCompra!=null) { //if(this.conCargarFormDetalle) {
			;
			}
		}
		
		
		//TABBED PANE RELACIONES
		if(this.jInternalFrameDetalleFormPedidoCompra!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPedidoCompra.jTabbedPaneRelacionesPedidoCompra.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesPedidoCompra"));
		
		;
		}
		//TABBED PANE RELACIONES FIN(EXTRA TAB)		
	}
	
	/*
	public void initActions() {
		String sMapKey = "";
		InputMap inputMap =null;
		
		this.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
            public void internalFrameClosing(InternalFrameEvent event) {          	
            	try {
            		closingInternalFramePedidoCompra();
				} catch (Exception e) {
					e.printStackTrace();
				}
            }
        });
		
		this.jInternalFrameDetalleFormPedidoCompra.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
	        public void internalFrameClosing(InternalFrameEvent event) {
	            JInternalFrameBase jInternalFrameDetalleFormPedidoCompra = (JInternalFrameBase)event.getSource();
	            	
	            PedidoCompraBeanSwingJInternalFrame jInternalFrameParent=(PedidoCompraBeanSwingJInternalFrame)jInternalFrameDetalleFormPedidoCompra.getjInternalFrameParent();
	                
	            try {
					jInternalFrameParent.jButtonCancelarPedidoCompraActionPerformed(null);
					
					//jInternalFrameParent.dispose();
					//jInternalFrameParent=null;
					
				} catch (Exception e) {
					e.printStackTrace();
				}
	        }
	    });
			
		this.jTableDatosPedidoCompra.getSelectionModel().addListSelectionListener (
	                new ListSelectionListener() {
	                    public void valueChanged(ListSelectionEvent e) {
							//BYDAN_DESHABILITADO
	                    	//try {jTableDatosPedidoCompraListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
	                    }
	                }
	     );
		
		this.jTableDatosPedidoCompra.addMouseListener(new MouseAdapter() {
			   public void mouseClicked(MouseEvent evt) {
				      if (evt.getClickCount() == 2) {
				    	  jButtonIdActionPerformed(null,jTableDatosPedidoCompra.getSelectedRow(),false,false);
				      }
				   }
		});
		
		this.jButtonNuevoPedidoCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoPedidoCompraActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoToolBarPedidoCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoPedidoCompraActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoPedidoCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoPedidoCompraActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoPedidoCompra";
		inputMap = this.jButtonNuevoPedidoCompra.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_N , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoPedidoCompra.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoPedidoCompraActionPerformed(evt,false);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonNuevoRelacionesPedidoCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoPedidoCompraActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoRelacionesToolBarPedidoCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoPedidoCompraActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoRelacionesPedidoCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoPedidoCompraActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoRelacionesPedidoCompra";
		inputMap = this.jButtonNuevoRelacionesPedidoCompra.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_R , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoRelacionesPedidoCompra.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoPedidoCompraActionPerformed(evt,true);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonModificarPedidoCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarPedidoCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonModificarToolBarPedidoCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarPedidoCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemModificarPedidoCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarPedidoCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ModificarPedidoCompra";
		inputMap = this.jButtonModificarPedidoCompra.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_M , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonModificarPedidoCompra.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonModificarPedidoCompraActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonActualizarPedidoCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarPedidoCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonActualizarToolBarPedidoCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarPedidoCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemActualizarPedidoCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarPedidoCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ActualizarPedidoCompra";
		inputMap = this.jButtonActualizarPedidoCompra.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonActualizarPedidoCompra.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonActualizarPedidoCompraActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonEliminarPedidoCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarPedidoCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonEliminarToolBarPedidoCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarPedidoCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
				
		this.jMenuItemEliminarPedidoCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarPedidoCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "EliminarPedidoCompra";
		inputMap = this.jButtonEliminarPedidoCompra.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_E , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonEliminarPedidoCompra.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonEliminarPedidoCompraActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCancelarPedidoCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarPedidoCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCancelarToolBarPedidoCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarPedidoCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCancelarPedidoCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarPedidoCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CancelarPedidoCompra";
		inputMap = this.jButtonCancelarPedidoCompra.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_Q , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonCancelarPedidoCompra.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCancelarPedidoCompraActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCerrarPedidoCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarPedidoCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCerrarToolBarPedidoCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarPedidoCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCerrarPedidoCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarPedidoCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemDetalleCerrarPedidoCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  //try {jButtonCerrarPedidoCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
					try {jButtonCancelarPedidoCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CerrarPedidoCompra";
		inputMap = this.jButtonCerrarPedidoCompra.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_C , KeyEvent.ALT_MASK), sMapKey);
			
		this.jButtonCerrarPedidoCompra.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCerrarPedidoCompraActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jInternalFrameDetalleFormPedidoCompra.jButtonGuardarCambiosPedidoCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosPedidoCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosToolBarPedidoCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosPedidoCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosPedidoCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosPedidoCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaPedidoCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosPedidoCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaToolBarPedidoCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosPedidoCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosTablaPedidoCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosPedidoCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "GuardarCambiosPedidoCompra";
		inputMap = this.jInternalFrameDetalleFormPedidoCompra.jButtonGuardarCambiosPedidoCompra.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jInternalFrameDetalleFormPedidoCompra.jButtonGuardarCambiosPedidoCompra.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonGuardarCambiosPedidoCompraActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonRecargarInformacionPedidoCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionPedidoCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonRecargarInformacionToolBarPedidoCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionPedidoCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemRecargarInformacionPedidoCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionPedidoCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		this.jButtonAnterioresPedidoCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresPedidoCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAnterioresToolBarPedidoCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresPedidoCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemAnterioresPedidoCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresPedidoCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesPedidoCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesPedidoCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesToolBarPedidoCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesPedidoCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemSiguientesPedidoCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesPedidoCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosPedidoCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosPedidoCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosToolBarPedidoCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosPedidoCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoGuardarCambiosPedidoCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosPedidoCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		//SELECCIONAR TODOS
		this.jCheckBoxSeleccionarTodosPedidoCompra.addItemListener(new ItemListener() {		
			public void itemStateChanged(ItemEvent evt) {
				try {jCheckBoxSeleccionarTodosPedidoCompraItemListener(evt);}catch(Exception e){e.printStackTrace();}
			}
		});

		this.jComboBoxTiposAccionesPedidoCompra.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposAccionesPedidoCompraActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jComboBoxTiposSeleccionarPedidoCompra.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposSeleccionarPedidoCompraActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jTextFieldValorCampoGeneralPedidoCompra.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jTextFieldValorCampoGeneralPedidoCompraActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompra.jButtonidPedidoCompraBusqueda.addActionListener(new ButtonActionListener(this,"idPedidoCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_empresaPedidoCompraUpdate.addActionListener(new ButtonActionListener(this,"id_empresaPedidoCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_empresaPedidoCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaPedidoCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_sucursalPedidoCompraUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalPedidoCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_sucursalPedidoCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalPedidoCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_moduloPedidoCompraUpdate.addActionListener(new ButtonActionListener(this,"id_moduloPedidoCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_moduloPedidoCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_moduloPedidoCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_ejercicioPedidoCompraUpdate.addActionListener(new ButtonActionListener(this,"id_ejercicioPedidoCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_ejercicioPedidoCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_ejercicioPedidoCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_periodoPedidoCompraUpdate.addActionListener(new ButtonActionListener(this,"id_periodoPedidoCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_periodoPedidoCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_periodoPedidoCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_anioPedidoCompraUpdate.addActionListener(new ButtonActionListener(this,"id_anioPedidoCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_anioPedidoCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_anioPedidoCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_mesPedidoCompraUpdate.addActionListener(new ButtonActionListener(this,"id_mesPedidoCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_mesPedidoCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_mesPedidoCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompra.jButtonnumero_secuencialPedidoCompraBusqueda.addActionListener(new ButtonActionListener(this,"numero_secuencialPedidoCompraBusqueda"));
		//jButtonid_clientePedidoCompra.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_clientePedidoCompraActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_clientePedidoCompra.addActionListener(new ButtonActionListener(this,"id_clientePedidoCompra"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_clientePedidoCompraUpdate.addActionListener(new ButtonActionListener(this,"id_clientePedidoCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_clientePedidoCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_clientePedidoCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_usuarioPedidoCompraUpdate.addActionListener(new ButtonActionListener(this,"id_usuarioPedidoCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_usuarioPedidoCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_usuarioPedidoCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_monedaPedidoCompraUpdate.addActionListener(new ButtonActionListener(this,"id_monedaPedidoCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_monedaPedidoCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_monedaPedidoCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_estado_pedido_compraPedidoCompraUpdate.addActionListener(new ButtonActionListener(this,"id_estado_pedido_compraPedidoCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_estado_pedido_compraPedidoCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_pedido_compraPedidoCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompra.jButtontotalPedidoCompraBusqueda.addActionListener(new ButtonActionListener(this,"totalPedidoCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompra.jButtonfechaPedidoCompraBusqueda.addActionListener(new ButtonActionListener(this,"fechaPedidoCompraBusqueda"));
		//jButtonid_empleadoPedidoCompra.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_empleadoPedidoCompraActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_empleadoPedidoCompra.addActionListener(new ButtonActionListener(this,"id_empleadoPedidoCompra"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_empleadoPedidoCompraUpdate.addActionListener(new ButtonActionListener(this,"id_empleadoPedidoCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_empleadoPedidoCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_empleadoPedidoCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompra.jButtonresponsablePedidoCompraBusqueda.addActionListener(new ButtonActionListener(this,"responsablePedidoCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompra.jButtonsolicitado_porPedidoCompraBusqueda.addActionListener(new ButtonActionListener(this,"solicitado_porPedidoCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompra.jButtonmotivo_solicitudPedidoCompraBusqueda.addActionListener(new ButtonActionListener(this,"motivo_solicitudPedidoCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompra.jButtonarea_solicitudPedidoCompraBusqueda.addActionListener(new ButtonActionListener(this,"area_solicitudPedidoCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompra.jButtonpara_uso_dePedidoCompraBusqueda.addActionListener(new ButtonActionListener(this,"para_uso_dePedidoCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompra.jButtonlugar_entregaPedidoCompraBusqueda.addActionListener(new ButtonActionListener(this,"lugar_entregaPedidoCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompra.jButtondescripcionPedidoCompraBusqueda.addActionListener(new ButtonActionListener(this,"descripcionPedidoCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompra.jButtonfecha_emisionPedidoCompraBusqueda.addActionListener(new ButtonActionListener(this,"fecha_emisionPedidoCompraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompra.jButtonfecha_entregaPedidoCompraBusqueda.addActionListener(new ButtonActionListener(this,"fecha_entregaPedidoCompraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_formatoPedidoCompraUpdate.addActionListener(new ButtonActionListener(this,"id_formatoPedidoCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_formatoPedidoCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_formatoPedidoCompraBusqueda"));
		//jButtonid_tipo_cambioPedidoCompra.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_tipo_cambioPedidoCompraActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_tipo_cambioPedidoCompra.addActionListener(new ButtonActionListener(this,"id_tipo_cambioPedidoCompra"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_tipo_cambioPedidoCompraUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_cambioPedidoCompraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoCompra.jButtonid_tipo_cambioPedidoCompraBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_cambioPedidoCompraBusqueda"));
		
		
		this.jButtonFK_IdClientePedidoCompra.addActionListener(new ButtonActionListener(this,"FK_IdClientePedidoCompra"));

		this.jButtonBuscarFK_IdClienteid_clientePedidoCompra.addActionListener(new ButtonActionListener(this,"id_clientePedidoCompra"));

		this.jButtonFK_IdEmpleadoPedidoCompra.addActionListener(new ButtonActionListener(this,"FK_IdEmpleadoPedidoCompra"));

		this.jButtonBuscarFK_IdEmpleadoid_empleadoPedidoCompra.addActionListener(new ButtonActionListener(this,"id_empleadoPedidoCompra"));

		this.jButtonFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompra.addActionListener(new ButtonActionListener(this,"FK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompra"));

		
		//REPORTE DINAMICO
		this.jButtonCerrarReporteDinamicoPedidoCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarReporteDinamicoPedidoCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarReporteDinamicoPedidoCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarReporteDinamicoPedidoCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarExcelReporteDinamicoPedidoCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarExcelReporteDinamicoPedidoCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		//IMPORTACION
		this.jButtonCerrarImportacionPedidoCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarImportacionPedidoCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarImportacionPedidoCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarImportacionPedidoCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAbrirImportacionPedidoCompra.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAbrirImportacionPedidoCompraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
	}
	*/
	
	
	public void jComboBoxTiposSeleccionarPedidoCompraActionListener(ActionEvent evt) throws Exception {    		
		try {			
			Reporte reporte=(Reporte)this.jComboBoxTiposSeleccionarPedidoCompra.getSelectedItem();
			
			//if(reporte.getsCodigo().equals("SELECCIONAR")) {
			//}					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
		}
	}	
	
	
	
	public void seleccionarTodosPedidoCompra(Boolean conSeleccionarTodos) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				for(PedidoCompra pedidocompraAux:this.pedidocompraLogic.getPedidoCompras()) {
					pedidocompraAux.setIsSelected(conSeleccionarTodos);
				}			
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(PedidoCompra pedidocompraAux:pedidocompras) {
					pedidocompraAux.setIsSelected(conSeleccionarTodos);
				}
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarTodosPedidoCompraItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingPedidoCompra(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			
			if(sTipoSeleccionar.equals("COLUMNAS")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(PedidoCompra pedidocompraAux:this.pedidocompraLogic.getPedidoCompras()) {
						pedidocompraAux.setIsSelected(this.isSeleccionarTodos);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(PedidoCompra pedidocompraAux:pedidocompras) {
						pedidocompraAux.setIsSelected(this.isSeleccionarTodos);
					}
				}
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					for(PedidoCompra pedidocompraAux:this.pedidocompraLogic.getPedidoCompras()) {
					
					}	
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(PedidoCompra pedidocompraAux:pedidocompras) {
						
					}
				}
			}
					
			if(existe) {
				this.inicializarActualizarBindingTablaPedidoCompra(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosPedidoCompra.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosPedidoCompra.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompra,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionadosPedidoCompraItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingPedidoCompra(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			int[] arrNumRowsSeleccionados=null;
			
			arrNumRowsSeleccionados=this.jTableDatosPedidoCompra.getSelectedRows();
			
			PedidoCompra pedidocompraLocal=new PedidoCompra();
			
			//this.seleccionarTodosPedidoCompra(false);
			
			for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidocompraLocal =(PedidoCompra) this.pedidocompraLogic.getPedidoCompras().toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(iNumRowSeleccionado)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					pedidocompraLocal =(PedidoCompra) this.pedidocompras.toArray()[this.jTableDatosPedidoCompra.convertRowIndexToModel(iNumRowSeleccionado)];
				}
				
				pedidocompraLocal.setIsSelected(this.isSeleccionados);
			}
			
			/*
			if(sTipoSeleccionar.equals("SELECCIONAR")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(PedidoCompra pedidocompraAux:this.pedidocompraLogic.getPedidoCompras()) {
						pedidocompraAux.setIsSelected(this.isSeleccionados);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(PedidoCompra pedidocompraAux:pedidocompras) {
						pedidocompraAux.setIsSelected(this.isSeleccionados);
					}
				}
			}
			*/
			
			//if(existe) {
				this.inicializarActualizarBindingTablaPedidoCompra(false);
			/*
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			*/
			
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosPedidoCompra.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosPedidoCompra.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosPedidoCompra,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarActualPedidoCompraItemListener(ItemEvent evt,Long idActual) throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void ejecutarAuxiliarPedidoCompraParaAjaxPostBack() throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jTextFieldValorCampoGeneralPedidoCompraActionListener(ActionEvent evt) throws Exception {    		
		try {
			this.inicializarActualizarBindingPedidoCompra(false,false);
			
			//System.out.println(this.jTextFieldValorCampoGeneralPedidoCompra.getText());		
			
			Boolean existe=false;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(PedidoCompra pedidocompraAux:this.pedidocompraLogic.getPedidoCompras()) {
				
						if(sTipoSeleccionar.equals(PedidoCompraConstantesFunciones.LABEL_NUMEROSECUENCIAL)) {
							existe=true;
							pedidocompraAux.setnumero_secuencial(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(PedidoCompraConstantesFunciones.LABEL_TOTAL)) {
							existe=true;
							pedidocompraAux.settotal(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoCompraConstantesFunciones.LABEL_FECHA)) {
							existe=true;
							pedidocompraAux.setfecha(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoCompraConstantesFunciones.LABEL_RESPONSABLE)) {
							existe=true;
							pedidocompraAux.setresponsable(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(PedidoCompraConstantesFunciones.LABEL_SOLICITADOPOR)) {
							existe=true;
							pedidocompraAux.setsolicitado_por(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(PedidoCompraConstantesFunciones.LABEL_MOTIVOSOLICITUD)) {
							existe=true;
							pedidocompraAux.setmotivo_solicitud(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(PedidoCompraConstantesFunciones.LABEL_AREASOLICITUD)) {
							existe=true;
							pedidocompraAux.setarea_solicitud(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(PedidoCompraConstantesFunciones.LABEL_PARAUSODE)) {
							existe=true;
							pedidocompraAux.setpara_uso_de(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(PedidoCompraConstantesFunciones.LABEL_LUGARENTREGA)) {
							existe=true;
							pedidocompraAux.setlugar_entrega(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(PedidoCompraConstantesFunciones.LABEL_DESCRIPCION)) {
							existe=true;
							pedidocompraAux.setdescripcion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(PedidoCompraConstantesFunciones.LABEL_FECHAEMISION)) {
							existe=true;
							pedidocompraAux.setfecha_emision(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoCompraConstantesFunciones.LABEL_FECHAENTREGA)) {
							existe=true;
							pedidocompraAux.setfecha_entrega(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
				}	
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(PedidoCompra pedidocompraAux:pedidocompras) {
					
						if(sTipoSeleccionar.equals(PedidoCompraConstantesFunciones.LABEL_NUMEROSECUENCIAL)) {
							existe=true;
							pedidocompraAux.setnumero_secuencial(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(PedidoCompraConstantesFunciones.LABEL_TOTAL)) {
							existe=true;
							pedidocompraAux.settotal(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoCompraConstantesFunciones.LABEL_FECHA)) {
							existe=true;
							pedidocompraAux.setfecha(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoCompraConstantesFunciones.LABEL_RESPONSABLE)) {
							existe=true;
							pedidocompraAux.setresponsable(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(PedidoCompraConstantesFunciones.LABEL_SOLICITADOPOR)) {
							existe=true;
							pedidocompraAux.setsolicitado_por(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(PedidoCompraConstantesFunciones.LABEL_MOTIVOSOLICITUD)) {
							existe=true;
							pedidocompraAux.setmotivo_solicitud(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(PedidoCompraConstantesFunciones.LABEL_AREASOLICITUD)) {
							existe=true;
							pedidocompraAux.setarea_solicitud(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(PedidoCompraConstantesFunciones.LABEL_PARAUSODE)) {
							existe=true;
							pedidocompraAux.setpara_uso_de(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(PedidoCompraConstantesFunciones.LABEL_LUGARENTREGA)) {
							existe=true;
							pedidocompraAux.setlugar_entrega(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(PedidoCompraConstantesFunciones.LABEL_DESCRIPCION)) {
							existe=true;
							pedidocompraAux.setdescripcion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(PedidoCompraConstantesFunciones.LABEL_FECHAEMISION)) {
							existe=true;
							pedidocompraAux.setfecha_emision(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoCompraConstantesFunciones.LABEL_FECHAENTREGA)) {
							existe=true;
							pedidocompraAux.setfecha_entrega(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
				}
			}
								
			if(existe) {
				this.inicializarActualizarBindingTablaPedidoCompra(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jComboBoxTiposAccionesPedidoCompraActionListener(ActionEvent evt,Boolean esParaAccionDesdeFormulario) throws Exception {    				
		Boolean conSplash=true;
		
		try {							
		
			this.inicializarActualizarBindingPedidoCompra(false,false);
			
			Reporte reporte=new Reporte();
			
			this.esParaAccionDesdeFormularioPedidoCompra=esParaAccionDesdeFormulario;
			
			if(!esParaAccionDesdeFormulario) {
				
				reporte=(Reporte)this.jComboBoxTiposAccionesPedidoCompra.getSelectedItem();
				
			} else {
				reporte=(Reporte)this.jInternalFrameDetalleFormPedidoCompra.jComboBoxTiposAccionesFormularioPedidoCompra.getSelectedItem();
			}
			String sTipoAccionLocal=this.sTipoAccion;
			
			if(!esParaAccionDesdeFormulario) {
				sTipoAccionLocal=this.sTipoAccion;
			} else {
				sTipoAccionLocal=this.sTipoAccionFormulario;
			}
			
			if(sTipoAccionLocal.equals("GENERAR REPORTE")) {//reporte.getsCodigo().equals("GENERAR REPORTE")) {
				if(this.isPermisoReportePedidoCompra) {				
					conSplash=true;//false;										
					
					//this.startProcessPedidoCompra(conSplash);
				
					this.generarReportePedidoComprasSeleccionados();
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesPedidoCompra.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormPedidoCompra.jComboBoxTiposAccionesFormularioPedidoCompra.setSelectedIndex(0);					
				}
			} else if(sTipoAccionLocal.equals("GENERAR REPORTE DINAMICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.mostrarReporteDinamicoPedidoComprasSeleccionados();
				//this.jComboBoxTiposAccionesPedidoCompra.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("GENERAR_REPORTE_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoPedidoComprasSeleccionados(false);
				//this.jComboBoxTiposAccionesPedidoCompra.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("GENERAR_REPORTE_TOTALES_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoPedidoComprasSeleccionados(true);
				//this.jComboBoxTiposAccionesPedidoCompra.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessPedidoCompra();
				
				this.exportarPedidoComprasSeleccionados();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesPedidoCompra.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormPedidoCompra.jComboBoxTiposAccionesFormularioPedidoCompra.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("IMPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				this.mostrarImportacionPedidoCompras();
				//this.importarPedidoCompras();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesPedidoCompra.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormPedidoCompra.jComboBoxTiposAccionesFormularioPedidoCompra.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS_EXCEL")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessPedidoCompra();
				//SE EXPORTA SEGUN TIPO ARCHIVO SELECCIONADO
				//this.exportarExcelPedidoComprasSeleccionados();
				//this.jComboBoxTiposAccionesPedidoCompra.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("RECARGAR_FK")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {								
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE RECARGAR REFERENCIAS ?", "MANTENIMIENTO DE Pedido Compra", JOptionPane.OK_CANCEL_OPTION) == 0) {
				
				//this.startProcessPedidoCompra();
				
					if(!esParaAccionDesdeFormulario || (esParaAccionDesdeFormulario && this.isEsNuevoPedidoCompra)) {
						this.esRecargarFks=true;
						this.cargarCombosForeignKeyPedidoCompra(false,false,false);
						this.esRecargarFks=false;
						
						JOptionPane.showMessageDialog(this,"PROCESO EJECUTADO CORRECTAMENTE","MANTENIMIENTO DE Pedido Compra",JOptionPane.INFORMATION_MESSAGE);
					} else {
						JOptionPane.showMessageDialog(this,"ESTE PROCESO SOLO FUNCIONA AL INGRESAR UN NUEVO ELEMENTO","MANTENIMIENTO",JOptionPane.ERROR_MESSAGE);	
					}
					
					
				}
				
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesPedidoCompra.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormPedidoCompra.jComboBoxTiposAccionesFormularioPedidoCompra.setSelectedIndex(0);					
				}	
			} 			
			else if(PedidoCompraBeanSwingJInternalFrame.EsProcesoReporte(reporte.getsCodigo())){
				if(this.isPermisoReportePedidoCompra) {				
					if(this.tieneElementosSeleccionados()) {
						this.quitarFilaTotales();
						
						conSplash=false;
						
						//this.startProcessPedidoCompra(conSplash);
					
						//this.actualizarParametrosGeneralPedidoCompra();
						
						this.generarReporteProcesoAccionPedidoComprasSeleccionados(reporte.getsCodigo());
						
						if(!esParaAccionDesdeFormulario) {
							
							this.jComboBoxTiposAccionesPedidoCompra.setSelectedIndex(0);					
							
						} else {
							this.jInternalFrameDetalleFormPedidoCompra.jComboBoxTiposAccionesFormularioPedidoCompra.setSelectedIndex(0);					
						}
					} else {
						JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
			} 
			else if(PedidoCompraBeanSwingJInternalFrameAdditional.EsProcesoAccionNormal(reporte.getsCodigo())){
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR "+reporte.getsDescripcion()+" EN PROCESO Pedido CompraS SELECCIONADOS?", "MANTENIMIENTO DE Pedido Compra", JOptionPane.OK_CANCEL_OPTION) == 0) {
						//this.startProcessPedidoCompra();
				
						this.actualizarParametrosGeneralPedidoCompra();
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {						
							this.pedidocompraReturnGeneral=pedidocompraLogic.procesarAccionPedidoComprasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,sTipoAccionLocal,this.pedidocompraLogic.getPedidoCompras(),this.pedidocompraParameterGeneral);
						
						} else if(Constantes.ISUSAEJBREMOTE) {
						
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
						this.procesarPedidoCompraReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesPedidoCompra.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormPedidoCompra.jComboBoxTiposAccionesFormularioPedidoCompra.setSelectedIndex(0);					
					}
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}				
			} 
			else {
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					this.actualizarParametrosGeneralPedidoCompra();
					
					PedidoCompraBeanSwingJInternalFrameAdditional.ProcesarAccion(reporte.getsCodigo(),reporte.getsDescripcion(),this);
					
					this.procesarPedidoCompraReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesPedidoCompra.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormPedidoCompra.jComboBoxTiposAccionesFormularioPedidoCompra.setSelectedIndex(0);					
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}
			}
		} catch(Exception e) {
			this.esRecargarFks=false;
			
			FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
		
		}  finally {
      		//this.finishProcessPedidoCompra(conSplash);
      	}
	}
	
	public void jComboBoxTiposRelacionesPedidoCompraActionListener(ActionEvent evt) throws Exception {    				
		Boolean conSplash=true;
		
		try {			
			this.startProcessPedidoCompra();
			
			if(this.jInternalFrameDetalleFormPedidoCompra==null) { //if(!this.conCargarFormDetalle) {			
				this.inicializarFormDetalle();
			}
			
			ArrayList<PedidoCompra> pedidocomprasSeleccionados=new ArrayList<PedidoCompra>();		
			PedidoCompra pedidocompra=new PedidoCompra();
			
			int rowIndex=-1;//CON ESTO SE DESHABILITA SELECCION POR INDICE
			
			this.inicializarActualizarBindingPedidoCompra(false,false);
			
			Reporte reporte=new Reporte();
			
			
			reporte=(Reporte)this.jComboBoxTiposRelacionesPedidoCompra.getSelectedItem();
			
			
			
			
			pedidocomprasSeleccionados=this.getPedidoComprasSeleccionados(true);
			//this.sTipoAccion;
			
			if(pedidocomprasSeleccionados.size()==1) {
				for(PedidoCompra pedidocompraAux:pedidocomprasSeleccionados) {
					pedidocompra=pedidocompraAux;
				}
				
				if(this.sTipoAccion.equals("NONE")) {
				
				}
				
				else if(this.sTipoRelacion.equals("Detalle Pedido Compra")) {
					jButtonDetallePedidoCompraActionPerformed(null,rowIndex,true,false,pedidocompra);
				}
			} else {
				JOptionPane.showMessageDialog(this,"SELECCIONE SOLO UN REGISTRO","RELACIONES",JOptionPane.ERROR_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.finishProcessPedidoCompra();
			
      		//this.finishProcessPedidoCompra(conSplash);
      	}
	}
			
	public static Boolean EsProcesoReporte(String sTipoProceso) throws Exception {
		Boolean esProcesoAccionRepoorte=false;

		if(sTipoProceso.contains("REPORTE_")) {
			 esProcesoAccionRepoorte=true;
		}

		return esProcesoAccionRepoorte;
	}
	
	public void procesarPedidoCompraReturnGeneral() throws Exception {
		if(this.pedidocompraReturnGeneral.getConRetornoEstaProcesado()) {
			JOptionPane.showMessageDialog(this,this.pedidocompraReturnGeneral.getsMensajeProceso(),"PROCESO",JOptionPane.INFORMATION_MESSAGE);
		}
		
		if(this.pedidocompraReturnGeneral.getConMostrarMensaje()) {
			JOptionPane.showMessageDialog(this,this.pedidocompraReturnGeneral.getsMensajeProceso(),"PROCESO",FuncionesSwing.getColorSelectedBackground(this.pedidocompraReturnGeneral.getsTipoMensaje()));
		}
		
		if(this.pedidocompraReturnGeneral.getConRecargarInformacion()) {
			this.procesarBusqueda(this.sAccionBusqueda);
			
			this.inicializarActualizarBindingPedidoCompra(false);
		}
		
		if(this.pedidocompraReturnGeneral.getConRetornoLista() || this.pedidocompraReturnGeneral.getConRetornoObjeto()) {
			if(this.pedidocompraReturnGeneral.getConRetornoLista()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.pedidocompraLogic.setPedidoCompras(this.pedidocompraReturnGeneral.getPedidoCompras());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			if(this.pedidocompraReturnGeneral.getConRetornoObjeto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.pedidocompraLogic.setPedidoCompra(this.pedidocompraReturnGeneral.getPedidoCompra());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			this.inicializarActualizarBindingPedidoCompra(false);
		}
	}
	
	public void actualizarParametrosGeneralPedidoCompra() throws Exception {
		
		
	}
	
	public ArrayList<PedidoCompra> getPedidoComprasSeleccionados(Boolean conSeleccionarTodosAutomatico) throws Exception {
		ArrayList<PedidoCompra> pedidocomprasSeleccionados=new ArrayList<PedidoCompra>();
		Boolean existe=false;
		
		if(!this.esParaAccionDesdeFormularioPedidoCompra) {
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				
				for(PedidoCompra pedidocompraAux:pedidocompraLogic.getPedidoCompras()) {
					if(pedidocompraAux.getIsSelected()) {
						pedidocomprasSeleccionados.add(pedidocompraAux);				
					}
				}
				
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(PedidoCompra pedidocompraAux:this.pedidocompras) {
					if(pedidocompraAux.getIsSelected()) {
						pedidocomprasSeleccionados.add(pedidocompraAux);				
					}
				}
			}
			
			if(pedidocomprasSeleccionados.size()>0) {
				existe=true;
			}
			
			//SI NO ESTA NINGUNO SELECCIONADO SE SELECCIONA TODOS
			if(!existe) {
				if(conSeleccionarTodosAutomatico) {
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						pedidocomprasSeleccionados.addAll(this.pedidocompraLogic.getPedidoCompras());
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						pedidocomprasSeleccionados.addAll(this.pedidocompras);				
					}
				}
			}
		} else {
			pedidocomprasSeleccionados.add(this.pedidocompra);
		}
		
		return pedidocomprasSeleccionados;
	}
	
	public void actualizarVariablesTipoReporte(Boolean esReporteNormal,Boolean esReporteDinamico,Boolean esReporteAccionProceso,String sPath) {
		if(esReporteNormal) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=false;
			
		} else if(esReporteAccionProceso) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=true;
			
		} else if(esReporteDinamico) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=true;
			this.esReporteAccionProceso=false;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");			
		}
	}
	
	public void generarReportePedidoComprasSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoReporte.equals("NORMAL") || this.sTipoReporte.equals("FORMULARIO")) {
			existe=true;								
			this.generarReporteNormalPedidoComprasSeleccionados();
			
		} else if(this.sTipoReporte.equals("DINAMICO")) {
			existe=true;
			this.mostrarReporteDinamicoPedidoComprasSeleccionados();
			
		} else if(this.sTipoReporte.equals("GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoPedidoComprasSeleccionados(false);
			
		} else if(this.sTipoReporte.equals("TOTALES_GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoPedidoComprasSeleccionados(true);
		}
		else if(this.sTipoReporte.equals("RELACIONES")) {
			//SI SE GENERA REPORTE RELACIONES
			existe=true;
			this.generarReporteRelacionesPedidoComprasSeleccionados();
		}					
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE REPORTE VALIDO","REPORTE DE Pedido Compra",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void generarReporteRelacionesPedidoComprasSeleccionados() throws Exception {
		ArrayList<PedidoCompra> pedidocomprasSeleccionados=new ArrayList<PedidoCompra>();		
		
		pedidocomprasSeleccionados=this.getPedidoComprasSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
					
		//this.sTipoReporteExtra="MasterRelaciones";
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		
		this.generarReportePedidoCompras("Todos",pedidocomprasSeleccionados);
		
	}	
	
	public void generarReporteNormalPedidoComprasSeleccionados() throws Exception {
		ArrayList<PedidoCompra> pedidocomprasSeleccionados=new ArrayList<PedidoCompra>();		
		
		pedidocomprasSeleccionados=this.getPedidoComprasSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
								
		if(this.sTipoReporte.equals("FORMULARIO")) {
			this.sTipoReporteExtra="Vertical";					
		}
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.generarReportePedidoCompras("Todos",pedidocomprasSeleccionados);
	}		
	
	public void generarReporteProcesoAccionPedidoComprasSeleccionados(String sProcesoReporte) throws Exception {
		ArrayList<PedidoCompra> pedidocomprasSeleccionados=new ArrayList<PedidoCompra>();
		
		pedidocomprasSeleccionados=this.getPedidoComprasSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(false,false,true,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.sTipoReporteExtra=sProcesoReporte.toLowerCase();
		
		this.esReporteAccionProceso=true;
		this.generarReportePedidoCompras("Todos",pedidocomprasSeleccionados);
		this.esReporteAccionProceso=false;
	}
	
	
	public void mostrarReporteDinamicoPedidoComprasSeleccionados() throws Exception {
		ArrayList<PedidoCompra> pedidocomprasSeleccionados=new ArrayList<PedidoCompra>();		
		
		
		this.abrirInicializarFrameReporteDinamicoPedidoCompra();
		
		
		pedidocomprasSeleccionados=this.getPedidoComprasSeleccionados(true);
		
		this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirFrameReporteDinamicoPedidoCompra();
		
		
		//this.generarReportePedidoCompras("Todos",pedidocomprasSeleccionados ,pedidocompraImplementable,pedidocompraImplementableHome);
	}
	
	public void mostrarImportacionPedidoCompras() throws Exception {
		//this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirInicializarFrameImportacionPedidoCompra();
		
		this.abrirFrameImportacionPedidoCompra();		
		
			
		//this.generarReportePedidoCompras("Todos",pedidocomprasSeleccionados ,pedidocompraImplementable,pedidocompraImplementableHome);
	}
	
	public void importarPedidoCompras() throws Exception {		
	
	}
	
	public void exportarPedidoComprasSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoArchivoReporte.equals("EXCEL")) {
			existe=true;
			this.exportarExcelPedidoComprasSeleccionados();
			
		} else if(this.sTipoArchivoReporte.equals("TEXTO")) {
			existe=true;
			this.exportarTextoPedidoComprasSeleccionados();
		
		} else if(this.sTipoArchivoReporte.equals("XML")) {
			existe=true;
			this.exportarXmlPedidoComprasSeleccionados();
		} 
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE ARCHIVO VALIDO","EXPORTACION DE Pedido Compra",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void exportarTextoPedidoComprasSeleccionados() throws Exception {
		ArrayList<PedidoCompra> pedidocomprasSeleccionados=new ArrayList<PedidoCompra>();		
		
		pedidocomprasSeleccionados=this.getPedidoComprasSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"pedidocompra."+"txt";//Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario);
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		BufferedWriter bufferedWriter = null;
		FileWriter fileWriter=null;
		
		fileWriter=new FileWriter(sPath);
		
		bufferedWriter = new BufferedWriter(fileWriter);
		
		try {
			if(conCabecera) {
				sFilaCabecera=this.getFilaCabeceraExportarPedidoCompra(sDelimiter);
				
				bufferedWriter.write(sFilaCabecera);
			}				
			
			for(PedidoCompra pedidocompraAux:pedidocomprasSeleccionados) {
				sFilaDatos=this.getFilaDatosExportarPedidoCompra(pedidocompraAux,sDelimiter);
				
				bufferedWriter.write(sFilaDatos);
				
				//pedidocompraAux.setsDetalleGeneralEntityReporte(pedidocompraAux.toString());			
			}
			
			bufferedWriter.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.pedidocompraSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Pedido Compra",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {
       		if (bufferedWriter != null) {
				bufferedWriter.close();
			}
		}
	}
	
	public String getFilaCabeceraExportarPedidoCompra(String sDelimiter) {
		String sFilaCabecera="";
		
		
		sFilaCabecera+=PedidoCompraConstantesFunciones.LABEL_ID;

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoCompraConstantesFunciones.LABEL_VERSIONROW;
		}

		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoCompraConstantesFunciones.LABEL_IDEMPRESA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoCompraConstantesFunciones.LABEL_IDSUCURSAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoCompraConstantesFunciones.LABEL_IDMODULO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoCompraConstantesFunciones.LABEL_IDEJERCICIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoCompraConstantesFunciones.LABEL_IDPERIODO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoCompraConstantesFunciones.LABEL_IDANIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoCompraConstantesFunciones.LABEL_IDMES;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoCompraConstantesFunciones.LABEL_NUMEROSECUENCIAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoCompraConstantesFunciones.LABEL_IDCLIENTE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoCompraConstantesFunciones.LABEL_IDUSUARIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoCompraConstantesFunciones.LABEL_IDMONEDA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoCompraConstantesFunciones.LABEL_IDESTADOPEDIDOCOMPRA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoCompraConstantesFunciones.LABEL_TOTAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoCompraConstantesFunciones.LABEL_FECHA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoCompraConstantesFunciones.LABEL_IDEMPLEADO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoCompraConstantesFunciones.LABEL_RESPONSABLE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoCompraConstantesFunciones.LABEL_SOLICITADOPOR;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoCompraConstantesFunciones.LABEL_MOTIVOSOLICITUD;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoCompraConstantesFunciones.LABEL_AREASOLICITUD;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoCompraConstantesFunciones.LABEL_PARAUSODE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoCompraConstantesFunciones.LABEL_LUGARENTREGA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoCompraConstantesFunciones.LABEL_DESCRIPCION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoCompraConstantesFunciones.LABEL_FECHAEMISION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoCompraConstantesFunciones.LABEL_FECHAENTREGA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoCompraConstantesFunciones.LABEL_IDFORMATO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoCompraConstantesFunciones.LABEL_IDTIPOCAMBIO;
		
		return sFilaCabecera;
	}
	
	public String getFilaDatosExportarPedidoCompra(PedidoCompra pedidocompra,String sDelimiter) {
		String sFilaDatos="";
		
		sFilaDatos+="\r\n";
		
		
		sFilaDatos+=pedidocompra.getId().toString();

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidocompra.getVersionRow().toString();
		}

		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidocompra.getempresa_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidocompra.getsucursal_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidocompra.getmodulo_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidocompra.getejercicio_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidocompra.getperiodo_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidocompra.getanio_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidocompra.getmes_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidocompra.getnumero_secuencial();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidocompra.getcliente_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidocompra.getusuario_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidocompra.getmoneda_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidocompra.getestadopedidocompra_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidocompra.gettotal().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidocompra.getfecha().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidocompra.getempleado_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidocompra.getresponsable();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidocompra.getsolicitado_por();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidocompra.getmotivo_solicitud();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidocompra.getarea_solicitud();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidocompra.getpara_uso_de();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidocompra.getlugar_entrega();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidocompra.getdescripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidocompra.getfecha_emision().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidocompra.getfecha_entrega().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidocompra.getformato_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidocompra.gettipocambio_descripcion();
		
		return sFilaDatos;
	}
	
	//@SuppressWarnings("deprecation")
	public void exportarExcelPedidoComprasSeleccionados() throws Exception {
		ArrayList<PedidoCompra> pedidocomprasSeleccionados=new ArrayList<PedidoCompra>();		
		
		pedidocomprasSeleccionados=this.getPedidoComprasSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"pedidocompra.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		FileOutputStream fileOutputStream=null;
		
		try {
			HSSFWorkbook workbook = new HSSFWorkbook();
			HSSFSheet sheet = workbook.createSheet("PedidoCompras");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			HSSFRow row = sheet.createRow(iRow);
			HSSFCell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");

			if(conCabecera) {
				this.getFilaCabeceraExportarExcelPedidoCompra(row);				
				iRow++;
			}				
			
			for(PedidoCompra pedidocompraAux:pedidocomprasSeleccionados) {
				row = sheet.createRow(iRow);
				
				this.getFilaDatosExportarExcelPedidoCompra(pedidocompraAux,row);
				
				iRow++;
			}
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.pedidocompraSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Pedido Compra",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}
	}		
	
	public void exportarXmlPedidoComprasSeleccionados() throws Exception {
		ArrayList<PedidoCompra> pedidocomprasSeleccionados=new ArrayList<PedidoCompra>();		
		
		pedidocomprasSeleccionados=this.getPedidoComprasSeleccionados(true);
		
		//String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		//Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		//String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"pedidocompra.xml";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		DocumentBuilderFactory documentBuilderFactory=null;
		DocumentBuilder documentBuilder =null;
		
		try {
			documentBuilderFactory = DocumentBuilderFactory.newInstance();
			documentBuilder = documentBuilderFactory.newDocumentBuilder();
	
			Document document = documentBuilder.newDocument();
			Element elementRoot = document.createElement("pedidocompras");
			
			document.appendChild(elementRoot);
		    			
												
			Element element = null;//document.createElement("pedidocompra");
			//elementRoot.appendChild(element);
		
			for(PedidoCompra pedidocompraAux:pedidocomprasSeleccionados) {
				element = document.createElement("pedidocompra");
				elementRoot.appendChild(element);
			
				this.setFilaDatosExportarXmlPedidoCompra(pedidocompraAux,document,element);
			}
			
			TransformerFactory transformerFactory = TransformerFactory.newInstance();
			Transformer transformer = transformerFactory.newTransformer();
			DOMSource domSource = new DOMSource(document);
			
			StreamResult streamResult = new StreamResult(new File(sPath));
	
			transformer.transform(domSource, streamResult);
						
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.pedidocompraSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Pedido Compra",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			       				
		}
	}	
	
	//@SuppressWarnings("deprecation")
	public void getFilaCabeceraExportarExcelPedidoCompra(HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoCompraConstantesFunciones.LABEL_ID);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoCompraConstantesFunciones.LABEL_VERSIONROW);
		}

		cell = row.createCell(iColumn++);cell.setCellValue(PedidoCompraConstantesFunciones.LABEL_IDEMPRESA);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoCompraConstantesFunciones.LABEL_IDSUCURSAL);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoCompraConstantesFunciones.LABEL_IDMODULO);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoCompraConstantesFunciones.LABEL_IDEJERCICIO);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoCompraConstantesFunciones.LABEL_IDPERIODO);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoCompraConstantesFunciones.LABEL_IDANIO);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoCompraConstantesFunciones.LABEL_IDMES);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoCompraConstantesFunciones.LABEL_NUMEROSECUENCIAL);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoCompraConstantesFunciones.LABEL_IDCLIENTE);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoCompraConstantesFunciones.LABEL_IDUSUARIO);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoCompraConstantesFunciones.LABEL_IDMONEDA);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoCompraConstantesFunciones.LABEL_IDESTADOPEDIDOCOMPRA);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoCompraConstantesFunciones.LABEL_TOTAL);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoCompraConstantesFunciones.LABEL_FECHA);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoCompraConstantesFunciones.LABEL_IDEMPLEADO);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoCompraConstantesFunciones.LABEL_RESPONSABLE);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoCompraConstantesFunciones.LABEL_SOLICITADOPOR);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoCompraConstantesFunciones.LABEL_MOTIVOSOLICITUD);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoCompraConstantesFunciones.LABEL_AREASOLICITUD);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoCompraConstantesFunciones.LABEL_PARAUSODE);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoCompraConstantesFunciones.LABEL_LUGARENTREGA);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoCompraConstantesFunciones.LABEL_DESCRIPCION);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoCompraConstantesFunciones.LABEL_FECHAEMISION);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoCompraConstantesFunciones.LABEL_FECHAENTREGA);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoCompraConstantesFunciones.LABEL_IDFORMATO);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoCompraConstantesFunciones.LABEL_IDTIPOCAMBIO);
	}
	
	//@SuppressWarnings("deprecation")
	public void getFilaDatosExportarExcelPedidoCompra(PedidoCompra pedidocompra,HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(pedidocompra.getId());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidocompra.getempresa_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidocompra.getsucursal_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidocompra.getmodulo_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidocompra.getejercicio_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidocompra.getperiodo_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidocompra.getanio_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidocompra.getmes_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidocompra.getnumero_secuencial());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidocompra.getcliente_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidocompra.getusuario_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidocompra.getmoneda_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidocompra.getestadopedidocompra_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidocompra.gettotal());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidocompra.getfecha());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidocompra.getempleado_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidocompra.getresponsable());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidocompra.getsolicitado_por());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidocompra.getmotivo_solicitud());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidocompra.getarea_solicitud());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidocompra.getpara_uso_de());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidocompra.getlugar_entrega());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidocompra.getdescripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidocompra.getfecha_emision());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidocompra.getfecha_entrega());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidocompra.getformato_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidocompra.gettipocambio_descripcion());				
	}
	
	public void setFilaDatosExportarXmlPedidoCompra(PedidoCompra pedidocompra,Document document,Element element) {
		/*
		Element lastname = document.createElement("lastname");
		lastname.appendChild(document.createTextNode("mook kim"));
		element.appendChild(lastname);
		*/
		

		Element elementId = document.createElement(PedidoCompraConstantesFunciones.ID);
		elementId.appendChild(document.createTextNode(pedidocompra.getId().toString().trim()));
		element.appendChild(elementId);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){

		Element elementVersionRow = document.createElement(PedidoCompraConstantesFunciones.VERSIONROW);
		elementVersionRow.appendChild(document.createTextNode(pedidocompra.getVersionRow().toString().trim()));
		element.appendChild(elementVersionRow);
		}


		Element elementempresa_descripcion = document.createElement(PedidoCompraConstantesFunciones.IDEMPRESA);
		elementempresa_descripcion.appendChild(document.createTextNode(pedidocompra.getempresa_descripcion()));
		element.appendChild(elementempresa_descripcion);

		Element elementsucursal_descripcion = document.createElement(PedidoCompraConstantesFunciones.IDSUCURSAL);
		elementsucursal_descripcion.appendChild(document.createTextNode(pedidocompra.getsucursal_descripcion()));
		element.appendChild(elementsucursal_descripcion);

		Element elementmodulo_descripcion = document.createElement(PedidoCompraConstantesFunciones.IDMODULO);
		elementmodulo_descripcion.appendChild(document.createTextNode(pedidocompra.getmodulo_descripcion()));
		element.appendChild(elementmodulo_descripcion);

		Element elementejercicio_descripcion = document.createElement(PedidoCompraConstantesFunciones.IDEJERCICIO);
		elementejercicio_descripcion.appendChild(document.createTextNode(pedidocompra.getejercicio_descripcion()));
		element.appendChild(elementejercicio_descripcion);

		Element elementperiodo_descripcion = document.createElement(PedidoCompraConstantesFunciones.IDPERIODO);
		elementperiodo_descripcion.appendChild(document.createTextNode(pedidocompra.getperiodo_descripcion()));
		element.appendChild(elementperiodo_descripcion);

		Element elementanio_descripcion = document.createElement(PedidoCompraConstantesFunciones.IDANIO);
		elementanio_descripcion.appendChild(document.createTextNode(pedidocompra.getanio_descripcion()));
		element.appendChild(elementanio_descripcion);

		Element elementmes_descripcion = document.createElement(PedidoCompraConstantesFunciones.IDMES);
		elementmes_descripcion.appendChild(document.createTextNode(pedidocompra.getmes_descripcion()));
		element.appendChild(elementmes_descripcion);

		Element elementnumero_secuencial = document.createElement(PedidoCompraConstantesFunciones.NUMEROSECUENCIAL);
		elementnumero_secuencial.appendChild(document.createTextNode(pedidocompra.getnumero_secuencial().trim()));
		element.appendChild(elementnumero_secuencial);

		Element elementcliente_descripcion = document.createElement(PedidoCompraConstantesFunciones.IDCLIENTE);
		elementcliente_descripcion.appendChild(document.createTextNode(pedidocompra.getcliente_descripcion()));
		element.appendChild(elementcliente_descripcion);

		Element elementusuario_descripcion = document.createElement(PedidoCompraConstantesFunciones.IDUSUARIO);
		elementusuario_descripcion.appendChild(document.createTextNode(pedidocompra.getusuario_descripcion()));
		element.appendChild(elementusuario_descripcion);

		Element elementmoneda_descripcion = document.createElement(PedidoCompraConstantesFunciones.IDMONEDA);
		elementmoneda_descripcion.appendChild(document.createTextNode(pedidocompra.getmoneda_descripcion()));
		element.appendChild(elementmoneda_descripcion);

		Element elementestadopedidocompra_descripcion = document.createElement(PedidoCompraConstantesFunciones.IDESTADOPEDIDOCOMPRA);
		elementestadopedidocompra_descripcion.appendChild(document.createTextNode(pedidocompra.getestadopedidocompra_descripcion()));
		element.appendChild(elementestadopedidocompra_descripcion);

		Element elementtotal = document.createElement(PedidoCompraConstantesFunciones.TOTAL);
		elementtotal.appendChild(document.createTextNode(pedidocompra.gettotal().toString().trim()));
		element.appendChild(elementtotal);

		Element elementfecha = document.createElement(PedidoCompraConstantesFunciones.FECHA);
		elementfecha.appendChild(document.createTextNode(pedidocompra.getfecha().toString().trim()));
		element.appendChild(elementfecha);

		Element elementempleado_descripcion = document.createElement(PedidoCompraConstantesFunciones.IDEMPLEADO);
		elementempleado_descripcion.appendChild(document.createTextNode(pedidocompra.getempleado_descripcion()));
		element.appendChild(elementempleado_descripcion);

		Element elementresponsable = document.createElement(PedidoCompraConstantesFunciones.RESPONSABLE);
		elementresponsable.appendChild(document.createTextNode(pedidocompra.getresponsable().trim()));
		element.appendChild(elementresponsable);

		Element elementsolicitado_por = document.createElement(PedidoCompraConstantesFunciones.SOLICITADOPOR);
		elementsolicitado_por.appendChild(document.createTextNode(pedidocompra.getsolicitado_por().trim()));
		element.appendChild(elementsolicitado_por);

		Element elementmotivo_solicitud = document.createElement(PedidoCompraConstantesFunciones.MOTIVOSOLICITUD);
		elementmotivo_solicitud.appendChild(document.createTextNode(pedidocompra.getmotivo_solicitud().trim()));
		element.appendChild(elementmotivo_solicitud);

		Element elementarea_solicitud = document.createElement(PedidoCompraConstantesFunciones.AREASOLICITUD);
		elementarea_solicitud.appendChild(document.createTextNode(pedidocompra.getarea_solicitud().trim()));
		element.appendChild(elementarea_solicitud);

		Element elementpara_uso_de = document.createElement(PedidoCompraConstantesFunciones.PARAUSODE);
		elementpara_uso_de.appendChild(document.createTextNode(pedidocompra.getpara_uso_de().trim()));
		element.appendChild(elementpara_uso_de);

		Element elementlugar_entrega = document.createElement(PedidoCompraConstantesFunciones.LUGARENTREGA);
		elementlugar_entrega.appendChild(document.createTextNode(pedidocompra.getlugar_entrega().trim()));
		element.appendChild(elementlugar_entrega);

		Element elementdescripcion = document.createElement(PedidoCompraConstantesFunciones.DESCRIPCION);
		elementdescripcion.appendChild(document.createTextNode(pedidocompra.getdescripcion().trim()));
		element.appendChild(elementdescripcion);

		Element elementfecha_emision = document.createElement(PedidoCompraConstantesFunciones.FECHAEMISION);
		elementfecha_emision.appendChild(document.createTextNode(pedidocompra.getfecha_emision().toString().trim()));
		element.appendChild(elementfecha_emision);

		Element elementfecha_entrega = document.createElement(PedidoCompraConstantesFunciones.FECHAENTREGA);
		elementfecha_entrega.appendChild(document.createTextNode(pedidocompra.getfecha_entrega().toString().trim()));
		element.appendChild(elementfecha_entrega);

		Element elementformato_descripcion = document.createElement(PedidoCompraConstantesFunciones.IDFORMATO);
		elementformato_descripcion.appendChild(document.createTextNode(pedidocompra.getformato_descripcion()));
		element.appendChild(elementformato_descripcion);

		Element elementtipocambio_descripcion = document.createElement(PedidoCompraConstantesFunciones.IDTIPOCAMBIO);
		elementtipocambio_descripcion.appendChild(document.createTextNode(pedidocompra.gettipocambio_descripcion()));
		element.appendChild(elementtipocambio_descripcion);
	}
	
	public void generarReporteGroupGenericoPedidoComprasSeleccionados(Boolean soloTotales) throws Exception {
		ArrayList<PedidoCompra> pedidocomprasSeleccionados=new ArrayList<PedidoCompra>();
		
		pedidocomprasSeleccionados=this.getPedidoComprasSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!soloTotales) {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_GENERICO;
		} else {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_TOTALES_GENERICO;
		}
		
		this.setColumnaDescripcionReporteGroupGenericoPedidoCompra(pedidocomprasSeleccionados);
		
		this.generarReportePedidoCompras("Todos",pedidocomprasSeleccionados);
	}
	
	public void setColumnaDescripcionReporteGroupGenericoPedidoCompra(ArrayList<PedidoCompra> pedidocomprasSeleccionados) throws Exception {    		
		try {
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			
			Boolean existe=false;
			
			for(PedidoCompra pedidocompraAux:pedidocomprasSeleccionados) {
				pedidocompraAux.setsDetalleGeneralEntityReporte(pedidocompraAux.toString());
			
				if(sTipoSeleccionar.equals(PedidoCompraConstantesFunciones.LABEL_IDEMPRESA)) {
					existe=true;
					pedidocompraAux.setsDescripcionGeneralEntityReporte1(pedidocompraAux.getempresa_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PedidoCompraConstantesFunciones.LABEL_IDSUCURSAL)) {
					existe=true;
					pedidocompraAux.setsDescripcionGeneralEntityReporte1(pedidocompraAux.getsucursal_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PedidoCompraConstantesFunciones.LABEL_IDMODULO)) {
					existe=true;
					pedidocompraAux.setsDescripcionGeneralEntityReporte1(pedidocompraAux.getmodulo_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PedidoCompraConstantesFunciones.LABEL_IDEJERCICIO)) {
					existe=true;
					pedidocompraAux.setsDescripcionGeneralEntityReporte1(pedidocompraAux.getejercicio_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PedidoCompraConstantesFunciones.LABEL_IDPERIODO)) {
					existe=true;
					pedidocompraAux.setsDescripcionGeneralEntityReporte1(pedidocompraAux.getperiodo_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PedidoCompraConstantesFunciones.LABEL_IDANIO)) {
					existe=true;
					pedidocompraAux.setsDescripcionGeneralEntityReporte1(pedidocompraAux.getanio_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PedidoCompraConstantesFunciones.LABEL_IDMES)) {
					existe=true;
					pedidocompraAux.setsDescripcionGeneralEntityReporte1(pedidocompraAux.getmes_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PedidoCompraConstantesFunciones.LABEL_NUMEROSECUENCIAL)) {
					existe=true;
					pedidocompraAux.setsDescripcionGeneralEntityReporte1(pedidocompraAux.getnumero_secuencial());
				}
				 else if(sTipoSeleccionar.equals(PedidoCompraConstantesFunciones.LABEL_IDCLIENTE)) {
					existe=true;
					pedidocompraAux.setsDescripcionGeneralEntityReporte1(pedidocompraAux.getcliente_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PedidoCompraConstantesFunciones.LABEL_IDUSUARIO)) {
					existe=true;
					pedidocompraAux.setsDescripcionGeneralEntityReporte1(pedidocompraAux.getusuario_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PedidoCompraConstantesFunciones.LABEL_IDMONEDA)) {
					existe=true;
					pedidocompraAux.setsDescripcionGeneralEntityReporte1(pedidocompraAux.getmoneda_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PedidoCompraConstantesFunciones.LABEL_IDESTADOPEDIDOCOMPRA)) {
					existe=true;
					pedidocompraAux.setsDescripcionGeneralEntityReporte1(pedidocompraAux.getestadopedidocompra_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PedidoCompraConstantesFunciones.LABEL_FECHA)) {
					existe=true;
					pedidocompraAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(pedidocompraAux.getfecha()));
				}
				 else if(sTipoSeleccionar.equals(PedidoCompraConstantesFunciones.LABEL_IDEMPLEADO)) {
					existe=true;
					pedidocompraAux.setsDescripcionGeneralEntityReporte1(pedidocompraAux.getempleado_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PedidoCompraConstantesFunciones.LABEL_RESPONSABLE)) {
					existe=true;
					pedidocompraAux.setsDescripcionGeneralEntityReporte1(pedidocompraAux.getresponsable());
				}
				 else if(sTipoSeleccionar.equals(PedidoCompraConstantesFunciones.LABEL_SOLICITADOPOR)) {
					existe=true;
					pedidocompraAux.setsDescripcionGeneralEntityReporte1(pedidocompraAux.getsolicitado_por());
				}
				 else if(sTipoSeleccionar.equals(PedidoCompraConstantesFunciones.LABEL_MOTIVOSOLICITUD)) {
					existe=true;
					pedidocompraAux.setsDescripcionGeneralEntityReporte1(pedidocompraAux.getmotivo_solicitud());
				}
				 else if(sTipoSeleccionar.equals(PedidoCompraConstantesFunciones.LABEL_AREASOLICITUD)) {
					existe=true;
					pedidocompraAux.setsDescripcionGeneralEntityReporte1(pedidocompraAux.getarea_solicitud());
				}
				 else if(sTipoSeleccionar.equals(PedidoCompraConstantesFunciones.LABEL_PARAUSODE)) {
					existe=true;
					pedidocompraAux.setsDescripcionGeneralEntityReporte1(pedidocompraAux.getpara_uso_de());
				}
				 else if(sTipoSeleccionar.equals(PedidoCompraConstantesFunciones.LABEL_LUGARENTREGA)) {
					existe=true;
					pedidocompraAux.setsDescripcionGeneralEntityReporte1(pedidocompraAux.getlugar_entrega());
				}
				 else if(sTipoSeleccionar.equals(PedidoCompraConstantesFunciones.LABEL_DESCRIPCION)) {
					existe=true;
					pedidocompraAux.setsDescripcionGeneralEntityReporte1(pedidocompraAux.getdescripcion());
				}
				 else if(sTipoSeleccionar.equals(PedidoCompraConstantesFunciones.LABEL_FECHAEMISION)) {
					existe=true;
					pedidocompraAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(pedidocompraAux.getfecha_emision()));
				}
				 else if(sTipoSeleccionar.equals(PedidoCompraConstantesFunciones.LABEL_FECHAENTREGA)) {
					existe=true;
					pedidocompraAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(pedidocompraAux.getfecha_entrega()));
				}
				 else if(sTipoSeleccionar.equals(PedidoCompraConstantesFunciones.LABEL_IDFORMATO)) {
					existe=true;
					pedidocompraAux.setsDescripcionGeneralEntityReporte1(pedidocompraAux.getformato_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PedidoCompraConstantesFunciones.LABEL_IDTIPOCAMBIO)) {
					existe=true;
					pedidocompraAux.setsDescripcionGeneralEntityReporte1(pedidocompraAux.gettipocambio_descripcion());
				}
			}	
											
			if(!existe) {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}										
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoCompraConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void actualizarEstadoCeldasBotonesPedidoCompra(String sAccion,Boolean isGuardarCambiosEnLote,Boolean isEsMantenimientoRelacionado) throws Exception {
		if(sAccion=="n") {
			if(!this.esParaBusquedaForeignKey) {
				this.isVisibilidadCeldaNuevoPedidoCompra=true;
				this.isVisibilidadCeldaNuevoRelacionesPedidoCompra=true;
				this.isVisibilidadCeldaGuardarCambiosPedidoCompra=true;
			}
			
			this.isVisibilidadCeldaModificarPedidoCompra=false;
			this.isVisibilidadCeldaActualizarPedidoCompra=false;
			this.isVisibilidadCeldaEliminarPedidoCompra=false;
			this.isVisibilidadCeldaCancelarPedidoCompra=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarPedidoCompra=true;
				} else {
					this.isVisibilidadCeldaGuardarPedidoCompra=false;
				}
			}
		} else if(sAccion=="a") {
			this.isVisibilidadCeldaNuevoPedidoCompra=false;
			this.isVisibilidadCeldaNuevoRelacionesPedidoCompra=false;
			this.isVisibilidadCeldaGuardarCambiosPedidoCompra=false;
			this.isVisibilidadCeldaModificarPedidoCompra=false;
			this.isVisibilidadCeldaActualizarPedidoCompra=true;
			this.isVisibilidadCeldaEliminarPedidoCompra=false;
			this.isVisibilidadCeldaCancelarPedidoCompra=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarPedidoCompra=true;
				} else {
					this.isVisibilidadCeldaGuardarPedidoCompra=false;
				}
			}
		} else if(sAccion=="ae") {
			this.isVisibilidadCeldaNuevoPedidoCompra=false;
			this.isVisibilidadCeldaNuevoRelacionesPedidoCompra=false;
			this.isVisibilidadCeldaGuardarCambiosPedidoCompra=false;
			this.isVisibilidadCeldaModificarPedidoCompra=false;
			this.isVisibilidadCeldaActualizarPedidoCompra=true;
			this.isVisibilidadCeldaEliminarPedidoCompra=true;
			this.isVisibilidadCeldaCancelarPedidoCompra=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarPedidoCompra=true;
				} else {
					this.isVisibilidadCeldaGuardarPedidoCompra=false;
				}
			}
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {
			this.isVisibilidadCeldaNuevoPedidoCompra=false;
			this.isVisibilidadCeldaNuevoRelacionesPedidoCompra=false;
			this.isVisibilidadCeldaGuardarCambiosPedidoCompra=false;
			this.isVisibilidadCeldaModificarPedidoCompra=false;
			this.isVisibilidadCeldaActualizarPedidoCompra=true;
			this.isVisibilidadCeldaEliminarPedidoCompra=false;
			this.isVisibilidadCeldaCancelarPedidoCompra=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarPedidoCompra=false;
				} else {
					this.isVisibilidadCeldaGuardarPedidoCompra=false;
				}
			}
		} else if(sAccion=="c") {
			this.isVisibilidadCeldaNuevoPedidoCompra=true;
			this.isVisibilidadCeldaNuevoRelacionesPedidoCompra=true;
			this.isVisibilidadCeldaGuardarCambiosPedidoCompra=true;
			this.isVisibilidadCeldaModificarPedidoCompra=false;
			this.isVisibilidadCeldaActualizarPedidoCompra=false;
			this.isVisibilidadCeldaEliminarPedidoCompra=false;
			this.isVisibilidadCeldaCancelarPedidoCompra=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarPedidoCompra=true;
				} else {
					this.isVisibilidadCeldaGuardarPedidoCompra=false;
				}
			}
		} else if(sAccion=="t") {
			this.isVisibilidadCeldaNuevoPedidoCompra=false;
			this.isVisibilidadCeldaNuevoRelacionesPedidoCompra=false;
			this.isVisibilidadCeldaGuardarCambiosPedidoCompra=false;
			this.isVisibilidadCeldaActualizarPedidoCompra=false;
			this.isVisibilidadCeldaEliminarPedidoCompra=false;
			this.isVisibilidadCeldaCancelarPedidoCompra=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarPedidoCompra=false;
				} else {
					this.isVisibilidadCeldaGuardarPedidoCompra=false;
				}
			}
		}  else if(sAccion=="s"||sAccion=="s2") {
			this.isVisibilidadCeldaNuevoPedidoCompra=false;
			this.isVisibilidadCeldaNuevoRelacionesPedidoCompra=false;
			this.isVisibilidadCeldaGuardarCambiosPedidoCompra=false;
			this.isVisibilidadCeldaModificarPedidoCompra=true;
			this.isVisibilidadCeldaActualizarPedidoCompra=false;
			this.isVisibilidadCeldaEliminarPedidoCompra=false;
			this.isVisibilidadCeldaCancelarPedidoCompra=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarPedidoCompra=false;
				} else {
					this.isVisibilidadCeldaGuardarPedidoCompra=false;
				}
			}
		}
		
		//ACTUALIZA VISIBILIDAD PANELES
		if(PedidoCompraJInternalFrame.CON_DATOS_FRAME && !this.esParaBusquedaForeignKey) {
			//SIEMPRE VISIBLE
			this.isVisibilidadCeldaNuevoPedidoCompra=true;
			this.isVisibilidadCeldaNuevoRelacionesPedidoCompra=true;
			this.isVisibilidadCeldaGuardarCambiosPedidoCompra=true;
		} else {
			this.actualizarEstadoPanelsPedidoCompra(sAccion);						
		}
		
		if(this.esParaBusquedaForeignKey) {
			this.isVisibilidadCeldaCopiarPedidoCompra=false;
			//this.isVisibilidadCeldaVerFormPedidoCompra=false;
			this.isVisibilidadCeldaDuplicarPedidoCompra=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONES
		if(!pedidocompraSessionBean.getConGuardarRelaciones()) {
			this.isVisibilidadCeldaNuevoRelacionesPedidoCompra=false;
		} else {
			this.isVisibilidadCeldaNuevoPedidoCompra=false;
			this.isVisibilidadCeldaGuardarCambiosPedidoCompra=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONADO
		if(pedidocompraSessionBean.getEsGuardarRelacionado()) {
			if(!pedidocompraSessionBean.getConGuardarRelaciones()) {	
				this.isVisibilidadCeldaNuevoRelacionesPedidoCompra=false;												
			}
			
			this.jButtonCerrarPedidoCompra.setVisible(false);
		}
		
		//SI NO TIENE MAXIMO DE RELACIONES PERMITIDAS
		if(!this.conMaximoRelaciones) {
			this.isVisibilidadCeldaNuevoRelacionesPedidoCompra=false;
		}
		
		if(!this.permiteMantenimiento(this.pedidocompra)) {
			this.isVisibilidadCeldaActualizarPedidoCompra=false;
			this.isVisibilidadCeldaEliminarPedidoCompra=false;
		}
		
		
		
	}
	
	public void actualizarEstadoCeldasBotonesConGuardarRelacionesPedidoCompra() {
		this.isVisibilidadCeldaNuevoPedidoCompra=false;
		this.isVisibilidadCeldaGuardarCambiosPedidoCompra=false;
	}
	
	public void actualizarEstadoPanelsPedidoCompra(String sAccion) {
		if(sAccion=="n") {
			if(this.jScrollPanelDatosEdicionPedidoCompra!=null) {
				this.jScrollPanelDatosEdicionPedidoCompra.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasPedidoCompra!=null) {
				this.jTabbedPaneBusquedasPedidoCompra.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosPedidoCompra!=null) {
				this.jScrollPanelDatosPedidoCompra.setVisible(true);
			}
			
			if(this.jPanelPaginacionPedidoCompra!=null) {
				this.jPanelPaginacionPedidoCompra.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesPedidoCompra!=null) {
				this.jPanelParametrosReportesPedidoCompra.setVisible(true);		    
			}
			
		} else if(sAccion=="a") {				
			if(this.jScrollPanelDatosEdicionPedidoCompra!=null) {
				this.jScrollPanelDatosEdicionPedidoCompra.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasPedidoCompra!=null) {
				this.jTabbedPaneBusquedasPedidoCompra.setVisible(false);			
			}
			
			
			
			if(this.jScrollPanelDatosPedidoCompra!=null) {
				this.jScrollPanelDatosPedidoCompra.setVisible(false);
			}
			
			if(this.jPanelPaginacionPedidoCompra!=null) {
				this.jPanelPaginacionPedidoCompra.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesPedidoCompra!=null) {
				this.jPanelParametrosReportesPedidoCompra.setVisible(false);
			}
						
		} else if(sAccion=="ae") {		
			if(this.jScrollPanelDatosEdicionPedidoCompra!=null) {
				this.jScrollPanelDatosEdicionPedidoCompra.setVisible(true);		
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasPedidoCompra!=null) {
				this.jTabbedPaneBusquedasPedidoCompra.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosPedidoCompra!=null) {
				this.jScrollPanelDatosPedidoCompra.setVisible(false);
			}
			
			if(this.jPanelPaginacionPedidoCompra!=null) {
				this.jPanelPaginacionPedidoCompra.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesPedidoCompra!=null) {
				this.jPanelParametrosReportesPedidoCompra.setVisible(false);
			}
						
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {	
			if(this.jScrollPanelDatosEdicionPedidoCompra!=null) {
				this.jScrollPanelDatosEdicionPedidoCompra.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasPedidoCompra!=null) {
				this.jTabbedPaneBusquedasPedidoCompra.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosPedidoCompra!=null) {
				this.jScrollPanelDatosPedidoCompra.setVisible(false);
			}
			
			if(this.jPanelPaginacionPedidoCompra!=null) {
				this.jPanelPaginacionPedidoCompra.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesPedidoCompra!=null) {
				this.jPanelParametrosReportesPedidoCompra.setVisible(false);
			}
						
		} else if(sAccion=="c") {	
			if(this.jScrollPanelDatosEdicionPedidoCompra!=null) {
				this.jScrollPanelDatosEdicionPedidoCompra.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasPedidoCompra!=null) {
				this.jTabbedPaneBusquedasPedidoCompra.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosPedidoCompra!=null) {
				this.jScrollPanelDatosPedidoCompra.setVisible(true);
			}
			
			if(this.jPanelPaginacionPedidoCompra!=null) {
				this.jPanelPaginacionPedidoCompra.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesPedidoCompra!=null) {
				this.jPanelParametrosReportesPedidoCompra.setVisible(true);
			}
						
		} else if(sAccion=="t") {
			
			if(this.jScrollPanelDatosEdicionPedidoCompra!=null) {
				this.jScrollPanelDatosEdicionPedidoCompra.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasPedidoCompra!=null) {
				this.jTabbedPaneBusquedasPedidoCompra.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosPedidoCompra!=null) {
				this.jScrollPanelDatosPedidoCompra.setVisible(true);
			}
			
			if(this.jPanelPaginacionPedidoCompra!=null) {
				this.jPanelPaginacionPedidoCompra.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesPedidoCompra!=null) {
				this.jPanelParametrosReportesPedidoCompra.setVisible(true);
			}
						
		}  else if(sAccion=="s"||sAccion=="s2") {
			if(this.jScrollPanelDatosEdicionPedidoCompra!=null) {
				this.jScrollPanelDatosEdicionPedidoCompra.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasPedidoCompra!=null) {
				this.jTabbedPaneBusquedasPedidoCompra.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosPedidoCompra!=null) {
				this.jScrollPanelDatosPedidoCompra.setVisible(true);
			}
			
			if(this.jPanelPaginacionPedidoCompra!=null) {
				this.jPanelPaginacionPedidoCompra.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesPedidoCompra!=null) {
				this.jPanelParametrosReportesPedidoCompra.setVisible(true);
			}
			
		} 
		
		if(sAccion.equals("relacionado") || this.pedidocompraSessionBean.getEsGuardarRelacionado()) {
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				if(this.jTabbedPaneBusquedasPedidoCompra!=null) {
					this.jTabbedPaneBusquedasPedidoCompra.setVisible(false);				
				}
				
			}
			
			if(this.jPanelParametrosReportesPedidoCompra!=null) {
				this.jPanelParametrosReportesPedidoCompra.setVisible(false);
			}
		
		} else if(sAccion.equals("no_relacionado") && !this.pedidocompraSessionBean.getEsGuardarRelacionado()) {
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasPedidoCompra!=null) {
				this.jTabbedPaneBusquedasPedidoCompra.setVisible(true);			
			}
			
			if(this.jPanelParametrosReportesPedidoCompra!=null) {
				this.jPanelParametrosReportesPedidoCompra.setVisible(true);
			}
		}
	}	
	
	

	public void setVisibilidadBusquedasParaEmpresa(Boolean isParaEmpresa){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEmpresaNegation=!isParaEmpresa;

			this.isVisibilidadFK_IdCliente=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPedidoCompra.remove(jPanelFK_IdClientePedidoCompra);}

			this.isVisibilidadFK_IdEmpleado=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasPedidoCompra.remove(jPanelFK_IdEmpleadoPedidoCompra);}

			this.isVisibilidadFK_IdEstadoPedidoCompraEstadoPedoCompra=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoCompraEstadoPedoCompra) {this.jTabbedPaneBusquedasPedidoCompra.remove(jPanelFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaSucursal(Boolean isParaSucursal){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaSucursalNegation=!isParaSucursal;

			this.isVisibilidadFK_IdCliente=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPedidoCompra.remove(jPanelFK_IdClientePedidoCompra);}

			this.isVisibilidadFK_IdEmpleado=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasPedidoCompra.remove(jPanelFK_IdEmpleadoPedidoCompra);}

			this.isVisibilidadFK_IdEstadoPedidoCompraEstadoPedoCompra=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoCompraEstadoPedoCompra) {this.jTabbedPaneBusquedasPedidoCompra.remove(jPanelFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaModulo(Boolean isParaModulo){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaModuloNegation=!isParaModulo;

			this.isVisibilidadFK_IdCliente=isParaModuloNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPedidoCompra.remove(jPanelFK_IdClientePedidoCompra);}

			this.isVisibilidadFK_IdEmpleado=isParaModuloNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasPedidoCompra.remove(jPanelFK_IdEmpleadoPedidoCompra);}

			this.isVisibilidadFK_IdEstadoPedidoCompraEstadoPedoCompra=isParaModuloNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoCompraEstadoPedoCompra) {this.jTabbedPaneBusquedasPedidoCompra.remove(jPanelFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaEjercicio(Boolean isParaEjercicio){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEjercicioNegation=!isParaEjercicio;

			this.isVisibilidadFK_IdCliente=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPedidoCompra.remove(jPanelFK_IdClientePedidoCompra);}

			this.isVisibilidadFK_IdEmpleado=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasPedidoCompra.remove(jPanelFK_IdEmpleadoPedidoCompra);}

			this.isVisibilidadFK_IdEstadoPedidoCompraEstadoPedoCompra=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoCompraEstadoPedoCompra) {this.jTabbedPaneBusquedasPedidoCompra.remove(jPanelFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaPeriodo(Boolean isParaPeriodo){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaPeriodoNegation=!isParaPeriodo;

			this.isVisibilidadFK_IdCliente=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPedidoCompra.remove(jPanelFK_IdClientePedidoCompra);}

			this.isVisibilidadFK_IdEmpleado=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasPedidoCompra.remove(jPanelFK_IdEmpleadoPedidoCompra);}

			this.isVisibilidadFK_IdEstadoPedidoCompraEstadoPedoCompra=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoCompraEstadoPedoCompra) {this.jTabbedPaneBusquedasPedidoCompra.remove(jPanelFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaAnio(Boolean isParaAnio){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaAnioNegation=!isParaAnio;

			this.isVisibilidadFK_IdCliente=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPedidoCompra.remove(jPanelFK_IdClientePedidoCompra);}

			this.isVisibilidadFK_IdEmpleado=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasPedidoCompra.remove(jPanelFK_IdEmpleadoPedidoCompra);}

			this.isVisibilidadFK_IdEstadoPedidoCompraEstadoPedoCompra=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoCompraEstadoPedoCompra) {this.jTabbedPaneBusquedasPedidoCompra.remove(jPanelFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaMes(Boolean isParaMes){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaMesNegation=!isParaMes;

			this.isVisibilidadFK_IdCliente=isParaMesNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPedidoCompra.remove(jPanelFK_IdClientePedidoCompra);}

			this.isVisibilidadFK_IdEmpleado=isParaMesNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasPedidoCompra.remove(jPanelFK_IdEmpleadoPedidoCompra);}

			this.isVisibilidadFK_IdEstadoPedidoCompraEstadoPedoCompra=isParaMesNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoCompraEstadoPedoCompra) {this.jTabbedPaneBusquedasPedidoCompra.remove(jPanelFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaCliente(Boolean isParaCliente){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaClienteNegation=!isParaCliente;

			this.isVisibilidadFK_IdCliente=isParaCliente;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPedidoCompra.remove(jPanelFK_IdClientePedidoCompra);}

			this.isVisibilidadFK_IdEmpleado=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasPedidoCompra.remove(jPanelFK_IdEmpleadoPedidoCompra);}

			this.isVisibilidadFK_IdEstadoPedidoCompraEstadoPedoCompra=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoCompraEstadoPedoCompra) {this.jTabbedPaneBusquedasPedidoCompra.remove(jPanelFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaUsuario(Boolean isParaUsuario){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaUsuarioNegation=!isParaUsuario;

			this.isVisibilidadFK_IdCliente=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPedidoCompra.remove(jPanelFK_IdClientePedidoCompra);}

			this.isVisibilidadFK_IdEmpleado=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasPedidoCompra.remove(jPanelFK_IdEmpleadoPedidoCompra);}

			this.isVisibilidadFK_IdEstadoPedidoCompraEstadoPedoCompra=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoCompraEstadoPedoCompra) {this.jTabbedPaneBusquedasPedidoCompra.remove(jPanelFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaMoneda(Boolean isParaMoneda){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaMonedaNegation=!isParaMoneda;

			this.isVisibilidadFK_IdCliente=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPedidoCompra.remove(jPanelFK_IdClientePedidoCompra);}

			this.isVisibilidadFK_IdEmpleado=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasPedidoCompra.remove(jPanelFK_IdEmpleadoPedidoCompra);}

			this.isVisibilidadFK_IdEstadoPedidoCompraEstadoPedoCompra=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoCompraEstadoPedoCompra) {this.jTabbedPaneBusquedasPedidoCompra.remove(jPanelFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaEstadoPedidoCompra(Boolean isParaEstadoPedidoCompra){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEstadoPedidoCompraNegation=!isParaEstadoPedidoCompra;

			this.isVisibilidadFK_IdCliente=isParaEstadoPedidoCompraNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPedidoCompra.remove(jPanelFK_IdClientePedidoCompra);}

			this.isVisibilidadFK_IdEmpleado=isParaEstadoPedidoCompraNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasPedidoCompra.remove(jPanelFK_IdEmpleadoPedidoCompra);}

			this.isVisibilidadFK_IdEstadoPedidoCompraEstadoPedoCompra=isParaEstadoPedidoCompra;
			if(!this.isVisibilidadFK_IdEstadoPedidoCompraEstadoPedoCompra) {this.jTabbedPaneBusquedasPedidoCompra.remove(jPanelFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaEmpleado(Boolean isParaEmpleado){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEmpleadoNegation=!isParaEmpleado;

			this.isVisibilidadFK_IdCliente=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPedidoCompra.remove(jPanelFK_IdClientePedidoCompra);}

			this.isVisibilidadFK_IdEmpleado=isParaEmpleado;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasPedidoCompra.remove(jPanelFK_IdEmpleadoPedidoCompra);}

			this.isVisibilidadFK_IdEstadoPedidoCompraEstadoPedoCompra=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoCompraEstadoPedoCompra) {this.jTabbedPaneBusquedasPedidoCompra.remove(jPanelFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaFormato(Boolean isParaFormato){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaFormatoNegation=!isParaFormato;

			this.isVisibilidadFK_IdCliente=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPedidoCompra.remove(jPanelFK_IdClientePedidoCompra);}

			this.isVisibilidadFK_IdEmpleado=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasPedidoCompra.remove(jPanelFK_IdEmpleadoPedidoCompra);}

			this.isVisibilidadFK_IdEstadoPedidoCompraEstadoPedoCompra=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoCompraEstadoPedoCompra) {this.jTabbedPaneBusquedasPedidoCompra.remove(jPanelFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompra);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoCambio(Boolean isParaTipoCambio){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoCambioNegation=!isParaTipoCambio;

			this.isVisibilidadFK_IdCliente=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPedidoCompra.remove(jPanelFK_IdClientePedidoCompra);}

			this.isVisibilidadFK_IdEmpleado=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasPedidoCompra.remove(jPanelFK_IdEmpleadoPedidoCompra);}

			this.isVisibilidadFK_IdEstadoPedidoCompraEstadoPedoCompra=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoCompraEstadoPedoCompra) {this.jTabbedPaneBusquedasPedidoCompra.remove(jPanelFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompra);}
		}
		
	}
	
	

	public String registrarSesionPedidoCompraParaDetallePedidoCompras() throws Exception {
		Boolean isPaginaPopupDetallePedidoCompra=false;

		try {

			if(this.pedidocompraSessionBean==null) {
				this.pedidocompraSessionBean=new PedidoCompraSessionBean();
			}

			if(this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraSessionBean==null) {
				this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraSessionBean=new DetallePedidoCompraSessionBean();
			}

			this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraSessionBean.setsPathNavegacionActual(pedidocompraSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+DetallePedidoCompraConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupDetallePedidoCompra=this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeDetallePedidoCompra(true);
			this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeDetallePedidoCompra(PedidoCompraConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraSessionBean.setisBusquedaDesdeForeignKeySesionPedidoCompra(true);
			this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraSessionBean.setlidPedidoCompraActual(this.idPedidoCompraActual);
			this.jInternalFrameDetalleFormPedidoCompra.detallepedidocompraSessionBean.setNoMantenimiento(true);

			pedidocompraSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyPedidoCompra(true);
			pedidocompraSessionBean.setlIdPedidoCompraActualForeignKey(this.idPedidoCompraActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}
	
	

	public String registrarSesionPedidoCompraParaBusquedaClientes() throws Exception {
		Boolean isPaginaPopupCliente=false;

		try {

			if(pedidocompraSessionBean==null) {
				pedidocompraSessionBean=new PedidoCompraSessionBean();
			}

			if(clienteSessionBean==null) {
				clienteSessionBean=new ClienteSessionBean();
			}

			clienteSessionBean.setsPathNavegacionActual(pedidocompraSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+ClienteConstantesFunciones.SCLASSWEBTITULO);
			clienteSessionBean.setisPermiteRecargarInformacion(false);
			clienteSessionBean.setisPaginaPopup(true);
			isPaginaPopupCliente=clienteSessionBean.getisPaginaPopup();
			clienteSessionBean.setisPaginaPopup(false);
			clienteSessionBean.setEstaModoBusqueda(true);
			clienteSessionBean.setsFuncionBusquedaRapida("window.opener.pedidocompraFuncionGeneral.setCombosCodigoDesdeBusquedaid_cliente(TO_REPLACE);");
			clienteSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeCliente(true);
			clienteSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeCliente(PedidoCompraConstantesFunciones.SNOMBREOPCION);
			//clienteSessionBean.setisBusquedaDesdeForeignKeySesionPedidoCompra(true);
			//clienteSessionBean.setlidPedidoCompraActual(this.idPedidoCompraActual);

			pedidocompraSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyPedidoCompra(true);
			pedidocompraSessionBean.setlIdPedidoCompraActualForeignKey(this.idPedidoCompraActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}

	public String registrarSesionPedidoCompraParaBusquedaEmpleados() throws Exception {
		Boolean isPaginaPopupEmpleado=false;

		try {

			if(pedidocompraSessionBean==null) {
				pedidocompraSessionBean=new PedidoCompraSessionBean();
			}

			if(empleadoSessionBean==null) {
				empleadoSessionBean=new EmpleadoSessionBean();
			}

			empleadoSessionBean.setsPathNavegacionActual(pedidocompraSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+EmpleadoConstantesFunciones.SCLASSWEBTITULO);
			empleadoSessionBean.setisPermiteRecargarInformacion(false);
			empleadoSessionBean.setisPaginaPopup(true);
			isPaginaPopupEmpleado=empleadoSessionBean.getisPaginaPopup();
			empleadoSessionBean.setisPaginaPopup(false);
			empleadoSessionBean.setEstaModoBusqueda(true);
			empleadoSessionBean.setsFuncionBusquedaRapida("window.opener.pedidocompraFuncionGeneral.setCombosCodigoDesdeBusquedaid_empleado(TO_REPLACE);");
			empleadoSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeEmpleado(true);
			empleadoSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeEmpleado(PedidoCompraConstantesFunciones.SNOMBREOPCION);
			//empleadoSessionBean.setisBusquedaDesdeForeignKeySesionPedidoCompra(true);
			//empleadoSessionBean.setlidPedidoCompraActual(this.idPedidoCompraActual);

			pedidocompraSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyPedidoCompra(true);
			pedidocompraSessionBean.setlIdPedidoCompraActualForeignKey(this.idPedidoCompraActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}

	public String registrarSesionPedidoCompraParaBusquedaTipoCambios() throws Exception {
		Boolean isPaginaPopupTipoCambio=false;

		try {

			if(pedidocompraSessionBean==null) {
				pedidocompraSessionBean=new PedidoCompraSessionBean();
			}

			if(tipocambioSessionBean==null) {
				tipocambioSessionBean=new TipoCambioSessionBean();
			}

			tipocambioSessionBean.setsPathNavegacionActual(pedidocompraSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+TipoCambioConstantesFunciones.SCLASSWEBTITULO);
			tipocambioSessionBean.setisPermiteRecargarInformacion(false);
			tipocambioSessionBean.setisPaginaPopup(true);
			isPaginaPopupTipoCambio=tipocambioSessionBean.getisPaginaPopup();
			tipocambioSessionBean.setisPaginaPopup(false);
			tipocambioSessionBean.setEstaModoBusqueda(true);
			tipocambioSessionBean.setsFuncionBusquedaRapida("window.opener.pedidocompraFuncionGeneral.setCombosCodigoDesdeBusquedaid_tipo_cambio(TO_REPLACE);");
			tipocambioSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeTipoCambio(true);
			tipocambioSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeTipoCambio(PedidoCompraConstantesFunciones.SNOMBREOPCION);
			//tipocambioSessionBean.setisBusquedaDesdeForeignKeySesionPedidoCompra(true);
			//tipocambioSessionBean.setlidPedidoCompraActual(this.idPedidoCompraActual);

			pedidocompraSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyPedidoCompra(true);
			pedidocompraSessionBean.setlIdPedidoCompraActualForeignKey(this.idPedidoCompraActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}
	
	
	public void guardarDatosBusquedaSession() throws Exception {
		
		//PedidoCompraSessionBean pedidocompraSessionBean=new PedidoCompraSessionBean();
		
		if(this.pedidocompraSessionBean==null) {
			this.pedidocompraSessionBean=new PedidoCompraSessionBean();
		}
		
		this.pedidocompraSessionBean.setsUltimaBusquedaPedidoCompra(this.getsAccionBusqueda());
		this.pedidocompraSessionBean.setiNumeroPaginacion(this.getiNumeroPaginacion());
		this.pedidocompraSessionBean.setiNumeroPaginacionPagina(this.getiNumeroPaginacionPagina());
		
		if(this.getsAccionBusqueda().equals("Todos")) {
			;
		}
		

		else if(this.getsAccionBusqueda().equals("FK_IdCliente")) {
			pedidocompraSessionBean.setid_cliente(this.getid_clienteFK_IdCliente());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEjercicio")) {
			pedidocompraSessionBean.setid_ejercicio(this.getid_ejercicioFK_IdEjercicio());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEmpleado")) {
			pedidocompraSessionBean.setid_empleado(this.getid_empleadoFK_IdEmpleado());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
			pedidocompraSessionBean.setid_empresa(this.getid_empresaFK_IdEmpresa());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEstadoPedidoCompraEstadoPedoCompra")) {
			pedidocompraSessionBean.setid_estado_pedido_compra(this.getid_estado_pedido_compraFK_IdEstadoPedidoCompraEstadoPedoCompra());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdModulo")) {
			pedidocompraSessionBean.setid_modulo(this.getid_moduloFK_IdModulo());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdPeriodo")) {
			pedidocompraSessionBean.setid_periodo(this.getid_periodoFK_IdPeriodo());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
			pedidocompraSessionBean.setid_sucursal(this.getid_sucursalFK_IdSucursal());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdUsuario")) {
			pedidocompraSessionBean.setid_usuario(this.getid_usuarioFK_IdUsuario());	
		}
		
	}
	
	public void traerDatosBusquedaDesdeSession() throws Exception {
		//PedidoCompraSessionBean pedidocompraSessionBean=new PedidoCompraSessionBean();
		
		if(this.pedidocompraSessionBean==null) {
			this.pedidocompraSessionBean=new PedidoCompraSessionBean();
		}
		
		if(this.pedidocompraSessionBean.getsUltimaBusquedaPedidoCompra()!=null&&!this.pedidocompraSessionBean.getsUltimaBusquedaPedidoCompra().equals("")) {
			this.setsAccionBusqueda(pedidocompraSessionBean.getsUltimaBusquedaPedidoCompra());
			this.setiNumeroPaginacion(pedidocompraSessionBean.getiNumeroPaginacion());
			this.setiNumeroPaginacionPagina(pedidocompraSessionBean.getiNumeroPaginacionPagina());		
				
			if(this.getsAccionBusqueda().equals("Todos")) {
				;
			}
			

			 else if(this.getsAccionBusqueda().equals("FK_IdCliente")) {
				this.setid_clienteFK_IdCliente(pedidocompraSessionBean.getid_cliente());
				pedidocompraSessionBean.setid_cliente(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEjercicio")) {
				this.setid_ejercicioFK_IdEjercicio(pedidocompraSessionBean.getid_ejercicio());
				pedidocompraSessionBean.setid_ejercicio(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEmpleado")) {
				this.setid_empleadoFK_IdEmpleado(pedidocompraSessionBean.getid_empleado());
				pedidocompraSessionBean.setid_empleado(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
				this.setid_empresaFK_IdEmpresa(pedidocompraSessionBean.getid_empresa());
				pedidocompraSessionBean.setid_empresa(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEstadoPedidoCompraEstadoPedoCompra")) {
				this.setid_estado_pedido_compraFK_IdEstadoPedidoCompraEstadoPedoCompra(pedidocompraSessionBean.getid_estado_pedido_compra());
				pedidocompraSessionBean.setid_estado_pedido_compra(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdModulo")) {
				this.setid_moduloFK_IdModulo(pedidocompraSessionBean.getid_modulo());
				pedidocompraSessionBean.setid_modulo(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdPeriodo")) {
				this.setid_periodoFK_IdPeriodo(pedidocompraSessionBean.getid_periodo());
				pedidocompraSessionBean.setid_periodo(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
				this.setid_sucursalFK_IdSucursal(pedidocompraSessionBean.getid_sucursal());
				pedidocompraSessionBean.setid_sucursal(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdUsuario")) {
				this.setid_usuarioFK_IdUsuario(pedidocompraSessionBean.getid_usuario());
				pedidocompraSessionBean.setid_usuario(-1L);
			}
		}
		
		this.pedidocompraSessionBean.setsUltimaBusquedaPedidoCompra("");
		this.pedidocompraSessionBean.setiNumeroPaginacion(PedidoCompraConstantesFunciones.INUMEROPAGINACION);
		this.pedidocompraSessionBean.setiNumeroPaginacionPagina(0);
		
	}
	
	public void procesoActualizarFilaTotales(Boolean esCampoValor,String sTipo) {
		try {
			this.actualizarFilaTotales();
				
			this.traerValoresTablaTotales();
			
			this.inicializarActualizarBindingTablaPedidoCompra(false);
			
			
			
			
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	
	public void updateBusquedasFormularioPedidoCompra() {
		this.updateBorderResaltarBusquedasFormularioPedidoCompra();
		this.updateVisibilidadBusquedasFormularioPedidoCompra();
		this.updateHabilitarBusquedasFormularioPedidoCompra();
	}
	
	public void updateBorderResaltarBusquedasFormularioPedidoCompra() {					
	//BYDAN_BUSQUEDAS
		
	int index=0;
		
	if(this.jTabbedPaneBusquedasPedidoCompra.getComponents().length>0) {
	

		if(this.pedidocompraConstantesFunciones.resaltarFK_IdClientePedidoCompra!=null) {
			index= this.jTabbedPaneBusquedasPedidoCompra.indexOfComponent(this.jPanelFK_IdClientePedidoCompra);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoCompra.getComponent(index);
				jPanel.setBorder(this.pedidocompraConstantesFunciones.resaltarFK_IdClientePedidoCompra);
			}
		}

		if(this.pedidocompraConstantesFunciones.resaltarFK_IdEmpleadoPedidoCompra!=null) {
			index= this.jTabbedPaneBusquedasPedidoCompra.indexOfComponent(this.jPanelFK_IdEmpleadoPedidoCompra);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoCompra.getComponent(index);
				jPanel.setBorder(this.pedidocompraConstantesFunciones.resaltarFK_IdEmpleadoPedidoCompra);
			}
		}

		if(this.pedidocompraConstantesFunciones.resaltarFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompra!=null) {
			index= this.jTabbedPaneBusquedasPedidoCompra.indexOfComponent(this.jPanelFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompra);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoCompra.getComponent(index);
				jPanel.setBorder(this.pedidocompraConstantesFunciones.resaltarFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompra);
			}
		}
	}	
	
	}
	
	public void updateVisibilidadBusquedasFormularioPedidoCompra() {
	//BYDAN_BUSQUEDAS
	
	int index=0;
	JPanel jPanel=null;
		
	if(this.jTabbedPaneBusquedasPedidoCompra.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasPedidoCompra.indexOfComponent(this.jPanelFK_IdClientePedidoCompra);
			jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoCompra.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.pedidocompraConstantesFunciones.mostrarFK_IdClientePedidoCompra);
			if(!this.pedidocompraConstantesFunciones.mostrarFK_IdClientePedidoCompra && index>-1) {
				this.jTabbedPaneBusquedasPedidoCompra.remove(index);
			}

			index= this.jTabbedPaneBusquedasPedidoCompra.indexOfComponent(this.jPanelFK_IdEmpleadoPedidoCompra);
			jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoCompra.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.pedidocompraConstantesFunciones.mostrarFK_IdEmpleadoPedidoCompra);
			if(!this.pedidocompraConstantesFunciones.mostrarFK_IdEmpleadoPedidoCompra && index>-1) {
				this.jTabbedPaneBusquedasPedidoCompra.remove(index);
			}

			index= this.jTabbedPaneBusquedasPedidoCompra.indexOfComponent(this.jPanelFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompra);
			jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoCompra.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.pedidocompraConstantesFunciones.mostrarFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompra);
			if(!this.pedidocompraConstantesFunciones.mostrarFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompra && index>-1) {
				this.jTabbedPaneBusquedasPedidoCompra.remove(index);
			}
	}	
	
	}
	
	public void updateHabilitarBusquedasFormularioPedidoCompra() {
	
	//BYDAN_BUSQUEDAS		
		int index=0;
		JPanel jPanel=null;
			
		if(this.jTabbedPaneBusquedasPedidoCompra.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasPedidoCompra.indexOfComponent(this.jPanelFK_IdClientePedidoCompra);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoCompra.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.pedidocompraConstantesFunciones.activarFK_IdClientePedidoCompra);
				this.jTabbedPaneBusquedasPedidoCompra.setEnabledAt(index,this.pedidocompraConstantesFunciones.activarFK_IdClientePedidoCompra);
			}

			index= this.jTabbedPaneBusquedasPedidoCompra.indexOfComponent(this.jPanelFK_IdEmpleadoPedidoCompra);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoCompra.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.pedidocompraConstantesFunciones.activarFK_IdEmpleadoPedidoCompra);
				this.jTabbedPaneBusquedasPedidoCompra.setEnabledAt(index,this.pedidocompraConstantesFunciones.activarFK_IdEmpleadoPedidoCompra);
			}

			index= this.jTabbedPaneBusquedasPedidoCompra.indexOfComponent(this.jPanelFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompra);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoCompra.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.pedidocompraConstantesFunciones.activarFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompra);
				this.jTabbedPaneBusquedasPedidoCompra.setEnabledAt(index,this.pedidocompraConstantesFunciones.activarFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompra);
			}
		}	
	
	}
	
	
	public void resaltarPanelBusquedaPedidoCompra(String sTipoBusqueda) {
		Boolean existe=false;
		//BYDAN_BUSQUEDAS
		
		int index=0;
		Border resaltar = Funciones2.getBorderResaltar(this.parametroGeneralUsuario,"TAB");

		if(sTipoBusqueda.equals("FK_IdCliente")) {
			index= this.jTabbedPaneBusquedasPedidoCompra.indexOfComponent(this.jPanelFK_IdClientePedidoCompra);

			this.jTabbedPaneBusquedasPedidoCompra.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoCompra.getComponent(index);

			this.pedidocompraConstantesFunciones.setResaltarFK_IdClientePedidoCompra(resaltar);

			jPanel.setBorder(this.pedidocompraConstantesFunciones.resaltarFK_IdClientePedidoCompra);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdEmpleado")) {
			index= this.jTabbedPaneBusquedasPedidoCompra.indexOfComponent(this.jPanelFK_IdEmpleadoPedidoCompra);

			this.jTabbedPaneBusquedasPedidoCompra.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoCompra.getComponent(index);

			this.pedidocompraConstantesFunciones.setResaltarFK_IdEmpleadoPedidoCompra(resaltar);

			jPanel.setBorder(this.pedidocompraConstantesFunciones.resaltarFK_IdEmpleadoPedidoCompra);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdEstadoPedidoCompraEstadoPedoCompra")) {
			index= this.jTabbedPaneBusquedasPedidoCompra.indexOfComponent(this.jPanelFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompra);

			this.jTabbedPaneBusquedasPedidoCompra.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoCompra.getComponent(index);

			this.pedidocompraConstantesFunciones.setResaltarFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompra(resaltar);

			jPanel.setBorder(this.pedidocompraConstantesFunciones.resaltarFK_IdEstadoPedidoCompraEstadoPedoCompraPedidoCompra);
			existe=true;
		}
		

		if(existe) {
			
			this.jTtoolBarPedidoCompra.setBorder(resaltar);
			
		}
	}	
	
	//NO FUNCIONA
	public void windowClosed(WindowEvent e) {	
	}
		
	public void windowClosing(WindowEvent e) {	    	    
	}

	public void windowOpened(WindowEvent e) {	    
	}

	public void windowIconified(WindowEvent e) {	    
	}

	public void windowDeiconified(WindowEvent e) {	    
	}

	public void windowActivated(WindowEvent e) {	    
	}

	public void windowDeactivated(WindowEvent e) {	    
	}

	public void windowGainedFocus(WindowEvent e) {	    
	}

	public void windowLostFocus(WindowEvent e) {	    
	}
	
	public void updateControlesFormularioPedidoCompra() throws Exception {

		if(this.jInternalFrameDetalleFormPedidoCompra==null) { //if(!this.conCargarFormDetalle) {			
			this.inicializarFormDetalle();
		}
		
		this.updateBorderResaltarControlesFormularioPedidoCompra();
		this.updateVisibilidadResaltarControlesFormularioPedidoCompra();
		this.updateHabilitarResaltarControlesFormularioPedidoCompra();
		
	}
	
	public void updateBorderResaltarControlesFormularioPedidoCompra() throws Exception {
		if(this.jInternalFrameDetalleFormPedidoCompra==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
	
		if(this.pedidocompraConstantesFunciones.resaltaridPedidoCompra!=null && this.jInternalFrameDetalleFormPedidoCompra!=null) {this.jInternalFrameDetalleFormPedidoCompra.jLabelidPedidoCompra.setBorder(this.pedidocompraConstantesFunciones.resaltaridPedidoCompra);}
		if(this.pedidocompraConstantesFunciones.resaltarid_empresaPedidoCompra!=null && this.jInternalFrameDetalleFormPedidoCompra!=null) {this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_empresaPedidoCompra.setBorder(this.pedidocompraConstantesFunciones.resaltarid_empresaPedidoCompra);}
		if(this.pedidocompraConstantesFunciones.resaltarid_sucursalPedidoCompra!=null && this.jInternalFrameDetalleFormPedidoCompra!=null) {this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_sucursalPedidoCompra.setBorder(this.pedidocompraConstantesFunciones.resaltarid_sucursalPedidoCompra);}
		if(this.pedidocompraConstantesFunciones.resaltarid_moduloPedidoCompra!=null && this.jInternalFrameDetalleFormPedidoCompra!=null) {this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_moduloPedidoCompra.setBorder(this.pedidocompraConstantesFunciones.resaltarid_moduloPedidoCompra);}
		if(this.pedidocompraConstantesFunciones.resaltarid_ejercicioPedidoCompra!=null && this.jInternalFrameDetalleFormPedidoCompra!=null) {this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_ejercicioPedidoCompra.setBorder(this.pedidocompraConstantesFunciones.resaltarid_ejercicioPedidoCompra);}
		if(this.pedidocompraConstantesFunciones.resaltarid_periodoPedidoCompra!=null && this.jInternalFrameDetalleFormPedidoCompra!=null) {this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_periodoPedidoCompra.setBorder(this.pedidocompraConstantesFunciones.resaltarid_periodoPedidoCompra);}
		if(this.pedidocompraConstantesFunciones.resaltarid_anioPedidoCompra!=null && this.jInternalFrameDetalleFormPedidoCompra!=null) {this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_anioPedidoCompra.setBorder(this.pedidocompraConstantesFunciones.resaltarid_anioPedidoCompra);}
		if(this.pedidocompraConstantesFunciones.resaltarid_mesPedidoCompra!=null && this.jInternalFrameDetalleFormPedidoCompra!=null) {this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_mesPedidoCompra.setBorder(this.pedidocompraConstantesFunciones.resaltarid_mesPedidoCompra);}
		if(this.pedidocompraConstantesFunciones.resaltarnumero_secuencialPedidoCompra!=null && this.jInternalFrameDetalleFormPedidoCompra!=null) {this.jInternalFrameDetalleFormPedidoCompra.jTextFieldnumero_secuencialPedidoCompra.setBorder(this.pedidocompraConstantesFunciones.resaltarnumero_secuencialPedidoCompra);}
		if(this.pedidocompraConstantesFunciones.resaltarid_clientePedidoCompra!=null && this.jInternalFrameDetalleFormPedidoCompra!=null) {this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_clientePedidoCompra.setBorder(this.pedidocompraConstantesFunciones.resaltarid_clientePedidoCompra);}
		if(this.pedidocompraConstantesFunciones.resaltarid_usuarioPedidoCompra!=null && this.jInternalFrameDetalleFormPedidoCompra!=null) {this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_usuarioPedidoCompra.setBorder(this.pedidocompraConstantesFunciones.resaltarid_usuarioPedidoCompra);}
		if(this.pedidocompraConstantesFunciones.resaltarid_monedaPedidoCompra!=null && this.jInternalFrameDetalleFormPedidoCompra!=null) {this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_monedaPedidoCompra.setBorder(this.pedidocompraConstantesFunciones.resaltarid_monedaPedidoCompra);}
		if(this.pedidocompraConstantesFunciones.resaltarid_estado_pedido_compraPedidoCompra!=null && this.jInternalFrameDetalleFormPedidoCompra!=null) {this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_estado_pedido_compraPedidoCompra.setBorder(this.pedidocompraConstantesFunciones.resaltarid_estado_pedido_compraPedidoCompra);}
		if(this.pedidocompraConstantesFunciones.resaltartotalPedidoCompra!=null && this.jInternalFrameDetalleFormPedidoCompra!=null) {this.jInternalFrameDetalleFormPedidoCompra.jTextFieldtotalPedidoCompra.setBorder(this.pedidocompraConstantesFunciones.resaltartotalPedidoCompra);}
		if(this.pedidocompraConstantesFunciones.resaltarfechaPedidoCompra!=null && this.jInternalFrameDetalleFormPedidoCompra!=null) {this.jInternalFrameDetalleFormPedidoCompra.jDateChooserfechaPedidoCompra.setBorder(this.pedidocompraConstantesFunciones.resaltarfechaPedidoCompra);}
		if(this.pedidocompraConstantesFunciones.resaltarid_empleadoPedidoCompra!=null && this.jInternalFrameDetalleFormPedidoCompra!=null) {this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_empleadoPedidoCompra.setBorder(this.pedidocompraConstantesFunciones.resaltarid_empleadoPedidoCompra);}
		if(this.pedidocompraConstantesFunciones.resaltarresponsablePedidoCompra!=null && this.jInternalFrameDetalleFormPedidoCompra!=null) {this.jInternalFrameDetalleFormPedidoCompra.jTextArearesponsablePedidoCompra.setBorder(this.pedidocompraConstantesFunciones.resaltarresponsablePedidoCompra);}
		if(this.pedidocompraConstantesFunciones.resaltarsolicitado_porPedidoCompra!=null && this.jInternalFrameDetalleFormPedidoCompra!=null) {this.jInternalFrameDetalleFormPedidoCompra.jTextAreasolicitado_porPedidoCompra.setBorder(this.pedidocompraConstantesFunciones.resaltarsolicitado_porPedidoCompra);}
		if(this.pedidocompraConstantesFunciones.resaltarmotivo_solicitudPedidoCompra!=null && this.jInternalFrameDetalleFormPedidoCompra!=null) {this.jInternalFrameDetalleFormPedidoCompra.jTextAreamotivo_solicitudPedidoCompra.setBorder(this.pedidocompraConstantesFunciones.resaltarmotivo_solicitudPedidoCompra);}
		if(this.pedidocompraConstantesFunciones.resaltararea_solicitudPedidoCompra!=null && this.jInternalFrameDetalleFormPedidoCompra!=null) {this.jInternalFrameDetalleFormPedidoCompra.jTextAreaarea_solicitudPedidoCompra.setBorder(this.pedidocompraConstantesFunciones.resaltararea_solicitudPedidoCompra);}
		if(this.pedidocompraConstantesFunciones.resaltarpara_uso_dePedidoCompra!=null && this.jInternalFrameDetalleFormPedidoCompra!=null) {this.jInternalFrameDetalleFormPedidoCompra.jTextAreapara_uso_dePedidoCompra.setBorder(this.pedidocompraConstantesFunciones.resaltarpara_uso_dePedidoCompra);}
		if(this.pedidocompraConstantesFunciones.resaltarlugar_entregaPedidoCompra!=null && this.jInternalFrameDetalleFormPedidoCompra!=null) {this.jInternalFrameDetalleFormPedidoCompra.jTextFieldlugar_entregaPedidoCompra.setBorder(this.pedidocompraConstantesFunciones.resaltarlugar_entregaPedidoCompra);}
		if(this.pedidocompraConstantesFunciones.resaltardescripcionPedidoCompra!=null && this.jInternalFrameDetalleFormPedidoCompra!=null) {this.jInternalFrameDetalleFormPedidoCompra.jTextAreadescripcionPedidoCompra.setBorder(this.pedidocompraConstantesFunciones.resaltardescripcionPedidoCompra);}
		if(this.pedidocompraConstantesFunciones.resaltarfecha_emisionPedidoCompra!=null && this.jInternalFrameDetalleFormPedidoCompra!=null) {this.jInternalFrameDetalleFormPedidoCompra.jDateChooserfecha_emisionPedidoCompra.setBorder(this.pedidocompraConstantesFunciones.resaltarfecha_emisionPedidoCompra);}
		if(this.pedidocompraConstantesFunciones.resaltarfecha_entregaPedidoCompra!=null && this.jInternalFrameDetalleFormPedidoCompra!=null) {this.jInternalFrameDetalleFormPedidoCompra.jDateChooserfecha_entregaPedidoCompra.setBorder(this.pedidocompraConstantesFunciones.resaltarfecha_entregaPedidoCompra);}
		if(this.pedidocompraConstantesFunciones.resaltarid_formatoPedidoCompra!=null && this.jInternalFrameDetalleFormPedidoCompra!=null) {this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_formatoPedidoCompra.setBorder(this.pedidocompraConstantesFunciones.resaltarid_formatoPedidoCompra);}
		if(this.pedidocompraConstantesFunciones.resaltarid_tipo_cambioPedidoCompra!=null && this.jInternalFrameDetalleFormPedidoCompra!=null) {this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_tipo_cambioPedidoCompra.setBorder(this.pedidocompraConstantesFunciones.resaltarid_tipo_cambioPedidoCompra);}
	}
	
	public void updateVisibilidadResaltarControlesFormularioPedidoCompra() throws Exception {		
		if(this.jInternalFrameDetalleFormPedidoCompra==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormPedidoCompra!=null) {
	
		//this.jInternalFrameDetalleFormPedidoCompra.jLabelidPedidoCompra.setVisible(this.pedidocompraConstantesFunciones.mostraridPedidoCompra);
		this.jInternalFrameDetalleFormPedidoCompra.jPanelidPedidoCompra.setVisible(this.pedidocompraConstantesFunciones.mostraridPedidoCompra);
		//this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_empresaPedidoCompra.setVisible(this.pedidocompraConstantesFunciones.mostrarid_empresaPedidoCompra);
		this.jInternalFrameDetalleFormPedidoCompra.jPanelid_empresaPedidoCompra.setVisible(this.pedidocompraConstantesFunciones.mostrarid_empresaPedidoCompra);
		//this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_sucursalPedidoCompra.setVisible(this.pedidocompraConstantesFunciones.mostrarid_sucursalPedidoCompra);
		this.jInternalFrameDetalleFormPedidoCompra.jPanelid_sucursalPedidoCompra.setVisible(this.pedidocompraConstantesFunciones.mostrarid_sucursalPedidoCompra);
		//this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_moduloPedidoCompra.setVisible(this.pedidocompraConstantesFunciones.mostrarid_moduloPedidoCompra);
		this.jInternalFrameDetalleFormPedidoCompra.jPanelid_moduloPedidoCompra.setVisible(this.pedidocompraConstantesFunciones.mostrarid_moduloPedidoCompra);
		//this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_ejercicioPedidoCompra.setVisible(this.pedidocompraConstantesFunciones.mostrarid_ejercicioPedidoCompra);
		this.jInternalFrameDetalleFormPedidoCompra.jPanelid_ejercicioPedidoCompra.setVisible(this.pedidocompraConstantesFunciones.mostrarid_ejercicioPedidoCompra);
		//this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_periodoPedidoCompra.setVisible(this.pedidocompraConstantesFunciones.mostrarid_periodoPedidoCompra);
		this.jInternalFrameDetalleFormPedidoCompra.jPanelid_periodoPedidoCompra.setVisible(this.pedidocompraConstantesFunciones.mostrarid_periodoPedidoCompra);
		//this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_anioPedidoCompra.setVisible(this.pedidocompraConstantesFunciones.mostrarid_anioPedidoCompra);
		this.jInternalFrameDetalleFormPedidoCompra.jPanelid_anioPedidoCompra.setVisible(this.pedidocompraConstantesFunciones.mostrarid_anioPedidoCompra);
		//this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_mesPedidoCompra.setVisible(this.pedidocompraConstantesFunciones.mostrarid_mesPedidoCompra);
		this.jInternalFrameDetalleFormPedidoCompra.jPanelid_mesPedidoCompra.setVisible(this.pedidocompraConstantesFunciones.mostrarid_mesPedidoCompra);
		//this.jInternalFrameDetalleFormPedidoCompra.jTextFieldnumero_secuencialPedidoCompra.setVisible(this.pedidocompraConstantesFunciones.mostrarnumero_secuencialPedidoCompra);
		this.jInternalFrameDetalleFormPedidoCompra.jPanelnumero_secuencialPedidoCompra.setVisible(this.pedidocompraConstantesFunciones.mostrarnumero_secuencialPedidoCompra);
		//this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_clientePedidoCompra.setVisible(this.pedidocompraConstantesFunciones.mostrarid_clientePedidoCompra);
		this.jInternalFrameDetalleFormPedidoCompra.jPanelid_clientePedidoCompra.setVisible(this.pedidocompraConstantesFunciones.mostrarid_clientePedidoCompra);
			this.jInternalFrameDetalleFormPedidoCompra.jButtonid_clientePedidoCompra.setVisible(this.pedidocompraConstantesFunciones.mostrarid_clientePedidoCompra);
		//this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_usuarioPedidoCompra.setVisible(this.pedidocompraConstantesFunciones.mostrarid_usuarioPedidoCompra);
		this.jInternalFrameDetalleFormPedidoCompra.jPanelid_usuarioPedidoCompra.setVisible(this.pedidocompraConstantesFunciones.mostrarid_usuarioPedidoCompra);
		//this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_monedaPedidoCompra.setVisible(this.pedidocompraConstantesFunciones.mostrarid_monedaPedidoCompra);
		this.jInternalFrameDetalleFormPedidoCompra.jPanelid_monedaPedidoCompra.setVisible(this.pedidocompraConstantesFunciones.mostrarid_monedaPedidoCompra);
		//this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_estado_pedido_compraPedidoCompra.setVisible(this.pedidocompraConstantesFunciones.mostrarid_estado_pedido_compraPedidoCompra);
		this.jInternalFrameDetalleFormPedidoCompra.jPanelid_estado_pedido_compraPedidoCompra.setVisible(this.pedidocompraConstantesFunciones.mostrarid_estado_pedido_compraPedidoCompra);
		//this.jInternalFrameDetalleFormPedidoCompra.jTextFieldtotalPedidoCompra.setVisible(this.pedidocompraConstantesFunciones.mostrartotalPedidoCompra);
		this.jInternalFrameDetalleFormPedidoCompra.jPaneltotalPedidoCompra.setVisible(this.pedidocompraConstantesFunciones.mostrartotalPedidoCompra);
		//this.jInternalFrameDetalleFormPedidoCompra.jDateChooserfechaPedidoCompra.setVisible(this.pedidocompraConstantesFunciones.mostrarfechaPedidoCompra);
		this.jInternalFrameDetalleFormPedidoCompra.jPanelfechaPedidoCompra.setVisible(this.pedidocompraConstantesFunciones.mostrarfechaPedidoCompra);
		//this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_empleadoPedidoCompra.setVisible(this.pedidocompraConstantesFunciones.mostrarid_empleadoPedidoCompra);
		this.jInternalFrameDetalleFormPedidoCompra.jPanelid_empleadoPedidoCompra.setVisible(this.pedidocompraConstantesFunciones.mostrarid_empleadoPedidoCompra);
			this.jInternalFrameDetalleFormPedidoCompra.jButtonid_empleadoPedidoCompra.setVisible(this.pedidocompraConstantesFunciones.mostrarid_empleadoPedidoCompra);
		//this.jInternalFrameDetalleFormPedidoCompra.jTextArearesponsablePedidoCompra.setVisible(this.pedidocompraConstantesFunciones.mostrarresponsablePedidoCompra);
		this.jInternalFrameDetalleFormPedidoCompra.jPanelresponsablePedidoCompra.setVisible(this.pedidocompraConstantesFunciones.mostrarresponsablePedidoCompra);
		//this.jInternalFrameDetalleFormPedidoCompra.jTextAreasolicitado_porPedidoCompra.setVisible(this.pedidocompraConstantesFunciones.mostrarsolicitado_porPedidoCompra);
		this.jInternalFrameDetalleFormPedidoCompra.jPanelsolicitado_porPedidoCompra.setVisible(this.pedidocompraConstantesFunciones.mostrarsolicitado_porPedidoCompra);
		//this.jInternalFrameDetalleFormPedidoCompra.jTextAreamotivo_solicitudPedidoCompra.setVisible(this.pedidocompraConstantesFunciones.mostrarmotivo_solicitudPedidoCompra);
		this.jInternalFrameDetalleFormPedidoCompra.jPanelmotivo_solicitudPedidoCompra.setVisible(this.pedidocompraConstantesFunciones.mostrarmotivo_solicitudPedidoCompra);
		//this.jInternalFrameDetalleFormPedidoCompra.jTextAreaarea_solicitudPedidoCompra.setVisible(this.pedidocompraConstantesFunciones.mostrararea_solicitudPedidoCompra);
		this.jInternalFrameDetalleFormPedidoCompra.jPanelarea_solicitudPedidoCompra.setVisible(this.pedidocompraConstantesFunciones.mostrararea_solicitudPedidoCompra);
		//this.jInternalFrameDetalleFormPedidoCompra.jTextAreapara_uso_dePedidoCompra.setVisible(this.pedidocompraConstantesFunciones.mostrarpara_uso_dePedidoCompra);
		this.jInternalFrameDetalleFormPedidoCompra.jPanelpara_uso_dePedidoCompra.setVisible(this.pedidocompraConstantesFunciones.mostrarpara_uso_dePedidoCompra);
		//this.jInternalFrameDetalleFormPedidoCompra.jTextFieldlugar_entregaPedidoCompra.setVisible(this.pedidocompraConstantesFunciones.mostrarlugar_entregaPedidoCompra);
		this.jInternalFrameDetalleFormPedidoCompra.jPanellugar_entregaPedidoCompra.setVisible(this.pedidocompraConstantesFunciones.mostrarlugar_entregaPedidoCompra);
		//this.jInternalFrameDetalleFormPedidoCompra.jTextAreadescripcionPedidoCompra.setVisible(this.pedidocompraConstantesFunciones.mostrardescripcionPedidoCompra);
		this.jInternalFrameDetalleFormPedidoCompra.jPaneldescripcionPedidoCompra.setVisible(this.pedidocompraConstantesFunciones.mostrardescripcionPedidoCompra);
		//this.jInternalFrameDetalleFormPedidoCompra.jDateChooserfecha_emisionPedidoCompra.setVisible(this.pedidocompraConstantesFunciones.mostrarfecha_emisionPedidoCompra);
		this.jInternalFrameDetalleFormPedidoCompra.jPanelfecha_emisionPedidoCompra.setVisible(this.pedidocompraConstantesFunciones.mostrarfecha_emisionPedidoCompra);
		//this.jInternalFrameDetalleFormPedidoCompra.jDateChooserfecha_entregaPedidoCompra.setVisible(this.pedidocompraConstantesFunciones.mostrarfecha_entregaPedidoCompra);
		this.jInternalFrameDetalleFormPedidoCompra.jPanelfecha_entregaPedidoCompra.setVisible(this.pedidocompraConstantesFunciones.mostrarfecha_entregaPedidoCompra);
		//this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_formatoPedidoCompra.setVisible(this.pedidocompraConstantesFunciones.mostrarid_formatoPedidoCompra);
		this.jInternalFrameDetalleFormPedidoCompra.jPanelid_formatoPedidoCompra.setVisible(this.pedidocompraConstantesFunciones.mostrarid_formatoPedidoCompra);
		//this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_tipo_cambioPedidoCompra.setVisible(this.pedidocompraConstantesFunciones.mostrarid_tipo_cambioPedidoCompra);
		this.jInternalFrameDetalleFormPedidoCompra.jPanelid_tipo_cambioPedidoCompra.setVisible(this.pedidocompraConstantesFunciones.mostrarid_tipo_cambioPedidoCompra);
			this.jInternalFrameDetalleFormPedidoCompra.jButtonid_tipo_cambioPedidoCompra.setVisible(this.pedidocompraConstantesFunciones.mostrarid_tipo_cambioPedidoCompra);
		}
	}
	
	public void updateHabilitarResaltarControlesFormularioPedidoCompra() throws Exception {
		if(this.jInternalFrameDetalleFormPedidoCompra==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormPedidoCompra!=null) {
	
		this.jInternalFrameDetalleFormPedidoCompra.jLabelidPedidoCompra.setEnabled(this.pedidocompraConstantesFunciones.activaridPedidoCompra);
		this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_empresaPedidoCompra.setEnabled(this.pedidocompraConstantesFunciones.activarid_empresaPedidoCompra);
		this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_sucursalPedidoCompra.setEnabled(this.pedidocompraConstantesFunciones.activarid_sucursalPedidoCompra);
		this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_moduloPedidoCompra.setEnabled(this.pedidocompraConstantesFunciones.activarid_moduloPedidoCompra);
		this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_ejercicioPedidoCompra.setEnabled(this.pedidocompraConstantesFunciones.activarid_ejercicioPedidoCompra);
		this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_periodoPedidoCompra.setEnabled(this.pedidocompraConstantesFunciones.activarid_periodoPedidoCompra);
		this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_anioPedidoCompra.setEnabled(this.pedidocompraConstantesFunciones.activarid_anioPedidoCompra);
		this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_mesPedidoCompra.setEnabled(this.pedidocompraConstantesFunciones.activarid_mesPedidoCompra);
		this.jInternalFrameDetalleFormPedidoCompra.jTextFieldnumero_secuencialPedidoCompra.setEnabled(this.pedidocompraConstantesFunciones.activarnumero_secuencialPedidoCompra);
		this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_clientePedidoCompra.setEnabled(this.pedidocompraConstantesFunciones.activarid_clientePedidoCompra);
			this.jInternalFrameDetalleFormPedidoCompra.jButtonid_clientePedidoCompra.setEnabled(this.pedidocompraConstantesFunciones.activarid_clientePedidoCompra);
		this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_usuarioPedidoCompra.setEnabled(this.pedidocompraConstantesFunciones.activarid_usuarioPedidoCompra);
		this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_monedaPedidoCompra.setEnabled(this.pedidocompraConstantesFunciones.activarid_monedaPedidoCompra);
		this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_estado_pedido_compraPedidoCompra.setEnabled(this.pedidocompraConstantesFunciones.activarid_estado_pedido_compraPedidoCompra);
		this.jInternalFrameDetalleFormPedidoCompra.jTextFieldtotalPedidoCompra.setEnabled(this.pedidocompraConstantesFunciones.activartotalPedidoCompra);
		this.jInternalFrameDetalleFormPedidoCompra.jDateChooserfechaPedidoCompra.setEnabled(this.pedidocompraConstantesFunciones.activarfechaPedidoCompra);
		this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_empleadoPedidoCompra.setEnabled(this.pedidocompraConstantesFunciones.activarid_empleadoPedidoCompra);
			this.jInternalFrameDetalleFormPedidoCompra.jButtonid_empleadoPedidoCompra.setEnabled(this.pedidocompraConstantesFunciones.activarid_empleadoPedidoCompra);
		this.jInternalFrameDetalleFormPedidoCompra.jTextArearesponsablePedidoCompra.setEnabled(this.pedidocompraConstantesFunciones.activarresponsablePedidoCompra);
		this.jInternalFrameDetalleFormPedidoCompra.jTextAreasolicitado_porPedidoCompra.setEnabled(this.pedidocompraConstantesFunciones.activarsolicitado_porPedidoCompra);
		this.jInternalFrameDetalleFormPedidoCompra.jTextAreamotivo_solicitudPedidoCompra.setEnabled(this.pedidocompraConstantesFunciones.activarmotivo_solicitudPedidoCompra);
		this.jInternalFrameDetalleFormPedidoCompra.jTextAreaarea_solicitudPedidoCompra.setEnabled(this.pedidocompraConstantesFunciones.activararea_solicitudPedidoCompra);
		this.jInternalFrameDetalleFormPedidoCompra.jTextAreapara_uso_dePedidoCompra.setEnabled(this.pedidocompraConstantesFunciones.activarpara_uso_dePedidoCompra);
		this.jInternalFrameDetalleFormPedidoCompra.jTextFieldlugar_entregaPedidoCompra.setEnabled(this.pedidocompraConstantesFunciones.activarlugar_entregaPedidoCompra);
		this.jInternalFrameDetalleFormPedidoCompra.jTextAreadescripcionPedidoCompra.setEnabled(this.pedidocompraConstantesFunciones.activardescripcionPedidoCompra);
		this.jInternalFrameDetalleFormPedidoCompra.jDateChooserfecha_emisionPedidoCompra.setEnabled(this.pedidocompraConstantesFunciones.activarfecha_emisionPedidoCompra);
		this.jInternalFrameDetalleFormPedidoCompra.jDateChooserfecha_entregaPedidoCompra.setEnabled(this.pedidocompraConstantesFunciones.activarfecha_entregaPedidoCompra);
		this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_formatoPedidoCompra.setEnabled(this.pedidocompraConstantesFunciones.activarid_formatoPedidoCompra);
		this.jInternalFrameDetalleFormPedidoCompra.jComboBoxid_tipo_cambioPedidoCompra.setEnabled(this.pedidocompraConstantesFunciones.activarid_tipo_cambioPedidoCompra);
			this.jInternalFrameDetalleFormPedidoCompra.jButtonid_tipo_cambioPedidoCompra.setEnabled(this.pedidocompraConstantesFunciones.activarid_tipo_cambioPedidoCompra);
		}
	}
	
		
}