/*
*AVISO LEGAL
Â© Copyright
*Este programa esta protegido por la ley de derechos de autor.
*La reproduccion o distribucion ilicita de este programa o de cualquiera de
*sus partes esta penado por la ley con severas sanciones civiles y penales,
*y seran objeto de todas las sanciones legales que correspondan.

*Su contenido no puede copiarse para fines comerciales o de otras,
*ni puede mostrarse, incluso en una version modificada, en otros sitios Web.
Solo esta permitido colocar hipervinculos al sitio web.
*/
package com.bydan.erp.inventario.presentation.swing.jinternalframes;




import com.bydan.erp.seguridad.business.entity.Usuario;
import com.bydan.erp.seguridad.business.entity.ResumenUsuario;
import com.bydan.erp.seguridad.business.entity.Opcion;
import com.bydan.erp.seguridad.business.entity.PerfilOpcion;
import com.bydan.erp.seguridad.business.entity.PerfilCampo;
import com.bydan.erp.seguridad.business.entity.PerfilAccion;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralSg;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralUsuario;
import com.bydan.erp.seguridad.business.entity.Modulo;
import com.bydan.erp.seguridad.business.entity.Accion;

import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneralAdditional;
import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneral;


//import com.bydan.erp.seguridad.business.entity.PerfilAccion;


import com.bydan.erp.seguridad.util.SistemaConstantesFunciones;
import com.bydan.erp.seguridad.util.SistemaConstantesFuncionesAdditional;
import com.bydan.erp.seguridad.business.logic.SistemaLogicAdditional;

import com.bydan.erp.inventario.util.ProductoConstantesFunciones;
import com.bydan.erp.inventario.util.ProductoParameterReturnGeneral;
//import com.bydan.erp.inventario.util.ProductoParameterGeneral;
//import com.bydan.erp.inventario.presentation.report.source.ProductoBean;
import com.bydan.framework.erp.business.dataaccess.ConstantesSql;
import com.bydan.framework.erp.business.entity.Classe;
import com.bydan.framework.erp.business.entity.DatoGeneral;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterGeneral;
import com.bydan.framework.erp.business.entity.OrderBy;
import com.bydan.framework.erp.business.entity.DatoGeneralMinimo;
import com.bydan.framework.erp.business.entity.GeneralEntity;
import com.bydan.framework.erp.business.entity.Mensajes;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterReturnGeneral;
//import com.bydan.framework.erp.business.entity.MaintenanceType;
import com.bydan.framework.erp.util.MaintenanceType;
import com.bydan.framework.erp.util.FuncionesReporte;
import com.bydan.framework.erp.business.logic.DatosCliente;
import com.bydan.framework.erp.business.logic.Pagination;

import com.bydan.erp.inventario.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralTotalModel;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralOrderByModel;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverter;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverterFromDate;
import com.bydan.framework.erp.presentation.desktop.swing.DateRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.DateEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.TextFieldRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.RunnableProceso;
import com.bydan.framework.erp.presentation.desktop.swing.*;
//import com.bydan.framework.erp.presentation.desktop.swing.TextFieldEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.HeaderRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.JInternalFrameBase;
import com.bydan.framework.erp.presentation.desktop.swing.FuncionesSwing;
import com.bydan.framework.erp.presentation.desktop.swing.MainJFrame;
import com.bydan.framework.erp.resources.imagenes.AuxiliarImagenes;
import com.bydan.erp.inventario.resources.reportes.AuxiliarReportes;


import com.bydan.erp.inventario.util.*;
import com.bydan.erp.inventario.business.logic.*;

import com.bydan.erp.seguridad.business.logic.*;
import com.bydan.erp.facturacion.business.logic.*;
import com.bydan.erp.cartera.business.logic.*;

//EJB

//PARAMETROS


//EJB PARAMETROS

import com.bydan.framework.erp.business.logic.*;
import com.bydan.framework.erp.util.*;

import com.bydan.erp.inventario.business.entity.*;
//import com.bydan.framework.erp.business.entity.ConexionBeanFace;
//import com.bydan.framework.erp.business.entity.Mensajes;


import com.bydan.erp.seguridad.presentation.swing.jinternalframes.*;
import com.bydan.erp.facturacion.presentation.swing.jinternalframes.*;
import com.bydan.erp.cartera.presentation.swing.jinternalframes.*;

import com.bydan.erp.seguridad.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.facturacion.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.cartera.presentation.swing.jinternalframes.auxiliar.*;






import javax.imageio.ImageIO;
import java.net.NetworkInterface;
import java.net.InterfaceAddress;
import java.net.InetAddress;
import javax.naming.InitialContext;
import java.lang.Long;
import java.util.Date;
import java.util.Enumeration;
import java.util.Iterator;
import java.util.Set;
import java.util.HashSet;
import java.util.List;
import java.util.ArrayList;
import java.io.Serializable;
import java.util.Hashtable;
import java.util.Collections;
import java.io.File;
import java.io.FileInputStream;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.BufferedReader;
import java.io.FileReader;
import java.util.HashMap;
import java.util.Map;
import java.io.PrintWriter;
import java.sql.SQLException;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.stream.StreamSource;

import org.xml.sax.EntityResolver;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;

import org.w3c.dom.Document;
import org.w3c.dom.Document;
import org.w3c.dom.NodeList;
import org.w3c.dom.Node;
import org.w3c.dom.Element;

import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.util.CellRangeAddress;

import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;


import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRRuntimeException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.engine.export.JRHtmlExporter;
import net.sf.jasperreports.j2ee.servlets.BaseHttpServlet;
import net.sf.jasperreports.engine.JRExporterParameter;
import net.sf.jasperreports.engine.data.JRBeanArrayDataSource;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;

import org.apache.log4j.Logger;

import com.bydan.framework.erp.business.entity.Reporte;


//VALIDACION
import org.hibernate.validator.ClassValidator;
import org.hibernate.validator.InvalidValue;

import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.JasperRunManager;
import net.sf.jasperreports.engine.export.JExcelApiExporter;
import net.sf.jasperreports.engine.export.JRCsvExporter;
import net.sf.jasperreports.engine.export.JRRtfExporter;
import net.sf.jasperreports.engine.export.JRXlsExporter;
import net.sf.jasperreports.engine.export.JRXlsExporterParameter;
import net.sf.jasperreports.engine.util.JRSaver;
import net.sf.jasperreports.engine.xml.JRXmlWriter;


import com.bydan.erp.inventario.presentation.web.jsf.sessionbean.*;

import java.util.EventObject;
import javax.swing.*;
import javax.swing.border.Border;
import javax.swing.border.TitledBorder;
import javax.swing.border.EmptyBorder;
import javax.swing.event.*;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import java.awt.*;
import java.awt.event.*;

import org.jdesktop.beansbinding.Binding.SyncFailure;
import org.jdesktop.beansbinding.BindingListener;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.ELProperty;
import org.jdesktop.beansbinding.AutoBinding.UpdateStrategy;
import org.jdesktop.beansbinding.PropertyStateEvent;
import org.jdesktop.swingbinding.JComboBoxBinding;
import org.jdesktop.swingbinding.SwingBindings;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeEvent;

import com.toedter.calendar.JDateChooser;


import com.bydan.erp.seguridad.business.entity.*;
import com.bydan.erp.facturacion.business.entity.*;
import com.bydan.erp.cartera.business.entity.*;
import com.bydan.erp.seguridad.util.*;
import com.bydan.erp.facturacion.util.*;
import com.bydan.erp.cartera.util.*;
import com.bydan.erp.seguridad.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.facturacion.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.cartera.presentation.web.jsf.sessionbean.*;


@SuppressWarnings("unused")
public class ProductoBeanSwingJInternalFrame extends ProductoJInternalFrame implements WindowListener,WindowFocusListener
{				
	
	public static final long serialVersionUID = 1L;
	
	public static Logger logger = Logger.getLogger(ProductoBeanSwingJInternalFrame.class);  
	
	public static ClassValidator<Producto> productoValidator = new ClassValidator<Producto>(Producto.class);
	
	public InvalidValue[] invalidValues=null;
		

	//Ejb Foreign Keys
	
	public Producto producto;	
	public Producto productoAux;
	public Producto productoAnterior;//USADO PARA MANEJAR FOCUS GAINED,LOST
	public Producto productoTotales;
	public Long idProductoActual;
	public Long iIdNuevoProducto=0L;
	public int rowIndexActual=0;
	
	
	
	
	public String sFinalQueryComboEmpresa="";

	public List<Empresa> empresasForeignKey;

	public List<Empresa> getempresasForeignKey() {
		return empresasForeignKey;
	}

	public void setempresasForeignKey(List<Empresa> empresasForeignKey) {
		this.empresasForeignKey = empresasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Empresa empresaForeignKey;

	public Empresa getempresaForeignKey() {
		return empresaForeignKey;
	}

	public void setempresaForeignKey(Empresa empresaForeignKey) {
		this.empresaForeignKey = empresaForeignKey;
	}

	public String sFinalQueryComboSucursal="";

	public List<Sucursal> sucursalsForeignKey;

	public List<Sucursal> getsucursalsForeignKey() {
		return sucursalsForeignKey;
	}

	public void setsucursalsForeignKey(List<Sucursal> sucursalsForeignKey) {
		this.sucursalsForeignKey = sucursalsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Sucursal sucursalForeignKey;

	public Sucursal getsucursalForeignKey() {
		return sucursalForeignKey;
	}

	public void setsucursalForeignKey(Sucursal sucursalForeignKey) {
		this.sucursalForeignKey = sucursalForeignKey;
	}

	public String sFinalQueryComboLinea="";

	public List<Linea> lineasForeignKey;

	public List<Linea> getlineasForeignKey() {
		return lineasForeignKey;
	}

	public void setlineasForeignKey(List<Linea> lineasForeignKey) {
		this.lineasForeignKey = lineasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Linea lineaForeignKey;

	public Linea getlineaForeignKey() {
		return lineaForeignKey;
	}

	public void setlineaForeignKey(Linea lineaForeignKey) {
		this.lineaForeignKey = lineaForeignKey;
	}

	public String sFinalQueryComboLineaGrupo="";

	public List<Linea> lineagruposForeignKey;

	public List<Linea> getlineagruposForeignKey() {
		return lineagruposForeignKey;
	}

	public void setlineagruposForeignKey(List<Linea> lineagruposForeignKey) {
		this.lineagruposForeignKey = lineagruposForeignKey;
	}

	//OBJETO FK ACTUAL
	public Linea lineagrupoForeignKey;

	public Linea getlineagrupoForeignKey() {
		return lineagrupoForeignKey;
	}

	public void setlineagrupoForeignKey(Linea lineagrupoForeignKey) {
		this.lineagrupoForeignKey = lineagrupoForeignKey;
	}

	public String sFinalQueryComboLineaCategoria="";

	public List<Linea> lineacategoriasForeignKey;

	public List<Linea> getlineacategoriasForeignKey() {
		return lineacategoriasForeignKey;
	}

	public void setlineacategoriasForeignKey(List<Linea> lineacategoriasForeignKey) {
		this.lineacategoriasForeignKey = lineacategoriasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Linea lineacategoriaForeignKey;

	public Linea getlineacategoriaForeignKey() {
		return lineacategoriaForeignKey;
	}

	public void setlineacategoriaForeignKey(Linea lineacategoriaForeignKey) {
		this.lineacategoriaForeignKey = lineacategoriaForeignKey;
	}

	public String sFinalQueryComboLineaMarca="";

	public List<Linea> lineamarcasForeignKey;

	public List<Linea> getlineamarcasForeignKey() {
		return lineamarcasForeignKey;
	}

	public void setlineamarcasForeignKey(List<Linea> lineamarcasForeignKey) {
		this.lineamarcasForeignKey = lineamarcasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Linea lineamarcaForeignKey;

	public Linea getlineamarcaForeignKey() {
		return lineamarcaForeignKey;
	}

	public void setlineamarcaForeignKey(Linea lineamarcaForeignKey) {
		this.lineamarcaForeignKey = lineamarcaForeignKey;
	}

	public String sFinalQueryComboTipoProductoServicio="";

	public List<TipoProductoServicio> tipoproductoserviciosForeignKey;

	public List<TipoProductoServicio> gettipoproductoserviciosForeignKey() {
		return tipoproductoserviciosForeignKey;
	}

	public void settipoproductoserviciosForeignKey(List<TipoProductoServicio> tipoproductoserviciosForeignKey) {
		this.tipoproductoserviciosForeignKey = tipoproductoserviciosForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoProductoServicio tipoproductoservicioForeignKey;

	public TipoProductoServicio gettipoproductoservicioForeignKey() {
		return tipoproductoservicioForeignKey;
	}

	public void settipoproductoservicioForeignKey(TipoProductoServicio tipoproductoservicioForeignKey) {
		this.tipoproductoservicioForeignKey = tipoproductoservicioForeignKey;
	}

	public String sFinalQueryComboTipoProductoServicioInven="";

	public List<TipoProductoServicioInven> tipoproductoservicioinvensForeignKey;

	public List<TipoProductoServicioInven> gettipoproductoservicioinvensForeignKey() {
		return tipoproductoservicioinvensForeignKey;
	}

	public void settipoproductoservicioinvensForeignKey(List<TipoProductoServicioInven> tipoproductoservicioinvensForeignKey) {
		this.tipoproductoservicioinvensForeignKey = tipoproductoservicioinvensForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoProductoServicioInven tipoproductoservicioinvenForeignKey;

	public TipoProductoServicioInven gettipoproductoservicioinvenForeignKey() {
		return tipoproductoservicioinvenForeignKey;
	}

	public void settipoproductoservicioinvenForeignKey(TipoProductoServicioInven tipoproductoservicioinvenForeignKey) {
		this.tipoproductoservicioinvenForeignKey = tipoproductoservicioinvenForeignKey;
	}

	public String sFinalQueryComboTipoCosteo="";

	public List<TipoCosteo> tipocosteosForeignKey;

	public List<TipoCosteo> gettipocosteosForeignKey() {
		return tipocosteosForeignKey;
	}

	public void settipocosteosForeignKey(List<TipoCosteo> tipocosteosForeignKey) {
		this.tipocosteosForeignKey = tipocosteosForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoCosteo tipocosteoForeignKey;

	public TipoCosteo gettipocosteoForeignKey() {
		return tipocosteoForeignKey;
	}

	public void settipocosteoForeignKey(TipoCosteo tipocosteoForeignKey) {
		this.tipocosteoForeignKey = tipocosteoForeignKey;
	}

	public String sFinalQueryComboUnidad="";

	public List<Unidad> unidadsForeignKey;

	public List<Unidad> getunidadsForeignKey() {
		return unidadsForeignKey;
	}

	public void setunidadsForeignKey(List<Unidad> unidadsForeignKey) {
		this.unidadsForeignKey = unidadsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Unidad unidadForeignKey;

	public Unidad getunidadForeignKey() {
		return unidadForeignKey;
	}

	public void setunidadForeignKey(Unidad unidadForeignKey) {
		this.unidadForeignKey = unidadForeignKey;
	}

	public String sFinalQueryComboUnidadPeso="";

	public List<Unidad> unidadpesosForeignKey;

	public List<Unidad> getunidadpesosForeignKey() {
		return unidadpesosForeignKey;
	}

	public void setunidadpesosForeignKey(List<Unidad> unidadpesosForeignKey) {
		this.unidadpesosForeignKey = unidadpesosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Unidad unidadpesoForeignKey;

	public Unidad getunidadpesoForeignKey() {
		return unidadpesoForeignKey;
	}

	public void setunidadpesoForeignKey(Unidad unidadpesoForeignKey) {
		this.unidadpesoForeignKey = unidadpesoForeignKey;
	}

	public String sFinalQueryComboArancel="";

	public List<Arancel> arancelsForeignKey;

	public List<Arancel> getarancelsForeignKey() {
		return arancelsForeignKey;
	}

	public void setarancelsForeignKey(List<Arancel> arancelsForeignKey) {
		this.arancelsForeignKey = arancelsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Arancel arancelForeignKey;

	public Arancel getarancelForeignKey() {
		return arancelForeignKey;
	}

	public void setarancelForeignKey(Arancel arancelForeignKey) {
		this.arancelForeignKey = arancelForeignKey;
	}

	public String sFinalQueryComboCliente="";

	public List<Cliente> clientesForeignKey;

	public List<Cliente> getclientesForeignKey() {
		return clientesForeignKey;
	}

	public void setclientesForeignKey(List<Cliente> clientesForeignKey) {
		this.clientesForeignKey = clientesForeignKey;
	}

	//OBJETO FK ACTUAL
	public Cliente clienteForeignKey;

	public Cliente getclienteForeignKey() {
		return clienteForeignKey;
	}

	public void setclienteForeignKey(Cliente clienteForeignKey) {
		this.clienteForeignKey = clienteForeignKey;
	}

	public String sFinalQueryComboClienteProveedorDefecto="";

	public List<Cliente> clienteproveedordefectosForeignKey;

	public List<Cliente> getclienteproveedordefectosForeignKey() {
		return clienteproveedordefectosForeignKey;
	}

	public void setclienteproveedordefectosForeignKey(List<Cliente> clienteproveedordefectosForeignKey) {
		this.clienteproveedordefectosForeignKey = clienteproveedordefectosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Cliente clienteproveedordefectoForeignKey;

	public Cliente getclienteproveedordefectoForeignKey() {
		return clienteproveedordefectoForeignKey;
	}

	public void setclienteproveedordefectoForeignKey(Cliente clienteproveedordefectoForeignKey) {
		this.clienteproveedordefectoForeignKey = clienteproveedordefectoForeignKey;
	}

	public String sFinalQueryComboTipoProducto="";

	public List<TipoProducto> tipoproductosForeignKey;

	public List<TipoProducto> gettipoproductosForeignKey() {
		return tipoproductosForeignKey;
	}

	public void settipoproductosForeignKey(List<TipoProducto> tipoproductosForeignKey) {
		this.tipoproductosForeignKey = tipoproductosForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoProducto tipoproductoForeignKey;

	public TipoProducto gettipoproductoForeignKey() {
		return tipoproductoForeignKey;
	}

	public void settipoproductoForeignKey(TipoProducto tipoproductoForeignKey) {
		this.tipoproductoForeignKey = tipoproductoForeignKey;
	}

	public String sFinalQueryComboColorProducto="";

	public List<ColorProducto> colorproductosForeignKey;

	public List<ColorProducto> getcolorproductosForeignKey() {
		return colorproductosForeignKey;
	}

	public void setcolorproductosForeignKey(List<ColorProducto> colorproductosForeignKey) {
		this.colorproductosForeignKey = colorproductosForeignKey;
	}

	//OBJETO FK ACTUAL
	public ColorProducto colorproductoForeignKey;

	public ColorProducto getcolorproductoForeignKey() {
		return colorproductoForeignKey;
	}

	public void setcolorproductoForeignKey(ColorProducto colorproductoForeignKey) {
		this.colorproductoForeignKey = colorproductoForeignKey;
	}

	public String sFinalQueryComboClaseProducto="";

	public List<ClaseProducto> claseproductosForeignKey;

	public List<ClaseProducto> getclaseproductosForeignKey() {
		return claseproductosForeignKey;
	}

	public void setclaseproductosForeignKey(List<ClaseProducto> claseproductosForeignKey) {
		this.claseproductosForeignKey = claseproductosForeignKey;
	}

	//OBJETO FK ACTUAL
	public ClaseProducto claseproductoForeignKey;

	public ClaseProducto getclaseproductoForeignKey() {
		return claseproductoForeignKey;
	}

	public void setclaseproductoForeignKey(ClaseProducto claseproductoForeignKey) {
		this.claseproductoForeignKey = claseproductoForeignKey;
	}

	public String sFinalQueryComboEfectoProducto="";

	public List<EfectoProducto> efectoproductosForeignKey;

	public List<EfectoProducto> getefectoproductosForeignKey() {
		return efectoproductosForeignKey;
	}

	public void setefectoproductosForeignKey(List<EfectoProducto> efectoproductosForeignKey) {
		this.efectoproductosForeignKey = efectoproductosForeignKey;
	}

	//OBJETO FK ACTUAL
	public EfectoProducto efectoproductoForeignKey;

	public EfectoProducto getefectoproductoForeignKey() {
		return efectoproductoForeignKey;
	}

	public void setefectoproductoForeignKey(EfectoProducto efectoproductoForeignKey) {
		this.efectoproductoForeignKey = efectoproductoForeignKey;
	}

	public String sFinalQueryComboMarcaProducto="";

	public List<MarcaProducto> marcaproductosForeignKey;

	public List<MarcaProducto> getmarcaproductosForeignKey() {
		return marcaproductosForeignKey;
	}

	public void setmarcaproductosForeignKey(List<MarcaProducto> marcaproductosForeignKey) {
		this.marcaproductosForeignKey = marcaproductosForeignKey;
	}

	//OBJETO FK ACTUAL
	public MarcaProducto marcaproductoForeignKey;

	public MarcaProducto getmarcaproductoForeignKey() {
		return marcaproductoForeignKey;
	}

	public void setmarcaproductoForeignKey(MarcaProducto marcaproductoForeignKey) {
		this.marcaproductoForeignKey = marcaproductoForeignKey;
	}

	public String sFinalQueryComboModeloProducto="";

	public List<ModeloProducto> modeloproductosForeignKey;

	public List<ModeloProducto> getmodeloproductosForeignKey() {
		return modeloproductosForeignKey;
	}

	public void setmodeloproductosForeignKey(List<ModeloProducto> modeloproductosForeignKey) {
		this.modeloproductosForeignKey = modeloproductosForeignKey;
	}

	//OBJETO FK ACTUAL
	public ModeloProducto modeloproductoForeignKey;

	public ModeloProducto getmodeloproductoForeignKey() {
		return modeloproductoForeignKey;
	}

	public void setmodeloproductoForeignKey(ModeloProducto modeloproductoForeignKey) {
		this.modeloproductoForeignKey = modeloproductoForeignKey;
	}

	public String sFinalQueryComboMaterialProducto="";

	public List<MaterialProducto> materialproductosForeignKey;

	public List<MaterialProducto> getmaterialproductosForeignKey() {
		return materialproductosForeignKey;
	}

	public void setmaterialproductosForeignKey(List<MaterialProducto> materialproductosForeignKey) {
		this.materialproductosForeignKey = materialproductosForeignKey;
	}

	//OBJETO FK ACTUAL
	public MaterialProducto materialproductoForeignKey;

	public MaterialProducto getmaterialproductoForeignKey() {
		return materialproductoForeignKey;
	}

	public void setmaterialproductoForeignKey(MaterialProducto materialproductoForeignKey) {
		this.materialproductoForeignKey = materialproductoForeignKey;
	}

	public String sFinalQueryComboSegmentoProducto="";

	public List<SegmentoProducto> segmentoproductosForeignKey;

	public List<SegmentoProducto> getsegmentoproductosForeignKey() {
		return segmentoproductosForeignKey;
	}

	public void setsegmentoproductosForeignKey(List<SegmentoProducto> segmentoproductosForeignKey) {
		this.segmentoproductosForeignKey = segmentoproductosForeignKey;
	}

	//OBJETO FK ACTUAL
	public SegmentoProducto segmentoproductoForeignKey;

	public SegmentoProducto getsegmentoproductoForeignKey() {
		return segmentoproductoForeignKey;
	}

	public void setsegmentoproductoForeignKey(SegmentoProducto segmentoproductoForeignKey) {
		this.segmentoproductoForeignKey = segmentoproductoForeignKey;
	}

	public String sFinalQueryComboTallaProducto="";

	public List<TallaProducto> tallaproductosForeignKey;

	public List<TallaProducto> gettallaproductosForeignKey() {
		return tallaproductosForeignKey;
	}

	public void settallaproductosForeignKey(List<TallaProducto> tallaproductosForeignKey) {
		this.tallaproductosForeignKey = tallaproductosForeignKey;
	}

	//OBJETO FK ACTUAL
	public TallaProducto tallaproductoForeignKey;

	public TallaProducto gettallaproductoForeignKey() {
		return tallaproductoForeignKey;
	}

	public void settallaproductoForeignKey(TallaProducto tallaproductoForeignKey) {
		this.tallaproductoForeignKey = tallaproductoForeignKey;
	}

		
	
	
	
	//BUSQUEDA INTERNA FK
	public Long idClienteActual=0L;

	public Long getidClienteActual() {
		return idClienteActual;
	}

	public void setidClienteActual(Long idClienteActual) {
		this.idClienteActual= idClienteActual;
	}
	public Long idClienteProveedorDefectoActual=0L;

	public Long getidClienteProveedorDefectoActual() {
		return idClienteProveedorDefectoActual;
	}

	public void setidClienteProveedorDefectoActual(Long idClienteProveedorDefectoActual) {
		this.idClienteProveedorDefectoActual= idClienteProveedorDefectoActual;
	}
	
	

	public Boolean isTienePermisosProveedorProducto=false;

	public Boolean getIsTienePermisosProveedorProducto() {
		return isTienePermisosProveedorProducto;
	}

	public void setIsTienePermisosProveedorProducto(Boolean isTienePermisosProveedorProducto) {
		this.isTienePermisosProveedorProducto= isTienePermisosProveedorProducto;
	}


	public Boolean isTienePermisosPrecio=false;

	public Boolean getIsTienePermisosPrecio() {
		return isTienePermisosPrecio;
	}

	public void setIsTienePermisosPrecio(Boolean isTienePermisosPrecio) {
		this.isTienePermisosPrecio= isTienePermisosPrecio;
	}


	public Boolean isTienePermisosDetalleImpuestoInven=false;

	public Boolean getIsTienePermisosDetalleImpuestoInven() {
		return isTienePermisosDetalleImpuestoInven;
	}

	public void setIsTienePermisosDetalleImpuestoInven(Boolean isTienePermisosDetalleImpuestoInven) {
		this.isTienePermisosDetalleImpuestoInven= isTienePermisosDetalleImpuestoInven;
	}


	public Boolean isTienePermisosPresupuestoVentas=false;

	public Boolean getIsTienePermisosPresupuestoVentas() {
		return isTienePermisosPresupuestoVentas;
	}

	public void setIsTienePermisosPresupuestoVentas(Boolean isTienePermisosPresupuestoVentas) {
		this.isTienePermisosPresupuestoVentas= isTienePermisosPresupuestoVentas;
	}


	public Boolean isTienePermisosPoliticaProducto=false;

	public Boolean getIsTienePermisosPoliticaProducto() {
		return isTienePermisosPoliticaProducto;
	}

	public void setIsTienePermisosPoliticaProducto(Boolean isTienePermisosPoliticaProducto) {
		this.isTienePermisosPoliticaProducto= isTienePermisosPoliticaProducto;
	}


	public Boolean isTienePermisosSerieProducto=false;

	public Boolean getIsTienePermisosSerieProducto() {
		return isTienePermisosSerieProducto;
	}

	public void setIsTienePermisosSerieProducto(Boolean isTienePermisosSerieProducto) {
		this.isTienePermisosSerieProducto= isTienePermisosSerieProducto;
	}


	public Boolean isTienePermisosUbicacionProdu=false;

	public Boolean getIsTienePermisosUbicacionProdu() {
		return isTienePermisosUbicacionProdu;
	}

	public void setIsTienePermisosUbicacionProdu(Boolean isTienePermisosUbicacionProdu) {
		this.isTienePermisosUbicacionProdu= isTienePermisosUbicacionProdu;
	}


	public Boolean isTienePermisosParametroProducto=false;

	public Boolean getIsTienePermisosParametroProducto() {
		return isTienePermisosParametroProducto;
	}

	public void setIsTienePermisosParametroProducto(Boolean isTienePermisosParametroProducto) {
		this.isTienePermisosParametroProducto= isTienePermisosParametroProducto;
	}


	public Boolean isTienePermisosProductoUnidad=false;

	public Boolean getIsTienePermisosProductoUnidad() {
		return isTienePermisosProductoUnidad;
	}

	public void setIsTienePermisosProductoUnidad(Boolean isTienePermisosProductoUnidad) {
		this.isTienePermisosProductoUnidad= isTienePermisosProductoUnidad;
	}


	public Boolean isTienePermisosIngrediente=false;

	public Boolean getIsTienePermisosIngrediente() {
		return isTienePermisosIngrediente;
	}

	public void setIsTienePermisosIngrediente(Boolean isTienePermisosIngrediente) {
		this.isTienePermisosIngrediente= isTienePermisosIngrediente;
	}


	public Boolean isTienePermisosProductoCarac=false;

	public Boolean getIsTienePermisosProductoCarac() {
		return isTienePermisosProductoCarac;
	}

	public void setIsTienePermisosProductoCarac(Boolean isTienePermisosProductoCarac) {
		this.isTienePermisosProductoCarac= isTienePermisosProductoCarac;
	}


	public Boolean isTienePermisosServicioCliente=false;

	public Boolean getIsTienePermisosServicioCliente() {
		return isTienePermisosServicioCliente;
	}

	public void setIsTienePermisosServicioCliente(Boolean isTienePermisosServicioCliente) {
		this.isTienePermisosServicioCliente= isTienePermisosServicioCliente;
	}


	public Boolean isTienePermisosProductoPromocion=false;

	public Boolean getIsTienePermisosProductoPromocion() {
		return isTienePermisosProductoPromocion;
	}

	public void setIsTienePermisosProductoPromocion(Boolean isTienePermisosProductoPromocion) {
		this.isTienePermisosProductoPromocion= isTienePermisosProductoPromocion;
	}


	public Boolean isTienePermisosProductoEspeci=false;

	public Boolean getIsTienePermisosProductoEspeci() {
		return isTienePermisosProductoEspeci;
	}

	public void setIsTienePermisosProductoEspeci(Boolean isTienePermisosProductoEspeci) {
		this.isTienePermisosProductoEspeci= isTienePermisosProductoEspeci;
	}


	public Boolean isTienePermisosProductoReempla=false;

	public Boolean getIsTienePermisosProductoReempla() {
		return isTienePermisosProductoReempla;
	}

	public void setIsTienePermisosProductoReempla(Boolean isTienePermisosProductoReempla) {
		this.isTienePermisosProductoReempla= isTienePermisosProductoReempla;
	}


	public Boolean isTienePermisosProductoEstadistica=false;

	public Boolean getIsTienePermisosProductoEstadistica() {
		return isTienePermisosProductoEstadistica;
	}

	public void setIsTienePermisosProductoEstadistica(Boolean isTienePermisosProductoEstadistica) {
		this.isTienePermisosProductoEstadistica= isTienePermisosProductoEstadistica;
	}


	public Boolean isTienePermisosPoliticaFactu=false;

	public Boolean getIsTienePermisosPoliticaFactu() {
		return isTienePermisosPoliticaFactu;
	}

	public void setIsTienePermisosPoliticaFactu(Boolean isTienePermisosPoliticaFactu) {
		this.isTienePermisosPoliticaFactu= isTienePermisosPoliticaFactu;
	}


	public Boolean isTienePermisosProductoCuentaContable=false;

	public Boolean getIsTienePermisosProductoCuentaContable() {
		return isTienePermisosProductoCuentaContable;
	}

	public void setIsTienePermisosProductoCuentaContable(Boolean isTienePermisosProductoCuentaContable) {
		this.isTienePermisosProductoCuentaContable= isTienePermisosProductoCuentaContable;
	}


	public Boolean isTienePermisosBodegaProducto=false;

	public Boolean getIsTienePermisosBodegaProducto() {
		return isTienePermisosBodegaProducto;
	}

	public void setIsTienePermisosBodegaProducto(Boolean isTienePermisosBodegaProducto) {
		this.isTienePermisosBodegaProducto= isTienePermisosBodegaProducto;
	}


	public Boolean isTienePermisosPresupuestoProducto=false;

	public Boolean getIsTienePermisosPresupuestoProducto() {
		return isTienePermisosPresupuestoProducto;
	}

	public void setIsTienePermisosPresupuestoProducto(Boolean isTienePermisosPresupuestoProducto) {
		this.isTienePermisosPresupuestoProducto= isTienePermisosPresupuestoProducto;
	}


	public Boolean isTienePermisosSaldoMesProducto=false;

	public Boolean getIsTienePermisosSaldoMesProducto() {
		return isTienePermisosSaldoMesProducto;
	}

	public void setIsTienePermisosSaldoMesProducto(Boolean isTienePermisosSaldoMesProducto) {
		this.isTienePermisosSaldoMesProducto= isTienePermisosSaldoMesProducto;
	}

	
	
	//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
	public String sFinalQueryGeneral="";
	public Boolean isEntroOnLoad=false;
	public Boolean isErrorGuardar=false;
	
	public Boolean isGuardarCambiosEnLote=false;
	public Boolean isCargarCombosDependencia=false;
	public Boolean isSeleccionarTodos=false;
	public Boolean isSeleccionados=false;
	public Boolean conGraficoReporte=false;
	
	public Boolean isPostAccionNuevo=false;
	public Boolean isPostAccionSinCerrar=false;
	public Boolean isPostAccionSinMensaje=false;
	
	
	public Boolean esControlTabla=false;
	
	public Boolean isPermisoTodoProducto;
	public Boolean isPermisoNuevoProducto;
	public Boolean isPermisoActualizarProducto;
	public Boolean isPermisoActualizarOriginalProducto;
	public Boolean isPermisoEliminarProducto;
	public Boolean isPermisoGuardarCambiosProducto;
	public Boolean isPermisoConsultaProducto;
	public Boolean isPermisoBusquedaProducto;
	public Boolean isPermisoReporteProducto;
	public Boolean isPermisoPaginacionMedioProducto;
	public Boolean isPermisoPaginacionAltoProducto;
	public Boolean isPermisoPaginacionTodoProducto;
	public Boolean isPermisoCopiarProducto;
	public Boolean isPermisoVerFormProducto;
	public Boolean isPermisoDuplicarProducto;
	public Boolean isPermisoOrdenProducto;
	
	
	public ArrayList<DatoGeneral> arrDatoGeneral;
	public ArrayList<String> arrDatoGeneralNo;
	ArrayList<Classe> classesActual=new ArrayList<Classe>();
	
	public List<Accion> accions;	
	public List<Accion> accionsFormulario;
	
	
	public ArrayList<DatoGeneralMinimo> arrDatoGeneralMinimos;
	
	public ArrayList<Reporte> tiposArchivosReportes;
	public ArrayList<Reporte> tiposArchivosReportesDinamico;
	public ArrayList<Reporte> tiposReportes;
	public ArrayList<Reporte> tiposReportesDinamico;
	public ArrayList<Reporte> tiposGraficosReportes;
	public ArrayList<Reporte> tiposPaginacion;
	public ArrayList<Reporte> tiposRelaciones;
	public ArrayList<Reporte> tiposAcciones;
	public ArrayList<Reporte> tiposAccionesFormulario;
	public ArrayList<Reporte> tiposSeleccionar;
	
	public ArrayList<Reporte> tiposColumnasSelect;
	public ArrayList<Reporte> tiposRelacionesSelect;
	
	
	public Integer iNumeroPaginacion;
	public Integer iNumeroPaginacionPagina;
	public Pagination pagination;
	public DatosCliente datosCliente;
	public DatosDeep datosDeep;
	public String sTipoArchivoReporte="";
	public String sTipoArchivoReporteDinamico="";
	public String sTipoReporte="";
	public String sTipoReporteDinamico="";
	public String sTipoGraficoReporte="";
	public String sTipoPaginacion="";
	public String sTipoRelacion="";
	public String sTipoAccion="";
	public String sTipoAccionFormulario="";
	public String sTipoSeleccionar="";	
	public String sDetalleReporte="";
	public Boolean isMostrarNumeroPaginacion;
	public String sTipoReporteExtra="";
	public String sValorCampoGeneral="";
	public Boolean esReporteDinamico=false;
	public Boolean esReporteAccionProceso=false;
	public Boolean esRecargarFks=false;
	public String sPathReporteDinamico="";
	
	public ProductoParameterReturnGeneral productoReturnGeneral;
	public ProductoParameterReturnGeneral productoParameterGeneral;
	
	

	public ProveedorProductoLogic proveedorproductoLogic=null;

	public ProveedorProductoLogic getProveedorProductoLogic() {
		return proveedorproductoLogic;
	}

	public void setProveedorProductoLogic(ProveedorProductoLogic proveedorproductoLogic) {
		this.proveedorproductoLogic = proveedorproductoLogic;
	}


	public PrecioLogic precioLogic=null;

	public PrecioLogic getPrecioLogic() {
		return precioLogic;
	}

	public void setPrecioLogic(PrecioLogic precioLogic) {
		this.precioLogic = precioLogic;
	}


	public DetalleImpuestoInvenLogic detalleimpuestoinvenLogic=null;

	public DetalleImpuestoInvenLogic getDetalleImpuestoInvenLogic() {
		return detalleimpuestoinvenLogic;
	}

	public void setDetalleImpuestoInvenLogic(DetalleImpuestoInvenLogic detalleimpuestoinvenLogic) {
		this.detalleimpuestoinvenLogic = detalleimpuestoinvenLogic;
	}


	public PresupuestoVentasLogic presupuestoventasLogic=null;

	public PresupuestoVentasLogic getPresupuestoVentasLogic() {
		return presupuestoventasLogic;
	}

	public void setPresupuestoVentasLogic(PresupuestoVentasLogic presupuestoventasLogic) {
		this.presupuestoventasLogic = presupuestoventasLogic;
	}


	public PoliticaProductoLogic politicaproductoLogic=null;

	public PoliticaProductoLogic getPoliticaProductoLogic() {
		return politicaproductoLogic;
	}

	public void setPoliticaProductoLogic(PoliticaProductoLogic politicaproductoLogic) {
		this.politicaproductoLogic = politicaproductoLogic;
	}


	public SerieProductoLogic serieproductoLogic=null;

	public SerieProductoLogic getSerieProductoLogic() {
		return serieproductoLogic;
	}

	public void setSerieProductoLogic(SerieProductoLogic serieproductoLogic) {
		this.serieproductoLogic = serieproductoLogic;
	}


	public UbicacionProduLogic ubicacionproduLogic=null;

	public UbicacionProduLogic getUbicacionProduLogic() {
		return ubicacionproduLogic;
	}

	public void setUbicacionProduLogic(UbicacionProduLogic ubicacionproduLogic) {
		this.ubicacionproduLogic = ubicacionproduLogic;
	}


	public ParametroProductoLogic parametroproductoLogic=null;

	public ParametroProductoLogic getParametroProductoLogic() {
		return parametroproductoLogic;
	}

	public void setParametroProductoLogic(ParametroProductoLogic parametroproductoLogic) {
		this.parametroproductoLogic = parametroproductoLogic;
	}


	public ProductoUnidadLogic productounidadLogic=null;

	public ProductoUnidadLogic getProductoUnidadLogic() {
		return productounidadLogic;
	}

	public void setProductoUnidadLogic(ProductoUnidadLogic productounidadLogic) {
		this.productounidadLogic = productounidadLogic;
	}


	public IngredienteLogic ingredienteRelacionLogic=null;

	public IngredienteLogic getIngredienteRelacionLogic() {
		return ingredienteRelacionLogic;
	}

	public void setIngredienteRelacionLogic(IngredienteLogic ingredienteRelacionLogic) {
		this.ingredienteRelacionLogic = ingredienteRelacionLogic;
	}


	public ProductoCaracLogic productocaracLogic=null;

	public ProductoCaracLogic getProductoCaracLogic() {
		return productocaracLogic;
	}

	public void setProductoCaracLogic(ProductoCaracLogic productocaracLogic) {
		this.productocaracLogic = productocaracLogic;
	}


	public ServicioClienteLogic servicioclienteLogic=null;

	public ServicioClienteLogic getServicioClienteLogic() {
		return servicioclienteLogic;
	}

	public void setServicioClienteLogic(ServicioClienteLogic servicioclienteLogic) {
		this.servicioclienteLogic = servicioclienteLogic;
	}


	public ProductoPromocionLogic productopromocionRelacionLogic=null;

	public ProductoPromocionLogic getProductoPromocionRelacionLogic() {
		return productopromocionRelacionLogic;
	}

	public void setProductoPromocionRelacionLogic(ProductoPromocionLogic productopromocionRelacionLogic) {
		this.productopromocionRelacionLogic = productopromocionRelacionLogic;
	}


	public ProductoEspeciLogic productoespeciLogic=null;

	public ProductoEspeciLogic getProductoEspeciLogic() {
		return productoespeciLogic;
	}

	public void setProductoEspeciLogic(ProductoEspeciLogic productoespeciLogic) {
		this.productoespeciLogic = productoespeciLogic;
	}


	public ProductoReemplaLogic productoreemplaLogic=null;

	public ProductoReemplaLogic getProductoReemplaLogic() {
		return productoreemplaLogic;
	}

	public void setProductoReemplaLogic(ProductoReemplaLogic productoreemplaLogic) {
		this.productoreemplaLogic = productoreemplaLogic;
	}


	public ProductoEstadisticaLogic productoestadisticaLogic=null;

	public ProductoEstadisticaLogic getProductoEstadisticaLogic() {
		return productoestadisticaLogic;
	}

	public void setProductoEstadisticaLogic(ProductoEstadisticaLogic productoestadisticaLogic) {
		this.productoestadisticaLogic = productoestadisticaLogic;
	}


	public PoliticaFactuLogic politicafactuLogic=null;

	public PoliticaFactuLogic getPoliticaFactuLogic() {
		return politicafactuLogic;
	}

	public void setPoliticaFactuLogic(PoliticaFactuLogic politicafactuLogic) {
		this.politicafactuLogic = politicafactuLogic;
	}


	public ProductoCuentaContableLogic productocuentacontableLogic=null;

	public ProductoCuentaContableLogic getProductoCuentaContableLogic() {
		return productocuentacontableLogic;
	}

	public void setProductoCuentaContableLogic(ProductoCuentaContableLogic productocuentacontableLogic) {
		this.productocuentacontableLogic = productocuentacontableLogic;
	}


	public BodegaProductoLogic bodegaproductoLogic=null;

	public BodegaProductoLogic getBodegaProductoLogic() {
		return bodegaproductoLogic;
	}

	public void setBodegaProductoLogic(BodegaProductoLogic bodegaproductoLogic) {
		this.bodegaproductoLogic = bodegaproductoLogic;
	}


	public PresupuestoProductoLogic presupuestoproductoLogic=null;

	public PresupuestoProductoLogic getPresupuestoProductoLogic() {
		return presupuestoproductoLogic;
	}

	public void setPresupuestoProductoLogic(PresupuestoProductoLogic presupuestoproductoLogic) {
		this.presupuestoproductoLogic = presupuestoproductoLogic;
	}


	public SaldoMesProductoLogic saldomesproductoLogic=null;

	public SaldoMesProductoLogic getSaldoMesProductoLogic() {
		return saldomesproductoLogic;
	}

	public void setSaldoMesProductoLogic(SaldoMesProductoLogic saldomesproductoLogic) {
		this.saldomesproductoLogic = saldomesproductoLogic;
	}
 	
	public JasperPrint jasperPrint = null;
	
	public Long lIdUsuarioSesion=0L;				
	
	public Boolean isEsNuevoProducto=false;
	public Boolean esParaAccionDesdeFormularioProducto=false;
	public Boolean isEsMantenimientoRelacionesRelacionadoUnico=false;
	public Boolean isEsMantenimientoRelaciones=false;
	public Boolean isEsMantenimientoRelacionado=false;	
	public Boolean isContieneImagenes=false;
		
	//public Boolean conTotales=false; //Viene heredado de JInternalFrameBase
	//public Boolean esParaBusquedaForeignKey=false;
	
	
	protected ProductoSessionBeanAdditional productoSessionBeanAdditional=null;
	
	public ProductoSessionBeanAdditional getProductoSessionBeanAdditional() {
		return this.productoSessionBeanAdditional;
	}
	
	public void setProductoSessionBeanAdditional(ProductoSessionBeanAdditional productoSessionBeanAdditional) {
		try {
			this.productoSessionBeanAdditional=productoSessionBeanAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	protected ProductoBeanSwingJInternalFrameAdditional productoBeanSwingJInternalFrameAdditional=null;
	//public class ProductoBeanSwingJInternalFrame
	
	public ProductoBeanSwingJInternalFrameAdditional getProductoBeanSwingJInternalFrameAdditional() {
		return this.productoBeanSwingJInternalFrameAdditional;
	}
	
	public void setProductoBeanSwingJInternalFrameAdditional(ProductoBeanSwingJInternalFrameAdditional productoBeanSwingJInternalFrameAdditional) {
		try {
			this.productoBeanSwingJInternalFrameAdditional=productoBeanSwingJInternalFrameAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	//ESTA EN PADRE
	
	//public ProductoLogic productoLogic;
	public SistemaLogicAdditional sistemaLogicAdditional;
	
	
	public Producto productoBean;
	public ProductoConstantesFunciones productoConstantesFunciones;
	//public ProductoParameterReturnGeneral productoReturnGeneral;
	
	//FK
	
	public EmpresaLogic empresaLogic;
	public SucursalLogic sucursalLogic;
	public LineaLogic lineaLogic;
	public LineaLogic lineagrupoLogic;
	public LineaLogic lineacategoriaLogic;
	public LineaLogic lineamarcaLogic;
	public TipoProductoServicioLogic tipoproductoservicioLogic;
	public TipoProductoServicioInvenLogic tipoproductoservicioinvenLogic;
	public TipoCosteoLogic tipocosteoLogic;
	public UnidadLogic unidadLogic;
	public UnidadLogic unidadpesoLogic;
	public ArancelLogic arancelLogic;
	public ClienteLogic clienteLogic;
	public ClienteLogic clienteproveedordefectoLogic;
	public TipoProductoLogic tipoproductoLogic;
	public ColorProductoLogic colorproductoLogic;
	public ClaseProductoLogic claseproductoLogic;
	public EfectoProductoLogic efectoproductoLogic;
	public MarcaProductoLogic marcaproductoLogic;
	public ModeloProductoLogic modeloproductoLogic;
	public MaterialProductoLogic materialproductoLogic;
	public SegmentoProductoLogic segmentoproductoLogic;
	public TallaProductoLogic tallaproductoLogic;
	
	//PARAMETROS
	
	
	//public List<Producto> productos;	
	//public List<Producto> productosEliminados;
	//public List<Producto> productosAux;
	
	public String sAccionMantenimiento="";
	public String sAccionBusqueda="";
	public String sAccionAdicional="";
	public String sUltimaBusqueda="";
	
	public Mensaje mensaje;
	
	
	public String sVisibilidadTablaBusquedas="";					
	public String sVisibilidadTablaElementos="";	
	public String sVisibilidadTablaAcciones="";			
	
	public Boolean isVisibilidadCeldaNuevoProducto=false;
	public Boolean isVisibilidadCeldaDuplicarProducto=true;
	public Boolean isVisibilidadCeldaCopiarProducto=true;
	public Boolean isVisibilidadCeldaVerFormProducto=true;
	public Boolean isVisibilidadCeldaOrdenProducto=true;
	public Boolean isVisibilidadCeldaNuevoRelacionesProducto=false;
	public Boolean isVisibilidadCeldaModificarProducto=false;
	public Boolean isVisibilidadCeldaActualizarProducto=false;
	public Boolean isVisibilidadCeldaEliminarProducto=false;
	public Boolean isVisibilidadCeldaCancelarProducto=false;
	public Boolean isVisibilidadCeldaGuardarProducto=false;	
	public Boolean isVisibilidadCeldaGuardarCambiosProducto=false;	
	
	
	public Boolean isVisibilidadBusquedaPorCodigo=false;
	public Boolean isVisibilidadBusquedaPorNombre=false;
	public Boolean isVisibilidadBusquedaPorNombreExtranjero=false;
	public Boolean isVisibilidadFK_IdArancel=false;
	public Boolean isVisibilidadFK_IdClaseProducto=false;
	public Boolean isVisibilidadFK_IdCliente=false;
	public Boolean isVisibilidadFK_IdClienteProveedorDefecto=false;
	public Boolean isVisibilidadFK_IdColorProducto=false;
	public Boolean isVisibilidadFK_IdEfectoProducto=false;
	public Boolean isVisibilidadFK_IdEmpresa=false;
	public Boolean isVisibilidadFK_IdLinea=false;
	public Boolean isVisibilidadFK_IdLineaCategoria=false;
	public Boolean isVisibilidadFK_IdLineaGrupo=false;
	public Boolean isVisibilidadFK_IdLineaMarca=false;
	public Boolean isVisibilidadFK_IdMarcaProducto=false;
	public Boolean isVisibilidadFK_IdMaterialProducto=false;
	public Boolean isVisibilidadFK_IdModeloProducto=false;
	public Boolean isVisibilidadFK_IdSegmentoProducto=false;
	public Boolean isVisibilidadFK_IdSucursal=false;
	public Boolean isVisibilidadFK_IdTallaProducto=false;
	public Boolean isVisibilidadFK_IdTipoCosteo=false;
	public Boolean isVisibilidadFK_IdTipoProducto=false;
	public Boolean isVisibilidadFK_IdTipoProductoServicio=false;
	public Boolean isVisibilidadFK_IdTipoProductoServicioInven=false;
	public Boolean isVisibilidadFK_IdUnidad=false;
	public Boolean isVisibilidadFK_IdUnidadPeso=false;
	
	public Long getiIdNuevoProducto() {
		return this.iIdNuevoProducto;
	}

	public void setiIdNuevoProducto(Long iIdNuevoProducto) {
		this.iIdNuevoProducto = iIdNuevoProducto;
	}
	
	public Long getidProductoActual() {
		return this.idProductoActual;
	}

	public void setidProductoActual(Long idProductoActual) {
		this.idProductoActual = idProductoActual;
	}
	
	public int getrowIndexActual() {
		return this.rowIndexActual;
	}

	public void setrowIndexActual(int rowIndexActual) {
		this.rowIndexActual=rowIndexActual;
	}
	
	
	public Producto getproducto() {
		return this.producto;
	}

	public void setproducto(Producto producto) {
		this.producto = producto;
	}
	
	public Producto getproductoAux() {
		return this.productoAux;
	}

	public void setproductoAux(Producto productoAux) {
		this.productoAux = productoAux;
	}				
	
	public Producto getproductoAnterior() {
		return this.productoAnterior;
	}

	public void setproductoAnterior(Producto productoAnterior) {
		this.productoAnterior = productoAnterior;
	}	
	
	public Producto getproductoTotales() {
		return this.productoTotales;
	}

	public void setproductoTotales(Producto productoTotales) {
		this.productoTotales = productoTotales;
	}	
	
	public Producto getproductoBean() {
		return this.productoBean;
	}

	public void setproductoBean(Producto productoBean) {
		this.productoBean = productoBean;
	}	
	
	public ProductoParameterReturnGeneral getproductoReturnGeneral() {
		return this.productoReturnGeneral;
	}

	public void setproductoReturnGeneral(ProductoParameterReturnGeneral productoReturnGeneral) {
		this.productoReturnGeneral = productoReturnGeneral;
	}	
	
	
	public String codigoBusquedaPorCodigo="";

	public String getcodigoBusquedaPorCodigo() {
		return this.codigoBusquedaPorCodigo;
	}

	public void setcodigoBusquedaPorCodigo(String codigoBusquedaPorCodigo) {
		this.codigoBusquedaPorCodigo = codigoBusquedaPorCodigo;
	}

	public String nombreBusquedaPorNombre="";

	public String getnombreBusquedaPorNombre() {
		return this.nombreBusquedaPorNombre;
	}

	public void setnombreBusquedaPorNombre(String nombreBusquedaPorNombre) {
		this.nombreBusquedaPorNombre = nombreBusquedaPorNombre;
	}

	public String nombre_extranjeroBusquedaPorNombreExtranjero="";

	public String getnombre_extranjeroBusquedaPorNombreExtranjero() {
		return this.nombre_extranjeroBusquedaPorNombreExtranjero;
	}

	public void setnombre_extranjeroBusquedaPorNombreExtranjero(String nombre_extranjeroBusquedaPorNombreExtranjero) {
		this.nombre_extranjeroBusquedaPorNombreExtranjero = nombre_extranjeroBusquedaPorNombreExtranjero;
	}

	public Long id_arancelFK_IdArancel=-1L;

	public Long getid_arancelFK_IdArancel() {
		return this.id_arancelFK_IdArancel;
	}

	public void setid_arancelFK_IdArancel(Long id_arancelFK_IdArancel) {
		this.id_arancelFK_IdArancel = id_arancelFK_IdArancel;
	}

	public Long id_clase_productoFK_IdClaseProducto=-1L;

	public Long getid_clase_productoFK_IdClaseProducto() {
		return this.id_clase_productoFK_IdClaseProducto;
	}

	public void setid_clase_productoFK_IdClaseProducto(Long id_clase_productoFK_IdClaseProducto) {
		this.id_clase_productoFK_IdClaseProducto = id_clase_productoFK_IdClaseProducto;
	}

	public Long id_clienteFK_IdCliente=-1L;

	public Long getid_clienteFK_IdCliente() {
		return this.id_clienteFK_IdCliente;
	}

	public void setid_clienteFK_IdCliente(Long id_clienteFK_IdCliente) {
		this.id_clienteFK_IdCliente = id_clienteFK_IdCliente;
	}

	public Long id_cliente_proveedor_defectoFK_IdClienteProveedorDefecto=-1L;

	public Long getid_cliente_proveedor_defectoFK_IdClienteProveedorDefecto() {
		return this.id_cliente_proveedor_defectoFK_IdClienteProveedorDefecto;
	}

	public void setid_cliente_proveedor_defectoFK_IdClienteProveedorDefecto(Long id_cliente_proveedor_defectoFK_IdClienteProveedorDefecto) {
		this.id_cliente_proveedor_defectoFK_IdClienteProveedorDefecto = id_cliente_proveedor_defectoFK_IdClienteProveedorDefecto;
	}

	public Long id_color_productoFK_IdColorProducto=-1L;

	public Long getid_color_productoFK_IdColorProducto() {
		return this.id_color_productoFK_IdColorProducto;
	}

	public void setid_color_productoFK_IdColorProducto(Long id_color_productoFK_IdColorProducto) {
		this.id_color_productoFK_IdColorProducto = id_color_productoFK_IdColorProducto;
	}

	public Long id_efecto_productoFK_IdEfectoProducto=-1L;

	public Long getid_efecto_productoFK_IdEfectoProducto() {
		return this.id_efecto_productoFK_IdEfectoProducto;
	}

	public void setid_efecto_productoFK_IdEfectoProducto(Long id_efecto_productoFK_IdEfectoProducto) {
		this.id_efecto_productoFK_IdEfectoProducto = id_efecto_productoFK_IdEfectoProducto;
	}

	public Long id_empresaFK_IdEmpresa=-1L;

	public Long getid_empresaFK_IdEmpresa() {
		return this.id_empresaFK_IdEmpresa;
	}

	public void setid_empresaFK_IdEmpresa(Long id_empresaFK_IdEmpresa) {
		this.id_empresaFK_IdEmpresa = id_empresaFK_IdEmpresa;
	}

	public Long id_lineaFK_IdLinea=-1L;

	public Long getid_lineaFK_IdLinea() {
		return this.id_lineaFK_IdLinea;
	}

	public void setid_lineaFK_IdLinea(Long id_lineaFK_IdLinea) {
		this.id_lineaFK_IdLinea = id_lineaFK_IdLinea;
	}

	public Long id_linea_categoriaFK_IdLineaCategoria=null;

	public Long getid_linea_categoriaFK_IdLineaCategoria() {
		return this.id_linea_categoriaFK_IdLineaCategoria;
	}

	public void setid_linea_categoriaFK_IdLineaCategoria(Long id_linea_categoriaFK_IdLineaCategoria) {
		this.id_linea_categoriaFK_IdLineaCategoria = id_linea_categoriaFK_IdLineaCategoria;
	}

	public Long id_linea_grupoFK_IdLineaGrupo=null;

	public Long getid_linea_grupoFK_IdLineaGrupo() {
		return this.id_linea_grupoFK_IdLineaGrupo;
	}

	public void setid_linea_grupoFK_IdLineaGrupo(Long id_linea_grupoFK_IdLineaGrupo) {
		this.id_linea_grupoFK_IdLineaGrupo = id_linea_grupoFK_IdLineaGrupo;
	}

	public Long id_linea_marcaFK_IdLineaMarca=null;

	public Long getid_linea_marcaFK_IdLineaMarca() {
		return this.id_linea_marcaFK_IdLineaMarca;
	}

	public void setid_linea_marcaFK_IdLineaMarca(Long id_linea_marcaFK_IdLineaMarca) {
		this.id_linea_marcaFK_IdLineaMarca = id_linea_marcaFK_IdLineaMarca;
	}

	public Long id_marca_productoFK_IdMarcaProducto=-1L;

	public Long getid_marca_productoFK_IdMarcaProducto() {
		return this.id_marca_productoFK_IdMarcaProducto;
	}

	public void setid_marca_productoFK_IdMarcaProducto(Long id_marca_productoFK_IdMarcaProducto) {
		this.id_marca_productoFK_IdMarcaProducto = id_marca_productoFK_IdMarcaProducto;
	}

	public Long id_material_productoFK_IdMaterialProducto=-1L;

	public Long getid_material_productoFK_IdMaterialProducto() {
		return this.id_material_productoFK_IdMaterialProducto;
	}

	public void setid_material_productoFK_IdMaterialProducto(Long id_material_productoFK_IdMaterialProducto) {
		this.id_material_productoFK_IdMaterialProducto = id_material_productoFK_IdMaterialProducto;
	}

	public Long id_modelo_productoFK_IdModeloProducto=-1L;

	public Long getid_modelo_productoFK_IdModeloProducto() {
		return this.id_modelo_productoFK_IdModeloProducto;
	}

	public void setid_modelo_productoFK_IdModeloProducto(Long id_modelo_productoFK_IdModeloProducto) {
		this.id_modelo_productoFK_IdModeloProducto = id_modelo_productoFK_IdModeloProducto;
	}

	public Long id_segmento_productoFK_IdSegmentoProducto=-1L;

	public Long getid_segmento_productoFK_IdSegmentoProducto() {
		return this.id_segmento_productoFK_IdSegmentoProducto;
	}

	public void setid_segmento_productoFK_IdSegmentoProducto(Long id_segmento_productoFK_IdSegmentoProducto) {
		this.id_segmento_productoFK_IdSegmentoProducto = id_segmento_productoFK_IdSegmentoProducto;
	}

	public Long id_sucursalFK_IdSucursal=-1L;

	public Long getid_sucursalFK_IdSucursal() {
		return this.id_sucursalFK_IdSucursal;
	}

	public void setid_sucursalFK_IdSucursal(Long id_sucursalFK_IdSucursal) {
		this.id_sucursalFK_IdSucursal = id_sucursalFK_IdSucursal;
	}

	public Long id_talla_productoFK_IdTallaProducto=-1L;

	public Long getid_talla_productoFK_IdTallaProducto() {
		return this.id_talla_productoFK_IdTallaProducto;
	}

	public void setid_talla_productoFK_IdTallaProducto(Long id_talla_productoFK_IdTallaProducto) {
		this.id_talla_productoFK_IdTallaProducto = id_talla_productoFK_IdTallaProducto;
	}

	public Long id_tipo_costeoFK_IdTipoCosteo=-1L;

	public Long getid_tipo_costeoFK_IdTipoCosteo() {
		return this.id_tipo_costeoFK_IdTipoCosteo;
	}

	public void setid_tipo_costeoFK_IdTipoCosteo(Long id_tipo_costeoFK_IdTipoCosteo) {
		this.id_tipo_costeoFK_IdTipoCosteo = id_tipo_costeoFK_IdTipoCosteo;
	}

	public Long id_tipo_productoFK_IdTipoProducto=-1L;

	public Long getid_tipo_productoFK_IdTipoProducto() {
		return this.id_tipo_productoFK_IdTipoProducto;
	}

	public void setid_tipo_productoFK_IdTipoProducto(Long id_tipo_productoFK_IdTipoProducto) {
		this.id_tipo_productoFK_IdTipoProducto = id_tipo_productoFK_IdTipoProducto;
	}

	public Long id_tipo_producto_servicioFK_IdTipoProductoServicio=-1L;

	public Long getid_tipo_producto_servicioFK_IdTipoProductoServicio() {
		return this.id_tipo_producto_servicioFK_IdTipoProductoServicio;
	}

	public void setid_tipo_producto_servicioFK_IdTipoProductoServicio(Long id_tipo_producto_servicioFK_IdTipoProductoServicio) {
		this.id_tipo_producto_servicioFK_IdTipoProductoServicio = id_tipo_producto_servicioFK_IdTipoProductoServicio;
	}

	public Long id_tipo_producto_servicio_invenFK_IdTipoProductoServicioInven=-1L;

	public Long getid_tipo_producto_servicio_invenFK_IdTipoProductoServicioInven() {
		return this.id_tipo_producto_servicio_invenFK_IdTipoProductoServicioInven;
	}

	public void setid_tipo_producto_servicio_invenFK_IdTipoProductoServicioInven(Long id_tipo_producto_servicio_invenFK_IdTipoProductoServicioInven) {
		this.id_tipo_producto_servicio_invenFK_IdTipoProductoServicioInven = id_tipo_producto_servicio_invenFK_IdTipoProductoServicioInven;
	}

	public Long id_unidadFK_IdUnidad=-1L;

	public Long getid_unidadFK_IdUnidad() {
		return this.id_unidadFK_IdUnidad;
	}

	public void setid_unidadFK_IdUnidad(Long id_unidadFK_IdUnidad) {
		this.id_unidadFK_IdUnidad = id_unidadFK_IdUnidad;
	}

	public Long id_unidad_pesoFK_IdUnidadPeso=-1L;

	public Long getid_unidad_pesoFK_IdUnidadPeso() {
		return this.id_unidad_pesoFK_IdUnidadPeso;
	}

	public void setid_unidad_pesoFK_IdUnidadPeso(Long id_unidad_pesoFK_IdUnidadPeso) {
		this.id_unidad_pesoFK_IdUnidadPeso = id_unidad_pesoFK_IdUnidadPeso;
	}

		
	
	//ELEMENTOS TABLAS PARAMETOS
	
	
	
	
	
	
	//ELEMENTOS TABLAS PARAMETOS_FIN
	
	
	public ProductoLogic getProductoLogic()	{		
		return productoLogic;
	}

	public void setProductoLogic(ProductoLogic productoLogic) {
		this.productoLogic = productoLogic;
	}
	
	
	public void setsFinalQueryGeneral(String sFinalQueryGeneral) {
		this.sFinalQueryGeneral=sFinalQueryGeneral;
	}
	
	public String getsFinalQueryGeneral() {
		return this.sFinalQueryGeneral;
	}
		
	public Boolean getIsGuardarCambiosEnLote() {
		return isGuardarCambiosEnLote;
	}

	public void setIsGuardarCambiosEnLote(Boolean isGuardarCambiosEnLote) {
		this.isGuardarCambiosEnLote = isGuardarCambiosEnLote;
	}
	
	public Boolean getIsCargarCombosDependencia() {
		return isCargarCombosDependencia;
	}

	public void setIsCargarCombosDependencia(Boolean isCargarCombosDependencia) {
		this.isCargarCombosDependencia = isCargarCombosDependencia;
	}
	
	public Boolean getIsEsNuevoProducto() {
		return isEsNuevoProducto;
	}

	public void setIsEsNuevoProducto(Boolean isEsNuevoProducto) {
		this.isEsNuevoProducto = isEsNuevoProducto;
	}

	public Boolean getEsParaAccionDesdeFormularioProducto() {
		return esParaAccionDesdeFormularioProducto;
	}
	
	public void setEsParaAccionDesdeFormularioProducto(Boolean esParaAccionDesdeFormularioProducto) {
		this.esParaAccionDesdeFormularioProducto = esParaAccionDesdeFormularioProducto;
	}
	
	public Boolean getIsEsMantenimientoRelacionesRelacionadoUnico() {
		return isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public void setIsEsMantenimientoRelacionesRelacionadoUnico(Boolean isEsMantenimientoRelacionesRelacionadoUnico) {
		this.isEsMantenimientoRelacionesRelacionadoUnico = isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public Boolean getIsEsMantenimientoRelaciones() {
		return isEsMantenimientoRelaciones;
	}

	public void setIsEsMantenimientoRelaciones(Boolean isEsMantenimientoRelaciones) {
		this.isEsMantenimientoRelaciones = isEsMantenimientoRelaciones;
	}

	public Boolean getIsEsMantenimientoRelacionado() {
		return isEsMantenimientoRelacionado;
	}

	public void setIsEsMantenimientoRelacionado(Boolean isEsMantenimientoRelacionado) {
		this.isEsMantenimientoRelacionado = isEsMantenimientoRelacionado;
	}

	public Boolean getesParaBusquedaForeignKey() {
		return esParaBusquedaForeignKey;
	}

	public void setesParaBusquedaForeignKey(Boolean esParaBusquedaForeignKey) {
		this.esParaBusquedaForeignKey = esParaBusquedaForeignKey;
	}

	public Boolean getIsContieneImagenes() {
		return isContieneImagenes;
	}

	public void setIsContieneImagenes(Boolean isContieneImagenes) {
		this.isContieneImagenes = isContieneImagenes;
	}		
	
	
	public void cargarCombosEmpresasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.empresasForeignKey=new ArrayList<Empresa>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EmpresaLogic empresaLogic=new EmpresaLogic();

			//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

			if(this.productoSessionBean==null) {
				this.productoSessionBean=new ProductoSessionBean();
			}

			if(!this.productoSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

					empresaLogic.getTodosEmpresasWithConnection(sFinalQuery,new Pagination());

					this.empresasForeignKey=empresaLogic.getEmpresas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEmpresa(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					empresaLogic.getEntityWithConnection(productoSessionBean.getlidEmpresaActual());
					this.empresasForeignKey.add(empresaLogic.getEmpresa());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosSucursalsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.sucursalsForeignKey=new ArrayList<Sucursal>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			SucursalLogic sucursalLogic=new SucursalLogic();

			//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

			if(this.productoSessionBean==null) {
				this.productoSessionBean=new ProductoSessionBean();
			}

			if(!this.productoSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

					sucursalLogic.getTodosSucursalsWithConnection(sFinalQuery,new Pagination());

					this.sucursalsForeignKey=sucursalLogic.getSucursals();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaSucursal(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					sucursalLogic.getEntityWithConnection(productoSessionBean.getlidSucursalActual());
					this.sucursalsForeignKey.add(sucursalLogic.getSucursal());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosLineasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.lineasForeignKey=new ArrayList<Linea>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			LineaLogic lineaLogic=new LineaLogic();

			//lineaLogic.getLineaDataAccess().setIsForForeingKeyData(true);

			if(this.productoSessionBean==null) {
				this.productoSessionBean=new ProductoSessionBean();
			}

			if(!this.productoSessionBean.getisBusquedaDesdeForeignKeySesionLinea()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//lineaLogic.getLineaDataAccess().setIsForForeingKeyData(true);

					lineaLogic.getTodosLineasWithConnection(sFinalQuery,new Pagination());

					this.lineasForeignKey=lineaLogic.getLineas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaLinea(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					lineaLogic.getEntityWithConnection(productoSessionBean.getlidLineaActual());
					this.lineasForeignKey.add(lineaLogic.getLinea());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosLineaGruposForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.lineagruposForeignKey=new ArrayList<Linea>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			LineaLogic lineaLogic=new LineaLogic();

			//lineaLogic.getLineaDataAccess().setIsForForeingKeyData(true);

			if(this.productoSessionBean==null) {
				this.productoSessionBean=new ProductoSessionBean();
			}

			if(!this.productoSessionBean.getisBusquedaDesdeForeignKeySesionLineaGrupo()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//lineagrupoLogic.getLineaDataAccess().setIsForForeingKeyData(true);

					lineaLogic.getTodosLineasWithConnection(sFinalQuery,new Pagination());

					this.lineagruposForeignKey=lineaLogic.getLineas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaLineaGrupo(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					lineaLogic.getEntityWithConnection(productoSessionBean.getlidLineaGrupoActual());
					this.lineagruposForeignKey.add(lineaLogic.getLinea());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosLineaCategoriasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.lineacategoriasForeignKey=new ArrayList<Linea>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			LineaLogic lineaLogic=new LineaLogic();

			//lineaLogic.getLineaDataAccess().setIsForForeingKeyData(true);

			if(this.productoSessionBean==null) {
				this.productoSessionBean=new ProductoSessionBean();
			}

			if(!this.productoSessionBean.getisBusquedaDesdeForeignKeySesionLineaCategoria()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//lineacategoriaLogic.getLineaDataAccess().setIsForForeingKeyData(true);

					lineaLogic.getTodosLineasWithConnection(sFinalQuery,new Pagination());

					this.lineacategoriasForeignKey=lineaLogic.getLineas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaLineaCategoria(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					lineaLogic.getEntityWithConnection(productoSessionBean.getlidLineaCategoriaActual());
					this.lineacategoriasForeignKey.add(lineaLogic.getLinea());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosLineaMarcasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.lineamarcasForeignKey=new ArrayList<Linea>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			LineaLogic lineaLogic=new LineaLogic();

			//lineaLogic.getLineaDataAccess().setIsForForeingKeyData(true);

			if(this.productoSessionBean==null) {
				this.productoSessionBean=new ProductoSessionBean();
			}

			if(!this.productoSessionBean.getisBusquedaDesdeForeignKeySesionLineaMarca()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//lineamarcaLogic.getLineaDataAccess().setIsForForeingKeyData(true);

					lineaLogic.getTodosLineasWithConnection(sFinalQuery,new Pagination());

					this.lineamarcasForeignKey=lineaLogic.getLineas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaLineaMarca(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					lineaLogic.getEntityWithConnection(productoSessionBean.getlidLineaMarcaActual());
					this.lineamarcasForeignKey.add(lineaLogic.getLinea());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoProductoServiciosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipoproductoserviciosForeignKey=new ArrayList<TipoProductoServicio>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoProductoServicioLogic tipoproductoservicioLogic=new TipoProductoServicioLogic();

			//tipoproductoservicioLogic.getTipoProductoServicioDataAccess().setIsForForeingKeyData(true);

			if(this.productoSessionBean==null) {
				this.productoSessionBean=new ProductoSessionBean();
			}

			if(!this.productoSessionBean.getisBusquedaDesdeForeignKeySesionTipoProductoServicio()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tipoproductoservicioLogic.getTipoProductoServicioDataAccess().setIsForForeingKeyData(true);

					tipoproductoservicioLogic.getTodosTipoProductoServiciosWithConnection(sFinalQuery,new Pagination());

					this.tipoproductoserviciosForeignKey=tipoproductoservicioLogic.getTipoProductoServicios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoProductoServicio(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipoproductoservicioLogic.getEntityWithConnection(productoSessionBean.getlidTipoProductoServicioActual());
					this.tipoproductoserviciosForeignKey.add(tipoproductoservicioLogic.getTipoProductoServicio());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoProductoServicioInvensForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipoproductoservicioinvensForeignKey=new ArrayList<TipoProductoServicioInven>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoProductoServicioInvenLogic tipoproductoservicioinvenLogic=new TipoProductoServicioInvenLogic();

			//tipoproductoservicioinvenLogic.getTipoProductoServicioInvenDataAccess().setIsForForeingKeyData(true);

			if(this.productoSessionBean==null) {
				this.productoSessionBean=new ProductoSessionBean();
			}

			if(!this.productoSessionBean.getisBusquedaDesdeForeignKeySesionTipoProductoServicioInven()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tipoproductoservicioinvenLogic.getTipoProductoServicioInvenDataAccess().setIsForForeingKeyData(true);

					tipoproductoservicioinvenLogic.getTodosTipoProductoServicioInvensWithConnection(sFinalQuery,new Pagination());

					this.tipoproductoservicioinvensForeignKey=tipoproductoservicioinvenLogic.getTipoProductoServicioInvens();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoProductoServicioInven(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipoproductoservicioinvenLogic.getEntityWithConnection(productoSessionBean.getlidTipoProductoServicioInvenActual());
					this.tipoproductoservicioinvensForeignKey.add(tipoproductoservicioinvenLogic.getTipoProductoServicioInven());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoCosteosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipocosteosForeignKey=new ArrayList<TipoCosteo>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoCosteoLogic tipocosteoLogic=new TipoCosteoLogic();

			//tipocosteoLogic.getTipoCosteoDataAccess().setIsForForeingKeyData(true);

			if(this.productoSessionBean==null) {
				this.productoSessionBean=new ProductoSessionBean();
			}

			if(!this.productoSessionBean.getisBusquedaDesdeForeignKeySesionTipoCosteo()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tipocosteoLogic.getTipoCosteoDataAccess().setIsForForeingKeyData(true);

					tipocosteoLogic.getTodosTipoCosteosWithConnection(sFinalQuery,new Pagination());

					this.tipocosteosForeignKey=tipocosteoLogic.getTipoCosteos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoCosteo(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipocosteoLogic.getEntityWithConnection(productoSessionBean.getlidTipoCosteoActual());
					this.tipocosteosForeignKey.add(tipocosteoLogic.getTipoCosteo());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosUnidadsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.unidadsForeignKey=new ArrayList<Unidad>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			UnidadLogic unidadLogic=new UnidadLogic();

			//unidadLogic.getUnidadDataAccess().setIsForForeingKeyData(true);

			if(this.productoSessionBean==null) {
				this.productoSessionBean=new ProductoSessionBean();
			}

			if(!this.productoSessionBean.getisBusquedaDesdeForeignKeySesionUnidad()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//unidadLogic.getUnidadDataAccess().setIsForForeingKeyData(true);

					unidadLogic.getTodosUnidadsWithConnection(sFinalQuery,new Pagination());

					this.unidadsForeignKey=unidadLogic.getUnidads();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaUnidad(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					unidadLogic.getEntityWithConnection(productoSessionBean.getlidUnidadActual());
					this.unidadsForeignKey.add(unidadLogic.getUnidad());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosUnidadPesosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.unidadpesosForeignKey=new ArrayList<Unidad>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			UnidadLogic unidadLogic=new UnidadLogic();

			//unidadLogic.getUnidadDataAccess().setIsForForeingKeyData(true);

			if(this.productoSessionBean==null) {
				this.productoSessionBean=new ProductoSessionBean();
			}

			if(!this.productoSessionBean.getisBusquedaDesdeForeignKeySesionUnidadPeso()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//unidadpesoLogic.getUnidadDataAccess().setIsForForeingKeyData(true);

					unidadLogic.getTodosUnidadsWithConnection(sFinalQuery,new Pagination());

					this.unidadpesosForeignKey=unidadLogic.getUnidads();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaUnidadPeso(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					unidadLogic.getEntityWithConnection(productoSessionBean.getlidUnidadPesoActual());
					this.unidadpesosForeignKey.add(unidadLogic.getUnidad());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosArancelsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.arancelsForeignKey=new ArrayList<Arancel>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			ArancelLogic arancelLogic=new ArancelLogic();

			//arancelLogic.getArancelDataAccess().setIsForForeingKeyData(true);

			if(this.productoSessionBean==null) {
				this.productoSessionBean=new ProductoSessionBean();
			}

			if(!this.productoSessionBean.getisBusquedaDesdeForeignKeySesionArancel()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//arancelLogic.getArancelDataAccess().setIsForForeingKeyData(true);

					arancelLogic.getTodosArancelsWithConnection(sFinalQuery,new Pagination());

					this.arancelsForeignKey=arancelLogic.getArancels();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaArancel(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					arancelLogic.getEntityWithConnection(productoSessionBean.getlidArancelActual());
					this.arancelsForeignKey.add(arancelLogic.getArancel());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosClientesForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.clientesForeignKey=new ArrayList<Cliente>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			ClienteLogic clienteLogic=new ClienteLogic();

			//clienteLogic.getClienteDataAccess().setIsForForeingKeyData(true);

			if(this.productoSessionBean==null) {
				this.productoSessionBean=new ProductoSessionBean();
			}

			if(!this.productoSessionBean.getisBusquedaDesdeForeignKeySesionCliente()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//clienteLogic.getClienteDataAccess().setIsForForeingKeyData(true);

					clienteLogic.getTodosClientesWithConnection(sFinalQuery,new Pagination());

					this.clientesForeignKey=clienteLogic.getClientes();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCliente(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteLogic.getEntityWithConnection(productoSessionBean.getlidClienteActual());
					this.clientesForeignKey.add(clienteLogic.getCliente());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosClienteProveedorDefectosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.clienteproveedordefectosForeignKey=new ArrayList<Cliente>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			ClienteLogic clienteLogic=new ClienteLogic();

			//clienteLogic.getClienteDataAccess().setIsForForeingKeyData(true);

			if(this.productoSessionBean==null) {
				this.productoSessionBean=new ProductoSessionBean();
			}

			if(!this.productoSessionBean.getisBusquedaDesdeForeignKeySesionClienteProveedorDefecto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//clienteproveedordefectoLogic.getClienteDataAccess().setIsForForeingKeyData(true);

					clienteLogic.getTodosClientesWithConnection(sFinalQuery,new Pagination());

					this.clienteproveedordefectosForeignKey=clienteLogic.getClientes();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaClienteProveedorDefecto(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteLogic.getEntityWithConnection(productoSessionBean.getlidClienteProveedorDefectoActual());
					this.clienteproveedordefectosForeignKey.add(clienteLogic.getCliente());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoProductosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipoproductosForeignKey=new ArrayList<TipoProducto>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoProductoLogic tipoproductoLogic=new TipoProductoLogic();

			//tipoproductoLogic.getTipoProductoDataAccess().setIsForForeingKeyData(true);

			if(this.productoSessionBean==null) {
				this.productoSessionBean=new ProductoSessionBean();
			}

			if(!this.productoSessionBean.getisBusquedaDesdeForeignKeySesionTipoProducto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tipoproductoLogic.getTipoProductoDataAccess().setIsForForeingKeyData(true);

					tipoproductoLogic.getTodosTipoProductosWithConnection(sFinalQuery,new Pagination());

					this.tipoproductosForeignKey=tipoproductoLogic.getTipoProductos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoProducto(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipoproductoLogic.getEntityWithConnection(productoSessionBean.getlidTipoProductoActual());
					this.tipoproductosForeignKey.add(tipoproductoLogic.getTipoProducto());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosColorProductosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.colorproductosForeignKey=new ArrayList<ColorProducto>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			ColorProductoLogic colorproductoLogic=new ColorProductoLogic();

			//colorproductoLogic.getColorProductoDataAccess().setIsForForeingKeyData(true);

			if(this.productoSessionBean==null) {
				this.productoSessionBean=new ProductoSessionBean();
			}

			if(!this.productoSessionBean.getisBusquedaDesdeForeignKeySesionColorProducto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//colorproductoLogic.getColorProductoDataAccess().setIsForForeingKeyData(true);

					colorproductoLogic.getTodosColorProductosWithConnection(sFinalQuery,new Pagination());

					this.colorproductosForeignKey=colorproductoLogic.getColorProductos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaColorProducto(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					colorproductoLogic.getEntityWithConnection(productoSessionBean.getlidColorProductoActual());
					this.colorproductosForeignKey.add(colorproductoLogic.getColorProducto());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosClaseProductosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.claseproductosForeignKey=new ArrayList<ClaseProducto>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			ClaseProductoLogic claseproductoLogic=new ClaseProductoLogic();

			//claseproductoLogic.getClaseProductoDataAccess().setIsForForeingKeyData(true);

			if(this.productoSessionBean==null) {
				this.productoSessionBean=new ProductoSessionBean();
			}

			if(!this.productoSessionBean.getisBusquedaDesdeForeignKeySesionClaseProducto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//claseproductoLogic.getClaseProductoDataAccess().setIsForForeingKeyData(true);

					claseproductoLogic.getTodosClaseProductosWithConnection(sFinalQuery,new Pagination());

					this.claseproductosForeignKey=claseproductoLogic.getClaseProductos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaClaseProducto(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					claseproductoLogic.getEntityWithConnection(productoSessionBean.getlidClaseProductoActual());
					this.claseproductosForeignKey.add(claseproductoLogic.getClaseProducto());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEfectoProductosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.efectoproductosForeignKey=new ArrayList<EfectoProducto>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EfectoProductoLogic efectoproductoLogic=new EfectoProductoLogic();

			//efectoproductoLogic.getEfectoProductoDataAccess().setIsForForeingKeyData(true);

			if(this.productoSessionBean==null) {
				this.productoSessionBean=new ProductoSessionBean();
			}

			if(!this.productoSessionBean.getisBusquedaDesdeForeignKeySesionEfectoProducto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//efectoproductoLogic.getEfectoProductoDataAccess().setIsForForeingKeyData(true);

					efectoproductoLogic.getTodosEfectoProductosWithConnection(sFinalQuery,new Pagination());

					this.efectoproductosForeignKey=efectoproductoLogic.getEfectoProductos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEfectoProducto(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					efectoproductoLogic.getEntityWithConnection(productoSessionBean.getlidEfectoProductoActual());
					this.efectoproductosForeignKey.add(efectoproductoLogic.getEfectoProducto());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosMarcaProductosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.marcaproductosForeignKey=new ArrayList<MarcaProducto>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			MarcaProductoLogic marcaproductoLogic=new MarcaProductoLogic();

			//marcaproductoLogic.getMarcaProductoDataAccess().setIsForForeingKeyData(true);

			if(this.productoSessionBean==null) {
				this.productoSessionBean=new ProductoSessionBean();
			}

			if(!this.productoSessionBean.getisBusquedaDesdeForeignKeySesionMarcaProducto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//marcaproductoLogic.getMarcaProductoDataAccess().setIsForForeingKeyData(true);

					marcaproductoLogic.getTodosMarcaProductosWithConnection(sFinalQuery,new Pagination());

					this.marcaproductosForeignKey=marcaproductoLogic.getMarcaProductos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaMarcaProducto(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					marcaproductoLogic.getEntityWithConnection(productoSessionBean.getlidMarcaProductoActual());
					this.marcaproductosForeignKey.add(marcaproductoLogic.getMarcaProducto());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosModeloProductosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.modeloproductosForeignKey=new ArrayList<ModeloProducto>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			ModeloProductoLogic modeloproductoLogic=new ModeloProductoLogic();

			//modeloproductoLogic.getModeloProductoDataAccess().setIsForForeingKeyData(true);

			if(this.productoSessionBean==null) {
				this.productoSessionBean=new ProductoSessionBean();
			}

			if(!this.productoSessionBean.getisBusquedaDesdeForeignKeySesionModeloProducto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//modeloproductoLogic.getModeloProductoDataAccess().setIsForForeingKeyData(true);

					modeloproductoLogic.getTodosModeloProductosWithConnection(sFinalQuery,new Pagination());

					this.modeloproductosForeignKey=modeloproductoLogic.getModeloProductos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaModeloProducto(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					modeloproductoLogic.getEntityWithConnection(productoSessionBean.getlidModeloProductoActual());
					this.modeloproductosForeignKey.add(modeloproductoLogic.getModeloProducto());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosMaterialProductosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.materialproductosForeignKey=new ArrayList<MaterialProducto>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			MaterialProductoLogic materialproductoLogic=new MaterialProductoLogic();

			//materialproductoLogic.getMaterialProductoDataAccess().setIsForForeingKeyData(true);

			if(this.productoSessionBean==null) {
				this.productoSessionBean=new ProductoSessionBean();
			}

			if(!this.productoSessionBean.getisBusquedaDesdeForeignKeySesionMaterialProducto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//materialproductoLogic.getMaterialProductoDataAccess().setIsForForeingKeyData(true);

					materialproductoLogic.getTodosMaterialProductosWithConnection(sFinalQuery,new Pagination());

					this.materialproductosForeignKey=materialproductoLogic.getMaterialProductos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaMaterialProducto(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					materialproductoLogic.getEntityWithConnection(productoSessionBean.getlidMaterialProductoActual());
					this.materialproductosForeignKey.add(materialproductoLogic.getMaterialProducto());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosSegmentoProductosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.segmentoproductosForeignKey=new ArrayList<SegmentoProducto>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			SegmentoProductoLogic segmentoproductoLogic=new SegmentoProductoLogic();

			//segmentoproductoLogic.getSegmentoProductoDataAccess().setIsForForeingKeyData(true);

			if(this.productoSessionBean==null) {
				this.productoSessionBean=new ProductoSessionBean();
			}

			if(!this.productoSessionBean.getisBusquedaDesdeForeignKeySesionSegmentoProducto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//segmentoproductoLogic.getSegmentoProductoDataAccess().setIsForForeingKeyData(true);

					segmentoproductoLogic.getTodosSegmentoProductosWithConnection(sFinalQuery,new Pagination());

					this.segmentoproductosForeignKey=segmentoproductoLogic.getSegmentoProductos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaSegmentoProducto(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					segmentoproductoLogic.getEntityWithConnection(productoSessionBean.getlidSegmentoProductoActual());
					this.segmentoproductosForeignKey.add(segmentoproductoLogic.getSegmentoProducto());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTallaProductosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tallaproductosForeignKey=new ArrayList<TallaProducto>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TallaProductoLogic tallaproductoLogic=new TallaProductoLogic();

			//tallaproductoLogic.getTallaProductoDataAccess().setIsForForeingKeyData(true);

			if(this.productoSessionBean==null) {
				this.productoSessionBean=new ProductoSessionBean();
			}

			if(!this.productoSessionBean.getisBusquedaDesdeForeignKeySesionTallaProducto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tallaproductoLogic.getTallaProductoDataAccess().setIsForForeingKeyData(true);

					tallaproductoLogic.getTodosTallaProductosWithConnection(sFinalQuery,new Pagination());

					this.tallaproductosForeignKey=tallaproductoLogic.getTallaProductos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTallaProducto(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tallaproductoLogic.getEntityWithConnection(productoSessionBean.getlidTallaProductoActual());
					this.tallaproductosForeignKey.add(tallaproductoLogic.getTallaProducto());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	
	public void setActualEmpresaForeignKey(Long idEmpresaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(empresaTemp!=null) {

					if(this.producto!=null) {
						this.producto.setEmpresa(empresaTemp);
					}

					if(this.jInternalFrameDetalleFormProducto!=null) {
						this.jInternalFrameDetalleFormProducto.jComboBoxid_empresaProducto.setSelectedItem(empresaTemp);
					}
				} else {
					//jComboBoxid_empresaProducto.setSelectedItem(empresaTemp);
					if(this.jInternalFrameDetalleFormProducto!=null) {
						if(this.jInternalFrameDetalleFormProducto.jComboBoxid_empresaProducto.getItemCount()>0) {
							this.jInternalFrameDetalleFormProducto.jComboBoxid_empresaProducto.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEmpresaForeignKeyDescripcion(Long idEmpresaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}


			sDescripcion=EmpresaConstantesFunciones.getEmpresaDescripcion(empresaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEmpresaForeignKeyGenerico(Long idEmpresaSeleccionado,JComboBox jComboBoxid_empresaProductoGenerico)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(empresaTemp!=null) {
				jComboBoxid_empresaProductoGenerico.setSelectedItem(empresaTemp);
			} else {
				if(jComboBoxid_empresaProductoGenerico!=null && jComboBoxid_empresaProductoGenerico.getItemCount()>0) {
					jComboBoxid_empresaProductoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualSucursalForeignKey(Long idSucursalSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(sucursalTemp!=null) {

					if(this.producto!=null) {
						this.producto.setSucursal(sucursalTemp);
					}

					if(this.jInternalFrameDetalleFormProducto!=null) {
						this.jInternalFrameDetalleFormProducto.jComboBoxid_sucursalProducto.setSelectedItem(sucursalTemp);
					}
				} else {
					//jComboBoxid_sucursalProducto.setSelectedItem(sucursalTemp);
					if(this.jInternalFrameDetalleFormProducto!=null) {
						if(this.jInternalFrameDetalleFormProducto.jComboBoxid_sucursalProducto.getItemCount()>0) {
							this.jInternalFrameDetalleFormProducto.jComboBoxid_sucursalProducto.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualSucursalForeignKeyDescripcion(Long idSucursalSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}


			sDescripcion=SucursalConstantesFunciones.getSucursalDescripcion(sucursalTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualSucursalForeignKeyGenerico(Long idSucursalSeleccionado,JComboBox jComboBoxid_sucursalProductoGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sucursalTemp!=null) {
				jComboBoxid_sucursalProductoGenerico.setSelectedItem(sucursalTemp);
			} else {
				if(jComboBoxid_sucursalProductoGenerico!=null && jComboBoxid_sucursalProductoGenerico.getItemCount()>0) {
					jComboBoxid_sucursalProductoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualLineaForeignKey(Long idLineaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Linea  lineaTemp=null;

			for(Linea lineaAux:lineasForeignKey) {
				if(lineaAux.getId()!=null && lineaAux.getId().equals(idLineaSeleccionado)) {
					lineaTemp=lineaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(lineaTemp!=null) {

					if(this.producto!=null) {
						this.producto.setLinea(lineaTemp);
					}

					if(this.jInternalFrameDetalleFormProducto!=null) {
						this.jInternalFrameDetalleFormProducto.jComboBoxid_lineaProducto.setSelectedItem(lineaTemp);
					}
				} else {
					//jComboBoxid_lineaProducto.setSelectedItem(lineaTemp);
					if(this.jInternalFrameDetalleFormProducto!=null) {
						if(this.jInternalFrameDetalleFormProducto.jComboBoxid_lineaProducto.getItemCount()>0) {
							this.jInternalFrameDetalleFormProducto.jComboBoxid_lineaProducto.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdLinea") || sFormularioTipoBusqueda.equals("Todos")){
					if(lineaTemp!=null && jComboBoxid_lineaFK_IdLineaProducto!=null) {
						jComboBoxid_lineaFK_IdLineaProducto.setSelectedItem(lineaTemp);
					} else {
						if(jComboBoxid_lineaFK_IdLineaProducto!=null) {
							//jComboBoxid_lineaFK_IdLineaProducto.setSelectedItem(lineaTemp);
							if(jComboBoxid_lineaFK_IdLineaProducto.getItemCount()>0) {
								jComboBoxid_lineaFK_IdLineaProducto.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualLineaForeignKeyDescripcion(Long idLineaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Linea  lineaTemp=null;

			for(Linea lineaAux:lineasForeignKey) {
				if(lineaAux.getId()!=null && lineaAux.getId().equals(idLineaSeleccionado)) {
					lineaTemp=lineaAux;
					break;
				}
			}


			sDescripcion=LineaConstantesFunciones.getLineaDescripcion(lineaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualLineaForeignKeyGenerico(Long idLineaSeleccionado,JComboBox jComboBoxid_lineaProductoGenerico)throws Exception
	{
		try
		{
			Linea  lineaTemp=null;

			for(Linea lineaAux:lineasForeignKey) {
				if(lineaAux.getId()!=null && lineaAux.getId().equals(idLineaSeleccionado)) {
					lineaTemp=lineaAux;
					break;
				}
			}

			if(lineaTemp!=null) {
				jComboBoxid_lineaProductoGenerico.setSelectedItem(lineaTemp);
			} else {
				if(jComboBoxid_lineaProductoGenerico!=null && jComboBoxid_lineaProductoGenerico.getItemCount()>0) {
					jComboBoxid_lineaProductoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualLineaGrupoForeignKey(Long idLineaGrupoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Linea  lineagrupoTemp=null;

			for(Linea lineagrupoAux:lineagruposForeignKey) {
				if(lineagrupoAux.getId()!=null && lineagrupoAux.getId().equals(idLineaGrupoSeleccionado)) {
					lineagrupoTemp=lineagrupoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(lineagrupoTemp!=null) {

					if(this.producto!=null) {
						this.producto.setLineaGrupo(lineagrupoTemp);
					}

					if(this.jInternalFrameDetalleFormProducto!=null) {
						this.jInternalFrameDetalleFormProducto.jComboBoxid_linea_grupoProducto.setSelectedItem(lineagrupoTemp);
					}
				} else {
					//jComboBoxid_linea_grupoProducto.setSelectedItem(lineagrupoTemp);
					if(this.jInternalFrameDetalleFormProducto!=null) {
						if(this.jInternalFrameDetalleFormProducto.jComboBoxid_linea_grupoProducto.getItemCount()>0) {
							this.jInternalFrameDetalleFormProducto.jComboBoxid_linea_grupoProducto.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualLineaGrupoForeignKeyDescripcion(Long idLineaGrupoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Linea  lineagrupoTemp=null;

			for(Linea lineagrupoAux:lineagruposForeignKey) {
				if(lineagrupoAux.getId()!=null && lineagrupoAux.getId().equals(idLineaGrupoSeleccionado)) {
					lineagrupoTemp=lineagrupoAux;
					break;
				}
			}


			sDescripcion=LineaConstantesFunciones.getLineaDescripcion(lineagrupoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualLineaGrupoForeignKeyGenerico(Long idLineaGrupoSeleccionado,JComboBox jComboBoxid_linea_grupoProductoGenerico)throws Exception
	{
		try
		{
			Linea  lineagrupoTemp=null;

			for(Linea lineagrupoAux:lineagruposForeignKey) {
				if(lineagrupoAux.getId()!=null && lineagrupoAux.getId().equals(idLineaGrupoSeleccionado)) {
					lineagrupoTemp=lineagrupoAux;
					break;
				}
			}

			if(lineagrupoTemp!=null) {
				jComboBoxid_linea_grupoProductoGenerico.setSelectedItem(lineagrupoTemp);
			} else {
				if(jComboBoxid_linea_grupoProductoGenerico!=null && jComboBoxid_linea_grupoProductoGenerico.getItemCount()>0) {
					jComboBoxid_linea_grupoProductoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualLineaCategoriaForeignKey(Long idLineaCategoriaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Linea  lineacategoriaTemp=null;

			for(Linea lineacategoriaAux:lineacategoriasForeignKey) {
				if(lineacategoriaAux.getId()!=null && lineacategoriaAux.getId().equals(idLineaCategoriaSeleccionado)) {
					lineacategoriaTemp=lineacategoriaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(lineacategoriaTemp!=null) {

					if(this.producto!=null) {
						this.producto.setLineaCategoria(lineacategoriaTemp);
					}

					if(this.jInternalFrameDetalleFormProducto!=null) {
						this.jInternalFrameDetalleFormProducto.jComboBoxid_linea_categoriaProducto.setSelectedItem(lineacategoriaTemp);
					}
				} else {
					//jComboBoxid_linea_categoriaProducto.setSelectedItem(lineacategoriaTemp);
					if(this.jInternalFrameDetalleFormProducto!=null) {
						if(this.jInternalFrameDetalleFormProducto.jComboBoxid_linea_categoriaProducto.getItemCount()>0) {
							this.jInternalFrameDetalleFormProducto.jComboBoxid_linea_categoriaProducto.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualLineaCategoriaForeignKeyDescripcion(Long idLineaCategoriaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Linea  lineacategoriaTemp=null;

			for(Linea lineacategoriaAux:lineacategoriasForeignKey) {
				if(lineacategoriaAux.getId()!=null && lineacategoriaAux.getId().equals(idLineaCategoriaSeleccionado)) {
					lineacategoriaTemp=lineacategoriaAux;
					break;
				}
			}


			sDescripcion=LineaConstantesFunciones.getLineaDescripcion(lineacategoriaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualLineaCategoriaForeignKeyGenerico(Long idLineaCategoriaSeleccionado,JComboBox jComboBoxid_linea_categoriaProductoGenerico)throws Exception
	{
		try
		{
			Linea  lineacategoriaTemp=null;

			for(Linea lineacategoriaAux:lineacategoriasForeignKey) {
				if(lineacategoriaAux.getId()!=null && lineacategoriaAux.getId().equals(idLineaCategoriaSeleccionado)) {
					lineacategoriaTemp=lineacategoriaAux;
					break;
				}
			}

			if(lineacategoriaTemp!=null) {
				jComboBoxid_linea_categoriaProductoGenerico.setSelectedItem(lineacategoriaTemp);
			} else {
				if(jComboBoxid_linea_categoriaProductoGenerico!=null && jComboBoxid_linea_categoriaProductoGenerico.getItemCount()>0) {
					jComboBoxid_linea_categoriaProductoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualLineaMarcaForeignKey(Long idLineaMarcaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Linea  lineamarcaTemp=null;

			for(Linea lineamarcaAux:lineamarcasForeignKey) {
				if(lineamarcaAux.getId()!=null && lineamarcaAux.getId().equals(idLineaMarcaSeleccionado)) {
					lineamarcaTemp=lineamarcaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(lineamarcaTemp!=null) {

					if(this.producto!=null) {
						this.producto.setLineaMarca(lineamarcaTemp);
					}

					if(this.jInternalFrameDetalleFormProducto!=null) {
						this.jInternalFrameDetalleFormProducto.jComboBoxid_linea_marcaProducto.setSelectedItem(lineamarcaTemp);
					}
				} else {
					//jComboBoxid_linea_marcaProducto.setSelectedItem(lineamarcaTemp);
					if(this.jInternalFrameDetalleFormProducto!=null) {
						if(this.jInternalFrameDetalleFormProducto.jComboBoxid_linea_marcaProducto.getItemCount()>0) {
							this.jInternalFrameDetalleFormProducto.jComboBoxid_linea_marcaProducto.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualLineaMarcaForeignKeyDescripcion(Long idLineaMarcaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Linea  lineamarcaTemp=null;

			for(Linea lineamarcaAux:lineamarcasForeignKey) {
				if(lineamarcaAux.getId()!=null && lineamarcaAux.getId().equals(idLineaMarcaSeleccionado)) {
					lineamarcaTemp=lineamarcaAux;
					break;
				}
			}


			sDescripcion=LineaConstantesFunciones.getLineaDescripcion(lineamarcaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualLineaMarcaForeignKeyGenerico(Long idLineaMarcaSeleccionado,JComboBox jComboBoxid_linea_marcaProductoGenerico)throws Exception
	{
		try
		{
			Linea  lineamarcaTemp=null;

			for(Linea lineamarcaAux:lineamarcasForeignKey) {
				if(lineamarcaAux.getId()!=null && lineamarcaAux.getId().equals(idLineaMarcaSeleccionado)) {
					lineamarcaTemp=lineamarcaAux;
					break;
				}
			}

			if(lineamarcaTemp!=null) {
				jComboBoxid_linea_marcaProductoGenerico.setSelectedItem(lineamarcaTemp);
			} else {
				if(jComboBoxid_linea_marcaProductoGenerico!=null && jComboBoxid_linea_marcaProductoGenerico.getItemCount()>0) {
					jComboBoxid_linea_marcaProductoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoProductoServicioForeignKey(Long idTipoProductoServicioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoProductoServicio  tipoproductoservicioTemp=null;

			for(TipoProductoServicio tipoproductoservicioAux:tipoproductoserviciosForeignKey) {
				if(tipoproductoservicioAux.getId()!=null && tipoproductoservicioAux.getId().equals(idTipoProductoServicioSeleccionado)) {
					tipoproductoservicioTemp=tipoproductoservicioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipoproductoservicioTemp!=null) {

					if(this.producto!=null) {
						this.producto.setTipoProductoServicio(tipoproductoservicioTemp);
					}

					if(this.jInternalFrameDetalleFormProducto!=null) {
						this.jInternalFrameDetalleFormProducto.jComboBoxid_tipo_producto_servicioProducto.setSelectedItem(tipoproductoservicioTemp);
					}
				} else {
					//jComboBoxid_tipo_producto_servicioProducto.setSelectedItem(tipoproductoservicioTemp);
					if(this.jInternalFrameDetalleFormProducto!=null) {
						if(this.jInternalFrameDetalleFormProducto.jComboBoxid_tipo_producto_servicioProducto.getItemCount()>0) {
							this.jInternalFrameDetalleFormProducto.jComboBoxid_tipo_producto_servicioProducto.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoProductoServicio") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipoproductoservicioTemp!=null && jComboBoxid_tipo_producto_servicioFK_IdTipoProductoServicioProducto!=null) {
						jComboBoxid_tipo_producto_servicioFK_IdTipoProductoServicioProducto.setSelectedItem(tipoproductoservicioTemp);
					} else {
						if(jComboBoxid_tipo_producto_servicioFK_IdTipoProductoServicioProducto!=null) {
							//jComboBoxid_tipo_producto_servicioFK_IdTipoProductoServicioProducto.setSelectedItem(tipoproductoservicioTemp);
							if(jComboBoxid_tipo_producto_servicioFK_IdTipoProductoServicioProducto.getItemCount()>0) {
								jComboBoxid_tipo_producto_servicioFK_IdTipoProductoServicioProducto.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoProductoServicioForeignKeyDescripcion(Long idTipoProductoServicioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoProductoServicio  tipoproductoservicioTemp=null;

			for(TipoProductoServicio tipoproductoservicioAux:tipoproductoserviciosForeignKey) {
				if(tipoproductoservicioAux.getId()!=null && tipoproductoservicioAux.getId().equals(idTipoProductoServicioSeleccionado)) {
					tipoproductoservicioTemp=tipoproductoservicioAux;
					break;
				}
			}


			sDescripcion=TipoProductoServicioConstantesFunciones.getTipoProductoServicioDescripcion(tipoproductoservicioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoProductoServicioForeignKeyGenerico(Long idTipoProductoServicioSeleccionado,JComboBox jComboBoxid_tipo_producto_servicioProductoGenerico)throws Exception
	{
		try
		{
			TipoProductoServicio  tipoproductoservicioTemp=null;

			for(TipoProductoServicio tipoproductoservicioAux:tipoproductoserviciosForeignKey) {
				if(tipoproductoservicioAux.getId()!=null && tipoproductoservicioAux.getId().equals(idTipoProductoServicioSeleccionado)) {
					tipoproductoservicioTemp=tipoproductoservicioAux;
					break;
				}
			}

			if(tipoproductoservicioTemp!=null) {
				jComboBoxid_tipo_producto_servicioProductoGenerico.setSelectedItem(tipoproductoservicioTemp);
			} else {
				if(jComboBoxid_tipo_producto_servicioProductoGenerico!=null && jComboBoxid_tipo_producto_servicioProductoGenerico.getItemCount()>0) {
					jComboBoxid_tipo_producto_servicioProductoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoProductoServicioInvenForeignKey(Long idTipoProductoServicioInvenSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoProductoServicioInven  tipoproductoservicioinvenTemp=null;

			for(TipoProductoServicioInven tipoproductoservicioinvenAux:tipoproductoservicioinvensForeignKey) {
				if(tipoproductoservicioinvenAux.getId()!=null && tipoproductoservicioinvenAux.getId().equals(idTipoProductoServicioInvenSeleccionado)) {
					tipoproductoservicioinvenTemp=tipoproductoservicioinvenAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipoproductoservicioinvenTemp!=null) {

					if(this.producto!=null) {
						this.producto.setTipoProductoServicioInven(tipoproductoservicioinvenTemp);
					}

					if(this.jInternalFrameDetalleFormProducto!=null) {
						this.jInternalFrameDetalleFormProducto.jComboBoxid_tipo_producto_servicio_invenProducto.setSelectedItem(tipoproductoservicioinvenTemp);
					}
				} else {
					//jComboBoxid_tipo_producto_servicio_invenProducto.setSelectedItem(tipoproductoservicioinvenTemp);
					if(this.jInternalFrameDetalleFormProducto!=null) {
						if(this.jInternalFrameDetalleFormProducto.jComboBoxid_tipo_producto_servicio_invenProducto.getItemCount()>0) {
							this.jInternalFrameDetalleFormProducto.jComboBoxid_tipo_producto_servicio_invenProducto.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoProductoServicioInven") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipoproductoservicioinvenTemp!=null && jComboBoxid_tipo_producto_servicio_invenFK_IdTipoProductoServicioInvenProducto!=null) {
						jComboBoxid_tipo_producto_servicio_invenFK_IdTipoProductoServicioInvenProducto.setSelectedItem(tipoproductoservicioinvenTemp);
					} else {
						if(jComboBoxid_tipo_producto_servicio_invenFK_IdTipoProductoServicioInvenProducto!=null) {
							//jComboBoxid_tipo_producto_servicio_invenFK_IdTipoProductoServicioInvenProducto.setSelectedItem(tipoproductoservicioinvenTemp);
							if(jComboBoxid_tipo_producto_servicio_invenFK_IdTipoProductoServicioInvenProducto.getItemCount()>0) {
								jComboBoxid_tipo_producto_servicio_invenFK_IdTipoProductoServicioInvenProducto.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoProductoServicioInvenForeignKeyDescripcion(Long idTipoProductoServicioInvenSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoProductoServicioInven  tipoproductoservicioinvenTemp=null;

			for(TipoProductoServicioInven tipoproductoservicioinvenAux:tipoproductoservicioinvensForeignKey) {
				if(tipoproductoservicioinvenAux.getId()!=null && tipoproductoservicioinvenAux.getId().equals(idTipoProductoServicioInvenSeleccionado)) {
					tipoproductoservicioinvenTemp=tipoproductoservicioinvenAux;
					break;
				}
			}


			sDescripcion=TipoProductoServicioInvenConstantesFunciones.getTipoProductoServicioInvenDescripcion(tipoproductoservicioinvenTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoProductoServicioInvenForeignKeyGenerico(Long idTipoProductoServicioInvenSeleccionado,JComboBox jComboBoxid_tipo_producto_servicio_invenProductoGenerico)throws Exception
	{
		try
		{
			TipoProductoServicioInven  tipoproductoservicioinvenTemp=null;

			for(TipoProductoServicioInven tipoproductoservicioinvenAux:tipoproductoservicioinvensForeignKey) {
				if(tipoproductoservicioinvenAux.getId()!=null && tipoproductoservicioinvenAux.getId().equals(idTipoProductoServicioInvenSeleccionado)) {
					tipoproductoservicioinvenTemp=tipoproductoservicioinvenAux;
					break;
				}
			}

			if(tipoproductoservicioinvenTemp!=null) {
				jComboBoxid_tipo_producto_servicio_invenProductoGenerico.setSelectedItem(tipoproductoservicioinvenTemp);
			} else {
				if(jComboBoxid_tipo_producto_servicio_invenProductoGenerico!=null && jComboBoxid_tipo_producto_servicio_invenProductoGenerico.getItemCount()>0) {
					jComboBoxid_tipo_producto_servicio_invenProductoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoCosteoForeignKey(Long idTipoCosteoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoCosteo  tipocosteoTemp=null;

			for(TipoCosteo tipocosteoAux:tipocosteosForeignKey) {
				if(tipocosteoAux.getId()!=null && tipocosteoAux.getId().equals(idTipoCosteoSeleccionado)) {
					tipocosteoTemp=tipocosteoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipocosteoTemp!=null) {

					if(this.producto!=null) {
						this.producto.setTipoCosteo(tipocosteoTemp);
					}

					if(this.jInternalFrameDetalleFormProducto!=null) {
						this.jInternalFrameDetalleFormProducto.jComboBoxid_tipo_costeoProducto.setSelectedItem(tipocosteoTemp);
					}
				} else {
					//jComboBoxid_tipo_costeoProducto.setSelectedItem(tipocosteoTemp);
					if(this.jInternalFrameDetalleFormProducto!=null) {
						if(this.jInternalFrameDetalleFormProducto.jComboBoxid_tipo_costeoProducto.getItemCount()>0) {
							this.jInternalFrameDetalleFormProducto.jComboBoxid_tipo_costeoProducto.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoCosteoForeignKeyDescripcion(Long idTipoCosteoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoCosteo  tipocosteoTemp=null;

			for(TipoCosteo tipocosteoAux:tipocosteosForeignKey) {
				if(tipocosteoAux.getId()!=null && tipocosteoAux.getId().equals(idTipoCosteoSeleccionado)) {
					tipocosteoTemp=tipocosteoAux;
					break;
				}
			}


			sDescripcion=TipoCosteoConstantesFunciones.getTipoCosteoDescripcion(tipocosteoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoCosteoForeignKeyGenerico(Long idTipoCosteoSeleccionado,JComboBox jComboBoxid_tipo_costeoProductoGenerico)throws Exception
	{
		try
		{
			TipoCosteo  tipocosteoTemp=null;

			for(TipoCosteo tipocosteoAux:tipocosteosForeignKey) {
				if(tipocosteoAux.getId()!=null && tipocosteoAux.getId().equals(idTipoCosteoSeleccionado)) {
					tipocosteoTemp=tipocosteoAux;
					break;
				}
			}

			if(tipocosteoTemp!=null) {
				jComboBoxid_tipo_costeoProductoGenerico.setSelectedItem(tipocosteoTemp);
			} else {
				if(jComboBoxid_tipo_costeoProductoGenerico!=null && jComboBoxid_tipo_costeoProductoGenerico.getItemCount()>0) {
					jComboBoxid_tipo_costeoProductoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualUnidadForeignKey(Long idUnidadSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Unidad  unidadTemp=null;

			for(Unidad unidadAux:unidadsForeignKey) {
				if(unidadAux.getId()!=null && unidadAux.getId().equals(idUnidadSeleccionado)) {
					unidadTemp=unidadAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(unidadTemp!=null) {

					if(this.producto!=null) {
						this.producto.setUnidad(unidadTemp);
					}

					if(this.jInternalFrameDetalleFormProducto!=null) {
						this.jInternalFrameDetalleFormProducto.jComboBoxid_unidadProducto.setSelectedItem(unidadTemp);
					}
				} else {
					//jComboBoxid_unidadProducto.setSelectedItem(unidadTemp);
					if(this.jInternalFrameDetalleFormProducto!=null) {
						if(this.jInternalFrameDetalleFormProducto.jComboBoxid_unidadProducto.getItemCount()>0) {
							this.jInternalFrameDetalleFormProducto.jComboBoxid_unidadProducto.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualUnidadForeignKeyDescripcion(Long idUnidadSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Unidad  unidadTemp=null;

			for(Unidad unidadAux:unidadsForeignKey) {
				if(unidadAux.getId()!=null && unidadAux.getId().equals(idUnidadSeleccionado)) {
					unidadTemp=unidadAux;
					break;
				}
			}


			sDescripcion=UnidadConstantesFunciones.getUnidadDescripcion(unidadTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualUnidadForeignKeyGenerico(Long idUnidadSeleccionado,JComboBox jComboBoxid_unidadProductoGenerico)throws Exception
	{
		try
		{
			Unidad  unidadTemp=null;

			for(Unidad unidadAux:unidadsForeignKey) {
				if(unidadAux.getId()!=null && unidadAux.getId().equals(idUnidadSeleccionado)) {
					unidadTemp=unidadAux;
					break;
				}
			}

			if(unidadTemp!=null) {
				jComboBoxid_unidadProductoGenerico.setSelectedItem(unidadTemp);
			} else {
				if(jComboBoxid_unidadProductoGenerico!=null && jComboBoxid_unidadProductoGenerico.getItemCount()>0) {
					jComboBoxid_unidadProductoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualUnidadPesoForeignKey(Long idUnidadPesoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Unidad  unidadpesoTemp=null;

			for(Unidad unidadpesoAux:unidadpesosForeignKey) {
				if(unidadpesoAux.getId()!=null && unidadpesoAux.getId().equals(idUnidadPesoSeleccionado)) {
					unidadpesoTemp=unidadpesoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(unidadpesoTemp!=null) {

					if(this.producto!=null) {
						this.producto.setUnidadPeso(unidadpesoTemp);
					}

					if(this.jInternalFrameDetalleFormProducto!=null) {
						this.jInternalFrameDetalleFormProducto.jComboBoxid_unidad_pesoProducto.setSelectedItem(unidadpesoTemp);
					}
				} else {
					//jComboBoxid_unidad_pesoProducto.setSelectedItem(unidadpesoTemp);
					if(this.jInternalFrameDetalleFormProducto!=null) {
						if(this.jInternalFrameDetalleFormProducto.jComboBoxid_unidad_pesoProducto.getItemCount()>0) {
							this.jInternalFrameDetalleFormProducto.jComboBoxid_unidad_pesoProducto.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualUnidadPesoForeignKeyDescripcion(Long idUnidadPesoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Unidad  unidadpesoTemp=null;

			for(Unidad unidadpesoAux:unidadpesosForeignKey) {
				if(unidadpesoAux.getId()!=null && unidadpesoAux.getId().equals(idUnidadPesoSeleccionado)) {
					unidadpesoTemp=unidadpesoAux;
					break;
				}
			}


			sDescripcion=UnidadConstantesFunciones.getUnidadDescripcion(unidadpesoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualUnidadPesoForeignKeyGenerico(Long idUnidadPesoSeleccionado,JComboBox jComboBoxid_unidad_pesoProductoGenerico)throws Exception
	{
		try
		{
			Unidad  unidadpesoTemp=null;

			for(Unidad unidadpesoAux:unidadpesosForeignKey) {
				if(unidadpesoAux.getId()!=null && unidadpesoAux.getId().equals(idUnidadPesoSeleccionado)) {
					unidadpesoTemp=unidadpesoAux;
					break;
				}
			}

			if(unidadpesoTemp!=null) {
				jComboBoxid_unidad_pesoProductoGenerico.setSelectedItem(unidadpesoTemp);
			} else {
				if(jComboBoxid_unidad_pesoProductoGenerico!=null && jComboBoxid_unidad_pesoProductoGenerico.getItemCount()>0) {
					jComboBoxid_unidad_pesoProductoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualArancelForeignKey(Long idArancelSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Arancel  arancelTemp=null;

			for(Arancel arancelAux:arancelsForeignKey) {
				if(arancelAux.getId()!=null && arancelAux.getId().equals(idArancelSeleccionado)) {
					arancelTemp=arancelAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(arancelTemp!=null) {

					if(this.producto!=null) {
						this.producto.setArancel(arancelTemp);
					}

					if(this.jInternalFrameDetalleFormProducto!=null) {
						this.jInternalFrameDetalleFormProducto.jComboBoxid_arancelProducto.setSelectedItem(arancelTemp);
					}
				} else {
					//jComboBoxid_arancelProducto.setSelectedItem(arancelTemp);
					if(this.jInternalFrameDetalleFormProducto!=null) {
						if(this.jInternalFrameDetalleFormProducto.jComboBoxid_arancelProducto.getItemCount()>0) {
							this.jInternalFrameDetalleFormProducto.jComboBoxid_arancelProducto.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualArancelForeignKeyDescripcion(Long idArancelSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Arancel  arancelTemp=null;

			for(Arancel arancelAux:arancelsForeignKey) {
				if(arancelAux.getId()!=null && arancelAux.getId().equals(idArancelSeleccionado)) {
					arancelTemp=arancelAux;
					break;
				}
			}


			sDescripcion=ArancelConstantesFunciones.getArancelDescripcion(arancelTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualArancelForeignKeyGenerico(Long idArancelSeleccionado,JComboBox jComboBoxid_arancelProductoGenerico)throws Exception
	{
		try
		{
			Arancel  arancelTemp=null;

			for(Arancel arancelAux:arancelsForeignKey) {
				if(arancelAux.getId()!=null && arancelAux.getId().equals(idArancelSeleccionado)) {
					arancelTemp=arancelAux;
					break;
				}
			}

			if(arancelTemp!=null) {
				jComboBoxid_arancelProductoGenerico.setSelectedItem(arancelTemp);
			} else {
				if(jComboBoxid_arancelProductoGenerico!=null && jComboBoxid_arancelProductoGenerico.getItemCount()>0) {
					jComboBoxid_arancelProductoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualClienteForeignKey(Long idClienteSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Cliente  clienteTemp=null;

			for(Cliente clienteAux:clientesForeignKey) {
				if(clienteAux.getId()!=null && clienteAux.getId().equals(idClienteSeleccionado)) {
					clienteTemp=clienteAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(clienteTemp!=null) {

					if(this.producto!=null) {
						this.producto.setCliente(clienteTemp);
					}

					if(this.jInternalFrameDetalleFormProducto!=null) {
						this.jInternalFrameDetalleFormProducto.jComboBoxid_clienteProducto.setSelectedItem(clienteTemp);
					}
				} else {
					//jComboBoxid_clienteProducto.setSelectedItem(clienteTemp);
					if(this.jInternalFrameDetalleFormProducto!=null) {
						if(this.jInternalFrameDetalleFormProducto.jComboBoxid_clienteProducto.getItemCount()>0) {
							this.jInternalFrameDetalleFormProducto.jComboBoxid_clienteProducto.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdCliente") || sFormularioTipoBusqueda.equals("Todos")){
					if(clienteTemp!=null && jComboBoxid_clienteFK_IdClienteProducto!=null) {
						jComboBoxid_clienteFK_IdClienteProducto.setSelectedItem(clienteTemp);
					} else {
						if(jComboBoxid_clienteFK_IdClienteProducto!=null) {
							//jComboBoxid_clienteFK_IdClienteProducto.setSelectedItem(clienteTemp);
							if(jComboBoxid_clienteFK_IdClienteProducto.getItemCount()>0) {
								jComboBoxid_clienteFK_IdClienteProducto.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualClienteForeignKeyDescripcion(Long idClienteSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Cliente  clienteTemp=null;

			for(Cliente clienteAux:clientesForeignKey) {
				if(clienteAux.getId()!=null && clienteAux.getId().equals(idClienteSeleccionado)) {
					clienteTemp=clienteAux;
					break;
				}
			}


			sDescripcion=ClienteConstantesFunciones.getClienteDescripcion(clienteTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualClienteForeignKeyGenerico(Long idClienteSeleccionado,JComboBox jComboBoxid_clienteProductoGenerico)throws Exception
	{
		try
		{
			Cliente  clienteTemp=null;

			for(Cliente clienteAux:clientesForeignKey) {
				if(clienteAux.getId()!=null && clienteAux.getId().equals(idClienteSeleccionado)) {
					clienteTemp=clienteAux;
					break;
				}
			}

			if(clienteTemp!=null) {
				jComboBoxid_clienteProductoGenerico.setSelectedItem(clienteTemp);
			} else {
				if(jComboBoxid_clienteProductoGenerico!=null && jComboBoxid_clienteProductoGenerico.getItemCount()>0) {
					jComboBoxid_clienteProductoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualClienteProveedorDefectoForeignKey(Long idClienteProveedorDefectoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Cliente  clienteproveedordefectoTemp=null;

			for(Cliente clienteproveedordefectoAux:clienteproveedordefectosForeignKey) {
				if(clienteproveedordefectoAux.getId()!=null && clienteproveedordefectoAux.getId().equals(idClienteProveedorDefectoSeleccionado)) {
					clienteproveedordefectoTemp=clienteproveedordefectoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(clienteproveedordefectoTemp!=null) {

					if(this.producto!=null) {
						this.producto.setClienteProveedorDefecto(clienteproveedordefectoTemp);
					}

					if(this.jInternalFrameDetalleFormProducto!=null) {
						this.jInternalFrameDetalleFormProducto.jComboBoxid_cliente_proveedor_defectoProducto.setSelectedItem(clienteproveedordefectoTemp);
					}
				} else {
					//jComboBoxid_cliente_proveedor_defectoProducto.setSelectedItem(clienteproveedordefectoTemp);
					if(this.jInternalFrameDetalleFormProducto!=null) {
						if(this.jInternalFrameDetalleFormProducto.jComboBoxid_cliente_proveedor_defectoProducto.getItemCount()>0) {
							this.jInternalFrameDetalleFormProducto.jComboBoxid_cliente_proveedor_defectoProducto.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdClienteProveedorDefecto") || sFormularioTipoBusqueda.equals("Todos")){
					if(clienteproveedordefectoTemp!=null && jComboBoxid_cliente_proveedor_defectoFK_IdClienteProveedorDefectoProducto!=null) {
						jComboBoxid_cliente_proveedor_defectoFK_IdClienteProveedorDefectoProducto.setSelectedItem(clienteproveedordefectoTemp);
					} else {
						if(jComboBoxid_cliente_proveedor_defectoFK_IdClienteProveedorDefectoProducto!=null) {
							//jComboBoxid_cliente_proveedor_defectoFK_IdClienteProveedorDefectoProducto.setSelectedItem(clienteproveedordefectoTemp);
							if(jComboBoxid_cliente_proveedor_defectoFK_IdClienteProveedorDefectoProducto.getItemCount()>0) {
								jComboBoxid_cliente_proveedor_defectoFK_IdClienteProveedorDefectoProducto.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualClienteProveedorDefectoForeignKeyDescripcion(Long idClienteProveedorDefectoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Cliente  clienteproveedordefectoTemp=null;

			for(Cliente clienteproveedordefectoAux:clienteproveedordefectosForeignKey) {
				if(clienteproveedordefectoAux.getId()!=null && clienteproveedordefectoAux.getId().equals(idClienteProveedorDefectoSeleccionado)) {
					clienteproveedordefectoTemp=clienteproveedordefectoAux;
					break;
				}
			}


			sDescripcion=ClienteConstantesFunciones.getClienteDescripcion(clienteproveedordefectoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualClienteProveedorDefectoForeignKeyGenerico(Long idClienteProveedorDefectoSeleccionado,JComboBox jComboBoxid_cliente_proveedor_defectoProductoGenerico)throws Exception
	{
		try
		{
			Cliente  clienteproveedordefectoTemp=null;

			for(Cliente clienteproveedordefectoAux:clienteproveedordefectosForeignKey) {
				if(clienteproveedordefectoAux.getId()!=null && clienteproveedordefectoAux.getId().equals(idClienteProveedorDefectoSeleccionado)) {
					clienteproveedordefectoTemp=clienteproveedordefectoAux;
					break;
				}
			}

			if(clienteproveedordefectoTemp!=null) {
				jComboBoxid_cliente_proveedor_defectoProductoGenerico.setSelectedItem(clienteproveedordefectoTemp);
			} else {
				if(jComboBoxid_cliente_proveedor_defectoProductoGenerico!=null && jComboBoxid_cliente_proveedor_defectoProductoGenerico.getItemCount()>0) {
					jComboBoxid_cliente_proveedor_defectoProductoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoProductoForeignKey(Long idTipoProductoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoProducto  tipoproductoTemp=null;

			for(TipoProducto tipoproductoAux:tipoproductosForeignKey) {
				if(tipoproductoAux.getId()!=null && tipoproductoAux.getId().equals(idTipoProductoSeleccionado)) {
					tipoproductoTemp=tipoproductoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipoproductoTemp!=null) {

					if(this.producto!=null) {
						this.producto.setTipoProducto(tipoproductoTemp);
					}

					if(this.jInternalFrameDetalleFormProducto!=null) {
						this.jInternalFrameDetalleFormProducto.jComboBoxid_tipo_productoProducto.setSelectedItem(tipoproductoTemp);
					}
				} else {
					//jComboBoxid_tipo_productoProducto.setSelectedItem(tipoproductoTemp);
					if(this.jInternalFrameDetalleFormProducto!=null) {
						if(this.jInternalFrameDetalleFormProducto.jComboBoxid_tipo_productoProducto.getItemCount()>0) {
							this.jInternalFrameDetalleFormProducto.jComboBoxid_tipo_productoProducto.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoProducto") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipoproductoTemp!=null && jComboBoxid_tipo_productoFK_IdTipoProductoProducto!=null) {
						jComboBoxid_tipo_productoFK_IdTipoProductoProducto.setSelectedItem(tipoproductoTemp);
					} else {
						if(jComboBoxid_tipo_productoFK_IdTipoProductoProducto!=null) {
							//jComboBoxid_tipo_productoFK_IdTipoProductoProducto.setSelectedItem(tipoproductoTemp);
							if(jComboBoxid_tipo_productoFK_IdTipoProductoProducto.getItemCount()>0) {
								jComboBoxid_tipo_productoFK_IdTipoProductoProducto.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoProductoForeignKeyDescripcion(Long idTipoProductoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoProducto  tipoproductoTemp=null;

			for(TipoProducto tipoproductoAux:tipoproductosForeignKey) {
				if(tipoproductoAux.getId()!=null && tipoproductoAux.getId().equals(idTipoProductoSeleccionado)) {
					tipoproductoTemp=tipoproductoAux;
					break;
				}
			}


			sDescripcion=TipoProductoConstantesFunciones.getTipoProductoDescripcion(tipoproductoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoProductoForeignKeyGenerico(Long idTipoProductoSeleccionado,JComboBox jComboBoxid_tipo_productoProductoGenerico)throws Exception
	{
		try
		{
			TipoProducto  tipoproductoTemp=null;

			for(TipoProducto tipoproductoAux:tipoproductosForeignKey) {
				if(tipoproductoAux.getId()!=null && tipoproductoAux.getId().equals(idTipoProductoSeleccionado)) {
					tipoproductoTemp=tipoproductoAux;
					break;
				}
			}

			if(tipoproductoTemp!=null) {
				jComboBoxid_tipo_productoProductoGenerico.setSelectedItem(tipoproductoTemp);
			} else {
				if(jComboBoxid_tipo_productoProductoGenerico!=null && jComboBoxid_tipo_productoProductoGenerico.getItemCount()>0) {
					jComboBoxid_tipo_productoProductoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualColorProductoForeignKey(Long idColorProductoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			ColorProducto  colorproductoTemp=null;

			for(ColorProducto colorproductoAux:colorproductosForeignKey) {
				if(colorproductoAux.getId()!=null && colorproductoAux.getId().equals(idColorProductoSeleccionado)) {
					colorproductoTemp=colorproductoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(colorproductoTemp!=null) {

					if(this.producto!=null) {
						this.producto.setColorProducto(colorproductoTemp);
					}

					if(this.jInternalFrameDetalleFormProducto!=null) {
						this.jInternalFrameDetalleFormProducto.jComboBoxid_color_productoProducto.setSelectedItem(colorproductoTemp);
					}
				} else {
					//jComboBoxid_color_productoProducto.setSelectedItem(colorproductoTemp);
					if(this.jInternalFrameDetalleFormProducto!=null) {
						if(this.jInternalFrameDetalleFormProducto.jComboBoxid_color_productoProducto.getItemCount()>0) {
							this.jInternalFrameDetalleFormProducto.jComboBoxid_color_productoProducto.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualColorProductoForeignKeyDescripcion(Long idColorProductoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			ColorProducto  colorproductoTemp=null;

			for(ColorProducto colorproductoAux:colorproductosForeignKey) {
				if(colorproductoAux.getId()!=null && colorproductoAux.getId().equals(idColorProductoSeleccionado)) {
					colorproductoTemp=colorproductoAux;
					break;
				}
			}


			sDescripcion=ColorProductoConstantesFunciones.getColorProductoDescripcion(colorproductoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualColorProductoForeignKeyGenerico(Long idColorProductoSeleccionado,JComboBox jComboBoxid_color_productoProductoGenerico)throws Exception
	{
		try
		{
			ColorProducto  colorproductoTemp=null;

			for(ColorProducto colorproductoAux:colorproductosForeignKey) {
				if(colorproductoAux.getId()!=null && colorproductoAux.getId().equals(idColorProductoSeleccionado)) {
					colorproductoTemp=colorproductoAux;
					break;
				}
			}

			if(colorproductoTemp!=null) {
				jComboBoxid_color_productoProductoGenerico.setSelectedItem(colorproductoTemp);
			} else {
				if(jComboBoxid_color_productoProductoGenerico!=null && jComboBoxid_color_productoProductoGenerico.getItemCount()>0) {
					jComboBoxid_color_productoProductoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualClaseProductoForeignKey(Long idClaseProductoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			ClaseProducto  claseproductoTemp=null;

			for(ClaseProducto claseproductoAux:claseproductosForeignKey) {
				if(claseproductoAux.getId()!=null && claseproductoAux.getId().equals(idClaseProductoSeleccionado)) {
					claseproductoTemp=claseproductoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(claseproductoTemp!=null) {

					if(this.producto!=null) {
						this.producto.setClaseProducto(claseproductoTemp);
					}

					if(this.jInternalFrameDetalleFormProducto!=null) {
						this.jInternalFrameDetalleFormProducto.jComboBoxid_clase_productoProducto.setSelectedItem(claseproductoTemp);
					}
				} else {
					//jComboBoxid_clase_productoProducto.setSelectedItem(claseproductoTemp);
					if(this.jInternalFrameDetalleFormProducto!=null) {
						if(this.jInternalFrameDetalleFormProducto.jComboBoxid_clase_productoProducto.getItemCount()>0) {
							this.jInternalFrameDetalleFormProducto.jComboBoxid_clase_productoProducto.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdClaseProducto") || sFormularioTipoBusqueda.equals("Todos")){
					if(claseproductoTemp!=null && jComboBoxid_clase_productoFK_IdClaseProductoProducto!=null) {
						jComboBoxid_clase_productoFK_IdClaseProductoProducto.setSelectedItem(claseproductoTemp);
					} else {
						if(jComboBoxid_clase_productoFK_IdClaseProductoProducto!=null) {
							//jComboBoxid_clase_productoFK_IdClaseProductoProducto.setSelectedItem(claseproductoTemp);
							if(jComboBoxid_clase_productoFK_IdClaseProductoProducto.getItemCount()>0) {
								jComboBoxid_clase_productoFK_IdClaseProductoProducto.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualClaseProductoForeignKeyDescripcion(Long idClaseProductoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			ClaseProducto  claseproductoTemp=null;

			for(ClaseProducto claseproductoAux:claseproductosForeignKey) {
				if(claseproductoAux.getId()!=null && claseproductoAux.getId().equals(idClaseProductoSeleccionado)) {
					claseproductoTemp=claseproductoAux;
					break;
				}
			}


			sDescripcion=ClaseProductoConstantesFunciones.getClaseProductoDescripcion(claseproductoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualClaseProductoForeignKeyGenerico(Long idClaseProductoSeleccionado,JComboBox jComboBoxid_clase_productoProductoGenerico)throws Exception
	{
		try
		{
			ClaseProducto  claseproductoTemp=null;

			for(ClaseProducto claseproductoAux:claseproductosForeignKey) {
				if(claseproductoAux.getId()!=null && claseproductoAux.getId().equals(idClaseProductoSeleccionado)) {
					claseproductoTemp=claseproductoAux;
					break;
				}
			}

			if(claseproductoTemp!=null) {
				jComboBoxid_clase_productoProductoGenerico.setSelectedItem(claseproductoTemp);
			} else {
				if(jComboBoxid_clase_productoProductoGenerico!=null && jComboBoxid_clase_productoProductoGenerico.getItemCount()>0) {
					jComboBoxid_clase_productoProductoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEfectoProductoForeignKey(Long idEfectoProductoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			EfectoProducto  efectoproductoTemp=null;

			for(EfectoProducto efectoproductoAux:efectoproductosForeignKey) {
				if(efectoproductoAux.getId()!=null && efectoproductoAux.getId().equals(idEfectoProductoSeleccionado)) {
					efectoproductoTemp=efectoproductoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(efectoproductoTemp!=null) {

					if(this.producto!=null) {
						this.producto.setEfectoProducto(efectoproductoTemp);
					}

					if(this.jInternalFrameDetalleFormProducto!=null) {
						this.jInternalFrameDetalleFormProducto.jComboBoxid_efecto_productoProducto.setSelectedItem(efectoproductoTemp);
					}
				} else {
					//jComboBoxid_efecto_productoProducto.setSelectedItem(efectoproductoTemp);
					if(this.jInternalFrameDetalleFormProducto!=null) {
						if(this.jInternalFrameDetalleFormProducto.jComboBoxid_efecto_productoProducto.getItemCount()>0) {
							this.jInternalFrameDetalleFormProducto.jComboBoxid_efecto_productoProducto.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEfectoProductoForeignKeyDescripcion(Long idEfectoProductoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			EfectoProducto  efectoproductoTemp=null;

			for(EfectoProducto efectoproductoAux:efectoproductosForeignKey) {
				if(efectoproductoAux.getId()!=null && efectoproductoAux.getId().equals(idEfectoProductoSeleccionado)) {
					efectoproductoTemp=efectoproductoAux;
					break;
				}
			}


			sDescripcion=EfectoProductoConstantesFunciones.getEfectoProductoDescripcion(efectoproductoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEfectoProductoForeignKeyGenerico(Long idEfectoProductoSeleccionado,JComboBox jComboBoxid_efecto_productoProductoGenerico)throws Exception
	{
		try
		{
			EfectoProducto  efectoproductoTemp=null;

			for(EfectoProducto efectoproductoAux:efectoproductosForeignKey) {
				if(efectoproductoAux.getId()!=null && efectoproductoAux.getId().equals(idEfectoProductoSeleccionado)) {
					efectoproductoTemp=efectoproductoAux;
					break;
				}
			}

			if(efectoproductoTemp!=null) {
				jComboBoxid_efecto_productoProductoGenerico.setSelectedItem(efectoproductoTemp);
			} else {
				if(jComboBoxid_efecto_productoProductoGenerico!=null && jComboBoxid_efecto_productoProductoGenerico.getItemCount()>0) {
					jComboBoxid_efecto_productoProductoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualMarcaProductoForeignKey(Long idMarcaProductoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			MarcaProducto  marcaproductoTemp=null;

			for(MarcaProducto marcaproductoAux:marcaproductosForeignKey) {
				if(marcaproductoAux.getId()!=null && marcaproductoAux.getId().equals(idMarcaProductoSeleccionado)) {
					marcaproductoTemp=marcaproductoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(marcaproductoTemp!=null) {

					if(this.producto!=null) {
						this.producto.setMarcaProducto(marcaproductoTemp);
					}

					if(this.jInternalFrameDetalleFormProducto!=null) {
						this.jInternalFrameDetalleFormProducto.jComboBoxid_marca_productoProducto.setSelectedItem(marcaproductoTemp);
					}
				} else {
					//jComboBoxid_marca_productoProducto.setSelectedItem(marcaproductoTemp);
					if(this.jInternalFrameDetalleFormProducto!=null) {
						if(this.jInternalFrameDetalleFormProducto.jComboBoxid_marca_productoProducto.getItemCount()>0) {
							this.jInternalFrameDetalleFormProducto.jComboBoxid_marca_productoProducto.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdMarcaProducto") || sFormularioTipoBusqueda.equals("Todos")){
					if(marcaproductoTemp!=null && jComboBoxid_marca_productoFK_IdMarcaProductoProducto!=null) {
						jComboBoxid_marca_productoFK_IdMarcaProductoProducto.setSelectedItem(marcaproductoTemp);
					} else {
						if(jComboBoxid_marca_productoFK_IdMarcaProductoProducto!=null) {
							//jComboBoxid_marca_productoFK_IdMarcaProductoProducto.setSelectedItem(marcaproductoTemp);
							if(jComboBoxid_marca_productoFK_IdMarcaProductoProducto.getItemCount()>0) {
								jComboBoxid_marca_productoFK_IdMarcaProductoProducto.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualMarcaProductoForeignKeyDescripcion(Long idMarcaProductoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			MarcaProducto  marcaproductoTemp=null;

			for(MarcaProducto marcaproductoAux:marcaproductosForeignKey) {
				if(marcaproductoAux.getId()!=null && marcaproductoAux.getId().equals(idMarcaProductoSeleccionado)) {
					marcaproductoTemp=marcaproductoAux;
					break;
				}
			}


			sDescripcion=MarcaProductoConstantesFunciones.getMarcaProductoDescripcion(marcaproductoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualMarcaProductoForeignKeyGenerico(Long idMarcaProductoSeleccionado,JComboBox jComboBoxid_marca_productoProductoGenerico)throws Exception
	{
		try
		{
			MarcaProducto  marcaproductoTemp=null;

			for(MarcaProducto marcaproductoAux:marcaproductosForeignKey) {
				if(marcaproductoAux.getId()!=null && marcaproductoAux.getId().equals(idMarcaProductoSeleccionado)) {
					marcaproductoTemp=marcaproductoAux;
					break;
				}
			}

			if(marcaproductoTemp!=null) {
				jComboBoxid_marca_productoProductoGenerico.setSelectedItem(marcaproductoTemp);
			} else {
				if(jComboBoxid_marca_productoProductoGenerico!=null && jComboBoxid_marca_productoProductoGenerico.getItemCount()>0) {
					jComboBoxid_marca_productoProductoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualModeloProductoForeignKey(Long idModeloProductoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			ModeloProducto  modeloproductoTemp=null;

			for(ModeloProducto modeloproductoAux:modeloproductosForeignKey) {
				if(modeloproductoAux.getId()!=null && modeloproductoAux.getId().equals(idModeloProductoSeleccionado)) {
					modeloproductoTemp=modeloproductoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(modeloproductoTemp!=null) {

					if(this.producto!=null) {
						this.producto.setModeloProducto(modeloproductoTemp);
					}

					if(this.jInternalFrameDetalleFormProducto!=null) {
						this.jInternalFrameDetalleFormProducto.jComboBoxid_modelo_productoProducto.setSelectedItem(modeloproductoTemp);
					}
				} else {
					//jComboBoxid_modelo_productoProducto.setSelectedItem(modeloproductoTemp);
					if(this.jInternalFrameDetalleFormProducto!=null) {
						if(this.jInternalFrameDetalleFormProducto.jComboBoxid_modelo_productoProducto.getItemCount()>0) {
							this.jInternalFrameDetalleFormProducto.jComboBoxid_modelo_productoProducto.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdModeloProducto") || sFormularioTipoBusqueda.equals("Todos")){
					if(modeloproductoTemp!=null && jComboBoxid_modelo_productoFK_IdModeloProductoProducto!=null) {
						jComboBoxid_modelo_productoFK_IdModeloProductoProducto.setSelectedItem(modeloproductoTemp);
					} else {
						if(jComboBoxid_modelo_productoFK_IdModeloProductoProducto!=null) {
							//jComboBoxid_modelo_productoFK_IdModeloProductoProducto.setSelectedItem(modeloproductoTemp);
							if(jComboBoxid_modelo_productoFK_IdModeloProductoProducto.getItemCount()>0) {
								jComboBoxid_modelo_productoFK_IdModeloProductoProducto.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualModeloProductoForeignKeyDescripcion(Long idModeloProductoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			ModeloProducto  modeloproductoTemp=null;

			for(ModeloProducto modeloproductoAux:modeloproductosForeignKey) {
				if(modeloproductoAux.getId()!=null && modeloproductoAux.getId().equals(idModeloProductoSeleccionado)) {
					modeloproductoTemp=modeloproductoAux;
					break;
				}
			}


			sDescripcion=ModeloProductoConstantesFunciones.getModeloProductoDescripcion(modeloproductoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualModeloProductoForeignKeyGenerico(Long idModeloProductoSeleccionado,JComboBox jComboBoxid_modelo_productoProductoGenerico)throws Exception
	{
		try
		{
			ModeloProducto  modeloproductoTemp=null;

			for(ModeloProducto modeloproductoAux:modeloproductosForeignKey) {
				if(modeloproductoAux.getId()!=null && modeloproductoAux.getId().equals(idModeloProductoSeleccionado)) {
					modeloproductoTemp=modeloproductoAux;
					break;
				}
			}

			if(modeloproductoTemp!=null) {
				jComboBoxid_modelo_productoProductoGenerico.setSelectedItem(modeloproductoTemp);
			} else {
				if(jComboBoxid_modelo_productoProductoGenerico!=null && jComboBoxid_modelo_productoProductoGenerico.getItemCount()>0) {
					jComboBoxid_modelo_productoProductoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualMaterialProductoForeignKey(Long idMaterialProductoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			MaterialProducto  materialproductoTemp=null;

			for(MaterialProducto materialproductoAux:materialproductosForeignKey) {
				if(materialproductoAux.getId()!=null && materialproductoAux.getId().equals(idMaterialProductoSeleccionado)) {
					materialproductoTemp=materialproductoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(materialproductoTemp!=null) {

					if(this.producto!=null) {
						this.producto.setMaterialProducto(materialproductoTemp);
					}

					if(this.jInternalFrameDetalleFormProducto!=null) {
						this.jInternalFrameDetalleFormProducto.jComboBoxid_material_productoProducto.setSelectedItem(materialproductoTemp);
					}
				} else {
					//jComboBoxid_material_productoProducto.setSelectedItem(materialproductoTemp);
					if(this.jInternalFrameDetalleFormProducto!=null) {
						if(this.jInternalFrameDetalleFormProducto.jComboBoxid_material_productoProducto.getItemCount()>0) {
							this.jInternalFrameDetalleFormProducto.jComboBoxid_material_productoProducto.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualMaterialProductoForeignKeyDescripcion(Long idMaterialProductoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			MaterialProducto  materialproductoTemp=null;

			for(MaterialProducto materialproductoAux:materialproductosForeignKey) {
				if(materialproductoAux.getId()!=null && materialproductoAux.getId().equals(idMaterialProductoSeleccionado)) {
					materialproductoTemp=materialproductoAux;
					break;
				}
			}


			sDescripcion=MaterialProductoConstantesFunciones.getMaterialProductoDescripcion(materialproductoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualMaterialProductoForeignKeyGenerico(Long idMaterialProductoSeleccionado,JComboBox jComboBoxid_material_productoProductoGenerico)throws Exception
	{
		try
		{
			MaterialProducto  materialproductoTemp=null;

			for(MaterialProducto materialproductoAux:materialproductosForeignKey) {
				if(materialproductoAux.getId()!=null && materialproductoAux.getId().equals(idMaterialProductoSeleccionado)) {
					materialproductoTemp=materialproductoAux;
					break;
				}
			}

			if(materialproductoTemp!=null) {
				jComboBoxid_material_productoProductoGenerico.setSelectedItem(materialproductoTemp);
			} else {
				if(jComboBoxid_material_productoProductoGenerico!=null && jComboBoxid_material_productoProductoGenerico.getItemCount()>0) {
					jComboBoxid_material_productoProductoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualSegmentoProductoForeignKey(Long idSegmentoProductoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			SegmentoProducto  segmentoproductoTemp=null;

			for(SegmentoProducto segmentoproductoAux:segmentoproductosForeignKey) {
				if(segmentoproductoAux.getId()!=null && segmentoproductoAux.getId().equals(idSegmentoProductoSeleccionado)) {
					segmentoproductoTemp=segmentoproductoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(segmentoproductoTemp!=null) {

					if(this.producto!=null) {
						this.producto.setSegmentoProducto(segmentoproductoTemp);
					}

					if(this.jInternalFrameDetalleFormProducto!=null) {
						this.jInternalFrameDetalleFormProducto.jComboBoxid_segmento_productoProducto.setSelectedItem(segmentoproductoTemp);
					}
				} else {
					//jComboBoxid_segmento_productoProducto.setSelectedItem(segmentoproductoTemp);
					if(this.jInternalFrameDetalleFormProducto!=null) {
						if(this.jInternalFrameDetalleFormProducto.jComboBoxid_segmento_productoProducto.getItemCount()>0) {
							this.jInternalFrameDetalleFormProducto.jComboBoxid_segmento_productoProducto.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualSegmentoProductoForeignKeyDescripcion(Long idSegmentoProductoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			SegmentoProducto  segmentoproductoTemp=null;

			for(SegmentoProducto segmentoproductoAux:segmentoproductosForeignKey) {
				if(segmentoproductoAux.getId()!=null && segmentoproductoAux.getId().equals(idSegmentoProductoSeleccionado)) {
					segmentoproductoTemp=segmentoproductoAux;
					break;
				}
			}


			sDescripcion=SegmentoProductoConstantesFunciones.getSegmentoProductoDescripcion(segmentoproductoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualSegmentoProductoForeignKeyGenerico(Long idSegmentoProductoSeleccionado,JComboBox jComboBoxid_segmento_productoProductoGenerico)throws Exception
	{
		try
		{
			SegmentoProducto  segmentoproductoTemp=null;

			for(SegmentoProducto segmentoproductoAux:segmentoproductosForeignKey) {
				if(segmentoproductoAux.getId()!=null && segmentoproductoAux.getId().equals(idSegmentoProductoSeleccionado)) {
					segmentoproductoTemp=segmentoproductoAux;
					break;
				}
			}

			if(segmentoproductoTemp!=null) {
				jComboBoxid_segmento_productoProductoGenerico.setSelectedItem(segmentoproductoTemp);
			} else {
				if(jComboBoxid_segmento_productoProductoGenerico!=null && jComboBoxid_segmento_productoProductoGenerico.getItemCount()>0) {
					jComboBoxid_segmento_productoProductoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTallaProductoForeignKey(Long idTallaProductoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TallaProducto  tallaproductoTemp=null;

			for(TallaProducto tallaproductoAux:tallaproductosForeignKey) {
				if(tallaproductoAux.getId()!=null && tallaproductoAux.getId().equals(idTallaProductoSeleccionado)) {
					tallaproductoTemp=tallaproductoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tallaproductoTemp!=null) {

					if(this.producto!=null) {
						this.producto.setTallaProducto(tallaproductoTemp);
					}

					if(this.jInternalFrameDetalleFormProducto!=null) {
						this.jInternalFrameDetalleFormProducto.jComboBoxid_talla_productoProducto.setSelectedItem(tallaproductoTemp);
					}
				} else {
					//jComboBoxid_talla_productoProducto.setSelectedItem(tallaproductoTemp);
					if(this.jInternalFrameDetalleFormProducto!=null) {
						if(this.jInternalFrameDetalleFormProducto.jComboBoxid_talla_productoProducto.getItemCount()>0) {
							this.jInternalFrameDetalleFormProducto.jComboBoxid_talla_productoProducto.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTallaProductoForeignKeyDescripcion(Long idTallaProductoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TallaProducto  tallaproductoTemp=null;

			for(TallaProducto tallaproductoAux:tallaproductosForeignKey) {
				if(tallaproductoAux.getId()!=null && tallaproductoAux.getId().equals(idTallaProductoSeleccionado)) {
					tallaproductoTemp=tallaproductoAux;
					break;
				}
			}


			sDescripcion=TallaProductoConstantesFunciones.getTallaProductoDescripcion(tallaproductoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTallaProductoForeignKeyGenerico(Long idTallaProductoSeleccionado,JComboBox jComboBoxid_talla_productoProductoGenerico)throws Exception
	{
		try
		{
			TallaProducto  tallaproductoTemp=null;

			for(TallaProducto tallaproductoAux:tallaproductosForeignKey) {
				if(tallaproductoAux.getId()!=null && tallaproductoAux.getId().equals(idTallaProductoSeleccionado)) {
					tallaproductoTemp=tallaproductoAux;
					break;
				}
			}

			if(tallaproductoTemp!=null) {
				jComboBoxid_talla_productoProductoGenerico.setSelectedItem(tallaproductoTemp);
			} else {
				if(jComboBoxid_talla_productoProductoGenerico!=null && jComboBoxid_talla_productoProductoGenerico.getItemCount()>0) {
					jComboBoxid_talla_productoProductoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	
	
	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEmpresaForeignKey(Producto producto,JComboBox jComboBoxid_empresaProductoGenerico)throws Exception
	{
		try
		{
			Empresa  empresaAux=new Empresa();

			if(jComboBoxid_empresaProductoGenerico==null) {
				empresaAux=(Empresa)this.jInternalFrameDetalleFormProducto.jComboBoxid_empresaProducto.getSelectedItem();
			} else {
				empresaAux=(Empresa)jComboBoxid_empresaProductoGenerico.getSelectedItem();
			}

			if(empresaAux!=null && empresaAux.getId()!=null) {
				producto.setid_empresa(empresaAux.getId());
				producto.setempresa_descripcion(ProductoConstantesFunciones.getEmpresaDescripcion(empresaAux));
				producto.setEmpresa(empresaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarSucursalForeignKey(Producto producto,JComboBox jComboBoxid_sucursalProductoGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalAux=new Sucursal();

			if(jComboBoxid_sucursalProductoGenerico==null) {
				sucursalAux=(Sucursal)this.jInternalFrameDetalleFormProducto.jComboBoxid_sucursalProducto.getSelectedItem();
			} else {
				sucursalAux=(Sucursal)jComboBoxid_sucursalProductoGenerico.getSelectedItem();
			}

			if(sucursalAux!=null && sucursalAux.getId()!=null) {
				producto.setid_sucursal(sucursalAux.getId());
				producto.setsucursal_descripcion(ProductoConstantesFunciones.getSucursalDescripcion(sucursalAux));
				producto.setSucursal(sucursalAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarLineaForeignKey(Producto producto,JComboBox jComboBoxid_lineaProductoGenerico)throws Exception
	{
		try
		{
			Linea  lineaAux=new Linea();

			if(jComboBoxid_lineaProductoGenerico==null) {
				lineaAux=(Linea)this.jInternalFrameDetalleFormProducto.jComboBoxid_lineaProducto.getSelectedItem();
			} else {
				lineaAux=(Linea)jComboBoxid_lineaProductoGenerico.getSelectedItem();
			}

			if(lineaAux!=null && lineaAux.getId()!=null) {
				producto.setid_linea(lineaAux.getId());
				producto.setlinea_descripcion(ProductoConstantesFunciones.getLineaDescripcion(lineaAux));
				producto.setLinea(lineaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarLineaGrupoForeignKey(Producto producto,JComboBox jComboBoxid_linea_grupoProductoGenerico)throws Exception
	{
		try
		{
			Linea  lineaAux=new Linea();

			if(jComboBoxid_linea_grupoProductoGenerico==null) {
				lineaAux=(Linea)this.jInternalFrameDetalleFormProducto.jComboBoxid_linea_grupoProducto.getSelectedItem();
			} else {
				lineaAux=(Linea)jComboBoxid_linea_grupoProductoGenerico.getSelectedItem();
			}

			if(lineaAux!=null) {
				producto.setid_linea_grupo(lineaAux.getId());
				producto.setlineagrupo_descripcion(ProductoConstantesFunciones.getLineaGrupoDescripcion(lineaAux));
				producto.setLineaGrupo(lineaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarLineaCategoriaForeignKey(Producto producto,JComboBox jComboBoxid_linea_categoriaProductoGenerico)throws Exception
	{
		try
		{
			Linea  lineaAux=new Linea();

			if(jComboBoxid_linea_categoriaProductoGenerico==null) {
				lineaAux=(Linea)this.jInternalFrameDetalleFormProducto.jComboBoxid_linea_categoriaProducto.getSelectedItem();
			} else {
				lineaAux=(Linea)jComboBoxid_linea_categoriaProductoGenerico.getSelectedItem();
			}

			if(lineaAux!=null) {
				producto.setid_linea_categoria(lineaAux.getId());
				producto.setlineacategoria_descripcion(ProductoConstantesFunciones.getLineaCategoriaDescripcion(lineaAux));
				producto.setLineaCategoria(lineaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarLineaMarcaForeignKey(Producto producto,JComboBox jComboBoxid_linea_marcaProductoGenerico)throws Exception
	{
		try
		{
			Linea  lineaAux=new Linea();

			if(jComboBoxid_linea_marcaProductoGenerico==null) {
				lineaAux=(Linea)this.jInternalFrameDetalleFormProducto.jComboBoxid_linea_marcaProducto.getSelectedItem();
			} else {
				lineaAux=(Linea)jComboBoxid_linea_marcaProductoGenerico.getSelectedItem();
			}

			if(lineaAux!=null) {
				producto.setid_linea_marca(lineaAux.getId());
				producto.setlineamarca_descripcion(ProductoConstantesFunciones.getLineaMarcaDescripcion(lineaAux));
				producto.setLineaMarca(lineaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoProductoServicioForeignKey(Producto producto,JComboBox jComboBoxid_tipo_producto_servicioProductoGenerico)throws Exception
	{
		try
		{
			TipoProductoServicio  tipoproductoservicioAux=new TipoProductoServicio();

			if(jComboBoxid_tipo_producto_servicioProductoGenerico==null) {
				tipoproductoservicioAux=(TipoProductoServicio)this.jInternalFrameDetalleFormProducto.jComboBoxid_tipo_producto_servicioProducto.getSelectedItem();
			} else {
				tipoproductoservicioAux=(TipoProductoServicio)jComboBoxid_tipo_producto_servicioProductoGenerico.getSelectedItem();
			}

			if(tipoproductoservicioAux!=null && tipoproductoservicioAux.getId()!=null) {
				producto.setid_tipo_producto_servicio(tipoproductoservicioAux.getId());
				producto.settipoproductoservicio_descripcion(ProductoConstantesFunciones.getTipoProductoServicioDescripcion(tipoproductoservicioAux));
				producto.setTipoProductoServicio(tipoproductoservicioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoProductoServicioInvenForeignKey(Producto producto,JComboBox jComboBoxid_tipo_producto_servicio_invenProductoGenerico)throws Exception
	{
		try
		{
			TipoProductoServicioInven  tipoproductoservicioinvenAux=new TipoProductoServicioInven();

			if(jComboBoxid_tipo_producto_servicio_invenProductoGenerico==null) {
				tipoproductoservicioinvenAux=(TipoProductoServicioInven)this.jInternalFrameDetalleFormProducto.jComboBoxid_tipo_producto_servicio_invenProducto.getSelectedItem();
			} else {
				tipoproductoservicioinvenAux=(TipoProductoServicioInven)jComboBoxid_tipo_producto_servicio_invenProductoGenerico.getSelectedItem();
			}

			if(tipoproductoservicioinvenAux!=null && tipoproductoservicioinvenAux.getId()!=null) {
				producto.setid_tipo_producto_servicio_inven(tipoproductoservicioinvenAux.getId());
				producto.settipoproductoservicioinven_descripcion(ProductoConstantesFunciones.getTipoProductoServicioInvenDescripcion(tipoproductoservicioinvenAux));
				producto.setTipoProductoServicioInven(tipoproductoservicioinvenAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoCosteoForeignKey(Producto producto,JComboBox jComboBoxid_tipo_costeoProductoGenerico)throws Exception
	{
		try
		{
			TipoCosteo  tipocosteoAux=new TipoCosteo();

			if(jComboBoxid_tipo_costeoProductoGenerico==null) {
				tipocosteoAux=(TipoCosteo)this.jInternalFrameDetalleFormProducto.jComboBoxid_tipo_costeoProducto.getSelectedItem();
			} else {
				tipocosteoAux=(TipoCosteo)jComboBoxid_tipo_costeoProductoGenerico.getSelectedItem();
			}

			if(tipocosteoAux!=null && tipocosteoAux.getId()!=null) {
				producto.setid_tipo_costeo(tipocosteoAux.getId());
				producto.settipocosteo_descripcion(ProductoConstantesFunciones.getTipoCosteoDescripcion(tipocosteoAux));
				producto.setTipoCosteo(tipocosteoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarUnidadForeignKey(Producto producto,JComboBox jComboBoxid_unidadProductoGenerico)throws Exception
	{
		try
		{
			Unidad  unidadAux=new Unidad();

			if(jComboBoxid_unidadProductoGenerico==null) {
				unidadAux=(Unidad)this.jInternalFrameDetalleFormProducto.jComboBoxid_unidadProducto.getSelectedItem();
			} else {
				unidadAux=(Unidad)jComboBoxid_unidadProductoGenerico.getSelectedItem();
			}

			if(unidadAux!=null && unidadAux.getId()!=null) {
				producto.setid_unidad(unidadAux.getId());
				producto.setunidad_descripcion(ProductoConstantesFunciones.getUnidadDescripcion(unidadAux));
				producto.setUnidad(unidadAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarUnidadPesoForeignKey(Producto producto,JComboBox jComboBoxid_unidad_pesoProductoGenerico)throws Exception
	{
		try
		{
			Unidad  unidadAux=new Unidad();

			if(jComboBoxid_unidad_pesoProductoGenerico==null) {
				unidadAux=(Unidad)this.jInternalFrameDetalleFormProducto.jComboBoxid_unidad_pesoProducto.getSelectedItem();
			} else {
				unidadAux=(Unidad)jComboBoxid_unidad_pesoProductoGenerico.getSelectedItem();
			}

			if(unidadAux!=null && unidadAux.getId()!=null) {
				producto.setid_unidad_peso(unidadAux.getId());
				producto.setunidadpeso_descripcion(ProductoConstantesFunciones.getUnidadPesoDescripcion(unidadAux));
				producto.setUnidadPeso(unidadAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarArancelForeignKey(Producto producto,JComboBox jComboBoxid_arancelProductoGenerico)throws Exception
	{
		try
		{
			Arancel  arancelAux=new Arancel();

			if(jComboBoxid_arancelProductoGenerico==null) {
				arancelAux=(Arancel)this.jInternalFrameDetalleFormProducto.jComboBoxid_arancelProducto.getSelectedItem();
			} else {
				arancelAux=(Arancel)jComboBoxid_arancelProductoGenerico.getSelectedItem();
			}

			if(arancelAux!=null && arancelAux.getId()!=null) {
				producto.setid_arancel(arancelAux.getId());
				producto.setarancel_descripcion(ProductoConstantesFunciones.getArancelDescripcion(arancelAux));
				producto.setArancel(arancelAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarClienteForeignKey(Producto producto,JComboBox jComboBoxid_clienteProductoGenerico)throws Exception
	{
		try
		{
			Cliente  clienteAux=new Cliente();

			if(jComboBoxid_clienteProductoGenerico==null) {
				clienteAux=(Cliente)this.jInternalFrameDetalleFormProducto.jComboBoxid_clienteProducto.getSelectedItem();
			} else {
				clienteAux=(Cliente)jComboBoxid_clienteProductoGenerico.getSelectedItem();
			}

			if(clienteAux!=null && clienteAux.getId()!=null) {
				producto.setid_cliente(clienteAux.getId());
				producto.setcliente_descripcion(ProductoConstantesFunciones.getClienteDescripcion(clienteAux));
				producto.setCliente(clienteAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarClienteProveedorDefectoForeignKey(Producto producto,JComboBox jComboBoxid_cliente_proveedor_defectoProductoGenerico)throws Exception
	{
		try
		{
			Cliente  clienteAux=new Cliente();

			if(jComboBoxid_cliente_proveedor_defectoProductoGenerico==null) {
				clienteAux=(Cliente)this.jInternalFrameDetalleFormProducto.jComboBoxid_cliente_proveedor_defectoProducto.getSelectedItem();
			} else {
				clienteAux=(Cliente)jComboBoxid_cliente_proveedor_defectoProductoGenerico.getSelectedItem();
			}

			if(clienteAux!=null && clienteAux.getId()!=null) {
				producto.setid_cliente_proveedor_defecto(clienteAux.getId());
				producto.setclienteproveedordefecto_descripcion(ProductoConstantesFunciones.getClienteProveedorDefectoDescripcion(clienteAux));
				producto.setClienteProveedorDefecto(clienteAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoProductoForeignKey(Producto producto,JComboBox jComboBoxid_tipo_productoProductoGenerico)throws Exception
	{
		try
		{
			TipoProducto  tipoproductoAux=new TipoProducto();

			if(jComboBoxid_tipo_productoProductoGenerico==null) {
				tipoproductoAux=(TipoProducto)this.jInternalFrameDetalleFormProducto.jComboBoxid_tipo_productoProducto.getSelectedItem();
			} else {
				tipoproductoAux=(TipoProducto)jComboBoxid_tipo_productoProductoGenerico.getSelectedItem();
			}

			if(tipoproductoAux!=null && tipoproductoAux.getId()!=null) {
				producto.setid_tipo_producto(tipoproductoAux.getId());
				producto.settipoproducto_descripcion(ProductoConstantesFunciones.getTipoProductoDescripcion(tipoproductoAux));
				producto.setTipoProducto(tipoproductoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarColorProductoForeignKey(Producto producto,JComboBox jComboBoxid_color_productoProductoGenerico)throws Exception
	{
		try
		{
			ColorProducto  colorproductoAux=new ColorProducto();

			if(jComboBoxid_color_productoProductoGenerico==null) {
				colorproductoAux=(ColorProducto)this.jInternalFrameDetalleFormProducto.jComboBoxid_color_productoProducto.getSelectedItem();
			} else {
				colorproductoAux=(ColorProducto)jComboBoxid_color_productoProductoGenerico.getSelectedItem();
			}

			if(colorproductoAux!=null && colorproductoAux.getId()!=null) {
				producto.setid_color_producto(colorproductoAux.getId());
				producto.setcolorproducto_descripcion(ProductoConstantesFunciones.getColorProductoDescripcion(colorproductoAux));
				producto.setColorProducto(colorproductoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarClaseProductoForeignKey(Producto producto,JComboBox jComboBoxid_clase_productoProductoGenerico)throws Exception
	{
		try
		{
			ClaseProducto  claseproductoAux=new ClaseProducto();

			if(jComboBoxid_clase_productoProductoGenerico==null) {
				claseproductoAux=(ClaseProducto)this.jInternalFrameDetalleFormProducto.jComboBoxid_clase_productoProducto.getSelectedItem();
			} else {
				claseproductoAux=(ClaseProducto)jComboBoxid_clase_productoProductoGenerico.getSelectedItem();
			}

			if(claseproductoAux!=null && claseproductoAux.getId()!=null) {
				producto.setid_clase_producto(claseproductoAux.getId());
				producto.setclaseproducto_descripcion(ProductoConstantesFunciones.getClaseProductoDescripcion(claseproductoAux));
				producto.setClaseProducto(claseproductoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEfectoProductoForeignKey(Producto producto,JComboBox jComboBoxid_efecto_productoProductoGenerico)throws Exception
	{
		try
		{
			EfectoProducto  efectoproductoAux=new EfectoProducto();

			if(jComboBoxid_efecto_productoProductoGenerico==null) {
				efectoproductoAux=(EfectoProducto)this.jInternalFrameDetalleFormProducto.jComboBoxid_efecto_productoProducto.getSelectedItem();
			} else {
				efectoproductoAux=(EfectoProducto)jComboBoxid_efecto_productoProductoGenerico.getSelectedItem();
			}

			if(efectoproductoAux!=null && efectoproductoAux.getId()!=null) {
				producto.setid_efecto_producto(efectoproductoAux.getId());
				producto.setefectoproducto_descripcion(ProductoConstantesFunciones.getEfectoProductoDescripcion(efectoproductoAux));
				producto.setEfectoProducto(efectoproductoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarMarcaProductoForeignKey(Producto producto,JComboBox jComboBoxid_marca_productoProductoGenerico)throws Exception
	{
		try
		{
			MarcaProducto  marcaproductoAux=new MarcaProducto();

			if(jComboBoxid_marca_productoProductoGenerico==null) {
				marcaproductoAux=(MarcaProducto)this.jInternalFrameDetalleFormProducto.jComboBoxid_marca_productoProducto.getSelectedItem();
			} else {
				marcaproductoAux=(MarcaProducto)jComboBoxid_marca_productoProductoGenerico.getSelectedItem();
			}

			if(marcaproductoAux!=null && marcaproductoAux.getId()!=null) {
				producto.setid_marca_producto(marcaproductoAux.getId());
				producto.setmarcaproducto_descripcion(ProductoConstantesFunciones.getMarcaProductoDescripcion(marcaproductoAux));
				producto.setMarcaProducto(marcaproductoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarModeloProductoForeignKey(Producto producto,JComboBox jComboBoxid_modelo_productoProductoGenerico)throws Exception
	{
		try
		{
			ModeloProducto  modeloproductoAux=new ModeloProducto();

			if(jComboBoxid_modelo_productoProductoGenerico==null) {
				modeloproductoAux=(ModeloProducto)this.jInternalFrameDetalleFormProducto.jComboBoxid_modelo_productoProducto.getSelectedItem();
			} else {
				modeloproductoAux=(ModeloProducto)jComboBoxid_modelo_productoProductoGenerico.getSelectedItem();
			}

			if(modeloproductoAux!=null && modeloproductoAux.getId()!=null) {
				producto.setid_modelo_producto(modeloproductoAux.getId());
				producto.setmodeloproducto_descripcion(ProductoConstantesFunciones.getModeloProductoDescripcion(modeloproductoAux));
				producto.setModeloProducto(modeloproductoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarMaterialProductoForeignKey(Producto producto,JComboBox jComboBoxid_material_productoProductoGenerico)throws Exception
	{
		try
		{
			MaterialProducto  materialproductoAux=new MaterialProducto();

			if(jComboBoxid_material_productoProductoGenerico==null) {
				materialproductoAux=(MaterialProducto)this.jInternalFrameDetalleFormProducto.jComboBoxid_material_productoProducto.getSelectedItem();
			} else {
				materialproductoAux=(MaterialProducto)jComboBoxid_material_productoProductoGenerico.getSelectedItem();
			}

			if(materialproductoAux!=null && materialproductoAux.getId()!=null) {
				producto.setid_material_producto(materialproductoAux.getId());
				producto.setmaterialproducto_descripcion(ProductoConstantesFunciones.getMaterialProductoDescripcion(materialproductoAux));
				producto.setMaterialProducto(materialproductoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarSegmentoProductoForeignKey(Producto producto,JComboBox jComboBoxid_segmento_productoProductoGenerico)throws Exception
	{
		try
		{
			SegmentoProducto  segmentoproductoAux=new SegmentoProducto();

			if(jComboBoxid_segmento_productoProductoGenerico==null) {
				segmentoproductoAux=(SegmentoProducto)this.jInternalFrameDetalleFormProducto.jComboBoxid_segmento_productoProducto.getSelectedItem();
			} else {
				segmentoproductoAux=(SegmentoProducto)jComboBoxid_segmento_productoProductoGenerico.getSelectedItem();
			}

			if(segmentoproductoAux!=null && segmentoproductoAux.getId()!=null) {
				producto.setid_segmento_producto(segmentoproductoAux.getId());
				producto.setsegmentoproducto_descripcion(ProductoConstantesFunciones.getSegmentoProductoDescripcion(segmentoproductoAux));
				producto.setSegmentoProducto(segmentoproductoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTallaProductoForeignKey(Producto producto,JComboBox jComboBoxid_talla_productoProductoGenerico)throws Exception
	{
		try
		{
			TallaProducto  tallaproductoAux=new TallaProducto();

			if(jComboBoxid_talla_productoProductoGenerico==null) {
				tallaproductoAux=(TallaProducto)this.jInternalFrameDetalleFormProducto.jComboBoxid_talla_productoProducto.getSelectedItem();
			} else {
				tallaproductoAux=(TallaProducto)jComboBoxid_talla_productoProductoGenerico.getSelectedItem();
			}

			if(tallaproductoAux!=null && tallaproductoAux.getId()!=null) {
				producto.setid_talla_producto(tallaproductoAux.getId());
				producto.settallaproducto_descripcion(ProductoConstantesFunciones.getTallaProductoDescripcion(tallaproductoAux));
				producto.setTallaProducto(tallaproductoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	


		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEmpresasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEmpresa=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ProductoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormProducto!=null) { 
							this.jInternalFrameDetalleFormProducto.jComboBoxid_empresaProducto.removeAllItems();

							for(Empresa empresa:this.empresasForeignKey) {
								this.jInternalFrameDetalleFormProducto.jComboBoxid_empresaProducto.addItem(empresa);
							}
						}
					}

					if(this.jInternalFrameDetalleFormProducto!=null) { 
					}

					if(!ProductoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameSucursalsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingSucursal=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ProductoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormProducto!=null) { 
							this.jInternalFrameDetalleFormProducto.jComboBoxid_sucursalProducto.removeAllItems();

							for(Sucursal sucursal:this.sucursalsForeignKey) {
								this.jInternalFrameDetalleFormProducto.jComboBoxid_sucursalProducto.addItem(sucursal);
							}
						}
					}

					if(this.jInternalFrameDetalleFormProducto!=null) { 
					}

					if(!ProductoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameLineasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingLinea=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ProductoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormProducto!=null) { 
							this.jInternalFrameDetalleFormProducto.jComboBoxid_lineaProducto.removeAllItems();

							for(Linea linea:this.lineasForeignKey) {
								this.jInternalFrameDetalleFormProducto.jComboBoxid_lineaProducto.addItem(linea);
							}
						}
					}

					if(this.jInternalFrameDetalleFormProducto!=null) { 
					}

					if(!ProductoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdLinea") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ProductoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_lineaFK_IdLineaProducto.removeAllItems();

							for(Linea linea:this.lineasForeignKey) {
								this.jComboBoxid_lineaFK_IdLineaProducto.addItem(linea);
							}
						}

						if(!ProductoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameLineaGruposForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingLinea=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ProductoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormProducto!=null) { 
							this.jInternalFrameDetalleFormProducto.jComboBoxid_linea_grupoProducto.removeAllItems();

							for(Linea lineagrupo:this.lineagruposForeignKey) {
								this.jInternalFrameDetalleFormProducto.jComboBoxid_linea_grupoProducto.addItem(lineagrupo);
							}
						}
					}

					if(this.jInternalFrameDetalleFormProducto!=null) { 
					}

					if(!ProductoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameLineaCategoriasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingLinea=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ProductoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormProducto!=null) { 
							this.jInternalFrameDetalleFormProducto.jComboBoxid_linea_categoriaProducto.removeAllItems();

							for(Linea lineacategoria:this.lineacategoriasForeignKey) {
								this.jInternalFrameDetalleFormProducto.jComboBoxid_linea_categoriaProducto.addItem(lineacategoria);
							}
						}
					}

					if(this.jInternalFrameDetalleFormProducto!=null) { 
					}

					if(!ProductoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameLineaMarcasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingLinea=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ProductoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormProducto!=null) { 
							this.jInternalFrameDetalleFormProducto.jComboBoxid_linea_marcaProducto.removeAllItems();

							for(Linea lineamarca:this.lineamarcasForeignKey) {
								this.jInternalFrameDetalleFormProducto.jComboBoxid_linea_marcaProducto.addItem(lineamarca);
							}
						}
					}

					if(this.jInternalFrameDetalleFormProducto!=null) { 
					}

					if(!ProductoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoProductoServiciosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoProductoServicio=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ProductoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormProducto!=null) { 
							this.jInternalFrameDetalleFormProducto.jComboBoxid_tipo_producto_servicioProducto.removeAllItems();

							for(TipoProductoServicio tipoproductoservicio:this.tipoproductoserviciosForeignKey) {
								this.jInternalFrameDetalleFormProducto.jComboBoxid_tipo_producto_servicioProducto.addItem(tipoproductoservicio);
							}
						}
					}

					if(this.jInternalFrameDetalleFormProducto!=null) { 
					}

					if(!ProductoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoProductoServicio") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ProductoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_producto_servicioFK_IdTipoProductoServicioProducto.removeAllItems();

							for(TipoProductoServicio tipoproductoservicio:this.tipoproductoserviciosForeignKey) {
								this.jComboBoxid_tipo_producto_servicioFK_IdTipoProductoServicioProducto.addItem(tipoproductoservicio);
							}
						}

						if(!ProductoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoProductoServicioInvensForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoProductoServicioInven=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ProductoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormProducto!=null) { 
							this.jInternalFrameDetalleFormProducto.jComboBoxid_tipo_producto_servicio_invenProducto.removeAllItems();

							for(TipoProductoServicioInven tipoproductoservicioinven:this.tipoproductoservicioinvensForeignKey) {
								this.jInternalFrameDetalleFormProducto.jComboBoxid_tipo_producto_servicio_invenProducto.addItem(tipoproductoservicioinven);
							}
						}
					}

					if(this.jInternalFrameDetalleFormProducto!=null) { 
					}

					if(!ProductoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoProductoServicioInven") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ProductoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_producto_servicio_invenFK_IdTipoProductoServicioInvenProducto.removeAllItems();

							for(TipoProductoServicioInven tipoproductoservicioinven:this.tipoproductoservicioinvensForeignKey) {
								this.jComboBoxid_tipo_producto_servicio_invenFK_IdTipoProductoServicioInvenProducto.addItem(tipoproductoservicioinven);
							}
						}

						if(!ProductoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoCosteosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoCosteo=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ProductoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormProducto!=null) { 
							this.jInternalFrameDetalleFormProducto.jComboBoxid_tipo_costeoProducto.removeAllItems();

							for(TipoCosteo tipocosteo:this.tipocosteosForeignKey) {
								this.jInternalFrameDetalleFormProducto.jComboBoxid_tipo_costeoProducto.addItem(tipocosteo);
							}
						}
					}

					if(this.jInternalFrameDetalleFormProducto!=null) { 
					}

					if(!ProductoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameUnidadsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingUnidad=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ProductoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormProducto!=null) { 
							this.jInternalFrameDetalleFormProducto.jComboBoxid_unidadProducto.removeAllItems();

							for(Unidad unidad:this.unidadsForeignKey) {
								this.jInternalFrameDetalleFormProducto.jComboBoxid_unidadProducto.addItem(unidad);
							}
						}
					}

					if(this.jInternalFrameDetalleFormProducto!=null) { 
					}

					if(!ProductoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameUnidadPesosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingUnidad=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ProductoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormProducto!=null) { 
							this.jInternalFrameDetalleFormProducto.jComboBoxid_unidad_pesoProducto.removeAllItems();

							for(Unidad unidadpeso:this.unidadpesosForeignKey) {
								this.jInternalFrameDetalleFormProducto.jComboBoxid_unidad_pesoProducto.addItem(unidadpeso);
							}
						}
					}

					if(this.jInternalFrameDetalleFormProducto!=null) { 
					}

					if(!ProductoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameArancelsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingArancel=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ProductoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormProducto!=null) { 
							this.jInternalFrameDetalleFormProducto.jComboBoxid_arancelProducto.removeAllItems();

							for(Arancel arancel:this.arancelsForeignKey) {
								this.jInternalFrameDetalleFormProducto.jComboBoxid_arancelProducto.addItem(arancel);
							}
						}
					}

					if(this.jInternalFrameDetalleFormProducto!=null) { 
					}

					if(!ProductoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameClientesForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCliente=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ProductoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormProducto!=null) { 
							this.jInternalFrameDetalleFormProducto.jComboBoxid_clienteProducto.removeAllItems();

							for(Cliente cliente:this.clientesForeignKey) {
								this.jInternalFrameDetalleFormProducto.jComboBoxid_clienteProducto.addItem(cliente);
							}
						}
					}

					if(this.jInternalFrameDetalleFormProducto!=null) { 
					}

					if(!ProductoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdCliente") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ProductoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_clienteFK_IdClienteProducto.removeAllItems();

							for(Cliente cliente:this.clientesForeignKey) {
								this.jComboBoxid_clienteFK_IdClienteProducto.addItem(cliente);
							}
						}

						if(!ProductoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameClienteProveedorDefectosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCliente=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ProductoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormProducto!=null) { 
							this.jInternalFrameDetalleFormProducto.jComboBoxid_cliente_proveedor_defectoProducto.removeAllItems();

							for(Cliente clienteproveedordefecto:this.clienteproveedordefectosForeignKey) {
								this.jInternalFrameDetalleFormProducto.jComboBoxid_cliente_proveedor_defectoProducto.addItem(clienteproveedordefecto);
							}
						}
					}

					if(this.jInternalFrameDetalleFormProducto!=null) { 
					}

					if(!ProductoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdClienteProveedorDefecto") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ProductoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_cliente_proveedor_defectoFK_IdClienteProveedorDefectoProducto.removeAllItems();

							for(Cliente clienteproveedordefecto:this.clienteproveedordefectosForeignKey) {
								this.jComboBoxid_cliente_proveedor_defectoFK_IdClienteProveedorDefectoProducto.addItem(clienteproveedordefecto);
							}
						}

						if(!ProductoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoProductosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoProducto=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ProductoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormProducto!=null) { 
							this.jInternalFrameDetalleFormProducto.jComboBoxid_tipo_productoProducto.removeAllItems();

							for(TipoProducto tipoproducto:this.tipoproductosForeignKey) {
								this.jInternalFrameDetalleFormProducto.jComboBoxid_tipo_productoProducto.addItem(tipoproducto);
							}
						}
					}

					if(this.jInternalFrameDetalleFormProducto!=null) { 
					}

					if(!ProductoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoProducto") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ProductoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_productoFK_IdTipoProductoProducto.removeAllItems();

							for(TipoProducto tipoproducto:this.tipoproductosForeignKey) {
								this.jComboBoxid_tipo_productoFK_IdTipoProductoProducto.addItem(tipoproducto);
							}
						}

						if(!ProductoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameColorProductosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingColorProducto=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ProductoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormProducto!=null) { 
							this.jInternalFrameDetalleFormProducto.jComboBoxid_color_productoProducto.removeAllItems();

							for(ColorProducto colorproducto:this.colorproductosForeignKey) {
								this.jInternalFrameDetalleFormProducto.jComboBoxid_color_productoProducto.addItem(colorproducto);
							}
						}
					}

					if(this.jInternalFrameDetalleFormProducto!=null) { 
					}

					if(!ProductoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameClaseProductosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingClaseProducto=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ProductoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormProducto!=null) { 
							this.jInternalFrameDetalleFormProducto.jComboBoxid_clase_productoProducto.removeAllItems();

							for(ClaseProducto claseproducto:this.claseproductosForeignKey) {
								this.jInternalFrameDetalleFormProducto.jComboBoxid_clase_productoProducto.addItem(claseproducto);
							}
						}
					}

					if(this.jInternalFrameDetalleFormProducto!=null) { 
					}

					if(!ProductoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdClaseProducto") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ProductoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_clase_productoFK_IdClaseProductoProducto.removeAllItems();

							for(ClaseProducto claseproducto:this.claseproductosForeignKey) {
								this.jComboBoxid_clase_productoFK_IdClaseProductoProducto.addItem(claseproducto);
							}
						}

						if(!ProductoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEfectoProductosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEfectoProducto=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ProductoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormProducto!=null) { 
							this.jInternalFrameDetalleFormProducto.jComboBoxid_efecto_productoProducto.removeAllItems();

							for(EfectoProducto efectoproducto:this.efectoproductosForeignKey) {
								this.jInternalFrameDetalleFormProducto.jComboBoxid_efecto_productoProducto.addItem(efectoproducto);
							}
						}
					}

					if(this.jInternalFrameDetalleFormProducto!=null) { 
					}

					if(!ProductoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameMarcaProductosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingMarcaProducto=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ProductoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormProducto!=null) { 
							this.jInternalFrameDetalleFormProducto.jComboBoxid_marca_productoProducto.removeAllItems();

							for(MarcaProducto marcaproducto:this.marcaproductosForeignKey) {
								this.jInternalFrameDetalleFormProducto.jComboBoxid_marca_productoProducto.addItem(marcaproducto);
							}
						}
					}

					if(this.jInternalFrameDetalleFormProducto!=null) { 
					}

					if(!ProductoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdMarcaProducto") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ProductoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_marca_productoFK_IdMarcaProductoProducto.removeAllItems();

							for(MarcaProducto marcaproducto:this.marcaproductosForeignKey) {
								this.jComboBoxid_marca_productoFK_IdMarcaProductoProducto.addItem(marcaproducto);
							}
						}

						if(!ProductoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameModeloProductosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingModeloProducto=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ProductoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormProducto!=null) { 
							this.jInternalFrameDetalleFormProducto.jComboBoxid_modelo_productoProducto.removeAllItems();

							for(ModeloProducto modeloproducto:this.modeloproductosForeignKey) {
								this.jInternalFrameDetalleFormProducto.jComboBoxid_modelo_productoProducto.addItem(modeloproducto);
							}
						}
					}

					if(this.jInternalFrameDetalleFormProducto!=null) { 
					}

					if(!ProductoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdModeloProducto") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ProductoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_modelo_productoFK_IdModeloProductoProducto.removeAllItems();

							for(ModeloProducto modeloproducto:this.modeloproductosForeignKey) {
								this.jComboBoxid_modelo_productoFK_IdModeloProductoProducto.addItem(modeloproducto);
							}
						}

						if(!ProductoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameMaterialProductosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingMaterialProducto=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ProductoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormProducto!=null) { 
							this.jInternalFrameDetalleFormProducto.jComboBoxid_material_productoProducto.removeAllItems();

							for(MaterialProducto materialproducto:this.materialproductosForeignKey) {
								this.jInternalFrameDetalleFormProducto.jComboBoxid_material_productoProducto.addItem(materialproducto);
							}
						}
					}

					if(this.jInternalFrameDetalleFormProducto!=null) { 
					}

					if(!ProductoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameSegmentoProductosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingSegmentoProducto=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ProductoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormProducto!=null) { 
							this.jInternalFrameDetalleFormProducto.jComboBoxid_segmento_productoProducto.removeAllItems();

							for(SegmentoProducto segmentoproducto:this.segmentoproductosForeignKey) {
								this.jInternalFrameDetalleFormProducto.jComboBoxid_segmento_productoProducto.addItem(segmentoproducto);
							}
						}
					}

					if(this.jInternalFrameDetalleFormProducto!=null) { 
					}

					if(!ProductoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTallaProductosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTallaProducto=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ProductoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormProducto!=null) { 
							this.jInternalFrameDetalleFormProducto.jComboBoxid_talla_productoProducto.removeAllItems();

							for(TallaProducto tallaproducto:this.tallaproductosForeignKey) {
								this.jInternalFrameDetalleFormProducto.jComboBoxid_talla_productoProducto.addItem(tallaproducto);
							}
						}
					}

					if(this.jInternalFrameDetalleFormProducto!=null) { 
					}

					if(!ProductoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

	


		public void setSelectedItemCombosFrameEmpresaForeignKey(Empresa empresa,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormProducto!=null) {
							this.jInternalFrameDetalleFormProducto.jComboBoxid_empresaProducto.setSelectedItem(empresa);
						}
					} else {
						if(this.jInternalFrameDetalleFormProducto!=null) {
							this.jInternalFrameDetalleFormProducto.jComboBoxid_empresaProducto.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameSucursalForeignKey(Sucursal sucursal,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormProducto!=null) {
							this.jInternalFrameDetalleFormProducto.jComboBoxid_sucursalProducto.setSelectedItem(sucursal);
						}
					} else {
						if(this.jInternalFrameDetalleFormProducto!=null) {
							this.jInternalFrameDetalleFormProducto.jComboBoxid_sucursalProducto.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameLineaForeignKey(Linea linea,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormProducto!=null) {
							this.jInternalFrameDetalleFormProducto.jComboBoxid_lineaProducto.setSelectedItem(linea);
						}
					} else {
						if(this.jInternalFrameDetalleFormProducto!=null) {
							this.jInternalFrameDetalleFormProducto.jComboBoxid_lineaProducto.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_lineaFK_IdLineaProducto.setSelectedItem(linea);
						} else {
							this.jComboBoxid_lineaFK_IdLineaProducto.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameLineaGrupoForeignKey(Linea lineagrupo,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormProducto!=null) {
							this.jInternalFrameDetalleFormProducto.jComboBoxid_linea_grupoProducto.setSelectedItem(lineagrupo);
						}
					} else {
						if(this.jInternalFrameDetalleFormProducto!=null) {
							this.jInternalFrameDetalleFormProducto.jComboBoxid_linea_grupoProducto.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameLineaCategoriaForeignKey(Linea lineacategoria,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormProducto!=null) {
							this.jInternalFrameDetalleFormProducto.jComboBoxid_linea_categoriaProducto.setSelectedItem(lineacategoria);
						}
					} else {
						if(this.jInternalFrameDetalleFormProducto!=null) {
							this.jInternalFrameDetalleFormProducto.jComboBoxid_linea_categoriaProducto.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameLineaMarcaForeignKey(Linea lineamarca,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormProducto!=null) {
							this.jInternalFrameDetalleFormProducto.jComboBoxid_linea_marcaProducto.setSelectedItem(lineamarca);
						}
					} else {
						if(this.jInternalFrameDetalleFormProducto!=null) {
							this.jInternalFrameDetalleFormProducto.jComboBoxid_linea_marcaProducto.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoProductoServicioForeignKey(TipoProductoServicio tipoproductoservicio,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormProducto!=null) {
							this.jInternalFrameDetalleFormProducto.jComboBoxid_tipo_producto_servicioProducto.setSelectedItem(tipoproductoservicio);
						}
					} else {
						if(this.jInternalFrameDetalleFormProducto!=null) {
							this.jInternalFrameDetalleFormProducto.jComboBoxid_tipo_producto_servicioProducto.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_producto_servicioFK_IdTipoProductoServicioProducto.setSelectedItem(tipoproductoservicio);
						} else {
							this.jComboBoxid_tipo_producto_servicioFK_IdTipoProductoServicioProducto.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoProductoServicioInvenForeignKey(TipoProductoServicioInven tipoproductoservicioinven,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormProducto!=null) {
							this.jInternalFrameDetalleFormProducto.jComboBoxid_tipo_producto_servicio_invenProducto.setSelectedItem(tipoproductoservicioinven);
						}
					} else {
						if(this.jInternalFrameDetalleFormProducto!=null) {
							this.jInternalFrameDetalleFormProducto.jComboBoxid_tipo_producto_servicio_invenProducto.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_producto_servicio_invenFK_IdTipoProductoServicioInvenProducto.setSelectedItem(tipoproductoservicioinven);
						} else {
							this.jComboBoxid_tipo_producto_servicio_invenFK_IdTipoProductoServicioInvenProducto.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoCosteoForeignKey(TipoCosteo tipocosteo,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormProducto!=null) {
							this.jInternalFrameDetalleFormProducto.jComboBoxid_tipo_costeoProducto.setSelectedItem(tipocosteo);
						}
					} else {
						if(this.jInternalFrameDetalleFormProducto!=null) {
							this.jInternalFrameDetalleFormProducto.jComboBoxid_tipo_costeoProducto.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameUnidadForeignKey(Unidad unidad,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormProducto!=null) {
							this.jInternalFrameDetalleFormProducto.jComboBoxid_unidadProducto.setSelectedItem(unidad);
						}
					} else {
						if(this.jInternalFrameDetalleFormProducto!=null) {
							this.jInternalFrameDetalleFormProducto.jComboBoxid_unidadProducto.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameUnidadPesoForeignKey(Unidad unidadpeso,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormProducto!=null) {
							this.jInternalFrameDetalleFormProducto.jComboBoxid_unidad_pesoProducto.setSelectedItem(unidadpeso);
						}
					} else {
						if(this.jInternalFrameDetalleFormProducto!=null) {
							this.jInternalFrameDetalleFormProducto.jComboBoxid_unidad_pesoProducto.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameArancelForeignKey(Arancel arancel,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormProducto!=null) {
							this.jInternalFrameDetalleFormProducto.jComboBoxid_arancelProducto.setSelectedItem(arancel);
						}
					} else {
						if(this.jInternalFrameDetalleFormProducto!=null) {
							this.jInternalFrameDetalleFormProducto.jComboBoxid_arancelProducto.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameClienteForeignKey(Cliente cliente,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormProducto!=null) {
							this.jInternalFrameDetalleFormProducto.jComboBoxid_clienteProducto.setSelectedItem(cliente);
						}
					} else {
						if(this.jInternalFrameDetalleFormProducto!=null) {
							this.jInternalFrameDetalleFormProducto.jComboBoxid_clienteProducto.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_clienteFK_IdClienteProducto.setSelectedItem(cliente);
						} else {
							this.jComboBoxid_clienteFK_IdClienteProducto.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameClienteProveedorDefectoForeignKey(Cliente clienteproveedordefecto,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormProducto!=null) {
							this.jInternalFrameDetalleFormProducto.jComboBoxid_cliente_proveedor_defectoProducto.setSelectedItem(clienteproveedordefecto);
						}
					} else {
						if(this.jInternalFrameDetalleFormProducto!=null) {
							this.jInternalFrameDetalleFormProducto.jComboBoxid_cliente_proveedor_defectoProducto.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_cliente_proveedor_defectoFK_IdClienteProveedorDefectoProducto.setSelectedItem(clienteproveedordefecto);
						} else {
							this.jComboBoxid_cliente_proveedor_defectoFK_IdClienteProveedorDefectoProducto.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoProductoForeignKey(TipoProducto tipoproducto,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormProducto!=null) {
							this.jInternalFrameDetalleFormProducto.jComboBoxid_tipo_productoProducto.setSelectedItem(tipoproducto);
						}
					} else {
						if(this.jInternalFrameDetalleFormProducto!=null) {
							this.jInternalFrameDetalleFormProducto.jComboBoxid_tipo_productoProducto.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_productoFK_IdTipoProductoProducto.setSelectedItem(tipoproducto);
						} else {
							this.jComboBoxid_tipo_productoFK_IdTipoProductoProducto.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameColorProductoForeignKey(ColorProducto colorproducto,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormProducto!=null) {
							this.jInternalFrameDetalleFormProducto.jComboBoxid_color_productoProducto.setSelectedItem(colorproducto);
						}
					} else {
						if(this.jInternalFrameDetalleFormProducto!=null) {
							this.jInternalFrameDetalleFormProducto.jComboBoxid_color_productoProducto.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameClaseProductoForeignKey(ClaseProducto claseproducto,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormProducto!=null) {
							this.jInternalFrameDetalleFormProducto.jComboBoxid_clase_productoProducto.setSelectedItem(claseproducto);
						}
					} else {
						if(this.jInternalFrameDetalleFormProducto!=null) {
							this.jInternalFrameDetalleFormProducto.jComboBoxid_clase_productoProducto.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_clase_productoFK_IdClaseProductoProducto.setSelectedItem(claseproducto);
						} else {
							this.jComboBoxid_clase_productoFK_IdClaseProductoProducto.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEfectoProductoForeignKey(EfectoProducto efectoproducto,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormProducto!=null) {
							this.jInternalFrameDetalleFormProducto.jComboBoxid_efecto_productoProducto.setSelectedItem(efectoproducto);
						}
					} else {
						if(this.jInternalFrameDetalleFormProducto!=null) {
							this.jInternalFrameDetalleFormProducto.jComboBoxid_efecto_productoProducto.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameMarcaProductoForeignKey(MarcaProducto marcaproducto,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormProducto!=null) {
							this.jInternalFrameDetalleFormProducto.jComboBoxid_marca_productoProducto.setSelectedItem(marcaproducto);
						}
					} else {
						if(this.jInternalFrameDetalleFormProducto!=null) {
							this.jInternalFrameDetalleFormProducto.jComboBoxid_marca_productoProducto.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_marca_productoFK_IdMarcaProductoProducto.setSelectedItem(marcaproducto);
						} else {
							this.jComboBoxid_marca_productoFK_IdMarcaProductoProducto.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameModeloProductoForeignKey(ModeloProducto modeloproducto,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormProducto!=null) {
							this.jInternalFrameDetalleFormProducto.jComboBoxid_modelo_productoProducto.setSelectedItem(modeloproducto);
						}
					} else {
						if(this.jInternalFrameDetalleFormProducto!=null) {
							this.jInternalFrameDetalleFormProducto.jComboBoxid_modelo_productoProducto.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_modelo_productoFK_IdModeloProductoProducto.setSelectedItem(modeloproducto);
						} else {
							this.jComboBoxid_modelo_productoFK_IdModeloProductoProducto.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameMaterialProductoForeignKey(MaterialProducto materialproducto,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormProducto!=null) {
							this.jInternalFrameDetalleFormProducto.jComboBoxid_material_productoProducto.setSelectedItem(materialproducto);
						}
					} else {
						if(this.jInternalFrameDetalleFormProducto!=null) {
							this.jInternalFrameDetalleFormProducto.jComboBoxid_material_productoProducto.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameSegmentoProductoForeignKey(SegmentoProducto segmentoproducto,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormProducto!=null) {
							this.jInternalFrameDetalleFormProducto.jComboBoxid_segmento_productoProducto.setSelectedItem(segmentoproducto);
						}
					} else {
						if(this.jInternalFrameDetalleFormProducto!=null) {
							this.jInternalFrameDetalleFormProducto.jComboBoxid_segmento_productoProducto.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTallaProductoForeignKey(TallaProducto tallaproducto,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormProducto!=null) {
							this.jInternalFrameDetalleFormProducto.jComboBoxid_talla_productoProducto.setSelectedItem(tallaproducto);
						}
					} else {
						if(this.jInternalFrameDetalleFormProducto!=null) {
							this.jInternalFrameDetalleFormProducto.jComboBoxid_talla_productoProducto.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

	


	
	public void refrescarForeignKeysDescripcionesProducto() throws Exception {
		//SI FUNCIONA DEEPLOAD ESTO VA AL ULTIMO
		if(Constantes.ISUSAEJBLOGICLAYER) {
			ProductoConstantesFunciones.refrescarForeignKeysDescripcionesProducto(this.productoLogic.getProductos());
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			ProductoConstantesFunciones.refrescarForeignKeysDescripcionesProducto(this.productos);
		}
		
		/*
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		classes.add(new Classe(Empresa.class));
		classes.add(new Classe(Sucursal.class));
		classes.add(new Classe(Linea.class));
		classes.add(new Classe(TipoProductoServicio.class));
		classes.add(new Classe(TipoProductoServicioInven.class));
		classes.add(new Classe(TipoCosteo.class));
		classes.add(new Classe(Unidad.class));
		classes.add(new Classe(Arancel.class));
		classes.add(new Classe(Cliente.class));
		classes.add(new Classe(TipoProducto.class));
		classes.add(new Classe(ColorProducto.class));
		classes.add(new Classe(ClaseProducto.class));
		classes.add(new Classe(EfectoProducto.class));
		classes.add(new Classe(MarcaProducto.class));
		classes.add(new Classe(ModeloProducto.class));
		classes.add(new Classe(MaterialProducto.class));
		classes.add(new Classe(SegmentoProducto.class));
		classes.add(new Classe(TallaProducto.class));
			
		if(Constantes.ISUSAEJBLOGICLAYER) {
			//USA LOS OBJETOS DE LOGIC DIRECTAMENTE
			//productoLogic.setProductos(this.productos);
			productoLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
	
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		*/				
	}	
	
	
	
	public Integer getiNumeroPaginacion() {
		return iNumeroPaginacion;
	}

	public void setiNumeroPaginacion(Integer iNumeroPaginacion) {
		this.iNumeroPaginacion= iNumeroPaginacion;
	}
	
	public Integer getiNumeroPaginacionPagina() {
		return iNumeroPaginacionPagina;
	}

	public void setiNumeroPaginacionPagina(Integer iNumeroPaginacionPagina) {
		this.iNumeroPaginacionPagina= iNumeroPaginacionPagina;
	}
	
	
	public Boolean getIsSeleccionarTodos() {
		return this.isSeleccionarTodos;
	}

	public void setIsSeleccionarTodos(Boolean isSeleccionarTodos) {
		this.isSeleccionarTodos= isSeleccionarTodos;
	}
	
	public Boolean getEsControlTabla() {
		return this.esControlTabla;
	}

	public void setEsControlTabla(Boolean esControlTabla) {
		this.esControlTabla= esControlTabla;
	}
	
	public Boolean getIsSeleccionados() {
		return this.isSeleccionados;
	}

	public void setIsSeleccionados(Boolean isSeleccionados) {
		this.isSeleccionados= isSeleccionados;
	}
	
	public Boolean getIsPostAccionNuevo() {
		return this.isPostAccionNuevo;
	}

	public void setIsPostAccionNuevo(Boolean isPostAccionNuevo) {
		this.isPostAccionNuevo= isPostAccionNuevo;
	}
	
	public Boolean getIsPostAccionSinCerrar() {
		return this.isPostAccionSinCerrar;
	}

	public void setIsPostAccionSinCerrar(Boolean isPostAccionSinCerrar) {
		this.isPostAccionSinCerrar= isPostAccionSinCerrar;
	}
	
	public Boolean getIsPostAccionSinMensaje() {
		return this.isPostAccionSinMensaje;
	}

	public void setIsPostAccionSinMensaje(Boolean isPostAccionSinMensaje) {
		this.isPostAccionSinMensaje= isPostAccionSinMensaje;
	}
	
	public Boolean getConGraficoReporte() {
		return this.conGraficoReporte;
	}

	public void setConGraficoReporte(Boolean conGraficoReporte) {
		this.conGraficoReporte= conGraficoReporte;
	}
	
	
	public ArrayList<Reporte> gettiposArchivosReportes() {
		return this.tiposArchivosReportes;
	}
	
	public void settiposArchivosReportes(ArrayList<Reporte> tiposArchivosReportes) {
		this.tiposArchivosReportes = tiposArchivosReportes;
	}
	
	//TIPOS ARCHIVOS DINAMICOS
	public ArrayList<Reporte> gettiposArchivosReportesDinamico() {
		return this.tiposArchivosReportesDinamico;
	}
	
	public void settiposArchivosReportesDinamico(ArrayList<Reporte> tiposArchivosReportesDinamico) {
		this.tiposArchivosReportesDinamico = tiposArchivosReportesDinamico;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportes() {
		return this.tiposReportes;
	}
	
	public void settiposReportes(ArrayList<Reporte> tiposReportes) {
		this.tiposReportes = tiposReportes;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportesDinamico() {
		return this.tiposReportesDinamico;
	}
	
	public void settiposReportesDinamico(ArrayList<Reporte> tiposReportesDinamico) {
		this.tiposReportesDinamico = tiposReportesDinamico;
	}
	
	//TIPOS GRAFICOS REPORTES
	public ArrayList<Reporte> gettiposGraficosReportes() {
		return this.tiposGraficosReportes;
	}
	
	public void settiposGraficosReportes(ArrayList<Reporte> tiposGraficosReportes) {
		this.tiposGraficosReportes = tiposGraficosReportes;
	}
	
	public ArrayList<Reporte> gettiposPaginacion() {
		return this.tiposPaginacion;
	}
	
	public void settiposPaginacion(ArrayList<Reporte> tiposPaginacion) {
		this.tiposPaginacion = tiposPaginacion;
	}
	
	public ArrayList<Reporte> gettiposRelaciones() {
		return this.tiposRelaciones;
	}
	
	public void settiposRelaciones(ArrayList<Reporte> tiposRelaciones) {
		this.tiposRelaciones= tiposRelaciones;
	}
	
	public ArrayList<Reporte> gettiposAcciones() {
		return this.tiposAcciones;
	}
	
	public void settiposAcciones(ArrayList<Reporte> tiposAcciones) {
		this.tiposAcciones = tiposAcciones;
	}
	
	public ArrayList<Reporte> gettiposAccionesFormulario() {
		return this.tiposAccionesFormulario;
	}
	
	public void settiposAccionesFormulario(ArrayList<Reporte> tiposAccionesFormulario) {
		this.tiposAccionesFormulario = tiposAccionesFormulario;
	}
	
	public ArrayList<Reporte> gettiposSeleccionar() {
		return this.tiposSeleccionar;
	}
	
	public void settiposSeleccionar(ArrayList<Reporte> tiposSeleccionar) {
		this.tiposSeleccionar = tiposSeleccionar;
	}
	
	public ArrayList<Reporte> gettiposColumnasSelect() {
		return this.tiposColumnasSelect;
	}
	
	public void settiposColumnasSelect(ArrayList<Reporte> tiposColumnasSelect) {
		this.tiposColumnasSelect = tiposColumnasSelect;
	}
		
	public ArrayList<Reporte> gettiposRelacionesSelect() {
		return this.tiposRelacionesSelect;
	}
	
	public void settiposRelacionesSelect(ArrayList<Reporte> tiposRelacionesSelect) {
		this.tiposRelacionesSelect = tiposRelacionesSelect;
	}
	
	public Long getIIdUsuarioSesion() {
		return lIdUsuarioSesion;
	}

	public void setIIdUsuarioSesion(Long lIdUsuarioSesion) {
		this.lIdUsuarioSesion = lIdUsuarioSesion;
	}
	
	
	public List<Accion> getAccions() {
		return this.accions;
	}

	public void setAccions(List<Accion> accions) {
		this.accions = accions;
	}
	
	public List<Accion> getAccionsFormulario() {
		return this.accionsFormulario;
	}

	public void setAccionsFormulario(List<Accion> accionsFormulario) {
		this.accionsFormulario = accionsFormulario;
	}
	
	public String getsAccionMantenimiento() {
		return sAccionMantenimiento;
	}

	public void setsAccionMantenimiento(String sAccionMantenimiento) {
		this.sAccionMantenimiento = sAccionMantenimiento;
	}

	public String getsAccionBusqueda() {
		return sAccionBusqueda;
	}

	public void setsAccionBusqueda(String sAccionBusqueda) {
		this.sAccionBusqueda = sAccionBusqueda;
	}

	public String getsAccionAdicional() {
		return sAccionAdicional;
	}

	public void setsAccionAdicional(String sAccionAdicional) {
		this.sAccionAdicional = sAccionAdicional;
	}

	public String getsUltimaBusqueda() {
		return sUltimaBusqueda;
	}

	public void setsUltimaBusqueda(String sUltimaBusqueda) {
		this.sUltimaBusqueda = sUltimaBusqueda;
	}
	
	public String getsTipoArchivoReporte() {
		return sTipoArchivoReporte;
	}

	public void setsTipoArchivoReporte(String sTipoArchivoReporte) {
		this.sTipoArchivoReporte = sTipoArchivoReporte;
	}
	
	public String getsTipoArchivoReporteDinamico() {
		return sTipoArchivoReporteDinamico;
	}

	public void setsTipoArchivoReporteDinamico(String sTipoArchivoReporteDinamico) {
		this.sTipoArchivoReporteDinamico = sTipoArchivoReporteDinamico;
	}
	
	public String getsTipoReporte() {
		return sTipoReporte;
	}

	public void setsTipoReporte(String sTipoReporte) {
		this.sTipoReporte = sTipoReporte;
	}
	
	public String getsTipoReporteDinamico() {
		return sTipoReporteDinamico;
	}

	public void setsTipoReporteDinamico(String sTipoReporteDinamico) {
		this.sTipoReporteDinamico = sTipoReporteDinamico;
	}
	
	public String getsTipoGraficoReporte() {
		return sTipoGraficoReporte;
	}

	public void setsTipoGraficoReporte(String sTipoGraficoReporte) {
		this.sTipoGraficoReporte = sTipoGraficoReporte;
	}
	
	public String getsTipoPaginacion() {
		return sTipoPaginacion;
	}

	public void setsTipoPaginacion(String sTipoPaginacion) {
		this.sTipoPaginacion = sTipoPaginacion;
	}
	
	public String getsTipoRelacion() {
		return sTipoRelacion;
	}

	public void setsTipoRelacion(String sTipoRelacion) {
		this.sTipoRelacion = sTipoRelacion;
	}
	
	public String getsTipoAccion() {
		return sTipoAccion;
	}

	public void setsTipoAccion(String sTipoAccion) {
		this.sTipoAccion = sTipoAccion;
	}
	
	public String getsTipoAccionFormulario() {
		return sTipoAccionFormulario;
	}

	public void setsTipoAccionFormulario(String sTipoAccionFormulario) {
		this.sTipoAccionFormulario = sTipoAccionFormulario;
	}
	
	public String getsTipoSeleccionar() {
		return sTipoSeleccionar;
	}

	public void setsTipoSeleccionar(String sTipoSeleccionar) {
		this.sTipoSeleccionar = sTipoSeleccionar;
	}
	
	public String getsValorCampoGeneral() {
		return sValorCampoGeneral;
	}

	public void setsValorCampoGeneral(String sValorCampoGeneral) {
		this.sValorCampoGeneral = sValorCampoGeneral;
	}			

	public String getsDetalleReporte() {
		return sDetalleReporte;
	}

	public void setsDetalleReporte(String sDetalleReporte) {
		this.sDetalleReporte = sDetalleReporte;
	}
	
	
	public String getsTipoReporteExtra() {
		return sTipoReporteExtra;
	}

	public void setsTipoReporteExtra(String sTipoReporteExtra) {
		this.sTipoReporteExtra = sTipoReporteExtra;
	}
	
	public Boolean getesReporteDinamico() {
		return esReporteDinamico;
	}	
	
	public void setesReporteDinamico(Boolean esReporteDinamico) {
		this.esReporteDinamico = esReporteDinamico;
	}
	
	public Boolean getesRecargarFks() {
		return esRecargarFks;
	}	
	
	public void setesRecargarFks(Boolean esRecargarFks) {
		this.esRecargarFks = esRecargarFks;
	}
	
	public Boolean getesReporteAccionProceso() {
		return esReporteAccionProceso;
	}	
	
	public void setesReporteAccionProceso(Boolean esReporteAccionProceso) {
		this.esReporteAccionProceso= esReporteAccionProceso;
	}
		
	public ProductoParameterReturnGeneral getProductoParameterGeneral() {
		return this.productoParameterGeneral;
	}
	
	public void setProductoParameterGeneral(ProductoParameterReturnGeneral productoParameterGeneral) {
		this.productoParameterGeneral = productoParameterGeneral;
	}
	
	public String getsPathReporteDinamico() {
		return sPathReporteDinamico;
	}

	public void setsPathReporteDinamico(String sPathReporteDinamico) {
		this.sPathReporteDinamico = sPathReporteDinamico;
	}
		
	public Boolean getisMostrarNumeroPaginacion() {
		return isMostrarNumeroPaginacion;
	}

	public void setisMostrarNumeroPaginacion(Boolean isMostrarNumeroPaginacion) {
		this.isMostrarNumeroPaginacion = isMostrarNumeroPaginacion;
	}
	
	public Mensaje getMensaje() {
		return mensaje;
	}

	public void setMensaje(Mensaje mensaje) {
		this.mensaje = mensaje;
	}
	
	public Boolean getIsPermisoTodoProducto() {
		return isPermisoTodoProducto;
	}

	public void setIsPermisoTodoProducto(Boolean isPermisoTodoProducto) {
		this.isPermisoTodoProducto = isPermisoTodoProducto;
	}

	public Boolean getIsPermisoNuevoProducto() {
		return isPermisoNuevoProducto;
	}

	public void setIsPermisoNuevoProducto(Boolean isPermisoNuevoProducto) {
		this.isPermisoNuevoProducto = isPermisoNuevoProducto;
	}

	public Boolean getIsPermisoActualizarProducto() {
		return isPermisoActualizarProducto;
	}

	public void setIsPermisoActualizarProducto(Boolean isPermisoActualizarProducto) {
		this.isPermisoActualizarProducto = isPermisoActualizarProducto;
	}

	public Boolean getIsPermisoEliminarProducto() {
		return isPermisoEliminarProducto;
	}

	public void setIsPermisoEliminarProducto(Boolean isPermisoEliminarProducto) {
		this.isPermisoEliminarProducto = isPermisoEliminarProducto;
	}

	public Boolean getIsPermisoGuardarCambiosProducto() {
		return isPermisoGuardarCambiosProducto;
	}

	public void setIsPermisoGuardarCambiosProducto(Boolean isPermisoGuardarCambiosProducto) {
		this.isPermisoGuardarCambiosProducto = isPermisoGuardarCambiosProducto;
	}
	
	public Boolean getIsPermisoConsultaProducto() {
		return isPermisoConsultaProducto;
	}

	public void setIsPermisoConsultaProducto(Boolean isPermisoConsultaProducto) {
		this.isPermisoConsultaProducto = isPermisoConsultaProducto;
	}

	public Boolean getIsPermisoBusquedaProducto() {
		return isPermisoBusquedaProducto;
	}

	public void setIsPermisoBusquedaProducto(Boolean isPermisoBusquedaProducto) {
		this.isPermisoBusquedaProducto = isPermisoBusquedaProducto;
	}

	public Boolean getIsPermisoReporteProducto() {
		return isPermisoReporteProducto;
	}

	public void setIsPermisoReporteProducto(Boolean isPermisoReporteProducto) {
		this.isPermisoReporteProducto = isPermisoReporteProducto;
	}
	
	public Boolean getIsPermisoPaginacionMedioProducto() {
		return isPermisoPaginacionMedioProducto;
	}

	public void setIsPermisoPaginacionMedioProducto(Boolean isPermisoPaginacionMedioProducto) {
		this.isPermisoPaginacionMedioProducto = isPermisoPaginacionMedioProducto;
	}
	
	public Boolean getIsPermisoPaginacionTodoProducto() {
		return isPermisoPaginacionTodoProducto;
	}

	public void setIsPermisoPaginacionTodoProducto(Boolean isPermisoPaginacionTodoProducto) {
		this.isPermisoPaginacionTodoProducto = isPermisoPaginacionTodoProducto;
	}
	
	public Boolean getIsPermisoPaginacionAltoProducto() {
		return isPermisoPaginacionAltoProducto;
	}

	public void setIsPermisoPaginacionAltoProducto(Boolean isPermisoPaginacionAltoProducto) {
		this.isPermisoPaginacionAltoProducto = isPermisoPaginacionAltoProducto;
	}
	
	public Boolean getIsPermisoCopiarProducto() {
		return isPermisoCopiarProducto;
	}

	public void setIsPermisoCopiarProducto(Boolean isPermisoCopiarProducto) {
		this.isPermisoCopiarProducto = isPermisoCopiarProducto;
	}
	
	public Boolean getIsPermisoVerFormProducto() {
		return isPermisoVerFormProducto;
	}

	public void setIsPermisoVerFormProducto(Boolean isPermisoVerFormProducto) {
		this.isPermisoVerFormProducto = isPermisoVerFormProducto;
	}
	
	public Boolean getIsPermisoDuplicarProducto() {
		return isPermisoDuplicarProducto;
	}

	public void setIsPermisoDuplicarProducto(Boolean isPermisoDuplicarProducto) {
		this.isPermisoDuplicarProducto = isPermisoDuplicarProducto;
	}
	
	public Boolean getIsPermisoOrdenProducto() {
		return isPermisoOrdenProducto;
	}

	public void setIsPermisoOrdenProducto(Boolean isPermisoOrdenProducto) {
		this.isPermisoOrdenProducto = isPermisoOrdenProducto;
	}
	
	public String getsVisibilidadTablaBusquedas() {
		return sVisibilidadTablaBusquedas;
	}

	public void setsVisibilidadTablaBusquedas(String sVisibilidadTablaBusquedas) {
		this.sVisibilidadTablaBusquedas = sVisibilidadTablaBusquedas;
	}
	
	public String getsVisibilidadTablaElementos() {
		return sVisibilidadTablaElementos;
	}

	public void setsVisibilidadTablaElementos(String sVisibilidadTablaElementos) {
		this.sVisibilidadTablaElementos = sVisibilidadTablaElementos;
	}

	public String getsVisibilidadTablaAcciones() {
		return sVisibilidadTablaAcciones;
	}

	public void setsVisibilidadTablaAcciones(String sVisibilidadTablaAcciones) {
		this.sVisibilidadTablaAcciones = sVisibilidadTablaAcciones;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoProducto() {
		return isVisibilidadCeldaNuevoProducto;
	}

	public void setIsVisibilidadCeldaNuevoProducto(Boolean isVisibilidadCeldaNuevoProducto) {
		this.isVisibilidadCeldaNuevoProducto = isVisibilidadCeldaNuevoProducto;
	}
	
	public Boolean getIsVisibilidadCeldaDuplicarProducto() {
		return isVisibilidadCeldaDuplicarProducto;
	}

	public void setIsVisibilidadCeldaDuplicarProducto(Boolean isVisibilidadCeldaDuplicarProducto) {
		this.isVisibilidadCeldaDuplicarProducto = isVisibilidadCeldaDuplicarProducto;
	}
	
	public Boolean getIsVisibilidadCeldaCopiarProducto() {
		return isVisibilidadCeldaCopiarProducto;
	}

	public void setIsVisibilidadCeldaCopiarProducto(Boolean isVisibilidadCeldaCopiarProducto) {
		this.isVisibilidadCeldaCopiarProducto = isVisibilidadCeldaCopiarProducto;
	}
	
	public Boolean getIsVisibilidadCeldaVerFormProducto() {
		return isVisibilidadCeldaVerFormProducto;
	}

	public void setIsVisibilidadCeldaVerFormProducto(Boolean isVisibilidadCeldaVerFormProducto) {
		this.isVisibilidadCeldaVerFormProducto = isVisibilidadCeldaVerFormProducto;
	}
	
	public Boolean getIsVisibilidadCeldaOrdenProducto() {
		return isVisibilidadCeldaOrdenProducto;
	}

	public void setIsVisibilidadCeldaOrdenProducto(Boolean isVisibilidadCeldaOrdenProducto) {
		this.isVisibilidadCeldaOrdenProducto = isVisibilidadCeldaOrdenProducto;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoRelacionesProducto() {
		return isVisibilidadCeldaNuevoRelacionesProducto;
	}

	public void setIsVisibilidadCeldaNuevoRelacionesProducto(Boolean isVisibilidadCeldaNuevoRelacionesProducto) {
		this.isVisibilidadCeldaNuevoRelacionesProducto = isVisibilidadCeldaNuevoRelacionesProducto;
	}
	
	public Boolean getIsVisibilidadCeldaModificarProducto() {
		return isVisibilidadCeldaModificarProducto;
	}

	public void setIsVisibilidadCeldaModificarProducto(Boolean isVisibilidadCeldaModificarProducto) {
		this.isVisibilidadCeldaModificarProducto = isVisibilidadCeldaModificarProducto;
	}
	
	public Boolean getIsVisibilidadCeldaActualizarProducto() {
		return isVisibilidadCeldaActualizarProducto;
	}

	public void setIsVisibilidadCeldaActualizarProducto(Boolean isVisibilidadCeldaActualizarProducto) {
		this.isVisibilidadCeldaActualizarProducto = isVisibilidadCeldaActualizarProducto;
	}

	public Boolean getIsVisibilidadCeldaEliminarProducto() {
		return isVisibilidadCeldaEliminarProducto;
	}

	public void setIsVisibilidadCeldaEliminarProducto(Boolean isVisibilidadCeldaEliminarProducto) {
		this.isVisibilidadCeldaEliminarProducto = isVisibilidadCeldaEliminarProducto;
	}

	public Boolean getIsVisibilidadCeldaCancelarProducto() {
		return isVisibilidadCeldaCancelarProducto;
	}

	public void setIsVisibilidadCeldaCancelarProducto(Boolean isVisibilidadCeldaCancelarProducto) {
		this.isVisibilidadCeldaCancelarProducto = isVisibilidadCeldaCancelarProducto;
	}

	public Boolean getIsVisibilidadCeldaGuardarProducto() {
		return isVisibilidadCeldaGuardarProducto;
	}

	public void setIsVisibilidadCeldaGuardarProducto(Boolean isVisibilidadCeldaGuardarProducto) {
		this.isVisibilidadCeldaGuardarProducto = isVisibilidadCeldaGuardarProducto;
	}
	
	public Boolean getIsVisibilidadCeldaGuardarCambiosProducto() {
		return isVisibilidadCeldaGuardarCambiosProducto;
	}

	public void setIsVisibilidadCeldaGuardarCambiosProducto(Boolean isVisibilidadCeldaGuardarCambiosProducto) {
		this.isVisibilidadCeldaGuardarCambiosProducto = isVisibilidadCeldaGuardarCambiosProducto;
	}
		
	public ProductoSessionBean getproductoSessionBean() {
		return this.productoSessionBean;
	}
	
	public void setproductoSessionBean(ProductoSessionBean productoSessionBean) {
		this.productoSessionBean=productoSessionBean;
	}
	
	
	public Boolean getisVisibilidadBusquedaPorCodigo() {
		return this.isVisibilidadBusquedaPorCodigo;
	}

	public void setisVisibilidadBusquedaPorCodigo(Boolean isVisibilidadBusquedaPorCodigo) {
		this.isVisibilidadBusquedaPorCodigo=isVisibilidadBusquedaPorCodigo;
	}

	public Boolean getisVisibilidadBusquedaPorNombre() {
		return this.isVisibilidadBusquedaPorNombre;
	}

	public void setisVisibilidadBusquedaPorNombre(Boolean isVisibilidadBusquedaPorNombre) {
		this.isVisibilidadBusquedaPorNombre=isVisibilidadBusquedaPorNombre;
	}

	public Boolean getisVisibilidadBusquedaPorNombreExtranjero() {
		return this.isVisibilidadBusquedaPorNombreExtranjero;
	}

	public void setisVisibilidadBusquedaPorNombreExtranjero(Boolean isVisibilidadBusquedaPorNombreExtranjero) {
		this.isVisibilidadBusquedaPorNombreExtranjero=isVisibilidadBusquedaPorNombreExtranjero;
	}

	public Boolean getisVisibilidadFK_IdArancel() {
		return this.isVisibilidadFK_IdArancel;
	}

	public void setisVisibilidadFK_IdArancel(Boolean isVisibilidadFK_IdArancel) {
		this.isVisibilidadFK_IdArancel=isVisibilidadFK_IdArancel;
	}

	public Boolean getisVisibilidadFK_IdClaseProducto() {
		return this.isVisibilidadFK_IdClaseProducto;
	}

	public void setisVisibilidadFK_IdClaseProducto(Boolean isVisibilidadFK_IdClaseProducto) {
		this.isVisibilidadFK_IdClaseProducto=isVisibilidadFK_IdClaseProducto;
	}

	public Boolean getisVisibilidadFK_IdCliente() {
		return this.isVisibilidadFK_IdCliente;
	}

	public void setisVisibilidadFK_IdCliente(Boolean isVisibilidadFK_IdCliente) {
		this.isVisibilidadFK_IdCliente=isVisibilidadFK_IdCliente;
	}

	public Boolean getisVisibilidadFK_IdClienteProveedorDefecto() {
		return this.isVisibilidadFK_IdClienteProveedorDefecto;
	}

	public void setisVisibilidadFK_IdClienteProveedorDefecto(Boolean isVisibilidadFK_IdClienteProveedorDefecto) {
		this.isVisibilidadFK_IdClienteProveedorDefecto=isVisibilidadFK_IdClienteProveedorDefecto;
	}

	public Boolean getisVisibilidadFK_IdColorProducto() {
		return this.isVisibilidadFK_IdColorProducto;
	}

	public void setisVisibilidadFK_IdColorProducto(Boolean isVisibilidadFK_IdColorProducto) {
		this.isVisibilidadFK_IdColorProducto=isVisibilidadFK_IdColorProducto;
	}

	public Boolean getisVisibilidadFK_IdEfectoProducto() {
		return this.isVisibilidadFK_IdEfectoProducto;
	}

	public void setisVisibilidadFK_IdEfectoProducto(Boolean isVisibilidadFK_IdEfectoProducto) {
		this.isVisibilidadFK_IdEfectoProducto=isVisibilidadFK_IdEfectoProducto;
	}

	public Boolean getisVisibilidadFK_IdEmpresa() {
		return this.isVisibilidadFK_IdEmpresa;
	}

	public void setisVisibilidadFK_IdEmpresa(Boolean isVisibilidadFK_IdEmpresa) {
		this.isVisibilidadFK_IdEmpresa=isVisibilidadFK_IdEmpresa;
	}

	public Boolean getisVisibilidadFK_IdLinea() {
		return this.isVisibilidadFK_IdLinea;
	}

	public void setisVisibilidadFK_IdLinea(Boolean isVisibilidadFK_IdLinea) {
		this.isVisibilidadFK_IdLinea=isVisibilidadFK_IdLinea;
	}

	public Boolean getisVisibilidadFK_IdLineaCategoria() {
		return this.isVisibilidadFK_IdLineaCategoria;
	}

	public void setisVisibilidadFK_IdLineaCategoria(Boolean isVisibilidadFK_IdLineaCategoria) {
		this.isVisibilidadFK_IdLineaCategoria=isVisibilidadFK_IdLineaCategoria;
	}

	public Boolean getisVisibilidadFK_IdLineaGrupo() {
		return this.isVisibilidadFK_IdLineaGrupo;
	}

	public void setisVisibilidadFK_IdLineaGrupo(Boolean isVisibilidadFK_IdLineaGrupo) {
		this.isVisibilidadFK_IdLineaGrupo=isVisibilidadFK_IdLineaGrupo;
	}

	public Boolean getisVisibilidadFK_IdLineaMarca() {
		return this.isVisibilidadFK_IdLineaMarca;
	}

	public void setisVisibilidadFK_IdLineaMarca(Boolean isVisibilidadFK_IdLineaMarca) {
		this.isVisibilidadFK_IdLineaMarca=isVisibilidadFK_IdLineaMarca;
	}

	public Boolean getisVisibilidadFK_IdMarcaProducto() {
		return this.isVisibilidadFK_IdMarcaProducto;
	}

	public void setisVisibilidadFK_IdMarcaProducto(Boolean isVisibilidadFK_IdMarcaProducto) {
		this.isVisibilidadFK_IdMarcaProducto=isVisibilidadFK_IdMarcaProducto;
	}

	public Boolean getisVisibilidadFK_IdMaterialProducto() {
		return this.isVisibilidadFK_IdMaterialProducto;
	}

	public void setisVisibilidadFK_IdMaterialProducto(Boolean isVisibilidadFK_IdMaterialProducto) {
		this.isVisibilidadFK_IdMaterialProducto=isVisibilidadFK_IdMaterialProducto;
	}

	public Boolean getisVisibilidadFK_IdModeloProducto() {
		return this.isVisibilidadFK_IdModeloProducto;
	}

	public void setisVisibilidadFK_IdModeloProducto(Boolean isVisibilidadFK_IdModeloProducto) {
		this.isVisibilidadFK_IdModeloProducto=isVisibilidadFK_IdModeloProducto;
	}

	public Boolean getisVisibilidadFK_IdSegmentoProducto() {
		return this.isVisibilidadFK_IdSegmentoProducto;
	}

	public void setisVisibilidadFK_IdSegmentoProducto(Boolean isVisibilidadFK_IdSegmentoProducto) {
		this.isVisibilidadFK_IdSegmentoProducto=isVisibilidadFK_IdSegmentoProducto;
	}

	public Boolean getisVisibilidadFK_IdSucursal() {
		return this.isVisibilidadFK_IdSucursal;
	}

	public void setisVisibilidadFK_IdSucursal(Boolean isVisibilidadFK_IdSucursal) {
		this.isVisibilidadFK_IdSucursal=isVisibilidadFK_IdSucursal;
	}

	public Boolean getisVisibilidadFK_IdTallaProducto() {
		return this.isVisibilidadFK_IdTallaProducto;
	}

	public void setisVisibilidadFK_IdTallaProducto(Boolean isVisibilidadFK_IdTallaProducto) {
		this.isVisibilidadFK_IdTallaProducto=isVisibilidadFK_IdTallaProducto;
	}

	public Boolean getisVisibilidadFK_IdTipoCosteo() {
		return this.isVisibilidadFK_IdTipoCosteo;
	}

	public void setisVisibilidadFK_IdTipoCosteo(Boolean isVisibilidadFK_IdTipoCosteo) {
		this.isVisibilidadFK_IdTipoCosteo=isVisibilidadFK_IdTipoCosteo;
	}

	public Boolean getisVisibilidadFK_IdTipoProducto() {
		return this.isVisibilidadFK_IdTipoProducto;
	}

	public void setisVisibilidadFK_IdTipoProducto(Boolean isVisibilidadFK_IdTipoProducto) {
		this.isVisibilidadFK_IdTipoProducto=isVisibilidadFK_IdTipoProducto;
	}

	public Boolean getisVisibilidadFK_IdTipoProductoServicio() {
		return this.isVisibilidadFK_IdTipoProductoServicio;
	}

	public void setisVisibilidadFK_IdTipoProductoServicio(Boolean isVisibilidadFK_IdTipoProductoServicio) {
		this.isVisibilidadFK_IdTipoProductoServicio=isVisibilidadFK_IdTipoProductoServicio;
	}

	public Boolean getisVisibilidadFK_IdTipoProductoServicioInven() {
		return this.isVisibilidadFK_IdTipoProductoServicioInven;
	}

	public void setisVisibilidadFK_IdTipoProductoServicioInven(Boolean isVisibilidadFK_IdTipoProductoServicioInven) {
		this.isVisibilidadFK_IdTipoProductoServicioInven=isVisibilidadFK_IdTipoProductoServicioInven;
	}

	public Boolean getisVisibilidadFK_IdUnidad() {
		return this.isVisibilidadFK_IdUnidad;
	}

	public void setisVisibilidadFK_IdUnidad(Boolean isVisibilidadFK_IdUnidad) {
		this.isVisibilidadFK_IdUnidad=isVisibilidadFK_IdUnidad;
	}

	public Boolean getisVisibilidadFK_IdUnidadPeso() {
		return this.isVisibilidadFK_IdUnidadPeso;
	}

	public void setisVisibilidadFK_IdUnidadPeso(Boolean isVisibilidadFK_IdUnidadPeso) {
		this.isVisibilidadFK_IdUnidadPeso=isVisibilidadFK_IdUnidadPeso;
	}

	
	
	public void setVariablesFormularioToObjetoActualForeignKeysProducto(Producto producto)throws Exception {
		try {
			
				this.setActualParaGuardarEmpresaForeignKey(producto,null);
				this.setActualParaGuardarSucursalForeignKey(producto,null);
				this.setActualParaGuardarLineaForeignKey(producto,null);
				this.setActualParaGuardarLineaGrupoForeignKey(producto,null);
				this.setActualParaGuardarLineaCategoriaForeignKey(producto,null);
				this.setActualParaGuardarLineaMarcaForeignKey(producto,null);
				this.setActualParaGuardarTipoProductoServicioForeignKey(producto,null);
				this.setActualParaGuardarTipoProductoServicioInvenForeignKey(producto,null);
				this.setActualParaGuardarTipoCosteoForeignKey(producto,null);
				this.setActualParaGuardarUnidadForeignKey(producto,null);
				this.setActualParaGuardarUnidadPesoForeignKey(producto,null);
				this.setActualParaGuardarArancelForeignKey(producto,null);
				this.setActualParaGuardarClienteForeignKey(producto,null);
				this.setActualParaGuardarClienteProveedorDefectoForeignKey(producto,null);
				this.setActualParaGuardarTipoProductoForeignKey(producto,null);
				this.setActualParaGuardarColorProductoForeignKey(producto,null);
				this.setActualParaGuardarClaseProductoForeignKey(producto,null);
				this.setActualParaGuardarEfectoProductoForeignKey(producto,null);
				this.setActualParaGuardarMarcaProductoForeignKey(producto,null);
				this.setActualParaGuardarModeloProductoForeignKey(producto,null);
				this.setActualParaGuardarMaterialProductoForeignKey(producto,null);
				this.setActualParaGuardarSegmentoProductoForeignKey(producto,null);
				this.setActualParaGuardarTallaProductoForeignKey(producto,null);
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarLicenciaCliente(DatosCliente datosCliente) throws Exception {
		Boolean existe=false;
			
		try {
				InputStream reportFile=null;
				
				String sPath=this.parametroGeneralUsuario.getpath_exportar()+"erp_bydan/license/license.xml";
				
				reportFile = new FileInputStream(sPath);
				
				Document documentBuilder=null;
				
				if(this.constantes2.DOCUMENT_BUILDER==null) {
					documentBuilder=Funciones2.parseXml(reportFile);
				} else {
					documentBuilder=this.constantes2.DOCUMENT_BUILDER;
				}
				
				//GlobalSeguridad.readXml(documentBuilder);
				
				String sNamePCServerLicencia="";
				String sClaveSistemaLicencia="";
				Date dFechaServerLicencia=null;
				
				//CARGAR ELEMENTOS DE LICENCIA
				NodeList nodeList = documentBuilder.getElementsByTagName("Licencia");
				
				for (int iIndice = 0; iIndice < nodeList.getLength(); iIndice++) {
					Node node = nodeList.item(iIndice);
				
					if (node.getNodeType() == Node.ELEMENT_NODE) {
						Element element = (Element) node;
						 
						sNamePCServerLicencia=element.getElementsByTagName("NombrePc").item(0).getTextContent();
						sClaveSistemaLicencia=element.getElementsByTagName("ClaveSistema").item(0).getTextContent();
						
						existe=true;
						break;
					}
				}														
			
				
			if(existe) {
				datosCliente.setsClaveSistema(sClaveSistemaLicencia);
				
				if(!datosCliente.getsNamePCServer().equals(sNamePCServerLicencia)
					&& !datosCliente.getsNamePCServer().equals("")) {
					
					datosCliente.setsNamePCServer(sNamePCServerLicencia);
				}
			} else {
				throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
			}
		} catch(Exception e) {
			throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
		}						
	}
	
	public void cargarDatosCliente() throws Exception {
		String sPrimerMacAddress="";		
		String sHostName="";		 
		String sHostIp="";		  
		String sHostUser="";
		
		
		sPrimerMacAddress=FuncionesNetwork.getPrimerMacAddress();		
		sHostName=FuncionesNetwork.getHostName();		 
		sHostIp=FuncionesNetwork.getHostIp();		  
		sHostUser=FuncionesNetwork.getHostUser();
		
		
		this.datosCliente=new DatosCliente();
		if(lIdUsuarioSesion!=null){datosCliente.setIdUsuario(this.lIdUsuarioSesion);}
		
		//SERVIDOR WEB Y TALVEZ SERVIDOR SWING WINDOWS
		this.datosCliente.setsUsuarioPCServer(sHostUser);
		this.datosCliente.setsNamePCServer(sHostName);
		this.datosCliente.setsIPPCServer(sHostIp);
		this.datosCliente.setsMacAddressPCServer(sPrimerMacAddress);
			
			//CLIENTE SWING WINDOWS
			this.datosCliente.setIsClienteWeb(false);
			
			this.datosCliente.setsUsuarioPC(sHostUser);
			this.datosCliente.setsNamePC(sHostName);
			this.datosCliente.setsIPPC(sHostIp);
			this.datosCliente.setsMacAddressPC(sPrimerMacAddress);	
			
			
			//this.cargarLicenciaCliente(this.datosCliente);
			
	}
	
	public void bugActualizarReferenciaActual(Producto producto,Producto productoAux) throws Exception {
		//ARCHITECTURE		
		//EL ID NEGATIVO GUARDADO EN ORIGINAL SIRVE PARA VERIFICAR Y ACTUALIZAR EL REGISTRO NUEVO (ID,VERSIONROW)
		this.setCamposBaseDesdeOriginalProducto(producto);
					
		//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
		productoAux.setId(producto.getId());
		productoAux.setVersionRow(producto.getVersionRow());					
	}
	
	public void ejecutarMantenimiento(MaintenanceType maintenanceType)throws Exception {	
		try	{								
			
			//this.startProcessProducto();
		
			int intSelectedRow = this.jTableDatosProducto.getSelectedRow();	       
			
			//PUEDE SER -1 CUANDO SE ELIMINA EN GUARDAR CAMBIOS
			if(intSelectedRow>=0 && maintenanceType!=MaintenanceType.GUARDARCAMBIOS) {
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
					
				//ARCHITECTURE
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
					this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
				}
				
				//ARCHITECTURE
				
				if(ProductoJInternalFrame.ISBINDING_MANUAL_TABLA) {
					//this.setVariablesFormularioToObjetoActualProducto(this.producto,true);
				}
				
				this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
			}
			
			//LUEGO DE TRAER DATOS CORRESPONDIENTES QUE COINCIDA LISTA TABLA QUITO FILA TOTALES
			if(this.conTotales) {
				//MEJOR LO DEJO, SI EXISTE EXCEPCION SE PIEDE FILA TOTALES Y ORDEN INDICE FILA ACTUAL
				//this.quitarFilaTotales();
			}
			
			this.cargarDatosCliente();
			
			this.datosDeep=new DatosDeep();
			
			//SE CAMBIA ESTADOS CON ERROR, ENTONCES SE EJECUTA ANTES
			//this.invalidValues = productoValidator.getInvalidValues(this.producto);
			
			//if(this.invalidValues==null || this.invalidValues.length<=0) {
			
			productoLogic.setDatosCliente(datosCliente);
			productoLogic.setIsConDeep(false);
			
			if(maintenanceType==MaintenanceType.NUEVO) {
				productoAux=new  Producto();
				
				productoAux.setIsNew(true);
				productoAux.setIsChanged(true);
				
				productoAux.setProductoOriginal(this.producto);
				
				productoAux.setId(this.producto.getId());	
				productoAux.setVersionRow(this.producto.getVersionRow());	
				productoAux.setid_empresa(this.producto.getid_empresa());	
				productoAux.setid_sucursal(this.producto.getid_sucursal());	
				productoAux.setcodigo(this.producto.getcodigo());	
				productoAux.setnombre(this.producto.getnombre());	
				productoAux.setnombre_extranjero(this.producto.getnombre_extranjero());	
				productoAux.setresumen_detalle(this.producto.getresumen_detalle());	
				productoAux.setcodigo_barra(this.producto.getcodigo_barra());	
				productoAux.setid_linea(this.producto.getid_linea());	
				productoAux.setid_linea_grupo(this.producto.getid_linea_grupo());	
				productoAux.setid_linea_categoria(this.producto.getid_linea_categoria());	
				productoAux.setid_linea_marca(this.producto.getid_linea_marca());	
				productoAux.setid_tipo_producto_servicio(this.producto.getid_tipo_producto_servicio());	
				productoAux.setid_tipo_producto_servicio_inven(this.producto.getid_tipo_producto_servicio_inven());	
				productoAux.setid_tipo_costeo(this.producto.getid_tipo_costeo());	
				productoAux.setid_unidad(this.producto.getid_unidad());	
				productoAux.setid_unidad_peso(this.producto.getid_unidad_peso());	
				productoAux.setid_arancel(this.producto.getid_arancel());	
				productoAux.setid_cliente(this.producto.getid_cliente());	
				productoAux.setid_cliente_proveedor_defecto(this.producto.getid_cliente_proveedor_defecto());	
				productoAux.setesta_activo(this.producto.getesta_activo());	
				productoAux.setdescripcion(this.producto.getdescripcion());	
				productoAux.setprecio(this.producto.getprecio());	
				productoAux.setiva(this.producto.getiva());	
				productoAux.setiva_valor(this.producto.getiva_valor());	
				productoAux.setice(this.producto.getice());	
				productoAux.setice_valor(this.producto.getice_valor());	
				productoAux.setdescuento(this.producto.getdescuento());	
				productoAux.setdescuento_valor(this.producto.getdescuento_valor());	
				productoAux.setarancel_porcentaje(this.producto.getarancel_porcentaje());	
				productoAux.setarancel_valor(this.producto.getarancel_valor());	
				productoAux.setcomision(this.producto.getcomision());	
				productoAux.setcomision_valor(this.producto.getcomision_valor());	
				productoAux.setdias_produccion(this.producto.getdias_produccion());	
				productoAux.setcon_stock_negativo(this.producto.getcon_stock_negativo());	
				productoAux.setcon_precio_minimo(this.producto.getcon_precio_minimo());	
				productoAux.setcon_lote(this.producto.getcon_lote());	
				productoAux.setcon_confirmacion(this.producto.getcon_confirmacion());	
				productoAux.setcon_presupuesto(this.producto.getcon_presupuesto());	
				productoAux.setcon_importacion(this.producto.getcon_importacion());	
				productoAux.setcon_final(this.producto.getcon_final());	
				productoAux.setcon_consep(this.producto.getcon_consep());	
				productoAux.setcon_serie(this.producto.getcon_serie());	
				productoAux.setcon_balanza(this.producto.getcon_balanza());	
				productoAux.setalto(this.producto.getalto());	
				productoAux.setancho(this.producto.getancho());	
				productoAux.setlargo(this.producto.getlargo());	
				productoAux.setvolumen(this.producto.getvolumen());	
				productoAux.setpeso(this.producto.getpeso());	
				productoAux.setgramos(this.producto.getgramos());	
				productoAux.setunidades_caja(this.producto.getunidades_caja());	
				productoAux.setmargen(this.producto.getmargen());	
				productoAux.setfactor(this.producto.getfactor());	
				productoAux.setfob(this.producto.getfob());	
				productoAux.setfob2(this.producto.getfob2());	
				productoAux.setid_tipo_producto(this.producto.getid_tipo_producto());	
				productoAux.setid_color_producto(this.producto.getid_color_producto());	
				productoAux.setid_clase_producto(this.producto.getid_clase_producto());	
				productoAux.setid_efecto_producto(this.producto.getid_efecto_producto());	
				productoAux.setid_marca_producto(this.producto.getid_marca_producto());	
				productoAux.setid_modelo_producto(this.producto.getid_modelo_producto());	
				productoAux.setid_material_producto(this.producto.getid_material_producto());	
				productoAux.setid_segmento_producto(this.producto.getid_segmento_producto());	
				productoAux.setid_talla_producto(this.producto.getid_talla_producto());	
				productoAux.setgrupo(this.producto.getgrupo());	
				productoAux.setreferencia(this.producto.getreferencia());	
				productoAux.setaplicacion(this.producto.getaplicacion());	
				productoAux.setprocedencia(this.producto.getprocedencia());	
								
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.productoSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.productoSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(productoAux,productoLogic.getProductos());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(productoAux,productos);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote  && !this.productoSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.productoSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						productoLogic.saveProductos();//WithConnection
						//productoLogic.getSetVersionRowProductos();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE		
					
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.producto,productoAux);
					
					this.refrescarForeignKeysDescripcionesProducto();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.productoSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
							this.jInternalFrameDetalleFormProducto.proveedorproductoBeanSwingJInternalFrame.proveedorproductoLogic.getProveedorProductos().addAll(this.jInternalFrameDetalleFormProducto.proveedorproductoBeanSwingJInternalFrame.proveedorproductosEliminados);
							this.jInternalFrameDetalleFormProducto.precioBeanSwingJInternalFrame.precioLogic.getPrecios().addAll(this.jInternalFrameDetalleFormProducto.precioBeanSwingJInternalFrame.preciosEliminados);
							this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenBeanSwingJInternalFrame.detalleimpuestoinvenLogic.getDetalleImpuestoInvens().addAll(this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenBeanSwingJInternalFrame.detalleimpuestoinvensEliminados);
							this.jInternalFrameDetalleFormProducto.presupuestoventasBeanSwingJInternalFrame.presupuestoventasLogic.getPresupuestoVentass().addAll(this.jInternalFrameDetalleFormProducto.presupuestoventasBeanSwingJInternalFrame.presupuestoventassEliminados);
							this.jInternalFrameDetalleFormProducto.politicaproductoBeanSwingJInternalFrame.politicaproductoLogic.getPoliticaProductos().addAll(this.jInternalFrameDetalleFormProducto.politicaproductoBeanSwingJInternalFrame.politicaproductosEliminados);
							this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame.serieproductoLogic.getSerieProductos().addAll(this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame.serieproductosEliminados);
							this.jInternalFrameDetalleFormProducto.ubicacionproduBeanSwingJInternalFrame.ubicacionproduLogic.getUbicacionProdus().addAll(this.jInternalFrameDetalleFormProducto.ubicacionproduBeanSwingJInternalFrame.ubicacionprodusEliminados);
							this.jInternalFrameDetalleFormProducto.parametroproductoBeanSwingJInternalFrame.parametroproductoLogic.getParametroProductos().addAll(this.jInternalFrameDetalleFormProducto.parametroproductoBeanSwingJInternalFrame.parametroproductosEliminados);
							this.jInternalFrameDetalleFormProducto.productounidadBeanSwingJInternalFrame.productounidadLogic.getProductoUnidads().addAll(this.jInternalFrameDetalleFormProducto.productounidadBeanSwingJInternalFrame.productounidadsEliminados);
							this.jInternalFrameDetalleFormProducto.ingredienteBeanSwingJInternalFrame.ingredienteLogic.getIngredientes().addAll(this.jInternalFrameDetalleFormProducto.ingredienteBeanSwingJInternalFrame.ingredientesEliminados);
							this.jInternalFrameDetalleFormProducto.productocaracBeanSwingJInternalFrame.productocaracLogic.getProductoCaracs().addAll(this.jInternalFrameDetalleFormProducto.productocaracBeanSwingJInternalFrame.productocaracsEliminados);
							this.jInternalFrameDetalleFormProducto.servicioclienteBeanSwingJInternalFrame.servicioclienteLogic.getServicioClientes().addAll(this.jInternalFrameDetalleFormProducto.servicioclienteBeanSwingJInternalFrame.servicioclientesEliminados);
							this.jInternalFrameDetalleFormProducto.productopromocionBeanSwingJInternalFrame.productopromocionLogic.getProductoPromocions().addAll(this.jInternalFrameDetalleFormProducto.productopromocionBeanSwingJInternalFrame.productopromocionsEliminados);
							this.jInternalFrameDetalleFormProducto.productoespeciBeanSwingJInternalFrame.productoespeciLogic.getProductoEspecis().addAll(this.jInternalFrameDetalleFormProducto.productoespeciBeanSwingJInternalFrame.productoespecisEliminados);
							this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame.productoreemplaLogic.getProductoReemplas().addAll(this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame.productoreemplasEliminados);
							this.jInternalFrameDetalleFormProducto.productoestadisticaBeanSwingJInternalFrame.productoestadisticaLogic.getProductoEstadisticas().addAll(this.jInternalFrameDetalleFormProducto.productoestadisticaBeanSwingJInternalFrame.productoestadisticasEliminados);
							this.jInternalFrameDetalleFormProducto.politicafactuBeanSwingJInternalFrame.politicafactuLogic.getPoliticaFactus().addAll(this.jInternalFrameDetalleFormProducto.politicafactuBeanSwingJInternalFrame.politicafactusEliminados);
							this.jInternalFrameDetalleFormProducto.productocuentacontableBeanSwingJInternalFrame.productocuentacontableLogic.getProductoCuentaContables().addAll(this.jInternalFrameDetalleFormProducto.productocuentacontableBeanSwingJInternalFrame.productocuentacontablesEliminados);
							this.jInternalFrameDetalleFormProducto.bodegaproductoBeanSwingJInternalFrame.bodegaproductoLogic.getBodegaProductos().addAll(this.jInternalFrameDetalleFormProducto.bodegaproductoBeanSwingJInternalFrame.bodegaproductosEliminados);
							this.jInternalFrameDetalleFormProducto.presupuestoproductoBeanSwingJInternalFrame.presupuestoproductoLogic.getPresupuestoProductos().addAll(this.jInternalFrameDetalleFormProducto.presupuestoproductoBeanSwingJInternalFrame.presupuestoproductosEliminados);
							this.jInternalFrameDetalleFormProducto.saldomesproductoBeanSwingJInternalFrame.saldomesproductoLogic.getSaldoMesProductos().addAll(this.jInternalFrameDetalleFormProducto.saldomesproductoBeanSwingJInternalFrame.saldomesproductosEliminados);
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
							this.jInternalFrameDetalleFormProducto.proveedorproductoBeanSwingJInternalFrame.proveedorproductos.addAll(this.jInternalFrameDetalleFormProducto.proveedorproductoBeanSwingJInternalFrame.proveedorproductosEliminados);
							this.jInternalFrameDetalleFormProducto.precioBeanSwingJInternalFrame.precios.addAll(this.jInternalFrameDetalleFormProducto.precioBeanSwingJInternalFrame.preciosEliminados);
							this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenBeanSwingJInternalFrame.detalleimpuestoinvens.addAll(this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenBeanSwingJInternalFrame.detalleimpuestoinvensEliminados);
							this.jInternalFrameDetalleFormProducto.presupuestoventasBeanSwingJInternalFrame.presupuestoventass.addAll(this.jInternalFrameDetalleFormProducto.presupuestoventasBeanSwingJInternalFrame.presupuestoventassEliminados);
							this.jInternalFrameDetalleFormProducto.politicaproductoBeanSwingJInternalFrame.politicaproductos.addAll(this.jInternalFrameDetalleFormProducto.politicaproductoBeanSwingJInternalFrame.politicaproductosEliminados);
							this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame.serieproductos.addAll(this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame.serieproductosEliminados);
							this.jInternalFrameDetalleFormProducto.ubicacionproduBeanSwingJInternalFrame.ubicacionprodus.addAll(this.jInternalFrameDetalleFormProducto.ubicacionproduBeanSwingJInternalFrame.ubicacionprodusEliminados);
							this.jInternalFrameDetalleFormProducto.parametroproductoBeanSwingJInternalFrame.parametroproductos.addAll(this.jInternalFrameDetalleFormProducto.parametroproductoBeanSwingJInternalFrame.parametroproductosEliminados);
							this.jInternalFrameDetalleFormProducto.productounidadBeanSwingJInternalFrame.productounidads.addAll(this.jInternalFrameDetalleFormProducto.productounidadBeanSwingJInternalFrame.productounidadsEliminados);
							this.jInternalFrameDetalleFormProducto.ingredienteBeanSwingJInternalFrame.ingredientes.addAll(this.jInternalFrameDetalleFormProducto.ingredienteBeanSwingJInternalFrame.ingredientesEliminados);
							this.jInternalFrameDetalleFormProducto.productocaracBeanSwingJInternalFrame.productocaracs.addAll(this.jInternalFrameDetalleFormProducto.productocaracBeanSwingJInternalFrame.productocaracsEliminados);
							this.jInternalFrameDetalleFormProducto.servicioclienteBeanSwingJInternalFrame.servicioclientes.addAll(this.jInternalFrameDetalleFormProducto.servicioclienteBeanSwingJInternalFrame.servicioclientesEliminados);
							this.jInternalFrameDetalleFormProducto.productopromocionBeanSwingJInternalFrame.productopromocions.addAll(this.jInternalFrameDetalleFormProducto.productopromocionBeanSwingJInternalFrame.productopromocionsEliminados);
							this.jInternalFrameDetalleFormProducto.productoespeciBeanSwingJInternalFrame.productoespecis.addAll(this.jInternalFrameDetalleFormProducto.productoespeciBeanSwingJInternalFrame.productoespecisEliminados);
							this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame.productoreemplas.addAll(this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame.productoreemplasEliminados);
							this.jInternalFrameDetalleFormProducto.productoestadisticaBeanSwingJInternalFrame.productoestadisticas.addAll(this.jInternalFrameDetalleFormProducto.productoestadisticaBeanSwingJInternalFrame.productoestadisticasEliminados);
							this.jInternalFrameDetalleFormProducto.politicafactuBeanSwingJInternalFrame.politicafactus.addAll(this.jInternalFrameDetalleFormProducto.politicafactuBeanSwingJInternalFrame.politicafactusEliminados);
							this.jInternalFrameDetalleFormProducto.productocuentacontableBeanSwingJInternalFrame.productocuentacontables.addAll(this.jInternalFrameDetalleFormProducto.productocuentacontableBeanSwingJInternalFrame.productocuentacontablesEliminados);
							this.jInternalFrameDetalleFormProducto.bodegaproductoBeanSwingJInternalFrame.bodegaproductos.addAll(this.jInternalFrameDetalleFormProducto.bodegaproductoBeanSwingJInternalFrame.bodegaproductosEliminados);
							this.jInternalFrameDetalleFormProducto.presupuestoproductoBeanSwingJInternalFrame.presupuestoproductos.addAll(this.jInternalFrameDetalleFormProducto.presupuestoproductoBeanSwingJInternalFrame.presupuestoproductosEliminados);
							this.jInternalFrameDetalleFormProducto.saldomesproductoBeanSwingJInternalFrame.saldomesproductos.addAll(this.jInternalFrameDetalleFormProducto.saldomesproductoBeanSwingJInternalFrame.saldomesproductosEliminados);
						}
						//ARCHITECTURE	
						
						if(!this.productoSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
								if(this.jInternalFrameDetalleFormProducto.proveedorproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.proveedorproductoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.proveedorproductoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.precioBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.precioBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.precioBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.presupuestoventasBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.presupuestoventasBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.presupuestoventasBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.politicaproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.politicaproductoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.politicaproductoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame.jInternalFrameDetalleFormSerieProducto.detalleserieproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame.jInternalFrameDetalleFormSerieProducto.detalleserieproductoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame.jInternalFrameDetalleFormSerieProducto.detalleserieproductoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.ubicacionproduBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.ubicacionproduBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.ubicacionproduBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.parametroproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.parametroproductoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.parametroproductoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.productounidadBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.productounidadBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.productounidadBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.ingredienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.ingredienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.ingredienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.productocaracBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.productocaracBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.productocaracBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.servicioclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.servicioclienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.servicioclienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.productopromocionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.productopromocionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.productopromocionBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.productoespeciBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.productoespeciBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.productoespeciBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame.jInternalFrameDetalleFormProductoReempla.productoreemplaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame.jInternalFrameDetalleFormProductoReempla.productoreemplaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame.jInternalFrameDetalleFormProductoReempla.productoreemplaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.productoestadisticaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.productoestadisticaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.productoestadisticaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.politicafactuBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.politicafactuBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.politicafactuBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.productocuentacontableBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.productocuentacontableBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.productocuentacontableBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.bodegaproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.bodegaproductoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.bodegaproductoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.presupuestoproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.presupuestoproductoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.presupuestoproductoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.saldomesproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.saldomesproductoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.saldomesproductoBeanSwingJInternalFrame.quitarFilaTotales();*/}
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
								if(this.jInternalFrameDetalleFormProducto.proveedorproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.proveedorproductoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.proveedorproductoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.precioBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.precioBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.precioBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.presupuestoventasBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.presupuestoventasBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.presupuestoventasBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.politicaproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.politicaproductoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.politicaproductoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame.jInternalFrameDetalleFormSerieProducto.detalleserieproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame.jInternalFrameDetalleFormSerieProducto.detalleserieproductoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame.jInternalFrameDetalleFormSerieProducto.detalleserieproductoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.ubicacionproduBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.ubicacionproduBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.ubicacionproduBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.parametroproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.parametroproductoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.parametroproductoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.productounidadBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.productounidadBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.productounidadBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.ingredienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.ingredienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.ingredienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.productocaracBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.productocaracBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.productocaracBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.servicioclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.servicioclienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.servicioclienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.productopromocionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.productopromocionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.productopromocionBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.productoespeciBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.productoespeciBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.productoespeciBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame.jInternalFrameDetalleFormProductoReempla.productoreemplaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame.jInternalFrameDetalleFormProductoReempla.productoreemplaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame.jInternalFrameDetalleFormProductoReempla.productoreemplaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.productoestadisticaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.productoestadisticaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.productoestadisticaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.politicafactuBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.politicafactuBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.politicafactuBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.productocuentacontableBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.productocuentacontableBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.productocuentacontableBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.bodegaproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.bodegaproductoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.bodegaproductoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.presupuestoproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.presupuestoproductoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.presupuestoproductoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.saldomesproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.saldomesproductoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.saldomesproductoBeanSwingJInternalFrame.quitarFilaTotales();*/}	
							}
							//ARCHITECTURE
												
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								productoLogic.saveProductoRelaciones(productoAux,this.jInternalFrameDetalleFormProducto.proveedorproductoBeanSwingJInternalFrame.proveedorproductoLogic.getProveedorProductos(),this.jInternalFrameDetalleFormProducto.precioBeanSwingJInternalFrame.precioLogic.getPrecios(),this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenBeanSwingJInternalFrame.detalleimpuestoinvenLogic.getDetalleImpuestoInvens(),this.jInternalFrameDetalleFormProducto.presupuestoventasBeanSwingJInternalFrame.presupuestoventasLogic.getPresupuestoVentass(),this.jInternalFrameDetalleFormProducto.politicaproductoBeanSwingJInternalFrame.politicaproductoLogic.getPoliticaProductos(),this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame.serieproductoLogic.getSerieProductos(),this.jInternalFrameDetalleFormProducto.ubicacionproduBeanSwingJInternalFrame.ubicacionproduLogic.getUbicacionProdus(),this.jInternalFrameDetalleFormProducto.parametroproductoBeanSwingJInternalFrame.parametroproductoLogic.getParametroProductos(),this.jInternalFrameDetalleFormProducto.productounidadBeanSwingJInternalFrame.productounidadLogic.getProductoUnidads(),this.jInternalFrameDetalleFormProducto.ingredienteBeanSwingJInternalFrame.ingredienteLogic.getIngredientes(),this.jInternalFrameDetalleFormProducto.productocaracBeanSwingJInternalFrame.productocaracLogic.getProductoCaracs(),this.jInternalFrameDetalleFormProducto.servicioclienteBeanSwingJInternalFrame.servicioclienteLogic.getServicioClientes(),this.jInternalFrameDetalleFormProducto.productopromocionBeanSwingJInternalFrame.productopromocionLogic.getProductoPromocions(),this.jInternalFrameDetalleFormProducto.productoespeciBeanSwingJInternalFrame.productoespeciLogic.getProductoEspecis(),this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame.productoreemplaLogic.getProductoReemplas(),this.jInternalFrameDetalleFormProducto.productoestadisticaBeanSwingJInternalFrame.productoestadisticaLogic.getProductoEstadisticas(),this.jInternalFrameDetalleFormProducto.politicafactuBeanSwingJInternalFrame.politicafactuLogic.getPoliticaFactus(),this.jInternalFrameDetalleFormProducto.productocuentacontableBeanSwingJInternalFrame.productocuentacontableLogic.getProductoCuentaContables(),this.jInternalFrameDetalleFormProducto.bodegaproductoBeanSwingJInternalFrame.bodegaproductoLogic.getBodegaProductos(),this.jInternalFrameDetalleFormProducto.presupuestoproductoBeanSwingJInternalFrame.presupuestoproductoLogic.getPresupuestoProductos(),this.jInternalFrameDetalleFormProducto.saldomesproductoBeanSwingJInternalFrame.saldomesproductoLogic.getSaldoMesProductos());//WithConnection
								//productoLogic.getSetVersionRowProductos();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.producto,productoAux);
					
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							this.jInternalFrameDetalleFormProducto.proveedorproductoBeanSwingJInternalFrame.proveedorproductoLogic.setProveedorProductos(new ArrayList<ProveedorProducto>());
							this.jInternalFrameDetalleFormProducto.precioBeanSwingJInternalFrame.precioLogic.setPrecios(new ArrayList<Precio>());
							this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenBeanSwingJInternalFrame.detalleimpuestoinvenLogic.setDetalleImpuestoInvens(new ArrayList<DetalleImpuestoInven>());
							this.jInternalFrameDetalleFormProducto.presupuestoventasBeanSwingJInternalFrame.presupuestoventasLogic.setPresupuestoVentass(new ArrayList<PresupuestoVentas>());
							this.jInternalFrameDetalleFormProducto.politicaproductoBeanSwingJInternalFrame.politicaproductoLogic.setPoliticaProductos(new ArrayList<PoliticaProducto>());
							this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame.serieproductoLogic.setSerieProductos(new ArrayList<SerieProducto>());
							this.jInternalFrameDetalleFormProducto.ubicacionproduBeanSwingJInternalFrame.ubicacionproduLogic.setUbicacionProdus(new ArrayList<UbicacionProdu>());
							this.jInternalFrameDetalleFormProducto.parametroproductoBeanSwingJInternalFrame.parametroproductoLogic.setParametroProductos(new ArrayList<ParametroProducto>());
							this.jInternalFrameDetalleFormProducto.productounidadBeanSwingJInternalFrame.productounidadLogic.setProductoUnidads(new ArrayList<ProductoUnidad>());
							this.jInternalFrameDetalleFormProducto.ingredienteBeanSwingJInternalFrame.ingredienteLogic.setIngredientes(new ArrayList<Ingrediente>());
							this.jInternalFrameDetalleFormProducto.productocaracBeanSwingJInternalFrame.productocaracLogic.setProductoCaracs(new ArrayList<ProductoCarac>());
							this.jInternalFrameDetalleFormProducto.servicioclienteBeanSwingJInternalFrame.servicioclienteLogic.setServicioClientes(new ArrayList<ServicioCliente>());
							this.jInternalFrameDetalleFormProducto.productopromocionBeanSwingJInternalFrame.productopromocionLogic.setProductoPromocions(new ArrayList<ProductoPromocion>());
							this.jInternalFrameDetalleFormProducto.productoespeciBeanSwingJInternalFrame.productoespeciLogic.setProductoEspecis(new ArrayList<ProductoEspeci>());
							this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame.productoreemplaLogic.setProductoReemplas(new ArrayList<ProductoReempla>());
							this.jInternalFrameDetalleFormProducto.productoestadisticaBeanSwingJInternalFrame.productoestadisticaLogic.setProductoEstadisticas(new ArrayList<ProductoEstadistica>());
							this.jInternalFrameDetalleFormProducto.politicafactuBeanSwingJInternalFrame.politicafactuLogic.setPoliticaFactus(new ArrayList<PoliticaFactu>());
							this.jInternalFrameDetalleFormProducto.productocuentacontableBeanSwingJInternalFrame.productocuentacontableLogic.setProductoCuentaContables(new ArrayList<ProductoCuentaContable>());
							this.jInternalFrameDetalleFormProducto.bodegaproductoBeanSwingJInternalFrame.bodegaproductoLogic.setBodegaProductos(new ArrayList<BodegaProducto>());
							this.jInternalFrameDetalleFormProducto.presupuestoproductoBeanSwingJInternalFrame.presupuestoproductoLogic.setPresupuestoProductos(new ArrayList<PresupuestoProducto>());
							this.jInternalFrameDetalleFormProducto.saldomesproductoBeanSwingJInternalFrame.saldomesproductoLogic.setSaldoMesProductos(new ArrayList<SaldoMesProducto>());
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							this.jInternalFrameDetalleFormProducto.proveedorproductoBeanSwingJInternalFrame.proveedorproductos= new ArrayList<ProveedorProducto>();
							this.jInternalFrameDetalleFormProducto.precioBeanSwingJInternalFrame.precios= new ArrayList<Precio>();
							this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenBeanSwingJInternalFrame.detalleimpuestoinvens= new ArrayList<DetalleImpuestoInven>();
							this.jInternalFrameDetalleFormProducto.presupuestoventasBeanSwingJInternalFrame.presupuestoventass= new ArrayList<PresupuestoVentas>();
							this.jInternalFrameDetalleFormProducto.politicaproductoBeanSwingJInternalFrame.politicaproductos= new ArrayList<PoliticaProducto>();
							this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame.serieproductos= new ArrayList<SerieProducto>();
							this.jInternalFrameDetalleFormProducto.ubicacionproduBeanSwingJInternalFrame.ubicacionprodus= new ArrayList<UbicacionProdu>();
							this.jInternalFrameDetalleFormProducto.parametroproductoBeanSwingJInternalFrame.parametroproductos= new ArrayList<ParametroProducto>();
							this.jInternalFrameDetalleFormProducto.productounidadBeanSwingJInternalFrame.productounidads= new ArrayList<ProductoUnidad>();
							this.jInternalFrameDetalleFormProducto.ingredienteBeanSwingJInternalFrame.ingredientes= new ArrayList<Ingrediente>();
							this.jInternalFrameDetalleFormProducto.productocaracBeanSwingJInternalFrame.productocaracs= new ArrayList<ProductoCarac>();
							this.jInternalFrameDetalleFormProducto.servicioclienteBeanSwingJInternalFrame.servicioclientes= new ArrayList<ServicioCliente>();
							this.jInternalFrameDetalleFormProducto.productopromocionBeanSwingJInternalFrame.productopromocions= new ArrayList<ProductoPromocion>();
							this.jInternalFrameDetalleFormProducto.productoespeciBeanSwingJInternalFrame.productoespecis= new ArrayList<ProductoEspeci>();
							this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame.productoreemplas= new ArrayList<ProductoReempla>();
							this.jInternalFrameDetalleFormProducto.productoestadisticaBeanSwingJInternalFrame.productoestadisticas= new ArrayList<ProductoEstadistica>();
							this.jInternalFrameDetalleFormProducto.politicafactuBeanSwingJInternalFrame.politicafactus= new ArrayList<PoliticaFactu>();
							this.jInternalFrameDetalleFormProducto.productocuentacontableBeanSwingJInternalFrame.productocuentacontables= new ArrayList<ProductoCuentaContable>();
							this.jInternalFrameDetalleFormProducto.bodegaproductoBeanSwingJInternalFrame.bodegaproductos= new ArrayList<BodegaProducto>();
							this.jInternalFrameDetalleFormProducto.presupuestoproductoBeanSwingJInternalFrame.presupuestoproductos= new ArrayList<PresupuestoProducto>();
							this.jInternalFrameDetalleFormProducto.saldomesproductoBeanSwingJInternalFrame.saldomesproductos= new ArrayList<SaldoMesProducto>();
							}
							//ARCHITECTURE	
						} else {
							
							

							if(this.jInternalFrameDetalleFormProducto.proveedorproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.proveedorproductoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormProducto.proveedorproductoBeanSwingJInternalFrame.quitarFilaTotales();}
							productoAux.setProveedorProductos(this.jInternalFrameDetalleFormProducto.proveedorproductoBeanSwingJInternalFrame.proveedorproductoLogic.getProveedorProductos());

							if(this.jInternalFrameDetalleFormProducto.precioBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.precioBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormProducto.precioBeanSwingJInternalFrame.quitarFilaTotales();}
							productoAux.setPrecios(this.jInternalFrameDetalleFormProducto.precioBeanSwingJInternalFrame.precioLogic.getPrecios());

							if(this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenBeanSwingJInternalFrame.quitarFilaTotales();}
							productoAux.setDetalleImpuestoInvens(this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenBeanSwingJInternalFrame.detalleimpuestoinvenLogic.getDetalleImpuestoInvens());

							if(this.jInternalFrameDetalleFormProducto.presupuestoventasBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.presupuestoventasBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormProducto.presupuestoventasBeanSwingJInternalFrame.quitarFilaTotales();}
							productoAux.setPresupuestoVentass(this.jInternalFrameDetalleFormProducto.presupuestoventasBeanSwingJInternalFrame.presupuestoventasLogic.getPresupuestoVentass());

							if(this.jInternalFrameDetalleFormProducto.politicaproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.politicaproductoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormProducto.politicaproductoBeanSwingJInternalFrame.quitarFilaTotales();}
							productoAux.setPoliticaProductos(this.jInternalFrameDetalleFormProducto.politicaproductoBeanSwingJInternalFrame.politicaproductoLogic.getPoliticaProductos());

							if(this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame.quitarFilaTotales();}
							productoAux.setSerieProductos(this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame.serieproductoLogic.getSerieProductos());

							if(this.jInternalFrameDetalleFormProducto.ubicacionproduBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.ubicacionproduBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormProducto.ubicacionproduBeanSwingJInternalFrame.quitarFilaTotales();}
							productoAux.setUbicacionProdus(this.jInternalFrameDetalleFormProducto.ubicacionproduBeanSwingJInternalFrame.ubicacionproduLogic.getUbicacionProdus());

							if(this.jInternalFrameDetalleFormProducto.parametroproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.parametroproductoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormProducto.parametroproductoBeanSwingJInternalFrame.quitarFilaTotales();}
							productoAux.setParametroProductos(this.jInternalFrameDetalleFormProducto.parametroproductoBeanSwingJInternalFrame.parametroproductoLogic.getParametroProductos());

							if(this.jInternalFrameDetalleFormProducto.productounidadBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.productounidadBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormProducto.productounidadBeanSwingJInternalFrame.quitarFilaTotales();}
							productoAux.setProductoUnidads(this.jInternalFrameDetalleFormProducto.productounidadBeanSwingJInternalFrame.productounidadLogic.getProductoUnidads());

							if(this.jInternalFrameDetalleFormProducto.ingredienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.ingredienteBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormProducto.ingredienteBeanSwingJInternalFrame.quitarFilaTotales();}
							productoAux.setIngredienteRelacions(this.jInternalFrameDetalleFormProducto.ingredienteBeanSwingJInternalFrame.ingredienteLogic.getIngredientes());

							if(this.jInternalFrameDetalleFormProducto.productocaracBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.productocaracBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormProducto.productocaracBeanSwingJInternalFrame.quitarFilaTotales();}
							productoAux.setProductoCaracs(this.jInternalFrameDetalleFormProducto.productocaracBeanSwingJInternalFrame.productocaracLogic.getProductoCaracs());

							if(this.jInternalFrameDetalleFormProducto.servicioclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.servicioclienteBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormProducto.servicioclienteBeanSwingJInternalFrame.quitarFilaTotales();}
							productoAux.setServicioClientes(this.jInternalFrameDetalleFormProducto.servicioclienteBeanSwingJInternalFrame.servicioclienteLogic.getServicioClientes());

							if(this.jInternalFrameDetalleFormProducto.productopromocionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.productopromocionBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormProducto.productopromocionBeanSwingJInternalFrame.quitarFilaTotales();}
							productoAux.setProductoPromocionRelacions(this.jInternalFrameDetalleFormProducto.productopromocionBeanSwingJInternalFrame.productopromocionLogic.getProductoPromocions());

							if(this.jInternalFrameDetalleFormProducto.productoespeciBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.productoespeciBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormProducto.productoespeciBeanSwingJInternalFrame.quitarFilaTotales();}
							productoAux.setProductoEspecis(this.jInternalFrameDetalleFormProducto.productoespeciBeanSwingJInternalFrame.productoespeciLogic.getProductoEspecis());

							if(this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame.quitarFilaTotales();}
							productoAux.setProductoReemplas(this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame.productoreemplaLogic.getProductoReemplas());

							if(this.jInternalFrameDetalleFormProducto.productoestadisticaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.productoestadisticaBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormProducto.productoestadisticaBeanSwingJInternalFrame.quitarFilaTotales();}
							productoAux.setProductoEstadisticas(this.jInternalFrameDetalleFormProducto.productoestadisticaBeanSwingJInternalFrame.productoestadisticaLogic.getProductoEstadisticas());

							if(this.jInternalFrameDetalleFormProducto.politicafactuBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.politicafactuBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormProducto.politicafactuBeanSwingJInternalFrame.quitarFilaTotales();}
							productoAux.setPoliticaFactus(this.jInternalFrameDetalleFormProducto.politicafactuBeanSwingJInternalFrame.politicafactuLogic.getPoliticaFactus());

							if(this.jInternalFrameDetalleFormProducto.productocuentacontableBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.productocuentacontableBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormProducto.productocuentacontableBeanSwingJInternalFrame.quitarFilaTotales();}
							productoAux.setProductoCuentaContables(this.jInternalFrameDetalleFormProducto.productocuentacontableBeanSwingJInternalFrame.productocuentacontableLogic.getProductoCuentaContables());

							if(this.jInternalFrameDetalleFormProducto.bodegaproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.bodegaproductoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormProducto.bodegaproductoBeanSwingJInternalFrame.quitarFilaTotales();}
							productoAux.setBodegaProductos(this.jInternalFrameDetalleFormProducto.bodegaproductoBeanSwingJInternalFrame.bodegaproductoLogic.getBodegaProductos());

							if(this.jInternalFrameDetalleFormProducto.presupuestoproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.presupuestoproductoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormProducto.presupuestoproductoBeanSwingJInternalFrame.quitarFilaTotales();}
							productoAux.setPresupuestoProductos(this.jInternalFrameDetalleFormProducto.presupuestoproductoBeanSwingJInternalFrame.presupuestoproductoLogic.getPresupuestoProductos());

							if(this.jInternalFrameDetalleFormProducto.saldomesproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.saldomesproductoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormProducto.saldomesproductoBeanSwingJInternalFrame.quitarFilaTotales();}
							productoAux.setSaldoMesProductos(this.jInternalFrameDetalleFormProducto.saldomesproductoBeanSwingJInternalFrame.saldomesproductoLogic.getSaldoMesProductos());
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.productoSessionBean.getEstaModoGuardarRelaciones() 
									|| this.productoSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(productoAux,productoLogic.getProductos());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(productoAux,productos);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.producto,productoAux);												
						}
					}
				}
			} else if(maintenanceType==MaintenanceType.ACTUALIZAR) {
				productoAux=new  Producto();
				
				//PUEDE QUE SE ACTUALIZE ALGUN REGISTRO NUEVO
				if(!this.productoSessionBean.getEsGuardarRelacionado() 
					|| (this.productoSessionBean.getEsGuardarRelacionado() && this.producto.getId()>=0)) {
						
					productoAux.setIsNew(false);
				}
				
				productoAux.setIsDeleted(false);
			
				productoAux.setId(this.producto.getId());	
				productoAux.setVersionRow(this.producto.getVersionRow());	
				productoAux.setid_empresa(this.producto.getid_empresa());	
				productoAux.setid_sucursal(this.producto.getid_sucursal());	
				productoAux.setcodigo(this.producto.getcodigo());	
				productoAux.setnombre(this.producto.getnombre());	
				productoAux.setnombre_extranjero(this.producto.getnombre_extranjero());	
				productoAux.setresumen_detalle(this.producto.getresumen_detalle());	
				productoAux.setcodigo_barra(this.producto.getcodigo_barra());	
				productoAux.setid_linea(this.producto.getid_linea());	
				productoAux.setid_linea_grupo(this.producto.getid_linea_grupo());	
				productoAux.setid_linea_categoria(this.producto.getid_linea_categoria());	
				productoAux.setid_linea_marca(this.producto.getid_linea_marca());	
				productoAux.setid_tipo_producto_servicio(this.producto.getid_tipo_producto_servicio());	
				productoAux.setid_tipo_producto_servicio_inven(this.producto.getid_tipo_producto_servicio_inven());	
				productoAux.setid_tipo_costeo(this.producto.getid_tipo_costeo());	
				productoAux.setid_unidad(this.producto.getid_unidad());	
				productoAux.setid_unidad_peso(this.producto.getid_unidad_peso());	
				productoAux.setid_arancel(this.producto.getid_arancel());	
				productoAux.setid_cliente(this.producto.getid_cliente());	
				productoAux.setid_cliente_proveedor_defecto(this.producto.getid_cliente_proveedor_defecto());	
				productoAux.setesta_activo(this.producto.getesta_activo());	
				productoAux.setdescripcion(this.producto.getdescripcion());	
				productoAux.setprecio(this.producto.getprecio());	
				productoAux.setiva(this.producto.getiva());	
				productoAux.setiva_valor(this.producto.getiva_valor());	
				productoAux.setice(this.producto.getice());	
				productoAux.setice_valor(this.producto.getice_valor());	
				productoAux.setdescuento(this.producto.getdescuento());	
				productoAux.setdescuento_valor(this.producto.getdescuento_valor());	
				productoAux.setarancel_porcentaje(this.producto.getarancel_porcentaje());	
				productoAux.setarancel_valor(this.producto.getarancel_valor());	
				productoAux.setcomision(this.producto.getcomision());	
				productoAux.setcomision_valor(this.producto.getcomision_valor());	
				productoAux.setdias_produccion(this.producto.getdias_produccion());	
				productoAux.setcon_stock_negativo(this.producto.getcon_stock_negativo());	
				productoAux.setcon_precio_minimo(this.producto.getcon_precio_minimo());	
				productoAux.setcon_lote(this.producto.getcon_lote());	
				productoAux.setcon_confirmacion(this.producto.getcon_confirmacion());	
				productoAux.setcon_presupuesto(this.producto.getcon_presupuesto());	
				productoAux.setcon_importacion(this.producto.getcon_importacion());	
				productoAux.setcon_final(this.producto.getcon_final());	
				productoAux.setcon_consep(this.producto.getcon_consep());	
				productoAux.setcon_serie(this.producto.getcon_serie());	
				productoAux.setcon_balanza(this.producto.getcon_balanza());	
				productoAux.setalto(this.producto.getalto());	
				productoAux.setancho(this.producto.getancho());	
				productoAux.setlargo(this.producto.getlargo());	
				productoAux.setvolumen(this.producto.getvolumen());	
				productoAux.setpeso(this.producto.getpeso());	
				productoAux.setgramos(this.producto.getgramos());	
				productoAux.setunidades_caja(this.producto.getunidades_caja());	
				productoAux.setmargen(this.producto.getmargen());	
				productoAux.setfactor(this.producto.getfactor());	
				productoAux.setfob(this.producto.getfob());	
				productoAux.setfob2(this.producto.getfob2());	
				productoAux.setid_tipo_producto(this.producto.getid_tipo_producto());	
				productoAux.setid_color_producto(this.producto.getid_color_producto());	
				productoAux.setid_clase_producto(this.producto.getid_clase_producto());	
				productoAux.setid_efecto_producto(this.producto.getid_efecto_producto());	
				productoAux.setid_marca_producto(this.producto.getid_marca_producto());	
				productoAux.setid_modelo_producto(this.producto.getid_modelo_producto());	
				productoAux.setid_material_producto(this.producto.getid_material_producto());	
				productoAux.setid_segmento_producto(this.producto.getid_segmento_producto());	
				productoAux.setid_talla_producto(this.producto.getid_talla_producto());	
				productoAux.setgrupo(this.producto.getgrupo());	
				productoAux.setreferencia(this.producto.getreferencia());	
				productoAux.setaplicacion(this.producto.getaplicacion());	
				productoAux.setprocedencia(this.producto.getprocedencia());	
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(productoAux,productoLogic.getProductos());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(productoAux,productos);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote && !this.productoSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.productoSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						productoLogic.saveProductos();//WithConnection
						//productoLogic.getSetVersionRowProductos();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
					
					//TALVEZ ESTA DEMAS POR SER UPDATE
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.producto,productoAux);
					
					this.refrescarForeignKeysDescripcionesProducto();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.productoSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
							this.jInternalFrameDetalleFormProducto.proveedorproductoBeanSwingJInternalFrame.proveedorproductoLogic.getProveedorProductos().addAll(this.jInternalFrameDetalleFormProducto.proveedorproductoBeanSwingJInternalFrame.proveedorproductosEliminados);
							this.jInternalFrameDetalleFormProducto.precioBeanSwingJInternalFrame.precioLogic.getPrecios().addAll(this.jInternalFrameDetalleFormProducto.precioBeanSwingJInternalFrame.preciosEliminados);
							this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenBeanSwingJInternalFrame.detalleimpuestoinvenLogic.getDetalleImpuestoInvens().addAll(this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenBeanSwingJInternalFrame.detalleimpuestoinvensEliminados);
							this.jInternalFrameDetalleFormProducto.presupuestoventasBeanSwingJInternalFrame.presupuestoventasLogic.getPresupuestoVentass().addAll(this.jInternalFrameDetalleFormProducto.presupuestoventasBeanSwingJInternalFrame.presupuestoventassEliminados);
							this.jInternalFrameDetalleFormProducto.politicaproductoBeanSwingJInternalFrame.politicaproductoLogic.getPoliticaProductos().addAll(this.jInternalFrameDetalleFormProducto.politicaproductoBeanSwingJInternalFrame.politicaproductosEliminados);
							this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame.serieproductoLogic.getSerieProductos().addAll(this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame.serieproductosEliminados);
							this.jInternalFrameDetalleFormProducto.ubicacionproduBeanSwingJInternalFrame.ubicacionproduLogic.getUbicacionProdus().addAll(this.jInternalFrameDetalleFormProducto.ubicacionproduBeanSwingJInternalFrame.ubicacionprodusEliminados);
							this.jInternalFrameDetalleFormProducto.parametroproductoBeanSwingJInternalFrame.parametroproductoLogic.getParametroProductos().addAll(this.jInternalFrameDetalleFormProducto.parametroproductoBeanSwingJInternalFrame.parametroproductosEliminados);
							this.jInternalFrameDetalleFormProducto.productounidadBeanSwingJInternalFrame.productounidadLogic.getProductoUnidads().addAll(this.jInternalFrameDetalleFormProducto.productounidadBeanSwingJInternalFrame.productounidadsEliminados);
							this.jInternalFrameDetalleFormProducto.ingredienteBeanSwingJInternalFrame.ingredienteLogic.getIngredientes().addAll(this.jInternalFrameDetalleFormProducto.ingredienteBeanSwingJInternalFrame.ingredientesEliminados);
							this.jInternalFrameDetalleFormProducto.productocaracBeanSwingJInternalFrame.productocaracLogic.getProductoCaracs().addAll(this.jInternalFrameDetalleFormProducto.productocaracBeanSwingJInternalFrame.productocaracsEliminados);
							this.jInternalFrameDetalleFormProducto.servicioclienteBeanSwingJInternalFrame.servicioclienteLogic.getServicioClientes().addAll(this.jInternalFrameDetalleFormProducto.servicioclienteBeanSwingJInternalFrame.servicioclientesEliminados);
							this.jInternalFrameDetalleFormProducto.productopromocionBeanSwingJInternalFrame.productopromocionLogic.getProductoPromocions().addAll(this.jInternalFrameDetalleFormProducto.productopromocionBeanSwingJInternalFrame.productopromocionsEliminados);
							this.jInternalFrameDetalleFormProducto.productoespeciBeanSwingJInternalFrame.productoespeciLogic.getProductoEspecis().addAll(this.jInternalFrameDetalleFormProducto.productoespeciBeanSwingJInternalFrame.productoespecisEliminados);
							this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame.productoreemplaLogic.getProductoReemplas().addAll(this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame.productoreemplasEliminados);
							this.jInternalFrameDetalleFormProducto.productoestadisticaBeanSwingJInternalFrame.productoestadisticaLogic.getProductoEstadisticas().addAll(this.jInternalFrameDetalleFormProducto.productoestadisticaBeanSwingJInternalFrame.productoestadisticasEliminados);
							this.jInternalFrameDetalleFormProducto.politicafactuBeanSwingJInternalFrame.politicafactuLogic.getPoliticaFactus().addAll(this.jInternalFrameDetalleFormProducto.politicafactuBeanSwingJInternalFrame.politicafactusEliminados);
							this.jInternalFrameDetalleFormProducto.productocuentacontableBeanSwingJInternalFrame.productocuentacontableLogic.getProductoCuentaContables().addAll(this.jInternalFrameDetalleFormProducto.productocuentacontableBeanSwingJInternalFrame.productocuentacontablesEliminados);
							this.jInternalFrameDetalleFormProducto.bodegaproductoBeanSwingJInternalFrame.bodegaproductoLogic.getBodegaProductos().addAll(this.jInternalFrameDetalleFormProducto.bodegaproductoBeanSwingJInternalFrame.bodegaproductosEliminados);
							this.jInternalFrameDetalleFormProducto.presupuestoproductoBeanSwingJInternalFrame.presupuestoproductoLogic.getPresupuestoProductos().addAll(this.jInternalFrameDetalleFormProducto.presupuestoproductoBeanSwingJInternalFrame.presupuestoproductosEliminados);
							this.jInternalFrameDetalleFormProducto.saldomesproductoBeanSwingJInternalFrame.saldomesproductoLogic.getSaldoMesProductos().addAll(this.jInternalFrameDetalleFormProducto.saldomesproductoBeanSwingJInternalFrame.saldomesproductosEliminados);
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
							this.jInternalFrameDetalleFormProducto.proveedorproductoBeanSwingJInternalFrame.proveedorproductos.addAll(this.jInternalFrameDetalleFormProducto.proveedorproductoBeanSwingJInternalFrame.proveedorproductosEliminados);
							this.jInternalFrameDetalleFormProducto.precioBeanSwingJInternalFrame.precios.addAll(this.jInternalFrameDetalleFormProducto.precioBeanSwingJInternalFrame.preciosEliminados);
							this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenBeanSwingJInternalFrame.detalleimpuestoinvens.addAll(this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenBeanSwingJInternalFrame.detalleimpuestoinvensEliminados);
							this.jInternalFrameDetalleFormProducto.presupuestoventasBeanSwingJInternalFrame.presupuestoventass.addAll(this.jInternalFrameDetalleFormProducto.presupuestoventasBeanSwingJInternalFrame.presupuestoventassEliminados);
							this.jInternalFrameDetalleFormProducto.politicaproductoBeanSwingJInternalFrame.politicaproductos.addAll(this.jInternalFrameDetalleFormProducto.politicaproductoBeanSwingJInternalFrame.politicaproductosEliminados);
							this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame.serieproductos.addAll(this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame.serieproductosEliminados);
							this.jInternalFrameDetalleFormProducto.ubicacionproduBeanSwingJInternalFrame.ubicacionprodus.addAll(this.jInternalFrameDetalleFormProducto.ubicacionproduBeanSwingJInternalFrame.ubicacionprodusEliminados);
							this.jInternalFrameDetalleFormProducto.parametroproductoBeanSwingJInternalFrame.parametroproductos.addAll(this.jInternalFrameDetalleFormProducto.parametroproductoBeanSwingJInternalFrame.parametroproductosEliminados);
							this.jInternalFrameDetalleFormProducto.productounidadBeanSwingJInternalFrame.productounidads.addAll(this.jInternalFrameDetalleFormProducto.productounidadBeanSwingJInternalFrame.productounidadsEliminados);
							this.jInternalFrameDetalleFormProducto.ingredienteBeanSwingJInternalFrame.ingredientes.addAll(this.jInternalFrameDetalleFormProducto.ingredienteBeanSwingJInternalFrame.ingredientesEliminados);
							this.jInternalFrameDetalleFormProducto.productocaracBeanSwingJInternalFrame.productocaracs.addAll(this.jInternalFrameDetalleFormProducto.productocaracBeanSwingJInternalFrame.productocaracsEliminados);
							this.jInternalFrameDetalleFormProducto.servicioclienteBeanSwingJInternalFrame.servicioclientes.addAll(this.jInternalFrameDetalleFormProducto.servicioclienteBeanSwingJInternalFrame.servicioclientesEliminados);
							this.jInternalFrameDetalleFormProducto.productopromocionBeanSwingJInternalFrame.productopromocions.addAll(this.jInternalFrameDetalleFormProducto.productopromocionBeanSwingJInternalFrame.productopromocionsEliminados);
							this.jInternalFrameDetalleFormProducto.productoespeciBeanSwingJInternalFrame.productoespecis.addAll(this.jInternalFrameDetalleFormProducto.productoespeciBeanSwingJInternalFrame.productoespecisEliminados);
							this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame.productoreemplas.addAll(this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame.productoreemplasEliminados);
							this.jInternalFrameDetalleFormProducto.productoestadisticaBeanSwingJInternalFrame.productoestadisticas.addAll(this.jInternalFrameDetalleFormProducto.productoestadisticaBeanSwingJInternalFrame.productoestadisticasEliminados);
							this.jInternalFrameDetalleFormProducto.politicafactuBeanSwingJInternalFrame.politicafactus.addAll(this.jInternalFrameDetalleFormProducto.politicafactuBeanSwingJInternalFrame.politicafactusEliminados);
							this.jInternalFrameDetalleFormProducto.productocuentacontableBeanSwingJInternalFrame.productocuentacontables.addAll(this.jInternalFrameDetalleFormProducto.productocuentacontableBeanSwingJInternalFrame.productocuentacontablesEliminados);
							this.jInternalFrameDetalleFormProducto.bodegaproductoBeanSwingJInternalFrame.bodegaproductos.addAll(this.jInternalFrameDetalleFormProducto.bodegaproductoBeanSwingJInternalFrame.bodegaproductosEliminados);
							this.jInternalFrameDetalleFormProducto.presupuestoproductoBeanSwingJInternalFrame.presupuestoproductos.addAll(this.jInternalFrameDetalleFormProducto.presupuestoproductoBeanSwingJInternalFrame.presupuestoproductosEliminados);
							this.jInternalFrameDetalleFormProducto.saldomesproductoBeanSwingJInternalFrame.saldomesproductos.addAll(this.jInternalFrameDetalleFormProducto.saldomesproductoBeanSwingJInternalFrame.saldomesproductosEliminados);
						}
						//ARCHITECTURE
						
						if(!this.productoSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
								if(this.jInternalFrameDetalleFormProducto.proveedorproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.proveedorproductoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.proveedorproductoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.precioBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.precioBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.precioBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.presupuestoventasBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.presupuestoventasBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.presupuestoventasBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.politicaproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.politicaproductoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.politicaproductoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame.jInternalFrameDetalleFormSerieProducto.detalleserieproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame.jInternalFrameDetalleFormSerieProducto.detalleserieproductoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame.jInternalFrameDetalleFormSerieProducto.detalleserieproductoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.ubicacionproduBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.ubicacionproduBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.ubicacionproduBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.parametroproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.parametroproductoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.parametroproductoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.productounidadBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.productounidadBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.productounidadBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.ingredienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.ingredienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.ingredienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.productocaracBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.productocaracBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.productocaracBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.servicioclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.servicioclienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.servicioclienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.productopromocionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.productopromocionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.productopromocionBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.productoespeciBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.productoespeciBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.productoespeciBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame.jInternalFrameDetalleFormProductoReempla.productoreemplaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame.jInternalFrameDetalleFormProductoReempla.productoreemplaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame.jInternalFrameDetalleFormProductoReempla.productoreemplaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.productoestadisticaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.productoestadisticaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.productoestadisticaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.politicafactuBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.politicafactuBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.politicafactuBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.productocuentacontableBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.productocuentacontableBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.productocuentacontableBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.bodegaproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.bodegaproductoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.bodegaproductoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.presupuestoproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.presupuestoproductoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.presupuestoproductoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.saldomesproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.saldomesproductoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.saldomesproductoBeanSwingJInternalFrame.quitarFilaTotales();*/}
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
								if(this.jInternalFrameDetalleFormProducto.proveedorproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.proveedorproductoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.proveedorproductoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.precioBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.precioBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.precioBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.presupuestoventasBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.presupuestoventasBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.presupuestoventasBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.politicaproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.politicaproductoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.politicaproductoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame.jInternalFrameDetalleFormSerieProducto.detalleserieproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame.jInternalFrameDetalleFormSerieProducto.detalleserieproductoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame.jInternalFrameDetalleFormSerieProducto.detalleserieproductoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.ubicacionproduBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.ubicacionproduBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.ubicacionproduBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.parametroproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.parametroproductoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.parametroproductoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.productounidadBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.productounidadBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.productounidadBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.ingredienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.ingredienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.ingredienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.productocaracBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.productocaracBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.productocaracBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.servicioclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.servicioclienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.servicioclienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.productopromocionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.productopromocionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.productopromocionBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.productoespeciBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.productoespeciBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.productoespeciBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame.jInternalFrameDetalleFormProductoReempla.productoreemplaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame.jInternalFrameDetalleFormProductoReempla.productoreemplaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame.jInternalFrameDetalleFormProductoReempla.productoreemplaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.productoestadisticaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.productoestadisticaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.productoestadisticaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.politicafactuBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.politicafactuBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.politicafactuBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.productocuentacontableBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.productocuentacontableBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.productocuentacontableBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.bodegaproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.bodegaproductoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.bodegaproductoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.presupuestoproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.presupuestoproductoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.presupuestoproductoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.saldomesproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.saldomesproductoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.saldomesproductoBeanSwingJInternalFrame.quitarFilaTotales();*/}	
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								productoLogic.saveProductoRelaciones(productoAux,this.jInternalFrameDetalleFormProducto.proveedorproductoBeanSwingJInternalFrame.proveedorproductoLogic.getProveedorProductos(),this.jInternalFrameDetalleFormProducto.precioBeanSwingJInternalFrame.precioLogic.getPrecios(),this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenBeanSwingJInternalFrame.detalleimpuestoinvenLogic.getDetalleImpuestoInvens(),this.jInternalFrameDetalleFormProducto.presupuestoventasBeanSwingJInternalFrame.presupuestoventasLogic.getPresupuestoVentass(),this.jInternalFrameDetalleFormProducto.politicaproductoBeanSwingJInternalFrame.politicaproductoLogic.getPoliticaProductos(),this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame.serieproductoLogic.getSerieProductos(),this.jInternalFrameDetalleFormProducto.ubicacionproduBeanSwingJInternalFrame.ubicacionproduLogic.getUbicacionProdus(),this.jInternalFrameDetalleFormProducto.parametroproductoBeanSwingJInternalFrame.parametroproductoLogic.getParametroProductos(),this.jInternalFrameDetalleFormProducto.productounidadBeanSwingJInternalFrame.productounidadLogic.getProductoUnidads(),this.jInternalFrameDetalleFormProducto.ingredienteBeanSwingJInternalFrame.ingredienteLogic.getIngredientes(),this.jInternalFrameDetalleFormProducto.productocaracBeanSwingJInternalFrame.productocaracLogic.getProductoCaracs(),this.jInternalFrameDetalleFormProducto.servicioclienteBeanSwingJInternalFrame.servicioclienteLogic.getServicioClientes(),this.jInternalFrameDetalleFormProducto.productopromocionBeanSwingJInternalFrame.productopromocionLogic.getProductoPromocions(),this.jInternalFrameDetalleFormProducto.productoespeciBeanSwingJInternalFrame.productoespeciLogic.getProductoEspecis(),this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame.productoreemplaLogic.getProductoReemplas(),this.jInternalFrameDetalleFormProducto.productoestadisticaBeanSwingJInternalFrame.productoestadisticaLogic.getProductoEstadisticas(),this.jInternalFrameDetalleFormProducto.politicafactuBeanSwingJInternalFrame.politicafactuLogic.getPoliticaFactus(),this.jInternalFrameDetalleFormProducto.productocuentacontableBeanSwingJInternalFrame.productocuentacontableLogic.getProductoCuentaContables(),this.jInternalFrameDetalleFormProducto.bodegaproductoBeanSwingJInternalFrame.bodegaproductoLogic.getBodegaProductos(),this.jInternalFrameDetalleFormProducto.presupuestoproductoBeanSwingJInternalFrame.presupuestoproductoLogic.getPresupuestoProductos(),this.jInternalFrameDetalleFormProducto.saldomesproductoBeanSwingJInternalFrame.saldomesproductoLogic.getSaldoMesProductos());//WithConnection
								//productoLogic.getSetVersionRowProductos();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.producto,productoAux);
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							this.jInternalFrameDetalleFormProducto.proveedorproductoBeanSwingJInternalFrame.proveedorproductoLogic.setProveedorProductos(new ArrayList<ProveedorProducto>());
							this.jInternalFrameDetalleFormProducto.precioBeanSwingJInternalFrame.precioLogic.setPrecios(new ArrayList<Precio>());
							this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenBeanSwingJInternalFrame.detalleimpuestoinvenLogic.setDetalleImpuestoInvens(new ArrayList<DetalleImpuestoInven>());
							this.jInternalFrameDetalleFormProducto.presupuestoventasBeanSwingJInternalFrame.presupuestoventasLogic.setPresupuestoVentass(new ArrayList<PresupuestoVentas>());
							this.jInternalFrameDetalleFormProducto.politicaproductoBeanSwingJInternalFrame.politicaproductoLogic.setPoliticaProductos(new ArrayList<PoliticaProducto>());
							this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame.serieproductoLogic.setSerieProductos(new ArrayList<SerieProducto>());
							this.jInternalFrameDetalleFormProducto.ubicacionproduBeanSwingJInternalFrame.ubicacionproduLogic.setUbicacionProdus(new ArrayList<UbicacionProdu>());
							this.jInternalFrameDetalleFormProducto.parametroproductoBeanSwingJInternalFrame.parametroproductoLogic.setParametroProductos(new ArrayList<ParametroProducto>());
							this.jInternalFrameDetalleFormProducto.productounidadBeanSwingJInternalFrame.productounidadLogic.setProductoUnidads(new ArrayList<ProductoUnidad>());
							this.jInternalFrameDetalleFormProducto.ingredienteBeanSwingJInternalFrame.ingredienteLogic.setIngredientes(new ArrayList<Ingrediente>());
							this.jInternalFrameDetalleFormProducto.productocaracBeanSwingJInternalFrame.productocaracLogic.setProductoCaracs(new ArrayList<ProductoCarac>());
							this.jInternalFrameDetalleFormProducto.servicioclienteBeanSwingJInternalFrame.servicioclienteLogic.setServicioClientes(new ArrayList<ServicioCliente>());
							this.jInternalFrameDetalleFormProducto.productopromocionBeanSwingJInternalFrame.productopromocionLogic.setProductoPromocions(new ArrayList<ProductoPromocion>());
							this.jInternalFrameDetalleFormProducto.productoespeciBeanSwingJInternalFrame.productoespeciLogic.setProductoEspecis(new ArrayList<ProductoEspeci>());
							this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame.productoreemplaLogic.setProductoReemplas(new ArrayList<ProductoReempla>());
							this.jInternalFrameDetalleFormProducto.productoestadisticaBeanSwingJInternalFrame.productoestadisticaLogic.setProductoEstadisticas(new ArrayList<ProductoEstadistica>());
							this.jInternalFrameDetalleFormProducto.politicafactuBeanSwingJInternalFrame.politicafactuLogic.setPoliticaFactus(new ArrayList<PoliticaFactu>());
							this.jInternalFrameDetalleFormProducto.productocuentacontableBeanSwingJInternalFrame.productocuentacontableLogic.setProductoCuentaContables(new ArrayList<ProductoCuentaContable>());
							this.jInternalFrameDetalleFormProducto.bodegaproductoBeanSwingJInternalFrame.bodegaproductoLogic.setBodegaProductos(new ArrayList<BodegaProducto>());
							this.jInternalFrameDetalleFormProducto.presupuestoproductoBeanSwingJInternalFrame.presupuestoproductoLogic.setPresupuestoProductos(new ArrayList<PresupuestoProducto>());
							this.jInternalFrameDetalleFormProducto.saldomesproductoBeanSwingJInternalFrame.saldomesproductoLogic.setSaldoMesProductos(new ArrayList<SaldoMesProducto>());
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							this.jInternalFrameDetalleFormProducto.proveedorproductoBeanSwingJInternalFrame.proveedorproductos= new ArrayList<ProveedorProducto>();
							this.jInternalFrameDetalleFormProducto.precioBeanSwingJInternalFrame.precios= new ArrayList<Precio>();
							this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenBeanSwingJInternalFrame.detalleimpuestoinvens= new ArrayList<DetalleImpuestoInven>();
							this.jInternalFrameDetalleFormProducto.presupuestoventasBeanSwingJInternalFrame.presupuestoventass= new ArrayList<PresupuestoVentas>();
							this.jInternalFrameDetalleFormProducto.politicaproductoBeanSwingJInternalFrame.politicaproductos= new ArrayList<PoliticaProducto>();
							this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame.serieproductos= new ArrayList<SerieProducto>();
							this.jInternalFrameDetalleFormProducto.ubicacionproduBeanSwingJInternalFrame.ubicacionprodus= new ArrayList<UbicacionProdu>();
							this.jInternalFrameDetalleFormProducto.parametroproductoBeanSwingJInternalFrame.parametroproductos= new ArrayList<ParametroProducto>();
							this.jInternalFrameDetalleFormProducto.productounidadBeanSwingJInternalFrame.productounidads= new ArrayList<ProductoUnidad>();
							this.jInternalFrameDetalleFormProducto.ingredienteBeanSwingJInternalFrame.ingredientes= new ArrayList<Ingrediente>();
							this.jInternalFrameDetalleFormProducto.productocaracBeanSwingJInternalFrame.productocaracs= new ArrayList<ProductoCarac>();
							this.jInternalFrameDetalleFormProducto.servicioclienteBeanSwingJInternalFrame.servicioclientes= new ArrayList<ServicioCliente>();
							this.jInternalFrameDetalleFormProducto.productopromocionBeanSwingJInternalFrame.productopromocions= new ArrayList<ProductoPromocion>();
							this.jInternalFrameDetalleFormProducto.productoespeciBeanSwingJInternalFrame.productoespecis= new ArrayList<ProductoEspeci>();
							this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame.productoreemplas= new ArrayList<ProductoReempla>();
							this.jInternalFrameDetalleFormProducto.productoestadisticaBeanSwingJInternalFrame.productoestadisticas= new ArrayList<ProductoEstadistica>();
							this.jInternalFrameDetalleFormProducto.politicafactuBeanSwingJInternalFrame.politicafactus= new ArrayList<PoliticaFactu>();
							this.jInternalFrameDetalleFormProducto.productocuentacontableBeanSwingJInternalFrame.productocuentacontables= new ArrayList<ProductoCuentaContable>();
							this.jInternalFrameDetalleFormProducto.bodegaproductoBeanSwingJInternalFrame.bodegaproductos= new ArrayList<BodegaProducto>();
							this.jInternalFrameDetalleFormProducto.presupuestoproductoBeanSwingJInternalFrame.presupuestoproductos= new ArrayList<PresupuestoProducto>();
							this.jInternalFrameDetalleFormProducto.saldomesproductoBeanSwingJInternalFrame.saldomesproductos= new ArrayList<SaldoMesProducto>();
							}
							//ARCHITECTURE
						} else {
							
							

							if(this.jInternalFrameDetalleFormProducto.proveedorproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.proveedorproductoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormProducto.proveedorproductoBeanSwingJInternalFrame.quitarFilaTotales();}
							productoAux.setProveedorProductos(this.jInternalFrameDetalleFormProducto.proveedorproductoBeanSwingJInternalFrame.proveedorproductoLogic.getProveedorProductos());

							if(this.jInternalFrameDetalleFormProducto.precioBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.precioBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormProducto.precioBeanSwingJInternalFrame.quitarFilaTotales();}
							productoAux.setPrecios(this.jInternalFrameDetalleFormProducto.precioBeanSwingJInternalFrame.precioLogic.getPrecios());

							if(this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenBeanSwingJInternalFrame.quitarFilaTotales();}
							productoAux.setDetalleImpuestoInvens(this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenBeanSwingJInternalFrame.detalleimpuestoinvenLogic.getDetalleImpuestoInvens());

							if(this.jInternalFrameDetalleFormProducto.presupuestoventasBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.presupuestoventasBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormProducto.presupuestoventasBeanSwingJInternalFrame.quitarFilaTotales();}
							productoAux.setPresupuestoVentass(this.jInternalFrameDetalleFormProducto.presupuestoventasBeanSwingJInternalFrame.presupuestoventasLogic.getPresupuestoVentass());

							if(this.jInternalFrameDetalleFormProducto.politicaproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.politicaproductoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormProducto.politicaproductoBeanSwingJInternalFrame.quitarFilaTotales();}
							productoAux.setPoliticaProductos(this.jInternalFrameDetalleFormProducto.politicaproductoBeanSwingJInternalFrame.politicaproductoLogic.getPoliticaProductos());

							if(this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame.quitarFilaTotales();}
							productoAux.setSerieProductos(this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame.serieproductoLogic.getSerieProductos());

							if(this.jInternalFrameDetalleFormProducto.ubicacionproduBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.ubicacionproduBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormProducto.ubicacionproduBeanSwingJInternalFrame.quitarFilaTotales();}
							productoAux.setUbicacionProdus(this.jInternalFrameDetalleFormProducto.ubicacionproduBeanSwingJInternalFrame.ubicacionproduLogic.getUbicacionProdus());

							if(this.jInternalFrameDetalleFormProducto.parametroproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.parametroproductoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormProducto.parametroproductoBeanSwingJInternalFrame.quitarFilaTotales();}
							productoAux.setParametroProductos(this.jInternalFrameDetalleFormProducto.parametroproductoBeanSwingJInternalFrame.parametroproductoLogic.getParametroProductos());

							if(this.jInternalFrameDetalleFormProducto.productounidadBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.productounidadBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormProducto.productounidadBeanSwingJInternalFrame.quitarFilaTotales();}
							productoAux.setProductoUnidads(this.jInternalFrameDetalleFormProducto.productounidadBeanSwingJInternalFrame.productounidadLogic.getProductoUnidads());

							if(this.jInternalFrameDetalleFormProducto.ingredienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.ingredienteBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormProducto.ingredienteBeanSwingJInternalFrame.quitarFilaTotales();}
							productoAux.setIngredienteRelacions(this.jInternalFrameDetalleFormProducto.ingredienteBeanSwingJInternalFrame.ingredienteLogic.getIngredientes());

							if(this.jInternalFrameDetalleFormProducto.productocaracBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.productocaracBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormProducto.productocaracBeanSwingJInternalFrame.quitarFilaTotales();}
							productoAux.setProductoCaracs(this.jInternalFrameDetalleFormProducto.productocaracBeanSwingJInternalFrame.productocaracLogic.getProductoCaracs());

							if(this.jInternalFrameDetalleFormProducto.servicioclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.servicioclienteBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormProducto.servicioclienteBeanSwingJInternalFrame.quitarFilaTotales();}
							productoAux.setServicioClientes(this.jInternalFrameDetalleFormProducto.servicioclienteBeanSwingJInternalFrame.servicioclienteLogic.getServicioClientes());

							if(this.jInternalFrameDetalleFormProducto.productopromocionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.productopromocionBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormProducto.productopromocionBeanSwingJInternalFrame.quitarFilaTotales();}
							productoAux.setProductoPromocionRelacions(this.jInternalFrameDetalleFormProducto.productopromocionBeanSwingJInternalFrame.productopromocionLogic.getProductoPromocions());

							if(this.jInternalFrameDetalleFormProducto.productoespeciBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.productoespeciBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormProducto.productoespeciBeanSwingJInternalFrame.quitarFilaTotales();}
							productoAux.setProductoEspecis(this.jInternalFrameDetalleFormProducto.productoespeciBeanSwingJInternalFrame.productoespeciLogic.getProductoEspecis());

							if(this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame.quitarFilaTotales();}
							productoAux.setProductoReemplas(this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame.productoreemplaLogic.getProductoReemplas());

							if(this.jInternalFrameDetalleFormProducto.productoestadisticaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.productoestadisticaBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormProducto.productoestadisticaBeanSwingJInternalFrame.quitarFilaTotales();}
							productoAux.setProductoEstadisticas(this.jInternalFrameDetalleFormProducto.productoestadisticaBeanSwingJInternalFrame.productoestadisticaLogic.getProductoEstadisticas());

							if(this.jInternalFrameDetalleFormProducto.politicafactuBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.politicafactuBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormProducto.politicafactuBeanSwingJInternalFrame.quitarFilaTotales();}
							productoAux.setPoliticaFactus(this.jInternalFrameDetalleFormProducto.politicafactuBeanSwingJInternalFrame.politicafactuLogic.getPoliticaFactus());

							if(this.jInternalFrameDetalleFormProducto.productocuentacontableBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.productocuentacontableBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormProducto.productocuentacontableBeanSwingJInternalFrame.quitarFilaTotales();}
							productoAux.setProductoCuentaContables(this.jInternalFrameDetalleFormProducto.productocuentacontableBeanSwingJInternalFrame.productocuentacontableLogic.getProductoCuentaContables());

							if(this.jInternalFrameDetalleFormProducto.bodegaproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.bodegaproductoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormProducto.bodegaproductoBeanSwingJInternalFrame.quitarFilaTotales();}
							productoAux.setBodegaProductos(this.jInternalFrameDetalleFormProducto.bodegaproductoBeanSwingJInternalFrame.bodegaproductoLogic.getBodegaProductos());

							if(this.jInternalFrameDetalleFormProducto.presupuestoproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.presupuestoproductoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormProducto.presupuestoproductoBeanSwingJInternalFrame.quitarFilaTotales();}
							productoAux.setPresupuestoProductos(this.jInternalFrameDetalleFormProducto.presupuestoproductoBeanSwingJInternalFrame.presupuestoproductoLogic.getPresupuestoProductos());

							if(this.jInternalFrameDetalleFormProducto.saldomesproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.saldomesproductoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormProducto.saldomesproductoBeanSwingJInternalFrame.quitarFilaTotales();}
							productoAux.setSaldoMesProductos(this.jInternalFrameDetalleFormProducto.saldomesproductoBeanSwingJInternalFrame.saldomesproductoLogic.getSaldoMesProductos());
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.productoSessionBean.getEstaModoGuardarRelaciones() 
									|| this.productoSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(productoAux,productoLogic.getProductos());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(productoAux,productos);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.producto,productoAux);
					
						}
					}
				}				
			} else if(maintenanceType==MaintenanceType.ELIMINAR) {
				productoAux=new  Producto();
				
				productoAux.setIsNew(false);
				productoAux.setIsChanged(false);
				
				productoAux.setIsDeleted(true);
				
				productoAux.setId(this.producto.getId());	
				productoAux.setVersionRow(this.producto.getVersionRow());	
				productoAux.setid_empresa(this.producto.getid_empresa());	
				productoAux.setid_sucursal(this.producto.getid_sucursal());	
				productoAux.setcodigo(this.producto.getcodigo());	
				productoAux.setnombre(this.producto.getnombre());	
				productoAux.setnombre_extranjero(this.producto.getnombre_extranjero());	
				productoAux.setresumen_detalle(this.producto.getresumen_detalle());	
				productoAux.setcodigo_barra(this.producto.getcodigo_barra());	
				productoAux.setid_linea(this.producto.getid_linea());	
				productoAux.setid_linea_grupo(this.producto.getid_linea_grupo());	
				productoAux.setid_linea_categoria(this.producto.getid_linea_categoria());	
				productoAux.setid_linea_marca(this.producto.getid_linea_marca());	
				productoAux.setid_tipo_producto_servicio(this.producto.getid_tipo_producto_servicio());	
				productoAux.setid_tipo_producto_servicio_inven(this.producto.getid_tipo_producto_servicio_inven());	
				productoAux.setid_tipo_costeo(this.producto.getid_tipo_costeo());	
				productoAux.setid_unidad(this.producto.getid_unidad());	
				productoAux.setid_unidad_peso(this.producto.getid_unidad_peso());	
				productoAux.setid_arancel(this.producto.getid_arancel());	
				productoAux.setid_cliente(this.producto.getid_cliente());	
				productoAux.setid_cliente_proveedor_defecto(this.producto.getid_cliente_proveedor_defecto());	
				productoAux.setesta_activo(this.producto.getesta_activo());	
				productoAux.setdescripcion(this.producto.getdescripcion());	
				productoAux.setprecio(this.producto.getprecio());	
				productoAux.setiva(this.producto.getiva());	
				productoAux.setiva_valor(this.producto.getiva_valor());	
				productoAux.setice(this.producto.getice());	
				productoAux.setice_valor(this.producto.getice_valor());	
				productoAux.setdescuento(this.producto.getdescuento());	
				productoAux.setdescuento_valor(this.producto.getdescuento_valor());	
				productoAux.setarancel_porcentaje(this.producto.getarancel_porcentaje());	
				productoAux.setarancel_valor(this.producto.getarancel_valor());	
				productoAux.setcomision(this.producto.getcomision());	
				productoAux.setcomision_valor(this.producto.getcomision_valor());	
				productoAux.setdias_produccion(this.producto.getdias_produccion());	
				productoAux.setcon_stock_negativo(this.producto.getcon_stock_negativo());	
				productoAux.setcon_precio_minimo(this.producto.getcon_precio_minimo());	
				productoAux.setcon_lote(this.producto.getcon_lote());	
				productoAux.setcon_confirmacion(this.producto.getcon_confirmacion());	
				productoAux.setcon_presupuesto(this.producto.getcon_presupuesto());	
				productoAux.setcon_importacion(this.producto.getcon_importacion());	
				productoAux.setcon_final(this.producto.getcon_final());	
				productoAux.setcon_consep(this.producto.getcon_consep());	
				productoAux.setcon_serie(this.producto.getcon_serie());	
				productoAux.setcon_balanza(this.producto.getcon_balanza());	
				productoAux.setalto(this.producto.getalto());	
				productoAux.setancho(this.producto.getancho());	
				productoAux.setlargo(this.producto.getlargo());	
				productoAux.setvolumen(this.producto.getvolumen());	
				productoAux.setpeso(this.producto.getpeso());	
				productoAux.setgramos(this.producto.getgramos());	
				productoAux.setunidades_caja(this.producto.getunidades_caja());	
				productoAux.setmargen(this.producto.getmargen());	
				productoAux.setfactor(this.producto.getfactor());	
				productoAux.setfob(this.producto.getfob());	
				productoAux.setfob2(this.producto.getfob2());	
				productoAux.setid_tipo_producto(this.producto.getid_tipo_producto());	
				productoAux.setid_color_producto(this.producto.getid_color_producto());	
				productoAux.setid_clase_producto(this.producto.getid_clase_producto());	
				productoAux.setid_efecto_producto(this.producto.getid_efecto_producto());	
				productoAux.setid_marca_producto(this.producto.getid_marca_producto());	
				productoAux.setid_modelo_producto(this.producto.getid_modelo_producto());	
				productoAux.setid_material_producto(this.producto.getid_material_producto());	
				productoAux.setid_segmento_producto(this.producto.getid_segmento_producto());	
				productoAux.setid_talla_producto(this.producto.getid_talla_producto());	
				productoAux.setgrupo(this.producto.getgrupo());	
				productoAux.setreferencia(this.producto.getreferencia());	
				productoAux.setaplicacion(this.producto.getaplicacion());	
				productoAux.setprocedencia(this.producto.getprocedencia());	
				
				if(this.productoSessionBean.getEsGuardarRelacionado()) {
					//ELEMENTO ACTUAL NO SE HA INGRESADO AL SISTEMA, NO SE PUEDE ELIMINAR ALGO QUE NO EXISTE
					if(this.productoAux.getId()>=0) {	
						this.productosEliminados.add(productoAux);											
					}
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					actualizarLista(productoAux,productoLogic.getProductos());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(productoAux,productos);
				}
				//ARCHITECTURE
				
				
				if(!isGuardarCambiosEnLote && !this.productoSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.productoSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						productoLogic.saveProductos();//WithConnection
						//productoLogic.getSetVersionRowProductos();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.productoSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
							this.jInternalFrameDetalleFormProducto.proveedorproductoBeanSwingJInternalFrame.proveedorproductoLogic.getProveedorProductos().addAll(this.jInternalFrameDetalleFormProducto.proveedorproductoBeanSwingJInternalFrame.proveedorproductosEliminados);
							this.jInternalFrameDetalleFormProducto.precioBeanSwingJInternalFrame.precioLogic.getPrecios().addAll(this.jInternalFrameDetalleFormProducto.precioBeanSwingJInternalFrame.preciosEliminados);
							this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenBeanSwingJInternalFrame.detalleimpuestoinvenLogic.getDetalleImpuestoInvens().addAll(this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenBeanSwingJInternalFrame.detalleimpuestoinvensEliminados);
							this.jInternalFrameDetalleFormProducto.presupuestoventasBeanSwingJInternalFrame.presupuestoventasLogic.getPresupuestoVentass().addAll(this.jInternalFrameDetalleFormProducto.presupuestoventasBeanSwingJInternalFrame.presupuestoventassEliminados);
							this.jInternalFrameDetalleFormProducto.politicaproductoBeanSwingJInternalFrame.politicaproductoLogic.getPoliticaProductos().addAll(this.jInternalFrameDetalleFormProducto.politicaproductoBeanSwingJInternalFrame.politicaproductosEliminados);
							this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame.serieproductoLogic.getSerieProductos().addAll(this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame.serieproductosEliminados);
							this.jInternalFrameDetalleFormProducto.ubicacionproduBeanSwingJInternalFrame.ubicacionproduLogic.getUbicacionProdus().addAll(this.jInternalFrameDetalleFormProducto.ubicacionproduBeanSwingJInternalFrame.ubicacionprodusEliminados);
							this.jInternalFrameDetalleFormProducto.parametroproductoBeanSwingJInternalFrame.parametroproductoLogic.getParametroProductos().addAll(this.jInternalFrameDetalleFormProducto.parametroproductoBeanSwingJInternalFrame.parametroproductosEliminados);
							this.jInternalFrameDetalleFormProducto.productounidadBeanSwingJInternalFrame.productounidadLogic.getProductoUnidads().addAll(this.jInternalFrameDetalleFormProducto.productounidadBeanSwingJInternalFrame.productounidadsEliminados);
							this.jInternalFrameDetalleFormProducto.ingredienteBeanSwingJInternalFrame.ingredienteLogic.getIngredientes().addAll(this.jInternalFrameDetalleFormProducto.ingredienteBeanSwingJInternalFrame.ingredientesEliminados);
							this.jInternalFrameDetalleFormProducto.productocaracBeanSwingJInternalFrame.productocaracLogic.getProductoCaracs().addAll(this.jInternalFrameDetalleFormProducto.productocaracBeanSwingJInternalFrame.productocaracsEliminados);
							this.jInternalFrameDetalleFormProducto.servicioclienteBeanSwingJInternalFrame.servicioclienteLogic.getServicioClientes().addAll(this.jInternalFrameDetalleFormProducto.servicioclienteBeanSwingJInternalFrame.servicioclientesEliminados);
							this.jInternalFrameDetalleFormProducto.productopromocionBeanSwingJInternalFrame.productopromocionLogic.getProductoPromocions().addAll(this.jInternalFrameDetalleFormProducto.productopromocionBeanSwingJInternalFrame.productopromocionsEliminados);
							this.jInternalFrameDetalleFormProducto.productoespeciBeanSwingJInternalFrame.productoespeciLogic.getProductoEspecis().addAll(this.jInternalFrameDetalleFormProducto.productoespeciBeanSwingJInternalFrame.productoespecisEliminados);
							this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame.productoreemplaLogic.getProductoReemplas().addAll(this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame.productoreemplasEliminados);
							this.jInternalFrameDetalleFormProducto.productoestadisticaBeanSwingJInternalFrame.productoestadisticaLogic.getProductoEstadisticas().addAll(this.jInternalFrameDetalleFormProducto.productoestadisticaBeanSwingJInternalFrame.productoestadisticasEliminados);
							this.jInternalFrameDetalleFormProducto.politicafactuBeanSwingJInternalFrame.politicafactuLogic.getPoliticaFactus().addAll(this.jInternalFrameDetalleFormProducto.politicafactuBeanSwingJInternalFrame.politicafactusEliminados);
							this.jInternalFrameDetalleFormProducto.productocuentacontableBeanSwingJInternalFrame.productocuentacontableLogic.getProductoCuentaContables().addAll(this.jInternalFrameDetalleFormProducto.productocuentacontableBeanSwingJInternalFrame.productocuentacontablesEliminados);
							this.jInternalFrameDetalleFormProducto.bodegaproductoBeanSwingJInternalFrame.bodegaproductoLogic.getBodegaProductos().addAll(this.jInternalFrameDetalleFormProducto.bodegaproductoBeanSwingJInternalFrame.bodegaproductosEliminados);
							this.jInternalFrameDetalleFormProducto.presupuestoproductoBeanSwingJInternalFrame.presupuestoproductoLogic.getPresupuestoProductos().addAll(this.jInternalFrameDetalleFormProducto.presupuestoproductoBeanSwingJInternalFrame.presupuestoproductosEliminados);
							this.jInternalFrameDetalleFormProducto.saldomesproductoBeanSwingJInternalFrame.saldomesproductoLogic.getSaldoMesProductos().addAll(this.jInternalFrameDetalleFormProducto.saldomesproductoBeanSwingJInternalFrame.saldomesproductosEliminados);
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
							this.jInternalFrameDetalleFormProducto.proveedorproductoBeanSwingJInternalFrame.proveedorproductos.addAll(this.jInternalFrameDetalleFormProducto.proveedorproductoBeanSwingJInternalFrame.proveedorproductosEliminados);
							this.jInternalFrameDetalleFormProducto.precioBeanSwingJInternalFrame.precios.addAll(this.jInternalFrameDetalleFormProducto.precioBeanSwingJInternalFrame.preciosEliminados);
							this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenBeanSwingJInternalFrame.detalleimpuestoinvens.addAll(this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenBeanSwingJInternalFrame.detalleimpuestoinvensEliminados);
							this.jInternalFrameDetalleFormProducto.presupuestoventasBeanSwingJInternalFrame.presupuestoventass.addAll(this.jInternalFrameDetalleFormProducto.presupuestoventasBeanSwingJInternalFrame.presupuestoventassEliminados);
							this.jInternalFrameDetalleFormProducto.politicaproductoBeanSwingJInternalFrame.politicaproductos.addAll(this.jInternalFrameDetalleFormProducto.politicaproductoBeanSwingJInternalFrame.politicaproductosEliminados);
							this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame.serieproductos.addAll(this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame.serieproductosEliminados);
							this.jInternalFrameDetalleFormProducto.ubicacionproduBeanSwingJInternalFrame.ubicacionprodus.addAll(this.jInternalFrameDetalleFormProducto.ubicacionproduBeanSwingJInternalFrame.ubicacionprodusEliminados);
							this.jInternalFrameDetalleFormProducto.parametroproductoBeanSwingJInternalFrame.parametroproductos.addAll(this.jInternalFrameDetalleFormProducto.parametroproductoBeanSwingJInternalFrame.parametroproductosEliminados);
							this.jInternalFrameDetalleFormProducto.productounidadBeanSwingJInternalFrame.productounidads.addAll(this.jInternalFrameDetalleFormProducto.productounidadBeanSwingJInternalFrame.productounidadsEliminados);
							this.jInternalFrameDetalleFormProducto.ingredienteBeanSwingJInternalFrame.ingredientes.addAll(this.jInternalFrameDetalleFormProducto.ingredienteBeanSwingJInternalFrame.ingredientesEliminados);
							this.jInternalFrameDetalleFormProducto.productocaracBeanSwingJInternalFrame.productocaracs.addAll(this.jInternalFrameDetalleFormProducto.productocaracBeanSwingJInternalFrame.productocaracsEliminados);
							this.jInternalFrameDetalleFormProducto.servicioclienteBeanSwingJInternalFrame.servicioclientes.addAll(this.jInternalFrameDetalleFormProducto.servicioclienteBeanSwingJInternalFrame.servicioclientesEliminados);
							this.jInternalFrameDetalleFormProducto.productopromocionBeanSwingJInternalFrame.productopromocions.addAll(this.jInternalFrameDetalleFormProducto.productopromocionBeanSwingJInternalFrame.productopromocionsEliminados);
							this.jInternalFrameDetalleFormProducto.productoespeciBeanSwingJInternalFrame.productoespecis.addAll(this.jInternalFrameDetalleFormProducto.productoespeciBeanSwingJInternalFrame.productoespecisEliminados);
							this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame.productoreemplas.addAll(this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame.productoreemplasEliminados);
							this.jInternalFrameDetalleFormProducto.productoestadisticaBeanSwingJInternalFrame.productoestadisticas.addAll(this.jInternalFrameDetalleFormProducto.productoestadisticaBeanSwingJInternalFrame.productoestadisticasEliminados);
							this.jInternalFrameDetalleFormProducto.politicafactuBeanSwingJInternalFrame.politicafactus.addAll(this.jInternalFrameDetalleFormProducto.politicafactuBeanSwingJInternalFrame.politicafactusEliminados);
							this.jInternalFrameDetalleFormProducto.productocuentacontableBeanSwingJInternalFrame.productocuentacontables.addAll(this.jInternalFrameDetalleFormProducto.productocuentacontableBeanSwingJInternalFrame.productocuentacontablesEliminados);
							this.jInternalFrameDetalleFormProducto.bodegaproductoBeanSwingJInternalFrame.bodegaproductos.addAll(this.jInternalFrameDetalleFormProducto.bodegaproductoBeanSwingJInternalFrame.bodegaproductosEliminados);
							this.jInternalFrameDetalleFormProducto.presupuestoproductoBeanSwingJInternalFrame.presupuestoproductos.addAll(this.jInternalFrameDetalleFormProducto.presupuestoproductoBeanSwingJInternalFrame.presupuestoproductosEliminados);
							this.jInternalFrameDetalleFormProducto.saldomesproductoBeanSwingJInternalFrame.saldomesproductos.addAll(this.jInternalFrameDetalleFormProducto.saldomesproductoBeanSwingJInternalFrame.saldomesproductosEliminados);
						}
						//ARCHITECTURE
						
						
						if(!this.productoSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
								if(this.jInternalFrameDetalleFormProducto.proveedorproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.proveedorproductoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.proveedorproductoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.precioBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.precioBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.precioBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.presupuestoventasBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.presupuestoventasBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.presupuestoventasBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.politicaproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.politicaproductoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.politicaproductoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame.jInternalFrameDetalleFormSerieProducto.detalleserieproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame.jInternalFrameDetalleFormSerieProducto.detalleserieproductoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame.jInternalFrameDetalleFormSerieProducto.detalleserieproductoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.ubicacionproduBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.ubicacionproduBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.ubicacionproduBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.parametroproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.parametroproductoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.parametroproductoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.productounidadBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.productounidadBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.productounidadBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.ingredienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.ingredienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.ingredienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.productocaracBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.productocaracBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.productocaracBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.servicioclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.servicioclienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.servicioclienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.productopromocionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.productopromocionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.productopromocionBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.productoespeciBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.productoespeciBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.productoespeciBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame.jInternalFrameDetalleFormProductoReempla.productoreemplaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame.jInternalFrameDetalleFormProductoReempla.productoreemplaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame.jInternalFrameDetalleFormProductoReempla.productoreemplaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.productoestadisticaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.productoestadisticaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.productoestadisticaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.politicafactuBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.politicafactuBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.politicafactuBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.productocuentacontableBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.productocuentacontableBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.productocuentacontableBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.bodegaproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.bodegaproductoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.bodegaproductoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.presupuestoproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.presupuestoproductoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.presupuestoproductoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.saldomesproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.saldomesproductoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.saldomesproductoBeanSwingJInternalFrame.quitarFilaTotales();*/}
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
								if(this.jInternalFrameDetalleFormProducto.proveedorproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.proveedorproductoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.proveedorproductoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.precioBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.precioBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.precioBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.presupuestoventasBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.presupuestoventasBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.presupuestoventasBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.politicaproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.politicaproductoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.politicaproductoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame.jInternalFrameDetalleFormSerieProducto.detalleserieproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame.jInternalFrameDetalleFormSerieProducto.detalleserieproductoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame.jInternalFrameDetalleFormSerieProducto.detalleserieproductoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.ubicacionproduBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.ubicacionproduBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.ubicacionproduBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.parametroproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.parametroproductoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.parametroproductoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.productounidadBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.productounidadBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.productounidadBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.ingredienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.ingredienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.ingredienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.productocaracBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.productocaracBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.productocaracBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.servicioclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.servicioclienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.servicioclienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.productopromocionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.productopromocionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.productopromocionBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.productoespeciBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.productoespeciBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.productoespeciBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame.jInternalFrameDetalleFormProductoReempla.productoreemplaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame.jInternalFrameDetalleFormProductoReempla.productoreemplaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame.jInternalFrameDetalleFormProductoReempla.productoreemplaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.productoestadisticaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.productoestadisticaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.productoestadisticaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.politicafactuBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.politicafactuBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.politicafactuBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.productocuentacontableBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.productocuentacontableBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.productocuentacontableBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.bodegaproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.bodegaproductoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.bodegaproductoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.presupuestoproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.presupuestoproductoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.presupuestoproductoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProducto.saldomesproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.saldomesproductoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProducto.saldomesproductoBeanSwingJInternalFrame.quitarFilaTotales();*/}	
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								productoLogic.saveProductoRelaciones(productoAux,this.jInternalFrameDetalleFormProducto.proveedorproductoBeanSwingJInternalFrame.proveedorproductoLogic.getProveedorProductos(),this.jInternalFrameDetalleFormProducto.precioBeanSwingJInternalFrame.precioLogic.getPrecios(),this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenBeanSwingJInternalFrame.detalleimpuestoinvenLogic.getDetalleImpuestoInvens(),this.jInternalFrameDetalleFormProducto.presupuestoventasBeanSwingJInternalFrame.presupuestoventasLogic.getPresupuestoVentass(),this.jInternalFrameDetalleFormProducto.politicaproductoBeanSwingJInternalFrame.politicaproductoLogic.getPoliticaProductos(),this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame.serieproductoLogic.getSerieProductos(),this.jInternalFrameDetalleFormProducto.ubicacionproduBeanSwingJInternalFrame.ubicacionproduLogic.getUbicacionProdus(),this.jInternalFrameDetalleFormProducto.parametroproductoBeanSwingJInternalFrame.parametroproductoLogic.getParametroProductos(),this.jInternalFrameDetalleFormProducto.productounidadBeanSwingJInternalFrame.productounidadLogic.getProductoUnidads(),this.jInternalFrameDetalleFormProducto.ingredienteBeanSwingJInternalFrame.ingredienteLogic.getIngredientes(),this.jInternalFrameDetalleFormProducto.productocaracBeanSwingJInternalFrame.productocaracLogic.getProductoCaracs(),this.jInternalFrameDetalleFormProducto.servicioclienteBeanSwingJInternalFrame.servicioclienteLogic.getServicioClientes(),this.jInternalFrameDetalleFormProducto.productopromocionBeanSwingJInternalFrame.productopromocionLogic.getProductoPromocions(),this.jInternalFrameDetalleFormProducto.productoespeciBeanSwingJInternalFrame.productoespeciLogic.getProductoEspecis(),this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame.productoreemplaLogic.getProductoReemplas(),this.jInternalFrameDetalleFormProducto.productoestadisticaBeanSwingJInternalFrame.productoestadisticaLogic.getProductoEstadisticas(),this.jInternalFrameDetalleFormProducto.politicafactuBeanSwingJInternalFrame.politicafactuLogic.getPoliticaFactus(),this.jInternalFrameDetalleFormProducto.productocuentacontableBeanSwingJInternalFrame.productocuentacontableLogic.getProductoCuentaContables(),this.jInternalFrameDetalleFormProducto.bodegaproductoBeanSwingJInternalFrame.bodegaproductoLogic.getBodegaProductos(),this.jInternalFrameDetalleFormProducto.presupuestoproductoBeanSwingJInternalFrame.presupuestoproductoLogic.getPresupuestoProductos(),this.jInternalFrameDetalleFormProducto.saldomesproductoBeanSwingJInternalFrame.saldomesproductoLogic.getSaldoMesProductos());//WithConnection
								//productoLogic.getSetVersionRowProductos();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							this.jInternalFrameDetalleFormProducto.proveedorproductoBeanSwingJInternalFrame.proveedorproductoLogic.setProveedorProductos(new ArrayList<ProveedorProducto>());
							this.jInternalFrameDetalleFormProducto.precioBeanSwingJInternalFrame.precioLogic.setPrecios(new ArrayList<Precio>());
							this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenBeanSwingJInternalFrame.detalleimpuestoinvenLogic.setDetalleImpuestoInvens(new ArrayList<DetalleImpuestoInven>());
							this.jInternalFrameDetalleFormProducto.presupuestoventasBeanSwingJInternalFrame.presupuestoventasLogic.setPresupuestoVentass(new ArrayList<PresupuestoVentas>());
							this.jInternalFrameDetalleFormProducto.politicaproductoBeanSwingJInternalFrame.politicaproductoLogic.setPoliticaProductos(new ArrayList<PoliticaProducto>());
							this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame.serieproductoLogic.setSerieProductos(new ArrayList<SerieProducto>());
							this.jInternalFrameDetalleFormProducto.ubicacionproduBeanSwingJInternalFrame.ubicacionproduLogic.setUbicacionProdus(new ArrayList<UbicacionProdu>());
							this.jInternalFrameDetalleFormProducto.parametroproductoBeanSwingJInternalFrame.parametroproductoLogic.setParametroProductos(new ArrayList<ParametroProducto>());
							this.jInternalFrameDetalleFormProducto.productounidadBeanSwingJInternalFrame.productounidadLogic.setProductoUnidads(new ArrayList<ProductoUnidad>());
							this.jInternalFrameDetalleFormProducto.ingredienteBeanSwingJInternalFrame.ingredienteLogic.setIngredientes(new ArrayList<Ingrediente>());
							this.jInternalFrameDetalleFormProducto.productocaracBeanSwingJInternalFrame.productocaracLogic.setProductoCaracs(new ArrayList<ProductoCarac>());
							this.jInternalFrameDetalleFormProducto.servicioclienteBeanSwingJInternalFrame.servicioclienteLogic.setServicioClientes(new ArrayList<ServicioCliente>());
							this.jInternalFrameDetalleFormProducto.productopromocionBeanSwingJInternalFrame.productopromocionLogic.setProductoPromocions(new ArrayList<ProductoPromocion>());
							this.jInternalFrameDetalleFormProducto.productoespeciBeanSwingJInternalFrame.productoespeciLogic.setProductoEspecis(new ArrayList<ProductoEspeci>());
							this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame.productoreemplaLogic.setProductoReemplas(new ArrayList<ProductoReempla>());
							this.jInternalFrameDetalleFormProducto.productoestadisticaBeanSwingJInternalFrame.productoestadisticaLogic.setProductoEstadisticas(new ArrayList<ProductoEstadistica>());
							this.jInternalFrameDetalleFormProducto.politicafactuBeanSwingJInternalFrame.politicafactuLogic.setPoliticaFactus(new ArrayList<PoliticaFactu>());
							this.jInternalFrameDetalleFormProducto.productocuentacontableBeanSwingJInternalFrame.productocuentacontableLogic.setProductoCuentaContables(new ArrayList<ProductoCuentaContable>());
							this.jInternalFrameDetalleFormProducto.bodegaproductoBeanSwingJInternalFrame.bodegaproductoLogic.setBodegaProductos(new ArrayList<BodegaProducto>());
							this.jInternalFrameDetalleFormProducto.presupuestoproductoBeanSwingJInternalFrame.presupuestoproductoLogic.setPresupuestoProductos(new ArrayList<PresupuestoProducto>());
							this.jInternalFrameDetalleFormProducto.saldomesproductoBeanSwingJInternalFrame.saldomesproductoLogic.setSaldoMesProductos(new ArrayList<SaldoMesProducto>());
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							this.jInternalFrameDetalleFormProducto.proveedorproductoBeanSwingJInternalFrame.proveedorproductos= new ArrayList<ProveedorProducto>();
							this.jInternalFrameDetalleFormProducto.precioBeanSwingJInternalFrame.precios= new ArrayList<Precio>();
							this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenBeanSwingJInternalFrame.detalleimpuestoinvens= new ArrayList<DetalleImpuestoInven>();
							this.jInternalFrameDetalleFormProducto.presupuestoventasBeanSwingJInternalFrame.presupuestoventass= new ArrayList<PresupuestoVentas>();
							this.jInternalFrameDetalleFormProducto.politicaproductoBeanSwingJInternalFrame.politicaproductos= new ArrayList<PoliticaProducto>();
							this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame.serieproductos= new ArrayList<SerieProducto>();
							this.jInternalFrameDetalleFormProducto.ubicacionproduBeanSwingJInternalFrame.ubicacionprodus= new ArrayList<UbicacionProdu>();
							this.jInternalFrameDetalleFormProducto.parametroproductoBeanSwingJInternalFrame.parametroproductos= new ArrayList<ParametroProducto>();
							this.jInternalFrameDetalleFormProducto.productounidadBeanSwingJInternalFrame.productounidads= new ArrayList<ProductoUnidad>();
							this.jInternalFrameDetalleFormProducto.ingredienteBeanSwingJInternalFrame.ingredientes= new ArrayList<Ingrediente>();
							this.jInternalFrameDetalleFormProducto.productocaracBeanSwingJInternalFrame.productocaracs= new ArrayList<ProductoCarac>();
							this.jInternalFrameDetalleFormProducto.servicioclienteBeanSwingJInternalFrame.servicioclientes= new ArrayList<ServicioCliente>();
							this.jInternalFrameDetalleFormProducto.productopromocionBeanSwingJInternalFrame.productopromocions= new ArrayList<ProductoPromocion>();
							this.jInternalFrameDetalleFormProducto.productoespeciBeanSwingJInternalFrame.productoespecis= new ArrayList<ProductoEspeci>();
							this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame.productoreemplas= new ArrayList<ProductoReempla>();
							this.jInternalFrameDetalleFormProducto.productoestadisticaBeanSwingJInternalFrame.productoestadisticas= new ArrayList<ProductoEstadistica>();
							this.jInternalFrameDetalleFormProducto.politicafactuBeanSwingJInternalFrame.politicafactus= new ArrayList<PoliticaFactu>();
							this.jInternalFrameDetalleFormProducto.productocuentacontableBeanSwingJInternalFrame.productocuentacontables= new ArrayList<ProductoCuentaContable>();
							this.jInternalFrameDetalleFormProducto.bodegaproductoBeanSwingJInternalFrame.bodegaproductos= new ArrayList<BodegaProducto>();
							this.jInternalFrameDetalleFormProducto.presupuestoproductoBeanSwingJInternalFrame.presupuestoproductos= new ArrayList<PresupuestoProducto>();
							this.jInternalFrameDetalleFormProducto.saldomesproductoBeanSwingJInternalFrame.saldomesproductos= new ArrayList<SaldoMesProducto>();
							}
							//ARCHITECTURE
						}
					}  else {
							
						

							if(this.jInternalFrameDetalleFormProducto.proveedorproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.proveedorproductoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormProducto.proveedorproductoBeanSwingJInternalFrame.quitarFilaTotales();}
							productoAux.setProveedorProductos(this.jInternalFrameDetalleFormProducto.proveedorproductoBeanSwingJInternalFrame.proveedorproductoLogic.getProveedorProductos());

							if(this.jInternalFrameDetalleFormProducto.precioBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.precioBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormProducto.precioBeanSwingJInternalFrame.quitarFilaTotales();}
							productoAux.setPrecios(this.jInternalFrameDetalleFormProducto.precioBeanSwingJInternalFrame.precioLogic.getPrecios());

							if(this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenBeanSwingJInternalFrame.quitarFilaTotales();}
							productoAux.setDetalleImpuestoInvens(this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenBeanSwingJInternalFrame.detalleimpuestoinvenLogic.getDetalleImpuestoInvens());

							if(this.jInternalFrameDetalleFormProducto.presupuestoventasBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.presupuestoventasBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormProducto.presupuestoventasBeanSwingJInternalFrame.quitarFilaTotales();}
							productoAux.setPresupuestoVentass(this.jInternalFrameDetalleFormProducto.presupuestoventasBeanSwingJInternalFrame.presupuestoventasLogic.getPresupuestoVentass());

							if(this.jInternalFrameDetalleFormProducto.politicaproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.politicaproductoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormProducto.politicaproductoBeanSwingJInternalFrame.quitarFilaTotales();}
							productoAux.setPoliticaProductos(this.jInternalFrameDetalleFormProducto.politicaproductoBeanSwingJInternalFrame.politicaproductoLogic.getPoliticaProductos());

							if(this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame.quitarFilaTotales();}
							productoAux.setSerieProductos(this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame.serieproductoLogic.getSerieProductos());

							if(this.jInternalFrameDetalleFormProducto.ubicacionproduBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.ubicacionproduBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormProducto.ubicacionproduBeanSwingJInternalFrame.quitarFilaTotales();}
							productoAux.setUbicacionProdus(this.jInternalFrameDetalleFormProducto.ubicacionproduBeanSwingJInternalFrame.ubicacionproduLogic.getUbicacionProdus());

							if(this.jInternalFrameDetalleFormProducto.parametroproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.parametroproductoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormProducto.parametroproductoBeanSwingJInternalFrame.quitarFilaTotales();}
							productoAux.setParametroProductos(this.jInternalFrameDetalleFormProducto.parametroproductoBeanSwingJInternalFrame.parametroproductoLogic.getParametroProductos());

							if(this.jInternalFrameDetalleFormProducto.productounidadBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.productounidadBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormProducto.productounidadBeanSwingJInternalFrame.quitarFilaTotales();}
							productoAux.setProductoUnidads(this.jInternalFrameDetalleFormProducto.productounidadBeanSwingJInternalFrame.productounidadLogic.getProductoUnidads());

							if(this.jInternalFrameDetalleFormProducto.ingredienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.ingredienteBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormProducto.ingredienteBeanSwingJInternalFrame.quitarFilaTotales();}
							productoAux.setIngredienteRelacions(this.jInternalFrameDetalleFormProducto.ingredienteBeanSwingJInternalFrame.ingredienteLogic.getIngredientes());

							if(this.jInternalFrameDetalleFormProducto.productocaracBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.productocaracBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormProducto.productocaracBeanSwingJInternalFrame.quitarFilaTotales();}
							productoAux.setProductoCaracs(this.jInternalFrameDetalleFormProducto.productocaracBeanSwingJInternalFrame.productocaracLogic.getProductoCaracs());

							if(this.jInternalFrameDetalleFormProducto.servicioclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.servicioclienteBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormProducto.servicioclienteBeanSwingJInternalFrame.quitarFilaTotales();}
							productoAux.setServicioClientes(this.jInternalFrameDetalleFormProducto.servicioclienteBeanSwingJInternalFrame.servicioclienteLogic.getServicioClientes());

							if(this.jInternalFrameDetalleFormProducto.productopromocionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.productopromocionBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormProducto.productopromocionBeanSwingJInternalFrame.quitarFilaTotales();}
							productoAux.setProductoPromocionRelacions(this.jInternalFrameDetalleFormProducto.productopromocionBeanSwingJInternalFrame.productopromocionLogic.getProductoPromocions());

							if(this.jInternalFrameDetalleFormProducto.productoespeciBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.productoespeciBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormProducto.productoespeciBeanSwingJInternalFrame.quitarFilaTotales();}
							productoAux.setProductoEspecis(this.jInternalFrameDetalleFormProducto.productoespeciBeanSwingJInternalFrame.productoespeciLogic.getProductoEspecis());

							if(this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame.quitarFilaTotales();}
							productoAux.setProductoReemplas(this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame.productoreemplaLogic.getProductoReemplas());

							if(this.jInternalFrameDetalleFormProducto.productoestadisticaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.productoestadisticaBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormProducto.productoestadisticaBeanSwingJInternalFrame.quitarFilaTotales();}
							productoAux.setProductoEstadisticas(this.jInternalFrameDetalleFormProducto.productoestadisticaBeanSwingJInternalFrame.productoestadisticaLogic.getProductoEstadisticas());

							if(this.jInternalFrameDetalleFormProducto.politicafactuBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.politicafactuBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormProducto.politicafactuBeanSwingJInternalFrame.quitarFilaTotales();}
							productoAux.setPoliticaFactus(this.jInternalFrameDetalleFormProducto.politicafactuBeanSwingJInternalFrame.politicafactuLogic.getPoliticaFactus());

							if(this.jInternalFrameDetalleFormProducto.productocuentacontableBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.productocuentacontableBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormProducto.productocuentacontableBeanSwingJInternalFrame.quitarFilaTotales();}
							productoAux.setProductoCuentaContables(this.jInternalFrameDetalleFormProducto.productocuentacontableBeanSwingJInternalFrame.productocuentacontableLogic.getProductoCuentaContables());

							if(this.jInternalFrameDetalleFormProducto.bodegaproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.bodegaproductoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormProducto.bodegaproductoBeanSwingJInternalFrame.quitarFilaTotales();}
							productoAux.setBodegaProductos(this.jInternalFrameDetalleFormProducto.bodegaproductoBeanSwingJInternalFrame.bodegaproductoLogic.getBodegaProductos());

							if(this.jInternalFrameDetalleFormProducto.presupuestoproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.presupuestoproductoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormProducto.presupuestoproductoBeanSwingJInternalFrame.quitarFilaTotales();}
							productoAux.setPresupuestoProductos(this.jInternalFrameDetalleFormProducto.presupuestoproductoBeanSwingJInternalFrame.presupuestoproductoLogic.getPresupuestoProductos());

							if(this.jInternalFrameDetalleFormProducto.saldomesproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.saldomesproductoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormProducto.saldomesproductoBeanSwingJInternalFrame.quitarFilaTotales();}
							productoAux.setSaldoMesProductos(this.jInternalFrameDetalleFormProducto.saldomesproductoBeanSwingJInternalFrame.saldomesproductoLogic.getSaldoMesProductos());
								
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							if(this.productoSessionBean.getEstaModoGuardarRelaciones() 
								|| this.productoSessionBean.getEsGuardarRelacionado())	{
								actualizarLista(productoAux,productoLogic.getProductos());
							}
						} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
							actualizarLista(productoAux,productos);
						}
						//ARCHITECTURE
					}
				}				
			} else if(maintenanceType==MaintenanceType.GUARDARCAMBIOS) {		
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.getProductos().addAll(this.productosEliminados);
					
					productoLogic.saveProductos();//WithConnection
					//productoLogic.getSetVersionRowProductos();//WithConnection
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}	
				//ARCHITECTURE
				this.refrescarForeignKeysDescripcionesProducto();
				
				this.productosEliminados= new ArrayList<Producto>();		
			}
			
			if(this.productoSessionBean.getEsGuardarRelacionado()) {
				 this.crearFilaTotales();
			}
			
			
									
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.productoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				if(!this.isPostAccionSinMensaje) {
					JOptionPane.showMessageDialog(this,"Producto GUARDADO CORRECTAMENTE","MANTENIMIENTO DE Producto",JOptionPane.INFORMATION_MESSAGE);
					if(maintenanceType==MaintenanceType.NUEVO || maintenanceType==MaintenanceType.ACTUALIZAR) {
						//CUANDO ES NUEVO SE PIERDE REFERENCIA NO SE PORQUE
						this.producto=productoAux;
					}
				}
			}
			
			this.isErrorGuardar=false;
			
			this.inicializarInvalidValues();
		/*
		} else {
			this.mostrarInvalidValues();	
		}
		*/
			
		} catch(Exception e) {
			this.isErrorGuardar=true;
			
			this.crearFilaTotales();
			
			throw e;
		} finally {
      		//this.finishProcessProducto();
      	}
		
	}	
	
	public void actualizarRelaciones(Producto productoLocal) throws Exception {
		
		if(this.productoSessionBean.getConGuardarRelaciones()) {			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
			
				productoLocal.setProveedorProductos(this.jInternalFrameDetalleFormProducto.proveedorproductoBeanSwingJInternalFrame.proveedorproductoLogic.getProveedorProductos());
				productoLocal.setPrecios(this.jInternalFrameDetalleFormProducto.precioBeanSwingJInternalFrame.precioLogic.getPrecios());
				productoLocal.setDetalleImpuestoInvens(this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenBeanSwingJInternalFrame.detalleimpuestoinvenLogic.getDetalleImpuestoInvens());
				productoLocal.setPresupuestoVentass(this.jInternalFrameDetalleFormProducto.presupuestoventasBeanSwingJInternalFrame.presupuestoventasLogic.getPresupuestoVentass());
				productoLocal.setPoliticaProductos(this.jInternalFrameDetalleFormProducto.politicaproductoBeanSwingJInternalFrame.politicaproductoLogic.getPoliticaProductos());
				productoLocal.setSerieProductos(this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame.serieproductoLogic.getSerieProductos());
				productoLocal.setUbicacionProdus(this.jInternalFrameDetalleFormProducto.ubicacionproduBeanSwingJInternalFrame.ubicacionproduLogic.getUbicacionProdus());
				productoLocal.setParametroProductos(this.jInternalFrameDetalleFormProducto.parametroproductoBeanSwingJInternalFrame.parametroproductoLogic.getParametroProductos());
				productoLocal.setProductoUnidads(this.jInternalFrameDetalleFormProducto.productounidadBeanSwingJInternalFrame.productounidadLogic.getProductoUnidads());
				productoLocal.setIngredienteRelacions(this.jInternalFrameDetalleFormProducto.ingredienteBeanSwingJInternalFrame.ingredienteLogic.getIngredientes());
				productoLocal.setProductoCaracs(this.jInternalFrameDetalleFormProducto.productocaracBeanSwingJInternalFrame.productocaracLogic.getProductoCaracs());
				productoLocal.setServicioClientes(this.jInternalFrameDetalleFormProducto.servicioclienteBeanSwingJInternalFrame.servicioclienteLogic.getServicioClientes());
				productoLocal.setProductoPromocionRelacions(this.jInternalFrameDetalleFormProducto.productopromocionBeanSwingJInternalFrame.productopromocionLogic.getProductoPromocions());
				productoLocal.setProductoEspecis(this.jInternalFrameDetalleFormProducto.productoespeciBeanSwingJInternalFrame.productoespeciLogic.getProductoEspecis());
				productoLocal.setProductoReemplas(this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame.productoreemplaLogic.getProductoReemplas());
				productoLocal.setProductoEstadisticas(this.jInternalFrameDetalleFormProducto.productoestadisticaBeanSwingJInternalFrame.productoestadisticaLogic.getProductoEstadisticas());
				productoLocal.setPoliticaFactus(this.jInternalFrameDetalleFormProducto.politicafactuBeanSwingJInternalFrame.politicafactuLogic.getPoliticaFactus());
				productoLocal.setProductoCuentaContables(this.jInternalFrameDetalleFormProducto.productocuentacontableBeanSwingJInternalFrame.productocuentacontableLogic.getProductoCuentaContables());
				productoLocal.setBodegaProductos(this.jInternalFrameDetalleFormProducto.bodegaproductoBeanSwingJInternalFrame.bodegaproductoLogic.getBodegaProductos());
				productoLocal.setPresupuestoProductos(this.jInternalFrameDetalleFormProducto.presupuestoproductoBeanSwingJInternalFrame.presupuestoproductoLogic.getPresupuestoProductos());
				productoLocal.setSaldoMesProductos(this.jInternalFrameDetalleFormProducto.saldomesproductoBeanSwingJInternalFrame.saldomesproductoLogic.getSaldoMesProductos());
			
			} else {
			
				productoLocal.setProveedorProductos(this.jInternalFrameDetalleFormProducto.proveedorproductoBeanSwingJInternalFrame.proveedorproductos);
				productoLocal.setPrecios(this.jInternalFrameDetalleFormProducto.precioBeanSwingJInternalFrame.precios);
				productoLocal.setDetalleImpuestoInvens(this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenBeanSwingJInternalFrame.detalleimpuestoinvens);
				productoLocal.setPresupuestoVentass(this.jInternalFrameDetalleFormProducto.presupuestoventasBeanSwingJInternalFrame.presupuestoventass);
				productoLocal.setPoliticaProductos(this.jInternalFrameDetalleFormProducto.politicaproductoBeanSwingJInternalFrame.politicaproductos);
				productoLocal.setSerieProductos(this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame.serieproductos);
				productoLocal.setUbicacionProdus(this.jInternalFrameDetalleFormProducto.ubicacionproduBeanSwingJInternalFrame.ubicacionprodus);
				productoLocal.setParametroProductos(this.jInternalFrameDetalleFormProducto.parametroproductoBeanSwingJInternalFrame.parametroproductos);
				productoLocal.setProductoUnidads(this.jInternalFrameDetalleFormProducto.productounidadBeanSwingJInternalFrame.productounidads);
				productoLocal.setIngredienteRelacions(this.jInternalFrameDetalleFormProducto.ingredienteBeanSwingJInternalFrame.ingredientes);
				productoLocal.setProductoCaracs(this.jInternalFrameDetalleFormProducto.productocaracBeanSwingJInternalFrame.productocaracs);
				productoLocal.setServicioClientes(this.jInternalFrameDetalleFormProducto.servicioclienteBeanSwingJInternalFrame.servicioclientes);
				productoLocal.setProductoPromocionRelacions(this.jInternalFrameDetalleFormProducto.productopromocionBeanSwingJInternalFrame.productopromocions);
				productoLocal.setProductoEspecis(this.jInternalFrameDetalleFormProducto.productoespeciBeanSwingJInternalFrame.productoespecis);
				productoLocal.setProductoReemplas(this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame.productoreemplas);
				productoLocal.setProductoEstadisticas(this.jInternalFrameDetalleFormProducto.productoestadisticaBeanSwingJInternalFrame.productoestadisticas);
				productoLocal.setPoliticaFactus(this.jInternalFrameDetalleFormProducto.politicafactuBeanSwingJInternalFrame.politicafactus);
				productoLocal.setProductoCuentaContables(this.jInternalFrameDetalleFormProducto.productocuentacontableBeanSwingJInternalFrame.productocuentacontables);
				productoLocal.setBodegaProductos(this.jInternalFrameDetalleFormProducto.bodegaproductoBeanSwingJInternalFrame.bodegaproductos);
				productoLocal.setPresupuestoProductos(this.jInternalFrameDetalleFormProducto.presupuestoproductoBeanSwingJInternalFrame.presupuestoproductos);
				productoLocal.setSaldoMesProductos(this.jInternalFrameDetalleFormProducto.saldomesproductoBeanSwingJInternalFrame.saldomesproductos);	
			}
		}
	}
	
	public void actualizarRelacionFkPadreActual(Producto productoLocal) throws Exception {	
		if(this.productoSessionBean.getEsGuardarRelacionado()) {			
			
		
			if(this.jInternalFrameParent.getClass().equals(EmpresaDetalleFormJInternalFrame.class)) {
				EmpresaBeanSwingJInternalFrame empresaBeanSwingJInternalFrameLocal=(EmpresaBeanSwingJInternalFrame) ((EmpresaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				empresaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEmpresa(empresaBeanSwingJInternalFrameLocal.getempresa(),true);
				empresaBeanSwingJInternalFrameLocal.actualizarLista(empresaBeanSwingJInternalFrameLocal.empresa,this.empresasForeignKey);

				empresaBeanSwingJInternalFrameLocal.actualizarRelaciones(empresaBeanSwingJInternalFrameLocal.empresa);

				productoLocal.setEmpresa(empresaBeanSwingJInternalFrameLocal.empresa);

				this.addItemDefectoCombosForeignKeyEmpresa();
				this.cargarCombosFrameEmpresasForeignKey("Formulario");
				this.setActualEmpresaForeignKey(empresaBeanSwingJInternalFrameLocal.empresa.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(SucursalDetalleFormJInternalFrame.class)) {
				SucursalBeanSwingJInternalFrame sucursalBeanSwingJInternalFrameLocal=(SucursalBeanSwingJInternalFrame) ((SucursalDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				sucursalBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoSucursal(sucursalBeanSwingJInternalFrameLocal.getsucursal(),true);
				sucursalBeanSwingJInternalFrameLocal.actualizarLista(sucursalBeanSwingJInternalFrameLocal.sucursal,this.sucursalsForeignKey);

				sucursalBeanSwingJInternalFrameLocal.actualizarRelaciones(sucursalBeanSwingJInternalFrameLocal.sucursal);

				productoLocal.setSucursal(sucursalBeanSwingJInternalFrameLocal.sucursal);

				this.addItemDefectoCombosForeignKeySucursal();
				this.cargarCombosFrameSucursalsForeignKey("Formulario");
				this.setActualSucursalForeignKey(sucursalBeanSwingJInternalFrameLocal.sucursal.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(LineaDetalleFormJInternalFrame.class)) {
				LineaBeanSwingJInternalFrame lineaBeanSwingJInternalFrameLocal=(LineaBeanSwingJInternalFrame) ((LineaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				lineaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoLinea(lineaBeanSwingJInternalFrameLocal.getlinea(),true);
				lineaBeanSwingJInternalFrameLocal.actualizarLista(lineaBeanSwingJInternalFrameLocal.linea,this.lineasForeignKey);

				lineaBeanSwingJInternalFrameLocal.actualizarRelaciones(lineaBeanSwingJInternalFrameLocal.linea);

				productoLocal.setLinea(lineaBeanSwingJInternalFrameLocal.linea);

				this.addItemDefectoCombosForeignKeyLinea();
				this.cargarCombosFrameLineasForeignKey("Formulario");
				this.setActualLineaForeignKey(lineaBeanSwingJInternalFrameLocal.linea.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(LineaDetalleFormJInternalFrame.class)) {
				LineaBeanSwingJInternalFrame lineagrupoBeanSwingJInternalFrameLocal=(LineaBeanSwingJInternalFrame) ((LineaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				lineagrupoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoLinea(lineagrupoBeanSwingJInternalFrameLocal.getlinea(),true);
				lineagrupoBeanSwingJInternalFrameLocal.actualizarLista(lineagrupoBeanSwingJInternalFrameLocal.linea,this.lineagruposForeignKey);

				lineagrupoBeanSwingJInternalFrameLocal.actualizarRelaciones(lineagrupoBeanSwingJInternalFrameLocal.linea);

				productoLocal.setLineaGrupo(lineagrupoBeanSwingJInternalFrameLocal.linea);

				this.addItemDefectoCombosForeignKeyLineaGrupo();
				this.cargarCombosFrameLineaGruposForeignKey("Formulario");
				this.setActualLineaGrupoForeignKey(lineagrupoBeanSwingJInternalFrameLocal.linea.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(LineaDetalleFormJInternalFrame.class)) {
				LineaBeanSwingJInternalFrame lineacategoriaBeanSwingJInternalFrameLocal=(LineaBeanSwingJInternalFrame) ((LineaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				lineacategoriaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoLinea(lineacategoriaBeanSwingJInternalFrameLocal.getlinea(),true);
				lineacategoriaBeanSwingJInternalFrameLocal.actualizarLista(lineacategoriaBeanSwingJInternalFrameLocal.linea,this.lineacategoriasForeignKey);

				lineacategoriaBeanSwingJInternalFrameLocal.actualizarRelaciones(lineacategoriaBeanSwingJInternalFrameLocal.linea);

				productoLocal.setLineaCategoria(lineacategoriaBeanSwingJInternalFrameLocal.linea);

				this.addItemDefectoCombosForeignKeyLineaCategoria();
				this.cargarCombosFrameLineaCategoriasForeignKey("Formulario");
				this.setActualLineaCategoriaForeignKey(lineacategoriaBeanSwingJInternalFrameLocal.linea.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(LineaDetalleFormJInternalFrame.class)) {
				LineaBeanSwingJInternalFrame lineamarcaBeanSwingJInternalFrameLocal=(LineaBeanSwingJInternalFrame) ((LineaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				lineamarcaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoLinea(lineamarcaBeanSwingJInternalFrameLocal.getlinea(),true);
				lineamarcaBeanSwingJInternalFrameLocal.actualizarLista(lineamarcaBeanSwingJInternalFrameLocal.linea,this.lineamarcasForeignKey);

				lineamarcaBeanSwingJInternalFrameLocal.actualizarRelaciones(lineamarcaBeanSwingJInternalFrameLocal.linea);

				productoLocal.setLineaMarca(lineamarcaBeanSwingJInternalFrameLocal.linea);

				this.addItemDefectoCombosForeignKeyLineaMarca();
				this.cargarCombosFrameLineaMarcasForeignKey("Formulario");
				this.setActualLineaMarcaForeignKey(lineamarcaBeanSwingJInternalFrameLocal.linea.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoProductoServicioDetalleFormJInternalFrame.class)) {
				TipoProductoServicioBeanSwingJInternalFrame tipoproductoservicioBeanSwingJInternalFrameLocal=(TipoProductoServicioBeanSwingJInternalFrame) ((TipoProductoServicioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipoproductoservicioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoProductoServicio(tipoproductoservicioBeanSwingJInternalFrameLocal.gettipoproductoservicio(),true);
				tipoproductoservicioBeanSwingJInternalFrameLocal.actualizarLista(tipoproductoservicioBeanSwingJInternalFrameLocal.tipoproductoservicio,this.tipoproductoserviciosForeignKey);

				tipoproductoservicioBeanSwingJInternalFrameLocal.actualizarRelaciones(tipoproductoservicioBeanSwingJInternalFrameLocal.tipoproductoservicio);

				productoLocal.setTipoProductoServicio(tipoproductoservicioBeanSwingJInternalFrameLocal.tipoproductoservicio);

				this.addItemDefectoCombosForeignKeyTipoProductoServicio();
				this.cargarCombosFrameTipoProductoServiciosForeignKey("Formulario");
				this.setActualTipoProductoServicioForeignKey(tipoproductoservicioBeanSwingJInternalFrameLocal.tipoproductoservicio.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoProductoServicioInvenDetalleFormJInternalFrame.class)) {
				TipoProductoServicioInvenBeanSwingJInternalFrame tipoproductoservicioinvenBeanSwingJInternalFrameLocal=(TipoProductoServicioInvenBeanSwingJInternalFrame) ((TipoProductoServicioInvenDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipoproductoservicioinvenBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoProductoServicioInven(tipoproductoservicioinvenBeanSwingJInternalFrameLocal.gettipoproductoservicioinven(),true);
				tipoproductoservicioinvenBeanSwingJInternalFrameLocal.actualizarLista(tipoproductoservicioinvenBeanSwingJInternalFrameLocal.tipoproductoservicioinven,this.tipoproductoservicioinvensForeignKey);

				tipoproductoservicioinvenBeanSwingJInternalFrameLocal.actualizarRelaciones(tipoproductoservicioinvenBeanSwingJInternalFrameLocal.tipoproductoservicioinven);

				productoLocal.setTipoProductoServicioInven(tipoproductoservicioinvenBeanSwingJInternalFrameLocal.tipoproductoservicioinven);

				this.addItemDefectoCombosForeignKeyTipoProductoServicioInven();
				this.cargarCombosFrameTipoProductoServicioInvensForeignKey("Formulario");
				this.setActualTipoProductoServicioInvenForeignKey(tipoproductoservicioinvenBeanSwingJInternalFrameLocal.tipoproductoservicioinven.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoCosteoDetalleFormJInternalFrame.class)) {
				TipoCosteoBeanSwingJInternalFrame tipocosteoBeanSwingJInternalFrameLocal=(TipoCosteoBeanSwingJInternalFrame) ((TipoCosteoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipocosteoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoCosteo(tipocosteoBeanSwingJInternalFrameLocal.gettipocosteo(),true);
				tipocosteoBeanSwingJInternalFrameLocal.actualizarLista(tipocosteoBeanSwingJInternalFrameLocal.tipocosteo,this.tipocosteosForeignKey);

				tipocosteoBeanSwingJInternalFrameLocal.actualizarRelaciones(tipocosteoBeanSwingJInternalFrameLocal.tipocosteo);

				productoLocal.setTipoCosteo(tipocosteoBeanSwingJInternalFrameLocal.tipocosteo);

				this.addItemDefectoCombosForeignKeyTipoCosteo();
				this.cargarCombosFrameTipoCosteosForeignKey("Formulario");
				this.setActualTipoCosteoForeignKey(tipocosteoBeanSwingJInternalFrameLocal.tipocosteo.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(UnidadDetalleFormJInternalFrame.class)) {
				UnidadBeanSwingJInternalFrame unidadBeanSwingJInternalFrameLocal=(UnidadBeanSwingJInternalFrame) ((UnidadDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				unidadBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoUnidad(unidadBeanSwingJInternalFrameLocal.getunidad(),true);
				unidadBeanSwingJInternalFrameLocal.actualizarLista(unidadBeanSwingJInternalFrameLocal.unidad,this.unidadsForeignKey);

				unidadBeanSwingJInternalFrameLocal.actualizarRelaciones(unidadBeanSwingJInternalFrameLocal.unidad);

				productoLocal.setUnidad(unidadBeanSwingJInternalFrameLocal.unidad);

				this.addItemDefectoCombosForeignKeyUnidad();
				this.cargarCombosFrameUnidadsForeignKey("Formulario");
				this.setActualUnidadForeignKey(unidadBeanSwingJInternalFrameLocal.unidad.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(UnidadDetalleFormJInternalFrame.class)) {
				UnidadBeanSwingJInternalFrame unidadpesoBeanSwingJInternalFrameLocal=(UnidadBeanSwingJInternalFrame) ((UnidadDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				unidadpesoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoUnidad(unidadpesoBeanSwingJInternalFrameLocal.getunidad(),true);
				unidadpesoBeanSwingJInternalFrameLocal.actualizarLista(unidadpesoBeanSwingJInternalFrameLocal.unidad,this.unidadpesosForeignKey);

				unidadpesoBeanSwingJInternalFrameLocal.actualizarRelaciones(unidadpesoBeanSwingJInternalFrameLocal.unidad);

				productoLocal.setUnidadPeso(unidadpesoBeanSwingJInternalFrameLocal.unidad);

				this.addItemDefectoCombosForeignKeyUnidadPeso();
				this.cargarCombosFrameUnidadPesosForeignKey("Formulario");
				this.setActualUnidadPesoForeignKey(unidadpesoBeanSwingJInternalFrameLocal.unidad.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(ArancelDetalleFormJInternalFrame.class)) {
				ArancelBeanSwingJInternalFrame arancelBeanSwingJInternalFrameLocal=(ArancelBeanSwingJInternalFrame) ((ArancelDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				arancelBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoArancel(arancelBeanSwingJInternalFrameLocal.getarancel(),true);
				arancelBeanSwingJInternalFrameLocal.actualizarLista(arancelBeanSwingJInternalFrameLocal.arancel,this.arancelsForeignKey);

				arancelBeanSwingJInternalFrameLocal.actualizarRelaciones(arancelBeanSwingJInternalFrameLocal.arancel);

				productoLocal.setArancel(arancelBeanSwingJInternalFrameLocal.arancel);

				this.addItemDefectoCombosForeignKeyArancel();
				this.cargarCombosFrameArancelsForeignKey("Formulario");
				this.setActualArancelForeignKey(arancelBeanSwingJInternalFrameLocal.arancel.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(ClienteDetalleFormJInternalFrame.class)) {
				ClienteBeanSwingJInternalFrame clienteBeanSwingJInternalFrameLocal=(ClienteBeanSwingJInternalFrame) ((ClienteDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				clienteBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCliente(clienteBeanSwingJInternalFrameLocal.getcliente(),true);
				clienteBeanSwingJInternalFrameLocal.actualizarLista(clienteBeanSwingJInternalFrameLocal.cliente,this.clientesForeignKey);

				clienteBeanSwingJInternalFrameLocal.actualizarRelaciones(clienteBeanSwingJInternalFrameLocal.cliente);

				productoLocal.setCliente(clienteBeanSwingJInternalFrameLocal.cliente);

				this.addItemDefectoCombosForeignKeyCliente();
				this.cargarCombosFrameClientesForeignKey("Formulario");
				this.setActualClienteForeignKey(clienteBeanSwingJInternalFrameLocal.cliente.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(ClienteDetalleFormJInternalFrame.class)) {
				ClienteBeanSwingJInternalFrame clienteproveedordefectoBeanSwingJInternalFrameLocal=(ClienteBeanSwingJInternalFrame) ((ClienteDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				clienteproveedordefectoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCliente(clienteproveedordefectoBeanSwingJInternalFrameLocal.getcliente(),true);
				clienteproveedordefectoBeanSwingJInternalFrameLocal.actualizarLista(clienteproveedordefectoBeanSwingJInternalFrameLocal.cliente,this.clienteproveedordefectosForeignKey);

				clienteproveedordefectoBeanSwingJInternalFrameLocal.actualizarRelaciones(clienteproveedordefectoBeanSwingJInternalFrameLocal.cliente);

				productoLocal.setClienteProveedorDefecto(clienteproveedordefectoBeanSwingJInternalFrameLocal.cliente);

				this.addItemDefectoCombosForeignKeyClienteProveedorDefecto();
				this.cargarCombosFrameClienteProveedorDefectosForeignKey("Formulario");
				this.setActualClienteProveedorDefectoForeignKey(clienteproveedordefectoBeanSwingJInternalFrameLocal.cliente.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoProductoDetalleFormJInternalFrame.class)) {
				TipoProductoBeanSwingJInternalFrame tipoproductoBeanSwingJInternalFrameLocal=(TipoProductoBeanSwingJInternalFrame) ((TipoProductoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipoproductoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoProducto(tipoproductoBeanSwingJInternalFrameLocal.gettipoproducto(),true);
				tipoproductoBeanSwingJInternalFrameLocal.actualizarLista(tipoproductoBeanSwingJInternalFrameLocal.tipoproducto,this.tipoproductosForeignKey);

				tipoproductoBeanSwingJInternalFrameLocal.actualizarRelaciones(tipoproductoBeanSwingJInternalFrameLocal.tipoproducto);

				productoLocal.setTipoProducto(tipoproductoBeanSwingJInternalFrameLocal.tipoproducto);

				this.addItemDefectoCombosForeignKeyTipoProducto();
				this.cargarCombosFrameTipoProductosForeignKey("Formulario");
				this.setActualTipoProductoForeignKey(tipoproductoBeanSwingJInternalFrameLocal.tipoproducto.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(ColorProductoDetalleFormJInternalFrame.class)) {
				ColorProductoBeanSwingJInternalFrame colorproductoBeanSwingJInternalFrameLocal=(ColorProductoBeanSwingJInternalFrame) ((ColorProductoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				colorproductoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoColorProducto(colorproductoBeanSwingJInternalFrameLocal.getcolorproducto(),true);
				colorproductoBeanSwingJInternalFrameLocal.actualizarLista(colorproductoBeanSwingJInternalFrameLocal.colorproducto,this.colorproductosForeignKey);

				colorproductoBeanSwingJInternalFrameLocal.actualizarRelaciones(colorproductoBeanSwingJInternalFrameLocal.colorproducto);

				productoLocal.setColorProducto(colorproductoBeanSwingJInternalFrameLocal.colorproducto);

				this.addItemDefectoCombosForeignKeyColorProducto();
				this.cargarCombosFrameColorProductosForeignKey("Formulario");
				this.setActualColorProductoForeignKey(colorproductoBeanSwingJInternalFrameLocal.colorproducto.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(ClaseProductoDetalleFormJInternalFrame.class)) {
				ClaseProductoBeanSwingJInternalFrame claseproductoBeanSwingJInternalFrameLocal=(ClaseProductoBeanSwingJInternalFrame) ((ClaseProductoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				claseproductoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoClaseProducto(claseproductoBeanSwingJInternalFrameLocal.getclaseproducto(),true);
				claseproductoBeanSwingJInternalFrameLocal.actualizarLista(claseproductoBeanSwingJInternalFrameLocal.claseproducto,this.claseproductosForeignKey);

				claseproductoBeanSwingJInternalFrameLocal.actualizarRelaciones(claseproductoBeanSwingJInternalFrameLocal.claseproducto);

				productoLocal.setClaseProducto(claseproductoBeanSwingJInternalFrameLocal.claseproducto);

				this.addItemDefectoCombosForeignKeyClaseProducto();
				this.cargarCombosFrameClaseProductosForeignKey("Formulario");
				this.setActualClaseProductoForeignKey(claseproductoBeanSwingJInternalFrameLocal.claseproducto.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EfectoProductoDetalleFormJInternalFrame.class)) {
				EfectoProductoBeanSwingJInternalFrame efectoproductoBeanSwingJInternalFrameLocal=(EfectoProductoBeanSwingJInternalFrame) ((EfectoProductoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				efectoproductoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEfectoProducto(efectoproductoBeanSwingJInternalFrameLocal.getefectoproducto(),true);
				efectoproductoBeanSwingJInternalFrameLocal.actualizarLista(efectoproductoBeanSwingJInternalFrameLocal.efectoproducto,this.efectoproductosForeignKey);

				efectoproductoBeanSwingJInternalFrameLocal.actualizarRelaciones(efectoproductoBeanSwingJInternalFrameLocal.efectoproducto);

				productoLocal.setEfectoProducto(efectoproductoBeanSwingJInternalFrameLocal.efectoproducto);

				this.addItemDefectoCombosForeignKeyEfectoProducto();
				this.cargarCombosFrameEfectoProductosForeignKey("Formulario");
				this.setActualEfectoProductoForeignKey(efectoproductoBeanSwingJInternalFrameLocal.efectoproducto.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(MarcaProductoDetalleFormJInternalFrame.class)) {
				MarcaProductoBeanSwingJInternalFrame marcaproductoBeanSwingJInternalFrameLocal=(MarcaProductoBeanSwingJInternalFrame) ((MarcaProductoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				marcaproductoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoMarcaProducto(marcaproductoBeanSwingJInternalFrameLocal.getmarcaproducto(),true);
				marcaproductoBeanSwingJInternalFrameLocal.actualizarLista(marcaproductoBeanSwingJInternalFrameLocal.marcaproducto,this.marcaproductosForeignKey);

				marcaproductoBeanSwingJInternalFrameLocal.actualizarRelaciones(marcaproductoBeanSwingJInternalFrameLocal.marcaproducto);

				productoLocal.setMarcaProducto(marcaproductoBeanSwingJInternalFrameLocal.marcaproducto);

				this.addItemDefectoCombosForeignKeyMarcaProducto();
				this.cargarCombosFrameMarcaProductosForeignKey("Formulario");
				this.setActualMarcaProductoForeignKey(marcaproductoBeanSwingJInternalFrameLocal.marcaproducto.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(ModeloProductoDetalleFormJInternalFrame.class)) {
				ModeloProductoBeanSwingJInternalFrame modeloproductoBeanSwingJInternalFrameLocal=(ModeloProductoBeanSwingJInternalFrame) ((ModeloProductoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				modeloproductoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoModeloProducto(modeloproductoBeanSwingJInternalFrameLocal.getmodeloproducto(),true);
				modeloproductoBeanSwingJInternalFrameLocal.actualizarLista(modeloproductoBeanSwingJInternalFrameLocal.modeloproducto,this.modeloproductosForeignKey);

				modeloproductoBeanSwingJInternalFrameLocal.actualizarRelaciones(modeloproductoBeanSwingJInternalFrameLocal.modeloproducto);

				productoLocal.setModeloProducto(modeloproductoBeanSwingJInternalFrameLocal.modeloproducto);

				this.addItemDefectoCombosForeignKeyModeloProducto();
				this.cargarCombosFrameModeloProductosForeignKey("Formulario");
				this.setActualModeloProductoForeignKey(modeloproductoBeanSwingJInternalFrameLocal.modeloproducto.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(MaterialProductoDetalleFormJInternalFrame.class)) {
				MaterialProductoBeanSwingJInternalFrame materialproductoBeanSwingJInternalFrameLocal=(MaterialProductoBeanSwingJInternalFrame) ((MaterialProductoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				materialproductoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoMaterialProducto(materialproductoBeanSwingJInternalFrameLocal.getmaterialproducto(),true);
				materialproductoBeanSwingJInternalFrameLocal.actualizarLista(materialproductoBeanSwingJInternalFrameLocal.materialproducto,this.materialproductosForeignKey);

				materialproductoBeanSwingJInternalFrameLocal.actualizarRelaciones(materialproductoBeanSwingJInternalFrameLocal.materialproducto);

				productoLocal.setMaterialProducto(materialproductoBeanSwingJInternalFrameLocal.materialproducto);

				this.addItemDefectoCombosForeignKeyMaterialProducto();
				this.cargarCombosFrameMaterialProductosForeignKey("Formulario");
				this.setActualMaterialProductoForeignKey(materialproductoBeanSwingJInternalFrameLocal.materialproducto.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(SegmentoProductoDetalleFormJInternalFrame.class)) {
				SegmentoProductoBeanSwingJInternalFrame segmentoproductoBeanSwingJInternalFrameLocal=(SegmentoProductoBeanSwingJInternalFrame) ((SegmentoProductoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				segmentoproductoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoSegmentoProducto(segmentoproductoBeanSwingJInternalFrameLocal.getsegmentoproducto(),true);
				segmentoproductoBeanSwingJInternalFrameLocal.actualizarLista(segmentoproductoBeanSwingJInternalFrameLocal.segmentoproducto,this.segmentoproductosForeignKey);

				segmentoproductoBeanSwingJInternalFrameLocal.actualizarRelaciones(segmentoproductoBeanSwingJInternalFrameLocal.segmentoproducto);

				productoLocal.setSegmentoProducto(segmentoproductoBeanSwingJInternalFrameLocal.segmentoproducto);

				this.addItemDefectoCombosForeignKeySegmentoProducto();
				this.cargarCombosFrameSegmentoProductosForeignKey("Formulario");
				this.setActualSegmentoProductoForeignKey(segmentoproductoBeanSwingJInternalFrameLocal.segmentoproducto.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TallaProductoDetalleFormJInternalFrame.class)) {
				TallaProductoBeanSwingJInternalFrame tallaproductoBeanSwingJInternalFrameLocal=(TallaProductoBeanSwingJInternalFrame) ((TallaProductoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tallaproductoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTallaProducto(tallaproductoBeanSwingJInternalFrameLocal.gettallaproducto(),true);
				tallaproductoBeanSwingJInternalFrameLocal.actualizarLista(tallaproductoBeanSwingJInternalFrameLocal.tallaproducto,this.tallaproductosForeignKey);

				tallaproductoBeanSwingJInternalFrameLocal.actualizarRelaciones(tallaproductoBeanSwingJInternalFrameLocal.tallaproducto);

				productoLocal.setTallaProducto(tallaproductoBeanSwingJInternalFrameLocal.tallaproducto);

				this.addItemDefectoCombosForeignKeyTallaProducto();
				this.cargarCombosFrameTallaProductosForeignKey("Formulario");
				this.setActualTallaProductoForeignKey(tallaproductoBeanSwingJInternalFrameLocal.tallaproducto.getId(),false,"Formulario");
			}
		
		}
	}
	
	public Boolean validarProductoActual() throws Exception {
		Boolean estaValidado=false;
		this.inicializarInvalidValues();
		
		/*
		int intSelectedRow = this.jTableDatosProducto.getSelectedRow();
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
			this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
		}
		//ARCHITECTURE
		*/
		
		this.invalidValues = productoValidator.getInvalidValues(this.producto);
					
		if(this.invalidValues==null || this.invalidValues.length<=0) {
			estaValidado=true;
		} else {
			this.mostrarInvalidValues();	
		}
		
		return estaValidado;
	}
	
	public void actualizarLista(Producto producto,List<Producto> productos) throws Exception {
		try	{		
			ProductoConstantesFunciones.actualizarLista(producto,productos,this.productoSessionBean.getEsGuardarRelacionado());		
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void actualizarSelectedLista(Producto producto,List<Producto> productos) throws Exception {
		try	{			
			ProductoConstantesFunciones.actualizarSelectedLista(producto,productos);
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public Boolean tieneElementosSeleccionados() throws Exception {
		Boolean tiene=false;
		
		List<Producto> productosLocal=null;
		
		try	{			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				productosLocal=this.productoLogic.getProductos();
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				productosLocal=this.productos;
			}
			//ARCHITECTURE
		
			for(Producto productoLocal:productosLocal) {
				if(this.permiteMantenimiento(productoLocal) && productoLocal.getIsSelected()) {
					tiene=true;
					break;
				}
			}
		} catch(Exception e) {
			throw e;
		}
		
		return tiene;
	}			
	
	public void mostrarInvalidValues() throws Exception {
		String sMensaje="";
				
		for (InvalidValue invalidValue : this.invalidValues) {
			sMensaje+="\r\n"+ProductoConstantesFunciones.getProductoLabelDesdeNombre(invalidValue.getPropertyName())+"->"+invalidValue.getMessage();
			
			//MOSTRAR CAMPOS INVALIDOS
			if(invalidValue.getPropertyName().equals(ProductoConstantesFunciones.IDEMPRESA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelid_empresaProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoConstantesFunciones.IDSUCURSAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelid_sucursalProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoConstantesFunciones.CODIGO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelcodigoProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoConstantesFunciones.NOMBRE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelnombreProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoConstantesFunciones.NOMBREEXTRANJERO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelnombre_extranjeroProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoConstantesFunciones.RESUMENDETALLE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelresumen_detalleProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoConstantesFunciones.CODIGOBARRA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelcodigo_barraProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoConstantesFunciones.IDLINEA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelid_lineaProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoConstantesFunciones.IDLINEAGRUPO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelid_linea_grupoProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoConstantesFunciones.IDLINEACATEGORIA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelid_linea_categoriaProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoConstantesFunciones.IDLINEAMARCA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelid_linea_marcaProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoConstantesFunciones.IDTIPOPRODUCTOSERVICIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelid_tipo_producto_servicioProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoConstantesFunciones.IDTIPOPRODUCTOSERVICIOINVEN)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelid_tipo_producto_servicio_invenProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoConstantesFunciones.IDTIPOCOSTEO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelid_tipo_costeoProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoConstantesFunciones.IDUNIDAD)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelid_unidadProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoConstantesFunciones.IDUNIDADPESO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelid_unidad_pesoProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoConstantesFunciones.IDARANCEL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelid_arancelProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoConstantesFunciones.IDCLIENTE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelid_clienteProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoConstantesFunciones.IDCLIENTEPROVEEDORDEFECTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelid_cliente_proveedor_defectoProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoConstantesFunciones.ESTAACTIVO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelesta_activoProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoConstantesFunciones.DESCRIPCION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabeldescripcionProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoConstantesFunciones.PRECIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelprecioProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoConstantesFunciones.IVA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelivaProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoConstantesFunciones.IVAVALOR)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabeliva_valorProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoConstantesFunciones.ICE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabeliceProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoConstantesFunciones.ICEVALOR)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelice_valorProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoConstantesFunciones.DESCUENTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabeldescuentoProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoConstantesFunciones.DESCUENTOVALOR)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabeldescuento_valorProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoConstantesFunciones.ARANCELPORCENTAJE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelarancel_porcentajeProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoConstantesFunciones.ARANCELVALOR)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelarancel_valorProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoConstantesFunciones.COMISION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelcomisionProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoConstantesFunciones.COMISIONVALOR)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelcomision_valorProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoConstantesFunciones.DIASPRODUCCION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabeldias_produccionProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoConstantesFunciones.CONSTOCKNEGATIVO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelcon_stock_negativoProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoConstantesFunciones.CONPRECIOMINIMO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelcon_precio_minimoProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoConstantesFunciones.CONLOTE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelcon_loteProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoConstantesFunciones.CONCONFIRMACION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelcon_confirmacionProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoConstantesFunciones.CONPRESUPUESTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelcon_presupuestoProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoConstantesFunciones.CONIMPORTACION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelcon_importacionProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoConstantesFunciones.CONFINAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelcon_finalProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoConstantesFunciones.CONCONSEP)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelcon_consepProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoConstantesFunciones.CONSERIE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelcon_serieProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoConstantesFunciones.CONBALANZA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelcon_balanzaProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoConstantesFunciones.ALTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelaltoProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoConstantesFunciones.ANCHO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelanchoProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoConstantesFunciones.LARGO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabellargoProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoConstantesFunciones.VOLUMEN)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelvolumenProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoConstantesFunciones.PESO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelpesoProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoConstantesFunciones.GRAMOS)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelgramosProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoConstantesFunciones.UNIDADESCAJA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelunidades_cajaProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoConstantesFunciones.MARGEN)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelmargenProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoConstantesFunciones.FACTOR)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelfactorProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoConstantesFunciones.FOB)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelfobProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoConstantesFunciones.FOB2)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelfob2Producto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoConstantesFunciones.IDTIPOPRODUCTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelid_tipo_productoProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoConstantesFunciones.IDCOLORPRODUCTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelid_color_productoProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoConstantesFunciones.IDCLASEPRODUCTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelid_clase_productoProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoConstantesFunciones.IDEFECTOPRODUCTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelid_efecto_productoProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoConstantesFunciones.IDMARCAPRODUCTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelid_marca_productoProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoConstantesFunciones.IDMODELOPRODUCTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelid_modelo_productoProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoConstantesFunciones.IDMATERIALPRODUCTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelid_material_productoProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoConstantesFunciones.IDSEGMENTOPRODUCTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelid_segmento_productoProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoConstantesFunciones.IDTALLAPRODUCTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelid_talla_productoProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoConstantesFunciones.GRUPO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelgrupoProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoConstantesFunciones.REFERENCIA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelreferenciaProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoConstantesFunciones.APLICACION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelaplicacionProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProductoConstantesFunciones.PROCEDENCIA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelprocedenciaProducto,invalidValue.getMessage());}
        }
		
		
		if(!sMensaje.equals("")) {
			//JOptionPane.showMessageDialog(this,sMensaje,"VALIDACION ",JOptionPane.ERROR_MESSAGE);
			throw new Exception(sMensaje);			
		}
		
		/*
		System.out.println(invalidValue);
        System.out.println("message=" + invalidValue.getMessage());
        System.out.println("propertyName=" + invalidValue.getPropertyName());
        System.out.println("propertyPath=" + invalidValue.getPropertyPath());
        System.out.println("value=" + invalidValue.getValue());
        */
	}		
	
	public void inicializarInvalidValues() throws Exception {
		String sMensaje="";	
		
		if(this.jInternalFrameDetalleFormProducto!=null) {
		
		//MOSTRAR CAMPOS INVALIDOS
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProducto.jLabelid_empresaProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProducto.jLabelid_sucursalProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProducto.jLabelcodigoProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProducto.jLabelnombreProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProducto.jLabelnombre_extranjeroProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProducto.jLabelresumen_detalleProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProducto.jLabelcodigo_barraProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProducto.jLabelid_lineaProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProducto.jLabelid_linea_grupoProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProducto.jLabelid_linea_categoriaProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProducto.jLabelid_linea_marcaProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProducto.jLabelid_tipo_producto_servicioProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProducto.jLabelid_tipo_producto_servicio_invenProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProducto.jLabelid_tipo_costeoProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProducto.jLabelid_unidadProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProducto.jLabelid_unidad_pesoProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProducto.jLabelid_arancelProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProducto.jLabelid_clienteProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProducto.jLabelid_cliente_proveedor_defectoProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProducto.jLabelesta_activoProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProducto.jLabeldescripcionProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProducto.jLabelprecioProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProducto.jLabelivaProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProducto.jLabeliva_valorProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProducto.jLabeliceProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProducto.jLabelice_valorProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProducto.jLabeldescuentoProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProducto.jLabeldescuento_valorProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProducto.jLabelarancel_porcentajeProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProducto.jLabelarancel_valorProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProducto.jLabelcomisionProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProducto.jLabelcomision_valorProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProducto.jLabeldias_produccionProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProducto.jLabelcon_stock_negativoProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProducto.jLabelcon_precio_minimoProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProducto.jLabelcon_loteProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProducto.jLabelcon_confirmacionProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProducto.jLabelcon_presupuestoProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProducto.jLabelcon_importacionProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProducto.jLabelcon_finalProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProducto.jLabelcon_consepProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProducto.jLabelcon_serieProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProducto.jLabelcon_balanzaProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProducto.jLabelaltoProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProducto.jLabelanchoProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProducto.jLabellargoProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProducto.jLabelvolumenProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProducto.jLabelpesoProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProducto.jLabelgramosProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProducto.jLabelunidades_cajaProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProducto.jLabelmargenProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProducto.jLabelfactorProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProducto.jLabelfobProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProducto.jLabelfob2Producto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProducto.jLabelid_tipo_productoProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProducto.jLabelid_color_productoProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProducto.jLabelid_clase_productoProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProducto.jLabelid_efecto_productoProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProducto.jLabelid_marca_productoProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProducto.jLabelid_modelo_productoProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProducto.jLabelid_material_productoProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProducto.jLabelid_segmento_productoProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProducto.jLabelid_talla_productoProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProducto.jLabelgrupoProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProducto.jLabelreferenciaProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProducto.jLabelaplicacionProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProducto.jLabelprocedenciaProducto,"");
		
		}
	}
	
	
	
	public void actualizarObjetoPadreFk(String sTipo)  throws Exception {
		if(sTipo.equals("XXXAuxiliar")) {
		
		}
		
		 else  if(sTipo.equals("ProveedorProducto")) {
			if(this.producto==null) {
				this.producto= new Producto();
			}

			if(this.productoSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoProducto
				this.setVariablesFormularioToObjetoActualProducto(this.producto,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);

				this.jInternalFrameDetalleFormProducto.proveedorproductoBeanSwingJInternalFrame.getproveedorproducto().setProducto(this.producto);
			}

			return;
		}
		 else  if(sTipo.equals("Precio")) {
			if(this.producto==null) {
				this.producto= new Producto();
			}

			if(this.productoSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoProducto
				this.setVariablesFormularioToObjetoActualProducto(this.producto,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);

				this.jInternalFrameDetalleFormProducto.precioBeanSwingJInternalFrame.getprecio().setProducto(this.producto);
			}

			return;
		}
		 else  if(sTipo.equals("DetalleImpuestoInven")) {
			if(this.producto==null) {
				this.producto= new Producto();
			}

			if(this.productoSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoProducto
				this.setVariablesFormularioToObjetoActualProducto(this.producto,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);

				this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenBeanSwingJInternalFrame.getdetalleimpuestoinven().setProducto(this.producto);
			}

			return;
		}
		 else  if(sTipo.equals("PresupuestoVentas")) {
			if(this.producto==null) {
				this.producto= new Producto();
			}

			if(this.productoSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoProducto
				this.setVariablesFormularioToObjetoActualProducto(this.producto,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);

				this.jInternalFrameDetalleFormProducto.presupuestoventasBeanSwingJInternalFrame.getpresupuestoventas().setProducto(this.producto);
			}

			return;
		}
		 else  if(sTipo.equals("PoliticaProducto")) {
			if(this.producto==null) {
				this.producto= new Producto();
			}

			if(this.productoSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoProducto
				this.setVariablesFormularioToObjetoActualProducto(this.producto,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);

				this.jInternalFrameDetalleFormProducto.politicaproductoBeanSwingJInternalFrame.getpoliticaproducto().setProducto(this.producto);
			}

			return;
		}
		 else  if(sTipo.equals("SerieProducto")) {
			if(this.producto==null) {
				this.producto= new Producto();
			}

			if(this.productoSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoProducto
				this.setVariablesFormularioToObjetoActualProducto(this.producto,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);

				this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame.getserieproducto().setProducto(this.producto);
			}

			return;
		}
		 else  if(sTipo.equals("UbicacionProdu")) {
			if(this.producto==null) {
				this.producto= new Producto();
			}

			if(this.productoSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoProducto
				this.setVariablesFormularioToObjetoActualProducto(this.producto,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);

				this.jInternalFrameDetalleFormProducto.ubicacionproduBeanSwingJInternalFrame.getubicacionprodu().setProducto(this.producto);
			}

			return;
		}
		 else  if(sTipo.equals("ParametroProducto")) {
			if(this.producto==null) {
				this.producto= new Producto();
			}

			if(this.productoSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoProducto
				this.setVariablesFormularioToObjetoActualProducto(this.producto,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);

				this.jInternalFrameDetalleFormProducto.parametroproductoBeanSwingJInternalFrame.getparametroproducto().setProducto(this.producto);
			}

			return;
		}
		 else  if(sTipo.equals("ProductoUnidad")) {
			if(this.producto==null) {
				this.producto= new Producto();
			}

			if(this.productoSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoProducto
				this.setVariablesFormularioToObjetoActualProducto(this.producto,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);

				this.jInternalFrameDetalleFormProducto.productounidadBeanSwingJInternalFrame.getproductounidad().setProducto(this.producto);
			}

			return;
		}
		 else  if(sTipo.equals("Ingrediente")) {
			if(this.producto==null) {
				this.producto= new Producto();
			}

			if(this.productoSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoProducto
				this.setVariablesFormularioToObjetoActualProducto(this.producto,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);

				this.jInternalFrameDetalleFormProducto.ingredienteBeanSwingJInternalFrame.getingrediente().setProductoRelacion(this.producto);
			}

			return;
		}
		 else  if(sTipo.equals("ProductoCarac")) {
			if(this.producto==null) {
				this.producto= new Producto();
			}

			if(this.productoSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoProducto
				this.setVariablesFormularioToObjetoActualProducto(this.producto,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);

				this.jInternalFrameDetalleFormProducto.productocaracBeanSwingJInternalFrame.getproductocarac().setProducto(this.producto);
			}

			return;
		}
		 else  if(sTipo.equals("ServicioCliente")) {
			if(this.producto==null) {
				this.producto= new Producto();
			}

			if(this.productoSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoProducto
				this.setVariablesFormularioToObjetoActualProducto(this.producto,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);

				this.jInternalFrameDetalleFormProducto.servicioclienteBeanSwingJInternalFrame.getserviciocliente().setProducto(this.producto);
			}

			return;
		}
		 else  if(sTipo.equals("ProductoPromocion")) {
			if(this.producto==null) {
				this.producto= new Producto();
			}

			if(this.productoSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoProducto
				this.setVariablesFormularioToObjetoActualProducto(this.producto,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);

				this.jInternalFrameDetalleFormProducto.productopromocionBeanSwingJInternalFrame.getproductopromocion().setProductoRelacion(this.producto);
			}

			return;
		}
		 else  if(sTipo.equals("ProductoEspeci")) {
			if(this.producto==null) {
				this.producto= new Producto();
			}

			if(this.productoSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoProducto
				this.setVariablesFormularioToObjetoActualProducto(this.producto,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);

				this.jInternalFrameDetalleFormProducto.productoespeciBeanSwingJInternalFrame.getproductoespeci().setProducto(this.producto);
			}

			return;
		}
		 else  if(sTipo.equals("ProductoReempla")) {
			if(this.producto==null) {
				this.producto= new Producto();
			}

			if(this.productoSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoProducto
				this.setVariablesFormularioToObjetoActualProducto(this.producto,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);

				this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame.getproductoreempla().setProducto(this.producto);
			}

			return;
		}
		 else  if(sTipo.equals("ProductoEstadistica")) {
			if(this.producto==null) {
				this.producto= new Producto();
			}

			if(this.productoSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoProducto
				this.setVariablesFormularioToObjetoActualProducto(this.producto,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);

				this.jInternalFrameDetalleFormProducto.productoestadisticaBeanSwingJInternalFrame.getproductoestadistica().setProducto(this.producto);
			}

			return;
		}
		 else  if(sTipo.equals("PoliticaFactu")) {
			if(this.producto==null) {
				this.producto= new Producto();
			}

			if(this.productoSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoProducto
				this.setVariablesFormularioToObjetoActualProducto(this.producto,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);

				this.jInternalFrameDetalleFormProducto.politicafactuBeanSwingJInternalFrame.getpoliticafactu().setProducto(this.producto);
			}

			return;
		}
		 else  if(sTipo.equals("ProductoCuentaContable")) {
			if(this.producto==null) {
				this.producto= new Producto();
			}

			if(this.productoSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoProducto
				this.setVariablesFormularioToObjetoActualProducto(this.producto,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);

				this.jInternalFrameDetalleFormProducto.productocuentacontableBeanSwingJInternalFrame.getproductocuentacontable().setProducto(this.producto);
			}

			return;
		}
		 else  if(sTipo.equals("BodegaProducto")) {
			if(this.producto==null) {
				this.producto= new Producto();
			}

			if(this.productoSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoProducto
				this.setVariablesFormularioToObjetoActualProducto(this.producto,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);

				this.jInternalFrameDetalleFormProducto.bodegaproductoBeanSwingJInternalFrame.getbodegaproducto().setProducto(this.producto);
			}

			return;
		}
		 else  if(sTipo.equals("PresupuestoProducto")) {
			if(this.producto==null) {
				this.producto= new Producto();
			}

			if(this.productoSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoProducto
				this.setVariablesFormularioToObjetoActualProducto(this.producto,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);

				this.jInternalFrameDetalleFormProducto.presupuestoproductoBeanSwingJInternalFrame.getpresupuestoproducto().setProducto(this.producto);
			}

			return;
		}
		 else  if(sTipo.equals("SaldoMesProducto")) {
			if(this.producto==null) {
				this.producto= new Producto();
			}

			if(this.productoSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoProducto
				this.setVariablesFormularioToObjetoActualProducto(this.producto,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);

				this.jInternalFrameDetalleFormProducto.saldomesproductoBeanSwingJInternalFrame.getsaldomesproducto().setProducto(this.producto);
			}

			return;
		}
	}
	
	public void nuevoPreparar() throws Exception {
		this.nuevoPreparar(false);
	}
	
	public void nuevoPreparar(Boolean esNuevoGuardarCambios) throws Exception {
		this.iIdNuevoProducto--;	
		
		
		this.productoAux=new Producto();
		
		this.productoAux.setId(this.iIdNuevoProducto);
		this.productoAux.setIsChanged(true);
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.productoLogic.getProductos().add(this.productoAux);
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.productos.add(this.productoAux);
		}
		//ARCHITECTURE
		
		this.producto=this.productoAux;
		
		if(ProductoJInternalFrame.ISBINDING_MANUAL_TABLA) {
			this.setVariablesObjetoActualToFormularioProducto(this.producto);
			this.setVariablesObjetoActualToFormularioForeignKeyProducto(this.producto);
		}
				
		//this.setDefaultControlesProducto();
		
		this.inicializarInvalidValues();
				
		//SELECCIONA ITEM DEFECTO-->SET O SELECTED INDEX
		this.setItemDefectoCombosForeignKeyProducto();
		
		
		//INICIALIZA VARIABLES COMBOS GLOBALES A FORMULARIO(ParametroGeneralUsuario)
		this.setVariablesGlobalesCombosForeignKeyProducto();
		
		//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
		//this.setVariablesGlobalesAuxiliaresCombosForeignKeyProducto();
		
		//SI TIENE FOREIGN KEY CON CAMPO esDefecto=true, SE ACTUALIZA A OBJETO ACTUAL
		this.setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualProducto(this.productoBean,this.producto,false,false);
		
		//ACTUALIZA VALORES PARA EL OBJETO ACTUAL ANTES DE ENVIARLO A ACTUALIZAR
		this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
				
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		if(this.jInternalFrameParent!=null) {
			this.jInternalFrameParent.actualizarObjetoPadreFk(ProductoConstantesFunciones.CLASSNAME);
		}	
		
		
		if(this.productoSessionBean.getConGuardarRelaciones()) {
			classes=ProductoConstantesFunciones.getClassesRelationshipsOfProducto(new ArrayList<Classe>(),DeepLoadType.NONE);
		}
		
		this.classesActual=new ArrayList<Classe>();
		this.classesActual.addAll(classes);
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {						
			this.productoReturnGeneral=productoLogic.procesarEventosProductosWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,EventoGlobalTipo.FORM_RECARGAR,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.productoLogic.getProductos(),this.producto,this.productoParameterGeneral,this.isEsNuevoProducto,classes);//this.productoLogic.getProducto()
						
		} else if(Constantes.ISUSAEJBREMOTE) {
						
		} else if(Constantes.ISUSAEJBHOME) {
		}
		//ARCHITECTURE
		
		//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
		//this.setVariablesObjetoReturnGeneralToBeanProducto(this.productoReturnGeneral,this.productoBean,false);
		
		if(this.productoReturnGeneral.getConRecargarPropiedades()) {
			//INICIALIZA VARIABLES COMBOS NORMALES (FK)
			this.setVariablesObjetoActualToFormularioForeignKeyProducto(this.productoReturnGeneral.getProducto());
			
			//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
			this.setVariablesObjetoActualToFormularioProducto(this.productoReturnGeneral.getProducto());
		}
		
		if(this.productoReturnGeneral.getConRecargarRelaciones()) {
			//INICIALIZA VARIABLES RELACIONES A FORMULARIO
			this.setVariablesRelacionesObjetoActualToFormularioProducto(this.productoReturnGeneral.getProducto(),classes);//this.productoBean);	
		}
			
		//ACTUALIZA VARIABLES FORMULARIO A OBJETO ACTUAL (PARA NUEVO TABLA O GUARDAR CAMBIOS
		if(esNuevoGuardarCambios) {
			this.setVariablesFormularioToObjetoActualProducto(this.producto,false);
		}
		
		//INICIALIZA VARIABLES COMBOS DEFAULT DEL PROYECTO(|DEFAULT para FK)
		//this.setVariablesDefaultCombosForeignKeyProducto();
		
		//INICIALIZA VARIABLES COMBOS PARAMETRO DEL PROYECTO(|VALORPARAM Era para ParametroModulo, ahora en logic)
		//this.setVariablesParametroCombosForeignKeyProducto();						
		
		if(!esNuevoGuardarCambios) {
			//INICIALIZA VARIABLES POR OPCION MENU
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			ProductoBeanSwingJInternalFrameAdditional.RecargarFormProducto(this,"NUEVO_PREPARAR","",this.arrDatoGeneral);
		
			//NO FUNCIONA BINDINGS			
			this.inicializarActualizarBindingProducto(false);
						
			if(productoSessionBean.getConGuardarRelaciones()) {
				//DEBERIA YA ESTAR CARGADO LOS COMBOS Y SI SE NECESITA ALGO MAS SE DEBE CREAR FUNCION LIMITADA
				//SI DEBE TRAER Y RESETEAR TABLA
				

				if(this.jInternalFrameDetalleFormProducto.proveedorproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.proveedorproductoBeanSwingJInternalFrame.proveedorproductoSessionBean.getEsGuardarRelacionado() && ProveedorProductoJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonProveedorProductoActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormProducto.precioBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.precioBeanSwingJInternalFrame.precioSessionBean.getEsGuardarRelacionado() && PrecioJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonPrecioActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenBeanSwingJInternalFrame.detalleimpuestoinvenSessionBean.getEsGuardarRelacionado() && DetalleImpuestoInvenJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonDetalleImpuestoInvenActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormProducto.presupuestoventasBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.presupuestoventasBeanSwingJInternalFrame.presupuestoventasSessionBean.getEsGuardarRelacionado() && PresupuestoVentasJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonPresupuestoVentasActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormProducto.politicaproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.politicaproductoBeanSwingJInternalFrame.politicaproductoSessionBean.getEsGuardarRelacionado() && PoliticaProductoJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonPoliticaProductoActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame.serieproductoSessionBean.getEsGuardarRelacionado() && SerieProductoJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonSerieProductoActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormProducto.ubicacionproduBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.ubicacionproduBeanSwingJInternalFrame.ubicacionproduSessionBean.getEsGuardarRelacionado() && UbicacionProduJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonUbicacionProduActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormProducto.parametroproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.parametroproductoBeanSwingJInternalFrame.parametroproductoSessionBean.getEsGuardarRelacionado() && ParametroProductoJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonParametroProductoActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormProducto.productounidadBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.productounidadBeanSwingJInternalFrame.productounidadSessionBean.getEsGuardarRelacionado() && ProductoUnidadJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonProductoUnidadActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormProducto.ingredienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.ingredienteBeanSwingJInternalFrame.ingredienteSessionBean.getEsGuardarRelacionado() && IngredienteJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonIngredienteActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormProducto.productocaracBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.productocaracBeanSwingJInternalFrame.productocaracSessionBean.getEsGuardarRelacionado() && ProductoCaracJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonProductoCaracActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormProducto.servicioclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.servicioclienteBeanSwingJInternalFrame.servicioclienteSessionBean.getEsGuardarRelacionado() && ServicioClienteJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonServicioClienteActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormProducto.productopromocionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.productopromocionBeanSwingJInternalFrame.productopromocionSessionBean.getEsGuardarRelacionado() && ProductoPromocionJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonProductoPromocionActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormProducto.productoespeciBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.productoespeciBeanSwingJInternalFrame.productoespeciSessionBean.getEsGuardarRelacionado() && ProductoEspeciJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonProductoEspeciActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame.productoreemplaSessionBean.getEsGuardarRelacionado() && ProductoReemplaJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonProductoReemplaActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormProducto.productoestadisticaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.productoestadisticaBeanSwingJInternalFrame.productoestadisticaSessionBean.getEsGuardarRelacionado() && ProductoEstadisticaJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonProductoEstadisticaActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormProducto.politicafactuBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.politicafactuBeanSwingJInternalFrame.politicafactuSessionBean.getEsGuardarRelacionado() && PoliticaFactuJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonPoliticaFactuActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormProducto.productocuentacontableBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.productocuentacontableBeanSwingJInternalFrame.productocuentacontableSessionBean.getEsGuardarRelacionado() && ProductoCuentaContableJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonProductoCuentaContableActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormProducto.bodegaproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.bodegaproductoBeanSwingJInternalFrame.bodegaproductoSessionBean.getEsGuardarRelacionado() && BodegaProductoJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonBodegaProductoActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormProducto.presupuestoproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.presupuestoproductoBeanSwingJInternalFrame.presupuestoproductoSessionBean.getEsGuardarRelacionado() && PresupuestoProductoJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonPresupuestoProductoActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormProducto.saldomesproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.saldomesproductoBeanSwingJInternalFrame.saldomesproductoSessionBean.getEsGuardarRelacionado() && SaldoMesProductoJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonSaldoMesProductoActionPerformed(null,-1,false,true,null);
				}				
			}
				
			//SI ES MANUAL
			if(ProductoJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualProducto();
			}
			
			this.actualizarVisualTableDatosProducto();
			
			this.jTableDatosProducto.setRowSelectionInterval(this.getIndiceNuevoProducto(), this.getIndiceNuevoProducto());
			
			this.seleccionarFilaTablaProductoActual();
						
			this.actualizarEstadoCeldasBotonesProducto("a", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		}		
	}
	
	public void habilitarDeshabilitarControlesProducto(Boolean isHabilitar) throws Exception {
		
		this.jInternalFrameDetalleFormProducto.jTextFieldcodigoProducto.setEnabled(isHabilitar && this.productoConstantesFunciones.activarcodigoProducto);
		this.jInternalFrameDetalleFormProducto.jTextAreanombreProducto.setEnabled(isHabilitar && this.productoConstantesFunciones.activarnombreProducto);
		this.jInternalFrameDetalleFormProducto.jTextAreanombre_extranjeroProducto.setEnabled(isHabilitar && this.productoConstantesFunciones.activarnombre_extranjeroProducto);
		this.jInternalFrameDetalleFormProducto.jTextArearesumen_detalleProducto.setEnabled(isHabilitar && this.productoConstantesFunciones.activarresumen_detalleProducto);
		this.jInternalFrameDetalleFormProducto.jTextFieldcodigo_barraProducto.setEnabled(isHabilitar && this.productoConstantesFunciones.activarcodigo_barraProducto);
		this.jInternalFrameDetalleFormProducto.jCheckBoxesta_activoProducto.setEnabled(isHabilitar && this.productoConstantesFunciones.activaresta_activoProducto);
		this.jInternalFrameDetalleFormProducto.jTextAreadescripcionProducto.setEnabled(isHabilitar && this.productoConstantesFunciones.activardescripcionProducto);
		this.jInternalFrameDetalleFormProducto.jTextFieldprecioProducto.setEnabled(isHabilitar && this.productoConstantesFunciones.activarprecioProducto);
		this.jInternalFrameDetalleFormProducto.jTextFieldivaProducto.setEnabled(isHabilitar && this.productoConstantesFunciones.activarivaProducto);
		this.jInternalFrameDetalleFormProducto.jTextFieldiva_valorProducto.setEnabled(isHabilitar && this.productoConstantesFunciones.activariva_valorProducto);
		this.jInternalFrameDetalleFormProducto.jTextFieldiceProducto.setEnabled(isHabilitar && this.productoConstantesFunciones.activariceProducto);
		this.jInternalFrameDetalleFormProducto.jTextFieldice_valorProducto.setEnabled(isHabilitar && this.productoConstantesFunciones.activarice_valorProducto);
		this.jInternalFrameDetalleFormProducto.jTextFielddescuentoProducto.setEnabled(isHabilitar && this.productoConstantesFunciones.activardescuentoProducto);
		this.jInternalFrameDetalleFormProducto.jTextFielddescuento_valorProducto.setEnabled(isHabilitar && this.productoConstantesFunciones.activardescuento_valorProducto);
		this.jInternalFrameDetalleFormProducto.jTextFieldarancel_porcentajeProducto.setEnabled(isHabilitar && this.productoConstantesFunciones.activararancel_porcentajeProducto);
		this.jInternalFrameDetalleFormProducto.jTextFieldarancel_valorProducto.setEnabled(isHabilitar && this.productoConstantesFunciones.activararancel_valorProducto);
		this.jInternalFrameDetalleFormProducto.jTextFieldcomisionProducto.setEnabled(isHabilitar && this.productoConstantesFunciones.activarcomisionProducto);
		this.jInternalFrameDetalleFormProducto.jTextFieldcomision_valorProducto.setEnabled(isHabilitar && this.productoConstantesFunciones.activarcomision_valorProducto);
		this.jInternalFrameDetalleFormProducto.jTextFielddias_produccionProducto.setEnabled(isHabilitar && this.productoConstantesFunciones.activardias_produccionProducto);
		this.jInternalFrameDetalleFormProducto.jCheckBoxcon_stock_negativoProducto.setEnabled(isHabilitar && this.productoConstantesFunciones.activarcon_stock_negativoProducto);
		this.jInternalFrameDetalleFormProducto.jCheckBoxcon_precio_minimoProducto.setEnabled(isHabilitar && this.productoConstantesFunciones.activarcon_precio_minimoProducto);
		this.jInternalFrameDetalleFormProducto.jCheckBoxcon_loteProducto.setEnabled(isHabilitar && this.productoConstantesFunciones.activarcon_loteProducto);
		this.jInternalFrameDetalleFormProducto.jCheckBoxcon_confirmacionProducto.setEnabled(isHabilitar && this.productoConstantesFunciones.activarcon_confirmacionProducto);
		this.jInternalFrameDetalleFormProducto.jCheckBoxcon_presupuestoProducto.setEnabled(isHabilitar && this.productoConstantesFunciones.activarcon_presupuestoProducto);
		this.jInternalFrameDetalleFormProducto.jCheckBoxcon_importacionProducto.setEnabled(isHabilitar && this.productoConstantesFunciones.activarcon_importacionProducto);
		this.jInternalFrameDetalleFormProducto.jCheckBoxcon_finalProducto.setEnabled(isHabilitar && this.productoConstantesFunciones.activarcon_finalProducto);
		this.jInternalFrameDetalleFormProducto.jCheckBoxcon_consepProducto.setEnabled(isHabilitar && this.productoConstantesFunciones.activarcon_consepProducto);
		this.jInternalFrameDetalleFormProducto.jCheckBoxcon_serieProducto.setEnabled(isHabilitar && this.productoConstantesFunciones.activarcon_serieProducto);
		this.jInternalFrameDetalleFormProducto.jCheckBoxcon_balanzaProducto.setEnabled(isHabilitar && this.productoConstantesFunciones.activarcon_balanzaProducto);
		this.jInternalFrameDetalleFormProducto.jTextFieldaltoProducto.setEnabled(isHabilitar && this.productoConstantesFunciones.activaraltoProducto);
		this.jInternalFrameDetalleFormProducto.jTextFieldanchoProducto.setEnabled(isHabilitar && this.productoConstantesFunciones.activaranchoProducto);
		this.jInternalFrameDetalleFormProducto.jTextFieldlargoProducto.setEnabled(isHabilitar && this.productoConstantesFunciones.activarlargoProducto);
		this.jInternalFrameDetalleFormProducto.jTextFieldvolumenProducto.setEnabled(isHabilitar && this.productoConstantesFunciones.activarvolumenProducto);
		this.jInternalFrameDetalleFormProducto.jTextFieldpesoProducto.setEnabled(isHabilitar && this.productoConstantesFunciones.activarpesoProducto);
		this.jInternalFrameDetalleFormProducto.jTextFieldgramosProducto.setEnabled(isHabilitar && this.productoConstantesFunciones.activargramosProducto);
		this.jInternalFrameDetalleFormProducto.jTextFieldunidades_cajaProducto.setEnabled(isHabilitar && this.productoConstantesFunciones.activarunidades_cajaProducto);
		this.jInternalFrameDetalleFormProducto.jTextFieldmargenProducto.setEnabled(isHabilitar && this.productoConstantesFunciones.activarmargenProducto);
		this.jInternalFrameDetalleFormProducto.jTextFieldfactorProducto.setEnabled(isHabilitar && this.productoConstantesFunciones.activarfactorProducto);
		this.jInternalFrameDetalleFormProducto.jTextFieldfobProducto.setEnabled(isHabilitar && this.productoConstantesFunciones.activarfobProducto);
		this.jInternalFrameDetalleFormProducto.jTextFieldfob2Producto.setEnabled(isHabilitar && this.productoConstantesFunciones.activarfob2Producto);
		this.jInternalFrameDetalleFormProducto.jTextAreagrupoProducto.setEnabled(isHabilitar && this.productoConstantesFunciones.activargrupoProducto);
		this.jInternalFrameDetalleFormProducto.jTextAreareferenciaProducto.setEnabled(isHabilitar && this.productoConstantesFunciones.activarreferenciaProducto);
		this.jInternalFrameDetalleFormProducto.jTextAreaaplicacionProducto.setEnabled(isHabilitar && this.productoConstantesFunciones.activaraplicacionProducto);
		this.jInternalFrameDetalleFormProducto.jTextAreaprocedenciaProducto.setEnabled(isHabilitar && this.productoConstantesFunciones.activarprocedenciaProducto);	
		//
		this.jInternalFrameDetalleFormProducto.jComboBoxid_empresaProducto.setEnabled(isHabilitar && this.productoConstantesFunciones.activarid_empresaProducto);//
		this.jInternalFrameDetalleFormProducto.jComboBoxid_sucursalProducto.setEnabled(isHabilitar && this.productoConstantesFunciones.activarid_sucursalProducto);
		this.jInternalFrameDetalleFormProducto.jComboBoxid_lineaProducto.setEnabled(isHabilitar && this.productoConstantesFunciones.activarid_lineaProducto);
		this.jInternalFrameDetalleFormProducto.jComboBoxid_linea_grupoProducto.setEnabled(isHabilitar && this.productoConstantesFunciones.activarid_linea_grupoProducto);
		this.jInternalFrameDetalleFormProducto.jComboBoxid_linea_categoriaProducto.setEnabled(isHabilitar && this.productoConstantesFunciones.activarid_linea_categoriaProducto);
		this.jInternalFrameDetalleFormProducto.jComboBoxid_linea_marcaProducto.setEnabled(isHabilitar && this.productoConstantesFunciones.activarid_linea_marcaProducto);
		this.jInternalFrameDetalleFormProducto.jComboBoxid_tipo_producto_servicioProducto.setEnabled(isHabilitar && this.productoConstantesFunciones.activarid_tipo_producto_servicioProducto);
		this.jInternalFrameDetalleFormProducto.jComboBoxid_tipo_producto_servicio_invenProducto.setEnabled(isHabilitar && this.productoConstantesFunciones.activarid_tipo_producto_servicio_invenProducto);
		this.jInternalFrameDetalleFormProducto.jComboBoxid_tipo_costeoProducto.setEnabled(isHabilitar && this.productoConstantesFunciones.activarid_tipo_costeoProducto);
		this.jInternalFrameDetalleFormProducto.jComboBoxid_unidadProducto.setEnabled(isHabilitar && this.productoConstantesFunciones.activarid_unidadProducto);
		this.jInternalFrameDetalleFormProducto.jComboBoxid_unidad_pesoProducto.setEnabled(isHabilitar && this.productoConstantesFunciones.activarid_unidad_pesoProducto);
		this.jInternalFrameDetalleFormProducto.jComboBoxid_arancelProducto.setEnabled(isHabilitar && this.productoConstantesFunciones.activarid_arancelProducto);
		this.jInternalFrameDetalleFormProducto.jComboBoxid_clienteProducto.setEnabled(isHabilitar && this.productoConstantesFunciones.activarid_clienteProducto);
		this.jInternalFrameDetalleFormProducto.jComboBoxid_cliente_proveedor_defectoProducto.setEnabled(isHabilitar && this.productoConstantesFunciones.activarid_cliente_proveedor_defectoProducto);
		this.jInternalFrameDetalleFormProducto.jComboBoxid_tipo_productoProducto.setEnabled(isHabilitar && this.productoConstantesFunciones.activarid_tipo_productoProducto);
		this.jInternalFrameDetalleFormProducto.jComboBoxid_color_productoProducto.setEnabled(isHabilitar && this.productoConstantesFunciones.activarid_color_productoProducto);
		this.jInternalFrameDetalleFormProducto.jComboBoxid_clase_productoProducto.setEnabled(isHabilitar && this.productoConstantesFunciones.activarid_clase_productoProducto);
		this.jInternalFrameDetalleFormProducto.jComboBoxid_efecto_productoProducto.setEnabled(isHabilitar && this.productoConstantesFunciones.activarid_efecto_productoProducto);
		this.jInternalFrameDetalleFormProducto.jComboBoxid_marca_productoProducto.setEnabled(isHabilitar && this.productoConstantesFunciones.activarid_marca_productoProducto);
		this.jInternalFrameDetalleFormProducto.jComboBoxid_modelo_productoProducto.setEnabled(isHabilitar && this.productoConstantesFunciones.activarid_modelo_productoProducto);
		this.jInternalFrameDetalleFormProducto.jComboBoxid_material_productoProducto.setEnabled(isHabilitar && this.productoConstantesFunciones.activarid_material_productoProducto);
		this.jInternalFrameDetalleFormProducto.jComboBoxid_segmento_productoProducto.setEnabled(isHabilitar && this.productoConstantesFunciones.activarid_segmento_productoProducto);
		this.jInternalFrameDetalleFormProducto.jComboBoxid_talla_productoProducto.setEnabled(isHabilitar && this.productoConstantesFunciones.activarid_talla_productoProducto);
	};
	
	public void setDefaultControlesProducto() throws Exception {
			
	};
	
	
	public void habilitarDeshabilitarTipoMantenimientoProducto(Boolean esRelaciones) throws Exception {
		if(esRelaciones) {
			//this.productoSessionBean.setConGuardarRelaciones(true);			
			this.productoSessionBean.setEstaModoGuardarRelaciones(true);				
			this.jInternalFrameDetalleFormProducto.jTabbedPaneRelacionesProducto.setVisible(true);
			
			

			if(this.jInternalFrameDetalleFormProducto.proveedorproductoBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormProducto.proveedorproductoBeanSwingJInternalFrame.proveedorproductoSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormProducto.proveedorproductoBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormProducto.precioBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormProducto.precioBeanSwingJInternalFrame.precioSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormProducto.precioBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenBeanSwingJInternalFrame.detalleimpuestoinvenSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormProducto.presupuestoventasBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormProducto.presupuestoventasBeanSwingJInternalFrame.presupuestoventasSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormProducto.presupuestoventasBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormProducto.politicaproductoBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormProducto.politicaproductoBeanSwingJInternalFrame.politicaproductoSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormProducto.politicaproductoBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame.serieproductoSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormProducto.ubicacionproduBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormProducto.ubicacionproduBeanSwingJInternalFrame.ubicacionproduSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormProducto.ubicacionproduBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormProducto.parametroproductoBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormProducto.parametroproductoBeanSwingJInternalFrame.parametroproductoSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormProducto.parametroproductoBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormProducto.productounidadBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormProducto.productounidadBeanSwingJInternalFrame.productounidadSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormProducto.productounidadBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormProducto.ingredienteBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormProducto.ingredienteBeanSwingJInternalFrame.ingredienteSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormProducto.ingredienteBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormProducto.productocaracBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormProducto.productocaracBeanSwingJInternalFrame.productocaracSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormProducto.productocaracBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormProducto.servicioclienteBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormProducto.servicioclienteBeanSwingJInternalFrame.servicioclienteSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormProducto.servicioclienteBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormProducto.productopromocionBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormProducto.productopromocionBeanSwingJInternalFrame.productopromocionSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormProducto.productopromocionBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormProducto.productoespeciBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormProducto.productoespeciBeanSwingJInternalFrame.productoespeciSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormProducto.productoespeciBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame.productoreemplaSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormProducto.productoestadisticaBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormProducto.productoestadisticaBeanSwingJInternalFrame.productoestadisticaSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormProducto.productoestadisticaBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormProducto.politicafactuBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormProducto.politicafactuBeanSwingJInternalFrame.politicafactuSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormProducto.politicafactuBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormProducto.productocuentacontableBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormProducto.productocuentacontableBeanSwingJInternalFrame.productocuentacontableSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormProducto.productocuentacontableBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormProducto.bodegaproductoBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormProducto.bodegaproductoBeanSwingJInternalFrame.bodegaproductoSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormProducto.bodegaproductoBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormProducto.presupuestoproductoBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormProducto.presupuestoproductoBeanSwingJInternalFrame.presupuestoproductoSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormProducto.presupuestoproductoBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormProducto.saldomesproductoBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormProducto.saldomesproductoBeanSwingJInternalFrame.saldomesproductoSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormProducto.saldomesproductoBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}		
		} else {
			//this.productoSessionBean.setConGuardarRelaciones(false);			
			this.productoSessionBean.setEstaModoGuardarRelaciones(false);						
			this.jInternalFrameDetalleFormProducto.jTabbedPaneRelacionesProducto.setVisible(false);
			
			

			if(this.jInternalFrameDetalleFormProducto.proveedorproductoBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormProducto.proveedorproductoBeanSwingJInternalFrame.proveedorproductoSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormProducto.proveedorproductoBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormProducto.precioBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormProducto.precioBeanSwingJInternalFrame.precioSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormProducto.precioBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenBeanSwingJInternalFrame.detalleimpuestoinvenSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormProducto.presupuestoventasBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormProducto.presupuestoventasBeanSwingJInternalFrame.presupuestoventasSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormProducto.presupuestoventasBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormProducto.politicaproductoBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormProducto.politicaproductoBeanSwingJInternalFrame.politicaproductoSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormProducto.politicaproductoBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame.serieproductoSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormProducto.ubicacionproduBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormProducto.ubicacionproduBeanSwingJInternalFrame.ubicacionproduSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormProducto.ubicacionproduBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormProducto.parametroproductoBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormProducto.parametroproductoBeanSwingJInternalFrame.parametroproductoSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormProducto.parametroproductoBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormProducto.productounidadBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormProducto.productounidadBeanSwingJInternalFrame.productounidadSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormProducto.productounidadBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormProducto.ingredienteBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormProducto.ingredienteBeanSwingJInternalFrame.ingredienteSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormProducto.ingredienteBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormProducto.productocaracBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormProducto.productocaracBeanSwingJInternalFrame.productocaracSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormProducto.productocaracBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormProducto.servicioclienteBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormProducto.servicioclienteBeanSwingJInternalFrame.servicioclienteSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormProducto.servicioclienteBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormProducto.productopromocionBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormProducto.productopromocionBeanSwingJInternalFrame.productopromocionSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormProducto.productopromocionBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormProducto.productoespeciBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormProducto.productoespeciBeanSwingJInternalFrame.productoespeciSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormProducto.productoespeciBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame.productoreemplaSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormProducto.productoestadisticaBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormProducto.productoestadisticaBeanSwingJInternalFrame.productoestadisticaSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormProducto.productoestadisticaBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormProducto.politicafactuBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormProducto.politicafactuBeanSwingJInternalFrame.politicafactuSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormProducto.politicafactuBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormProducto.productocuentacontableBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormProducto.productocuentacontableBeanSwingJInternalFrame.productocuentacontableSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormProducto.productocuentacontableBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormProducto.bodegaproductoBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormProducto.bodegaproductoBeanSwingJInternalFrame.bodegaproductoSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormProducto.bodegaproductoBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormProducto.presupuestoproductoBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormProducto.presupuestoproductoBeanSwingJInternalFrame.presupuestoproductoSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormProducto.presupuestoproductoBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormProducto.saldomesproductoBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormProducto.saldomesproductoBeanSwingJInternalFrame.saldomesproductoSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormProducto.saldomesproductoBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}
		}
	};
	
	public int getIndiceNuevoProducto() throws Exception {
		int iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(Producto productoAux:this.productoLogic.getProductos()) {
				if(productoAux.getId().equals(this.iIdNuevoProducto)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(Producto productoAux:this.productos) {
				if(productoAux.getId().equals(this.iIdNuevoProducto)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndice-1;
		}
		
		return iIndice;
	}
	
	public int getIndiceActualProducto(Producto producto,Integer iIndiceActual) throws Exception {
		Integer iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(Producto productoAux:this.productoLogic.getProductos()) {
				if(productoAux.getId().equals(producto.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(Producto productoAux:this.productos) {
				if(productoAux.getId().equals(producto.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndiceActual;
		}
		
		return iIndice;
	}
	
	public void setCamposBaseDesdeOriginalProducto(Producto productoOriginal) throws Exception {
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(Producto productoAux:this.productoLogic.getProductos()) {
				if(productoAux.getProductoOriginal().getId().equals(productoOriginal.getId())) {
					existe=true;
					productoOriginal.setId(productoAux.getId());
					productoOriginal.setVersionRow(productoAux.getVersionRow());
					break;
				}
				
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(Producto productoAux:this.productos) {
				if(productoAux.getProductoOriginal().getId().equals(productoOriginal.getId())) {
					existe=true;
					productoOriginal.setId(productoAux.getId());
					productoOriginal.setVersionRow(productoAux.getVersionRow());
					break;
				}				
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
		}
	}
	
	public void cancelarNuevosProducto(Boolean esParaCancelar) throws Exception {
		productosAux=new ArrayList<Producto>();
		productoAux=new Producto();
		
		if(!this.productoSessionBean.getEsGuardarRelacionado()) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(Producto productoAux:this.productoLogic.getProductos()) {
					if(productoAux.getId()<0) {
						productosAux.add(productoAux);
					}		
				}
				this.iIdNuevoProducto=0L;
				this.productoLogic.getProductos().removeAll(productosAux);
					
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(Producto productoAux:this.productos) {
					if(productoAux.getId()<0) {
						productosAux.add(productoAux);
					}		
				}
				this.iIdNuevoProducto=0L;
				this.productos.removeAll(productosAux);
			}	
		} else {			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				if(esParaCancelar && this.isEsNuevoProducto 
					&& this.productoLogic.getProductos().size()>0
					) {
					productoAux=this.productoLogic.getProductos().get(this.productoLogic.getProductos().size() - 1);
				
					if(productoAux.getId()<0) {
						this.productoLogic.getProductos().remove(productoAux);
					}
				}
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				if(esParaCancelar && this.isEsNuevoProducto && this.productos.size()>0) {
					productoAux=this.productos.get(this.productos.size() - 1);
				
					if(productoAux.getId()<0) {
						this.productos.remove(productoAux);
					}
				}
			}	
		}
	}
	
	public void cancelarNuevoProducto(Boolean esParaCancelar) throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			if(producto.getId()<0) {
				this.productoLogic.getProductos().remove(this.producto);
			}					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			if(producto.getId()<0) {
				this.productos.remove(this.producto);
			}
		}			
	}
	
	public void setEstadosInicialesProducto(List<Producto> productosAux) throws Exception {
		ProductoConstantesFunciones.setEstadosInicialesProducto(productosAux);
	}
	
	public void setEstadosInicialesProducto(Producto productoAux) throws Exception {
		ProductoConstantesFunciones.setEstadosInicialesProducto(productoAux);		
	}
	
	public void nuevo() throws Exception {
		try	{
			//ESTA VALIDADO EN FUNCION ACTUALIZAR
			//if(this.validarProductoActual()) {
				this.ejecutarMantenimiento(MaintenanceType.NUEVO);
				
				this.actualizarEstadoCeldasBotonesProducto("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
				
			//}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void actualizar() throws Exception {
		try	{
			if(this.validarProductoActual()) {
				if(!this.isEsNuevoProducto) {
					this.ejecutarMantenimiento(MaintenanceType.ACTUALIZAR);
					
					this.actualizarEstadoCeldasBotonesProducto("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
					
				} else {					
					this.nuevo();
					this.isEsNuevoProducto=false;
				}
				
				//SE CANCELA AL FINAL DEL PROCESO JBUTTONACTUALIZAR
				//this.cancelar(false);
			}		
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void eliminar() throws Exception {
		try	{	
			if(this.validarProductoActual()) {
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE ELIMINAR EL/LA Producto ?", "MANTENIMIENTO DE Producto", JOptionPane.OK_CANCEL_OPTION) == 0) {
					this.ejecutarMantenimiento(MaintenanceType.ELIMINAR);			
					this.actualizarEstadoCeldasBotonesProducto("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
				}
			
			}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void guardarCambios() throws Exception {
		try	{
			this.ejecutarMantenimiento(MaintenanceType.GUARDARCAMBIOS);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarAsignar(Producto producto) throws Exception {
		ProductoConstantesFunciones.seleccionarAsignar(this.producto,producto);
	}
	
	public void seleccionar() throws Exception {
		try	{
			//ACTUALIZO EL PERMISO ACTUALIZAR CON EL PERMISO ACTUALIZAR ORIGINAL ESTE PERMISO SE UTILIZA PARA EL NUEVO TAMBIEN
			this.isPermisoActualizarProducto=this.isPermisoActualizarOriginalProducto;
			
			
			this.seleccionarAsignar(producto);
			
			

			idClienteActual=producto.getid_cliente();
			this.seleccionarClienteActual();

			idClienteProveedorDefectoActual=producto.getid_cliente_proveedor_defecto();
			this.seleccionarClienteProveedorDefectoActual();
			
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			ProductoConstantesFunciones.quitarEspaciosProducto(this.producto,this.arrDatoGeneral);
			
			
			this.actualizarEstadoCeldasBotonesProducto("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarBusqueda(Long id) throws Exception {
		try	{
			this.productoSessionBean.setsFuncionBusquedaRapida(this.productoSessionBean.getsFuncionBusquedaRapida().replace("TO_REPLACE", id.toString()));
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	
	//BUSQUEDA INTERNA FK
	public void seleccionarClienteActual() throws Exception {
		try	{
			Cliente clienteAux=new Cliente();

			if(this.idClienteActual != null && this.idClienteActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteLogic.getEntityWithConnection(this.idClienteActual);
					clienteAux= clienteLogic.getCliente();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				clientesForeignKey=new ArrayList<Cliente>();
				clientesForeignKey.add(clienteAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	public void seleccionarClienteProveedorDefectoActual() throws Exception {
		try	{
			Cliente clienteproveedordefectoAux=new Cliente();

			if(this.idClienteProveedorDefectoActual != null && this.idClienteProveedorDefectoActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteproveedordefectoLogic.getEntityWithConnection(this.idClienteProveedorDefectoActual);
					clienteproveedordefectoAux= clienteproveedordefectoLogic.getCliente();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				clienteproveedordefectosForeignKey=new ArrayList<Cliente>();
				clienteproveedordefectosForeignKey.add(clienteproveedordefectoAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	
	public void cancelar() throws Exception {
		this.cancelar(true);
	}
	
	public void cancelar(Boolean esParaCancelar) throws Exception {
		try {
														
			
			//SE UTILIZA COLUMNA ELIMINAR EN TABLA
			if(this.isEsNuevoProducto) {
				//NO CANCELA TODOS NUEVOS POR FUNCIONALIDAD GUARDAR CAMBIOS
				//this.cancelarNuevosProducto(esParaCancelar);				
				this.cancelarNuevoProducto(esParaCancelar);								
			}
			
			this.producto=new Producto();
			
			this.inicializarProducto();
			
			this.actualizarEstadoCeldasBotonesProducto("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void inicializarProducto() throws Exception {
		try {
			ProductoConstantesFunciones.inicializarProducto(this.producto);
			
			} catch(Exception e) {
			throw e;
		}
	}
	
	public void anteriores()throws Exception {
		try	{
			//this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			
			if(this.iNumeroPaginacionPagina-this.iNumeroPaginacion<this.iNumeroPaginacion) {
				this.iNumeroPaginacionPagina=0;		
			} else {
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			}
			
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void siguientes()throws Exception {
		try	{			
			if(this.productoLogic.getProductos().size()>0) {
					
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina+this.iNumeroPaginacion;
			}
				
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void generarReporteProductos(String sAccionBusqueda,List<Producto> productosParaReportes) throws Exception {
		//HttpSession httpSession = httpServletRequest.getSession();
		Long iIdUsuarioSesion=0L;	
		
		
		if(usuarioActual==null) {
			this.usuarioActual=new Usuario();
		}
		
		iIdUsuarioSesion=usuarioActual.getId();
		
		String sPathReportes="";
		
		InputStream reportFile=null;
		InputStream imageFile=null;
			
		imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		String sPathReporteFinal="";
		
		if(!esReporteAccionProceso) {
			if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
				if(!this.esReporteDinamico) {
					sPathReporteFinal="Producto"+this.sTipoReporteExtra+"Design.jasper";
					reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
				} else {
					sPathReporteFinal=this.sPathReporteDinamico;
					reportFile = new FileInputStream(sPathReporteFinal);
				}
			} else {
				sPathReporteFinal="ProductoMasterRelaciones"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);
				//sPathReportes=reportFile.getPath().replace("ProductoMasterRelacionesDesign.jasper", "");
			}
		} else {
				sPathReporteFinal="Producto"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
		}
		
		if(reportFile==null) {
			throw new JRRuntimeException(sPathReporteFinal+" no existe");
		}
		
		String sUsuario="";
		
		if(usuarioActual!=null) {
			sUsuario=usuarioActual.getuser_name();
		}
		
		Map<String, Object> parameters = new HashMap<String, Object>();
		parameters.put("usuario", sUsuario);
		
		parameters.put("titulo", Funciones.GetTituloSistemaReporte(this.parametroGeneralSg,this.moduloActual,this.usuarioActual));
		parameters.put("subtitulo", "Reporte De  Productos");		
		parameters.put("busquedapor", ProductoConstantesFunciones.getNombreIndice(sAccionBusqueda)+sDetalleReporte);
		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			parameters.put("SUBREPORT_DIR", sPathReportes);
		}
		
		parameters.put("con_grafico", this.conGraficoReporte);
		
		JasperReport jasperReport = (JasperReport)JRLoader.loadObject(reportFile);
				
		this.cargarDatosCliente();
		
		ArrayList<Classe> classes=new ArrayList<Classe>();		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			
			classes.add(new Classe(ProveedorProducto.class));
			classes.add(new Classe(Precio.class));
			classes.add(new Classe(DetalleImpuestoInven.class));
			classes.add(new Classe(PresupuestoVentas.class));
			classes.add(new Classe(PoliticaProducto.class));
			classes.add(new Classe(SerieProducto.class));
			classes.add(new Classe(UbicacionProdu.class));
			classes.add(new Classe(ParametroProducto.class));
			classes.add(new Classe(ProductoUnidad.class));
			classes.add(new Classe(Ingrediente.class));
			classes.add(new Classe(ProductoCarac.class));
			classes.add(new Classe(ServicioCliente.class));
			classes.add(new Classe(ProductoPromocion.class));
			classes.add(new Classe(ProductoEspeci.class));
			classes.add(new Classe(ProductoReempla.class));
			classes.add(new Classe(ProductoEstadistica.class));
			classes.add(new Classe(PoliticaFactu.class));
			classes.add(new Classe(ProductoCuentaContable.class));
			classes.add(new Classe(BodegaProducto.class));
			classes.add(new Classe(PresupuestoProducto.class));
			classes.add(new Classe(SaldoMesProducto.class));
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {		
				try	{
					
					ProductoLogic productoLogicAuxiliar=new ProductoLogic();
					productoLogicAuxiliar.setDatosCliente(productoLogic.getDatosCliente());				
					productoLogicAuxiliar.setProductos(productosParaReportes);
					
					productoLogicAuxiliar.cargarRelacionesLoteForeignKeyProductoWithConnection(); //deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes, "");
					
					productosParaReportes=productoLogicAuxiliar.getProductos();
					
					//productoLogic.getNewConnexionToDeep();
					
					//for (Producto producto:productosParaReportes) {
					//	productoLogic.deepLoad(producto, false, DeepLoadType.INCLUDE, classes);
					//}						
					//productoLogic.commitNewConnexionToDeep();
					
						
				} catch(Exception e) {
					throw e;
					
				} finally {
					//productoLogic.closeNewConnexionToDeep();
				}
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
			//ARCHITECTURE		
			
		
			
			

			InputStream reportFileProveedorProducto = AuxiliarReportes.class.getResourceAsStream("ProveedorProductoDetalleRelacionesDesign.jasper");
			parameters.put("subreport_proveedorproducto", reportFileProveedorProducto);

			InputStream reportFilePrecio = AuxiliarReportes.class.getResourceAsStream("PrecioDetalleRelacionesDesign.jasper");
			parameters.put("subreport_precio", reportFilePrecio);

			InputStream reportFileDetalleImpuestoInven = AuxiliarReportes.class.getResourceAsStream("DetalleImpuestoInvenDetalleRelacionesDesign.jasper");
			parameters.put("subreport_detalleimpuestoinven", reportFileDetalleImpuestoInven);

			InputStream reportFilePresupuestoVentas = AuxiliarReportes.class.getResourceAsStream("PresupuestoVentasDetalleRelacionesDesign.jasper");
			parameters.put("subreport_presupuestoventas", reportFilePresupuestoVentas);

			InputStream reportFilePoliticaProducto = AuxiliarReportes.class.getResourceAsStream("PoliticaProductoDetalleRelacionesDesign.jasper");
			parameters.put("subreport_politicaproducto", reportFilePoliticaProducto);

			InputStream reportFileSerieProducto = AuxiliarReportes.class.getResourceAsStream("SerieProductoDetalleRelacionesDesign.jasper");
			parameters.put("subreport_serieproducto", reportFileSerieProducto);

			InputStream reportFileUbicacionProdu = AuxiliarReportes.class.getResourceAsStream("UbicacionProduDetalleRelacionesDesign.jasper");
			parameters.put("subreport_ubicacionprodu", reportFileUbicacionProdu);

			InputStream reportFileParametroProducto = AuxiliarReportes.class.getResourceAsStream("ParametroProductoDetalleRelacionesDesign.jasper");
			parameters.put("subreport_parametroproducto", reportFileParametroProducto);

			InputStream reportFileProductoUnidad = AuxiliarReportes.class.getResourceAsStream("ProductoUnidadDetalleRelacionesDesign.jasper");
			parameters.put("subreport_productounidad", reportFileProductoUnidad);

			InputStream reportFileIngrediente = AuxiliarReportes.class.getResourceAsStream("IngredienteDetalleRelacionesDesign.jasper");
			parameters.put("subreport_ingrediente", reportFileIngrediente);

			InputStream reportFileProductoCarac = AuxiliarReportes.class.getResourceAsStream("ProductoCaracDetalleRelacionesDesign.jasper");
			parameters.put("subreport_productocarac", reportFileProductoCarac);

			InputStream reportFileServicioCliente = AuxiliarReportes.class.getResourceAsStream("ServicioClienteDetalleRelacionesDesign.jasper");
			parameters.put("subreport_serviciocliente", reportFileServicioCliente);

			InputStream reportFileProductoPromocion = AuxiliarReportes.class.getResourceAsStream("ProductoPromocionDetalleRelacionesDesign.jasper");
			parameters.put("subreport_productopromocion", reportFileProductoPromocion);

			InputStream reportFileProductoEspeci = AuxiliarReportes.class.getResourceAsStream("ProductoEspeciDetalleRelacionesDesign.jasper");
			parameters.put("subreport_productoespeci", reportFileProductoEspeci);

			InputStream reportFileProductoReempla = AuxiliarReportes.class.getResourceAsStream("ProductoReemplaDetalleRelacionesDesign.jasper");
			parameters.put("subreport_productoreempla", reportFileProductoReempla);

			InputStream reportFileProductoEstadistica = AuxiliarReportes.class.getResourceAsStream("ProductoEstadisticaDetalleRelacionesDesign.jasper");
			parameters.put("subreport_productoestadistica", reportFileProductoEstadistica);

			InputStream reportFilePoliticaFactu = AuxiliarReportes.class.getResourceAsStream("PoliticaFactuDetalleRelacionesDesign.jasper");
			parameters.put("subreport_politicafactu", reportFilePoliticaFactu);

			InputStream reportFileProductoCuentaContable = AuxiliarReportes.class.getResourceAsStream("ProductoCuentaContableDetalleRelacionesDesign.jasper");
			parameters.put("subreport_productocuentacontable", reportFileProductoCuentaContable);

			InputStream reportFileBodegaProducto = AuxiliarReportes.class.getResourceAsStream("BodegaProductoDetalleRelacionesDesign.jasper");
			parameters.put("subreport_bodegaproducto", reportFileBodegaProducto);

			InputStream reportFilePresupuestoProducto = AuxiliarReportes.class.getResourceAsStream("PresupuestoProductoDetalleRelacionesDesign.jasper");
			parameters.put("subreport_presupuestoproducto", reportFilePresupuestoProducto);

			InputStream reportFileSaldoMesProducto = AuxiliarReportes.class.getResourceAsStream("SaldoMesProductoDetalleRelacionesDesign.jasper");
			parameters.put("subreport_saldomesproducto", reportFileSaldoMesProducto);
		} else {
			//FK DEBERIA TRAERSE DE ANTEMANO
			
		}
								
		
		//CLASSES PARA REPORTES OBJETOS RELACIONADOS
		if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
			classes=new ArrayList<Classe>();
		}
		
		JRBeanArrayDataSource jrbeanArrayDataSourceProducto=null;
		
		if(this.sTipoReporteExtra!=null && !this.sTipoReporteExtra.equals("")) {
			ProductoConstantesFunciones.S_TIPOREPORTE_EXTRA=this.sTipoReporteExtra;
		} else {
			ProductoConstantesFunciones.S_TIPOREPORTE_EXTRA="";
		}
		
		jrbeanArrayDataSourceProducto=new JRBeanArrayDataSource(ProductoJInternalFrame.TraerProductoBeans(productosParaReportes,classes).toArray());
		
		jasperPrint = JasperFillManager.fillReport(jasperReport,parameters,jrbeanArrayDataSourceProducto);
				
		
		String sPathDest=Constantes.SUNIDAD_ARCHIVOS+":/"+Constantes.SCONTEXTSERVER+"/"+ProductoConstantesFunciones.SCHEMA+"/reportes";
		
		File filePathDest = new File(sPathDest);
		
		if(!filePathDest.exists()) {
			filePathDest.mkdirs();				
		}
				
		String sDestFileName=sPathDest+"/"+ProductoConstantesFunciones.CLASSNAME;
				
		if(this.sTipoArchivoReporte=="VISUALIZAR") {
			JasperViewer jasperViewer = new JasperViewer(jasperPrint,false) ;
			jasperViewer.setVisible(true) ; 

		} else if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML") {	
			//JasperFillManager.fillReportToFile(reportFile.getAbsolutePath(),parameters, new JRBeanArrayDataSource(ProductoBean.TraerProductoBeans(productosParaReportes).toArray()));
							
			if(this.sTipoArchivoReporte=="HTML") {
				sDestFileName+=".html";
				JasperExportManager.exportReportToHtmlFile(jasperPrint,sDestFileName);
					
			} else if(this.sTipoArchivoReporte=="PDF") {
				sDestFileName+=".pdf";
				JasperExportManager.exportReportToPdfFile(jasperPrint,sDestFileName);
			} else {
				sDestFileName+=".xml";
				JasperExportManager.exportReportToXmlFile(jasperPrint,sDestFileName, false);
			}	
			
		} else if(this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {
				
			if(this.sTipoArchivoReporte=="WORD") {
				sDestFileName+=".rtf";
					
				JRRtfExporter exporter = new JRRtfExporter();
		
				exporter.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporter.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
		
				exporter.exportReport();
				
			} else	{
				sDestFileName+=".xls";
					
				JRXlsExporter exporterXls = new JRXlsExporter();
		
				exporterXls.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporterXls.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
				exporterXls.setParameter(JRXlsExporterParameter.IS_ONE_PAGE_PER_SHEET, Boolean.TRUE);
		
				exporterXls.exportReport();
			}
			
		} else if(this.sTipoArchivoReporte=="EXCEL2"||this.sTipoArchivoReporte=="EXCEL2_2") {
			//sDestFileName+=".xlsx";
			
			if(this.sTipoReporte.equals("NORMAL")) {
				this.generarExcelReporteProductos(sAccionBusqueda,sTipoArchivoReporte,productosParaReportes);
			
			} else if(this.sTipoReporte.equals("FORMULARIO")){
				this.generarExcelReporteVerticalProductos(sAccionBusqueda,sTipoArchivoReporte,productosParaReportes,false);
			
			} else if(this.sTipoReporte.equals("DINAMICO")){
				
				if(this.sTipoReporteDinamico.equals("NORMAL")) {
					
					this.jButtonGenerarExcelReporteDinamicoProductoActionPerformed(null);
					//this.generarExcelReporteProductos(sAccionBusqueda,sTipoArchivoReporte,productosParaReportes);
					
				
				} else if(this.sTipoReporteDinamico.equals("FORMULARIO")){
					this.generarExcelReporteVerticalProductos(sAccionBusqueda,sTipoArchivoReporte,productosParaReportes,true);
				
				} else if(this.sTipoReporteDinamico.equals("RELACIONES")){
					this.generarExcelReporteRelacionesProductos(sAccionBusqueda,sTipoArchivoReporte,productosParaReportes,true);
				}
				
			} else if(this.sTipoReporte.equals("RELACIONES")){
				this.generarExcelReporteRelacionesProductos(sAccionBusqueda,sTipoArchivoReporte,productosParaReportes,false);
			}
		}
		
		if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML"||this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {				
			JOptionPane.showMessageDialog(this,"REPORTE "+sDestFileName+" GENERADO SATISFACTORIAMENTE","REPORTES ",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteProductos(String sAccionBusqueda,String sTipoArchivoReporte,List<Producto> productosParaReportes) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"producto";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("Productos");
         
        int iRow = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderProducto("NORMAL",row,workbook);
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux=null;
		
		int i=0;
		
      	for(Producto producto : productosParaReportes) {            
			row = sheet.createRow(iRow++);
			iCell = 0;
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				cellStyleDataAux=cellStyleData;
			}
			
			ProductoConstantesFunciones.generarExcelReporteDataProducto("NORMAL",row,workbook,producto,cellStyleDataAux);
		
			
			/*
            Cell cell0 = row.createCell(0);
            cell0.setCellValue(country.getName());
            Cell cell1 = row.createCell(1);
            cell1.setCellValue(country.getShortCode());
			*/
			
			i++;
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.productoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Producto",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteHeaderProducto(String sTipo,Row row,Workbook workbook) {
		
		ProductoConstantesFunciones.generarExcelReporteHeaderProducto(sTipo,row,workbook);
		
		/*
		Cell cell=null;
		int iCell=0;
		
		CellStyle cellStyle = workbook.createCellStyle();
		cellStyle.setFillBackgroundColor(IndexedColors.GREEN.getIndex());
		cellStyle.setFillPattern(CellStyle.ALIGN_FILL);
		*/
		
	}
	
	public void generarExcelReporteVerticalProductos(String sAccionBusqueda,String sTipoArchivoReporte,List<Producto> productosParaReportes,Boolean paraDinamico) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"producto_vertical";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("Productos");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		CellStyle cellStyle = Funciones2.getStyleTitulo(workbook,"ZEBRA");;
		
		CellStyle cellStyleTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL_VERTICAL");
		
		
		for(Producto producto : productosParaReportes) {
			row = sheet.createRow(iRow++);
			iRowLast=iRow - 1;
			
			cell = row.createCell(0);
			cell.setCellValue(ProductoConstantesFunciones.getProductoDescripcion(producto));
			cell.setCellStyle(cellStyleTitulo);
			
			sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
	
			


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoConstantesFunciones.LABEL_IDEMPRESA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoConstantesFunciones.LABEL_IDEMPRESA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(producto.getempresa_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoConstantesFunciones.LABEL_IDSUCURSAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoConstantesFunciones.LABEL_IDSUCURSAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(producto.getsucursal_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoConstantesFunciones.LABEL_CODIGO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoConstantesFunciones.LABEL_CODIGO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(producto.getcodigo());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoConstantesFunciones.LABEL_NOMBRE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoConstantesFunciones.LABEL_NOMBRE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(producto.getnombre());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoConstantesFunciones.LABEL_NOMBREEXTRANJERO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoConstantesFunciones.LABEL_NOMBREEXTRANJERO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(producto.getnombre_extranjero());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoConstantesFunciones.LABEL_RESUMENDETALLE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoConstantesFunciones.LABEL_RESUMENDETALLE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(producto.getresumen_detalle());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoConstantesFunciones.LABEL_CODIGOBARRA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoConstantesFunciones.LABEL_CODIGOBARRA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(producto.getcodigo_barra());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoConstantesFunciones.LABEL_IDLINEA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoConstantesFunciones.LABEL_IDLINEA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(producto.getlinea_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoConstantesFunciones.LABEL_IDLINEAGRUPO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoConstantesFunciones.LABEL_IDLINEAGRUPO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(producto.getlineagrupo_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoConstantesFunciones.LABEL_IDLINEACATEGORIA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoConstantesFunciones.LABEL_IDLINEACATEGORIA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(producto.getlineacategoria_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoConstantesFunciones.LABEL_IDLINEAMARCA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoConstantesFunciones.LABEL_IDLINEAMARCA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(producto.getlineamarca_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoConstantesFunciones.LABEL_IDTIPOPRODUCTOSERVICIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoConstantesFunciones.LABEL_IDTIPOPRODUCTOSERVICIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(producto.gettipoproductoservicio_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoConstantesFunciones.LABEL_IDTIPOPRODUCTOSERVICIOINVEN))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoConstantesFunciones.LABEL_IDTIPOPRODUCTOSERVICIOINVEN);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(producto.gettipoproductoservicioinven_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoConstantesFunciones.LABEL_IDTIPOCOSTEO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoConstantesFunciones.LABEL_IDTIPOCOSTEO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(producto.gettipocosteo_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoConstantesFunciones.LABEL_IDUNIDAD))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoConstantesFunciones.LABEL_IDUNIDAD);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(producto.getunidad_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoConstantesFunciones.LABEL_IDUNIDADPESO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoConstantesFunciones.LABEL_IDUNIDADPESO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(producto.getunidadpeso_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoConstantesFunciones.LABEL_IDARANCEL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoConstantesFunciones.LABEL_IDARANCEL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(producto.getarancel_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoConstantesFunciones.LABEL_IDCLIENTE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoConstantesFunciones.LABEL_IDCLIENTE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(producto.getcliente_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoConstantesFunciones.LABEL_IDCLIENTEPROVEEDORDEFECTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoConstantesFunciones.LABEL_IDCLIENTEPROVEEDORDEFECTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(producto.getclienteproveedordefecto_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoConstantesFunciones.LABEL_ESTAACTIVO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoConstantesFunciones.LABEL_ESTAACTIVO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(producto.getesta_activo()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoConstantesFunciones.LABEL_DESCRIPCION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoConstantesFunciones.LABEL_DESCRIPCION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(producto.getdescripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoConstantesFunciones.LABEL_PRECIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoConstantesFunciones.LABEL_PRECIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(producto.getprecio());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoConstantesFunciones.LABEL_IVA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoConstantesFunciones.LABEL_IVA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(producto.getiva());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoConstantesFunciones.LABEL_IVAVALOR))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoConstantesFunciones.LABEL_IVAVALOR);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(producto.getiva_valor());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoConstantesFunciones.LABEL_ICE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoConstantesFunciones.LABEL_ICE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(producto.getice());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoConstantesFunciones.LABEL_ICEVALOR))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoConstantesFunciones.LABEL_ICEVALOR);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(producto.getice_valor());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoConstantesFunciones.LABEL_DESCUENTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoConstantesFunciones.LABEL_DESCUENTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(producto.getdescuento());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoConstantesFunciones.LABEL_DESCUENTOVALOR))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoConstantesFunciones.LABEL_DESCUENTOVALOR);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(producto.getdescuento_valor());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoConstantesFunciones.LABEL_ARANCELPORCENTAJE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoConstantesFunciones.LABEL_ARANCELPORCENTAJE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(producto.getarancel_porcentaje());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoConstantesFunciones.LABEL_ARANCELVALOR))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoConstantesFunciones.LABEL_ARANCELVALOR);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(producto.getarancel_valor());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoConstantesFunciones.LABEL_COMISION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoConstantesFunciones.LABEL_COMISION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(producto.getcomision());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoConstantesFunciones.LABEL_COMISIONVALOR))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoConstantesFunciones.LABEL_COMISIONVALOR);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(producto.getcomision_valor());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoConstantesFunciones.LABEL_DIASPRODUCCION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoConstantesFunciones.LABEL_DIASPRODUCCION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(producto.getdias_produccion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoConstantesFunciones.LABEL_CONSTOCKNEGATIVO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoConstantesFunciones.LABEL_CONSTOCKNEGATIVO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(producto.getcon_stock_negativo()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoConstantesFunciones.LABEL_CONPRECIOMINIMO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoConstantesFunciones.LABEL_CONPRECIOMINIMO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(producto.getcon_precio_minimo()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoConstantesFunciones.LABEL_CONLOTE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoConstantesFunciones.LABEL_CONLOTE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(producto.getcon_lote()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoConstantesFunciones.LABEL_CONCONFIRMACION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoConstantesFunciones.LABEL_CONCONFIRMACION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(producto.getcon_confirmacion()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoConstantesFunciones.LABEL_CONPRESUPUESTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoConstantesFunciones.LABEL_CONPRESUPUESTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(producto.getcon_presupuesto()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoConstantesFunciones.LABEL_CONIMPORTACION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoConstantesFunciones.LABEL_CONIMPORTACION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(producto.getcon_importacion()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoConstantesFunciones.LABEL_CONFINAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoConstantesFunciones.LABEL_CONFINAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(producto.getcon_final()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoConstantesFunciones.LABEL_CONCONSEP))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoConstantesFunciones.LABEL_CONCONSEP);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(producto.getcon_consep()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoConstantesFunciones.LABEL_CONSERIE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoConstantesFunciones.LABEL_CONSERIE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(producto.getcon_serie()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoConstantesFunciones.LABEL_CONBALANZA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoConstantesFunciones.LABEL_CONBALANZA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(producto.getcon_balanza()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoConstantesFunciones.LABEL_ALTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoConstantesFunciones.LABEL_ALTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(producto.getalto());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoConstantesFunciones.LABEL_ANCHO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoConstantesFunciones.LABEL_ANCHO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(producto.getancho());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoConstantesFunciones.LABEL_LARGO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoConstantesFunciones.LABEL_LARGO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(producto.getlargo());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoConstantesFunciones.LABEL_VOLUMEN))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoConstantesFunciones.LABEL_VOLUMEN);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(producto.getvolumen());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoConstantesFunciones.LABEL_PESO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoConstantesFunciones.LABEL_PESO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(producto.getpeso());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoConstantesFunciones.LABEL_GRAMOS))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoConstantesFunciones.LABEL_GRAMOS);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(producto.getgramos());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoConstantesFunciones.LABEL_UNIDADESCAJA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoConstantesFunciones.LABEL_UNIDADESCAJA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(producto.getunidades_caja());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoConstantesFunciones.LABEL_MARGEN))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoConstantesFunciones.LABEL_MARGEN);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(producto.getmargen());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoConstantesFunciones.LABEL_FACTOR))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoConstantesFunciones.LABEL_FACTOR);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(producto.getfactor());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoConstantesFunciones.LABEL_FOB))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoConstantesFunciones.LABEL_FOB);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(producto.getfob());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoConstantesFunciones.LABEL_FOB2))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoConstantesFunciones.LABEL_FOB2);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(producto.getfob2());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoConstantesFunciones.LABEL_IDTIPOPRODUCTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoConstantesFunciones.LABEL_IDTIPOPRODUCTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(producto.gettipoproducto_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoConstantesFunciones.LABEL_IDCOLORPRODUCTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoConstantesFunciones.LABEL_IDCOLORPRODUCTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(producto.getcolorproducto_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoConstantesFunciones.LABEL_IDCLASEPRODUCTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoConstantesFunciones.LABEL_IDCLASEPRODUCTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(producto.getclaseproducto_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoConstantesFunciones.LABEL_IDEFECTOPRODUCTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoConstantesFunciones.LABEL_IDEFECTOPRODUCTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(producto.getefectoproducto_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoConstantesFunciones.LABEL_IDMARCAPRODUCTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoConstantesFunciones.LABEL_IDMARCAPRODUCTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(producto.getmarcaproducto_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoConstantesFunciones.LABEL_IDMODELOPRODUCTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoConstantesFunciones.LABEL_IDMODELOPRODUCTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(producto.getmodeloproducto_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoConstantesFunciones.LABEL_IDMATERIALPRODUCTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoConstantesFunciones.LABEL_IDMATERIALPRODUCTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(producto.getmaterialproducto_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoConstantesFunciones.LABEL_IDSEGMENTOPRODUCTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoConstantesFunciones.LABEL_IDSEGMENTOPRODUCTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(producto.getsegmentoproducto_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoConstantesFunciones.LABEL_IDTALLAPRODUCTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoConstantesFunciones.LABEL_IDTALLAPRODUCTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(producto.gettallaproducto_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoConstantesFunciones.LABEL_GRUPO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoConstantesFunciones.LABEL_GRUPO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(producto.getgrupo());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoConstantesFunciones.LABEL_REFERENCIA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoConstantesFunciones.LABEL_REFERENCIA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(producto.getreferencia());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoConstantesFunciones.LABEL_APLICACION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoConstantesFunciones.LABEL_APLICACION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(producto.getaplicacion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProductoConstantesFunciones.LABEL_PROCEDENCIA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProductoConstantesFunciones.LABEL_PROCEDENCIA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(producto.getprocedencia());


			}						
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.productoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Producto",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteRelacionesProductos(String sAccionBusqueda,String sTipoArchivoReporte,List<Producto> productosParaReportes,Boolean paraDinamico) throws Exception {
		
		ArrayList<Classe> classes=new ArrayList<Classe>();
		List<Producto> productosRespaldo=null;
		
		classes=ProductoConstantesFunciones.getClassesRelationshipsOfProducto(new ArrayList<Classe>(),DeepLoadType.NONE,false);
					
		this.datosDeep=new DatosDeep();
		
		this.datosDeep.setIsDeep(false);
		this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
		this.datosDeep.setClases(classes);
			
		this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
		this.datosCliente.setIsConDeep(true);	
		this.datosCliente.setIsConExportar(false);
		
						
		this.productoLogic.setDatosCliente(this.datosCliente);
		this.productoLogic.setDatosDeep(this.datosDeep);
		this.productoLogic.setIsConDeep(true);
		
		productosRespaldo=this.productoLogic.getProductos();
		
		this.productoLogic.setProductos(productosParaReportes);	
		this.productoLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
		
		productosParaReportes=this.productoLogic.getProductos();
		this.productoLogic.setProductos(productosRespaldo);
		
		
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"producto_relacion";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("Productos");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderProducto("NORMAL",row,workbook);
		
		int i=0;
		int i2=0;
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL");
		CellStyle cellStyleDataZebra = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux =null;
		CellStyle cellStyleDataAuxHijo =null;
		
		for(Producto producto : productosParaReportes) {			
			if(i!=0) {
				row = sheet.createRow(iRow++);				
				this.generarExcelReporteHeaderProducto("NORMAL",row,workbook);
			}
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				//cellStyleDataAux=cellStyleData;
			}
			
			row = sheet.createRow(iRow++);						
			ProductoConstantesFunciones.generarExcelReporteDataProducto("NORMAL",row,workbook,producto,cellStyleDataAux);
		
			
			


				//ProveedorProducto
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(ProveedorProductoConstantesFunciones.SCLASSWEBTITULO))) {

				if(producto.getProveedorProductos()!=null && producto.getProveedorProductos().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(ProveedorProductoConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					ProveedorProductoConstantesFunciones.generarExcelReporteHeaderProveedorProducto("RELACIONADO",row,workbook);
				}

				if(producto.getProveedorProductos()!=null) {
					i2=0;
					for(ProveedorProducto proveedorproducto : producto.getProveedorProductos()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						ProveedorProductoConstantesFunciones.generarExcelReporteDataProveedorProducto("RELACIONADO",row,workbook,proveedorproducto,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//Precio
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(PrecioConstantesFunciones.SCLASSWEBTITULO))) {

				if(producto.getPrecios()!=null && producto.getPrecios().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(PrecioConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					PrecioConstantesFunciones.generarExcelReporteHeaderPrecio("RELACIONADO",row,workbook);
				}

				if(producto.getPrecios()!=null) {
					i2=0;
					for(Precio precio : producto.getPrecios()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						PrecioConstantesFunciones.generarExcelReporteDataPrecio("RELACIONADO",row,workbook,precio,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//DetalleImpuestoInven
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(DetalleImpuestoInvenConstantesFunciones.SCLASSWEBTITULO))) {

				if(producto.getDetalleImpuestoInvens()!=null && producto.getDetalleImpuestoInvens().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(DetalleImpuestoInvenConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					DetalleImpuestoInvenConstantesFunciones.generarExcelReporteHeaderDetalleImpuestoInven("RELACIONADO",row,workbook);
				}

				if(producto.getDetalleImpuestoInvens()!=null) {
					i2=0;
					for(DetalleImpuestoInven detalleimpuestoinven : producto.getDetalleImpuestoInvens()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						DetalleImpuestoInvenConstantesFunciones.generarExcelReporteDataDetalleImpuestoInven("RELACIONADO",row,workbook,detalleimpuestoinven,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//PresupuestoVentas
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(PresupuestoVentasConstantesFunciones.SCLASSWEBTITULO))) {

				if(producto.getPresupuestoVentass()!=null && producto.getPresupuestoVentass().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(PresupuestoVentasConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					PresupuestoVentasConstantesFunciones.generarExcelReporteHeaderPresupuestoVentas("RELACIONADO",row,workbook);
				}

				if(producto.getPresupuestoVentass()!=null) {
					i2=0;
					for(PresupuestoVentas presupuestoventas : producto.getPresupuestoVentass()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						PresupuestoVentasConstantesFunciones.generarExcelReporteDataPresupuestoVentas("RELACIONADO",row,workbook,presupuestoventas,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//PoliticaProducto
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(PoliticaProductoConstantesFunciones.SCLASSWEBTITULO))) {

				if(producto.getPoliticaProductos()!=null && producto.getPoliticaProductos().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(PoliticaProductoConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					PoliticaProductoConstantesFunciones.generarExcelReporteHeaderPoliticaProducto("RELACIONADO",row,workbook);
				}

				if(producto.getPoliticaProductos()!=null) {
					i2=0;
					for(PoliticaProducto politicaproducto : producto.getPoliticaProductos()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						PoliticaProductoConstantesFunciones.generarExcelReporteDataPoliticaProducto("RELACIONADO",row,workbook,politicaproducto,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//SerieProducto
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(SerieProductoConstantesFunciones.SCLASSWEBTITULO))) {

				if(producto.getSerieProductos()!=null && producto.getSerieProductos().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(SerieProductoConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					SerieProductoConstantesFunciones.generarExcelReporteHeaderSerieProducto("RELACIONADO",row,workbook);
				}

				if(producto.getSerieProductos()!=null) {
					i2=0;
					for(SerieProducto serieproducto : producto.getSerieProductos()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						SerieProductoConstantesFunciones.generarExcelReporteDataSerieProducto("RELACIONADO",row,workbook,serieproducto,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//UbicacionProdu
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(UbicacionProduConstantesFunciones.SCLASSWEBTITULO))) {

				if(producto.getUbicacionProdus()!=null && producto.getUbicacionProdus().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(UbicacionProduConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					UbicacionProduConstantesFunciones.generarExcelReporteHeaderUbicacionProdu("RELACIONADO",row,workbook);
				}

				if(producto.getUbicacionProdus()!=null) {
					i2=0;
					for(UbicacionProdu ubicacionprodu : producto.getUbicacionProdus()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						UbicacionProduConstantesFunciones.generarExcelReporteDataUbicacionProdu("RELACIONADO",row,workbook,ubicacionprodu,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//ParametroProducto
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(ParametroProductoConstantesFunciones.SCLASSWEBTITULO))) {

				if(producto.getParametroProductos()!=null && producto.getParametroProductos().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(ParametroProductoConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					ParametroProductoConstantesFunciones.generarExcelReporteHeaderParametroProducto("RELACIONADO",row,workbook);
				}

				if(producto.getParametroProductos()!=null) {
					i2=0;
					for(ParametroProducto parametroproducto : producto.getParametroProductos()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						ParametroProductoConstantesFunciones.generarExcelReporteDataParametroProducto("RELACIONADO",row,workbook,parametroproducto,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//ProductoUnidad
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(ProductoUnidadConstantesFunciones.SCLASSWEBTITULO))) {

				if(producto.getProductoUnidads()!=null && producto.getProductoUnidads().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(ProductoUnidadConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					ProductoUnidadConstantesFunciones.generarExcelReporteHeaderProductoUnidad("RELACIONADO",row,workbook);
				}

				if(producto.getProductoUnidads()!=null) {
					i2=0;
					for(ProductoUnidad productounidad : producto.getProductoUnidads()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						ProductoUnidadConstantesFunciones.generarExcelReporteDataProductoUnidad("RELACIONADO",row,workbook,productounidad,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//Ingrediente
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(IngredienteConstantesFunciones.SCLASSWEBTITULO))) {

				if(producto.getIngredienteRelacions()!=null && producto.getIngredienteRelacions().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(IngredienteConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					IngredienteConstantesFunciones.generarExcelReporteHeaderIngrediente("RELACIONADO",row,workbook);
				}

				if(producto.getIngredienteRelacions()!=null) {
					i2=0;
					for(Ingrediente ingrediente : producto.getIngredienteRelacions()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						IngredienteConstantesFunciones.generarExcelReporteDataIngrediente("RELACIONADO",row,workbook,ingrediente,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//ProductoCarac
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(ProductoCaracConstantesFunciones.SCLASSWEBTITULO))) {

				if(producto.getProductoCaracs()!=null && producto.getProductoCaracs().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(ProductoCaracConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					ProductoCaracConstantesFunciones.generarExcelReporteHeaderProductoCarac("RELACIONADO",row,workbook);
				}

				if(producto.getProductoCaracs()!=null) {
					i2=0;
					for(ProductoCarac productocarac : producto.getProductoCaracs()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						ProductoCaracConstantesFunciones.generarExcelReporteDataProductoCarac("RELACIONADO",row,workbook,productocarac,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//ServicioCliente
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(ServicioClienteConstantesFunciones.SCLASSWEBTITULO))) {

				if(producto.getServicioClientes()!=null && producto.getServicioClientes().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(ServicioClienteConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					ServicioClienteConstantesFunciones.generarExcelReporteHeaderServicioCliente("RELACIONADO",row,workbook);
				}

				if(producto.getServicioClientes()!=null) {
					i2=0;
					for(ServicioCliente serviciocliente : producto.getServicioClientes()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						ServicioClienteConstantesFunciones.generarExcelReporteDataServicioCliente("RELACIONADO",row,workbook,serviciocliente,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//ProductoPromocion
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(ProductoPromocionConstantesFunciones.SCLASSWEBTITULO))) {

				if(producto.getProductoPromocionRelacions()!=null && producto.getProductoPromocionRelacions().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(ProductoPromocionConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					ProductoPromocionConstantesFunciones.generarExcelReporteHeaderProductoPromocion("RELACIONADO",row,workbook);
				}

				if(producto.getProductoPromocionRelacions()!=null) {
					i2=0;
					for(ProductoPromocion productopromocion : producto.getProductoPromocionRelacions()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						ProductoPromocionConstantesFunciones.generarExcelReporteDataProductoPromocion("RELACIONADO",row,workbook,productopromocion,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//ProductoEspeci
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(ProductoEspeciConstantesFunciones.SCLASSWEBTITULO))) {

				if(producto.getProductoEspecis()!=null && producto.getProductoEspecis().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(ProductoEspeciConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					ProductoEspeciConstantesFunciones.generarExcelReporteHeaderProductoEspeci("RELACIONADO",row,workbook);
				}

				if(producto.getProductoEspecis()!=null) {
					i2=0;
					for(ProductoEspeci productoespeci : producto.getProductoEspecis()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						ProductoEspeciConstantesFunciones.generarExcelReporteDataProductoEspeci("RELACIONADO",row,workbook,productoespeci,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//ProductoReempla
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(ProductoReemplaConstantesFunciones.SCLASSWEBTITULO))) {

				if(producto.getProductoReemplas()!=null && producto.getProductoReemplas().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(ProductoReemplaConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					ProductoReemplaConstantesFunciones.generarExcelReporteHeaderProductoReempla("RELACIONADO",row,workbook);
				}

				if(producto.getProductoReemplas()!=null) {
					i2=0;
					for(ProductoReempla productoreempla : producto.getProductoReemplas()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						ProductoReemplaConstantesFunciones.generarExcelReporteDataProductoReempla("RELACIONADO",row,workbook,productoreempla,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//ProductoEstadistica
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(ProductoEstadisticaConstantesFunciones.SCLASSWEBTITULO))) {

				if(producto.getProductoEstadisticas()!=null && producto.getProductoEstadisticas().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(ProductoEstadisticaConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					ProductoEstadisticaConstantesFunciones.generarExcelReporteHeaderProductoEstadistica("RELACIONADO",row,workbook);
				}

				if(producto.getProductoEstadisticas()!=null) {
					i2=0;
					for(ProductoEstadistica productoestadistica : producto.getProductoEstadisticas()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						ProductoEstadisticaConstantesFunciones.generarExcelReporteDataProductoEstadistica("RELACIONADO",row,workbook,productoestadistica,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//PoliticaFactu
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(PoliticaFactuConstantesFunciones.SCLASSWEBTITULO))) {

				if(producto.getPoliticaFactus()!=null && producto.getPoliticaFactus().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(PoliticaFactuConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					PoliticaFactuConstantesFunciones.generarExcelReporteHeaderPoliticaFactu("RELACIONADO",row,workbook);
				}

				if(producto.getPoliticaFactus()!=null) {
					i2=0;
					for(PoliticaFactu politicafactu : producto.getPoliticaFactus()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						PoliticaFactuConstantesFunciones.generarExcelReporteDataPoliticaFactu("RELACIONADO",row,workbook,politicafactu,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//ProductoCuentaContable
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(ProductoCuentaContableConstantesFunciones.SCLASSWEBTITULO))) {

				if(producto.getProductoCuentaContables()!=null && producto.getProductoCuentaContables().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(ProductoCuentaContableConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					ProductoCuentaContableConstantesFunciones.generarExcelReporteHeaderProductoCuentaContable("RELACIONADO",row,workbook);
				}

				if(producto.getProductoCuentaContables()!=null) {
					i2=0;
					for(ProductoCuentaContable productocuentacontable : producto.getProductoCuentaContables()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						ProductoCuentaContableConstantesFunciones.generarExcelReporteDataProductoCuentaContable("RELACIONADO",row,workbook,productocuentacontable,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//BodegaProducto
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(BodegaProductoConstantesFunciones.SCLASSWEBTITULO))) {

				if(producto.getBodegaProductos()!=null && producto.getBodegaProductos().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(BodegaProductoConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					BodegaProductoConstantesFunciones.generarExcelReporteHeaderBodegaProducto("RELACIONADO",row,workbook);
				}

				if(producto.getBodegaProductos()!=null) {
					i2=0;
					for(BodegaProducto bodegaproducto : producto.getBodegaProductos()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						BodegaProductoConstantesFunciones.generarExcelReporteDataBodegaProducto("RELACIONADO",row,workbook,bodegaproducto,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//PresupuestoProducto
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(PresupuestoProductoConstantesFunciones.SCLASSWEBTITULO))) {

				if(producto.getPresupuestoProductos()!=null && producto.getPresupuestoProductos().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(PresupuestoProductoConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					PresupuestoProductoConstantesFunciones.generarExcelReporteHeaderPresupuestoProducto("RELACIONADO",row,workbook);
				}

				if(producto.getPresupuestoProductos()!=null) {
					i2=0;
					for(PresupuestoProducto presupuestoproducto : producto.getPresupuestoProductos()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						PresupuestoProductoConstantesFunciones.generarExcelReporteDataPresupuestoProducto("RELACIONADO",row,workbook,presupuestoproducto,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//SaldoMesProducto
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(SaldoMesProductoConstantesFunciones.SCLASSWEBTITULO))) {

				if(producto.getSaldoMesProductos()!=null && producto.getSaldoMesProductos().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(SaldoMesProductoConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					SaldoMesProductoConstantesFunciones.generarExcelReporteHeaderSaldoMesProducto("RELACIONADO",row,workbook);
				}

				if(producto.getSaldoMesProductos()!=null) {
					i2=0;
					for(SaldoMesProducto saldomesproducto : producto.getSaldoMesProductos()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						SaldoMesProductoConstantesFunciones.generarExcelReporteDataSaldoMesProducto("RELACIONADO",row,workbook,saldomesproducto,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}
			
			i++;
        }
        
		/*
		row = sheet.createRow(iRow++);
		iRowLast=iRow - 1;
			
		cell = row.createCell(0);
		cell.setCellValue(ProductoConstantesFunciones.getProductoDescripcion(producto));
		cell.setCellStyle(cellStyleTitulo);
			
		sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
		*/
		
			
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.productoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Producto",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	
	public Boolean existeColumnaReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoProducto.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoProducto.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public Boolean existeRelacionReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoProducto.getjListRelacionesSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoProducto.getjListRelacionesSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public void startProcessProducto() throws Exception {		
		this.startProcessProducto(true);
	}
	
	public void startProcessProducto(Boolean conSplash) throws Exception {		
		//FuncionesSwing.enableDisablePanels(false,this.jTabbedPaneBusquedasProducto ,this.jPanelParametrosReportesProducto, this.jScrollPanelDatosProducto,this.jPanelPaginacionProducto, this.jScrollPanelDatosEdicionProducto, this.jPanelAccionesProducto,this.jPanelAccionesFormularioProducto,this.jmenuBarProducto,this.jmenuBarDetalleProducto,this.jTtoolBarProducto,this.jTtoolBarDetalleProducto);		
		
		final JTabbedPane jTabbedPaneBusquedasProducto=this.jTabbedPaneBusquedasProducto; 
		
		final JPanel jPanelParametrosReportesProducto=this.jPanelParametrosReportesProducto;
		//final JScrollPane jScrollPanelDatosProducto=this.jScrollPanelDatosProducto;
		final JTable jTableDatosProducto=this.jTableDatosProducto;		
		final JPanel jPanelPaginacionProducto=this.jPanelPaginacionProducto;
		//final JScrollPane jScrollPanelDatosEdicionProducto=this.jScrollPanelDatosEdicionProducto;
		final JPanel jPanelAccionesProducto=this.jPanelAccionesProducto;
		
		JPanel jPanelCamposAuxiliarProducto=new JPanelMe();
		JPanel jPanelAccionesFormularioAuxiliarProducto=new JPanelMe();
		
		if(this.jInternalFrameDetalleFormProducto!=null) {
			jPanelCamposAuxiliarProducto=this.jInternalFrameDetalleFormProducto.jPanelCamposProducto;
			jPanelAccionesFormularioAuxiliarProducto=this.jInternalFrameDetalleFormProducto.jPanelAccionesFormularioProducto;
		}
		
		final JPanel jPanelCamposProducto=jPanelCamposAuxiliarProducto;
		final JPanel jPanelAccionesFormularioProducto=jPanelAccionesFormularioAuxiliarProducto;
		
		
		final JMenuBar jmenuBarProducto=this.jmenuBarProducto;
		final JToolBar jTtoolBarProducto=this.jTtoolBarProducto;		
		
		
		JMenuBar jmenuBarDetalleAuxiliarProducto=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarProducto=new JToolBar();		
		
		if(this.jInternalFrameDetalleFormProducto!=null) {
			jmenuBarDetalleAuxiliarProducto=this.jInternalFrameDetalleFormProducto.jmenuBarDetalleProducto;
			jTtoolBarDetalleAuxiliarProducto=this.jInternalFrameDetalleFormProducto.jTtoolBarDetalleProducto;
		}
		
		final JMenuBar jmenuBarDetalleProducto=jmenuBarDetalleAuxiliarProducto;
		final JToolBar jTtoolBarDetalleProducto=jTtoolBarDetalleAuxiliarProducto;		
		
		
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("START");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasProducto;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesProducto;
			processRunnable.jTableDatos=jTableDatosProducto;
			processRunnable.jPanelCampos=jPanelCamposProducto;
			processRunnable.jPanelPaginacion=jPanelPaginacionProducto;
			processRunnable.jPanelAcciones=jPanelAccionesProducto;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioProducto;
			
			
			processRunnable.jmenuBar=jmenuBarProducto;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleProducto;
			processRunnable.jTtoolBar=jTtoolBarProducto;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleProducto;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasProducto ,jPanelParametrosReportesProducto,jTableDatosProducto, /*jScrollPanelDatosProducto,*/jPanelCamposProducto,jPanelPaginacionProducto, /*jScrollPanelDatosEdicionProducto,*/ jPanelAccionesProducto,jPanelAccionesFormularioProducto,jmenuBarProducto,jmenuBarDetalleProducto,jTtoolBarProducto,jTtoolBarDetalleProducto);
		
			startProcess();//this.
		}
						
		/*
		if(conSplash) {
			SwingUtilities.invokeLater(new Runnable() {
			      public void run() {
			    	  try {
							FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasProducto ,jPanelParametrosReportesProducto, jScrollPanelDatosProducto,jPanelPaginacionProducto, jScrollPanelDatosEdicionProducto, jPanelAccionesProducto,jPanelAccionesFormularioProducto,jmenuBarProducto,jmenuBarDetalleProducto,jTtoolBarProducto,jTtoolBarDetalleProducto);
						
							startProcess();//this.
							
						} catch (Exception e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
			      }
			});
		}
		*/
	}
	
	public void finishProcessProducto() {// throws Exception 
		this.finishProcessProducto(true);
	}
	
	public void finishProcessProducto(Boolean conSplash) {// throws Exception 
		//FuncionesSwing.enableDisablePanels(true,this.jTabbedPaneBusquedasProducto ,this.jPanelParametrosReportesProducto, this.jScrollPanelDatosProducto,this.jPanelPaginacionProducto, this.jScrollPanelDatosEdicionProducto, this.jPanelAccionesProducto,this.jPanelAccionesFormularioProducto,this.jmenuBarProducto,this.jmenuBarDetalleProducto,this.jTtoolBarProducto,this.jTtoolBarDetalleProducto);		
		
		final JTabbedPane jTabbedPaneBusquedasProducto=this.jTabbedPaneBusquedasProducto; 
		
		final JPanel jPanelParametrosReportesProducto=this.jPanelParametrosReportesProducto;
		//final JScrollPane jScrollPanelDatosProducto=this.jScrollPanelDatosProducto;
		final JTable jTableDatosProducto=this.jTableDatosProducto;		
		final JPanel jPanelPaginacionProducto=this.jPanelPaginacionProducto;
		//final JScrollPane jScrollPanelDatosEdicionProducto=this.jScrollPanelDatosEdicionProducto;
		final JPanel jPanelAccionesProducto=this.jPanelAccionesProducto;
		
		JPanel jPanelCamposAuxiliarProducto=new JPanel();
		JPanel jPanelAccionesFormularioAuxiliarProducto=new JPanel();
		
		if(this.jInternalFrameDetalleFormProducto!=null) {
			jPanelCamposAuxiliarProducto=this.jInternalFrameDetalleFormProducto.jPanelCamposProducto;
			jPanelAccionesFormularioAuxiliarProducto=this.jInternalFrameDetalleFormProducto.jPanelAccionesFormularioProducto;
		}
		
		final JPanel jPanelCamposProducto=jPanelCamposAuxiliarProducto;
		final JPanel jPanelAccionesFormularioProducto=jPanelAccionesFormularioAuxiliarProducto;
		
		
		final JMenuBar jmenuBarProducto=this.jmenuBarProducto;		
		final JToolBar jTtoolBarProducto=this.jTtoolBarProducto;
				
		JMenuBar jmenuBarDetalleAuxiliarProducto=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarProducto=new JToolBar();
		
		if(this.jInternalFrameDetalleFormProducto!=null) {
			jmenuBarDetalleAuxiliarProducto=this.jInternalFrameDetalleFormProducto.jmenuBarDetalleProducto;
			jTtoolBarDetalleAuxiliarProducto=this.jInternalFrameDetalleFormProducto.jTtoolBarDetalleProducto;		
		}
		
		final JMenuBar jmenuBarDetalleProducto=jmenuBarDetalleAuxiliarProducto;
		final JToolBar jTtoolBarDetalleProducto=jTtoolBarDetalleAuxiliarProducto;
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("END");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasProducto;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesProducto;
			processRunnable.jTableDatos=jTableDatosProducto;
			processRunnable.jPanelCampos=jPanelCamposProducto;
			processRunnable.jPanelPaginacion=jPanelPaginacionProducto;
			processRunnable.jPanelAcciones=jPanelAccionesProducto;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioProducto;
			
			
			processRunnable.jmenuBar=jmenuBarProducto;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleProducto;
			processRunnable.jTtoolBar=jTtoolBarProducto;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleProducto;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			if(conSplash) {
				SwingUtilities.invokeLater(new RunnableProceso(true,this,jTabbedPaneBusquedasProducto ,jPanelParametrosReportesProducto, jTableDatosProducto,/*jScrollPanelDatosProducto,*/jPanelCamposProducto,jPanelPaginacionProducto, /*jScrollPanelDatosEdicionProducto,*/ jPanelAccionesProducto,jPanelAccionesFormularioProducto,jmenuBarProducto,jmenuBarDetalleProducto,jTtoolBarProducto,jTtoolBarDetalleProducto));
			}
		}						
	}
	
	/*
	public void habilitarDeshabilitarControlesProducto(Boolean esHabilitar,Boolean conDetalle) {
		this.habilitarDeshabilitarToolBarProducto(esHabilitar,conDetalle);
		this.habilitarDeshabilitarMenuProducto(esHabilitar,conDetalle);
	}
	
	public void habilitarDeshabilitarToolBarProducto(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jTtoolBarProducto,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jTtoolBarDetalleProducto,esHabilitar,1,1);
		}
	}
	
	public void habilitarDeshabilitarMenuProducto(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jmenuBarProducto,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jmenuBarDetalleProducto,esHabilitar,1,1);
		}
	}
	*/
	
	
	
	public void procesarBusqueda(String sAccionBusqueda) throws Exception {		
		String  finalQueryPaginacion=this.productoConstantesFunciones.getsFinalQueryProducto();
		String  finalQueryPaginacionTodos=this.productoConstantesFunciones.getsFinalQueryProducto();
		
		Boolean esBusqueda=false;
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!sAccionBusqueda.equals("Todos"))	{
			esBusqueda=true;
		}
		
		this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
		this.arrDatoGeneralNo= new  ArrayList<String>();
		
		ArrayList<String> arrColumnasGlobalesNo=ProductoConstantesFunciones.getArrayColumnasGlobalesNoProducto(this.arrDatoGeneral);
		ArrayList<String> arrColumnasGlobales=ProductoConstantesFunciones.getArrayColumnasGlobalesProducto(this.arrDatoGeneral,arrColumnasGlobalesNo);
		
			
		String  finalQueryGlobal="";
		
		finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,!esBusqueda,esBusqueda,arrColumnasGlobales,ProductoConstantesFunciones.TABLENAME);
		
		String sOrderBy="";
		
		
		sOrderBy=Funciones2.getFinalQueryOrderBy(this.arrOrderBy);
		
		
		if(!sOrderBy.equals("")) {			
			finalQueryPaginacion=sOrderBy;
			finalQueryPaginacionTodos=sOrderBy;
		}
		
		
		//INICIALIZA ELIMINADOS
		this.productosEliminados= new ArrayList<Producto>();
		
		if(!this.isEntroOnLoad) {
			this.onLoad();
		}/* else {
			this.isEntroOnLoad=false;
		}*/
		
		
		
				
		try	{		
			
			//this.startProcessProducto();
		
				///*ProductoSessionBean*/this.productoSessionBean=new ProductoSessionBean();
			
			if(this.productoSessionBean==null) {
				this.productoSessionBean=new ProductoSessionBean();
			}
			
			//ACTUALIZA EL TAMANIO DE PAGINACION DESDE EL COMBO
			if(this.sTipoPaginacion!=null && !this.sTipoPaginacion.equals("")) {
				if(!this.sTipoPaginacion.equals("TODOS")) {
					this.iNumeroPaginacion=Integer.parseInt(this.sTipoPaginacion);
				} else {
					this.iNumeroPaginacion=-1;
					this.iNumeroPaginacionPagina=-1;
				}
			} else {
				if(this.iNumeroPaginacion==null || (this.iNumeroPaginacion!=null && this.iNumeroPaginacion<=0)) {
					this.iNumeroPaginacion=ProductoConstantesFunciones.INUMEROPAGINACION;
				}
			}
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);
			
			this.cargarDatosCliente();
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			classes=ProductoConstantesFunciones.getClassesForeignKeysOfProducto(new ArrayList<Classe>(),DeepLoadType.NONE);
			
		
			this.datosDeep=new DatosDeep();
			this.datosDeep.setIsDeep(false);
			this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
			this.datosDeep.setClases(classes);
			
			this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
			this.datosCliente.setIsConDeep(true);
			
			if(false) {//this.conExportar
				this.datosCliente.setIsConExportar(true);
				this.datosCliente.setDatosExportarParametros(Funciones2.getTipoExportar(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getcon_exportar_cabecera(),Funciones2.getTipoDelimiter(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getpath_exportar()+"/producto."+Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario));
			} else {
				this.datosCliente.setIsConExportar(false);
			}
			
			productosAux= new ArrayList<Producto>();
			
				
			productoLogic.setDatosCliente(this.datosCliente);
			productoLogic.setDatosDeep(this.datosDeep);
			productoLogic.setIsConDeep(true);
			
			
			productoLogic.getProductoDataAccess().setIsForForeingsKeysDataRelationships(true);
			
			if(sAccionBusqueda.equals("Todos") || sAccionBusqueda.equals("Query"))	{	
				if(sAccionBusqueda.equals("Todos")) {
					//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
					//this.sFinalQueryGeneral="";
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacionTodos );
					
					productoLogic.getTodosProductos(finalQueryGlobal,pagination);
					
					//productoLogic.getTodosProductosWithConnection(finalQueryGlobal,pagination);										
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
				
				if(productoLogic.getProductos()==null|| productoLogic.getProductos().size()==0)	{
					
				
				}
				
				if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(-1);
						this.pagination.setiMaxResults(-1);
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							productosAux= new ArrayList<Producto>();
							productosAux.addAll(productoLogic.getProductos());						
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							productosAux= new ArrayList<Producto>();
							productosAux.addAll(productos);
						}
						//ARCHITECTURE
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							productoLogic.getTodosProductos(finalQueryGlobal+"",this.pagination);												
							
							//productoLogic.getTodosProductosWithConnection(finalQueryGlobal+"",this.pagination);												
						} else if(Constantes.ISUSAEJBREMOTE) {
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
					}
					
					this.generarReporteProductos("Todos",productoLogic.getProductos() );
					
					if(false) {//isMostrarTodosResultadosReporte						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							productoLogic.setProductos(new ArrayList<Producto>());					
							productoLogic.getProductos().addAll(productosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							productos=new ArrayList<Producto>();
							productos.addAll(productosAux);
						}
						//ARCHITECTURE
						
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);														
					}
				}
			}
			else if(sAccionBusqueda.equals("PorId")) {
				Long idProducto=0L;
				
				if(this.idActual!=null && this.idActual!=0L) {
					idProducto=this.idActual;
				
				} else if(this.idProductoActual!=null && this.idProductoActual!=0L) {
					idProducto=idProductoActual;
				}
				
					
				this.sDetalleReporte=ProductoConstantesFunciones.getDetalleIndicePorId(idProducto);
				
				this.productos=new ArrayList<Producto>();
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {					
					productoLogic.getEntity(idProducto);
					
					//productoLogic.getEntityWithConnection(idProducto);
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
								
				if(Constantes.ISUSAEJBLOGICLAYER) {
					productoLogic.setProductos(new ArrayList<Producto>());
					productoLogic.getProductos().add(productoLogic.getProducto());
				
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.productos=new ArrayList<Producto>();
					this.productos.add(producto);
				}
				
				if(productoLogic.getProducto()==null)	{
					
				
				}			
			}
			
		
			else if(sAccionBusqueda.equals("BusquedaPorCodigo")) {
				this.sDetalleReporte=ProductoConstantesFunciones.getDetalleIndiceBusquedaPorCodigo(codigoBusquedaPorCodigo);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					productoLogic.getProductosBusquedaPorCodigo(finalQueryGlobal,pagination,codigoBusquedaPorCodigo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ProductoConstantesFunciones.getDetalleIndiceBusquedaPorCodigo(codigoBusquedaPorCodigo);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ProductoConstantesFunciones.getDetalleIndiceBusquedaPorCodigo(codigoBusquedaPorCodigo);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=productoLogic.getProductos()==null||productoLogic.getProductos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=productos==null|| productos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						productosAux=new ArrayList<Producto>();
						productosAux.addAll(productoLogic.getProductos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							productosAux=new ArrayList<Producto>();
							productosAux.addAll(productos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							productoLogic.getProductosBusquedaPorCodigo(finalQueryGlobal,pagination,codigoBusquedaPorCodigo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ProductoConstantesFunciones.getDetalleIndiceBusquedaPorCodigo(codigoBusquedaPorCodigo);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ProductoConstantesFunciones.getDetalleIndiceBusquedaPorCodigo(codigoBusquedaPorCodigo);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteProductos("BusquedaPorCodigo",productoLogic.getProductos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteProductos("BusquedaPorCodigo",productos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						productoLogic.setProductos(new ArrayList<Producto>());
						productoLogic.getProductos().addAll(productosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							productos=new ArrayList<Producto>();
							productos.addAll(productosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("BusquedaPorNombre")) {
				this.sDetalleReporte=ProductoConstantesFunciones.getDetalleIndiceBusquedaPorNombre(nombreBusquedaPorNombre);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					productoLogic.getProductosBusquedaPorNombre(finalQueryGlobal,pagination,nombreBusquedaPorNombre);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ProductoConstantesFunciones.getDetalleIndiceBusquedaPorNombre(nombreBusquedaPorNombre);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ProductoConstantesFunciones.getDetalleIndiceBusquedaPorNombre(nombreBusquedaPorNombre);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=productoLogic.getProductos()==null||productoLogic.getProductos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=productos==null|| productos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						productosAux=new ArrayList<Producto>();
						productosAux.addAll(productoLogic.getProductos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							productosAux=new ArrayList<Producto>();
							productosAux.addAll(productos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							productoLogic.getProductosBusquedaPorNombre(finalQueryGlobal,pagination,nombreBusquedaPorNombre);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ProductoConstantesFunciones.getDetalleIndiceBusquedaPorNombre(nombreBusquedaPorNombre);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ProductoConstantesFunciones.getDetalleIndiceBusquedaPorNombre(nombreBusquedaPorNombre);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteProductos("BusquedaPorNombre",productoLogic.getProductos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteProductos("BusquedaPorNombre",productos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						productoLogic.setProductos(new ArrayList<Producto>());
						productoLogic.getProductos().addAll(productosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							productos=new ArrayList<Producto>();
							productos.addAll(productosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdClaseProducto")) {
				this.sDetalleReporte=ProductoConstantesFunciones.getDetalleIndiceFK_IdClaseProducto(id_clase_productoFK_IdClaseProducto);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					productoLogic.getProductosFK_IdClaseProducto(finalQueryGlobal,pagination,id_clase_productoFK_IdClaseProducto);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ProductoConstantesFunciones.getDetalleIndiceFK_IdClaseProducto(id_clase_productoFK_IdClaseProducto);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ProductoConstantesFunciones.getDetalleIndiceFK_IdClaseProducto(id_clase_productoFK_IdClaseProducto);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=productoLogic.getProductos()==null||productoLogic.getProductos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=productos==null|| productos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						productosAux=new ArrayList<Producto>();
						productosAux.addAll(productoLogic.getProductos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							productosAux=new ArrayList<Producto>();
							productosAux.addAll(productos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							productoLogic.getProductosFK_IdClaseProducto(finalQueryGlobal,pagination,id_clase_productoFK_IdClaseProducto);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ProductoConstantesFunciones.getDetalleIndiceFK_IdClaseProducto(id_clase_productoFK_IdClaseProducto);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ProductoConstantesFunciones.getDetalleIndiceFK_IdClaseProducto(id_clase_productoFK_IdClaseProducto);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteProductos("FK_IdClaseProducto",productoLogic.getProductos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteProductos("FK_IdClaseProducto",productos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						productoLogic.setProductos(new ArrayList<Producto>());
						productoLogic.getProductos().addAll(productosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							productos=new ArrayList<Producto>();
							productos.addAll(productosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdCliente")) {
				this.sDetalleReporte=ProductoConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					productoLogic.getProductosFK_IdCliente(finalQueryGlobal,pagination,id_clienteFK_IdCliente);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ProductoConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ProductoConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=productoLogic.getProductos()==null||productoLogic.getProductos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=productos==null|| productos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						productosAux=new ArrayList<Producto>();
						productosAux.addAll(productoLogic.getProductos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							productosAux=new ArrayList<Producto>();
							productosAux.addAll(productos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							productoLogic.getProductosFK_IdCliente(finalQueryGlobal,pagination,id_clienteFK_IdCliente);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ProductoConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ProductoConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteProductos("FK_IdCliente",productoLogic.getProductos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteProductos("FK_IdCliente",productos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						productoLogic.setProductos(new ArrayList<Producto>());
						productoLogic.getProductos().addAll(productosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							productos=new ArrayList<Producto>();
							productos.addAll(productosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdClienteProveedorDefecto")) {
				this.sDetalleReporte=ProductoConstantesFunciones.getDetalleIndiceFK_IdClienteProveedorDefecto(id_cliente_proveedor_defectoFK_IdClienteProveedorDefecto);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					productoLogic.getProductosFK_IdClienteProveedorDefecto(finalQueryGlobal,pagination,id_cliente_proveedor_defectoFK_IdClienteProveedorDefecto);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ProductoConstantesFunciones.getDetalleIndiceFK_IdClienteProveedorDefecto(id_cliente_proveedor_defectoFK_IdClienteProveedorDefecto);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ProductoConstantesFunciones.getDetalleIndiceFK_IdClienteProveedorDefecto(id_cliente_proveedor_defectoFK_IdClienteProveedorDefecto);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=productoLogic.getProductos()==null||productoLogic.getProductos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=productos==null|| productos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						productosAux=new ArrayList<Producto>();
						productosAux.addAll(productoLogic.getProductos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							productosAux=new ArrayList<Producto>();
							productosAux.addAll(productos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							productoLogic.getProductosFK_IdClienteProveedorDefecto(finalQueryGlobal,pagination,id_cliente_proveedor_defectoFK_IdClienteProveedorDefecto);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ProductoConstantesFunciones.getDetalleIndiceFK_IdClienteProveedorDefecto(id_cliente_proveedor_defectoFK_IdClienteProveedorDefecto);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ProductoConstantesFunciones.getDetalleIndiceFK_IdClienteProveedorDefecto(id_cliente_proveedor_defectoFK_IdClienteProveedorDefecto);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteProductos("FK_IdClienteProveedorDefecto",productoLogic.getProductos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteProductos("FK_IdClienteProveedorDefecto",productos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						productoLogic.setProductos(new ArrayList<Producto>());
						productoLogic.getProductos().addAll(productosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							productos=new ArrayList<Producto>();
							productos.addAll(productosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEmpresa")) {
				this.sDetalleReporte=ProductoConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					productoLogic.getProductosFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ProductoConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ProductoConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=productoLogic.getProductos()==null||productoLogic.getProductos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=productos==null|| productos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						productosAux=new ArrayList<Producto>();
						productosAux.addAll(productoLogic.getProductos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							productosAux=new ArrayList<Producto>();
							productosAux.addAll(productos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							productoLogic.getProductosFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ProductoConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ProductoConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteProductos("FK_IdEmpresa",productoLogic.getProductos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteProductos("FK_IdEmpresa",productos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						productoLogic.setProductos(new ArrayList<Producto>());
						productoLogic.getProductos().addAll(productosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							productos=new ArrayList<Producto>();
							productos.addAll(productosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdLinea")) {
				this.sDetalleReporte=ProductoConstantesFunciones.getDetalleIndiceFK_IdLinea(id_lineaFK_IdLinea);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					productoLogic.getProductosFK_IdLinea(finalQueryGlobal,pagination,id_lineaFK_IdLinea);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ProductoConstantesFunciones.getDetalleIndiceFK_IdLinea(id_lineaFK_IdLinea);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ProductoConstantesFunciones.getDetalleIndiceFK_IdLinea(id_lineaFK_IdLinea);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=productoLogic.getProductos()==null||productoLogic.getProductos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=productos==null|| productos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						productosAux=new ArrayList<Producto>();
						productosAux.addAll(productoLogic.getProductos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							productosAux=new ArrayList<Producto>();
							productosAux.addAll(productos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							productoLogic.getProductosFK_IdLinea(finalQueryGlobal,pagination,id_lineaFK_IdLinea);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ProductoConstantesFunciones.getDetalleIndiceFK_IdLinea(id_lineaFK_IdLinea);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ProductoConstantesFunciones.getDetalleIndiceFK_IdLinea(id_lineaFK_IdLinea);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteProductos("FK_IdLinea",productoLogic.getProductos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteProductos("FK_IdLinea",productos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						productoLogic.setProductos(new ArrayList<Producto>());
						productoLogic.getProductos().addAll(productosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							productos=new ArrayList<Producto>();
							productos.addAll(productosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdMarcaProducto")) {
				this.sDetalleReporte=ProductoConstantesFunciones.getDetalleIndiceFK_IdMarcaProducto(id_marca_productoFK_IdMarcaProducto);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					productoLogic.getProductosFK_IdMarcaProducto(finalQueryGlobal,pagination,id_marca_productoFK_IdMarcaProducto);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ProductoConstantesFunciones.getDetalleIndiceFK_IdMarcaProducto(id_marca_productoFK_IdMarcaProducto);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ProductoConstantesFunciones.getDetalleIndiceFK_IdMarcaProducto(id_marca_productoFK_IdMarcaProducto);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=productoLogic.getProductos()==null||productoLogic.getProductos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=productos==null|| productos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						productosAux=new ArrayList<Producto>();
						productosAux.addAll(productoLogic.getProductos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							productosAux=new ArrayList<Producto>();
							productosAux.addAll(productos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							productoLogic.getProductosFK_IdMarcaProducto(finalQueryGlobal,pagination,id_marca_productoFK_IdMarcaProducto);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ProductoConstantesFunciones.getDetalleIndiceFK_IdMarcaProducto(id_marca_productoFK_IdMarcaProducto);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ProductoConstantesFunciones.getDetalleIndiceFK_IdMarcaProducto(id_marca_productoFK_IdMarcaProducto);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteProductos("FK_IdMarcaProducto",productoLogic.getProductos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteProductos("FK_IdMarcaProducto",productos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						productoLogic.setProductos(new ArrayList<Producto>());
						productoLogic.getProductos().addAll(productosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							productos=new ArrayList<Producto>();
							productos.addAll(productosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdModeloProducto")) {
				this.sDetalleReporte=ProductoConstantesFunciones.getDetalleIndiceFK_IdModeloProducto(id_modelo_productoFK_IdModeloProducto);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					productoLogic.getProductosFK_IdModeloProducto(finalQueryGlobal,pagination,id_modelo_productoFK_IdModeloProducto);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ProductoConstantesFunciones.getDetalleIndiceFK_IdModeloProducto(id_modelo_productoFK_IdModeloProducto);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ProductoConstantesFunciones.getDetalleIndiceFK_IdModeloProducto(id_modelo_productoFK_IdModeloProducto);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=productoLogic.getProductos()==null||productoLogic.getProductos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=productos==null|| productos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						productosAux=new ArrayList<Producto>();
						productosAux.addAll(productoLogic.getProductos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							productosAux=new ArrayList<Producto>();
							productosAux.addAll(productos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							productoLogic.getProductosFK_IdModeloProducto(finalQueryGlobal,pagination,id_modelo_productoFK_IdModeloProducto);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ProductoConstantesFunciones.getDetalleIndiceFK_IdModeloProducto(id_modelo_productoFK_IdModeloProducto);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ProductoConstantesFunciones.getDetalleIndiceFK_IdModeloProducto(id_modelo_productoFK_IdModeloProducto);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteProductos("FK_IdModeloProducto",productoLogic.getProductos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteProductos("FK_IdModeloProducto",productos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						productoLogic.setProductos(new ArrayList<Producto>());
						productoLogic.getProductos().addAll(productosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							productos=new ArrayList<Producto>();
							productos.addAll(productosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdSucursal")) {
				this.sDetalleReporte=ProductoConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					productoLogic.getProductosFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ProductoConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ProductoConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=productoLogic.getProductos()==null||productoLogic.getProductos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=productos==null|| productos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						productosAux=new ArrayList<Producto>();
						productosAux.addAll(productoLogic.getProductos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							productosAux=new ArrayList<Producto>();
							productosAux.addAll(productos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							productoLogic.getProductosFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ProductoConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ProductoConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteProductos("FK_IdSucursal",productoLogic.getProductos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteProductos("FK_IdSucursal",productos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						productoLogic.setProductos(new ArrayList<Producto>());
						productoLogic.getProductos().addAll(productosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							productos=new ArrayList<Producto>();
							productos.addAll(productosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoProducto")) {
				this.sDetalleReporte=ProductoConstantesFunciones.getDetalleIndiceFK_IdTipoProducto(id_tipo_productoFK_IdTipoProducto);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					productoLogic.getProductosFK_IdTipoProducto(finalQueryGlobal,pagination,id_tipo_productoFK_IdTipoProducto);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ProductoConstantesFunciones.getDetalleIndiceFK_IdTipoProducto(id_tipo_productoFK_IdTipoProducto);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ProductoConstantesFunciones.getDetalleIndiceFK_IdTipoProducto(id_tipo_productoFK_IdTipoProducto);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=productoLogic.getProductos()==null||productoLogic.getProductos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=productos==null|| productos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						productosAux=new ArrayList<Producto>();
						productosAux.addAll(productoLogic.getProductos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							productosAux=new ArrayList<Producto>();
							productosAux.addAll(productos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							productoLogic.getProductosFK_IdTipoProducto(finalQueryGlobal,pagination,id_tipo_productoFK_IdTipoProducto);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ProductoConstantesFunciones.getDetalleIndiceFK_IdTipoProducto(id_tipo_productoFK_IdTipoProducto);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ProductoConstantesFunciones.getDetalleIndiceFK_IdTipoProducto(id_tipo_productoFK_IdTipoProducto);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteProductos("FK_IdTipoProducto",productoLogic.getProductos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteProductos("FK_IdTipoProducto",productos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						productoLogic.setProductos(new ArrayList<Producto>());
						productoLogic.getProductos().addAll(productosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							productos=new ArrayList<Producto>();
							productos.addAll(productosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoProductoServicio")) {
				this.sDetalleReporte=ProductoConstantesFunciones.getDetalleIndiceFK_IdTipoProductoServicio(id_tipo_producto_servicioFK_IdTipoProductoServicio);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					productoLogic.getProductosFK_IdTipoProductoServicio(finalQueryGlobal,pagination,id_tipo_producto_servicioFK_IdTipoProductoServicio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ProductoConstantesFunciones.getDetalleIndiceFK_IdTipoProductoServicio(id_tipo_producto_servicioFK_IdTipoProductoServicio);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ProductoConstantesFunciones.getDetalleIndiceFK_IdTipoProductoServicio(id_tipo_producto_servicioFK_IdTipoProductoServicio);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=productoLogic.getProductos()==null||productoLogic.getProductos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=productos==null|| productos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						productosAux=new ArrayList<Producto>();
						productosAux.addAll(productoLogic.getProductos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							productosAux=new ArrayList<Producto>();
							productosAux.addAll(productos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							productoLogic.getProductosFK_IdTipoProductoServicio(finalQueryGlobal,pagination,id_tipo_producto_servicioFK_IdTipoProductoServicio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ProductoConstantesFunciones.getDetalleIndiceFK_IdTipoProductoServicio(id_tipo_producto_servicioFK_IdTipoProductoServicio);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ProductoConstantesFunciones.getDetalleIndiceFK_IdTipoProductoServicio(id_tipo_producto_servicioFK_IdTipoProductoServicio);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteProductos("FK_IdTipoProductoServicio",productoLogic.getProductos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteProductos("FK_IdTipoProductoServicio",productos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						productoLogic.setProductos(new ArrayList<Producto>());
						productoLogic.getProductos().addAll(productosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							productos=new ArrayList<Producto>();
							productos.addAll(productosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoProductoServicioInven")) {
				this.sDetalleReporte=ProductoConstantesFunciones.getDetalleIndiceFK_IdTipoProductoServicioInven(id_tipo_producto_servicio_invenFK_IdTipoProductoServicioInven);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					productoLogic.getProductosFK_IdTipoProductoServicioInven(finalQueryGlobal,pagination,id_tipo_producto_servicio_invenFK_IdTipoProductoServicioInven);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ProductoConstantesFunciones.getDetalleIndiceFK_IdTipoProductoServicioInven(id_tipo_producto_servicio_invenFK_IdTipoProductoServicioInven);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ProductoConstantesFunciones.getDetalleIndiceFK_IdTipoProductoServicioInven(id_tipo_producto_servicio_invenFK_IdTipoProductoServicioInven);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=productoLogic.getProductos()==null||productoLogic.getProductos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=productos==null|| productos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						productosAux=new ArrayList<Producto>();
						productosAux.addAll(productoLogic.getProductos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							productosAux=new ArrayList<Producto>();
							productosAux.addAll(productos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							productoLogic.getProductosFK_IdTipoProductoServicioInven(finalQueryGlobal,pagination,id_tipo_producto_servicio_invenFK_IdTipoProductoServicioInven);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ProductoConstantesFunciones.getDetalleIndiceFK_IdTipoProductoServicioInven(id_tipo_producto_servicio_invenFK_IdTipoProductoServicioInven);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ProductoConstantesFunciones.getDetalleIndiceFK_IdTipoProductoServicioInven(id_tipo_producto_servicio_invenFK_IdTipoProductoServicioInven);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteProductos("FK_IdTipoProductoServicioInven",productoLogic.getProductos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteProductos("FK_IdTipoProductoServicioInven",productos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						productoLogic.setProductos(new ArrayList<Producto>());
						productoLogic.getProductos().addAll(productosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							productos=new ArrayList<Producto>();
							productos.addAll(productosAux);
						}
						//ARCHITECTURE
					}
				}

			} 
		
		
		
		this.redimensionarTablaDatos();
		//this.refrescarForeignKeysDescripcionesProducto();
		
		
		if(this.conTotales) {
			this.crearFilaTotales();
		}		
		} catch (JRException e) {
			throw e;
		} catch(Exception e) {
			throw e;
      	} finally {
      		//this.finishProcessProducto();
      	}
		
	}				
	
	public void redimensionarTablaDatos() throws Exception {
		int iSizeTabla=0;
				
		iSizeTabla=this.getSizeTablaDatos();
		
		//ARCHITECTURE
		/*
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=productoLogic.getProductos().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=productos.size();
		}
		*/
		//ARCHITECTURE
											
		this.redimensionarTablaDatos(iSizeTabla);		
	}
	
	public Integer getSizeTablaDatos() throws Exception {
		Integer iSizeTabla=0;
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=productoLogic.getProductos().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=productos.size();
		}
		//ARCHITECTURE
											
		return iSizeTabla;		
	}
	
			
	public Boolean permiteMantenimiento(Producto producto) {
		Boolean permite=true;
		
		if(this.producto.getsType().equals(Constantes2.S_TOTALES)) {
			permite=false;
		}
		
		return permite;
	}
	
	public void traerValoresTablaTotales() throws Exception {
	}
	
	
	public void traerValoresTablaOrderBy() throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.arrOrderBy=ProductoConstantesFunciones.getOrderByListaProducto();							
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.arrOrderBy=ProductoConstantesFunciones.getOrderByListaProducto();
		}		
	}
	
	
	public Boolean existeFilaTotales() throws Exception {
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(Producto producto:productoLogic.getProductos()) {
				if(producto.getsType().equals(Constantes2.S_TOTALES)) {
					productoTotales=producto;
					existe=true;
					break;
				}
			}
								
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(Producto producto:this.productos) {
				if(producto.getsType().equals(Constantes2.S_TOTALES)) {
					productoTotales=producto;
					existe=true;
					break;
				}
			}
		}
		
		return existe;
	}
	
	public void crearFilaTotales() throws Exception {
		Boolean existe=false;
		
		existe=this.existeFilaTotales();
		
		if(!existe) {
			//SI NO ES UNO A UNO SE CREA FILA TOTALES
			this.productoAux=new Producto();
			this.productoAux.setsType(Constantes2.S_TOTALES);
			this.productoAux.setIsNew(false);
			this.productoAux.setIsChanged(false);
			this.productoAux.setIsDeleted(false);
				
			if(Constantes.ISUSAEJBLOGICLAYER) {
				ProductoConstantesFunciones.TotalizarValoresFilaProducto(this.productoLogic.getProductos(),this.productoAux);
				
				this.productoLogic.getProductos().add(this.productoAux);
				
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				ProductoConstantesFunciones.TotalizarValoresFilaProducto(this.productos,this.productoAux);
				
				this.productos.add(this.productoAux);
			}
		}
	}
	
	public void quitarFilaTotales() throws Exception {
		productoTotales=new Producto();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.productoLogic.getProductos().remove(productoTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.productos.remove(productoTotales);
			}
		}
	}
	
	public void actualizarFilaTotales() throws Exception {
		productoTotales=new Producto();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(Producto producto:productoLogic.getProductos()) {
				if(producto.getsType().equals(Constantes2.S_TOTALES)) {
					productoTotales=producto;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				ProductoConstantesFunciones.TotalizarValoresFilaProducto(this.productoLogic.getProductos(),productoTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(Producto producto:this.productos) {
				if(producto.getsType().equals(Constantes2.S_TOTALES)) {
					productoTotales=producto;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				ProductoConstantesFunciones.TotalizarValoresFilaProducto(this.productos,productoTotales);
			}
		}
	}		
	
	public void recargarInformacion()throws Exception {
		try {
			sAccionBusqueda="Todos";
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
		}	
	}		
	
	
	public void getProductosBusquedaPorCodigo()throws Exception {
		try {
			sAccionBusqueda="BusquedaPorCodigo";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getProductosBusquedaPorNombre()throws Exception {
		try {
			sAccionBusqueda="BusquedaPorNombre";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getProductosBusquedaPorNombreExtranjero()throws Exception {
		try {
			sAccionBusqueda="BusquedaPorNombreExtranjero";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getProductosFK_IdArancel()throws Exception {
		try {
			sAccionBusqueda="FK_IdArancel";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getProductosFK_IdClaseProducto()throws Exception {
		try {
			sAccionBusqueda="FK_IdClaseProducto";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getProductosFK_IdCliente()throws Exception {
		try {
			sAccionBusqueda="FK_IdCliente";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getProductosFK_IdClienteProveedorDefecto()throws Exception {
		try {
			sAccionBusqueda="FK_IdClienteProveedorDefecto";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getProductosFK_IdColorProducto()throws Exception {
		try {
			sAccionBusqueda="FK_IdColorProducto";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getProductosFK_IdEfectoProducto()throws Exception {
		try {
			sAccionBusqueda="FK_IdEfectoProducto";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getProductosFK_IdEmpresa()throws Exception {
		try {
			sAccionBusqueda="FK_IdEmpresa";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getProductosFK_IdLinea()throws Exception {
		try {
			sAccionBusqueda="FK_IdLinea";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getProductosFK_IdLineaCategoria()throws Exception {
		try {
			sAccionBusqueda="FK_IdLineaCategoria";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getProductosFK_IdLineaGrupo()throws Exception {
		try {
			sAccionBusqueda="FK_IdLineaGrupo";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getProductosFK_IdLineaMarca()throws Exception {
		try {
			sAccionBusqueda="FK_IdLineaMarca";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getProductosFK_IdMarcaProducto()throws Exception {
		try {
			sAccionBusqueda="FK_IdMarcaProducto";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getProductosFK_IdMaterialProducto()throws Exception {
		try {
			sAccionBusqueda="FK_IdMaterialProducto";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getProductosFK_IdModeloProducto()throws Exception {
		try {
			sAccionBusqueda="FK_IdModeloProducto";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getProductosFK_IdSegmentoProducto()throws Exception {
		try {
			sAccionBusqueda="FK_IdSegmentoProducto";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getProductosFK_IdSucursal()throws Exception {
		try {
			sAccionBusqueda="FK_IdSucursal";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getProductosFK_IdTallaProducto()throws Exception {
		try {
			sAccionBusqueda="FK_IdTallaProducto";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getProductosFK_IdTipoCosteo()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoCosteo";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getProductosFK_IdTipoProducto()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoProducto";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getProductosFK_IdTipoProductoServicio()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoProductoServicio";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getProductosFK_IdTipoProductoServicioInven()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoProductoServicioInven";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getProductosFK_IdUnidad()throws Exception {
		try {
			sAccionBusqueda="FK_IdUnidad";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getProductosFK_IdUnidadPeso()throws Exception {
		try {
			sAccionBusqueda="FK_IdUnidadPeso";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	
	
	public void getProductosBusquedaPorCodigo(String sFinalQuery,String codigo)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					productoLogic.getProductosBusquedaPorCodigo(sFinalQuery,this.pagination,codigo);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getProductosBusquedaPorNombre(String sFinalQuery,String nombre)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					productoLogic.getProductosBusquedaPorNombre(sFinalQuery,this.pagination,nombre);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getProductosBusquedaPorNombreExtranjero(String sFinalQuery,String nombre_extranjero)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					productoLogic.getProductosBusquedaPorNombreExtranjero(sFinalQuery,this.pagination,nombre_extranjero);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getProductosFK_IdArancel(String sFinalQuery,Long id_arancel)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					productoLogic.getProductosFK_IdArancel(sFinalQuery,this.pagination,id_arancel);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getProductosFK_IdClaseProducto(String sFinalQuery,Long id_clase_producto)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					productoLogic.getProductosFK_IdClaseProducto(sFinalQuery,this.pagination,id_clase_producto);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getProductosFK_IdCliente(String sFinalQuery,Long id_cliente)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					productoLogic.getProductosFK_IdCliente(sFinalQuery,this.pagination,id_cliente);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getProductosFK_IdClienteProveedorDefecto(String sFinalQuery,Long id_cliente_proveedor_defecto)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					productoLogic.getProductosFK_IdClienteProveedorDefecto(sFinalQuery,this.pagination,id_cliente_proveedor_defecto);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getProductosFK_IdColorProducto(String sFinalQuery,Long id_color_producto)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					productoLogic.getProductosFK_IdColorProducto(sFinalQuery,this.pagination,id_color_producto);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getProductosFK_IdEfectoProducto(String sFinalQuery,Long id_efecto_producto)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					productoLogic.getProductosFK_IdEfectoProducto(sFinalQuery,this.pagination,id_efecto_producto);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getProductosFK_IdEmpresa(String sFinalQuery,Long id_empresa)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					productoLogic.getProductosFK_IdEmpresa(sFinalQuery,this.pagination,id_empresa);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getProductosFK_IdLinea(String sFinalQuery,Long id_linea)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					productoLogic.getProductosFK_IdLinea(sFinalQuery,this.pagination,id_linea);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getProductosFK_IdLineaCategoria(String sFinalQuery,Long id_linea_categoria)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					productoLogic.getProductosFK_IdLineaCategoria(sFinalQuery,this.pagination,id_linea_categoria);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getProductosFK_IdLineaGrupo(String sFinalQuery,Long id_linea_grupo)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					productoLogic.getProductosFK_IdLineaGrupo(sFinalQuery,this.pagination,id_linea_grupo);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getProductosFK_IdLineaMarca(String sFinalQuery,Long id_linea_marca)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					productoLogic.getProductosFK_IdLineaMarca(sFinalQuery,this.pagination,id_linea_marca);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getProductosFK_IdMarcaProducto(String sFinalQuery,Long id_marca_producto)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					productoLogic.getProductosFK_IdMarcaProducto(sFinalQuery,this.pagination,id_marca_producto);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getProductosFK_IdMaterialProducto(String sFinalQuery,Long id_material_producto)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					productoLogic.getProductosFK_IdMaterialProducto(sFinalQuery,this.pagination,id_material_producto);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getProductosFK_IdModeloProducto(String sFinalQuery,Long id_modelo_producto)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					productoLogic.getProductosFK_IdModeloProducto(sFinalQuery,this.pagination,id_modelo_producto);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getProductosFK_IdSegmentoProducto(String sFinalQuery,Long id_segmento_producto)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					productoLogic.getProductosFK_IdSegmentoProducto(sFinalQuery,this.pagination,id_segmento_producto);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getProductosFK_IdSucursal(String sFinalQuery,Long id_sucursal)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					productoLogic.getProductosFK_IdSucursal(sFinalQuery,this.pagination,id_sucursal);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getProductosFK_IdTallaProducto(String sFinalQuery,Long id_talla_producto)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					productoLogic.getProductosFK_IdTallaProducto(sFinalQuery,this.pagination,id_talla_producto);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getProductosFK_IdTipoCosteo(String sFinalQuery,Long id_tipo_costeo)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					productoLogic.getProductosFK_IdTipoCosteo(sFinalQuery,this.pagination,id_tipo_costeo);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getProductosFK_IdTipoProducto(String sFinalQuery,Long id_tipo_producto)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					productoLogic.getProductosFK_IdTipoProducto(sFinalQuery,this.pagination,id_tipo_producto);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getProductosFK_IdTipoProductoServicio(String sFinalQuery,Long id_tipo_producto_servicio)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					productoLogic.getProductosFK_IdTipoProductoServicio(sFinalQuery,this.pagination,id_tipo_producto_servicio);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getProductosFK_IdTipoProductoServicioInven(String sFinalQuery,Long id_tipo_producto_servicio_inven)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					productoLogic.getProductosFK_IdTipoProductoServicioInven(sFinalQuery,this.pagination,id_tipo_producto_servicio_inven);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getProductosFK_IdUnidad(String sFinalQuery,Long id_unidad)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					productoLogic.getProductosFK_IdUnidad(sFinalQuery,this.pagination,id_unidad);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getProductosFK_IdUnidadPeso(String sFinalQuery,Long id_unidad_peso)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					productoLogic.getProductosFK_IdUnidadPeso(sFinalQuery,this.pagination,id_unidad_peso);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	
	public void onLoad()throws Exception {		
		try {		
			isEntroOnLoad=true;
			//INTENTA TRAER DATOS DE BUSQUEDA ANTERIOR
			this.traerDatosBusquedaDesdeSession();
					
			//SINO SE CUMPLE VIENE DE PADRE FOREIGN O BUSQUEDA ANTIGUA
			if(this.sAccionBusqueda.equals("")) {
				this.sAccionBusqueda="Todos";
			}
								
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch (Exception e) {
			throw e;
		}
	}		
	
	public void inicializarPermisosProducto() {
		this.isPermisoTodoProducto=false;
		this.isPermisoNuevoProducto=false;
		this.isPermisoActualizarProducto=false;
		this.isPermisoActualizarOriginalProducto=false;
		this.isPermisoEliminarProducto=false;
		this.isPermisoGuardarCambiosProducto=false;
		this.isPermisoConsultaProducto=false;
		this.isPermisoBusquedaProducto=false;
		this.isPermisoReporteProducto=false;		
		this.isPermisoOrdenProducto=false;		
		this.isPermisoPaginacionMedioProducto=false;		
		this.isPermisoPaginacionAltoProducto=false;
		this.isPermisoPaginacionTodoProducto=false;
		this.isPermisoCopiarProducto=false;		
		this.isPermisoVerFormProducto=false;		
		this.isPermisoDuplicarProducto=false;		
		this.isPermisoOrdenProducto=false;		
	}
	
	public void setPermisosUsuarioProducto(Boolean isPermiso) {
		this.isPermisoTodoProducto=isPermiso;
		this.isPermisoNuevoProducto=isPermiso;
		this.isPermisoActualizarProducto=isPermiso;
		this.isPermisoActualizarOriginalProducto=isPermiso;
		this.isPermisoEliminarProducto=isPermiso;
		this.isPermisoGuardarCambiosProducto=isPermiso;
		this.isPermisoConsultaProducto=isPermiso;
		this.isPermisoBusquedaProducto=isPermiso;
		this.isPermisoReporteProducto=isPermiso;
		this.isPermisoOrdenProducto=isPermiso;		
		this.isPermisoPaginacionMedioProducto=isPermiso;		
		this.isPermisoPaginacionAltoProducto=isPermiso;		
		this.isPermisoPaginacionTodoProducto=isPermiso;		
		this.isPermisoCopiarProducto=isPermiso;		
		this.isPermisoVerFormProducto=isPermiso;		
		this.isPermisoDuplicarProducto=isPermiso;
		this.isPermisoOrdenProducto=isPermiso;
	}
	
	public void setPermisosMantenimientoUsuarioProducto(Boolean isPermiso) {
		//this.isPermisoTodoProducto=isPermiso;
		this.isPermisoNuevoProducto=isPermiso;
		this.isPermisoActualizarProducto=isPermiso;
		this.isPermisoActualizarOriginalProducto=isPermiso;
		this.isPermisoEliminarProducto=isPermiso;
		this.isPermisoGuardarCambiosProducto=isPermiso;
		//this.isPermisoConsultaProducto=isPermiso;
		//this.isPermisoBusquedaProducto=isPermiso;
		//this.isPermisoReporteProducto=isPermiso;
		//this.isPermisoOrdenProducto=isPermiso;		
		//this.isPermisoPaginacionMedioProducto=isPermiso;		
		//this.isPermisoPaginacionAltoProducto=isPermiso;		
		//this.isPermisoPaginacionTodoProducto=isPermiso;		
		//this.isPermisoCopiarProducto=isPermiso;		
		//this.isPermisoDuplicarProducto=isPermiso;
		//this.isPermisoOrdenProducto=isPermiso;
	}
	
	public void inicializarSetPermisosUsuarioProductoClasesRelacionadas() throws Exception {
		ArrayList<String> arrPaginas=new ArrayList<String>();		
		ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
		
		arrPaginas.add(ProveedorProductoConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(PrecioConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(DetalleImpuestoInvenConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(PresupuestoVentasConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(PoliticaProductoConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(SerieProductoConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(UbicacionProduConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(ParametroProductoConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(ProductoUnidadConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(IngredienteConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(ProductoCaracConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(ServicioClienteConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(ProductoPromocionConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(ProductoEspeciConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(ProductoReemplaConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(ProductoEstadisticaConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(PoliticaFactuConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(ProductoCuentaContableConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(BodegaProductoConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(PresupuestoProductoConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(SaldoMesProductoConstantesFunciones.SNOMBREOPCION);
		
		if(ProductoJInternalFrame.CON_LLAMADA_SIMPLE) {
			this.opcionsRelacionadas.addAll(this.sistemaReturnGeneral.getOpcionsRelacionadas());
			
		} else {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				opcionsFinal=sistemaLogicAdditional.tienePermisosOpcionesEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, arrPaginas);
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
			
			this.opcionsRelacionadas.addAll(opcionsFinal);
		}
		
		

		this.isTienePermisosProveedorProducto=false;
		this.isTienePermisosProveedorProducto=this.verificarGetPermisosUsuarioOpcionProductoClaseRelacionada(this.opcionsRelacionadas,ProveedorProductoConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosPrecio=false;
		this.isTienePermisosPrecio=this.verificarGetPermisosUsuarioOpcionProductoClaseRelacionada(this.opcionsRelacionadas,PrecioConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosDetalleImpuestoInven=false;
		this.isTienePermisosDetalleImpuestoInven=this.verificarGetPermisosUsuarioOpcionProductoClaseRelacionada(this.opcionsRelacionadas,DetalleImpuestoInvenConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosPresupuestoVentas=false;
		this.isTienePermisosPresupuestoVentas=this.verificarGetPermisosUsuarioOpcionProductoClaseRelacionada(this.opcionsRelacionadas,PresupuestoVentasConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosPoliticaProducto=false;
		this.isTienePermisosPoliticaProducto=this.verificarGetPermisosUsuarioOpcionProductoClaseRelacionada(this.opcionsRelacionadas,PoliticaProductoConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosSerieProducto=false;
		this.isTienePermisosSerieProducto=this.verificarGetPermisosUsuarioOpcionProductoClaseRelacionada(this.opcionsRelacionadas,SerieProductoConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosUbicacionProdu=false;
		this.isTienePermisosUbicacionProdu=this.verificarGetPermisosUsuarioOpcionProductoClaseRelacionada(this.opcionsRelacionadas,UbicacionProduConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosParametroProducto=false;
		this.isTienePermisosParametroProducto=this.verificarGetPermisosUsuarioOpcionProductoClaseRelacionada(this.opcionsRelacionadas,ParametroProductoConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosProductoUnidad=false;
		this.isTienePermisosProductoUnidad=this.verificarGetPermisosUsuarioOpcionProductoClaseRelacionada(this.opcionsRelacionadas,ProductoUnidadConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosIngrediente=false;
		this.isTienePermisosIngrediente=this.verificarGetPermisosUsuarioOpcionProductoClaseRelacionada(this.opcionsRelacionadas,IngredienteConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosProductoCarac=false;
		this.isTienePermisosProductoCarac=this.verificarGetPermisosUsuarioOpcionProductoClaseRelacionada(this.opcionsRelacionadas,ProductoCaracConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosServicioCliente=false;
		this.isTienePermisosServicioCliente=this.verificarGetPermisosUsuarioOpcionProductoClaseRelacionada(this.opcionsRelacionadas,ServicioClienteConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosProductoPromocion=false;
		this.isTienePermisosProductoPromocion=this.verificarGetPermisosUsuarioOpcionProductoClaseRelacionada(this.opcionsRelacionadas,ProductoPromocionConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosProductoEspeci=false;
		this.isTienePermisosProductoEspeci=this.verificarGetPermisosUsuarioOpcionProductoClaseRelacionada(this.opcionsRelacionadas,ProductoEspeciConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosProductoReempla=false;
		this.isTienePermisosProductoReempla=this.verificarGetPermisosUsuarioOpcionProductoClaseRelacionada(this.opcionsRelacionadas,ProductoReemplaConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosProductoEstadistica=false;
		this.isTienePermisosProductoEstadistica=this.verificarGetPermisosUsuarioOpcionProductoClaseRelacionada(this.opcionsRelacionadas,ProductoEstadisticaConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosPoliticaFactu=false;
		this.isTienePermisosPoliticaFactu=this.verificarGetPermisosUsuarioOpcionProductoClaseRelacionada(this.opcionsRelacionadas,PoliticaFactuConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosProductoCuentaContable=false;
		this.isTienePermisosProductoCuentaContable=this.verificarGetPermisosUsuarioOpcionProductoClaseRelacionada(this.opcionsRelacionadas,ProductoCuentaContableConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosBodegaProducto=false;
		this.isTienePermisosBodegaProducto=this.verificarGetPermisosUsuarioOpcionProductoClaseRelacionada(this.opcionsRelacionadas,BodegaProductoConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosPresupuestoProducto=false;
		this.isTienePermisosPresupuestoProducto=this.verificarGetPermisosUsuarioOpcionProductoClaseRelacionada(this.opcionsRelacionadas,PresupuestoProductoConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosSaldoMesProducto=false;
		this.isTienePermisosSaldoMesProducto=this.verificarGetPermisosUsuarioOpcionProductoClaseRelacionada(this.opcionsRelacionadas,SaldoMesProductoConstantesFunciones.SNOMBREOPCION);
		
	}
	
	public Boolean tienePermisosUsuarioEnPaginaWebProducto(String sPagina) throws Exception {
		Boolean tienePermisos=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			tienePermisos=sistemaLogicAdditional.tienePermisosEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, sPagina);
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		
		return tienePermisos;
	}
	
	public void inicializarSetPermisosUsuarioProductoClasesRelacionadas(Boolean conPermiso) throws Exception {
		
		this.isTienePermisosProveedorProducto=conPermiso;
		this.isTienePermisosPrecio=conPermiso;
		this.isTienePermisosDetalleImpuestoInven=conPermiso;
		this.isTienePermisosPresupuestoVentas=conPermiso;
		this.isTienePermisosPoliticaProducto=conPermiso;
		this.isTienePermisosSerieProducto=conPermiso;
		this.isTienePermisosUbicacionProdu=conPermiso;
		this.isTienePermisosParametroProducto=conPermiso;
		this.isTienePermisosProductoUnidad=conPermiso;
		this.isTienePermisosIngrediente=conPermiso;
		this.isTienePermisosProductoCarac=conPermiso;
		this.isTienePermisosServicioCliente=conPermiso;
		this.isTienePermisosProductoPromocion=conPermiso;
		this.isTienePermisosProductoEspeci=conPermiso;
		this.isTienePermisosProductoReempla=conPermiso;
		this.isTienePermisosProductoEstadistica=conPermiso;
		this.isTienePermisosPoliticaFactu=conPermiso;
		this.isTienePermisosProductoCuentaContable=conPermiso;
		this.isTienePermisosBodegaProducto=conPermiso;
		this.isTienePermisosPresupuestoProducto=conPermiso;
		this.isTienePermisosSaldoMesProducto=conPermiso;
	}
	
	public Boolean verificarGetPermisosUsuarioProductoClaseRelacionada(ArrayList<String> arrPaginasFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioClaseRelacionada(arrPaginasFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public Boolean verificarGetPermisosUsuarioOpcionProductoClaseRelacionada(List<Opcion> opcionsFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioOpcionClaseRelacionada(opcionsFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public void actualizarTabsSetPermisosUsuarioProductoClasesRelacionadas() throws Exception {
		

		if(!this.isTienePermisosProveedorProducto && this.jInternalFrameDetalleFormProducto!=null && this.jInternalFrameDetalleFormProducto.proveedorproductoBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormProducto.jTabbedPaneRelacionesProducto.remove(this.jInternalFrameDetalleFormProducto.proveedorproductoBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosPrecio && this.jInternalFrameDetalleFormProducto!=null && this.jInternalFrameDetalleFormProducto.precioBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormProducto.jTabbedPaneRelacionesProducto.remove(this.jInternalFrameDetalleFormProducto.precioBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosDetalleImpuestoInven && this.jInternalFrameDetalleFormProducto!=null && this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormProducto.jTabbedPaneRelacionesProducto.remove(this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosPresupuestoVentas && this.jInternalFrameDetalleFormProducto!=null && this.jInternalFrameDetalleFormProducto.presupuestoventasBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormProducto.jTabbedPaneRelacionesProducto.remove(this.jInternalFrameDetalleFormProducto.presupuestoventasBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosPoliticaProducto && this.jInternalFrameDetalleFormProducto!=null && this.jInternalFrameDetalleFormProducto.politicaproductoBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormProducto.jTabbedPaneRelacionesProducto.remove(this.jInternalFrameDetalleFormProducto.politicaproductoBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosSerieProducto && this.jInternalFrameDetalleFormProducto!=null && this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormProducto.jTabbedPaneRelacionesProducto.remove(this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosUbicacionProdu && this.jInternalFrameDetalleFormProducto!=null && this.jInternalFrameDetalleFormProducto.ubicacionproduBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormProducto.jTabbedPaneRelacionesProducto.remove(this.jInternalFrameDetalleFormProducto.ubicacionproduBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosParametroProducto && this.jInternalFrameDetalleFormProducto!=null && this.jInternalFrameDetalleFormProducto.parametroproductoBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormProducto.jTabbedPaneRelacionesProducto.remove(this.jInternalFrameDetalleFormProducto.parametroproductoBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosProductoUnidad && this.jInternalFrameDetalleFormProducto!=null && this.jInternalFrameDetalleFormProducto.productounidadBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormProducto.jTabbedPaneRelacionesProducto.remove(this.jInternalFrameDetalleFormProducto.productounidadBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosIngrediente && this.jInternalFrameDetalleFormProducto!=null && this.jInternalFrameDetalleFormProducto.ingredienteBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormProducto.jTabbedPaneRelacionesProducto.remove(this.jInternalFrameDetalleFormProducto.ingredienteBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosProductoCarac && this.jInternalFrameDetalleFormProducto!=null && this.jInternalFrameDetalleFormProducto.productocaracBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormProducto.jTabbedPaneRelacionesProducto.remove(this.jInternalFrameDetalleFormProducto.productocaracBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosServicioCliente && this.jInternalFrameDetalleFormProducto!=null && this.jInternalFrameDetalleFormProducto.servicioclienteBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormProducto.jTabbedPaneRelacionesProducto.remove(this.jInternalFrameDetalleFormProducto.servicioclienteBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosProductoPromocion && this.jInternalFrameDetalleFormProducto!=null && this.jInternalFrameDetalleFormProducto.productopromocionBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormProducto.jTabbedPaneRelacionesProducto.remove(this.jInternalFrameDetalleFormProducto.productopromocionBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosProductoEspeci && this.jInternalFrameDetalleFormProducto!=null && this.jInternalFrameDetalleFormProducto.productoespeciBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormProducto.jTabbedPaneRelacionesProducto.remove(this.jInternalFrameDetalleFormProducto.productoespeciBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosProductoReempla && this.jInternalFrameDetalleFormProducto!=null && this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormProducto.jTabbedPaneRelacionesProducto.remove(this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosProductoEstadistica && this.jInternalFrameDetalleFormProducto!=null && this.jInternalFrameDetalleFormProducto.productoestadisticaBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormProducto.jTabbedPaneRelacionesProducto.remove(this.jInternalFrameDetalleFormProducto.productoestadisticaBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosPoliticaFactu && this.jInternalFrameDetalleFormProducto!=null && this.jInternalFrameDetalleFormProducto.politicafactuBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormProducto.jTabbedPaneRelacionesProducto.remove(this.jInternalFrameDetalleFormProducto.politicafactuBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosProductoCuentaContable && this.jInternalFrameDetalleFormProducto!=null && this.jInternalFrameDetalleFormProducto.productocuentacontableBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormProducto.jTabbedPaneRelacionesProducto.remove(this.jInternalFrameDetalleFormProducto.productocuentacontableBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosBodegaProducto && this.jInternalFrameDetalleFormProducto!=null && this.jInternalFrameDetalleFormProducto.bodegaproductoBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormProducto.jTabbedPaneRelacionesProducto.remove(this.jInternalFrameDetalleFormProducto.bodegaproductoBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosPresupuestoProducto && this.jInternalFrameDetalleFormProducto!=null && this.jInternalFrameDetalleFormProducto.presupuestoproductoBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormProducto.jTabbedPaneRelacionesProducto.remove(this.jInternalFrameDetalleFormProducto.presupuestoproductoBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosSaldoMesProducto && this.jInternalFrameDetalleFormProducto!=null && this.jInternalFrameDetalleFormProducto.saldomesproductoBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormProducto.jTabbedPaneRelacionesProducto.remove(this.jInternalFrameDetalleFormProducto.saldomesproductoBeanSwingJInternalFrame.getContentPane());
		}
	}
	
	public void setPermisosUsuarioProducto() throws Exception {
		
		PerfilOpcion perfilOpcionUsuario=new PerfilOpcion();		
		Long idOpcion=this.opcionActual.getId();
		
		if(ProductoJInternalFrame.CON_LLAMADA_SIMPLE) {
			perfilOpcionUsuario=this.sistemaReturnGeneral.getPerfilOpcion();
			
		} else {
			if(this.productoSessionBean.getEsGuardarRelacionado()) {
				idOpcion=0L;
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				perfilOpcionUsuario=sistemaLogicAdditional.traerPermisosPaginaWebPerfilOpcion(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, ProductoConstantesFunciones.SNOMBREOPCION,idOpcion);				
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
		}
		
		if(perfilOpcionUsuario!=null && perfilOpcionUsuario.getId()>0) {
			this.isPermisoNuevoProducto=perfilOpcionUsuario.getingreso()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarProducto=perfilOpcionUsuario.getmodificacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarOriginalProducto=this.isPermisoActualizarProducto;
			this.isPermisoEliminarProducto=perfilOpcionUsuario.geteliminacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoGuardarCambiosProducto=perfilOpcionUsuario.getguardar_cambios()||perfilOpcionUsuario.gettodo();
			this.isPermisoConsultaProducto=perfilOpcionUsuario.getconsulta()||perfilOpcionUsuario.gettodo();
			this.isPermisoBusquedaProducto=perfilOpcionUsuario.getbusqueda()||perfilOpcionUsuario.gettodo();
			this.isPermisoTodoProducto=perfilOpcionUsuario.gettodo()||perfilOpcionUsuario.gettodo();
			this.isPermisoReporteProducto=perfilOpcionUsuario.getreporte()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenProducto=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionMedioProducto=perfilOpcionUsuario.getpaginacion_medio()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionAltoProducto=perfilOpcionUsuario.getpaginacion_alto()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionTodoProducto=perfilOpcionUsuario.getpaginacion_todo()||perfilOpcionUsuario.gettodo();
			this.isPermisoCopiarProducto=perfilOpcionUsuario.getcopiar()||perfilOpcionUsuario.gettodo();
			this.isPermisoVerFormProducto=true;//perfilOpcionUsuario.getver_form()||perfilOpcionUsuario.gettodo();
			this.isPermisoDuplicarProducto=perfilOpcionUsuario.getduplicar()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenProducto=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			
			if(this.productoSessionBean.getEsGuardarRelacionado()) {
				this.opcionActual.setId(perfilOpcionUsuario.getid_opcion());
				
				this.jTableDatosProducto.setToolTipText(this.jTableDatosProducto.getToolTipText()+"_"+perfilOpcionUsuario.getid_opcion());		
			}
		} else {
			this.setPermisosUsuarioProducto(false);
		}
		
		//SI SE NECESITA PONER TODOS LOS PERMISOS POR DEFECTO
		//
		
	}
	
	public void setAccionesUsuarioProducto(Boolean esParaAccionesFormulario) throws Exception {		
		Reporte reporte=null;
		
		if(!esParaAccionesFormulario) {
			this.accions=new ArrayList<Accion>();
			
			if(ProductoJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accions=this.sistemaReturnGeneral.getAccions();
				
				
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accions=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,false);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accions.size()>0) {			
				for(Accion accion:this.accions) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
		
		
					this.tiposAcciones.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAcciones.add(reporte);
			
		} else {
			//ACCIONES FORMULARIO
			this.accionsFormulario=new ArrayList<Accion>();
			
			if(ProductoJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accionsFormulario=this.sistemaReturnGeneral.getAccionsFormulario();
			
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accionsFormulario=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,true);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accionsFormulario.size()>0) {			
				for(Accion accion:this.accionsFormulario) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
					
					this.tiposAccionesFormulario.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAccionesFormulario.add(reporte);
		}				
	}	 	
	
	public void setRelacionesUsuarioProducto() throws Exception {
		Reporte reporte=null;
		
		

		if(this.isTienePermisosProveedorProducto && this.productoConstantesFunciones.mostrarProveedorProductoProducto && !ProductoConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Producto Proveedor");
			reporte.setsDescripcion("Producto Proveedor");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosPrecio && this.productoConstantesFunciones.mostrarPrecioProducto && !ProductoConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Precio");
			reporte.setsDescripcion("Precio");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosDetalleImpuestoInven && this.productoConstantesFunciones.mostrarDetalleImpuestoInvenProducto && !ProductoConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Detalle Impuesto Inven");
			reporte.setsDescripcion("Detalle Impuesto Inven");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosPresupuestoVentas && this.productoConstantesFunciones.mostrarPresupuestoVentasProducto && !ProductoConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Presupuesto Ventas");
			reporte.setsDescripcion("Presupuesto Ventas");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosPoliticaProducto && this.productoConstantesFunciones.mostrarPoliticaProductoProducto && !ProductoConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Politica Producto");
			reporte.setsDescripcion("Politica Producto");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosSerieProducto && this.productoConstantesFunciones.mostrarSerieProductoProducto && !ProductoConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Serie Producto");
			reporte.setsDescripcion("Serie Producto");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosUbicacionProdu && this.productoConstantesFunciones.mostrarUbicacionProduProducto && !ProductoConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Ubicacion Producto");
			reporte.setsDescripcion("Ubicacion Producto");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosParametroProducto && this.productoConstantesFunciones.mostrarParametroProductoProducto && !ProductoConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Parametro Producto");
			reporte.setsDescripcion("Parametro Producto");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosProductoUnidad && this.productoConstantesFunciones.mostrarProductoUnidadProducto && !ProductoConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Producto Unidad");
			reporte.setsDescripcion("Producto Unidad");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosIngrediente && this.productoConstantesFunciones.mostrarIngredienteProducto && !ProductoConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Ingrediente");
			reporte.setsDescripcion("Ingrediente");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosProductoCarac && this.productoConstantesFunciones.mostrarProductoCaracProducto && !ProductoConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Caracteristica");
			reporte.setsDescripcion("Caracteristica");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosServicioCliente && this.productoConstantesFunciones.mostrarServicioClienteProducto && !ProductoConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Servicio Cliente");
			reporte.setsDescripcion("Servicio Cliente");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosProductoPromocion && this.productoConstantesFunciones.mostrarProductoPromocionProducto && !ProductoConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Promocion");
			reporte.setsDescripcion("Promocion");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosProductoEspeci && this.productoConstantesFunciones.mostrarProductoEspeciProducto && !ProductoConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Especificacion");
			reporte.setsDescripcion("Especificacion");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosProductoReempla && this.productoConstantesFunciones.mostrarProductoReemplaProducto && !ProductoConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Reemplazo");
			reporte.setsDescripcion("Reemplazo");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosProductoEstadistica && this.productoConstantesFunciones.mostrarProductoEstadisticaProducto && !ProductoConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Estadistica");
			reporte.setsDescripcion("Estadistica");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosPoliticaFactu && this.productoConstantesFunciones.mostrarPoliticaFactuProducto && !ProductoConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Politica Factu");
			reporte.setsDescripcion("Politica Factu");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosProductoCuentaContable && this.productoConstantesFunciones.mostrarProductoCuentaContableProducto && !ProductoConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Producto Cuenta Contable");
			reporte.setsDescripcion("Producto Cuenta Contable");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosBodegaProducto && this.productoConstantesFunciones.mostrarBodegaProductoProducto && !ProductoConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Bodega Producto");
			reporte.setsDescripcion("Bodega Producto");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosPresupuestoProducto && this.productoConstantesFunciones.mostrarPresupuestoProductoProducto && !ProductoConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Presupuesto Producto");
			reporte.setsDescripcion("Presupuesto Producto");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosSaldoMesProducto && this.productoConstantesFunciones.mostrarSaldoMesProductoProducto && !ProductoConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Saldo Mes Producto");
			reporte.setsDescripcion("Saldo Mes Producto");
			this.tiposRelaciones.add(reporte);
		}
		
		
		//ORDENAR ALFABETICAMENTE
		Collections.sort(this.tiposRelaciones, new ReporteComparator());
		/*
		reporte=new Reporte();
		reporte.setsCodigo(accion.getcodigo());
		reporte.setsDescripcion(accion.getnombre());
			
		this.tiposRelaciones.add(reporte);
		*/
	}	
	
		
	@SuppressWarnings({ "unchecked", "rawtypes" } )
	public void inicializarCombosForeignKeyProductoListas()throws Exception {
		try	{						
			
				this.empresasForeignKey=new ArrayList();
				this.sucursalsForeignKey=new ArrayList();
				this.lineasForeignKey=new ArrayList();
				this.lineagruposForeignKey=new ArrayList();
				this.lineacategoriasForeignKey=new ArrayList();
				this.lineamarcasForeignKey=new ArrayList();
				this.tipoproductoserviciosForeignKey=new ArrayList();
				this.tipoproductoservicioinvensForeignKey=new ArrayList();
				this.tipocosteosForeignKey=new ArrayList();
				this.unidadsForeignKey=new ArrayList();
				this.unidadpesosForeignKey=new ArrayList();
				this.arancelsForeignKey=new ArrayList();
				this.clientesForeignKey=new ArrayList();
				this.clienteproveedordefectosForeignKey=new ArrayList();
				this.tipoproductosForeignKey=new ArrayList();
				this.colorproductosForeignKey=new ArrayList();
				this.claseproductosForeignKey=new ArrayList();
				this.efectoproductosForeignKey=new ArrayList();
				this.marcaproductosForeignKey=new ArrayList();
				this.modeloproductosForeignKey=new ArrayList();
				this.materialproductosForeignKey=new ArrayList();
				this.segmentoproductosForeignKey=new ArrayList();
				this.tallaproductosForeignKey=new ArrayList();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void cargarCombosTodosForeignKeyProductoListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			String sFinalQueryCombo="";
			
			Modulo  moduloActualAux=new Modulo();
			
			if(ProductoJInternalFrame.ISLOAD_FKLOTE) {
				this.cargarCombosLoteForeignKeyProductoListas(false);
			} else {
			
				this.cargarCombosForeignKeyEmpresaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeySucursalListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyLineaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyLineaGrupoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyLineaCategoriaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyLineaMarcaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoProductoServicioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoProductoServicioInvenListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoCosteoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyUnidadListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyUnidadPesoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyArancelListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyClienteListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyClienteProveedorDefectoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoProductoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyColorProductoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyClaseProductoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEfectoProductoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyMarcaProductoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyModeloProductoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyMaterialProductoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeySegmentoProductoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTallaProductoListas(cargarCombosDependencia,sFinalQueryCombo);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	

	public void cargarCombosForeignKeyEmpresaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EmpresaConstantesFunciones.SFINALQUERY;

				this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeySucursalListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=SucursalConstantesFunciones.SFINALQUERY;

				this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyLineaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.lineasForeignKey==null||this.lineasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=LineaConstantesFunciones.getArrayColumnasGlobalesLinea(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,LineaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "id_nivel_linea=1");

				finalQueryGlobal+=LineaConstantesFunciones.SFINALQUERY;

				this.cargarCombosLineasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyLineaGrupoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if(cargarCombosDependencia && (this.lineagruposForeignKey==null||this.lineagruposForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=LineaConstantesFunciones.getArrayColumnasGlobalesLinea(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,LineaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=LineaConstantesFunciones.SFINALQUERY;

				this.cargarCombosLineaGruposForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyLineaCategoriaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if(cargarCombosDependencia && (this.lineacategoriasForeignKey==null||this.lineacategoriasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=LineaConstantesFunciones.getArrayColumnasGlobalesLinea(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,LineaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=LineaConstantesFunciones.SFINALQUERY;

				this.cargarCombosLineaCategoriasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyLineaMarcaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if(cargarCombosDependencia && (this.lineamarcasForeignKey==null||this.lineamarcasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=LineaConstantesFunciones.getArrayColumnasGlobalesLinea(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,LineaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=LineaConstantesFunciones.SFINALQUERY;

				this.cargarCombosLineaMarcasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoProductoServicioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipoproductoserviciosForeignKey==null||this.tipoproductoserviciosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoProductoServicioConstantesFunciones.getArrayColumnasGlobalesTipoProductoServicio(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoProductoServicioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoProductoServicioConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoProductoServiciosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoProductoServicioInvenListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipoproductoservicioinvensForeignKey==null||this.tipoproductoservicioinvensForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoProductoServicioInvenConstantesFunciones.getArrayColumnasGlobalesTipoProductoServicioInven(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoProductoServicioInvenConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoProductoServicioInvenConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoProductoServicioInvensForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoCosteoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipocosteosForeignKey==null||this.tipocosteosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoCosteoConstantesFunciones.getArrayColumnasGlobalesTipoCosteo(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoCosteoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoCosteoConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoCosteosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyUnidadListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.unidadsForeignKey==null||this.unidadsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=UnidadConstantesFunciones.getArrayColumnasGlobalesUnidad(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,UnidadConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=UnidadConstantesFunciones.SFINALQUERY;

				this.cargarCombosUnidadsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyUnidadPesoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.unidadpesosForeignKey==null||this.unidadpesosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=UnidadConstantesFunciones.getArrayColumnasGlobalesUnidad(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,UnidadConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=UnidadConstantesFunciones.SFINALQUERY;

				this.cargarCombosUnidadPesosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyArancelListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.arancelsForeignKey==null||this.arancelsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=ArancelConstantesFunciones.getArrayColumnasGlobalesArancel(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ArancelConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=ArancelConstantesFunciones.SFINALQUERY;

				this.cargarCombosArancelsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyClienteListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.clientesForeignKey==null||this.clientesForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=ClienteConstantesFunciones.getArrayColumnasGlobalesCliente(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ClienteConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=ClienteConstantesFunciones.SFINALQUERY;

				this.cargarCombosClientesForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyClienteProveedorDefectoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.clienteproveedordefectosForeignKey==null||this.clienteproveedordefectosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=ClienteConstantesFunciones.getArrayColumnasGlobalesCliente(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ClienteConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=ClienteConstantesFunciones.SFINALQUERY;

				this.cargarCombosClienteProveedorDefectosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoProductoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipoproductosForeignKey==null||this.tipoproductosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoProductoConstantesFunciones.getArrayColumnasGlobalesTipoProducto(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoProductoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoProductoConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoProductosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyColorProductoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.colorproductosForeignKey==null||this.colorproductosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=ColorProductoConstantesFunciones.getArrayColumnasGlobalesColorProducto(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ColorProductoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=ColorProductoConstantesFunciones.SFINALQUERY;

				this.cargarCombosColorProductosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyClaseProductoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.claseproductosForeignKey==null||this.claseproductosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=ClaseProductoConstantesFunciones.getArrayColumnasGlobalesClaseProducto(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ClaseProductoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=ClaseProductoConstantesFunciones.SFINALQUERY;

				this.cargarCombosClaseProductosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEfectoProductoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.efectoproductosForeignKey==null||this.efectoproductosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EfectoProductoConstantesFunciones.getArrayColumnasGlobalesEfectoProducto(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EfectoProductoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EfectoProductoConstantesFunciones.SFINALQUERY;

				this.cargarCombosEfectoProductosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyMarcaProductoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.marcaproductosForeignKey==null||this.marcaproductosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=MarcaProductoConstantesFunciones.getArrayColumnasGlobalesMarcaProducto(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,MarcaProductoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=MarcaProductoConstantesFunciones.SFINALQUERY;

				this.cargarCombosMarcaProductosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyModeloProductoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.modeloproductosForeignKey==null||this.modeloproductosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=ModeloProductoConstantesFunciones.getArrayColumnasGlobalesModeloProducto(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ModeloProductoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=ModeloProductoConstantesFunciones.SFINALQUERY;

				this.cargarCombosModeloProductosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyMaterialProductoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.materialproductosForeignKey==null||this.materialproductosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=MaterialProductoConstantesFunciones.getArrayColumnasGlobalesMaterialProducto(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,MaterialProductoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=MaterialProductoConstantesFunciones.SFINALQUERY;

				this.cargarCombosMaterialProductosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeySegmentoProductoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.segmentoproductosForeignKey==null||this.segmentoproductosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=SegmentoProductoConstantesFunciones.getArrayColumnasGlobalesSegmentoProducto(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SegmentoProductoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=SegmentoProductoConstantesFunciones.SFINALQUERY;

				this.cargarCombosSegmentoProductosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTallaProductoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tallaproductosForeignKey==null||this.tallaproductosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TallaProductoConstantesFunciones.getArrayColumnasGlobalesTallaProducto(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TallaProductoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TallaProductoConstantesFunciones.SFINALQUERY;

				this.cargarCombosTallaProductosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarCombosLoteForeignKeyProductoListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			Modulo  moduloActualAux=new Modulo();
			
			
			ProductoParameterReturnGeneral productoReturnGeneral=new ProductoParameterReturnGeneral();
						
			


				String finalQueryGlobalEmpresa="";

				if(((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0) && this.productoConstantesFunciones.cargarid_empresaProducto)
					 || (this.esRecargarFks && this.productoConstantesFunciones.cargarid_empresaProducto)) {

					if(!this.productoSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEmpresa=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

						finalQueryGlobalEmpresa=Funciones.GetFinalQueryAppend(finalQueryGlobalEmpresa, "");
						finalQueryGlobalEmpresa+=EmpresaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEmpresa=" WHERE " + ConstantesSql.ID + "="+productoSessionBean.getlidEmpresaActual();
					}
				} else {
					finalQueryGlobalEmpresa="NONE";
				}


				String finalQueryGlobalSucursal="";

				if(((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0) && this.productoConstantesFunciones.cargarid_sucursalProducto)
					 || (this.esRecargarFks && this.productoConstantesFunciones.cargarid_sucursalProducto)) {

					if(!this.productoSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalSucursal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

						finalQueryGlobalSucursal=Funciones.GetFinalQueryAppend(finalQueryGlobalSucursal, "");
						finalQueryGlobalSucursal+=SucursalConstantesFunciones.SFINALQUERY;

						//this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalSucursal=" WHERE " + ConstantesSql.ID + "="+productoSessionBean.getlidSucursalActual();
					}
				} else {
					finalQueryGlobalSucursal="NONE";
				}


				String finalQueryGlobalLinea="";

				if(((this.lineasForeignKey==null||this.lineasForeignKey.size()<=0) && this.productoConstantesFunciones.cargarid_lineaProducto)
					 || (this.esRecargarFks && this.productoConstantesFunciones.cargarid_lineaProducto)) {

					if(!this.productoSessionBean.getisBusquedaDesdeForeignKeySesionLinea()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=LineaConstantesFunciones.getArrayColumnasGlobalesLinea(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalLinea=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,LineaConstantesFunciones.TABLENAME);

						finalQueryGlobalLinea=Funciones.GetFinalQueryAppend(finalQueryGlobalLinea, "id_nivel_linea=1");
						finalQueryGlobalLinea+=LineaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosLineasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalLinea=" WHERE " + ConstantesSql.ID + "="+productoSessionBean.getlidLineaActual();
					}
				} else {
					finalQueryGlobalLinea="NONE";
				}


				String finalQueryGlobalLineaGrupo="";

				if(cargarCombosDependencia && ((this.lineagruposForeignKey==null||this.lineagruposForeignKey.size()<=0) && this.productoConstantesFunciones.cargarid_linea_grupoProducto)
					 || (this.esRecargarFks && this.productoConstantesFunciones.cargarid_linea_grupoProducto)) {

					if(!this.productoSessionBean.getisBusquedaDesdeForeignKeySesionLineaGrupo()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=LineaConstantesFunciones.getArrayColumnasGlobalesLinea(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalLineaGrupo=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,LineaConstantesFunciones.TABLENAME);

						finalQueryGlobalLineaGrupo=Funciones.GetFinalQueryAppend(finalQueryGlobalLineaGrupo, "");
						finalQueryGlobalLineaGrupo+=LineaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosLineaGruposForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalLineaGrupo=" WHERE " + ConstantesSql.ID + "="+productoSessionBean.getlidLineaGrupoActual();
					}
				} else {
					finalQueryGlobalLineaGrupo="NONE";
				}


				String finalQueryGlobalLineaCategoria="";

				if(cargarCombosDependencia && ((this.lineacategoriasForeignKey==null||this.lineacategoriasForeignKey.size()<=0) && this.productoConstantesFunciones.cargarid_linea_categoriaProducto)
					 || (this.esRecargarFks && this.productoConstantesFunciones.cargarid_linea_categoriaProducto)) {

					if(!this.productoSessionBean.getisBusquedaDesdeForeignKeySesionLineaCategoria()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=LineaConstantesFunciones.getArrayColumnasGlobalesLinea(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalLineaCategoria=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,LineaConstantesFunciones.TABLENAME);

						finalQueryGlobalLineaCategoria=Funciones.GetFinalQueryAppend(finalQueryGlobalLineaCategoria, "");
						finalQueryGlobalLineaCategoria+=LineaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosLineaCategoriasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalLineaCategoria=" WHERE " + ConstantesSql.ID + "="+productoSessionBean.getlidLineaCategoriaActual();
					}
				} else {
					finalQueryGlobalLineaCategoria="NONE";
				}


				String finalQueryGlobalLineaMarca="";

				if(cargarCombosDependencia && ((this.lineamarcasForeignKey==null||this.lineamarcasForeignKey.size()<=0) && this.productoConstantesFunciones.cargarid_linea_marcaProducto)
					 || (this.esRecargarFks && this.productoConstantesFunciones.cargarid_linea_marcaProducto)) {

					if(!this.productoSessionBean.getisBusquedaDesdeForeignKeySesionLineaMarca()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=LineaConstantesFunciones.getArrayColumnasGlobalesLinea(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalLineaMarca=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,LineaConstantesFunciones.TABLENAME);

						finalQueryGlobalLineaMarca=Funciones.GetFinalQueryAppend(finalQueryGlobalLineaMarca, "");
						finalQueryGlobalLineaMarca+=LineaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosLineaMarcasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalLineaMarca=" WHERE " + ConstantesSql.ID + "="+productoSessionBean.getlidLineaMarcaActual();
					}
				} else {
					finalQueryGlobalLineaMarca="NONE";
				}


				String finalQueryGlobalTipoProductoServicio="";

				if(((this.tipoproductoserviciosForeignKey==null||this.tipoproductoserviciosForeignKey.size()<=0) && this.productoConstantesFunciones.cargarid_tipo_producto_servicioProducto)
					 || (this.esRecargarFks && this.productoConstantesFunciones.cargarid_tipo_producto_servicioProducto)) {

					if(!this.productoSessionBean.getisBusquedaDesdeForeignKeySesionTipoProductoServicio()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoProductoServicioConstantesFunciones.getArrayColumnasGlobalesTipoProductoServicio(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoProductoServicio=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoProductoServicioConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoProductoServicio=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoProductoServicio, "");
						finalQueryGlobalTipoProductoServicio+=TipoProductoServicioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoProductoServiciosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoProductoServicio=" WHERE " + ConstantesSql.ID + "="+productoSessionBean.getlidTipoProductoServicioActual();
					}
				} else {
					finalQueryGlobalTipoProductoServicio="NONE";
				}


				String finalQueryGlobalTipoProductoServicioInven="";

				if(((this.tipoproductoservicioinvensForeignKey==null||this.tipoproductoservicioinvensForeignKey.size()<=0) && this.productoConstantesFunciones.cargarid_tipo_producto_servicio_invenProducto)
					 || (this.esRecargarFks && this.productoConstantesFunciones.cargarid_tipo_producto_servicio_invenProducto)) {

					if(!this.productoSessionBean.getisBusquedaDesdeForeignKeySesionTipoProductoServicioInven()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoProductoServicioInvenConstantesFunciones.getArrayColumnasGlobalesTipoProductoServicioInven(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoProductoServicioInven=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoProductoServicioInvenConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoProductoServicioInven=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoProductoServicioInven, "");
						finalQueryGlobalTipoProductoServicioInven+=TipoProductoServicioInvenConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoProductoServicioInvensForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoProductoServicioInven=" WHERE " + ConstantesSql.ID + "="+productoSessionBean.getlidTipoProductoServicioInvenActual();
					}
				} else {
					finalQueryGlobalTipoProductoServicioInven="NONE";
				}


				String finalQueryGlobalTipoCosteo="";

				if(((this.tipocosteosForeignKey==null||this.tipocosteosForeignKey.size()<=0) && this.productoConstantesFunciones.cargarid_tipo_costeoProducto)
					 || (this.esRecargarFks && this.productoConstantesFunciones.cargarid_tipo_costeoProducto)) {

					if(!this.productoSessionBean.getisBusquedaDesdeForeignKeySesionTipoCosteo()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoCosteoConstantesFunciones.getArrayColumnasGlobalesTipoCosteo(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoCosteo=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoCosteoConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoCosteo=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoCosteo, "");
						finalQueryGlobalTipoCosteo+=TipoCosteoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoCosteosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoCosteo=" WHERE " + ConstantesSql.ID + "="+productoSessionBean.getlidTipoCosteoActual();
					}
				} else {
					finalQueryGlobalTipoCosteo="NONE";
				}


				String finalQueryGlobalUnidad="";

				if(((this.unidadsForeignKey==null||this.unidadsForeignKey.size()<=0) && this.productoConstantesFunciones.cargarid_unidadProducto)
					 || (this.esRecargarFks && this.productoConstantesFunciones.cargarid_unidadProducto)) {

					if(!this.productoSessionBean.getisBusquedaDesdeForeignKeySesionUnidad()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=UnidadConstantesFunciones.getArrayColumnasGlobalesUnidad(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalUnidad=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,UnidadConstantesFunciones.TABLENAME);

						finalQueryGlobalUnidad=Funciones.GetFinalQueryAppend(finalQueryGlobalUnidad, "");
						finalQueryGlobalUnidad+=UnidadConstantesFunciones.SFINALQUERY;

						//this.cargarCombosUnidadsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalUnidad=" WHERE " + ConstantesSql.ID + "="+productoSessionBean.getlidUnidadActual();
					}
				} else {
					finalQueryGlobalUnidad="NONE";
				}


				String finalQueryGlobalUnidadPeso="";

				if(((this.unidadpesosForeignKey==null||this.unidadpesosForeignKey.size()<=0) && this.productoConstantesFunciones.cargarid_unidad_pesoProducto)
					 || (this.esRecargarFks && this.productoConstantesFunciones.cargarid_unidad_pesoProducto)) {

					if(!this.productoSessionBean.getisBusquedaDesdeForeignKeySesionUnidadPeso()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=UnidadConstantesFunciones.getArrayColumnasGlobalesUnidad(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalUnidadPeso=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,UnidadConstantesFunciones.TABLENAME);

						finalQueryGlobalUnidadPeso=Funciones.GetFinalQueryAppend(finalQueryGlobalUnidadPeso, "");
						finalQueryGlobalUnidadPeso+=UnidadConstantesFunciones.SFINALQUERY;

						//this.cargarCombosUnidadPesosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalUnidadPeso=" WHERE " + ConstantesSql.ID + "="+productoSessionBean.getlidUnidadPesoActual();
					}
				} else {
					finalQueryGlobalUnidadPeso="NONE";
				}


				String finalQueryGlobalArancel="";

				if(((this.arancelsForeignKey==null||this.arancelsForeignKey.size()<=0) && this.productoConstantesFunciones.cargarid_arancelProducto)
					 || (this.esRecargarFks && this.productoConstantesFunciones.cargarid_arancelProducto)) {

					if(!this.productoSessionBean.getisBusquedaDesdeForeignKeySesionArancel()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=ArancelConstantesFunciones.getArrayColumnasGlobalesArancel(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalArancel=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ArancelConstantesFunciones.TABLENAME);

						finalQueryGlobalArancel=Funciones.GetFinalQueryAppend(finalQueryGlobalArancel, "");
						finalQueryGlobalArancel+=ArancelConstantesFunciones.SFINALQUERY;

						//this.cargarCombosArancelsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalArancel=" WHERE " + ConstantesSql.ID + "="+productoSessionBean.getlidArancelActual();
					}
				} else {
					finalQueryGlobalArancel="NONE";
				}


				String finalQueryGlobalCliente="";

				if(((this.clientesForeignKey==null||this.clientesForeignKey.size()<=0) && this.productoConstantesFunciones.cargarid_clienteProducto)
					 || (this.esRecargarFks && this.productoConstantesFunciones.cargarid_clienteProducto)) {

					if(!this.productoSessionBean.getisBusquedaDesdeForeignKeySesionCliente()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=ClienteConstantesFunciones.getArrayColumnasGlobalesCliente(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCliente=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ClienteConstantesFunciones.TABLENAME);

						finalQueryGlobalCliente=Funciones.GetFinalQueryAppend(finalQueryGlobalCliente, "");
						finalQueryGlobalCliente+=ClienteConstantesFunciones.SFINALQUERY;

						//this.cargarCombosClientesForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCliente=" WHERE " + ConstantesSql.ID + "="+productoSessionBean.getlidClienteActual();
					}
				} else {
					finalQueryGlobalCliente="NONE";
				}


				String finalQueryGlobalClienteProveedorDefecto="";

				if(((this.clienteproveedordefectosForeignKey==null||this.clienteproveedordefectosForeignKey.size()<=0) && this.productoConstantesFunciones.cargarid_cliente_proveedor_defectoProducto)
					 || (this.esRecargarFks && this.productoConstantesFunciones.cargarid_cliente_proveedor_defectoProducto)) {

					if(!this.productoSessionBean.getisBusquedaDesdeForeignKeySesionClienteProveedorDefecto()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=ClienteConstantesFunciones.getArrayColumnasGlobalesCliente(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalClienteProveedorDefecto=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ClienteConstantesFunciones.TABLENAME);

						finalQueryGlobalClienteProveedorDefecto=Funciones.GetFinalQueryAppend(finalQueryGlobalClienteProveedorDefecto, "");
						finalQueryGlobalClienteProveedorDefecto+=ClienteConstantesFunciones.SFINALQUERY;

						//this.cargarCombosClienteProveedorDefectosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalClienteProveedorDefecto=" WHERE " + ConstantesSql.ID + "="+productoSessionBean.getlidClienteProveedorDefectoActual();
					}
				} else {
					finalQueryGlobalClienteProveedorDefecto="NONE";
				}


				String finalQueryGlobalTipoProducto="";

				if(((this.tipoproductosForeignKey==null||this.tipoproductosForeignKey.size()<=0) && this.productoConstantesFunciones.cargarid_tipo_productoProducto)
					 || (this.esRecargarFks && this.productoConstantesFunciones.cargarid_tipo_productoProducto)) {

					if(!this.productoSessionBean.getisBusquedaDesdeForeignKeySesionTipoProducto()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoProductoConstantesFunciones.getArrayColumnasGlobalesTipoProducto(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoProducto=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoProductoConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoProducto=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoProducto, "");
						finalQueryGlobalTipoProducto+=TipoProductoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoProductosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoProducto=" WHERE " + ConstantesSql.ID + "="+productoSessionBean.getlidTipoProductoActual();
					}
				} else {
					finalQueryGlobalTipoProducto="NONE";
				}


				String finalQueryGlobalColorProducto="";

				if(((this.colorproductosForeignKey==null||this.colorproductosForeignKey.size()<=0) && this.productoConstantesFunciones.cargarid_color_productoProducto)
					 || (this.esRecargarFks && this.productoConstantesFunciones.cargarid_color_productoProducto)) {

					if(!this.productoSessionBean.getisBusquedaDesdeForeignKeySesionColorProducto()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=ColorProductoConstantesFunciones.getArrayColumnasGlobalesColorProducto(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalColorProducto=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ColorProductoConstantesFunciones.TABLENAME);

						finalQueryGlobalColorProducto=Funciones.GetFinalQueryAppend(finalQueryGlobalColorProducto, "");
						finalQueryGlobalColorProducto+=ColorProductoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosColorProductosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalColorProducto=" WHERE " + ConstantesSql.ID + "="+productoSessionBean.getlidColorProductoActual();
					}
				} else {
					finalQueryGlobalColorProducto="NONE";
				}


				String finalQueryGlobalClaseProducto="";

				if(((this.claseproductosForeignKey==null||this.claseproductosForeignKey.size()<=0) && this.productoConstantesFunciones.cargarid_clase_productoProducto)
					 || (this.esRecargarFks && this.productoConstantesFunciones.cargarid_clase_productoProducto)) {

					if(!this.productoSessionBean.getisBusquedaDesdeForeignKeySesionClaseProducto()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=ClaseProductoConstantesFunciones.getArrayColumnasGlobalesClaseProducto(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalClaseProducto=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ClaseProductoConstantesFunciones.TABLENAME);

						finalQueryGlobalClaseProducto=Funciones.GetFinalQueryAppend(finalQueryGlobalClaseProducto, "");
						finalQueryGlobalClaseProducto+=ClaseProductoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosClaseProductosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalClaseProducto=" WHERE " + ConstantesSql.ID + "="+productoSessionBean.getlidClaseProductoActual();
					}
				} else {
					finalQueryGlobalClaseProducto="NONE";
				}


				String finalQueryGlobalEfectoProducto="";

				if(((this.efectoproductosForeignKey==null||this.efectoproductosForeignKey.size()<=0) && this.productoConstantesFunciones.cargarid_efecto_productoProducto)
					 || (this.esRecargarFks && this.productoConstantesFunciones.cargarid_efecto_productoProducto)) {

					if(!this.productoSessionBean.getisBusquedaDesdeForeignKeySesionEfectoProducto()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EfectoProductoConstantesFunciones.getArrayColumnasGlobalesEfectoProducto(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEfectoProducto=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EfectoProductoConstantesFunciones.TABLENAME);

						finalQueryGlobalEfectoProducto=Funciones.GetFinalQueryAppend(finalQueryGlobalEfectoProducto, "");
						finalQueryGlobalEfectoProducto+=EfectoProductoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEfectoProductosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEfectoProducto=" WHERE " + ConstantesSql.ID + "="+productoSessionBean.getlidEfectoProductoActual();
					}
				} else {
					finalQueryGlobalEfectoProducto="NONE";
				}


				String finalQueryGlobalMarcaProducto="";

				if(((this.marcaproductosForeignKey==null||this.marcaproductosForeignKey.size()<=0) && this.productoConstantesFunciones.cargarid_marca_productoProducto)
					 || (this.esRecargarFks && this.productoConstantesFunciones.cargarid_marca_productoProducto)) {

					if(!this.productoSessionBean.getisBusquedaDesdeForeignKeySesionMarcaProducto()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=MarcaProductoConstantesFunciones.getArrayColumnasGlobalesMarcaProducto(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalMarcaProducto=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,MarcaProductoConstantesFunciones.TABLENAME);

						finalQueryGlobalMarcaProducto=Funciones.GetFinalQueryAppend(finalQueryGlobalMarcaProducto, "");
						finalQueryGlobalMarcaProducto+=MarcaProductoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosMarcaProductosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalMarcaProducto=" WHERE " + ConstantesSql.ID + "="+productoSessionBean.getlidMarcaProductoActual();
					}
				} else {
					finalQueryGlobalMarcaProducto="NONE";
				}


				String finalQueryGlobalModeloProducto="";

				if(((this.modeloproductosForeignKey==null||this.modeloproductosForeignKey.size()<=0) && this.productoConstantesFunciones.cargarid_modelo_productoProducto)
					 || (this.esRecargarFks && this.productoConstantesFunciones.cargarid_modelo_productoProducto)) {

					if(!this.productoSessionBean.getisBusquedaDesdeForeignKeySesionModeloProducto()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=ModeloProductoConstantesFunciones.getArrayColumnasGlobalesModeloProducto(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalModeloProducto=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ModeloProductoConstantesFunciones.TABLENAME);

						finalQueryGlobalModeloProducto=Funciones.GetFinalQueryAppend(finalQueryGlobalModeloProducto, "");
						finalQueryGlobalModeloProducto+=ModeloProductoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosModeloProductosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalModeloProducto=" WHERE " + ConstantesSql.ID + "="+productoSessionBean.getlidModeloProductoActual();
					}
				} else {
					finalQueryGlobalModeloProducto="NONE";
				}


				String finalQueryGlobalMaterialProducto="";

				if(((this.materialproductosForeignKey==null||this.materialproductosForeignKey.size()<=0) && this.productoConstantesFunciones.cargarid_material_productoProducto)
					 || (this.esRecargarFks && this.productoConstantesFunciones.cargarid_material_productoProducto)) {

					if(!this.productoSessionBean.getisBusquedaDesdeForeignKeySesionMaterialProducto()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=MaterialProductoConstantesFunciones.getArrayColumnasGlobalesMaterialProducto(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalMaterialProducto=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,MaterialProductoConstantesFunciones.TABLENAME);

						finalQueryGlobalMaterialProducto=Funciones.GetFinalQueryAppend(finalQueryGlobalMaterialProducto, "");
						finalQueryGlobalMaterialProducto+=MaterialProductoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosMaterialProductosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalMaterialProducto=" WHERE " + ConstantesSql.ID + "="+productoSessionBean.getlidMaterialProductoActual();
					}
				} else {
					finalQueryGlobalMaterialProducto="NONE";
				}


				String finalQueryGlobalSegmentoProducto="";

				if(((this.segmentoproductosForeignKey==null||this.segmentoproductosForeignKey.size()<=0) && this.productoConstantesFunciones.cargarid_segmento_productoProducto)
					 || (this.esRecargarFks && this.productoConstantesFunciones.cargarid_segmento_productoProducto)) {

					if(!this.productoSessionBean.getisBusquedaDesdeForeignKeySesionSegmentoProducto()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=SegmentoProductoConstantesFunciones.getArrayColumnasGlobalesSegmentoProducto(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalSegmentoProducto=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SegmentoProductoConstantesFunciones.TABLENAME);

						finalQueryGlobalSegmentoProducto=Funciones.GetFinalQueryAppend(finalQueryGlobalSegmentoProducto, "");
						finalQueryGlobalSegmentoProducto+=SegmentoProductoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosSegmentoProductosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalSegmentoProducto=" WHERE " + ConstantesSql.ID + "="+productoSessionBean.getlidSegmentoProductoActual();
					}
				} else {
					finalQueryGlobalSegmentoProducto="NONE";
				}


				String finalQueryGlobalTallaProducto="";

				if(((this.tallaproductosForeignKey==null||this.tallaproductosForeignKey.size()<=0) && this.productoConstantesFunciones.cargarid_talla_productoProducto)
					 || (this.esRecargarFks && this.productoConstantesFunciones.cargarid_talla_productoProducto)) {

					if(!this.productoSessionBean.getisBusquedaDesdeForeignKeySesionTallaProducto()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TallaProductoConstantesFunciones.getArrayColumnasGlobalesTallaProducto(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTallaProducto=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TallaProductoConstantesFunciones.TABLENAME);

						finalQueryGlobalTallaProducto=Funciones.GetFinalQueryAppend(finalQueryGlobalTallaProducto, "");
						finalQueryGlobalTallaProducto+=TallaProductoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTallaProductosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTallaProducto=" WHERE " + ConstantesSql.ID + "="+productoSessionBean.getlidTallaProductoActual();
					}
				} else {
					finalQueryGlobalTallaProducto="NONE";
				}
			
			//ARCHITECTURE			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				productoReturnGeneral=productoLogic.cargarCombosLoteForeignKeyProducto(finalQueryGlobalEmpresa,finalQueryGlobalSucursal,finalQueryGlobalLinea,finalQueryGlobalLineaGrupo,finalQueryGlobalLineaCategoria,finalQueryGlobalLineaMarca,finalQueryGlobalTipoProductoServicio,finalQueryGlobalTipoProductoServicioInven,finalQueryGlobalTipoCosteo,finalQueryGlobalUnidad,finalQueryGlobalUnidadPeso,finalQueryGlobalArancel,finalQueryGlobalCliente,finalQueryGlobalClienteProveedorDefecto,finalQueryGlobalTipoProducto,finalQueryGlobalColorProducto,finalQueryGlobalClaseProducto,finalQueryGlobalEfectoProducto,finalQueryGlobalMarcaProducto,finalQueryGlobalModeloProducto,finalQueryGlobalMaterialProducto,finalQueryGlobalSegmentoProducto,finalQueryGlobalTallaProducto);//WithConnection
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}			
			//ARCHITECTURE
			
			

			if(!finalQueryGlobalEmpresa.equals("NONE")) {
				this.empresasForeignKey=productoReturnGeneral.getempresasForeignKey();
			}

			if(!finalQueryGlobalSucursal.equals("NONE")) {
				this.sucursalsForeignKey=productoReturnGeneral.getsucursalsForeignKey();
			}

			if(!finalQueryGlobalLinea.equals("NONE")) {
				this.lineasForeignKey=productoReturnGeneral.getlineasForeignKey();
			}

			if(!finalQueryGlobalLineaGrupo.equals("NONE")) {
				this.lineagruposForeignKey=productoReturnGeneral.getlineagruposForeignKey();
			}

			if(!finalQueryGlobalLineaCategoria.equals("NONE")) {
				this.lineacategoriasForeignKey=productoReturnGeneral.getlineacategoriasForeignKey();
			}

			if(!finalQueryGlobalLineaMarca.equals("NONE")) {
				this.lineamarcasForeignKey=productoReturnGeneral.getlineamarcasForeignKey();
			}

			if(!finalQueryGlobalTipoProductoServicio.equals("NONE")) {
				this.tipoproductoserviciosForeignKey=productoReturnGeneral.gettipoproductoserviciosForeignKey();
			}

			if(!finalQueryGlobalTipoProductoServicioInven.equals("NONE")) {
				this.tipoproductoservicioinvensForeignKey=productoReturnGeneral.gettipoproductoservicioinvensForeignKey();
			}

			if(!finalQueryGlobalTipoCosteo.equals("NONE")) {
				this.tipocosteosForeignKey=productoReturnGeneral.gettipocosteosForeignKey();
			}

			if(!finalQueryGlobalUnidad.equals("NONE")) {
				this.unidadsForeignKey=productoReturnGeneral.getunidadsForeignKey();
			}

			if(!finalQueryGlobalUnidadPeso.equals("NONE")) {
				this.unidadpesosForeignKey=productoReturnGeneral.getunidadpesosForeignKey();
			}

			if(!finalQueryGlobalArancel.equals("NONE")) {
				this.arancelsForeignKey=productoReturnGeneral.getarancelsForeignKey();
			}

			if(!finalQueryGlobalCliente.equals("NONE")) {
				this.clientesForeignKey=productoReturnGeneral.getclientesForeignKey();
			}

			if(!finalQueryGlobalClienteProveedorDefecto.equals("NONE")) {
				this.clienteproveedordefectosForeignKey=productoReturnGeneral.getclienteproveedordefectosForeignKey();
			}

			if(!finalQueryGlobalTipoProducto.equals("NONE")) {
				this.tipoproductosForeignKey=productoReturnGeneral.gettipoproductosForeignKey();
			}

			if(!finalQueryGlobalColorProducto.equals("NONE")) {
				this.colorproductosForeignKey=productoReturnGeneral.getcolorproductosForeignKey();
			}

			if(!finalQueryGlobalClaseProducto.equals("NONE")) {
				this.claseproductosForeignKey=productoReturnGeneral.getclaseproductosForeignKey();
			}

			if(!finalQueryGlobalEfectoProducto.equals("NONE")) {
				this.efectoproductosForeignKey=productoReturnGeneral.getefectoproductosForeignKey();
			}

			if(!finalQueryGlobalMarcaProducto.equals("NONE")) {
				this.marcaproductosForeignKey=productoReturnGeneral.getmarcaproductosForeignKey();
			}

			if(!finalQueryGlobalModeloProducto.equals("NONE")) {
				this.modeloproductosForeignKey=productoReturnGeneral.getmodeloproductosForeignKey();
			}

			if(!finalQueryGlobalMaterialProducto.equals("NONE")) {
				this.materialproductosForeignKey=productoReturnGeneral.getmaterialproductosForeignKey();
			}

			if(!finalQueryGlobalSegmentoProducto.equals("NONE")) {
				this.segmentoproductosForeignKey=productoReturnGeneral.getsegmentoproductosForeignKey();
			}

			if(!finalQueryGlobalTallaProducto.equals("NONE")) {
				this.tallaproductosForeignKey=productoReturnGeneral.gettallaproductosForeignKey();
			}
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void addItemDefectoCombosTodosForeignKeyProducto()throws Exception {
		try {
			
			this.addItemDefectoCombosForeignKeyEmpresa();
			this.addItemDefectoCombosForeignKeySucursal();
			this.addItemDefectoCombosForeignKeyLinea();
			this.addItemDefectoCombosForeignKeyLineaGrupo();
			this.addItemDefectoCombosForeignKeyLineaCategoria();
			this.addItemDefectoCombosForeignKeyLineaMarca();
			this.addItemDefectoCombosForeignKeyTipoProductoServicio();
			this.addItemDefectoCombosForeignKeyTipoProductoServicioInven();
			this.addItemDefectoCombosForeignKeyTipoCosteo();
			this.addItemDefectoCombosForeignKeyUnidad();
			this.addItemDefectoCombosForeignKeyUnidadPeso();
			this.addItemDefectoCombosForeignKeyArancel();
			this.addItemDefectoCombosForeignKeyCliente();
			this.addItemDefectoCombosForeignKeyClienteProveedorDefecto();
			this.addItemDefectoCombosForeignKeyTipoProducto();
			this.addItemDefectoCombosForeignKeyColorProducto();
			this.addItemDefectoCombosForeignKeyClaseProducto();
			this.addItemDefectoCombosForeignKeyEfectoProducto();
			this.addItemDefectoCombosForeignKeyMarcaProducto();
			this.addItemDefectoCombosForeignKeyModeloProducto();
			this.addItemDefectoCombosForeignKeyMaterialProducto();
			this.addItemDefectoCombosForeignKeySegmentoProducto();
			this.addItemDefectoCombosForeignKeyTallaProducto();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	



	public void addItemDefectoCombosForeignKeyEmpresa()throws Exception {
		try {
			if(this.productoSessionBean==null) {
				this.productoSessionBean=new ProductoSessionBean();
			}

			if(!this.productoSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				Empresa empresa=new Empresa();
				EmpresaConstantesFunciones.setEmpresaDescripcion(empresa,Constantes.SMENSAJE_ESCOJA_OPCION);
				empresa.setId(null);

				if(!EmpresaConstantesFunciones.ExisteEnLista(this.empresasForeignKey,empresa,true)) {

					this.empresasForeignKey.add(0,empresa);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeySucursal()throws Exception {
		try {

			if(!this.productoSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				Sucursal sucursal=new Sucursal();
				SucursalConstantesFunciones.setSucursalDescripcion(sucursal,Constantes.SMENSAJE_ESCOJA_OPCION);
				sucursal.setId(null);

				if(!SucursalConstantesFunciones.ExisteEnLista(this.sucursalsForeignKey,sucursal,true)) {

					this.sucursalsForeignKey.add(0,sucursal);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyLinea()throws Exception {
		try {

			if(!this.productoSessionBean.getisBusquedaDesdeForeignKeySesionLinea()) {
				Linea linea=new Linea();
				LineaConstantesFunciones.setLineaDescripcion(linea,Constantes.SMENSAJE_ESCOJA_OPCION);
				linea.setId(null);

				if(!LineaConstantesFunciones.ExisteEnLista(this.lineasForeignKey,linea,true)) {

					this.lineasForeignKey.add(0,linea);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyLineaGrupo()throws Exception {
		try {

			if(!this.productoSessionBean.getisBusquedaDesdeForeignKeySesionLineaGrupo()) {
				Linea lineagrupo=new Linea();
				LineaConstantesFunciones.setLineaDescripcion(lineagrupo,Constantes.SMENSAJE_ESCOJA_OPCION);
				lineagrupo.setId(null);

				if(!LineaConstantesFunciones.ExisteEnLista(this.lineagruposForeignKey,lineagrupo,true)) {

					this.lineagruposForeignKey.add(0,lineagrupo);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyLineaCategoria()throws Exception {
		try {

			if(!this.productoSessionBean.getisBusquedaDesdeForeignKeySesionLineaCategoria()) {
				Linea lineacategoria=new Linea();
				LineaConstantesFunciones.setLineaDescripcion(lineacategoria,Constantes.SMENSAJE_ESCOJA_OPCION);
				lineacategoria.setId(null);

				if(!LineaConstantesFunciones.ExisteEnLista(this.lineacategoriasForeignKey,lineacategoria,true)) {

					this.lineacategoriasForeignKey.add(0,lineacategoria);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyLineaMarca()throws Exception {
		try {

			if(!this.productoSessionBean.getisBusquedaDesdeForeignKeySesionLineaMarca()) {
				Linea lineamarca=new Linea();
				LineaConstantesFunciones.setLineaDescripcion(lineamarca,Constantes.SMENSAJE_ESCOJA_OPCION);
				lineamarca.setId(null);

				if(!LineaConstantesFunciones.ExisteEnLista(this.lineamarcasForeignKey,lineamarca,true)) {

					this.lineamarcasForeignKey.add(0,lineamarca);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoProductoServicio()throws Exception {
		try {

			if(!this.productoSessionBean.getisBusquedaDesdeForeignKeySesionTipoProductoServicio()) {
				TipoProductoServicio tipoproductoservicio=new TipoProductoServicio();
				TipoProductoServicioConstantesFunciones.setTipoProductoServicioDescripcion(tipoproductoservicio,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipoproductoservicio.setId(null);

				if(!TipoProductoServicioConstantesFunciones.ExisteEnLista(this.tipoproductoserviciosForeignKey,tipoproductoservicio,true)) {

					this.tipoproductoserviciosForeignKey.add(0,tipoproductoservicio);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoProductoServicioInven()throws Exception {
		try {

			if(!this.productoSessionBean.getisBusquedaDesdeForeignKeySesionTipoProductoServicioInven()) {
				TipoProductoServicioInven tipoproductoservicioinven=new TipoProductoServicioInven();
				TipoProductoServicioInvenConstantesFunciones.setTipoProductoServicioInvenDescripcion(tipoproductoservicioinven,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipoproductoservicioinven.setId(null);

				if(!TipoProductoServicioInvenConstantesFunciones.ExisteEnLista(this.tipoproductoservicioinvensForeignKey,tipoproductoservicioinven,true)) {

					this.tipoproductoservicioinvensForeignKey.add(0,tipoproductoservicioinven);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoCosteo()throws Exception {
		try {

			if(!this.productoSessionBean.getisBusquedaDesdeForeignKeySesionTipoCosteo()) {
				TipoCosteo tipocosteo=new TipoCosteo();
				TipoCosteoConstantesFunciones.setTipoCosteoDescripcion(tipocosteo,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipocosteo.setId(null);

				if(!TipoCosteoConstantesFunciones.ExisteEnLista(this.tipocosteosForeignKey,tipocosteo,true)) {

					this.tipocosteosForeignKey.add(0,tipocosteo);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyUnidad()throws Exception {
		try {

			if(!this.productoSessionBean.getisBusquedaDesdeForeignKeySesionUnidad()) {
				Unidad unidad=new Unidad();
				UnidadConstantesFunciones.setUnidadDescripcion(unidad,Constantes.SMENSAJE_ESCOJA_OPCION);
				unidad.setId(null);

				if(!UnidadConstantesFunciones.ExisteEnLista(this.unidadsForeignKey,unidad,true)) {

					this.unidadsForeignKey.add(0,unidad);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyUnidadPeso()throws Exception {
		try {

			if(!this.productoSessionBean.getisBusquedaDesdeForeignKeySesionUnidadPeso()) {
				Unidad unidadpeso=new Unidad();
				UnidadConstantesFunciones.setUnidadDescripcion(unidadpeso,Constantes.SMENSAJE_ESCOJA_OPCION);
				unidadpeso.setId(null);

				if(!UnidadConstantesFunciones.ExisteEnLista(this.unidadpesosForeignKey,unidadpeso,true)) {

					this.unidadpesosForeignKey.add(0,unidadpeso);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyArancel()throws Exception {
		try {

			if(!this.productoSessionBean.getisBusquedaDesdeForeignKeySesionArancel()) {
				Arancel arancel=new Arancel();
				ArancelConstantesFunciones.setArancelDescripcion(arancel,Constantes.SMENSAJE_ESCOJA_OPCION);
				arancel.setId(null);

				if(!ArancelConstantesFunciones.ExisteEnLista(this.arancelsForeignKey,arancel,true)) {

					this.arancelsForeignKey.add(0,arancel);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCliente()throws Exception {
		try {

			if(!this.productoSessionBean.getisBusquedaDesdeForeignKeySesionCliente()) {
				Cliente cliente=new Cliente();
				ClienteConstantesFunciones.setClienteDescripcion(cliente,Constantes.SMENSAJE_ESCOJA_OPCION);
				cliente.setId(null);

				if(!ClienteConstantesFunciones.ExisteEnLista(this.clientesForeignKey,cliente,true)) {

					this.clientesForeignKey.add(0,cliente);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyClienteProveedorDefecto()throws Exception {
		try {

			if(!this.productoSessionBean.getisBusquedaDesdeForeignKeySesionClienteProveedorDefecto()) {
				Cliente clienteproveedordefecto=new Cliente();
				ClienteConstantesFunciones.setClienteDescripcion(clienteproveedordefecto,Constantes.SMENSAJE_ESCOJA_OPCION);
				clienteproveedordefecto.setId(null);

				if(!ClienteConstantesFunciones.ExisteEnLista(this.clienteproveedordefectosForeignKey,clienteproveedordefecto,true)) {

					this.clienteproveedordefectosForeignKey.add(0,clienteproveedordefecto);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoProducto()throws Exception {
		try {

			if(!this.productoSessionBean.getisBusquedaDesdeForeignKeySesionTipoProducto()) {
				TipoProducto tipoproducto=new TipoProducto();
				TipoProductoConstantesFunciones.setTipoProductoDescripcion(tipoproducto,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipoproducto.setId(null);

				if(!TipoProductoConstantesFunciones.ExisteEnLista(this.tipoproductosForeignKey,tipoproducto,true)) {

					this.tipoproductosForeignKey.add(0,tipoproducto);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyColorProducto()throws Exception {
		try {

			if(!this.productoSessionBean.getisBusquedaDesdeForeignKeySesionColorProducto()) {
				ColorProducto colorproducto=new ColorProducto();
				ColorProductoConstantesFunciones.setColorProductoDescripcion(colorproducto,Constantes.SMENSAJE_ESCOJA_OPCION);
				colorproducto.setId(null);

				if(!ColorProductoConstantesFunciones.ExisteEnLista(this.colorproductosForeignKey,colorproducto,true)) {

					this.colorproductosForeignKey.add(0,colorproducto);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyClaseProducto()throws Exception {
		try {

			if(!this.productoSessionBean.getisBusquedaDesdeForeignKeySesionClaseProducto()) {
				ClaseProducto claseproducto=new ClaseProducto();
				ClaseProductoConstantesFunciones.setClaseProductoDescripcion(claseproducto,Constantes.SMENSAJE_ESCOJA_OPCION);
				claseproducto.setId(null);

				if(!ClaseProductoConstantesFunciones.ExisteEnLista(this.claseproductosForeignKey,claseproducto,true)) {

					this.claseproductosForeignKey.add(0,claseproducto);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEfectoProducto()throws Exception {
		try {

			if(!this.productoSessionBean.getisBusquedaDesdeForeignKeySesionEfectoProducto()) {
				EfectoProducto efectoproducto=new EfectoProducto();
				EfectoProductoConstantesFunciones.setEfectoProductoDescripcion(efectoproducto,Constantes.SMENSAJE_ESCOJA_OPCION);
				efectoproducto.setId(null);

				if(!EfectoProductoConstantesFunciones.ExisteEnLista(this.efectoproductosForeignKey,efectoproducto,true)) {

					this.efectoproductosForeignKey.add(0,efectoproducto);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyMarcaProducto()throws Exception {
		try {

			if(!this.productoSessionBean.getisBusquedaDesdeForeignKeySesionMarcaProducto()) {
				MarcaProducto marcaproducto=new MarcaProducto();
				MarcaProductoConstantesFunciones.setMarcaProductoDescripcion(marcaproducto,Constantes.SMENSAJE_ESCOJA_OPCION);
				marcaproducto.setId(null);

				if(!MarcaProductoConstantesFunciones.ExisteEnLista(this.marcaproductosForeignKey,marcaproducto,true)) {

					this.marcaproductosForeignKey.add(0,marcaproducto);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyModeloProducto()throws Exception {
		try {

			if(!this.productoSessionBean.getisBusquedaDesdeForeignKeySesionModeloProducto()) {
				ModeloProducto modeloproducto=new ModeloProducto();
				ModeloProductoConstantesFunciones.setModeloProductoDescripcion(modeloproducto,Constantes.SMENSAJE_ESCOJA_OPCION);
				modeloproducto.setId(null);

				if(!ModeloProductoConstantesFunciones.ExisteEnLista(this.modeloproductosForeignKey,modeloproducto,true)) {

					this.modeloproductosForeignKey.add(0,modeloproducto);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyMaterialProducto()throws Exception {
		try {

			if(!this.productoSessionBean.getisBusquedaDesdeForeignKeySesionMaterialProducto()) {
				MaterialProducto materialproducto=new MaterialProducto();
				MaterialProductoConstantesFunciones.setMaterialProductoDescripcion(materialproducto,Constantes.SMENSAJE_ESCOJA_OPCION);
				materialproducto.setId(null);

				if(!MaterialProductoConstantesFunciones.ExisteEnLista(this.materialproductosForeignKey,materialproducto,true)) {

					this.materialproductosForeignKey.add(0,materialproducto);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeySegmentoProducto()throws Exception {
		try {

			if(!this.productoSessionBean.getisBusquedaDesdeForeignKeySesionSegmentoProducto()) {
				SegmentoProducto segmentoproducto=new SegmentoProducto();
				SegmentoProductoConstantesFunciones.setSegmentoProductoDescripcion(segmentoproducto,Constantes.SMENSAJE_ESCOJA_OPCION);
				segmentoproducto.setId(null);

				if(!SegmentoProductoConstantesFunciones.ExisteEnLista(this.segmentoproductosForeignKey,segmentoproducto,true)) {

					this.segmentoproductosForeignKey.add(0,segmentoproducto);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTallaProducto()throws Exception {
		try {

			if(!this.productoSessionBean.getisBusquedaDesdeForeignKeySesionTallaProducto()) {
				TallaProducto tallaproducto=new TallaProducto();
				TallaProductoConstantesFunciones.setTallaProductoDescripcion(tallaproducto,Constantes.SMENSAJE_ESCOJA_OPCION);
				tallaproducto.setId(null);

				if(!TallaProductoConstantesFunciones.ExisteEnLista(this.tallaproductosForeignKey,tallaproducto,true)) {

					this.tallaproductosForeignKey.add(0,tallaproducto);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void initActionsCombosTodosForeignKeyProducto()throws Exception {
		try {
			
			this.initActionsCombosForeignKeyLinea("Todos");
			this.initActionsCombosForeignKeyLineaGrupo("Todos");
			this.initActionsCombosForeignKeyLineaCategoria("Todos");
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void initActionsCombosTodosForeignKeyProducto(String sFormularioTipoBusqueda)throws Exception {
		try {
			
			this.initActionsCombosForeignKeyLinea(sFormularioTipoBusqueda);
			this.initActionsCombosForeignKeyLineaGrupo(sFormularioTipoBusqueda);
			this.initActionsCombosForeignKeyLineaCategoria(sFormularioTipoBusqueda);
		} catch(Exception e) {
			throw e;
		}		
	}
	
	



	@SuppressWarnings("rawtypes")
	public void procesarActionsCombosForeignKeyLinea(JComboBox jComboBoxLineaGenerico,String sFormularioTipoBusqueda)throws Exception {
		try {
			String sFinalQueryCombo="";
			Linea lineaLocal=(Linea)jComboBoxLineaGenerico.getSelectedItem();

			if(lineaLocal!=null  && lineaLocal.getId()!=null  && lineaLocal.getId()>0) {
				sFinalQueryCombo="  WHERE  id_linea="+lineaLocal.getId();
			}
			//REDEFINE

			//COPIA PARA VENTANA BUSQUEDA
			this.sFinalQueryComboLineaGrupo=sFinalQueryCombo;

			this.lineagruposForeignKey=new ArrayList<Linea>();
			this.cargarCombosForeignKeyLineaGrupo(true,false,false,sFinalQueryCombo,sFormularioTipoBusqueda);
		} catch(Exception e) {
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void procesarActionsCombosForeignKeyLineaGrupo(JComboBox jComboBoxLineaGenerico,String sFormularioTipoBusqueda)throws Exception {
		try {
			String sFinalQueryCombo="";
			Linea lineaLocal=(Linea)jComboBoxLineaGenerico.getSelectedItem();

			if(lineaLocal!=null  && lineaLocal.getId()!=null  && lineaLocal.getId()>0) {
				sFinalQueryCombo="  WHERE  id_linea="+lineaLocal.getId();
			}
			//REDEFINE

			//COPIA PARA VENTANA BUSQUEDA
			this.sFinalQueryComboLineaCategoria=sFinalQueryCombo;

			this.lineacategoriasForeignKey=new ArrayList<Linea>();
			this.cargarCombosForeignKeyLineaCategoria(true,false,false,sFinalQueryCombo,sFormularioTipoBusqueda);
		} catch(Exception e) {
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void procesarActionsCombosForeignKeyLineaCategoria(JComboBox jComboBoxLineaGenerico,String sFormularioTipoBusqueda)throws Exception {
		try {
			String sFinalQueryCombo="";
			Linea lineaLocal=(Linea)jComboBoxLineaGenerico.getSelectedItem();

			if(lineaLocal!=null  && lineaLocal.getId()!=null  && lineaLocal.getId()>0) {
				sFinalQueryCombo="  WHERE  id_linea="+lineaLocal.getId();
			}
			//REDEFINE

			//COPIA PARA VENTANA BUSQUEDA
			this.sFinalQueryComboLineaMarca=sFinalQueryCombo;

			this.lineamarcasForeignKey=new ArrayList<Linea>();
			this.cargarCombosForeignKeyLineaMarca(true,false,false,sFinalQueryCombo,sFormularioTipoBusqueda);
		} catch(Exception e) {
			throw e;
		}
	}
	
	



	public void initActionsCombosForeignKeyLinea(String sFormularioTipoBusqueda)throws Exception {
		try {
			if(sFormularioTipoBusqueda.equals("Todos") || sFormularioTipoBusqueda.equals("Formulario")) {
				if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
					if(this.jInternalFrameDetalleFormProducto!=null) {
						this.jInternalFrameDetalleFormProducto.jComboBoxid_lineaProducto.addItemListener(new ComboBoxItemListener(this,"id_lineaProducto"));
						this.jInternalFrameDetalleFormProducto.jComboBoxid_lineaProducto.addFocusListener(new ComboBoxFocusListener(this,"id_lineaProducto"));
					}
				} else {
					if(this.jInternalFrameDetalleFormProducto!=null) {
						this.jInternalFrameDetalleFormProducto.jComboBoxid_lineaProducto.addActionListener(new ComboBoxActionListener(this,"id_lineaProducto"));
						this.jInternalFrameDetalleFormProducto.jComboBoxid_lineaProducto.addFocusListener(new ComboBoxFocusListener(this,"id_lineaProducto"));
					}
				}
			}

			if(sFormularioTipoBusqueda.equals("Todos")) {

				if(!this.conCargarMinimo) {
				
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						this.jComboBoxid_lineaFK_IdLineaProducto.addItemListener(new ComboBoxItemListener(this,"jComboBoxid_lineaFK_IdLineaProducto"));

						this.jComboBoxid_lineaFK_IdLineaProducto.addFocusListener(new ComboBoxFocusListener(this,"jComboBoxid_lineaFK_IdLineaProducto"));

					} else {
						this.jComboBoxid_lineaFK_IdLineaProducto.addActionListener(new ComboBoxActionListener(this,"jComboBoxid_lineaFK_IdLineaProducto"));

						this.jComboBoxid_lineaFK_IdLineaProducto.addFocusListener(new ComboBoxFocusListener(this,"jComboBoxid_lineaFK_IdLineaProducto"));

					}
			
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void initActionsCombosForeignKeyLineaGrupo(String sFormularioTipoBusqueda)throws Exception {
		try {
			if(sFormularioTipoBusqueda.equals("Todos") || sFormularioTipoBusqueda.equals("Formulario")) {
				if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
					if(this.jInternalFrameDetalleFormProducto!=null) {
						this.jInternalFrameDetalleFormProducto.jComboBoxid_linea_grupoProducto.addItemListener(new ComboBoxItemListener(this,"id_linea_grupoProducto"));
						this.jInternalFrameDetalleFormProducto.jComboBoxid_linea_grupoProducto.addFocusListener(new ComboBoxFocusListener(this,"id_linea_grupoProducto"));
					}
				} else {
					if(this.jInternalFrameDetalleFormProducto!=null) {
						this.jInternalFrameDetalleFormProducto.jComboBoxid_linea_grupoProducto.addActionListener(new ComboBoxActionListener(this,"id_linea_grupoProducto"));
						this.jInternalFrameDetalleFormProducto.jComboBoxid_linea_grupoProducto.addFocusListener(new ComboBoxFocusListener(this,"id_linea_grupoProducto"));
					}
				}
			}

			if(sFormularioTipoBusqueda.equals("Todos")) {

				if(!this.conCargarMinimo) {
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void initActionsCombosForeignKeyLineaCategoria(String sFormularioTipoBusqueda)throws Exception {
		try {
			if(sFormularioTipoBusqueda.equals("Todos") || sFormularioTipoBusqueda.equals("Formulario")) {
				if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
					if(this.jInternalFrameDetalleFormProducto!=null) {
						this.jInternalFrameDetalleFormProducto.jComboBoxid_linea_categoriaProducto.addItemListener(new ComboBoxItemListener(this,"id_linea_categoriaProducto"));
						this.jInternalFrameDetalleFormProducto.jComboBoxid_linea_categoriaProducto.addFocusListener(new ComboBoxFocusListener(this,"id_linea_categoriaProducto"));
					}
				} else {
					if(this.jInternalFrameDetalleFormProducto!=null) {
						this.jInternalFrameDetalleFormProducto.jComboBoxid_linea_categoriaProducto.addActionListener(new ComboBoxActionListener(this,"id_linea_categoriaProducto"));
						this.jInternalFrameDetalleFormProducto.jComboBoxid_linea_categoriaProducto.addFocusListener(new ComboBoxFocusListener(this,"id_linea_categoriaProducto"));
					}
				}
			}

			if(sFormularioTipoBusqueda.equals("Todos")) {

				if(!this.conCargarMinimo) {
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesGlobalesCombosForeignKeyProducto()throws Exception {	
		try {
			if(this.parametroGeneralUsuario!=null && this.parametroGeneralUsuario.getId()>0) {
			
				this.setActualEmpresaForeignKey(this.parametroGeneralUsuario.getid_empresa(),false,"Formulario");
				this.setActualSucursalForeignKey(this.parametroGeneralUsuario.getid_sucursal(),false,"Formulario");
			
			
			}
			
			//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
			this.setVariablesGlobalesAuxiliaresCombosForeignKeyProducto();
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToFormularioForeignKeyProducto(Producto producto)throws Exception {	
		try {
			
			this.setActualLineaForeignKey(producto.getid_linea(),false,"Formulario");
			this.setActualLineaGrupoForeignKey(producto.getid_linea_grupo(),false,"Formulario");
			this.setActualLineaCategoriaForeignKey(producto.getid_linea_categoria(),false,"Formulario");
			this.setActualLineaMarcaForeignKey(producto.getid_linea_marca(),false,"Formulario");
			this.setActualTipoProductoServicioForeignKey(producto.getid_tipo_producto_servicio(),false,"Formulario");
			this.setActualTipoProductoServicioInvenForeignKey(producto.getid_tipo_producto_servicio_inven(),false,"Formulario");
			this.setActualTipoCosteoForeignKey(producto.getid_tipo_costeo(),false,"Formulario");
			this.setActualUnidadForeignKey(producto.getid_unidad(),false,"Formulario");
			this.setActualUnidadPesoForeignKey(producto.getid_unidad_peso(),false,"Formulario");
			this.setActualArancelForeignKey(producto.getid_arancel(),false,"Formulario");
			this.setActualClienteForeignKey(producto.getid_cliente(),false,"Formulario");
			this.setActualClienteProveedorDefectoForeignKey(producto.getid_cliente_proveedor_defecto(),false,"Formulario");
			this.setActualTipoProductoForeignKey(producto.getid_tipo_producto(),false,"Formulario");
			this.setActualColorProductoForeignKey(producto.getid_color_producto(),false,"Formulario");
			this.setActualClaseProductoForeignKey(producto.getid_clase_producto(),false,"Formulario");
			this.setActualEfectoProductoForeignKey(producto.getid_efecto_producto(),false,"Formulario");
			this.setActualMarcaProductoForeignKey(producto.getid_marca_producto(),false,"Formulario");
			this.setActualModeloProductoForeignKey(producto.getid_modelo_producto(),false,"Formulario");
			this.setActualMaterialProductoForeignKey(producto.getid_material_producto(),false,"Formulario");
			this.setActualSegmentoProductoForeignKey(producto.getid_segmento_producto(),false,"Formulario");
			this.setActualTallaProductoForeignKey(producto.getid_talla_producto(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToListasForeignKeyProducto(Producto producto,String sTipoEvento)throws Exception {	
		try {
			
			

				if(producto.getCliente()!=null && !sTipoEvento.equals("id_clienteProducto")) { //sTipoEvento Evita Bucle Infinito

					this.clientesForeignKey=new ArrayList<Cliente>();
					this.clientesForeignKey.add(producto.getCliente());

					this.addItemDefectoCombosForeignKeyCliente();
					this.cargarCombosFrameClientesForeignKey("Todos");
				}

				if(producto.getClienteProveedorDefecto()!=null && !sTipoEvento.equals("id_cliente_proveedor_defectoProducto")) { //sTipoEvento Evita Bucle Infinito

					this.clienteproveedordefectosForeignKey=new ArrayList<Cliente>();
					this.clienteproveedordefectosForeignKey.add(producto.getClienteProveedorDefecto());

					this.addItemDefectoCombosForeignKeyClienteProveedorDefecto();
					this.cargarCombosFrameClienteProveedorDefectosForeignKey("Todos");
				}
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	/*
	public void setVariablesCombosFromBeanForeignKeyProducto()throws Exception {	
		try {
			
			this.setActualLineaForeignKey(this.productoConstantesFunciones.getid_linea(),false,"Formulario");
			this.setActualLineaGrupoForeignKey(this.productoConstantesFunciones.getid_linea_grupo(),false,"Formulario");
			this.setActualLineaCategoriaForeignKey(this.productoConstantesFunciones.getid_linea_categoria(),false,"Formulario");
			this.setActualLineaMarcaForeignKey(this.productoConstantesFunciones.getid_linea_marca(),false,"Formulario");
			this.setActualTipoProductoServicioForeignKey(this.productoConstantesFunciones.getid_tipo_producto_servicio(),false,"Formulario");
			this.setActualTipoProductoServicioInvenForeignKey(this.productoConstantesFunciones.getid_tipo_producto_servicio_inven(),false,"Formulario");
			this.setActualTipoCosteoForeignKey(this.productoConstantesFunciones.getid_tipo_costeo(),false,"Formulario");
			this.setActualUnidadForeignKey(this.productoConstantesFunciones.getid_unidad(),false,"Formulario");
			this.setActualUnidadPesoForeignKey(this.productoConstantesFunciones.getid_unidad_peso(),false,"Formulario");
			this.setActualArancelForeignKey(this.productoConstantesFunciones.getid_arancel(),false,"Formulario");
			this.setActualClienteForeignKey(this.productoConstantesFunciones.getid_cliente(),false,"Formulario");
			this.setActualClienteProveedorDefectoForeignKey(this.productoConstantesFunciones.getid_cliente_proveedor_defecto(),false,"Formulario");
			this.setActualTipoProductoForeignKey(this.productoConstantesFunciones.getid_tipo_producto(),false,"Formulario");
			this.setActualColorProductoForeignKey(this.productoConstantesFunciones.getid_color_producto(),false,"Formulario");
			this.setActualClaseProductoForeignKey(this.productoConstantesFunciones.getid_clase_producto(),false,"Formulario");
			this.setActualEfectoProductoForeignKey(this.productoConstantesFunciones.getid_efecto_producto(),false,"Formulario");
			this.setActualMarcaProductoForeignKey(this.productoConstantesFunciones.getid_marca_producto(),false,"Formulario");
			this.setActualModeloProductoForeignKey(this.productoConstantesFunciones.getid_modelo_producto(),false,"Formulario");
			this.setActualMaterialProductoForeignKey(this.productoConstantesFunciones.getid_material_producto(),false,"Formulario");
			this.setActualSegmentoProductoForeignKey(this.productoConstantesFunciones.getid_segmento_producto(),false,"Formulario");
			this.setActualTallaProductoForeignKey(this.productoConstantesFunciones.getid_talla_producto(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	*/
	
	public void setVariablesGlobalesAuxiliaresCombosForeignKeyProducto()throws Exception {	
		try {
			
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesDefaultCombosForeignKeyProducto()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesParametroCombosForeignKeyProducto()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void cargarCombosParametroProducto()throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			//this.cargarDatosCliente();
			
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
		
	public void cargarCombosFrameForeignKeyProducto()throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey("Todos");
			this.cargarCombosFrameSucursalsForeignKey("Todos");
			this.cargarCombosFrameLineasForeignKey("Todos");
			this.cargarCombosFrameLineaGruposForeignKey("Todos");
			this.cargarCombosFrameLineaCategoriasForeignKey("Todos");
			this.cargarCombosFrameLineaMarcasForeignKey("Todos");
			this.cargarCombosFrameTipoProductoServiciosForeignKey("Todos");
			this.cargarCombosFrameTipoProductoServicioInvensForeignKey("Todos");
			this.cargarCombosFrameTipoCosteosForeignKey("Todos");
			this.cargarCombosFrameUnidadsForeignKey("Todos");
			this.cargarCombosFrameUnidadPesosForeignKey("Todos");
			this.cargarCombosFrameArancelsForeignKey("Todos");
			this.cargarCombosFrameClientesForeignKey("Todos");
			this.cargarCombosFrameClienteProveedorDefectosForeignKey("Todos");
			this.cargarCombosFrameTipoProductosForeignKey("Todos");
			this.cargarCombosFrameColorProductosForeignKey("Todos");
			this.cargarCombosFrameClaseProductosForeignKey("Todos");
			this.cargarCombosFrameEfectoProductosForeignKey("Todos");
			this.cargarCombosFrameMarcaProductosForeignKey("Todos");
			this.cargarCombosFrameModeloProductosForeignKey("Todos");
			this.cargarCombosFrameMaterialProductosForeignKey("Todos");
			this.cargarCombosFrameSegmentoProductosForeignKey("Todos");
			this.cargarCombosFrameTallaProductosForeignKey("Todos");

		} catch(Exception e) {
			throw e;
		}		
	}		
	
	public void cargarCombosFrameForeignKeyProducto(String sFormularioTipoBusqueda)throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameSucursalsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameLineasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameLineaGruposForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameLineaCategoriasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameLineaMarcasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoProductoServiciosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoProductoServicioInvensForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoCosteosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameUnidadsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameUnidadPesosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameArancelsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameClientesForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameClienteProveedorDefectosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoProductosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameColorProductosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameClaseProductosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEfectoProductosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameMarcaProductosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameModeloProductosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameMaterialProductosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameSegmentoProductosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTallaProductosForeignKey(sFormularioTipoBusqueda);

		} catch(Exception e) {
			throw e;
		}		
	}	
	
	public void setItemDefectoCombosForeignKeyProducto()throws Exception {
		try {
			



			if(this.jInternalFrameDetalleFormProducto.jComboBoxid_empresaProducto!=null && this.jInternalFrameDetalleFormProducto.jComboBoxid_empresaProducto.getItemCount()>0) {
				this.jInternalFrameDetalleFormProducto.jComboBoxid_empresaProducto.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormProducto.jComboBoxid_sucursalProducto!=null && this.jInternalFrameDetalleFormProducto.jComboBoxid_sucursalProducto.getItemCount()>0) {
				this.jInternalFrameDetalleFormProducto.jComboBoxid_sucursalProducto.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormProducto.jComboBoxid_lineaProducto!=null && this.jInternalFrameDetalleFormProducto.jComboBoxid_lineaProducto.getItemCount()>0) {
				this.jInternalFrameDetalleFormProducto.jComboBoxid_lineaProducto.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormProducto.jComboBoxid_linea_grupoProducto!=null && this.jInternalFrameDetalleFormProducto.jComboBoxid_linea_grupoProducto.getItemCount()>0) {
				this.jInternalFrameDetalleFormProducto.jComboBoxid_linea_grupoProducto.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormProducto.jComboBoxid_linea_categoriaProducto!=null && this.jInternalFrameDetalleFormProducto.jComboBoxid_linea_categoriaProducto.getItemCount()>0) {
				this.jInternalFrameDetalleFormProducto.jComboBoxid_linea_categoriaProducto.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormProducto.jComboBoxid_linea_marcaProducto!=null && this.jInternalFrameDetalleFormProducto.jComboBoxid_linea_marcaProducto.getItemCount()>0) {
				this.jInternalFrameDetalleFormProducto.jComboBoxid_linea_marcaProducto.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormProducto.jComboBoxid_tipo_producto_servicioProducto!=null && this.jInternalFrameDetalleFormProducto.jComboBoxid_tipo_producto_servicioProducto.getItemCount()>0) {
				this.jInternalFrameDetalleFormProducto.jComboBoxid_tipo_producto_servicioProducto.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormProducto.jComboBoxid_tipo_producto_servicio_invenProducto!=null && this.jInternalFrameDetalleFormProducto.jComboBoxid_tipo_producto_servicio_invenProducto.getItemCount()>0) {
				this.jInternalFrameDetalleFormProducto.jComboBoxid_tipo_producto_servicio_invenProducto.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormProducto.jComboBoxid_tipo_costeoProducto!=null && this.jInternalFrameDetalleFormProducto.jComboBoxid_tipo_costeoProducto.getItemCount()>0) {
				this.jInternalFrameDetalleFormProducto.jComboBoxid_tipo_costeoProducto.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormProducto.jComboBoxid_unidadProducto!=null && this.jInternalFrameDetalleFormProducto.jComboBoxid_unidadProducto.getItemCount()>0) {
				this.jInternalFrameDetalleFormProducto.jComboBoxid_unidadProducto.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormProducto.jComboBoxid_unidad_pesoProducto!=null && this.jInternalFrameDetalleFormProducto.jComboBoxid_unidad_pesoProducto.getItemCount()>0) {
				this.jInternalFrameDetalleFormProducto.jComboBoxid_unidad_pesoProducto.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormProducto.jComboBoxid_arancelProducto!=null && this.jInternalFrameDetalleFormProducto.jComboBoxid_arancelProducto.getItemCount()>0) {
				this.jInternalFrameDetalleFormProducto.jComboBoxid_arancelProducto.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormProducto.jComboBoxid_clienteProducto!=null && this.jInternalFrameDetalleFormProducto.jComboBoxid_clienteProducto.getItemCount()>0) {
				this.jInternalFrameDetalleFormProducto.jComboBoxid_clienteProducto.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormProducto.jComboBoxid_cliente_proveedor_defectoProducto!=null && this.jInternalFrameDetalleFormProducto.jComboBoxid_cliente_proveedor_defectoProducto.getItemCount()>0) {
				this.jInternalFrameDetalleFormProducto.jComboBoxid_cliente_proveedor_defectoProducto.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormProducto.jComboBoxid_tipo_productoProducto!=null && this.jInternalFrameDetalleFormProducto.jComboBoxid_tipo_productoProducto.getItemCount()>0) {
				this.jInternalFrameDetalleFormProducto.jComboBoxid_tipo_productoProducto.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormProducto.jComboBoxid_color_productoProducto!=null && this.jInternalFrameDetalleFormProducto.jComboBoxid_color_productoProducto.getItemCount()>0) {
				this.jInternalFrameDetalleFormProducto.jComboBoxid_color_productoProducto.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormProducto.jComboBoxid_clase_productoProducto!=null && this.jInternalFrameDetalleFormProducto.jComboBoxid_clase_productoProducto.getItemCount()>0) {
				this.jInternalFrameDetalleFormProducto.jComboBoxid_clase_productoProducto.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormProducto.jComboBoxid_efecto_productoProducto!=null && this.jInternalFrameDetalleFormProducto.jComboBoxid_efecto_productoProducto.getItemCount()>0) {
				this.jInternalFrameDetalleFormProducto.jComboBoxid_efecto_productoProducto.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormProducto.jComboBoxid_marca_productoProducto!=null && this.jInternalFrameDetalleFormProducto.jComboBoxid_marca_productoProducto.getItemCount()>0) {
				this.jInternalFrameDetalleFormProducto.jComboBoxid_marca_productoProducto.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormProducto.jComboBoxid_modelo_productoProducto!=null && this.jInternalFrameDetalleFormProducto.jComboBoxid_modelo_productoProducto.getItemCount()>0) {
				this.jInternalFrameDetalleFormProducto.jComboBoxid_modelo_productoProducto.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormProducto.jComboBoxid_material_productoProducto!=null && this.jInternalFrameDetalleFormProducto.jComboBoxid_material_productoProducto.getItemCount()>0) {
				this.jInternalFrameDetalleFormProducto.jComboBoxid_material_productoProducto.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormProducto.jComboBoxid_segmento_productoProducto!=null && this.jInternalFrameDetalleFormProducto.jComboBoxid_segmento_productoProducto.getItemCount()>0) {
				this.jInternalFrameDetalleFormProducto.jComboBoxid_segmento_productoProducto.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormProducto.jComboBoxid_talla_productoProducto!=null && this.jInternalFrameDetalleFormProducto.jComboBoxid_talla_productoProducto.getItemCount()>0) {
				this.jInternalFrameDetalleFormProducto.jComboBoxid_talla_productoProducto.setSelectedIndex(0);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	





	public void recargarFormProductoLinea(JComboBox<?> jComboBoxGenericoLinea,String sFormularioTipoBusqueda) throws Exception {

		this.recargarFormProductoid_linea_grupo(jComboBoxGenericoLinea,sFormularioTipoBusqueda,"Linea",false);
	}

	public void recargarFormProductoLineaGrupo(JComboBox<?> jComboBoxGenericoLinea,String sFormularioTipoBusqueda) throws Exception {

		this.recargarFormProductoid_linea_categoria(jComboBoxGenericoLinea,sFormularioTipoBusqueda,"LineaGrupo",false);
	}

	public void recargarFormProductoLineaCategoria(JComboBox<?> jComboBoxGenericoLinea,String sFormularioTipoBusqueda) throws Exception {

		this.recargarFormProductoid_linea_marca(jComboBoxGenericoLinea,sFormularioTipoBusqueda,"LineaCategoria",false);
	}




































	
	



	public void recargarFormProductoid_linea_grupo(JComboBox<?> jComboBoxGenericoLinea,String sFormularioTipoBusqueda,String sTipoComboOrigen,Boolean conIrServidorAplicacion) throws Exception {
		try {

			String sFinalQuery="";

			if(sTipoComboOrigen.equals("Linea")){
				this.setActualParaGuardarLineaForeignKey(this.producto,jComboBoxGenericoLinea);
			}

			if(this.producto.getid_linea()!=null && this.producto.getid_linea()!=0L) {
				sFinalQuery+="  WHERE  id_linea="+this.producto.getid_linea();
			} else {
				sFinalQuery+="  WHERE  id_linea=-1";
			}



			//BUCLE RECURSIVO
			this.setActualLineaGrupoForeignKey(this.producto.getid_linea(),true,sFormularioTipoBusqueda);

			this.cargarCombosLineaGruposForeignKeyLista(sFinalQuery);

			this.cargarCombosFrameLineaGruposForeignKey(sFormularioTipoBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}



	public void recargarFormProductoid_linea_categoria(JComboBox<?> jComboBoxGenericoLinea,String sFormularioTipoBusqueda,String sTipoComboOrigen,Boolean conIrServidorAplicacion) throws Exception {
		try {

			String sFinalQuery="";

			if(sTipoComboOrigen.equals("LineaGrupo")){
				this.setActualParaGuardarLineaGrupoForeignKey(this.producto,jComboBoxGenericoLinea);
			}

			if(this.producto.getid_linea_grupo()!=null && this.producto.getid_linea_grupo()!=0L) {
				sFinalQuery+="  WHERE  id_linea="+this.producto.getid_linea_grupo();
			} else {
				sFinalQuery+="  WHERE  id_linea=-1";
			}



			//BUCLE RECURSIVO
			this.setActualLineaCategoriaForeignKey(this.producto.getid_linea_grupo(),true,sFormularioTipoBusqueda);

			this.cargarCombosLineaCategoriasForeignKeyLista(sFinalQuery);

			this.cargarCombosFrameLineaCategoriasForeignKey(sFormularioTipoBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}



	public void recargarFormProductoid_linea_marca(JComboBox<?> jComboBoxGenericoLinea,String sFormularioTipoBusqueda,String sTipoComboOrigen,Boolean conIrServidorAplicacion) throws Exception {
		try {

			String sFinalQuery="";

			if(sTipoComboOrigen.equals("LineaCategoria")){
				this.setActualParaGuardarLineaCategoriaForeignKey(this.producto,jComboBoxGenericoLinea);
			}

			if(this.producto.getid_linea_categoria()!=null && this.producto.getid_linea_categoria()!=0L) {
				sFinalQuery+="  WHERE  id_linea="+this.producto.getid_linea_categoria();
			} else {
				sFinalQuery+="  WHERE  id_linea=-1";
			}



			//BUCLE RECURSIVO
			this.setActualLineaMarcaForeignKey(this.producto.getid_linea_categoria(),true,sFormularioTipoBusqueda);

			this.cargarCombosLineaMarcasForeignKeyLista(sFinalQuery);

			this.cargarCombosFrameLineaMarcasForeignKey(sFormularioTipoBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public ProductoBeanSwingJInternalFrame() throws Exception {
		super(false,PaginaTipo.PRINCIPAL);
	}
	
	public ProductoBeanSwingJInternalFrame(Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
	}
	
	public ProductoBeanSwingJInternalFrame(Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
		
		this.productoSessionBean=new ProductoSessionBean(); 
		this.productoConstantesFunciones=new ProductoConstantesFunciones(); 
		this.productoBean=new Producto();//(this.productoConstantesFunciones); 		
		this.productoReturnGeneral=new ProductoParameterReturnGeneral(); 
		
		this.productoSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
		this.productoSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
				
	}
	
	public ProductoBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,cargarTodosDatos);
	}
		
	public ProductoBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,false,false,cargarRelaciones,cargarTodosDatos);
	}	
	
	public ProductoBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,PaginaTipo paginaTipo,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos) throws Exception //Boolean esParaBusquedaForeignKey
    {
		super(jdesktopPane,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		try {
			
			this.permiteRecargarForm=false;
			
			this.startProcessProducto(true);
			
			Boolean esParaBusquedaForeignKey=false;//ANTES USADO COMO PARAMETRO DEL CONSTRUCTOR
			
			if(paginaTipo.equals(PaginaTipo.BUSQUEDA)) {
				esParaBusquedaForeignKey=true;
			}
			
			
			
			//SE ASIGNA EN CLASE PADRE
			/*
			this.parametroGeneralSg=parametroGeneralSg;		
			this.parametroGeneralUsuario=parametroGeneralUsuario;	
			this.usuarioActual=usuarioActual;
			this.moduloActual=moduloActual;
			*/						
			
			long start_time=0;
			long end_time=0;
			
			if(Constantes2.ISDEVELOPING2) {
				start_time = System.currentTimeMillis();
			}
			
			if(!cargarTodosDatos) {
				this.sAccionBusqueda="NINGUNO";
			}
			
			this.productoConstantesFunciones=new ProductoConstantesFunciones(); 
			this.productoBean=new Producto();//this.productoConstantesFunciones); 			
			this.productoReturnGeneral=new ProductoParameterReturnGeneral(); 
		
			ProductoBeanSwingJInternalFrameAdditional.CargaInicialInicio(this, "NORMAL", null);
			
			this.setTitle(Funciones.GetTituloSistema(this.parametroGeneralSg,this.moduloActual,this.usuarioActual,"Producto Mantenimiento",paginaTipo));			
			
			this.conTotales=false;
			
			this.conTotales=true;
			
			
			this.producto=new Producto();
			this.productos = new ArrayList<Producto>();
			this.productosAux = new ArrayList<Producto>();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic=new ProductoLogic();
				this.productoLogic.getNewConnexionToDeep("");
			}
			
			//this.productoSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
			//this.productoSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
			
			this.jDesktopPane=jdesktopPane;
			
			if(this.jDesktopPane.getClass().equals(JDesktopPaneMe.class)) {
				this.constantes2=((JDesktopPaneMe)this.jDesktopPane).constantes2;
			}
			
			if(!Constantes.CON_VARIAS_VENTANAS) {
    			MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameDetalleFormProducto);
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameReporteDinamicoProducto!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoProducto);	
					}
					
					if(this.jInternalFrameImportacionProducto!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionProducto);							
					}
					
				}
				
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameOrderByProducto!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameOrderByProducto);					
					}
					
				}
			}
			
			//DETALLE DATOS
			if(this.jInternalFrameDetalleFormProducto!=null) { //this.conCargarFormDetalle) {
				this.jDesktopPane.add(this.jInternalFrameDetalleFormProducto);
				this.jInternalFrameDetalleFormProducto.setVisible(false);
				this.jInternalFrameDetalleFormProducto.setSelected(false);						
			}
			
			if(!this.conCargarMinimo) {
				
				//REPORTE DINAMICO
				if(this.jInternalFrameReporteDinamicoProducto!=null) {
					this.jDesktopPane.add(this.jInternalFrameReporteDinamicoProducto);
					this.jInternalFrameReporteDinamicoProducto.setVisible(false);
					this.jInternalFrameReporteDinamicoProducto.setSelected(false);
				}
				
				//IMPORTACION
				if(this.jInternalFrameImportacionProducto!=null) {
					this.jDesktopPane.add(this.jInternalFrameImportacionProducto);
					this.jInternalFrameImportacionProducto.setVisible(false);
					this.jInternalFrameImportacionProducto.setSelected(false);
				}
				
				
			}
			
			
			if(!this.conCargarMinimo) {
				
				if(this.jInternalFrameOrderByProducto!=null) {
					this.jDesktopPane.add(this.jInternalFrameOrderByProducto);
					this.jInternalFrameOrderByProducto.setVisible(false);
					this.jInternalFrameOrderByProducto.setSelected(false);				
				}
				
			}
			
			
			//this.esParaBusquedaForeignKey=false;
			this.esParaBusquedaForeignKey=esParaBusquedaForeignKey;
			
			this.invalidValues=new InvalidValue[0];
			
			
			
			this.idProductoActual=0L;
			this.rowIndexActual=0;
			
			
			this.iNumeroPaginacionPagina=0;
			this.iNumeroPaginacion=ProductoConstantesFunciones.INUMEROPAGINACION;
			this.pagination=new Pagination();
			this.datosCliente=new DatosCliente();
			this.lIdUsuarioSesion=0L;	
			this.sTipoArchivoReporte="";
			this.sTipoArchivoReporteDinamico="";
			this.sTipoReporte="";
			this.sTipoReporteDinamico="";
			this.sTipoPaginacion="";
			this.sTipoRelacion="";
			this.sTipoAccion="";
			this.sTipoAccionFormulario="";
			this.sTipoSeleccionar="";			
			this.sDetalleReporte="";
			this.sTipoReporteExtra="";
			this.sValorCampoGeneral="";
			this.sPathReporteDinamico="";			
			
			this.isMostrarNumeroPaginacion=false;
			this.isSeleccionarTodos=false;
			this.isSeleccionados=false;
			this.conGraficoReporte=false;
			this.isPostAccionNuevo=false;
			this.isPostAccionSinCerrar=false;
			this.isPostAccionSinMensaje=false;
			this.esReporteDinamico=false;
			this.esRecargarFks=false;
			this.esReporteAccionProceso=false;
			
			this.productoReturnGeneral=new ProductoParameterReturnGeneral();
			
			this.productoParameterGeneral=new ProductoParameterReturnGeneral();
			
			
			
			this.sistemaLogicAdditional=new SistemaLogicAdditional();
			
			this.sistemaLogicAdditional.setConnexion(this.productoLogic.getConnexion());			
			
			
			
			
			
			
			
			//VERIFICAR GLOBAL
			this.cargarDatosCliente();			
			
			
			if(!this.productoSessionBean.getEsGuardarRelacionado()) {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarLicenciaCliente(this.datosCliente,this.moduloActual,this.usuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_CONTROLGLOBAL);
					}
					
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}			
			
			//VERIFICAR GLOBAL
			
			//VERIFICAR SESSION ACTUAL
			//this.cargarDatosCliente();
			
			this.sistemaReturnGeneral=new SistemaParameterReturnGeneral();
			
			SistemaParameterReturnGeneralAdditional.inicializarSinSeguridad(this.sistemaReturnGeneral);
			
			if(ProductoJInternalFrame.CON_LLAMADA_SIMPLE) {
				if(this.productoSessionBean.getEsGuardarRelacionado()) {
					this.opcionActual.setId(0L);
					
					//idOpcion=0L;					
				}
				
				ArrayList<String> arrPaginas=new ArrayList<String>();		
				ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
				
				arrPaginas.add(ProveedorProductoConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(PrecioConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(DetalleImpuestoInvenConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(PresupuestoVentasConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(PoliticaProductoConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(SerieProductoConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(UbicacionProduConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(ParametroProductoConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(ProductoUnidadConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(IngredienteConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(ProductoCaracConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(ServicioClienteConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(ProductoPromocionConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(ProductoEspeciConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(ProductoReemplaConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(ProductoEstadisticaConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(PoliticaFactuConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(ProductoCuentaContableConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(BodegaProductoConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(PresupuestoProductoConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(SaldoMesProductoConstantesFunciones.SNOMBREOPCION);
		
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					//this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActualWithConnection(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,ProductoConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.productoSessionBean.getEsGuardarRelacionado(),this.productoSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,ProductoConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.productoSessionBean.getEsGuardarRelacionado(),this.productoSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					if(!this.sistemaReturnGeneral.getEsValidado()) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
					//FALTA
				}
			} else { 
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			} 
			//VERIFICAR SESSION ACTUAL
			
			
			this.sVisibilidadTablaBusquedas="table-row";
			this.sVisibilidadTablaElementos="none";
			this.sVisibilidadTablaAcciones="none";
			
			this.isVisibilidadCeldaNuevoProducto=false;
			this.isVisibilidadCeldaDuplicarProducto=true;
			this.isVisibilidadCeldaCopiarProducto=true;
			this.isVisibilidadCeldaVerFormProducto=true;
			this.isVisibilidadCeldaOrdenProducto=true;
			this.isVisibilidadCeldaNuevoRelacionesProducto=false;
			this.isVisibilidadCeldaModificarProducto=false;
			this.isVisibilidadCeldaActualizarProducto=false;
			this.isVisibilidadCeldaEliminarProducto=false;
			this.isVisibilidadCeldaCancelarProducto=false;
			this.isVisibilidadCeldaGuardarProducto=false;
			this.isVisibilidadCeldaGuardarCambiosProducto=false;
			
			
			this.isVisibilidadBusquedaPorCodigo=true;
			this.isVisibilidadBusquedaPorNombre=true;
			this.isVisibilidadBusquedaPorNombreExtranjero=true;
			this.isVisibilidadFK_IdArancel=true;
			this.isVisibilidadFK_IdClaseProducto=true;
			this.isVisibilidadFK_IdCliente=true;
			this.isVisibilidadFK_IdClienteProveedorDefecto=true;
			this.isVisibilidadFK_IdColorProducto=true;
			this.isVisibilidadFK_IdEfectoProducto=true;
			this.isVisibilidadFK_IdEmpresa=true;
			this.isVisibilidadFK_IdLinea=true;
			this.isVisibilidadFK_IdLineaCategoria=true;
			this.isVisibilidadFK_IdLineaGrupo=true;
			this.isVisibilidadFK_IdLineaMarca=true;
			this.isVisibilidadFK_IdMarcaProducto=true;
			this.isVisibilidadFK_IdMaterialProducto=true;
			this.isVisibilidadFK_IdModeloProducto=true;
			this.isVisibilidadFK_IdSegmentoProducto=true;
			this.isVisibilidadFK_IdSucursal=true;
			this.isVisibilidadFK_IdTallaProducto=true;
			this.isVisibilidadFK_IdTipoCosteo=true;
			this.isVisibilidadFK_IdTipoProducto=true;
			this.isVisibilidadFK_IdTipoProductoServicio=true;
			this.isVisibilidadFK_IdTipoProductoServicioInven=true;
			this.isVisibilidadFK_IdUnidad=true;
			this.isVisibilidadFK_IdUnidadPeso=true;
			
			//ELEMENTOS TABLAS PARAMETOS
			
			
			
			//ELEMENTOS TABLAS PARAMETOS_FIN
			
			//this.actualizarEstadoCeldasBotonesProducto("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
						
			
			
			this.inicializarPermisosProducto();
			
			//INICIALIZAR FALSE, TALVEZ COMENTAR
			this.setPermisosUsuarioProducto(false);
			
			this.setPermisosUsuarioProducto();
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.productoSessionBean.getEsGuardarRelacionado() 
				|| (this.productoSessionBean.getEsGuardarRelacionado() && this.productoSessionBean.getConGuardarRelaciones())) {
				
				this.inicializarSetPermisosUsuarioProductoClasesRelacionadas();
			}
			
			if(this.productoSessionBean.getConGuardarRelaciones()) {
				this.actualizarTabsSetPermisosUsuarioProductoClasesRelacionadas();
			}
			
			
			
			//SOLO SE EJECUTA LA PRIMERA VEZ, BINDINGS SI FUNCIONA
			if(!ProductoJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingBotonesPermisosProducto();
			} else {
				this.inicializarActualizarBindingBotonesPermisosManualProducto();
			}
			
			if(!this.isPermisoBusquedaProducto) {
				//BYDAN_BUSQUEDAS
				
				this.jTabbedPaneBusquedasProducto.setVisible(false);				
				
			}
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.productoSessionBean.getEsGuardarRelacionado()) {				
				this.tiposArchivosReportes=Funciones.getListTiposArchivosReportes();
				this.tiposArchivosReportesDinamico=Funciones.getListTiposArchivosReportes();
				this.tiposReportes=Funciones.getListTiposReportes(true);
				this.tiposReportesDinamico=Funciones.getListTiposReportesDinamico(true);
				
				
				this.tiposReportes.add(new Reporte("RELACIONES","RELACIONES"));
				this.tiposReportesDinamico.add(new Reporte("RELACIONES","RELACIONES"));
				
				this.tiposGraficosReportes=Funciones2.getListTiposGraficosReportes();
				this.tiposPaginacion=Funciones2.getListTiposPaginacion(this.isPermisoPaginacionMedioProducto,this.isPermisoPaginacionMedioProducto,this.isPermisoPaginacionTodoProducto);
				this.tiposSeleccionar=Funciones2.getListTiposSeleccionar();
				this.tiposSeleccionar.addAll(ProductoConstantesFunciones.getTiposSeleccionarProducto());
				
				this.tiposColumnasSelect=ProductoConstantesFunciones.getTiposSeleccionarProducto(true);
				
				this.tiposRelacionesSelect=new ArrayList<Reporte>();								
				
				this.cargarTiposRelacionesSelectProducto();				
				//this.tiposRelacionesSelect=ProductoConstantesFunciones.getTiposRelacionesProducto(true);
				
			} else {
				this.tiposArchivosReportes=new ArrayList<Reporte>();
				this.tiposArchivosReportesDinamico=new ArrayList<Reporte>();
				this.tiposReportes=new ArrayList<Reporte>();
				this.tiposReportesDinamico=new ArrayList<Reporte>();
				this.tiposGraficosReportes=new ArrayList<Reporte>();
				this.tiposPaginacion=new ArrayList<Reporte>();
				this.tiposSeleccionar=new ArrayList<Reporte>();			
				this.tiposColumnasSelect=new ArrayList<Reporte>();	
				this.tiposRelacionesSelect=new ArrayList<Reporte>();	
			}
						
			
			//FUNCIONALIDAD_RELACIONADO
			//if(!this.productoSessionBean.getEsGuardarRelacionado()) {
				//SE ENCUENTRA MAS ADELANTE CON ACCIONES POR USUARIO
				//ACCIONES GENERALES Y POR USUARIO
				this.tiposRelaciones=Funciones2.getListTiposRelaciones();
				this.setRelacionesUsuarioProducto();
				
				this.tiposAcciones=Funciones2.getListTiposAcciones(true,false,true);
				this.setAccionesUsuarioProducto(false);	
				
				this.tiposAccionesFormulario=Funciones2.getListTiposAccionesFormulario(true,false,true);							
				this.setAccionesUsuarioProducto(true);	
				
				this.inicializarActualizarBindingtiposArchivosReportesAccionesProducto() ;
			
			/*
			} else {
				this.tiposAcciones=new ArrayList<Reporte>();
				this.tiposAccionesFormulario=new ArrayList<Reporte>();
			}
			*/						
			
			this.inicializarInvalidValues();
						
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			
			
			this.arrOrderBy= new  ArrayList<OrderBy>();
			
			
			this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
			
			
			this.traerValoresTablaOrderBy();			
			
			
			this.isGuardarCambiosEnLote=false;
			this.isCargarCombosDependencia=false;
			
			
			this.proveedorproductoLogic=new ProveedorProductoLogic();
			this.precioLogic=new PrecioLogic();
			this.detalleimpuestoinvenLogic=new DetalleImpuestoInvenLogic();
			this.presupuestoventasLogic=new PresupuestoVentasLogic();
			this.politicaproductoLogic=new PoliticaProductoLogic();
			this.serieproductoLogic=new SerieProductoLogic();
			this.ubicacionproduLogic=new UbicacionProduLogic();
			this.parametroproductoLogic=new ParametroProductoLogic();
			this.productounidadLogic=new ProductoUnidadLogic();
			this.ingredienteRelacionLogic=new IngredienteLogic();
			this.productocaracLogic=new ProductoCaracLogic();
			this.servicioclienteLogic=new ServicioClienteLogic();
			this.productopromocionRelacionLogic=new ProductoPromocionLogic();
			this.productoespeciLogic=new ProductoEspeciLogic();
			this.productoreemplaLogic=new ProductoReemplaLogic();
			this.productoestadisticaLogic=new ProductoEstadisticaLogic();
			this.politicafactuLogic=new PoliticaFactuLogic();
			this.productocuentacontableLogic=new ProductoCuentaContableLogic();
			this.bodegaproductoLogic=new BodegaProductoLogic();
			this.presupuestoproductoLogic=new PresupuestoProductoLogic();
			this.saldomesproductoLogic=new SaldoMesProductoLogic(); 
			jasperPrint = null;												
			
			//FK
			
			this.empresaLogic=new EmpresaLogic();
			this.sucursalLogic=new SucursalLogic();
			this.lineaLogic=new LineaLogic();
			this.lineagrupoLogic=new LineaLogic();
			this.lineacategoriaLogic=new LineaLogic();
			this.lineamarcaLogic=new LineaLogic();
			this.tipoproductoservicioLogic=new TipoProductoServicioLogic();
			this.tipoproductoservicioinvenLogic=new TipoProductoServicioInvenLogic();
			this.tipocosteoLogic=new TipoCosteoLogic();
			this.unidadLogic=new UnidadLogic();
			this.unidadpesoLogic=new UnidadLogic();
			this.arancelLogic=new ArancelLogic();
			this.clienteLogic=new ClienteLogic();
			this.clienteproveedordefectoLogic=new ClienteLogic();
			this.tipoproductoLogic=new TipoProductoLogic();
			this.colorproductoLogic=new ColorProductoLogic();
			this.claseproductoLogic=new ClaseProductoLogic();
			this.efectoproductoLogic=new EfectoProductoLogic();
			this.marcaproductoLogic=new MarcaProductoLogic();
			this.modeloproductoLogic=new ModeloProductoLogic();
			this.materialproductoLogic=new MaterialProductoLogic();
			this.segmentoproductoLogic=new SegmentoProductoLogic();
			this.tallaproductoLogic=new TallaProductoLogic();
			
			//PARAMETROS
			
			
			/*
			if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {		
				hashtableEnv =  Funciones.getHashtableEnv();		
				initialContext = new InitialContext(hashtableEnv);	
			}
			*/
			/*
			if(Constantes.ISUSAEJBREMOTE) {
				productoImplementable= (ProductoImplementable) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+ProductoConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBREMOTE);
			} else if(Constantes.ISUSAEJBHOME) {
				productoImplementableHome= (ProductoImplementableHome) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+ProductoConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBLOCAL);
			}			
			*/
			
			
			this.productos= new ArrayList<Producto>();
			this.productosEliminados= new ArrayList<Producto>();
						
			this.isEsNuevoProducto=false;
			this.esParaAccionDesdeFormularioProducto=false;
			this.isEsMantenimientoRelacionesRelacionadoUnico=false;
			this.isEsMantenimientoRelaciones=false;
			this.isEsMantenimientoRelacionado=false;
			this.isContieneImagenes=false;
			
			
			
			
			//BUSQUEDA INTERNA FK
			this.idClienteActual=0L;
			this.idClienteProveedorDefectoActual=0L;
			
			//INICIALIZAR LISTAS FK
			
			this.empresasForeignKey=new ArrayList<Empresa>() ;
			this.sucursalsForeignKey=new ArrayList<Sucursal>() ;
			this.lineasForeignKey=new ArrayList<Linea>() ;
			this.lineagruposForeignKey=new ArrayList<Linea>() ;
			this.lineacategoriasForeignKey=new ArrayList<Linea>() ;
			this.lineamarcasForeignKey=new ArrayList<Linea>() ;
			this.tipoproductoserviciosForeignKey=new ArrayList<TipoProductoServicio>() ;
			this.tipoproductoservicioinvensForeignKey=new ArrayList<TipoProductoServicioInven>() ;
			this.tipocosteosForeignKey=new ArrayList<TipoCosteo>() ;
			this.unidadsForeignKey=new ArrayList<Unidad>() ;
			this.unidadpesosForeignKey=new ArrayList<Unidad>() ;
			this.arancelsForeignKey=new ArrayList<Arancel>() ;
			this.clientesForeignKey=new ArrayList<Cliente>() ;
			this.clienteproveedordefectosForeignKey=new ArrayList<Cliente>() ;
			this.tipoproductosForeignKey=new ArrayList<TipoProducto>() ;
			this.colorproductosForeignKey=new ArrayList<ColorProducto>() ;
			this.claseproductosForeignKey=new ArrayList<ClaseProducto>() ;
			this.efectoproductosForeignKey=new ArrayList<EfectoProducto>() ;
			this.marcaproductosForeignKey=new ArrayList<MarcaProducto>() ;
			this.modeloproductosForeignKey=new ArrayList<ModeloProducto>() ;
			this.materialproductosForeignKey=new ArrayList<MaterialProducto>() ;
			this.segmentoproductosForeignKey=new ArrayList<SegmentoProducto>() ;
			this.tallaproductosForeignKey=new ArrayList<TallaProducto>() ;
			
			
			
			
			if(blncargarCombostrForeignKey) {
				this.cargarCombosForeignKeyProducto(this.isCargarCombosDependencia);
			}
			
			this.cargarCombosParametroProducto();
			
			
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.productoSessionBean.getEsGuardarRelacionado()) {
				this.onLoad();
			}
						
			ProductoBeanSwingJInternalFrameAdditional.RecargarVentanaSegunOpcion(this,opcionActual);
			
			/*
			if(blnCargarInformacionInicial) {
				this.recargarInformacion();
			}
			*/
			//this.iNumeroPaginacionPagina=0;
			//this.iNumeroPaginacion=ProductoConstantesFunciones.INUMEROPAGINACION;
			
			this.actualizarEstadoCeldasBotonesProducto("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			//SOLO LA PRIMERA VEZ HACE LOS BINDINGS, SOLO AHI FUNCIONA
			this.inicializarActualizarBindingProducto(true); 
			
			//SE REDIMENSIONA SINO NO SE ACTUALIZA
			this.redimensionarTablaDatos();
			
			
			this.initActions();
			
			;
						
			if(this.jInternalFrameDetalleFormProducto!=null) {//if(this.conCargarFormDetalle) {
				this.cargarMenuRelaciones();
			}
			
			//OBLIGA CARGAR DETALLE, MEJOR DESHABILITAR, FALTA TALVEZ PONER EN SELECCIONAR
			//MAYBE
			//this.updateControlesFormularioProducto();
			
			if(!this.conCargarMinimo) {
				this.updateBusquedasFormularioProducto();
			}
			
			ProductoBeanSwingJInternalFrameAdditional.CargaInicial(this, "NORMAL", null);
			
			
			//SE REALIZA ESTO PARA QUE SE PUEDA RECORRER TAB SIN IMPORTAR ORDEN
			Boolean existeTabBusqueda=false;
			
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				
				for(int i=0; i<this.jTabbedPaneBusquedasProducto.getTabCount(); i++) {
					this.jTabbedPaneBusquedasProducto.setSelectedIndex(i);
						
					if(!existeTabBusqueda) {
						existeTabBusqueda=true;
					}
				}
					
				if(existeTabBusqueda) {
					this.jTabbedPaneBusquedasProducto.setSelectedIndex(0);
				}	
				
				
			}
			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.commitNewConnexionToDeep();
			}
			
			
			if(Constantes2.ISDEVELOPING2) {
				end_time = System.currentTimeMillis();			
				String sTipo="Load Ventana";
				Funciones2.getMensajeTiempoEjecucion(start_time, end_time, sTipo,false);
			}  
			
			this.finishProcessProducto(true);
			
			this.dEnd=(double)System.currentTimeMillis();
			
			this.dDif=this.dEnd - this.dStart;
			
			if(Constantes.ISDEVELOPING) {
				System.out.println("Tiempo(ms) Carga Producto: " + this.dDif); 
			}
			
			this.permiteRecargarForm=true;
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.closeNewConnexionToDeep();
			}
		}	 
    }
	
	public void cargarTiposRelacionesSelectProducto() {
		Reporte reporte=new Reporte();
		
	

		reporte=new Reporte();
		reporte.setsCodigo(ProveedorProductoConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(ProveedorProductoConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(PrecioConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(PrecioConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(DetalleImpuestoInvenConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(DetalleImpuestoInvenConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(PresupuestoVentasConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(PresupuestoVentasConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(PoliticaProductoConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(PoliticaProductoConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(SerieProductoConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(SerieProductoConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(UbicacionProduConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(UbicacionProduConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(ParametroProductoConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(ParametroProductoConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(ProductoUnidadConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(ProductoUnidadConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(IngredienteConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(IngredienteConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(ProductoCaracConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(ProductoCaracConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(ServicioClienteConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(ServicioClienteConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(ProductoPromocionConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(ProductoPromocionConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(ProductoEspeciConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(ProductoEspeciConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(ProductoReemplaConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(ProductoReemplaConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(ProductoEstadisticaConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(ProductoEstadisticaConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(PoliticaFactuConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(PoliticaFactuConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(ProductoCuentaContableConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(ProductoCuentaContableConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(BodegaProductoConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(BodegaProductoConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(PresupuestoProductoConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(PresupuestoProductoConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(SaldoMesProductoConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(SaldoMesProductoConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);
	}
	
	
	
	public void jTabbedPaneChangeListenerGeneral(String sTipo,ChangeEvent evt) { 	  
		Boolean procesaCargarParteTab=false;
			
		try {
			int iIndex=0;		    			
			String sTitle="";
			
			//TABBED PANE RELACIONES
			if(sTipo.equals("RelacionesProducto")) {
				iIndex=this.jInternalFrameDetalleFormProducto.jTabbedPaneRelacionesProducto.getSelectedIndex();		    
			
				sTitle=this.jInternalFrameDetalleFormProducto.jTabbedPaneRelacionesProducto.getTitleAt(iIndex);
				
				Integer intSelectedRow = 0;	
			
				intSelectedRow = this.jTableDatosProducto.getSelectedRow();	
				
				

				if(sTitle.equals("Bodega Productos")) {
					if(!BodegaProductoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessProducto();

						this.cargarParteTabPanelRelacionadaBodegaProducto(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Detalle Impuesto Invenes")) {
					if(!DetalleImpuestoInvenJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessProducto();

						this.cargarParteTabPanelRelacionadaDetalleImpuestoInven(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Ingredientes")) {
					if(!IngredienteJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessProducto();

						this.cargarParteTabPanelRelacionadaIngrediente(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Parametro Productos")) {
					if(!ParametroProductoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessProducto();

						this.cargarParteTabPanelRelacionadaParametroProducto(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Politica Factus")) {
					if(!PoliticaFactuJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessProducto();

						this.cargarParteTabPanelRelacionadaPoliticaFactu(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Politica Productos")) {
					if(!PoliticaProductoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessProducto();

						this.cargarParteTabPanelRelacionadaPoliticaProducto(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Precios")) {
					if(!PrecioJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessProducto();

						this.cargarParteTabPanelRelacionadaPrecio(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Presupuesto Productos")) {
					if(!PresupuestoProductoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessProducto();

						this.cargarParteTabPanelRelacionadaPresupuestoProducto(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Presupuesto Ventases")) {
					if(!PresupuestoVentasJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessProducto();

						this.cargarParteTabPanelRelacionadaPresupuestoVentas(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Caracteristicas")) {
					if(!ProductoCaracJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessProducto();

						this.cargarParteTabPanelRelacionadaProductoCarac(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Producto Cuenta Contables")) {
					if(!ProductoCuentaContableJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessProducto();

						this.cargarParteTabPanelRelacionadaProductoCuentaContable(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Especificacions")) {
					if(!ProductoEspeciJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessProducto();

						this.cargarParteTabPanelRelacionadaProductoEspeci(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Estadisticas")) {
					if(!ProductoEstadisticaJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessProducto();

						this.cargarParteTabPanelRelacionadaProductoEstadistica(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Promocions")) {
					if(!ProductoPromocionJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessProducto();

						this.cargarParteTabPanelRelacionadaProductoPromocion(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Reemplazos")) {
					if(!ProductoReemplaJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessProducto();

						this.cargarParteTabPanelRelacionadaProductoReempla(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Producto Unidads")) {
					if(!ProductoUnidadJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessProducto();

						this.cargarParteTabPanelRelacionadaProductoUnidad(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Producto Proveedors")) {
					if(!ProveedorProductoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessProducto();

						this.cargarParteTabPanelRelacionadaProveedorProducto(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Saldo Mes Productos")) {
					if(!SaldoMesProductoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessProducto();

						this.cargarParteTabPanelRelacionadaSaldoMesProducto(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Serie Productos")) {
					if(!SerieProductoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessProducto();

						this.cargarParteTabPanelRelacionadaSerieProducto(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Servicio Clientes")) {
					if(!ServicioClienteJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessProducto();

						this.cargarParteTabPanelRelacionadaServicioCliente(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Ubicacion Productos")) {
					if(!UbicacionProduJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessProducto();

						this.cargarParteTabPanelRelacionadaUbicacionProdu(iIndex,intSelectedRow);
					}
					
				}
				
			}
			
			//TABBED PANE RELACIONES FIN(EXTRA TAB)
			;
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		} finally {
			if(procesaCargarParteTab) {				
				this.finishProcessProducto();	
			}
		}
    }
	
	

	public void cargarParteTabPanelRelacionadaBodegaProducto(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormProducto.cargarSessionConBeanSwingJInternalFrameBodegaProducto(false,true,iIndex);
		this.jButtonBodegaProductoActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaBodegaProducto();

		//this.jTabbedPaneRelacionesProducto.updateUI();
		//this.jTabbedPaneRelacionesProducto.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesProducto.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaDetalleImpuestoInven(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormProducto.cargarSessionConBeanSwingJInternalFrameDetalleImpuestoInven(false,true,iIndex);
		this.jButtonDetalleImpuestoInvenActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaDetalleImpuestoInven();

		//this.jTabbedPaneRelacionesProducto.updateUI();
		//this.jTabbedPaneRelacionesProducto.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesProducto.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaIngrediente(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormProducto.cargarSessionConBeanSwingJInternalFrameIngrediente(false,true,iIndex);
		this.jButtonIngredienteActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaIngrediente();

		//this.jTabbedPaneRelacionesProducto.updateUI();
		//this.jTabbedPaneRelacionesProducto.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesProducto.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaParametroProducto(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormProducto.cargarSessionConBeanSwingJInternalFrameParametroProducto(false,true,iIndex);
		this.jButtonParametroProductoActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaParametroProducto();

		//this.jTabbedPaneRelacionesProducto.updateUI();
		//this.jTabbedPaneRelacionesProducto.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesProducto.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaPoliticaFactu(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormProducto.cargarSessionConBeanSwingJInternalFramePoliticaFactu(false,true,iIndex);
		this.jButtonPoliticaFactuActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaPoliticaFactu();

		//this.jTabbedPaneRelacionesProducto.updateUI();
		//this.jTabbedPaneRelacionesProducto.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesProducto.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaPoliticaProducto(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormProducto.cargarSessionConBeanSwingJInternalFramePoliticaProducto(false,true,iIndex);
		this.jButtonPoliticaProductoActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaPoliticaProducto();

		//this.jTabbedPaneRelacionesProducto.updateUI();
		//this.jTabbedPaneRelacionesProducto.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesProducto.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaPrecio(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormProducto.cargarSessionConBeanSwingJInternalFramePrecio(false,true,iIndex);
		this.jButtonPrecioActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaPrecio();

		//this.jTabbedPaneRelacionesProducto.updateUI();
		//this.jTabbedPaneRelacionesProducto.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesProducto.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaPresupuestoProducto(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormProducto.cargarSessionConBeanSwingJInternalFramePresupuestoProducto(false,true,iIndex);
		this.jButtonPresupuestoProductoActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaPresupuestoProducto();

		//this.jTabbedPaneRelacionesProducto.updateUI();
		//this.jTabbedPaneRelacionesProducto.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesProducto.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaPresupuestoVentas(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormProducto.cargarSessionConBeanSwingJInternalFramePresupuestoVentas(false,true,iIndex);
		this.jButtonPresupuestoVentasActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaPresupuestoVentas();

		//this.jTabbedPaneRelacionesProducto.updateUI();
		//this.jTabbedPaneRelacionesProducto.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesProducto.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaProductoCarac(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormProducto.cargarSessionConBeanSwingJInternalFrameProductoCarac(false,true,iIndex);
		this.jButtonProductoCaracActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaProductoCarac();

		//this.jTabbedPaneRelacionesProducto.updateUI();
		//this.jTabbedPaneRelacionesProducto.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesProducto.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaProductoCuentaContable(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormProducto.cargarSessionConBeanSwingJInternalFrameProductoCuentaContable(false,true,iIndex);
		this.jButtonProductoCuentaContableActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaProductoCuentaContable();

		//this.jTabbedPaneRelacionesProducto.updateUI();
		//this.jTabbedPaneRelacionesProducto.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesProducto.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaProductoEspeci(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormProducto.cargarSessionConBeanSwingJInternalFrameProductoEspeci(false,true,iIndex);
		this.jButtonProductoEspeciActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaProductoEspeci();

		//this.jTabbedPaneRelacionesProducto.updateUI();
		//this.jTabbedPaneRelacionesProducto.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesProducto.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaProductoEstadistica(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormProducto.cargarSessionConBeanSwingJInternalFrameProductoEstadistica(false,true,iIndex);
		this.jButtonProductoEstadisticaActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaProductoEstadistica();

		//this.jTabbedPaneRelacionesProducto.updateUI();
		//this.jTabbedPaneRelacionesProducto.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesProducto.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaProductoPromocion(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormProducto.cargarSessionConBeanSwingJInternalFrameProductoPromocion(false,true,iIndex);
		this.jButtonProductoPromocionActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaProductoPromocion();

		//this.jTabbedPaneRelacionesProducto.updateUI();
		//this.jTabbedPaneRelacionesProducto.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesProducto.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaProductoReempla(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormProducto.cargarSessionConBeanSwingJInternalFrameProductoReempla(false,true,iIndex);
		this.jButtonProductoReemplaActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaProductoReempla();

		//this.jTabbedPaneRelacionesProducto.updateUI();
		//this.jTabbedPaneRelacionesProducto.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesProducto.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaProductoUnidad(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormProducto.cargarSessionConBeanSwingJInternalFrameProductoUnidad(false,true,iIndex);
		this.jButtonProductoUnidadActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaProductoUnidad();

		//this.jTabbedPaneRelacionesProducto.updateUI();
		//this.jTabbedPaneRelacionesProducto.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesProducto.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaProveedorProducto(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormProducto.cargarSessionConBeanSwingJInternalFrameProveedorProducto(false,true,iIndex);
		this.jButtonProveedorProductoActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaProveedorProducto();

		//this.jTabbedPaneRelacionesProducto.updateUI();
		//this.jTabbedPaneRelacionesProducto.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesProducto.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaSaldoMesProducto(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormProducto.cargarSessionConBeanSwingJInternalFrameSaldoMesProducto(false,true,iIndex);
		this.jButtonSaldoMesProductoActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaSaldoMesProducto();

		//this.jTabbedPaneRelacionesProducto.updateUI();
		//this.jTabbedPaneRelacionesProducto.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesProducto.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaSerieProducto(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormProducto.cargarSessionConBeanSwingJInternalFrameSerieProducto(false,true,iIndex);
		this.jButtonSerieProductoActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaSerieProducto();

		//this.jTabbedPaneRelacionesProducto.updateUI();
		//this.jTabbedPaneRelacionesProducto.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesProducto.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaServicioCliente(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormProducto.cargarSessionConBeanSwingJInternalFrameServicioCliente(false,true,iIndex);
		this.jButtonServicioClienteActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaServicioCliente();

		//this.jTabbedPaneRelacionesProducto.updateUI();
		//this.jTabbedPaneRelacionesProducto.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesProducto.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaUbicacionProdu(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormProducto.cargarSessionConBeanSwingJInternalFrameUbicacionProdu(false,true,iIndex);
		this.jButtonUbicacionProduActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaUbicacionProdu();

		//this.jTabbedPaneRelacionesProducto.updateUI();
		//this.jTabbedPaneRelacionesProducto.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesProducto.setSelectedIndex(iIndex);


	}
	
	public void jButtonRelacionActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
				 if(sTipo.equals("ProveedorProducto")) {
				int row=this.jTableDatosProducto.getSelectedRow();
				jButtonProveedorProductoActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("Precio")) {
				int row=this.jTableDatosProducto.getSelectedRow();
				jButtonPrecioActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("DetalleImpuestoInven")) {
				int row=this.jTableDatosProducto.getSelectedRow();
				jButtonDetalleImpuestoInvenActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("PresupuestoVentas")) {
				int row=this.jTableDatosProducto.getSelectedRow();
				jButtonPresupuestoVentasActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("PoliticaProducto")) {
				int row=this.jTableDatosProducto.getSelectedRow();
				jButtonPoliticaProductoActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("SerieProducto")) {
				int row=this.jTableDatosProducto.getSelectedRow();
				jButtonSerieProductoActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("UbicacionProdu")) {
				int row=this.jTableDatosProducto.getSelectedRow();
				jButtonUbicacionProduActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("ParametroProducto")) {
				int row=this.jTableDatosProducto.getSelectedRow();
				jButtonParametroProductoActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("ProductoUnidad")) {
				int row=this.jTableDatosProducto.getSelectedRow();
				jButtonProductoUnidadActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("Ingrediente")) {
				int row=this.jTableDatosProducto.getSelectedRow();
				jButtonIngredienteActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("ProductoCarac")) {
				int row=this.jTableDatosProducto.getSelectedRow();
				jButtonProductoCaracActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("ServicioCliente")) {
				int row=this.jTableDatosProducto.getSelectedRow();
				jButtonServicioClienteActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("ProductoPromocion")) {
				int row=this.jTableDatosProducto.getSelectedRow();
				jButtonProductoPromocionActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("ProductoEspeci")) {
				int row=this.jTableDatosProducto.getSelectedRow();
				jButtonProductoEspeciActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("ProductoReempla")) {
				int row=this.jTableDatosProducto.getSelectedRow();
				jButtonProductoReemplaActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("ProductoEstadistica")) {
				int row=this.jTableDatosProducto.getSelectedRow();
				jButtonProductoEstadisticaActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("PoliticaFactu")) {
				int row=this.jTableDatosProducto.getSelectedRow();
				jButtonPoliticaFactuActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("ProductoCuentaContable")) {
				int row=this.jTableDatosProducto.getSelectedRow();
				jButtonProductoCuentaContableActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("BodegaProducto")) {
				int row=this.jTableDatosProducto.getSelectedRow();
				jButtonBodegaProductoActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("PresupuestoProducto")) {
				int row=this.jTableDatosProducto.getSelectedRow();
				jButtonPresupuestoProductoActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("SaldoMesProducto")) {
				int row=this.jTableDatosProducto.getSelectedRow();
				jButtonSaldoMesProductoActionPerformed(evt,row,true,false,null);
				}
  		} catch(Exception e) {
  			e.printStackTrace();
  		}
    }
	
	public void cargarMenuRelaciones() {	
		JMenuItem jmenuItem= new JMenuItem("General");
		String sLabelMenu="";
		
		if(!this.productoSessionBean.getEsGuardarRelacionado()) {
			for(Reporte reporte:this.tiposRelaciones) {
			

				if(reporte.getsCodigo().equals("Producto Proveedor")) {

					if(this.isTienePermisosProveedorProducto && this.productoConstantesFunciones.mostrarProveedorProductoProducto && !ProductoConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Producto Proveedors"+"("+ProveedorProductoConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Producto Proveedors");

						if(productoConstantesFunciones.resaltarProveedorProductoProducto!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(productoConstantesFunciones.resaltarProveedorProductoProducto);
						}

						jmenuItem.setEnabled(this.productoConstantesFunciones.activarProveedorProductoProducto);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"ProveedorProducto"));

						

						this.jInternalFrameDetalleFormProducto.jmenuDetalleProducto.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Precio")) {

					if(this.isTienePermisosPrecio && this.productoConstantesFunciones.mostrarPrecioProducto && !ProductoConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Precios"+"("+PrecioConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Precios");

						if(productoConstantesFunciones.resaltarPrecioProducto!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(productoConstantesFunciones.resaltarPrecioProducto);
						}

						jmenuItem.setEnabled(this.productoConstantesFunciones.activarPrecioProducto);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"Precio"));

						

						this.jInternalFrameDetalleFormProducto.jmenuDetalleProducto.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Detalle Impuesto Inven")) {

					if(this.isTienePermisosDetalleImpuestoInven && this.productoConstantesFunciones.mostrarDetalleImpuestoInvenProducto && !ProductoConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Detalle Impuesto Invenes"+"("+DetalleImpuestoInvenConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Detalle Impuesto Invenes");

						if(productoConstantesFunciones.resaltarDetalleImpuestoInvenProducto!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(productoConstantesFunciones.resaltarDetalleImpuestoInvenProducto);
						}

						jmenuItem.setEnabled(this.productoConstantesFunciones.activarDetalleImpuestoInvenProducto);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"DetalleImpuestoInven"));

						

						this.jInternalFrameDetalleFormProducto.jmenuDetalleProducto.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Presupuesto Ventas")) {

					if(this.isTienePermisosPresupuestoVentas && this.productoConstantesFunciones.mostrarPresupuestoVentasProducto && !ProductoConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Presupuesto Ventases"+"("+PresupuestoVentasConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Presupuesto Ventases");

						if(productoConstantesFunciones.resaltarPresupuestoVentasProducto!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(productoConstantesFunciones.resaltarPresupuestoVentasProducto);
						}

						jmenuItem.setEnabled(this.productoConstantesFunciones.activarPresupuestoVentasProducto);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"PresupuestoVentas"));

						

						this.jInternalFrameDetalleFormProducto.jmenuDetalleProducto.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Politica Producto")) {

					if(this.isTienePermisosPoliticaProducto && this.productoConstantesFunciones.mostrarPoliticaProductoProducto && !ProductoConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Politica Productos"+"("+PoliticaProductoConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Politica Productos");

						if(productoConstantesFunciones.resaltarPoliticaProductoProducto!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(productoConstantesFunciones.resaltarPoliticaProductoProducto);
						}

						jmenuItem.setEnabled(this.productoConstantesFunciones.activarPoliticaProductoProducto);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"PoliticaProducto"));

						

						this.jInternalFrameDetalleFormProducto.jmenuDetalleProducto.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Serie Producto")) {

					if(this.isTienePermisosSerieProducto && this.productoConstantesFunciones.mostrarSerieProductoProducto && !ProductoConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Serie Productos"+"("+SerieProductoConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Serie Productos");

						if(productoConstantesFunciones.resaltarSerieProductoProducto!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(productoConstantesFunciones.resaltarSerieProductoProducto);
						}

						jmenuItem.setEnabled(this.productoConstantesFunciones.activarSerieProductoProducto);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"SerieProducto"));

						

						this.jInternalFrameDetalleFormProducto.jmenuDetalleProducto.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Ubicacion Producto")) {

					if(this.isTienePermisosUbicacionProdu && this.productoConstantesFunciones.mostrarUbicacionProduProducto && !ProductoConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Ubicacion Productos"+"("+UbicacionProduConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Ubicacion Productos");

						if(productoConstantesFunciones.resaltarUbicacionProduProducto!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(productoConstantesFunciones.resaltarUbicacionProduProducto);
						}

						jmenuItem.setEnabled(this.productoConstantesFunciones.activarUbicacionProduProducto);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"UbicacionProdu"));

						

						this.jInternalFrameDetalleFormProducto.jmenuDetalleProducto.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Parametro Producto")) {

					if(this.isTienePermisosParametroProducto && this.productoConstantesFunciones.mostrarParametroProductoProducto && !ProductoConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Parametro Productos"+"("+ParametroProductoConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Parametro Productos");

						if(productoConstantesFunciones.resaltarParametroProductoProducto!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(productoConstantesFunciones.resaltarParametroProductoProducto);
						}

						jmenuItem.setEnabled(this.productoConstantesFunciones.activarParametroProductoProducto);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"ParametroProducto"));

						

						this.jInternalFrameDetalleFormProducto.jmenuDetalleProducto.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Producto Unidad")) {

					if(this.isTienePermisosProductoUnidad && this.productoConstantesFunciones.mostrarProductoUnidadProducto && !ProductoConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Producto Unidads"+"("+ProductoUnidadConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Producto Unidads");

						if(productoConstantesFunciones.resaltarProductoUnidadProducto!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(productoConstantesFunciones.resaltarProductoUnidadProducto);
						}

						jmenuItem.setEnabled(this.productoConstantesFunciones.activarProductoUnidadProducto);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"ProductoUnidad"));

						

						this.jInternalFrameDetalleFormProducto.jmenuDetalleProducto.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Ingrediente")) {

					if(this.isTienePermisosIngrediente && this.productoConstantesFunciones.mostrarIngredienteProducto && !ProductoConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Ingredientes"+"("+IngredienteConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Ingredientes");

						if(productoConstantesFunciones.resaltarIngredienteProducto!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(productoConstantesFunciones.resaltarIngredienteProducto);
						}

						jmenuItem.setEnabled(this.productoConstantesFunciones.activarIngredienteProducto);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"Ingrediente"));

						

						this.jInternalFrameDetalleFormProducto.jmenuDetalleProducto.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Caracteristica")) {

					if(this.isTienePermisosProductoCarac && this.productoConstantesFunciones.mostrarProductoCaracProducto && !ProductoConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Caracteristicas"+"("+ProductoCaracConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Caracteristicas");

						if(productoConstantesFunciones.resaltarProductoCaracProducto!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(productoConstantesFunciones.resaltarProductoCaracProducto);
						}

						jmenuItem.setEnabled(this.productoConstantesFunciones.activarProductoCaracProducto);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"ProductoCarac"));

						

						this.jInternalFrameDetalleFormProducto.jmenuDetalleProducto.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Servicio Cliente")) {

					if(this.isTienePermisosServicioCliente && this.productoConstantesFunciones.mostrarServicioClienteProducto && !ProductoConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Servicio Clientes"+"("+ServicioClienteConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Servicio Clientes");

						if(productoConstantesFunciones.resaltarServicioClienteProducto!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(productoConstantesFunciones.resaltarServicioClienteProducto);
						}

						jmenuItem.setEnabled(this.productoConstantesFunciones.activarServicioClienteProducto);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"ServicioCliente"));

						

						this.jInternalFrameDetalleFormProducto.jmenuDetalleProducto.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Promocion")) {

					if(this.isTienePermisosProductoPromocion && this.productoConstantesFunciones.mostrarProductoPromocionProducto && !ProductoConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Promocions"+"("+ProductoPromocionConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Promocions");

						if(productoConstantesFunciones.resaltarProductoPromocionProducto!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(productoConstantesFunciones.resaltarProductoPromocionProducto);
						}

						jmenuItem.setEnabled(this.productoConstantesFunciones.activarProductoPromocionProducto);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"ProductoPromocion"));

						

						this.jInternalFrameDetalleFormProducto.jmenuDetalleProducto.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Especificacion")) {

					if(this.isTienePermisosProductoEspeci && this.productoConstantesFunciones.mostrarProductoEspeciProducto && !ProductoConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Especificacions"+"("+ProductoEspeciConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Especificacions");

						if(productoConstantesFunciones.resaltarProductoEspeciProducto!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(productoConstantesFunciones.resaltarProductoEspeciProducto);
						}

						jmenuItem.setEnabled(this.productoConstantesFunciones.activarProductoEspeciProducto);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"ProductoEspeci"));

						

						this.jInternalFrameDetalleFormProducto.jmenuDetalleProducto.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Reemplazo")) {

					if(this.isTienePermisosProductoReempla && this.productoConstantesFunciones.mostrarProductoReemplaProducto && !ProductoConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Reemplazos"+"("+ProductoReemplaConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Reemplazos");

						if(productoConstantesFunciones.resaltarProductoReemplaProducto!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(productoConstantesFunciones.resaltarProductoReemplaProducto);
						}

						jmenuItem.setEnabled(this.productoConstantesFunciones.activarProductoReemplaProducto);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"ProductoReempla"));

						

						this.jInternalFrameDetalleFormProducto.jmenuDetalleProducto.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Estadistica")) {

					if(this.isTienePermisosProductoEstadistica && this.productoConstantesFunciones.mostrarProductoEstadisticaProducto && !ProductoConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Estadisticas"+"("+ProductoEstadisticaConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Estadisticas");

						if(productoConstantesFunciones.resaltarProductoEstadisticaProducto!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(productoConstantesFunciones.resaltarProductoEstadisticaProducto);
						}

						jmenuItem.setEnabled(this.productoConstantesFunciones.activarProductoEstadisticaProducto);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"ProductoEstadistica"));

						

						this.jInternalFrameDetalleFormProducto.jmenuDetalleProducto.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Politica Factu")) {

					if(this.isTienePermisosPoliticaFactu && this.productoConstantesFunciones.mostrarPoliticaFactuProducto && !ProductoConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Politica Factus"+"("+PoliticaFactuConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Politica Factus");

						if(productoConstantesFunciones.resaltarPoliticaFactuProducto!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(productoConstantesFunciones.resaltarPoliticaFactuProducto);
						}

						jmenuItem.setEnabled(this.productoConstantesFunciones.activarPoliticaFactuProducto);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"PoliticaFactu"));

						

						this.jInternalFrameDetalleFormProducto.jmenuDetalleProducto.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Producto Cuenta Contable")) {

					if(this.isTienePermisosProductoCuentaContable && this.productoConstantesFunciones.mostrarProductoCuentaContableProducto && !ProductoConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Producto Cuenta Contables"+"("+ProductoCuentaContableConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Producto Cuenta Contables");

						if(productoConstantesFunciones.resaltarProductoCuentaContableProducto!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(productoConstantesFunciones.resaltarProductoCuentaContableProducto);
						}

						jmenuItem.setEnabled(this.productoConstantesFunciones.activarProductoCuentaContableProducto);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"ProductoCuentaContable"));

						

						this.jInternalFrameDetalleFormProducto.jmenuDetalleProducto.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Bodega Producto")) {

					if(this.isTienePermisosBodegaProducto && this.productoConstantesFunciones.mostrarBodegaProductoProducto && !ProductoConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Bodega Productos"+"("+BodegaProductoConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Bodega Productos");

						if(productoConstantesFunciones.resaltarBodegaProductoProducto!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(productoConstantesFunciones.resaltarBodegaProductoProducto);
						}

						jmenuItem.setEnabled(this.productoConstantesFunciones.activarBodegaProductoProducto);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"BodegaProducto"));

						

						this.jInternalFrameDetalleFormProducto.jmenuDetalleProducto.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Presupuesto Producto")) {

					if(this.isTienePermisosPresupuestoProducto && this.productoConstantesFunciones.mostrarPresupuestoProductoProducto && !ProductoConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Presupuesto Productos"+"("+PresupuestoProductoConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Presupuesto Productos");

						if(productoConstantesFunciones.resaltarPresupuestoProductoProducto!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(productoConstantesFunciones.resaltarPresupuestoProductoProducto);
						}

						jmenuItem.setEnabled(this.productoConstantesFunciones.activarPresupuestoProductoProducto);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"PresupuestoProducto"));

						

						this.jInternalFrameDetalleFormProducto.jmenuDetalleProducto.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Saldo Mes Producto")) {

					if(this.isTienePermisosSaldoMesProducto && this.productoConstantesFunciones.mostrarSaldoMesProductoProducto && !ProductoConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Saldo Mes Productos"+"("+SaldoMesProductoConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Saldo Mes Productos");

						if(productoConstantesFunciones.resaltarSaldoMesProductoProducto!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(productoConstantesFunciones.resaltarSaldoMesProductoProducto);
						}

						jmenuItem.setEnabled(this.productoConstantesFunciones.activarSaldoMesProductoProducto);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"SaldoMesProducto"));

						

						this.jInternalFrameDetalleFormProducto.jmenuDetalleProducto.add(jmenuItem);

						
					}

					continue;
				}
			}
		}
	}		
	
	public void cargarCombosForeignKeyProducto(Boolean cargarCombosDependencia) throws Exception {   
		this.cargarCombosForeignKeyProducto(cargarCombosDependencia,true,true);
	}
	
	//CARGAR COMBOS EN LOTE
	public void cargarCombosForeignKeyProducto(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales) throws Exception {   
		this.cargarCombosTodosForeignKeyProductoListas(cargarCombosDependencia);
				
		this.addItemDefectoCombosTodosForeignKeyProducto();
		
		this.cargarCombosFrameForeignKeyProducto();						
		
		if(conInitActions) {
			this.initActionsCombosTodosForeignKeyProducto();
		}
		
		if(conSetVariablesGlobales) {
			this.setVariablesGlobalesCombosForeignKeyProducto();
		}
	}
	
	

	public void cargarCombosForeignKeyLinea(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyLineaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyLinea();
				this.cargarCombosFrameLineasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyLinea("Todos");
				}

			this.recargarComboTablaLinea(this.lineasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyLineaGrupo(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyLineaGrupoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyLineaGrupo();
				this.cargarCombosFrameLineaGruposForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyLineaGrupo("Todos");
				}

			this.recargarComboTablaLineaGrupo(this.lineagruposForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyLineaCategoria(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyLineaCategoriaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyLineaCategoria();
				this.cargarCombosFrameLineaCategoriasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyLineaCategoria("Todos");
				}

			this.recargarComboTablaLineaCategoria(this.lineacategoriasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyLineaMarca(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyLineaMarcaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyLineaMarca();
				this.cargarCombosFrameLineaMarcasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyLineaCategoria("Todos");
				}

			this.recargarComboTablaLineaMarca(this.lineamarcasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoProductoServicio(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoProductoServicioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoProductoServicio();
				this.cargarCombosFrameTipoProductoServiciosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyLineaCategoria("Todos");
				}

			this.recargarComboTablaTipoProductoServicio(this.tipoproductoserviciosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoProductoServicioInven(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoProductoServicioInvenListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoProductoServicioInven();
				this.cargarCombosFrameTipoProductoServicioInvensForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyLineaCategoria("Todos");
				}

			this.recargarComboTablaTipoProductoServicioInven(this.tipoproductoservicioinvensForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoCosteo(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoCosteoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoCosteo();
				this.cargarCombosFrameTipoCosteosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyLineaCategoria("Todos");
				}

			this.recargarComboTablaTipoCosteo(this.tipocosteosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyUnidad(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyUnidadListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyUnidad();
				this.cargarCombosFrameUnidadsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyLineaCategoria("Todos");
				}

			this.recargarComboTablaUnidad(this.unidadsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyUnidadPeso(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyUnidadPesoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyUnidadPeso();
				this.cargarCombosFrameUnidadPesosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyLineaCategoria("Todos");
				}

			this.recargarComboTablaUnidadPeso(this.unidadpesosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyArancel(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyArancelListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyArancel();
				this.cargarCombosFrameArancelsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyLineaCategoria("Todos");
				}

			this.recargarComboTablaArancel(this.arancelsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCliente(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyClienteListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCliente();
				this.cargarCombosFrameClientesForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyLineaCategoria("Todos");
				}

			this.recargarComboTablaCliente(this.clientesForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyClienteProveedorDefecto(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyClienteProveedorDefectoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyClienteProveedorDefecto();
				this.cargarCombosFrameClienteProveedorDefectosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyLineaCategoria("Todos");
				}

			this.recargarComboTablaClienteProveedorDefecto(this.clienteproveedordefectosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoProducto(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoProductoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoProducto();
				this.cargarCombosFrameTipoProductosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyLineaCategoria("Todos");
				}

			this.recargarComboTablaTipoProducto(this.tipoproductosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyColorProducto(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyColorProductoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyColorProducto();
				this.cargarCombosFrameColorProductosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyLineaCategoria("Todos");
				}

			this.recargarComboTablaColorProducto(this.colorproductosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyClaseProducto(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyClaseProductoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyClaseProducto();
				this.cargarCombosFrameClaseProductosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyLineaCategoria("Todos");
				}

			this.recargarComboTablaClaseProducto(this.claseproductosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEfectoProducto(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyEfectoProductoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyEfectoProducto();
				this.cargarCombosFrameEfectoProductosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyLineaCategoria("Todos");
				}

			this.recargarComboTablaEfectoProducto(this.efectoproductosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyMarcaProducto(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyMarcaProductoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyMarcaProducto();
				this.cargarCombosFrameMarcaProductosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyLineaCategoria("Todos");
				}

			this.recargarComboTablaMarcaProducto(this.marcaproductosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyModeloProducto(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyModeloProductoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyModeloProducto();
				this.cargarCombosFrameModeloProductosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyLineaCategoria("Todos");
				}

			this.recargarComboTablaModeloProducto(this.modeloproductosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyMaterialProducto(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyMaterialProductoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyMaterialProducto();
				this.cargarCombosFrameMaterialProductosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyLineaCategoria("Todos");
				}

			this.recargarComboTablaMaterialProducto(this.materialproductosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeySegmentoProducto(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeySegmentoProductoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeySegmentoProducto();
				this.cargarCombosFrameSegmentoProductosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyLineaCategoria("Todos");
				}

			this.recargarComboTablaSegmentoProducto(this.segmentoproductosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTallaProducto(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTallaProductoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTallaProducto();
				this.cargarCombosFrameTallaProductosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyLineaCategoria("Todos");
				}

			this.recargarComboTablaTallaProducto(this.tallaproductosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void jButtonNuevoProductoActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.FORM_RECARGAR;
			String sTipo="NUEVO_NORMAL";
			
			this.estaModoNuevo=true;
			
			if(this.productoSessionBean.getConGuardarRelaciones()) {
				this.dStart=(double)System.currentTimeMillis();
			}
				
			//if(this.esUsoDesdeHijo) {
			//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			//}
											
			if(this.jInternalFrameDetalleFormProducto==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}			
				
			ProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.producto,new Object(),this.productoParameterGeneral,this.productoReturnGeneral);
			
			
			if(jTableDatosProducto.getRowCount()>=1) {
				jTableDatosProducto.removeRowSelectionInterval(0, jTableDatosProducto.getRowCount()-1);						
			}
			
			this.isEsNuevoProducto=true;
			
			//ESTABLECE SI ES RELACIONADO O NO 
			this.habilitarDeshabilitarTipoMantenimientoProducto(esRelaciones);
			
			this.nuevoPreparar(false); 
			this.habilitarDeshabilitarControlesProducto(true);			
			//this.producto=new Producto();
			//this.producto.setIsChanged(true);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesProducto(false) ;						
			 
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualProducto() ;
			
			if(ProductoJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleProducto(esRelaciones);
			}
					
			//Se Duplica, sin sentido
			//this.actualizarInformacion("EVENTO_NUEVO",false,this.producto);	
			this.actualizarInformacion("INFO_PADRE",false,this.producto);				
			
			ProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.producto,new Object(),this.productoParameterGeneral,this.productoReturnGeneral);
			
			if(this.productoSessionBean.getConGuardarRelaciones()) {
				this.dEnd=(double)System.currentTimeMillis();					
				this.dDif=this.dEnd - this.dStart;
					
				if(Constantes.ISDEVELOPING) {
					System.out.println("Tiempo(ms) Nuevo Preparar Producto: " + this.dDif); 
				}
			}
			
			//false para que pueda generar eventos
			this.estaModoNuevo=false;
							
			//Con this.estaModoNuevo=false;, se permite actualizar y usar eventos control al mismo tiempo (FuncionTipo.LAST)			
			ProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.LAST,ControlTipo.FORM,EventoTipo.CLIC,EventoSubTipo.NEW,sTipo,this.producto,new Object(),this.productoParameterGeneral,this.productoReturnGeneral);
			
		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;			
		}
	}
	
	public void jButtonDuplicarProductoActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			Boolean soloDuplicarUno=false;
			Boolean conSeleccionarFilaTabla=false;
			
			this.estaModoNuevo=true;
			this.estaModoDuplicar=true;
			
			ArrayList<Producto> productosSeleccionados=new ArrayList<Producto>();
			int intSelectedRow =-1;
			Integer iNumRowsSeleccionados=0;
			int[] arrNumRowsSeleccionados=null;
			
			//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
			if(conSeleccionarFilaTabla) {
				arrNumRowsSeleccionados=this.jTableDatosProducto.getSelectedRows();
				iNumRowsSeleccionados=this.jTableDatosProducto.getSelectedRows().length;			
			}
			
			productosSeleccionados=this.getProductosSeleccionados(false);
				
			if((soloDuplicarUno && iNumRowsSeleccionados.equals(1)) || !soloDuplicarUno) {
				//LO HACE NUEVOPREPARAR
				//this.iIdNuevoProducto--;			
				//Producto productoAux= new Producto();			
				//productoAux.setId(this.iIdNuevoProducto);																
				
				//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
				//Producto productoOrigen=new Producto();
				//for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {				
				
				for(Producto productoOrigen : productosSeleccionados) {
					if(conSeleccionarFilaTabla) {
						if(!soloDuplicarUno) {
							//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
							//intSelectedRow =iNumRowSeleccionado;
						} else {
							intSelectedRow = this.jTableDatosProducto.getSelectedRow();
						}
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							productoOrigen =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							productoOrigen =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
						}
					}
					
					this.aumentarTamanioFilaNuevaTablaProducto();
					
					if(this.conTotales) {
						this.quitarFilaTotales();
					}
					
					this.nuevoPreparar(true);
					
					this.producto.setsType("DUPLICADO");
					
					this.setCopiarVariablesObjetosProducto(productoOrigen,this.producto,true,true);
					
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
					
					//LO HACE NUEVOPREPARAR
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.productoLogic.getProductos().add(this.productoAux);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.productos.add(this.productoAux);				
					}
					*/
				}
				
				this.inicializarActualizarBindingTablaProducto(false);
				
				this.jTableDatosProducto.setRowSelectionInterval(this.getIndiceNuevoProducto(), this.getIndiceNuevoProducto());
				
				int iLastRow =  this.jTableDatosProducto.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosProducto.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosProducto.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaProducto(false);
				}
			} else {
				throw new Exception("DEBE ESTAR SELECCIONADO 1 REGISTRO");
			}
			
		} catch(Exception e) {			
			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
		
		} finally {
			this.estaModoNuevo=false;
			this.estaModoDuplicar=false;
		}
	}
	
	public void jButtonCopiarProductoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			Boolean conSeleccionarFilaTabla=false;
			Integer iNumRowsSeleccionados=0;
			int[] intSelectedRows =null;
			int intSelectedRow =0;
			
			this.estaModoCopiar=true;
			
			ArrayList<Producto> productosSeleccionados=new ArrayList<Producto>();									
		
			Producto productoOrigen=new Producto();
			Producto productoDestino=new Producto();
				
			productosSeleccionados=this.getProductosSeleccionados(false);
			
			if(conSeleccionarFilaTabla) {
				iNumRowsSeleccionados=this.jTableDatosProducto.getSelectedRows().length;	
			}
			
			if(iNumRowsSeleccionados.equals(2) || productosSeleccionados.size()==2) {
				if(conSeleccionarFilaTabla) {
					intSelectedRows =this.jTableDatosProducto.getSelectedRows();
					intSelectedRow = intSelectedRows[0];	
									
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						productoOrigen =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						productoOrigen =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					intSelectedRow = intSelectedRows[1];
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						productoDestino =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						productoDestino =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				}
				
				productoOrigen =productosSeleccionados.get(0);
				productoDestino =productosSeleccionados.get(1);
				
				this.setCopiarVariablesObjetosProducto(productoOrigen,productoDestino,true,false);
				
				productoDestino.setsType("DUPLICADO");
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(productoDestino,productoLogic.getProductos());					
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(productoDestino,productos);
				}
				//ARCHITECTURE
				
				this.inicializarActualizarBindingTablaProducto(false);
				
				//this.jTableDatosProducto.setRowSelectionInterval(this.getIndiceNuevoProducto(), this.getIndiceNuevoProducto());
				
				int iLastRow =  this.jTableDatosProducto.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosProducto.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosProducto.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					//this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaProducto(false);
				}
			} else {
				throw new Exception("DEBEN ESTAR SELECCIONADOS 2 REGISTROS");
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.estaModoCopiar=false;
		}
	}
	
	public void jButtonVerFormProductoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormProducto==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.jInternalFrameDetalleFormProducto.setSelected(true);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonMostrarOcultarProductoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			Boolean isVisible=this.jPanelParametrosReportesProducto.isVisible();
			
			//BYDAN_BUSQUEDAS
			
			this.jTabbedPaneBusquedasProducto.setVisible(!isVisible);			
			
			
			this.jPanelParametrosReportesProducto.setVisible(!isVisible);
			this.jPanelPaginacionProducto.setVisible(!isVisible);
			this.jPanelAccionesProducto.setVisible(!isVisible);
							
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarProductoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.closingInternalFrameProducto();
			
			//if(this.jInternalFrameParent==null) {
				//this.dispose();
			/*} else {
				this.setVisible(false);
	        	this.setSelected(false);	
			}*/			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarReporteDinamicoProductoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameReporteDinamicoProducto();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarImportacionProductoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameImportacionProducto();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonAbrirOrderByProductoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			
			this.abrirInicializarFrameOrderByProducto();
			
			this.abrirFrameOrderByProducto();
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarOrderByProductoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameOrderByProducto();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void abrirFrameDetalleProducto(Boolean esRelaciones) throws Exception {	    	        
	    try {
			//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
			//this.jDesktopPane.add(jInternalFrameDetalleFormProducto);
			
			if(!esRelaciones) {
				if(this.jInternalFrameDetalleFormProducto.isMaximum()) {
					this.jInternalFrameDetalleFormProducto.setMaximum(false);
				}								
				
	    		this.jInternalFrameDetalleFormProducto.setSize(this.jInternalFrameDetalleFormProducto.iWidthFormulario,this.jInternalFrameDetalleFormProducto.iHeightFormulario);
	    	} else {
				if(this.iWidthScroll<this.jInternalFrameDetalleFormProducto.iWidthFormularioMaximo) {
	    			this.jInternalFrameDetalleFormProducto.setSize(this.iWidthScroll,this.iHeightScroll);
				} else {
					if(!this.jInternalFrameDetalleFormProducto.isMaximum()) {
						this.jInternalFrameDetalleFormProducto.setMaximum(true);
					}
				}
				
				if(this.jInternalFrameDetalleFormProducto.jContentPaneDetalleProducto.getWidth() > this.getWidth()) {
					this.jInternalFrameDetalleFormProducto.jTabbedPaneRelacionesProducto.setMinimumSize(new Dimension(this.jInternalFrameDetalleFormProducto.jContentPaneDetalleProducto.getWidth(),ProductoConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormProducto.jTabbedPaneRelacionesProducto.setMaximumSize(new Dimension(this.jInternalFrameDetalleFormProducto.jContentPaneDetalleProducto.getWidth(),ProductoConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormProducto.jTabbedPaneRelacionesProducto.setPreferredSize(new Dimension(this.jInternalFrameDetalleFormProducto.jContentPaneDetalleProducto.getWidth(),ProductoConstantesFunciones.ALTO_TABPANE_RELACIONES));
					
					Dimension dimension=new Dimension(); 
					
					

					if(BodegaProductoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaBodegaProducto();
					}

					if(DetalleImpuestoInvenJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaDetalleImpuestoInven();
					}

					if(IngredienteJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaIngrediente();
					}

					if(ParametroProductoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaParametroProducto();
					}

					if(PoliticaFactuJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaPoliticaFactu();
					}

					if(PoliticaProductoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaPoliticaProducto();
					}

					if(PrecioJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaPrecio();
					}

					if(PresupuestoProductoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaPresupuestoProducto();
					}

					if(PresupuestoVentasJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaPresupuestoVentas();
					}

					if(ProductoCaracJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaProductoCarac();
					}

					if(ProductoCuentaContableJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaProductoCuentaContable();
					}

					if(ProductoEspeciJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaProductoEspeci();
					}

					if(ProductoEstadisticaJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaProductoEstadistica();
					}

					if(ProductoPromocionJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaProductoPromocion();
					}

					if(ProductoReemplaJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaProductoReempla();
					}

					if(ProductoUnidadJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaProductoUnidad();
					}

					if(ProveedorProductoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaProveedorProducto();
					}

					if(SaldoMesProductoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaSaldoMesProducto();
					}

					if(SerieProductoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaSerieProducto();
					}

					if(ServicioClienteJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaServicioCliente();
					}

					if(UbicacionProduJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaUbicacionProdu();
					}
					
				}
	    	}
			
		
	       	this.jInternalFrameDetalleFormProducto.setVisible(true);
	        this.jInternalFrameDetalleFormProducto.setSelected(true);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirInicializarFrameOrderByProducto() throws Exception {	    	        
	    try {
			if(this.jInternalFrameOrderByProducto==null) {
				
				if(!this.conCargarMinimo) {
					this.jInternalFrameOrderByProducto=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByProducto,false,this);
				} else {
					this.jInternalFrameOrderByProducto=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByProducto,true,this);
				}
				
				this.jDesktopPane.add(this.jInternalFrameOrderByProducto);
				this.jInternalFrameOrderByProducto.setVisible(false);
				this.jInternalFrameOrderByProducto.setSelected(false);
				
				this.jInternalFrameOrderByProducto.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByProducto"));
				
				this.inicializarActualizarBindingTablaOrderByProducto();
			}
		} catch (final Exception e) {
			
		}
	}
	
	
	
	public void abrirInicializarFrameImportacionProducto() throws Exception {	    	        
	    try {
			if(this.jInternalFrameImportacionProducto==null) {
				
				this.jInternalFrameImportacionProducto=new ImportacionJInternalFrame(ProductoConstantesFunciones.SCLASSWEBTITULO,this);			
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionProducto);							
				
				this.jDesktopPane.add(this.jInternalFrameImportacionProducto);
				this.jInternalFrameImportacionProducto.setVisible(false);
				this.jInternalFrameImportacionProducto.setSelected(false);


				this.jInternalFrameImportacionProducto.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionProducto"));
				this.jInternalFrameImportacionProducto.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionProducto"));
				this.jInternalFrameImportacionProducto.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionProducto"));


			}
		} catch (final Exception e) {
			
		}
	}		
	
	
	
	public void abrirInicializarFrameReporteDinamicoProducto() throws Exception {	    	        
	    try {
			
			if(this.jInternalFrameReporteDinamicoProducto==null) {
				this.jInternalFrameReporteDinamicoProducto=new ReporteDinamicoJInternalFrame(ProductoConstantesFunciones.SCLASSWEBTITULO,this);	
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoProducto);	
	
	
				this.jDesktopPane.add(this.jInternalFrameReporteDinamicoProducto);
				this.jInternalFrameReporteDinamicoProducto.setVisible(false);
				this.jInternalFrameReporteDinamicoProducto.setSelected(false);
	
	
	
				this.jInternalFrameReporteDinamicoProducto.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoProducto"));
				this.jInternalFrameReporteDinamicoProducto.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoProducto"));
				this.jInternalFrameReporteDinamicoProducto.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoProducto"));
	
				this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualProducto();
			}

		} catch (final Exception e) {
			
		}
	}	
	
	
	
		

	public void redimensionarTablaPanelRelacionadaBodegaProducto() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormProducto.bodegaproductoBeanSwingJInternalFrame.jScrollPanelDatosBodegaProducto.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormProducto.jContentPaneDetalleProducto.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormProducto.bodegaproductoBeanSwingJInternalFrame.jScrollPanelDatosBodegaProducto.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormProducto.bodegaproductoBeanSwingJInternalFrame.jScrollPanelDatosBodegaProducto.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormProducto.bodegaproductoBeanSwingJInternalFrame.jScrollPanelDatosBodegaProducto.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaDetalleImpuestoInven() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenBeanSwingJInternalFrame.jScrollPanelDatosDetalleImpuestoInven.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormProducto.jContentPaneDetalleProducto.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenBeanSwingJInternalFrame.jScrollPanelDatosDetalleImpuestoInven.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenBeanSwingJInternalFrame.jScrollPanelDatosDetalleImpuestoInven.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenBeanSwingJInternalFrame.jScrollPanelDatosDetalleImpuestoInven.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaIngrediente() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormProducto.ingredienteBeanSwingJInternalFrame.jScrollPanelDatosIngrediente.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormProducto.jContentPaneDetalleProducto.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormProducto.ingredienteBeanSwingJInternalFrame.jScrollPanelDatosIngrediente.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormProducto.ingredienteBeanSwingJInternalFrame.jScrollPanelDatosIngrediente.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormProducto.ingredienteBeanSwingJInternalFrame.jScrollPanelDatosIngrediente.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaParametroProducto() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormProducto.parametroproductoBeanSwingJInternalFrame.jScrollPanelDatosParametroProducto.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormProducto.jContentPaneDetalleProducto.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormProducto.parametroproductoBeanSwingJInternalFrame.jScrollPanelDatosParametroProducto.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormProducto.parametroproductoBeanSwingJInternalFrame.jScrollPanelDatosParametroProducto.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormProducto.parametroproductoBeanSwingJInternalFrame.jScrollPanelDatosParametroProducto.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaPoliticaFactu() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormProducto.politicafactuBeanSwingJInternalFrame.jScrollPanelDatosPoliticaFactu.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormProducto.jContentPaneDetalleProducto.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormProducto.politicafactuBeanSwingJInternalFrame.jScrollPanelDatosPoliticaFactu.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormProducto.politicafactuBeanSwingJInternalFrame.jScrollPanelDatosPoliticaFactu.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormProducto.politicafactuBeanSwingJInternalFrame.jScrollPanelDatosPoliticaFactu.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaPoliticaProducto() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormProducto.politicaproductoBeanSwingJInternalFrame.jScrollPanelDatosPoliticaProducto.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormProducto.jContentPaneDetalleProducto.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormProducto.politicaproductoBeanSwingJInternalFrame.jScrollPanelDatosPoliticaProducto.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormProducto.politicaproductoBeanSwingJInternalFrame.jScrollPanelDatosPoliticaProducto.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormProducto.politicaproductoBeanSwingJInternalFrame.jScrollPanelDatosPoliticaProducto.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaPrecio() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormProducto.precioBeanSwingJInternalFrame.jScrollPanelDatosPrecio.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormProducto.jContentPaneDetalleProducto.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormProducto.precioBeanSwingJInternalFrame.jScrollPanelDatosPrecio.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormProducto.precioBeanSwingJInternalFrame.jScrollPanelDatosPrecio.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormProducto.precioBeanSwingJInternalFrame.jScrollPanelDatosPrecio.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaPresupuestoProducto() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormProducto.presupuestoproductoBeanSwingJInternalFrame.jScrollPanelDatosPresupuestoProducto.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormProducto.jContentPaneDetalleProducto.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormProducto.presupuestoproductoBeanSwingJInternalFrame.jScrollPanelDatosPresupuestoProducto.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormProducto.presupuestoproductoBeanSwingJInternalFrame.jScrollPanelDatosPresupuestoProducto.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormProducto.presupuestoproductoBeanSwingJInternalFrame.jScrollPanelDatosPresupuestoProducto.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaPresupuestoVentas() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormProducto.presupuestoventasBeanSwingJInternalFrame.jScrollPanelDatosPresupuestoVentas.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormProducto.jContentPaneDetalleProducto.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormProducto.presupuestoventasBeanSwingJInternalFrame.jScrollPanelDatosPresupuestoVentas.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormProducto.presupuestoventasBeanSwingJInternalFrame.jScrollPanelDatosPresupuestoVentas.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormProducto.presupuestoventasBeanSwingJInternalFrame.jScrollPanelDatosPresupuestoVentas.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaProductoCarac() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormProducto.productocaracBeanSwingJInternalFrame.jScrollPanelDatosProductoCarac.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormProducto.jContentPaneDetalleProducto.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormProducto.productocaracBeanSwingJInternalFrame.jScrollPanelDatosProductoCarac.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormProducto.productocaracBeanSwingJInternalFrame.jScrollPanelDatosProductoCarac.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormProducto.productocaracBeanSwingJInternalFrame.jScrollPanelDatosProductoCarac.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaProductoCuentaContable() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormProducto.productocuentacontableBeanSwingJInternalFrame.jScrollPanelDatosProductoCuentaContable.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormProducto.jContentPaneDetalleProducto.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormProducto.productocuentacontableBeanSwingJInternalFrame.jScrollPanelDatosProductoCuentaContable.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormProducto.productocuentacontableBeanSwingJInternalFrame.jScrollPanelDatosProductoCuentaContable.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormProducto.productocuentacontableBeanSwingJInternalFrame.jScrollPanelDatosProductoCuentaContable.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaProductoEspeci() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormProducto.productoespeciBeanSwingJInternalFrame.jScrollPanelDatosProductoEspeci.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormProducto.jContentPaneDetalleProducto.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormProducto.productoespeciBeanSwingJInternalFrame.jScrollPanelDatosProductoEspeci.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormProducto.productoespeciBeanSwingJInternalFrame.jScrollPanelDatosProductoEspeci.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormProducto.productoespeciBeanSwingJInternalFrame.jScrollPanelDatosProductoEspeci.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaProductoEstadistica() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormProducto.productoestadisticaBeanSwingJInternalFrame.jScrollPanelDatosProductoEstadistica.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormProducto.jContentPaneDetalleProducto.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormProducto.productoestadisticaBeanSwingJInternalFrame.jScrollPanelDatosProductoEstadistica.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormProducto.productoestadisticaBeanSwingJInternalFrame.jScrollPanelDatosProductoEstadistica.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormProducto.productoestadisticaBeanSwingJInternalFrame.jScrollPanelDatosProductoEstadistica.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaProductoPromocion() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormProducto.productopromocionBeanSwingJInternalFrame.jScrollPanelDatosProductoPromocion.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormProducto.jContentPaneDetalleProducto.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormProducto.productopromocionBeanSwingJInternalFrame.jScrollPanelDatosProductoPromocion.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormProducto.productopromocionBeanSwingJInternalFrame.jScrollPanelDatosProductoPromocion.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormProducto.productopromocionBeanSwingJInternalFrame.jScrollPanelDatosProductoPromocion.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaProductoReempla() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame.jScrollPanelDatosProductoReempla.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormProducto.jContentPaneDetalleProducto.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame.jScrollPanelDatosProductoReempla.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame.jScrollPanelDatosProductoReempla.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame.jScrollPanelDatosProductoReempla.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaProductoUnidad() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormProducto.productounidadBeanSwingJInternalFrame.jScrollPanelDatosProductoUnidad.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormProducto.jContentPaneDetalleProducto.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormProducto.productounidadBeanSwingJInternalFrame.jScrollPanelDatosProductoUnidad.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormProducto.productounidadBeanSwingJInternalFrame.jScrollPanelDatosProductoUnidad.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormProducto.productounidadBeanSwingJInternalFrame.jScrollPanelDatosProductoUnidad.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaProveedorProducto() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormProducto.proveedorproductoBeanSwingJInternalFrame.jScrollPanelDatosProveedorProducto.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormProducto.jContentPaneDetalleProducto.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormProducto.proveedorproductoBeanSwingJInternalFrame.jScrollPanelDatosProveedorProducto.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormProducto.proveedorproductoBeanSwingJInternalFrame.jScrollPanelDatosProveedorProducto.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormProducto.proveedorproductoBeanSwingJInternalFrame.jScrollPanelDatosProveedorProducto.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaSaldoMesProducto() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormProducto.saldomesproductoBeanSwingJInternalFrame.jScrollPanelDatosSaldoMesProducto.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormProducto.jContentPaneDetalleProducto.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormProducto.saldomesproductoBeanSwingJInternalFrame.jScrollPanelDatosSaldoMesProducto.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormProducto.saldomesproductoBeanSwingJInternalFrame.jScrollPanelDatosSaldoMesProducto.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormProducto.saldomesproductoBeanSwingJInternalFrame.jScrollPanelDatosSaldoMesProducto.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaSerieProducto() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame.jScrollPanelDatosSerieProducto.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormProducto.jContentPaneDetalleProducto.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame.jScrollPanelDatosSerieProducto.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame.jScrollPanelDatosSerieProducto.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame.jScrollPanelDatosSerieProducto.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaServicioCliente() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormProducto.servicioclienteBeanSwingJInternalFrame.jScrollPanelDatosServicioCliente.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormProducto.jContentPaneDetalleProducto.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormProducto.servicioclienteBeanSwingJInternalFrame.jScrollPanelDatosServicioCliente.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormProducto.servicioclienteBeanSwingJInternalFrame.jScrollPanelDatosServicioCliente.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormProducto.servicioclienteBeanSwingJInternalFrame.jScrollPanelDatosServicioCliente.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaUbicacionProdu() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormProducto.ubicacionproduBeanSwingJInternalFrame.jScrollPanelDatosUbicacionProdu.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormProducto.jContentPaneDetalleProducto.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormProducto.ubicacionproduBeanSwingJInternalFrame.jScrollPanelDatosUbicacionProdu.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormProducto.ubicacionproduBeanSwingJInternalFrame.jScrollPanelDatosUbicacionProdu.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormProducto.ubicacionproduBeanSwingJInternalFrame.jScrollPanelDatosUbicacionProdu.setPreferredSize(dimension);


	}
					
	public void cerrarFrameDetalleProducto() throws Exception {	    	        
	    try {
			//this.jDesktopPane.add(jInternalFrameDetalleFormProducto);
			
	       	this.jInternalFrameDetalleFormProducto.setVisible(false);
	        this.jInternalFrameDetalleFormProducto.setSelected(false);
			
			//this.jInternalFrameDetalleFormProducto.dispose();
			//this.jInternalFrameDetalleFormProducto=null;
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirFrameReporteDinamicoProducto() throws Exception {	    	        
	    try {
			
			this.jInternalFrameReporteDinamicoProducto.setVisible(true);
	        this.jInternalFrameReporteDinamicoProducto.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void abrirFrameImportacionProducto() throws Exception {	    	        		
	    try {			
			this.jInternalFrameImportacionProducto.setVisible(true);
	        this.jInternalFrameImportacionProducto.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
	    }		
	}	
	
	
	
	
	
	public void abrirFrameOrderByProducto() throws Exception {	    	        		
	    try {
			this.jInternalFrameOrderByProducto.setVisible(true);
	        this.jInternalFrameOrderByProducto.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameOrderByProducto() throws Exception {	    	        		
	    try {			
			this.jInternalFrameOrderByProducto.setVisible(false);
	        this.jInternalFrameOrderByProducto.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameReporteDinamicoProducto() throws Exception {			
	    try {
			this.jInternalFrameReporteDinamicoProducto.setVisible(false);
	        this.jInternalFrameReporteDinamicoProducto.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameImportacionProducto() throws Exception {	    	        		
	    try {
			this.jInternalFrameImportacionProducto.setVisible(false);
	        this.jInternalFrameImportacionProducto.setSelected(false);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	

				public void abrirFrameTreeLinea(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeLinea);
						LineaBeanSwingJInternalFrame lineaBeanSwingJInternalFrame=new LineaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						lineaBeanSwingJInternalFrame.setJInternalFrameParent(this);
						lineaBeanSwingJInternalFrame.jInternalFrameTreeLinea.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							lineaBeanSwingJInternalFrame.jInternalFrameTreeLinea.sTipoBusqueda="Linea";
						}

						lineaBeanSwingJInternalFrame.getTodosLineaArbol();
						lineaBeanSwingJInternalFrame.jInternalFrameTreeLinea.setLineas(lineaBeanSwingJInternalFrame.lineasArbol);
						lineaBeanSwingJInternalFrame.jInternalFrameTreeLinea.CargarTreeLinea();
						lineaBeanSwingJInternalFrame.jInternalFrameTreeLinea.setVisible(true);
						lineaBeanSwingJInternalFrame.jInternalFrameTreeLinea.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						lineaBeanSwingJInternalFrame.jInternalFrameTreeLinea.jInternalFrameParent=this;
						TitledBorder titledBorderProducto=(TitledBorder)this.jScrollPanelDatosProducto.getBorder();
						TitledBorder titledBorderLinea=(TitledBorder)lineaBeanSwingJInternalFrame.jScrollPanelDatosLinea.getBorder();

						titledBorderLinea.setTitle(titledBorderProducto.getTitle() + " -> Linea");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,lineaBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(lineaBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeLinea(LineaBeanSwingJInternalFrame jInternalFrameTreeLinea) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeLinea);
						jInternalFrameTreeLinea.setVisible(false);
						jInternalFrameTreeLinea.setSelected(false);
						//jInternalFrameTreeLinea.dispose();
						//jInternalFrameTreeLinea=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}

				public void abrirFrameTreeLineaGrupo(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeLinea);
						LineaBeanSwingJInternalFrame lineaBeanSwingJInternalFrame=new LineaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						lineaBeanSwingJInternalFrame.setJInternalFrameParent(this);
						lineaBeanSwingJInternalFrame.jInternalFrameTreeLinea.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							lineaBeanSwingJInternalFrame.jInternalFrameTreeLinea.sTipoBusqueda="LineaGrupo";
						}

						lineaBeanSwingJInternalFrame.getTodosLineaArbol();
						lineaBeanSwingJInternalFrame.jInternalFrameTreeLinea.setLineas(lineaBeanSwingJInternalFrame.lineasArbol);
						lineaBeanSwingJInternalFrame.jInternalFrameTreeLinea.CargarTreeLinea();
						lineaBeanSwingJInternalFrame.jInternalFrameTreeLinea.setVisible(true);
						lineaBeanSwingJInternalFrame.jInternalFrameTreeLinea.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						lineaBeanSwingJInternalFrame.jInternalFrameTreeLinea.jInternalFrameParent=this;
						TitledBorder titledBorderProducto=(TitledBorder)this.jScrollPanelDatosProducto.getBorder();
						TitledBorder titledBorderLineaGrupo=(TitledBorder)lineaBeanSwingJInternalFrame.jScrollPanelDatosLinea.getBorder();

						titledBorderLineaGrupo.setTitle(titledBorderProducto.getTitle() + " -> Linea");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,lineaBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(lineaBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeLineaGrupo(LineaBeanSwingJInternalFrame jInternalFrameTreeLinea) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeLinea);
						jInternalFrameTreeLinea.setVisible(false);
						jInternalFrameTreeLinea.setSelected(false);
						//jInternalFrameTreeLinea.dispose();
						//jInternalFrameTreeLinea=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}

				public void abrirFrameTreeLineaCategoria(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeLinea);
						LineaBeanSwingJInternalFrame lineaBeanSwingJInternalFrame=new LineaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						lineaBeanSwingJInternalFrame.setJInternalFrameParent(this);
						lineaBeanSwingJInternalFrame.jInternalFrameTreeLinea.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							lineaBeanSwingJInternalFrame.jInternalFrameTreeLinea.sTipoBusqueda="LineaCategoria";
						}

						lineaBeanSwingJInternalFrame.getTodosLineaArbol();
						lineaBeanSwingJInternalFrame.jInternalFrameTreeLinea.setLineas(lineaBeanSwingJInternalFrame.lineasArbol);
						lineaBeanSwingJInternalFrame.jInternalFrameTreeLinea.CargarTreeLinea();
						lineaBeanSwingJInternalFrame.jInternalFrameTreeLinea.setVisible(true);
						lineaBeanSwingJInternalFrame.jInternalFrameTreeLinea.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						lineaBeanSwingJInternalFrame.jInternalFrameTreeLinea.jInternalFrameParent=this;
						TitledBorder titledBorderProducto=(TitledBorder)this.jScrollPanelDatosProducto.getBorder();
						TitledBorder titledBorderLineaCategoria=(TitledBorder)lineaBeanSwingJInternalFrame.jScrollPanelDatosLinea.getBorder();

						titledBorderLineaCategoria.setTitle(titledBorderProducto.getTitle() + " -> Linea");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,lineaBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(lineaBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeLineaCategoria(LineaBeanSwingJInternalFrame jInternalFrameTreeLinea) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeLinea);
						jInternalFrameTreeLinea.setVisible(false);
						jInternalFrameTreeLinea.setSelected(false);
						//jInternalFrameTreeLinea.dispose();
						//jInternalFrameTreeLinea=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}

				public void abrirFrameTreeLineaMarca(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeLinea);
						LineaBeanSwingJInternalFrame lineaBeanSwingJInternalFrame=new LineaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						lineaBeanSwingJInternalFrame.setJInternalFrameParent(this);
						lineaBeanSwingJInternalFrame.jInternalFrameTreeLinea.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							lineaBeanSwingJInternalFrame.jInternalFrameTreeLinea.sTipoBusqueda="LineaMarca";
						}

						lineaBeanSwingJInternalFrame.getTodosLineaArbol();
						lineaBeanSwingJInternalFrame.jInternalFrameTreeLinea.setLineas(lineaBeanSwingJInternalFrame.lineasArbol);
						lineaBeanSwingJInternalFrame.jInternalFrameTreeLinea.CargarTreeLinea();
						lineaBeanSwingJInternalFrame.jInternalFrameTreeLinea.setVisible(true);
						lineaBeanSwingJInternalFrame.jInternalFrameTreeLinea.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						lineaBeanSwingJInternalFrame.jInternalFrameTreeLinea.jInternalFrameParent=this;
						TitledBorder titledBorderProducto=(TitledBorder)this.jScrollPanelDatosProducto.getBorder();
						TitledBorder titledBorderLineaMarca=(TitledBorder)lineaBeanSwingJInternalFrame.jScrollPanelDatosLinea.getBorder();

						titledBorderLineaMarca.setTitle(titledBorderProducto.getTitle() + " -> Linea");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,lineaBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(lineaBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeLineaMarca(LineaBeanSwingJInternalFrame jInternalFrameTreeLinea) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeLinea);
						jInternalFrameTreeLinea.setVisible(false);
						jInternalFrameTreeLinea.setSelected(false);
						//jInternalFrameTreeLinea.dispose();
						//jInternalFrameTreeLinea=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}
	
	public void jButtonModificarProductoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.modificarProducto(evt,-1,false);
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void modificarProducto(ActionEvent evt,int rowIndex,Boolean esRelaciones) throws Exception {   
		try {
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosProducto.getSelectedRow();
			}
			
			this.habilitarDeshabilitarControlesProducto(true);
			//this.isEsNuevoProducto=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.actualizarEstadoCeldasBotonesProducto("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesProducto(false) ;
			
			if(productoSessionBean.getConGuardarRelaciones()) {
			

				if(this.jInternalFrameDetalleFormProducto.proveedorproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.proveedorproductoBeanSwingJInternalFrame.proveedorproductoSessionBean.getEsGuardarRelacionado() && ProveedorProductoJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonProveedorProductoActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormProducto.precioBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.precioBeanSwingJInternalFrame.precioSessionBean.getEsGuardarRelacionado() && PrecioJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonPrecioActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenBeanSwingJInternalFrame.detalleimpuestoinvenSessionBean.getEsGuardarRelacionado() && DetalleImpuestoInvenJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonDetalleImpuestoInvenActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormProducto.presupuestoventasBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.presupuestoventasBeanSwingJInternalFrame.presupuestoventasSessionBean.getEsGuardarRelacionado() && PresupuestoVentasJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonPresupuestoVentasActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormProducto.politicaproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.politicaproductoBeanSwingJInternalFrame.politicaproductoSessionBean.getEsGuardarRelacionado() && PoliticaProductoJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonPoliticaProductoActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame.serieproductoSessionBean.getEsGuardarRelacionado() && SerieProductoJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonSerieProductoActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormProducto.ubicacionproduBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.ubicacionproduBeanSwingJInternalFrame.ubicacionproduSessionBean.getEsGuardarRelacionado() && UbicacionProduJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonUbicacionProduActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormProducto.parametroproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.parametroproductoBeanSwingJInternalFrame.parametroproductoSessionBean.getEsGuardarRelacionado() && ParametroProductoJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonParametroProductoActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormProducto.productounidadBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.productounidadBeanSwingJInternalFrame.productounidadSessionBean.getEsGuardarRelacionado() && ProductoUnidadJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonProductoUnidadActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormProducto.ingredienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.ingredienteBeanSwingJInternalFrame.ingredienteSessionBean.getEsGuardarRelacionado() && IngredienteJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonIngredienteActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormProducto.productocaracBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.productocaracBeanSwingJInternalFrame.productocaracSessionBean.getEsGuardarRelacionado() && ProductoCaracJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonProductoCaracActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormProducto.servicioclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.servicioclienteBeanSwingJInternalFrame.servicioclienteSessionBean.getEsGuardarRelacionado() && ServicioClienteJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonServicioClienteActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormProducto.productopromocionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.productopromocionBeanSwingJInternalFrame.productopromocionSessionBean.getEsGuardarRelacionado() && ProductoPromocionJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonProductoPromocionActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormProducto.productoespeciBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.productoespeciBeanSwingJInternalFrame.productoespeciSessionBean.getEsGuardarRelacionado() && ProductoEspeciJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonProductoEspeciActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame.productoreemplaSessionBean.getEsGuardarRelacionado() && ProductoReemplaJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonProductoReemplaActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormProducto.productoestadisticaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.productoestadisticaBeanSwingJInternalFrame.productoestadisticaSessionBean.getEsGuardarRelacionado() && ProductoEstadisticaJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonProductoEstadisticaActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormProducto.politicafactuBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.politicafactuBeanSwingJInternalFrame.politicafactuSessionBean.getEsGuardarRelacionado() && PoliticaFactuJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonPoliticaFactuActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormProducto.productocuentacontableBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.productocuentacontableBeanSwingJInternalFrame.productocuentacontableSessionBean.getEsGuardarRelacionado() && ProductoCuentaContableJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonProductoCuentaContableActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormProducto.bodegaproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.bodegaproductoBeanSwingJInternalFrame.bodegaproductoSessionBean.getEsGuardarRelacionado() && BodegaProductoJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonBodegaProductoActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormProducto.presupuestoproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.presupuestoproductoBeanSwingJInternalFrame.presupuestoproductoSessionBean.getEsGuardarRelacionado() && PresupuestoProductoJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonPresupuestoProductoActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormProducto.saldomesproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProducto.saldomesproductoBeanSwingJInternalFrame.saldomesproductoSessionBean.getEsGuardarRelacionado() && SaldoMesProductoJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonSaldoMesProductoActionPerformed(null,intSelectedRow,false,true,null);
				}
			}
			
			if(ProductoJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleProducto(esRelaciones);
			}
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualProducto(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarFilaTablaProductoActual() { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL
			Integer intSelectedRow = this.jTableDatosProducto.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void seleccionarProducto(ActionEvent evt,int rowIndex) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormProducto==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosProducto.getSelectedRow();
			}
			
			//this.habilitarDeshabilitarControlesProducto(true);
			//this.isEsNuevoProducto=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.jInternalFrameParent.setIdCombosCodigoDesdeBusquedaForeignKey(this.producto.getId(),this.sTipoBusqueda);
			
			this.dispose();
			
			//this.actualizarEstadoCeldasBotonesProducto("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			/*
			this.inicializarActualizarBindingBotonesProducto(false) ;
			
			if(ProductoJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleProducto(esRelaciones);
			}
			*/
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualProducto(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void setIdCombosCodigoDesdeBusquedaForeignKey(Long id,String sType)throws Exception{
		
		try {
			
			if(sType.equals("Cliente")) {
				if(!this.productoConstantesFunciones.cargarid_clienteProducto) {
					this.cargarCombosClientesForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingProducto(false,false);
					this.cargarCombosFrameClientesForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_cliente (id);

				this.recargarComboTablaCliente(this.clientesForeignKey);

			}
			
			if(sType.equals("ClienteProveedorDefecto")) {
				if(!this.productoConstantesFunciones.cargarid_cliente_proveedor_defectoProducto) {
					this.cargarCombosClienteProveedorDefectosForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingProducto(false,false);
					this.cargarCombosFrameClienteProveedorDefectosForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_cliente_proveedor_defecto (id);

				this.recargarComboTablaClienteProveedorDefecto(this.clienteproveedordefectosForeignKey);

			}
		} catch(Exception e) {
			throw e;
		}
	}
	
			
	
	public void recargarComboTablaLinea(List<Linea> lineasForeignKey)throws Exception{
		TableColumn tableColumnLinea=this.jTableDatosProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProducto,ProductoConstantesFunciones.LABEL_IDLINEA));
		TableCellEditor tableCellEditorLinea =tableColumnLinea.getCellEditor();

		LineaTableCell lineaTableCellFk=(LineaTableCell)tableCellEditorLinea;

		if(lineaTableCellFk!=null) {
			lineaTableCellFk.setlineasForeignKey(lineasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosProducto.getSelectedRow();

		//if(intSelectedRow<=0) {
			//lineaTableCellFk.setRowActual(intSelectedRow);
			//lineaTableCellFk.setlineasForeignKeyActual(lineasForeignKey);
		//}


		if(lineaTableCellFk!=null) {
			lineaTableCellFk.RecargarLineasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaLineaGrupo(List<Linea> lineagruposForeignKey)throws Exception{
		TableColumn tableColumnLineaGrupo=this.jTableDatosProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProducto,ProductoConstantesFunciones.LABEL_IDLINEAGRUPO));
		TableCellEditor tableCellEditorLineaGrupo =tableColumnLineaGrupo.getCellEditor();

		LineaTableCell lineaTableCellFk=(LineaTableCell)tableCellEditorLineaGrupo;

		if(lineaTableCellFk!=null) {
			lineaTableCellFk.setlineasForeignKey(lineagruposForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosProducto.getSelectedRow();

		//if(intSelectedRow<=0) {
			//lineaTableCellFk.setRowActual(intSelectedRow);
			//lineaTableCellFk.setlineasForeignKeyActual(lineagruposForeignKey);
		//}


		if(lineaTableCellFk!=null) {
			lineaTableCellFk.RecargarLineasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaLineaCategoria(List<Linea> lineacategoriasForeignKey)throws Exception{
		TableColumn tableColumnLineaCategoria=this.jTableDatosProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProducto,ProductoConstantesFunciones.LABEL_IDLINEACATEGORIA));
		TableCellEditor tableCellEditorLineaCategoria =tableColumnLineaCategoria.getCellEditor();

		LineaTableCell lineaTableCellFk=(LineaTableCell)tableCellEditorLineaCategoria;

		if(lineaTableCellFk!=null) {
			lineaTableCellFk.setlineasForeignKey(lineacategoriasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosProducto.getSelectedRow();

		//if(intSelectedRow<=0) {
			//lineaTableCellFk.setRowActual(intSelectedRow);
			//lineaTableCellFk.setlineasForeignKeyActual(lineacategoriasForeignKey);
		//}


		if(lineaTableCellFk!=null) {
			lineaTableCellFk.RecargarLineasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaLineaMarca(List<Linea> lineamarcasForeignKey)throws Exception{
		TableColumn tableColumnLineaMarca=this.jTableDatosProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProducto,ProductoConstantesFunciones.LABEL_IDLINEAMARCA));
		TableCellEditor tableCellEditorLineaMarca =tableColumnLineaMarca.getCellEditor();

		LineaTableCell lineaTableCellFk=(LineaTableCell)tableCellEditorLineaMarca;

		if(lineaTableCellFk!=null) {
			lineaTableCellFk.setlineasForeignKey(lineamarcasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosProducto.getSelectedRow();

		//if(intSelectedRow<=0) {
			//lineaTableCellFk.setRowActual(intSelectedRow);
			//lineaTableCellFk.setlineasForeignKeyActual(lineamarcasForeignKey);
		//}


		if(lineaTableCellFk!=null) {
			lineaTableCellFk.RecargarLineasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoProductoServicio(List<TipoProductoServicio> tipoproductoserviciosForeignKey)throws Exception{
		TableColumn tableColumnTipoProductoServicio=this.jTableDatosProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProducto,ProductoConstantesFunciones.LABEL_IDTIPOPRODUCTOSERVICIO));
		TableCellEditor tableCellEditorTipoProductoServicio =tableColumnTipoProductoServicio.getCellEditor();

		TipoProductoServicioTableCell tipoproductoservicioTableCellFk=(TipoProductoServicioTableCell)tableCellEditorTipoProductoServicio;

		if(tipoproductoservicioTableCellFk!=null) {
			tipoproductoservicioTableCellFk.settipoproductoserviciosForeignKey(tipoproductoserviciosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosProducto.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipoproductoservicioTableCellFk.setRowActual(intSelectedRow);
			//tipoproductoservicioTableCellFk.settipoproductoserviciosForeignKeyActual(tipoproductoserviciosForeignKey);
		//}


		if(tipoproductoservicioTableCellFk!=null) {
			tipoproductoservicioTableCellFk.RecargarTipoProductoServiciosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoProductoServicioInven(List<TipoProductoServicioInven> tipoproductoservicioinvensForeignKey)throws Exception{
		TableColumn tableColumnTipoProductoServicioInven=this.jTableDatosProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProducto,ProductoConstantesFunciones.LABEL_IDTIPOPRODUCTOSERVICIOINVEN));
		TableCellEditor tableCellEditorTipoProductoServicioInven =tableColumnTipoProductoServicioInven.getCellEditor();

		TipoProductoServicioInvenTableCell tipoproductoservicioinvenTableCellFk=(TipoProductoServicioInvenTableCell)tableCellEditorTipoProductoServicioInven;

		if(tipoproductoservicioinvenTableCellFk!=null) {
			tipoproductoservicioinvenTableCellFk.settipoproductoservicioinvensForeignKey(tipoproductoservicioinvensForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosProducto.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipoproductoservicioinvenTableCellFk.setRowActual(intSelectedRow);
			//tipoproductoservicioinvenTableCellFk.settipoproductoservicioinvensForeignKeyActual(tipoproductoservicioinvensForeignKey);
		//}


		if(tipoproductoservicioinvenTableCellFk!=null) {
			tipoproductoservicioinvenTableCellFk.RecargarTipoProductoServicioInvensForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoCosteo(List<TipoCosteo> tipocosteosForeignKey)throws Exception{
		TableColumn tableColumnTipoCosteo=this.jTableDatosProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProducto,ProductoConstantesFunciones.LABEL_IDTIPOCOSTEO));
		TableCellEditor tableCellEditorTipoCosteo =tableColumnTipoCosteo.getCellEditor();

		TipoCosteoTableCell tipocosteoTableCellFk=(TipoCosteoTableCell)tableCellEditorTipoCosteo;

		if(tipocosteoTableCellFk!=null) {
			tipocosteoTableCellFk.settipocosteosForeignKey(tipocosteosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosProducto.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipocosteoTableCellFk.setRowActual(intSelectedRow);
			//tipocosteoTableCellFk.settipocosteosForeignKeyActual(tipocosteosForeignKey);
		//}


		if(tipocosteoTableCellFk!=null) {
			tipocosteoTableCellFk.RecargarTipoCosteosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaUnidad(List<Unidad> unidadsForeignKey)throws Exception{
		TableColumn tableColumnUnidad=this.jTableDatosProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProducto,ProductoConstantesFunciones.LABEL_IDUNIDAD));
		TableCellEditor tableCellEditorUnidad =tableColumnUnidad.getCellEditor();

		UnidadTableCell unidadTableCellFk=(UnidadTableCell)tableCellEditorUnidad;

		if(unidadTableCellFk!=null) {
			unidadTableCellFk.setunidadsForeignKey(unidadsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosProducto.getSelectedRow();

		//if(intSelectedRow<=0) {
			//unidadTableCellFk.setRowActual(intSelectedRow);
			//unidadTableCellFk.setunidadsForeignKeyActual(unidadsForeignKey);
		//}


		if(unidadTableCellFk!=null) {
			unidadTableCellFk.RecargarUnidadsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaUnidadPeso(List<Unidad> unidadpesosForeignKey)throws Exception{
		TableColumn tableColumnUnidadPeso=this.jTableDatosProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProducto,ProductoConstantesFunciones.LABEL_IDUNIDADPESO));
		TableCellEditor tableCellEditorUnidadPeso =tableColumnUnidadPeso.getCellEditor();

		UnidadTableCell unidadTableCellFk=(UnidadTableCell)tableCellEditorUnidadPeso;

		if(unidadTableCellFk!=null) {
			unidadTableCellFk.setunidadsForeignKey(unidadpesosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosProducto.getSelectedRow();

		//if(intSelectedRow<=0) {
			//unidadTableCellFk.setRowActual(intSelectedRow);
			//unidadTableCellFk.setunidadsForeignKeyActual(unidadpesosForeignKey);
		//}


		if(unidadTableCellFk!=null) {
			unidadTableCellFk.RecargarUnidadsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaArancel(List<Arancel> arancelsForeignKey)throws Exception{
		TableColumn tableColumnArancel=this.jTableDatosProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProducto,ProductoConstantesFunciones.LABEL_IDARANCEL));
		TableCellEditor tableCellEditorArancel =tableColumnArancel.getCellEditor();

		ArancelTableCell arancelTableCellFk=(ArancelTableCell)tableCellEditorArancel;

		if(arancelTableCellFk!=null) {
			arancelTableCellFk.setarancelsForeignKey(arancelsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosProducto.getSelectedRow();

		//if(intSelectedRow<=0) {
			//arancelTableCellFk.setRowActual(intSelectedRow);
			//arancelTableCellFk.setarancelsForeignKeyActual(arancelsForeignKey);
		//}


		if(arancelTableCellFk!=null) {
			arancelTableCellFk.RecargarArancelsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCliente(List<Cliente> clientesForeignKey)throws Exception{
		TableColumn tableColumnCliente=this.jTableDatosProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProducto,ProductoConstantesFunciones.LABEL_IDCLIENTE));
		TableCellEditor tableCellEditorCliente =tableColumnCliente.getCellEditor();

		ClienteTableCell clienteTableCellFk=(ClienteTableCell)tableCellEditorCliente;

		if(clienteTableCellFk!=null) {
			clienteTableCellFk.setclientesForeignKey(clientesForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosProducto.getSelectedRow();

		//if(intSelectedRow<=0) {
			//clienteTableCellFk.setRowActual(intSelectedRow);
			//clienteTableCellFk.setclientesForeignKeyActual(clientesForeignKey);
		//}


		if(clienteTableCellFk!=null) {
			clienteTableCellFk.RecargarClientesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaClienteProveedorDefecto(List<Cliente> clienteproveedordefectosForeignKey)throws Exception{
		TableColumn tableColumnClienteProveedorDefecto=this.jTableDatosProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProducto,ProductoConstantesFunciones.LABEL_IDCLIENTEPROVEEDORDEFECTO));
		TableCellEditor tableCellEditorClienteProveedorDefecto =tableColumnClienteProveedorDefecto.getCellEditor();

		ClienteTableCell clienteTableCellFk=(ClienteTableCell)tableCellEditorClienteProveedorDefecto;

		if(clienteTableCellFk!=null) {
			clienteTableCellFk.setclientesForeignKey(clienteproveedordefectosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosProducto.getSelectedRow();

		//if(intSelectedRow<=0) {
			//clienteTableCellFk.setRowActual(intSelectedRow);
			//clienteTableCellFk.setclientesForeignKeyActual(clienteproveedordefectosForeignKey);
		//}


		if(clienteTableCellFk!=null) {
			clienteTableCellFk.RecargarClientesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoProducto(List<TipoProducto> tipoproductosForeignKey)throws Exception{
		TableColumn tableColumnTipoProducto=this.jTableDatosProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProducto,ProductoConstantesFunciones.LABEL_IDTIPOPRODUCTO));
		TableCellEditor tableCellEditorTipoProducto =tableColumnTipoProducto.getCellEditor();

		TipoProductoTableCell tipoproductoTableCellFk=(TipoProductoTableCell)tableCellEditorTipoProducto;

		if(tipoproductoTableCellFk!=null) {
			tipoproductoTableCellFk.settipoproductosForeignKey(tipoproductosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosProducto.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipoproductoTableCellFk.setRowActual(intSelectedRow);
			//tipoproductoTableCellFk.settipoproductosForeignKeyActual(tipoproductosForeignKey);
		//}


		if(tipoproductoTableCellFk!=null) {
			tipoproductoTableCellFk.RecargarTipoProductosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaColorProducto(List<ColorProducto> colorproductosForeignKey)throws Exception{
		TableColumn tableColumnColorProducto=this.jTableDatosProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProducto,ProductoConstantesFunciones.LABEL_IDCOLORPRODUCTO));
		TableCellEditor tableCellEditorColorProducto =tableColumnColorProducto.getCellEditor();

		ColorProductoTableCell colorproductoTableCellFk=(ColorProductoTableCell)tableCellEditorColorProducto;

		if(colorproductoTableCellFk!=null) {
			colorproductoTableCellFk.setcolorproductosForeignKey(colorproductosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosProducto.getSelectedRow();

		//if(intSelectedRow<=0) {
			//colorproductoTableCellFk.setRowActual(intSelectedRow);
			//colorproductoTableCellFk.setcolorproductosForeignKeyActual(colorproductosForeignKey);
		//}


		if(colorproductoTableCellFk!=null) {
			colorproductoTableCellFk.RecargarColorProductosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaClaseProducto(List<ClaseProducto> claseproductosForeignKey)throws Exception{
		TableColumn tableColumnClaseProducto=this.jTableDatosProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProducto,ProductoConstantesFunciones.LABEL_IDCLASEPRODUCTO));
		TableCellEditor tableCellEditorClaseProducto =tableColumnClaseProducto.getCellEditor();

		ClaseProductoTableCell claseproductoTableCellFk=(ClaseProductoTableCell)tableCellEditorClaseProducto;

		if(claseproductoTableCellFk!=null) {
			claseproductoTableCellFk.setclaseproductosForeignKey(claseproductosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosProducto.getSelectedRow();

		//if(intSelectedRow<=0) {
			//claseproductoTableCellFk.setRowActual(intSelectedRow);
			//claseproductoTableCellFk.setclaseproductosForeignKeyActual(claseproductosForeignKey);
		//}


		if(claseproductoTableCellFk!=null) {
			claseproductoTableCellFk.RecargarClaseProductosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaEfectoProducto(List<EfectoProducto> efectoproductosForeignKey)throws Exception{
		TableColumn tableColumnEfectoProducto=this.jTableDatosProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProducto,ProductoConstantesFunciones.LABEL_IDEFECTOPRODUCTO));
		TableCellEditor tableCellEditorEfectoProducto =tableColumnEfectoProducto.getCellEditor();

		EfectoProductoTableCell efectoproductoTableCellFk=(EfectoProductoTableCell)tableCellEditorEfectoProducto;

		if(efectoproductoTableCellFk!=null) {
			efectoproductoTableCellFk.setefectoproductosForeignKey(efectoproductosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosProducto.getSelectedRow();

		//if(intSelectedRow<=0) {
			//efectoproductoTableCellFk.setRowActual(intSelectedRow);
			//efectoproductoTableCellFk.setefectoproductosForeignKeyActual(efectoproductosForeignKey);
		//}


		if(efectoproductoTableCellFk!=null) {
			efectoproductoTableCellFk.RecargarEfectoProductosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaMarcaProducto(List<MarcaProducto> marcaproductosForeignKey)throws Exception{
		TableColumn tableColumnMarcaProducto=this.jTableDatosProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProducto,ProductoConstantesFunciones.LABEL_IDMARCAPRODUCTO));
		TableCellEditor tableCellEditorMarcaProducto =tableColumnMarcaProducto.getCellEditor();

		MarcaProductoTableCell marcaproductoTableCellFk=(MarcaProductoTableCell)tableCellEditorMarcaProducto;

		if(marcaproductoTableCellFk!=null) {
			marcaproductoTableCellFk.setmarcaproductosForeignKey(marcaproductosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosProducto.getSelectedRow();

		//if(intSelectedRow<=0) {
			//marcaproductoTableCellFk.setRowActual(intSelectedRow);
			//marcaproductoTableCellFk.setmarcaproductosForeignKeyActual(marcaproductosForeignKey);
		//}


		if(marcaproductoTableCellFk!=null) {
			marcaproductoTableCellFk.RecargarMarcaProductosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaModeloProducto(List<ModeloProducto> modeloproductosForeignKey)throws Exception{
		TableColumn tableColumnModeloProducto=this.jTableDatosProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProducto,ProductoConstantesFunciones.LABEL_IDMODELOPRODUCTO));
		TableCellEditor tableCellEditorModeloProducto =tableColumnModeloProducto.getCellEditor();

		ModeloProductoTableCell modeloproductoTableCellFk=(ModeloProductoTableCell)tableCellEditorModeloProducto;

		if(modeloproductoTableCellFk!=null) {
			modeloproductoTableCellFk.setmodeloproductosForeignKey(modeloproductosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosProducto.getSelectedRow();

		//if(intSelectedRow<=0) {
			//modeloproductoTableCellFk.setRowActual(intSelectedRow);
			//modeloproductoTableCellFk.setmodeloproductosForeignKeyActual(modeloproductosForeignKey);
		//}


		if(modeloproductoTableCellFk!=null) {
			modeloproductoTableCellFk.RecargarModeloProductosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaMaterialProducto(List<MaterialProducto> materialproductosForeignKey)throws Exception{
		TableColumn tableColumnMaterialProducto=this.jTableDatosProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProducto,ProductoConstantesFunciones.LABEL_IDMATERIALPRODUCTO));
		TableCellEditor tableCellEditorMaterialProducto =tableColumnMaterialProducto.getCellEditor();

		MaterialProductoTableCell materialproductoTableCellFk=(MaterialProductoTableCell)tableCellEditorMaterialProducto;

		if(materialproductoTableCellFk!=null) {
			materialproductoTableCellFk.setmaterialproductosForeignKey(materialproductosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosProducto.getSelectedRow();

		//if(intSelectedRow<=0) {
			//materialproductoTableCellFk.setRowActual(intSelectedRow);
			//materialproductoTableCellFk.setmaterialproductosForeignKeyActual(materialproductosForeignKey);
		//}


		if(materialproductoTableCellFk!=null) {
			materialproductoTableCellFk.RecargarMaterialProductosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaSegmentoProducto(List<SegmentoProducto> segmentoproductosForeignKey)throws Exception{
		TableColumn tableColumnSegmentoProducto=this.jTableDatosProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProducto,ProductoConstantesFunciones.LABEL_IDSEGMENTOPRODUCTO));
		TableCellEditor tableCellEditorSegmentoProducto =tableColumnSegmentoProducto.getCellEditor();

		SegmentoProductoTableCell segmentoproductoTableCellFk=(SegmentoProductoTableCell)tableCellEditorSegmentoProducto;

		if(segmentoproductoTableCellFk!=null) {
			segmentoproductoTableCellFk.setsegmentoproductosForeignKey(segmentoproductosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosProducto.getSelectedRow();

		//if(intSelectedRow<=0) {
			//segmentoproductoTableCellFk.setRowActual(intSelectedRow);
			//segmentoproductoTableCellFk.setsegmentoproductosForeignKeyActual(segmentoproductosForeignKey);
		//}


		if(segmentoproductoTableCellFk!=null) {
			segmentoproductoTableCellFk.RecargarSegmentoProductosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTallaProducto(List<TallaProducto> tallaproductosForeignKey)throws Exception{
		TableColumn tableColumnTallaProducto=this.jTableDatosProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProducto,ProductoConstantesFunciones.LABEL_IDTALLAPRODUCTO));
		TableCellEditor tableCellEditorTallaProducto =tableColumnTallaProducto.getCellEditor();

		TallaProductoTableCell tallaproductoTableCellFk=(TallaProductoTableCell)tableCellEditorTallaProducto;

		if(tallaproductoTableCellFk!=null) {
			tallaproductoTableCellFk.settallaproductosForeignKey(tallaproductosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosProducto.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tallaproductoTableCellFk.setRowActual(intSelectedRow);
			//tallaproductoTableCellFk.settallaproductosForeignKeyActual(tallaproductosForeignKey);
		//}


		if(tallaproductoTableCellFk!=null) {
			tallaproductoTableCellFk.RecargarTallaProductosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	

	public void setCombosCodigoDesdeBusquedaid_cliente (Long id) throws Exception {
		this.setActualClienteForeignKey(id,true,"Todos");

	};
	

	public void setCombosCodigoDesdeBusquedaid_cliente_proveedor_defecto (Long id) throws Exception {
		this.setActualClienteProveedorDefectoForeignKey(id,true,"Todos");

	};
	
	public void jButtonActualizarProductoActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingParametrosReportesProducto(false);
			
			//if(!this.isEsNuevoProducto) {								
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();	
				
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
			//}
				
			if(ProductoJInternalFrame.ISBINDING_MANUAL_TABLA) {
				this.setVariablesFormularioToObjetoActualProducto(this.producto,true);
				this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
				
			}
			
			if(this.permiteMantenimiento(this.producto)) {	
				this.actualizar();
				
				if(!this.isGuardarCambiosEnLote && !this.productoSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
					
					this.isEsNuevoProducto=true;
					this.inicializarActualizarBindingTablaProducto(false);
					this.isEsNuevoProducto=false;
				
				} else {					
					
					//PARA RELACIONADO ACTUALIZAR FILA TOTALES
					this.isEsNuevoProducto=true;
					this.procesoActualizarFilaTotales(false,"MANTENIMIENTO");
					this.isEsNuevoProducto=false;
				}
						
								
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesProducto(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualProducto(false);
				
				this.habilitarDeshabilitarControlesProducto(false);
			
												
				
				if(ProductoJInternalFrame.CON_DATOS_FRAME) {
					if(!this.isPostAccionSinCerrar) {
						this.cerrarFrameDetalleProducto();
					}
				}
				
				if(this.isPostAccionNuevo) {
					this.jButtonNuevoProductoActionPerformed(evt,productoSessionBean.getConGuardarRelaciones());
				} else {
					if(this.isPostAccionSinCerrar) {
						Integer intSelectedRowActual=this.getIndiceActualProducto(this.producto,intSelectedRow);
						
						if(intSelectedRow>-1) {
							this.jTableDatosProducto.setRowSelectionInterval(intSelectedRowActual, intSelectedRowActual);
							this.jButtonIdActionPerformed(evt,intSelectedRowActual,productoSessionBean.getConGuardarRelaciones(),false);
						}
					}
				}
				
				this.cancelar(false);
				
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.commitNewConnexionToDeep();
			}
			
			
			if(this.jInternalFrameParent!=null) { //&& this.isEsMantenimientoRelacionado) {
				Boolean esUsoDesdeHijoLocal=true;
				String sTipo="Formulario";
				Boolean conIrServidorAplicacionParent=false;
				Long id=this.producto.getId();
				ArrayList<String> arrClasses=new ArrayList<String>();
				
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();
				
				generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
				generalEntityParameterGeneral.setsDominio("Formulario");
				generalEntityParameterGeneral.setsDominioTipo(Producto.class.getName());
				
				this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Producto.class.getName(),sTipo,"FORMULARIO",esControlTabla,conIrServidorAplicacionParent,
					id,this, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.FORM,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
					evt,generalEntityParameterGeneral,this);
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonEliminarProductoActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.getNewConnexionToDeep("");
			}
			
			int intSelectedRow = this.jTableDatosProducto.getSelectedRow();	       
							
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
				this.producto.setIsDeleted(true);
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
				this.producto.setIsDeleted(true);
			}
			//ARCHITECTURE
			
			if(this.permiteMantenimiento(this.producto)) {
				this.eliminar();
				
				if(!this.isGuardarCambiosEnLote && !this.productoSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
				}
				
				((ProductoModel) this.jTableDatosProducto.getModel()).fireTableRowsDeleted(intSelectedRow,intSelectedRow);
				
				this.isEsNuevoProducto=true;
				this.inicializarActualizarBindingTablaProducto(false);
				this.isEsNuevoProducto=false;									
					
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesProducto(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualProducto(false);
				
				this.habilitarDeshabilitarControlesProducto(false);
				
				
				
				if(ProductoJInternalFrame.CON_DATOS_FRAME) {
					this.cerrarFrameDetalleProducto();
				}
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.closeNewConnexionToDeep();
			}
		}		
	}
		
	public void jButtonCancelarProductoActionPerformed(ActionEvent evt) throws Exception {                                         	   	       
	  	try {
			if(jTableDatosProducto.getRowCount()>=1) {
				jTableDatosProducto.removeRowSelectionInterval(0, jTableDatosProducto.getRowCount()-1);						
			}
						
			this.invalidValues=new InvalidValue[0];
			this.habilitarDeshabilitarControlesProducto(false);
			this.cancelar(true);			
			this.inicializarActualizarBindingTablaProducto(false);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesProducto(false) ;
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualProducto(false) ;
			
			this.isEsNuevoProducto=false;
			
			if(ProductoJInternalFrame.CON_DATOS_FRAME) {
				this.cerrarFrameDetalleProducto();
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonGuardarCambiosProductoActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.getNewConnexionToDeep("");
			}
			
			//this.estaModoGuardarCambios=true;
			
	    	this.guardarCambios();
			
			if(!this.isErrorGuardar) {
				this.procesarBusqueda(this.sAccionBusqueda);
				
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingProducto(false);
				
				//SI ES MANUAL
				if(ProductoJInternalFrame.ISBINDING_MANUAL) {				
					//this.inicializarActualizarBindingManualProducto();				
				}
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.closeNewConnexionToDeep();
			}
			
			//this.estaModoGuardarCambios=false;
		}
	}
	
	public void jButtonNuevoGuardarCambiosProductoActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			this.estaModoNuevo=true;
			this.estaModoNuevoGuardarCambios=true;
			
			//LO HACE NUEVOPREPARAR
			//this.iIdNuevoProducto--;			
			//Producto productoAux= new Producto();			
			//productoAux.setId(this.iIdNuevoProducto);
			
			if(this.jInternalFrameDetalleFormProducto==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.aumentarTamanioFilaNuevaTablaProducto();
			
			if(this.conTotales) {
				this.quitarFilaTotales();
			}
			
			this.nuevoPreparar(true);
			
			this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
			
			this.producto.setsType("NUEVO_GUARDAR_CAMBIOS");
			
			//LO HACE NUEVOPREPARAR
			/*
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				this.productoLogic.getProductos().add(this.productoAux);
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				this.productos.add(this.productoAux);				
			}
			*/
			
			this.inicializarActualizarBindingTablaProducto(false);
			
			this.jTableDatosProducto.setRowSelectionInterval(this.getIndiceNuevoProducto(), this.getIndiceNuevoProducto());
			
			int iLastRow =  this.jTableDatosProducto.getRowCount () - 1;
			Rectangle rectangle = this.jTableDatosProducto.getCellRect(iLastRow, 0, true);
			
			this.jTableDatosProducto.scrollRectToVisible(rectangle);
			
			//FILA TOTALES
			if(this.conTotales) {
				this.crearFilaTotales();
				
				this.inicializarActualizarBindingTablaProducto(false);
			}

		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;
			this.estaModoNuevoGuardarCambios=false;
		}
	}		
	
	public void jButtonRecargarInformacionProductoActionPerformed(ActionEvent evt) throws Exception {    		
		try {
			this.iNumeroPaginacionPagina=0;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingProducto(false,false);
			
	    	this.recargarInformacion();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingProducto(false);
			
			//SI ES MANUAL
			if(ProductoJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualProducto();
			}
			
			//this.abrirFrameTreeProducto();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.closeNewConnexionToDeep();
			}
		}	
	}
	
	
	public void jButtonGenerarImportacionProductoActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedReader bufferedReader = null;
		String sXmlStringFile="";
		String sPath="";
		this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
		DatoGeneralMinimo datoGeneralMinimo=new DatoGeneralMinimo();
		String sLine="";
		
		try {			
			if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR IMPORTACION DE ProductoS ?", "MANTENIMIENTO DE Producto", JOptionPane.OK_CANCEL_OPTION) == 0) {
				bufferedReader = new BufferedReader(new FileReader(this.jInternalFrameImportacionProducto.getFileImportacion().getAbsolutePath()));
								
				while ((sLine = bufferedReader.readLine()) != null) {
					datoGeneralMinimo=new DatoGeneralMinimo();
					datoGeneralMinimo.setsDescripcion(sLine);
					
					this.arrDatoGeneralMinimos.add(datoGeneralMinimo);
				}
				
				this.actualizarParametrosGeneralProducto();
						
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {						
					this.productoReturnGeneral=productoLogic.procesarImportacionProductosWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this.arrDatoGeneralMinimos,this.productoParameterGeneral);
						
				} else if(Constantes.ISUSAEJBREMOTE) {
						
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
						
				this.procesarProductoReturnGeneral();
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedReader != null) {
				bufferedReader.close();
			}	
		}				
	}
	
	
	
	public void jButtonAbrirImportacionProductoActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {
			int iReturnArchivo = this.jInternalFrameImportacionProducto.getjFileChooserImportacion().showOpenDialog(this);
 
            if (iReturnArchivo == JFileChooser.APPROVE_OPTION) {
            	this.jInternalFrameImportacionProducto.setFileImportacion(this.jInternalFrameImportacionProducto.getjFileChooserImportacion().getSelectedFile());
            	
				this.jInternalFrameImportacionProducto.getjTextFieldPathArchivoImportacion().setText(this.jInternalFrameImportacionProducto.getFileImportacion().getName());
				
				//System.out.println("ARCHIVO ESCOGIDO: "+this.fileImportacionProducto.getName());
				
            } else {
                //System.out.println("CANCELAR SELECCION");
				this.jInternalFrameImportacionProducto.getjTextFieldPathArchivoImportacion().setText("SELECCION CANCELADA");
            }			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}		
	}
	
	
	public void jButtonGenerarReporteDinamicoProductoActionPerformed(ActionEvent evt) throws Exception {    		
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {	
		
		ArrayList<Producto> productosSeleccionados=new ArrayList<Producto>();		

		productosSeleccionados=this.getProductosSeleccionados(true);
		
		
		this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoProducto.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();
		
		this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoProducto.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
		
		
		this.sTipoArchivoReporte=this.sTipoArchivoReporteDinamico;
		
		//this.sTipoReporteExtra="Base";
		
			InputStream reportFile=null;
			InputStream imageFile=null;
			
			imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		
			reportFile = AuxiliarReportes.class.getResourceAsStream("ProductoBaseDesign.jrxml");	
			
			sPath=this.parametroGeneralUsuario.getpath_exportar()+"ProductoBaseDesign.jrxml";
			
			sXmlStringFile=Funciones2.getStringFromInputStream(reportFile);
						
			bufferedWriter = new BufferedWriter(new FileWriter(sPath));
			
			
			sXmlStringFile=this.actualizarReporteDinamico(sXmlStringFile);
			
			
			bufferedWriter.write(sXmlStringFile);
			
			bufferedWriter.close();
			
			try{JasperCompileManager.compileReportToFile(sPath);}catch(Exception e){e.printStackTrace();}
			
			this.actualizarVariablesTipoReporte(false,true,false,sPath);
			
			/*
			this.esReporteDinamico=true;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");
			this.sTipoReporteExtra="";
			*/
			
			this.generarReporteProductos("Todos",productosSeleccionados );

			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.productoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				//DEBE APARECER EL REPORTE DIRECTAMENTE
				//JOptionPane.showMessageDialog(this,"GENERADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Producto",JOptionPane.INFORMATION_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}
	}		
	
	
	public String actualizarReporteDinamico(String sXmlStringFile) {				
		Reporte reporte=new Reporte();
		Integer iAnchoMaximoVertical=535;//781,782
		Integer iAnchoMaximoHorizontal=782;
		Integer iAnchoSum=0;
		Integer iAnchoColumna=0;
		
		Integer iAnchoMargenes=60;
		String sWidthGrafico="535";
		
		for(int index:this.jInternalFrameReporteDinamicoProducto.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoProducto.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case ProductoConstantesFunciones.LABEL_IDEMPRESA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Empresa_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Empresa_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Empresa_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Empresa_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoConstantesFunciones.LABEL_IDSUCURSAL:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Sucursal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Sucursal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Sucursal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Sucursal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoConstantesFunciones.LABEL_CODIGO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_digo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_digo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_digo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_digo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoConstantesFunciones.LABEL_NOMBRE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_mbre_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_mbre_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_mbre_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_mbre_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoConstantesFunciones.LABEL_NOMBREEXTRANJERO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_mbreExtranjero_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_mbreExtranjero_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_mbreExtranjero_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_mbreExtranjero_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoConstantesFunciones.LABEL_RESUMENDETALLE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_sumenDetalle_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_sumenDetalle_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_sumenDetalle_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_sumenDetalle_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoConstantesFunciones.LABEL_CODIGOBARRA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_digoBarra_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_digoBarra_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_digoBarra_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_digoBarra_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoConstantesFunciones.LABEL_IDLINEA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Linea_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Linea_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Linea_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Linea_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoConstantesFunciones.LABEL_IDLINEAGRUPO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_LineaGrupo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_LineaGrupo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_LineaGrupo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_LineaGrupo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoConstantesFunciones.LABEL_IDLINEACATEGORIA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_LineaCategoria_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_LineaCategoria_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_LineaCategoria_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_LineaCategoria_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoConstantesFunciones.LABEL_IDLINEAMARCA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_LineaMarca_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_LineaMarca_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_LineaMarca_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_LineaMarca_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoConstantesFunciones.LABEL_IDTIPOPRODUCTOSERVICIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoProductoServicio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoProductoServicio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoProductoServicio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoProductoServicio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoConstantesFunciones.LABEL_IDTIPOPRODUCTOSERVICIOINVEN:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoProductoServicioInven_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoProductoServicioInven_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoProductoServicioInven_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoProductoServicioInven_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoConstantesFunciones.LABEL_IDTIPOCOSTEO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoCosteo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoCosteo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoCosteo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoCosteo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoConstantesFunciones.LABEL_IDUNIDAD:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Unidad_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Unidad_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Unidad_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Unidad_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoConstantesFunciones.LABEL_IDUNIDADPESO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_UnidadPeso_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_UnidadPeso_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_UnidadPeso_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_UnidadPeso_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoConstantesFunciones.LABEL_IDARANCEL:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Arancel_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Arancel_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Arancel_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Arancel_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoConstantesFunciones.LABEL_IDCLIENTE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Cliente_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Cliente_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Cliente_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Cliente_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoConstantesFunciones.LABEL_IDCLIENTEPROVEEDORDEFECTO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ClienteProveedorDefecto_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ClienteProveedorDefecto_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ClienteProveedorDefecto_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ClienteProveedorDefecto_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoConstantesFunciones.LABEL_ESTAACTIVO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_taActivo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_taActivo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_taActivo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_taActivo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoConstantesFunciones.LABEL_DESCRIPCION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_scripcion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_scripcion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_scripcion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_scripcion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoConstantesFunciones.LABEL_PRECIO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ecio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ecio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ecio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ecio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoConstantesFunciones.LABEL_IVA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_a_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_a_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_a_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_a_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoConstantesFunciones.LABEL_IVAVALOR:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_aValor_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_aValor_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_aValor_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_aValor_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoConstantesFunciones.LABEL_ICE:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_e_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_e_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_e_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_e_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoConstantesFunciones.LABEL_ICEVALOR:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_eValor_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_eValor_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_eValor_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_eValor_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoConstantesFunciones.LABEL_DESCUENTO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_scuento_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_scuento_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_scuento_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_scuento_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoConstantesFunciones.LABEL_DESCUENTOVALOR:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_scuentoValor_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_scuentoValor_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_scuentoValor_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_scuentoValor_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoConstantesFunciones.LABEL_ARANCELPORCENTAJE:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ancelPorcentaje_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ancelPorcentaje_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ancelPorcentaje_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ancelPorcentaje_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoConstantesFunciones.LABEL_ARANCELVALOR:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ancelValor_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ancelValor_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ancelValor_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ancelValor_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoConstantesFunciones.LABEL_COMISION:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_mision_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_mision_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_mision_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_mision_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoConstantesFunciones.LABEL_COMISIONVALOR:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_misionValor_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_misionValor_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_misionValor_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_misionValor_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoConstantesFunciones.LABEL_DIASPRODUCCION:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_asProduccion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_asProduccion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_asProduccion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_asProduccion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoConstantesFunciones.LABEL_CONSTOCKNEGATIVO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_nStockNegativo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_nStockNegativo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_nStockNegativo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_nStockNegativo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoConstantesFunciones.LABEL_CONPRECIOMINIMO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_nPrecioMinimo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_nPrecioMinimo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_nPrecioMinimo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_nPrecioMinimo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoConstantesFunciones.LABEL_CONLOTE:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_nLote_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_nLote_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_nLote_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_nLote_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoConstantesFunciones.LABEL_CONCONFIRMACION:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_nConfirmacion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_nConfirmacion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_nConfirmacion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_nConfirmacion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoConstantesFunciones.LABEL_CONPRESUPUESTO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_nPresupuesto_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_nPresupuesto_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_nPresupuesto_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_nPresupuesto_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoConstantesFunciones.LABEL_CONIMPORTACION:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_nImportacion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_nImportacion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_nImportacion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_nImportacion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoConstantesFunciones.LABEL_CONFINAL:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_nFinal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_nFinal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_nFinal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_nFinal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoConstantesFunciones.LABEL_CONCONSEP:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_nConsep_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_nConsep_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_nConsep_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_nConsep_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoConstantesFunciones.LABEL_CONSERIE:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_nSerie_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_nSerie_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_nSerie_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_nSerie_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoConstantesFunciones.LABEL_CONBALANZA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_nBalanza_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_nBalanza_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_nBalanza_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_nBalanza_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoConstantesFunciones.LABEL_ALTO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_to_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_to_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_to_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_to_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoConstantesFunciones.LABEL_ANCHO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_cho_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_cho_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_cho_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_cho_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoConstantesFunciones.LABEL_LARGO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_rgo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_rgo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_rgo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_rgo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoConstantesFunciones.LABEL_VOLUMEN:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_lumen_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_lumen_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_lumen_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_lumen_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoConstantesFunciones.LABEL_PESO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_so_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_so_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_so_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_so_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoConstantesFunciones.LABEL_GRAMOS:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_amos_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_amos_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_amos_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_amos_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoConstantesFunciones.LABEL_UNIDADESCAJA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_idadesCaja_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_idadesCaja_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_idadesCaja_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_idadesCaja_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoConstantesFunciones.LABEL_MARGEN:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_rgen_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_rgen_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_rgen_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_rgen_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoConstantesFunciones.LABEL_FACTOR:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ctor_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ctor_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ctor_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ctor_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoConstantesFunciones.LABEL_FOB:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_b_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_b_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_b_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_b_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoConstantesFunciones.LABEL_FOB2:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_b2_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_b2_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_b2_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_b2_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoConstantesFunciones.LABEL_IDTIPOPRODUCTO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoProducto_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoProducto_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoProducto_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoProducto_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoConstantesFunciones.LABEL_IDCOLORPRODUCTO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ColorProducto_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ColorProducto_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ColorProducto_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ColorProducto_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoConstantesFunciones.LABEL_IDCLASEPRODUCTO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ClaseProducto_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ClaseProducto_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ClaseProducto_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ClaseProducto_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoConstantesFunciones.LABEL_IDEFECTOPRODUCTO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_EfectoProducto_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_EfectoProducto_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_EfectoProducto_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_EfectoProducto_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoConstantesFunciones.LABEL_IDMARCAPRODUCTO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_MarcaProducto_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_MarcaProducto_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_MarcaProducto_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_MarcaProducto_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoConstantesFunciones.LABEL_IDMODELOPRODUCTO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ModeloProducto_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ModeloProducto_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ModeloProducto_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ModeloProducto_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoConstantesFunciones.LABEL_IDMATERIALPRODUCTO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_MaterialProducto_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_MaterialProducto_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_MaterialProducto_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_MaterialProducto_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoConstantesFunciones.LABEL_IDSEGMENTOPRODUCTO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_SegmentoProducto_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_SegmentoProducto_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_SegmentoProducto_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_SegmentoProducto_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoConstantesFunciones.LABEL_IDTALLAPRODUCTO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TallaProducto_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TallaProducto_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TallaProducto_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TallaProducto_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoConstantesFunciones.LABEL_GRUPO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_upo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_upo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_upo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_upo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoConstantesFunciones.LABEL_REFERENCIA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ferencia_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ferencia_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ferencia_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ferencia_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoConstantesFunciones.LABEL_APLICACION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_licacion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_licacion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_licacion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_licacion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProductoConstantesFunciones.LABEL_PROCEDENCIA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ocedencia_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ocedencia_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ocedencia_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ocedencia_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;
					
				default :
					break;
			}
		}
		
		iAnchoSum+=iAnchoMargenes;
		
		if(iAnchoSum>iAnchoMaximoVertical) {
			sXmlStringFile=sXmlStringFile.replace("595", "842");
			//sXmlStringFile=sXmlStringFile.replace("842", "595");
			sXmlStringFile=sXmlStringFile.replace("535", "782");
			sXmlStringFile=sXmlStringFile.replace("Portrait", "Landscape");			
			sWidthGrafico="782";
		
		} else {
			sXmlStringFile=sXmlStringFile.replace("842", "595");
			//sXmlStringFile=sXmlStringFile.replace("595", "842");
			sXmlStringFile=sXmlStringFile.replace("782", "535");
			sXmlStringFile=sXmlStringFile.replace("Landscape", "Portrait");
			sWidthGrafico="535";
		}
		
		if(this.jInternalFrameReporteDinamicoProducto.getjCheckBoxConGraficoDinamico().isSelected()) {
			sXmlStringFile=this.actualizarGraficoReporteDinamico(sXmlStringFile,sWidthGrafico);
		} else {
			sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "30");
		}
		
		return sXmlStringFile;
	}
	
	
	
	public String actualizarGraficoReporteDinamico(String sXmlStringFile,String sWidthGrafico) {		
		String strGrafico="";		
		String sTipo="NORMAL";
		String strCategorySeries="";
		String sNombreCampoCategoria="";
		String sNombreCampoCategoriaValor="";
		Reporte reporte=new Reporte();
		Reporte reporteCategoriaValor=new Reporte();
		Reporte reporteTipoGraficoReporte=new Reporte();
		Boolean existe=false;
		
		sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "280");
		
		//CATEGORIA GRAFICO				
		reporte=((Reporte)this.jInternalFrameReporteDinamicoProducto.getjComboBoxColumnaCategoriaGrafico().getSelectedItem());
				
		//TIPO GRAFICO REPORTE
		reporteTipoGraficoReporte=((Reporte)this.jInternalFrameReporteDinamicoProducto.getjComboBoxTiposGraficosReportesDinamico().getSelectedItem());
		
		String sTipoGraficoReporte=reporteTipoGraficoReporte.getsCodigo();
		
		switch(reporte.getsCodigo()) {
			
				case ProductoConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoria="id_empresa";
					break;

				case ProductoConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoria="id_sucursal";
					break;

				case ProductoConstantesFunciones.LABEL_CODIGO:
					sNombreCampoCategoria="codigo";
					break;

				case ProductoConstantesFunciones.LABEL_NOMBRE:
					sNombreCampoCategoria="nombre";
					break;

				case ProductoConstantesFunciones.LABEL_NOMBREEXTRANJERO:
					sNombreCampoCategoria="nombre_extranjero";
					break;

				case ProductoConstantesFunciones.LABEL_RESUMENDETALLE:
					sNombreCampoCategoria="resumen_detalle";
					break;

				case ProductoConstantesFunciones.LABEL_CODIGOBARRA:
					sNombreCampoCategoria="codigo_barra";
					break;

				case ProductoConstantesFunciones.LABEL_IDLINEA:
					sNombreCampoCategoria="id_linea";
					break;

				case ProductoConstantesFunciones.LABEL_IDLINEAGRUPO:
					sNombreCampoCategoria="id_linea_grupo";
					break;

				case ProductoConstantesFunciones.LABEL_IDLINEACATEGORIA:
					sNombreCampoCategoria="id_linea_categoria";
					break;

				case ProductoConstantesFunciones.LABEL_IDLINEAMARCA:
					sNombreCampoCategoria="id_linea_marca";
					break;

				case ProductoConstantesFunciones.LABEL_IDTIPOPRODUCTOSERVICIO:
					sNombreCampoCategoria="id_tipo_producto_servicio";
					break;

				case ProductoConstantesFunciones.LABEL_IDTIPOPRODUCTOSERVICIOINVEN:
					sNombreCampoCategoria="id_tipo_producto_servicio_inven";
					break;

				case ProductoConstantesFunciones.LABEL_IDTIPOCOSTEO:
					sNombreCampoCategoria="id_tipo_costeo";
					break;

				case ProductoConstantesFunciones.LABEL_IDUNIDAD:
					sNombreCampoCategoria="id_unidad";
					break;

				case ProductoConstantesFunciones.LABEL_IDUNIDADPESO:
					sNombreCampoCategoria="id_unidad_peso";
					break;

				case ProductoConstantesFunciones.LABEL_IDARANCEL:
					sNombreCampoCategoria="id_arancel";
					break;

				case ProductoConstantesFunciones.LABEL_IDCLIENTE:
					sNombreCampoCategoria="id_cliente";
					break;

				case ProductoConstantesFunciones.LABEL_IDCLIENTEPROVEEDORDEFECTO:
					sNombreCampoCategoria="id_cliente_proveedor_defecto";
					break;

				case ProductoConstantesFunciones.LABEL_ESTAACTIVO:
					sNombreCampoCategoria="esta_activo";
					break;

				case ProductoConstantesFunciones.LABEL_DESCRIPCION:
					sNombreCampoCategoria="descripcion";
					break;

				case ProductoConstantesFunciones.LABEL_PRECIO:
					sNombreCampoCategoria="precio";
					break;

				case ProductoConstantesFunciones.LABEL_IVA:
					sNombreCampoCategoria="iva";
					break;

				case ProductoConstantesFunciones.LABEL_IVAVALOR:
					sNombreCampoCategoria="iva_valor";
					break;

				case ProductoConstantesFunciones.LABEL_ICE:
					sNombreCampoCategoria="ice";
					break;

				case ProductoConstantesFunciones.LABEL_ICEVALOR:
					sNombreCampoCategoria="ice_valor";
					break;

				case ProductoConstantesFunciones.LABEL_DESCUENTO:
					sNombreCampoCategoria="descuento";
					break;

				case ProductoConstantesFunciones.LABEL_DESCUENTOVALOR:
					sNombreCampoCategoria="descuento_valor";
					break;

				case ProductoConstantesFunciones.LABEL_ARANCELPORCENTAJE:
					sNombreCampoCategoria="arancel_porcentaje";
					break;

				case ProductoConstantesFunciones.LABEL_ARANCELVALOR:
					sNombreCampoCategoria="arancel_valor";
					break;

				case ProductoConstantesFunciones.LABEL_COMISION:
					sNombreCampoCategoria="comision";
					break;

				case ProductoConstantesFunciones.LABEL_COMISIONVALOR:
					sNombreCampoCategoria="comision_valor";
					break;

				case ProductoConstantesFunciones.LABEL_DIASPRODUCCION:
					sNombreCampoCategoria="dias_produccion";
					break;

				case ProductoConstantesFunciones.LABEL_CONSTOCKNEGATIVO:
					sNombreCampoCategoria="con_stock_negativo";
					break;

				case ProductoConstantesFunciones.LABEL_CONPRECIOMINIMO:
					sNombreCampoCategoria="con_precio_minimo";
					break;

				case ProductoConstantesFunciones.LABEL_CONLOTE:
					sNombreCampoCategoria="con_lote";
					break;

				case ProductoConstantesFunciones.LABEL_CONCONFIRMACION:
					sNombreCampoCategoria="con_confirmacion";
					break;

				case ProductoConstantesFunciones.LABEL_CONPRESUPUESTO:
					sNombreCampoCategoria="con_presupuesto";
					break;

				case ProductoConstantesFunciones.LABEL_CONIMPORTACION:
					sNombreCampoCategoria="con_importacion";
					break;

				case ProductoConstantesFunciones.LABEL_CONFINAL:
					sNombreCampoCategoria="con_final";
					break;

				case ProductoConstantesFunciones.LABEL_CONCONSEP:
					sNombreCampoCategoria="con_consep";
					break;

				case ProductoConstantesFunciones.LABEL_CONSERIE:
					sNombreCampoCategoria="con_serie";
					break;

				case ProductoConstantesFunciones.LABEL_CONBALANZA:
					sNombreCampoCategoria="con_balanza";
					break;

				case ProductoConstantesFunciones.LABEL_ALTO:
					sNombreCampoCategoria="alto";
					break;

				case ProductoConstantesFunciones.LABEL_ANCHO:
					sNombreCampoCategoria="ancho";
					break;

				case ProductoConstantesFunciones.LABEL_LARGO:
					sNombreCampoCategoria="largo";
					break;

				case ProductoConstantesFunciones.LABEL_VOLUMEN:
					sNombreCampoCategoria="volumen";
					break;

				case ProductoConstantesFunciones.LABEL_PESO:
					sNombreCampoCategoria="peso";
					break;

				case ProductoConstantesFunciones.LABEL_GRAMOS:
					sNombreCampoCategoria="gramos";
					break;

				case ProductoConstantesFunciones.LABEL_UNIDADESCAJA:
					sNombreCampoCategoria="unidades_caja";
					break;

				case ProductoConstantesFunciones.LABEL_MARGEN:
					sNombreCampoCategoria="margen";
					break;

				case ProductoConstantesFunciones.LABEL_FACTOR:
					sNombreCampoCategoria="factor";
					break;

				case ProductoConstantesFunciones.LABEL_FOB:
					sNombreCampoCategoria="fob";
					break;

				case ProductoConstantesFunciones.LABEL_FOB2:
					sNombreCampoCategoria="fob2";
					break;

				case ProductoConstantesFunciones.LABEL_IDTIPOPRODUCTO:
					sNombreCampoCategoria="id_tipo_producto";
					break;

				case ProductoConstantesFunciones.LABEL_IDCOLORPRODUCTO:
					sNombreCampoCategoria="id_color_producto";
					break;

				case ProductoConstantesFunciones.LABEL_IDCLASEPRODUCTO:
					sNombreCampoCategoria="id_clase_producto";
					break;

				case ProductoConstantesFunciones.LABEL_IDEFECTOPRODUCTO:
					sNombreCampoCategoria="id_efecto_producto";
					break;

				case ProductoConstantesFunciones.LABEL_IDMARCAPRODUCTO:
					sNombreCampoCategoria="id_marca_producto";
					break;

				case ProductoConstantesFunciones.LABEL_IDMODELOPRODUCTO:
					sNombreCampoCategoria="id_modelo_producto";
					break;

				case ProductoConstantesFunciones.LABEL_IDMATERIALPRODUCTO:
					sNombreCampoCategoria="id_material_producto";
					break;

				case ProductoConstantesFunciones.LABEL_IDSEGMENTOPRODUCTO:
					sNombreCampoCategoria="id_segmento_producto";
					break;

				case ProductoConstantesFunciones.LABEL_IDTALLAPRODUCTO:
					sNombreCampoCategoria="id_talla_producto";
					break;

				case ProductoConstantesFunciones.LABEL_GRUPO:
					sNombreCampoCategoria="grupo";
					break;

				case ProductoConstantesFunciones.LABEL_REFERENCIA:
					sNombreCampoCategoria="referencia";
					break;

				case ProductoConstantesFunciones.LABEL_APLICACION:
					sNombreCampoCategoria="aplicacion";
					break;

				case ProductoConstantesFunciones.LABEL_PROCEDENCIA:
					sNombreCampoCategoria="procedencia";
					break;
					
			default :
				break;
		}		
		//CATEGORIA GRAFICO
		
		//CATEGORIA VALOR				
		reporteCategoriaValor=((Reporte)this.jInternalFrameReporteDinamicoProducto.getjComboBoxColumnaCategoriaValor().getSelectedItem());
		
		switch(reporteCategoriaValor.getsCodigo()) {
			
				case ProductoConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoriaValor="id_empresa";
					break;

				case ProductoConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoriaValor="id_sucursal";
					break;

				case ProductoConstantesFunciones.LABEL_CODIGO:
					sNombreCampoCategoriaValor="codigo";
					break;

				case ProductoConstantesFunciones.LABEL_NOMBRE:
					sNombreCampoCategoriaValor="nombre";
					break;

				case ProductoConstantesFunciones.LABEL_NOMBREEXTRANJERO:
					sNombreCampoCategoriaValor="nombre_extranjero";
					break;

				case ProductoConstantesFunciones.LABEL_RESUMENDETALLE:
					sNombreCampoCategoriaValor="resumen_detalle";
					break;

				case ProductoConstantesFunciones.LABEL_CODIGOBARRA:
					sNombreCampoCategoriaValor="codigo_barra";
					break;

				case ProductoConstantesFunciones.LABEL_IDLINEA:
					sNombreCampoCategoriaValor="id_linea";
					break;

				case ProductoConstantesFunciones.LABEL_IDLINEAGRUPO:
					sNombreCampoCategoriaValor="id_linea_grupo";
					break;

				case ProductoConstantesFunciones.LABEL_IDLINEACATEGORIA:
					sNombreCampoCategoriaValor="id_linea_categoria";
					break;

				case ProductoConstantesFunciones.LABEL_IDLINEAMARCA:
					sNombreCampoCategoriaValor="id_linea_marca";
					break;

				case ProductoConstantesFunciones.LABEL_IDTIPOPRODUCTOSERVICIO:
					sNombreCampoCategoriaValor="id_tipo_producto_servicio";
					break;

				case ProductoConstantesFunciones.LABEL_IDTIPOPRODUCTOSERVICIOINVEN:
					sNombreCampoCategoriaValor="id_tipo_producto_servicio_inven";
					break;

				case ProductoConstantesFunciones.LABEL_IDTIPOCOSTEO:
					sNombreCampoCategoriaValor="id_tipo_costeo";
					break;

				case ProductoConstantesFunciones.LABEL_IDUNIDAD:
					sNombreCampoCategoriaValor="id_unidad";
					break;

				case ProductoConstantesFunciones.LABEL_IDUNIDADPESO:
					sNombreCampoCategoriaValor="id_unidad_peso";
					break;

				case ProductoConstantesFunciones.LABEL_IDARANCEL:
					sNombreCampoCategoriaValor="id_arancel";
					break;

				case ProductoConstantesFunciones.LABEL_IDCLIENTE:
					sNombreCampoCategoriaValor="id_cliente";
					break;

				case ProductoConstantesFunciones.LABEL_IDCLIENTEPROVEEDORDEFECTO:
					sNombreCampoCategoriaValor="id_cliente_proveedor_defecto";
					break;

				case ProductoConstantesFunciones.LABEL_ESTAACTIVO:
					sNombreCampoCategoriaValor="esta_activo";
					break;

				case ProductoConstantesFunciones.LABEL_DESCRIPCION:
					sNombreCampoCategoriaValor="descripcion";
					break;

				case ProductoConstantesFunciones.LABEL_PRECIO:
					sNombreCampoCategoriaValor="precio";
					break;

				case ProductoConstantesFunciones.LABEL_IVA:
					sNombreCampoCategoriaValor="iva";
					break;

				case ProductoConstantesFunciones.LABEL_IVAVALOR:
					sNombreCampoCategoriaValor="iva_valor";
					break;

				case ProductoConstantesFunciones.LABEL_ICE:
					sNombreCampoCategoriaValor="ice";
					break;

				case ProductoConstantesFunciones.LABEL_ICEVALOR:
					sNombreCampoCategoriaValor="ice_valor";
					break;

				case ProductoConstantesFunciones.LABEL_DESCUENTO:
					sNombreCampoCategoriaValor="descuento";
					break;

				case ProductoConstantesFunciones.LABEL_DESCUENTOVALOR:
					sNombreCampoCategoriaValor="descuento_valor";
					break;

				case ProductoConstantesFunciones.LABEL_ARANCELPORCENTAJE:
					sNombreCampoCategoriaValor="arancel_porcentaje";
					break;

				case ProductoConstantesFunciones.LABEL_ARANCELVALOR:
					sNombreCampoCategoriaValor="arancel_valor";
					break;

				case ProductoConstantesFunciones.LABEL_COMISION:
					sNombreCampoCategoriaValor="comision";
					break;

				case ProductoConstantesFunciones.LABEL_COMISIONVALOR:
					sNombreCampoCategoriaValor="comision_valor";
					break;

				case ProductoConstantesFunciones.LABEL_DIASPRODUCCION:
					sNombreCampoCategoriaValor="dias_produccion";
					break;

				case ProductoConstantesFunciones.LABEL_CONSTOCKNEGATIVO:
					sNombreCampoCategoriaValor="con_stock_negativo";
					break;

				case ProductoConstantesFunciones.LABEL_CONPRECIOMINIMO:
					sNombreCampoCategoriaValor="con_precio_minimo";
					break;

				case ProductoConstantesFunciones.LABEL_CONLOTE:
					sNombreCampoCategoriaValor="con_lote";
					break;

				case ProductoConstantesFunciones.LABEL_CONCONFIRMACION:
					sNombreCampoCategoriaValor="con_confirmacion";
					break;

				case ProductoConstantesFunciones.LABEL_CONPRESUPUESTO:
					sNombreCampoCategoriaValor="con_presupuesto";
					break;

				case ProductoConstantesFunciones.LABEL_CONIMPORTACION:
					sNombreCampoCategoriaValor="con_importacion";
					break;

				case ProductoConstantesFunciones.LABEL_CONFINAL:
					sNombreCampoCategoriaValor="con_final";
					break;

				case ProductoConstantesFunciones.LABEL_CONCONSEP:
					sNombreCampoCategoriaValor="con_consep";
					break;

				case ProductoConstantesFunciones.LABEL_CONSERIE:
					sNombreCampoCategoriaValor="con_serie";
					break;

				case ProductoConstantesFunciones.LABEL_CONBALANZA:
					sNombreCampoCategoriaValor="con_balanza";
					break;

				case ProductoConstantesFunciones.LABEL_ALTO:
					sNombreCampoCategoriaValor="alto";
					break;

				case ProductoConstantesFunciones.LABEL_ANCHO:
					sNombreCampoCategoriaValor="ancho";
					break;

				case ProductoConstantesFunciones.LABEL_LARGO:
					sNombreCampoCategoriaValor="largo";
					break;

				case ProductoConstantesFunciones.LABEL_VOLUMEN:
					sNombreCampoCategoriaValor="volumen";
					break;

				case ProductoConstantesFunciones.LABEL_PESO:
					sNombreCampoCategoriaValor="peso";
					break;

				case ProductoConstantesFunciones.LABEL_GRAMOS:
					sNombreCampoCategoriaValor="gramos";
					break;

				case ProductoConstantesFunciones.LABEL_UNIDADESCAJA:
					sNombreCampoCategoriaValor="unidades_caja";
					break;

				case ProductoConstantesFunciones.LABEL_MARGEN:
					sNombreCampoCategoriaValor="margen";
					break;

				case ProductoConstantesFunciones.LABEL_FACTOR:
					sNombreCampoCategoriaValor="factor";
					break;

				case ProductoConstantesFunciones.LABEL_FOB:
					sNombreCampoCategoriaValor="fob";
					break;

				case ProductoConstantesFunciones.LABEL_FOB2:
					sNombreCampoCategoriaValor="fob2";
					break;

				case ProductoConstantesFunciones.LABEL_IDTIPOPRODUCTO:
					sNombreCampoCategoriaValor="id_tipo_producto";
					break;

				case ProductoConstantesFunciones.LABEL_IDCOLORPRODUCTO:
					sNombreCampoCategoriaValor="id_color_producto";
					break;

				case ProductoConstantesFunciones.LABEL_IDCLASEPRODUCTO:
					sNombreCampoCategoriaValor="id_clase_producto";
					break;

				case ProductoConstantesFunciones.LABEL_IDEFECTOPRODUCTO:
					sNombreCampoCategoriaValor="id_efecto_producto";
					break;

				case ProductoConstantesFunciones.LABEL_IDMARCAPRODUCTO:
					sNombreCampoCategoriaValor="id_marca_producto";
					break;

				case ProductoConstantesFunciones.LABEL_IDMODELOPRODUCTO:
					sNombreCampoCategoriaValor="id_modelo_producto";
					break;

				case ProductoConstantesFunciones.LABEL_IDMATERIALPRODUCTO:
					sNombreCampoCategoriaValor="id_material_producto";
					break;

				case ProductoConstantesFunciones.LABEL_IDSEGMENTOPRODUCTO:
					sNombreCampoCategoriaValor="id_segmento_producto";
					break;

				case ProductoConstantesFunciones.LABEL_IDTALLAPRODUCTO:
					sNombreCampoCategoriaValor="id_talla_producto";
					break;

				case ProductoConstantesFunciones.LABEL_GRUPO:
					sNombreCampoCategoriaValor="grupo";
					break;

				case ProductoConstantesFunciones.LABEL_REFERENCIA:
					sNombreCampoCategoriaValor="referencia";
					break;

				case ProductoConstantesFunciones.LABEL_APLICACION:
					sNombreCampoCategoriaValor="aplicacion";
					break;

				case ProductoConstantesFunciones.LABEL_PROCEDENCIA:
					sNombreCampoCategoriaValor="procedencia";
					break;
					
			default :
				break;
		}	
		//CATEGORIA VALOR
		
		//VALORES GRAFICO
		for(int index:this.jInternalFrameReporteDinamicoProducto.getjListColumnasValoresGrafico().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoProducto.getjListColumnasValoresGrafico().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case ProductoConstantesFunciones.LABEL_IDEMPRESA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Empresa",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_empresa");
					break;

				case ProductoConstantesFunciones.LABEL_IDSUCURSAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Sucursal",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_sucursal");
					break;

				case ProductoConstantesFunciones.LABEL_CODIGO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Codigo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"codigo");
					break;

				case ProductoConstantesFunciones.LABEL_NOMBRE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Nombre",sNombreCampoCategoria,sNombreCampoCategoriaValor,"nombre");
					break;

				case ProductoConstantesFunciones.LABEL_NOMBREEXTRANJERO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Nombre Extranjero",sNombreCampoCategoria,sNombreCampoCategoriaValor,"nombre_extranjero");
					break;

				case ProductoConstantesFunciones.LABEL_RESUMENDETALLE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Resumen Detalle",sNombreCampoCategoria,sNombreCampoCategoriaValor,"resumen_detalle");
					break;

				case ProductoConstantesFunciones.LABEL_CODIGOBARRA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Codigo Barra",sNombreCampoCategoria,sNombreCampoCategoriaValor,"codigo_barra");
					break;

				case ProductoConstantesFunciones.LABEL_IDLINEA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Linea",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_linea");
					break;

				case ProductoConstantesFunciones.LABEL_IDLINEAGRUPO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Linea Grupo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_linea_grupo");
					break;

				case ProductoConstantesFunciones.LABEL_IDLINEACATEGORIA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Linea Categoria",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_linea_categoria");
					break;

				case ProductoConstantesFunciones.LABEL_IDLINEAMARCA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Linea Marca",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_linea_marca");
					break;

				case ProductoConstantesFunciones.LABEL_IDTIPOPRODUCTOSERVICIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tipo Producto Servicio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_producto_servicio");
					break;

				case ProductoConstantesFunciones.LABEL_IDTIPOPRODUCTOSERVICIOINVEN:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tipo Producto Servicio.",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_producto_servicio_inven");
					break;

				case ProductoConstantesFunciones.LABEL_IDTIPOCOSTEO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tipo Costeo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_costeo");
					break;

				case ProductoConstantesFunciones.LABEL_IDUNIDAD:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Unidad",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_unidad");
					break;

				case ProductoConstantesFunciones.LABEL_IDUNIDADPESO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Unidad Peso",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_unidad_peso");
					break;

				case ProductoConstantesFunciones.LABEL_IDARANCEL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Codigo Arancelario",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_arancel");
					break;

				case ProductoConstantesFunciones.LABEL_IDCLIENTE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cliente",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cliente");
					break;

				case ProductoConstantesFunciones.LABEL_IDCLIENTEPROVEEDORDEFECTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cliente Proveedor Defecto",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cliente_proveedor_defecto");
					break;

				case ProductoConstantesFunciones.LABEL_ESTAACTIVO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Esta Activo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"esta_activo");
					break;

				case ProductoConstantesFunciones.LABEL_DESCRIPCION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Descripcion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"descripcion");
					break;

				case ProductoConstantesFunciones.LABEL_PRECIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Precio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"precio");
					break;

				case ProductoConstantesFunciones.LABEL_IVA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Iva",sNombreCampoCategoria,sNombreCampoCategoriaValor,"iva");
					break;

				case ProductoConstantesFunciones.LABEL_IVAVALOR:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Iva Valor",sNombreCampoCategoria,sNombreCampoCategoriaValor,"iva_valor");
					break;

				case ProductoConstantesFunciones.LABEL_ICE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Ice",sNombreCampoCategoria,sNombreCampoCategoriaValor,"ice");
					break;

				case ProductoConstantesFunciones.LABEL_ICEVALOR:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Ice Valor",sNombreCampoCategoria,sNombreCampoCategoriaValor,"ice_valor");
					break;

				case ProductoConstantesFunciones.LABEL_DESCUENTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Descuento",sNombreCampoCategoria,sNombreCampoCategoriaValor,"descuento");
					break;

				case ProductoConstantesFunciones.LABEL_DESCUENTOVALOR:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Descuento Valor",sNombreCampoCategoria,sNombreCampoCategoriaValor,"descuento_valor");
					break;

				case ProductoConstantesFunciones.LABEL_ARANCELPORCENTAJE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Arancel %",sNombreCampoCategoria,sNombreCampoCategoriaValor,"arancel_porcentaje");
					break;

				case ProductoConstantesFunciones.LABEL_ARANCELVALOR:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Arancel Valor",sNombreCampoCategoria,sNombreCampoCategoriaValor,"arancel_valor");
					break;

				case ProductoConstantesFunciones.LABEL_COMISION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Comision",sNombreCampoCategoria,sNombreCampoCategoriaValor,"comision");
					break;

				case ProductoConstantesFunciones.LABEL_COMISIONVALOR:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Comision Valor",sNombreCampoCategoria,sNombreCampoCategoriaValor,"comision_valor");
					break;

				case ProductoConstantesFunciones.LABEL_DIASPRODUCCION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Dias Produccion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"dias_produccion");
					break;

				case ProductoConstantesFunciones.LABEL_CONSTOCKNEGATIVO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Con Stock Negativo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"con_stock_negativo");
					break;

				case ProductoConstantesFunciones.LABEL_CONPRECIOMINIMO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Con Precio Minimo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"con_precio_minimo");
					break;

				case ProductoConstantesFunciones.LABEL_CONLOTE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Con Lote",sNombreCampoCategoria,sNombreCampoCategoriaValor,"con_lote");
					break;

				case ProductoConstantesFunciones.LABEL_CONCONFIRMACION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Con Confirmacion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"con_confirmacion");
					break;

				case ProductoConstantesFunciones.LABEL_CONPRESUPUESTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Con Presupuesto Cantidad",sNombreCampoCategoria,sNombreCampoCategoriaValor,"con_presupuesto");
					break;

				case ProductoConstantesFunciones.LABEL_CONIMPORTACION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Es Importado",sNombreCampoCategoria,sNombreCampoCategoriaValor,"con_importacion");
					break;

				case ProductoConstantesFunciones.LABEL_CONFINAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Es Final",sNombreCampoCategoria,sNombreCampoCategoriaValor,"con_final");
					break;

				case ProductoConstantesFunciones.LABEL_CONCONSEP:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Autorizacion Consep",sNombreCampoCategoria,sNombreCampoCategoriaValor,"con_consep");
					break;

				case ProductoConstantesFunciones.LABEL_CONSERIE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Con Serie",sNombreCampoCategoria,sNombreCampoCategoriaValor,"con_serie");
					break;

				case ProductoConstantesFunciones.LABEL_CONBALANZA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Con Balanza",sNombreCampoCategoria,sNombreCampoCategoriaValor,"con_balanza");
					break;

				case ProductoConstantesFunciones.LABEL_ALTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Alto",sNombreCampoCategoria,sNombreCampoCategoriaValor,"alto");
					break;

				case ProductoConstantesFunciones.LABEL_ANCHO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Ancho",sNombreCampoCategoria,sNombreCampoCategoriaValor,"ancho");
					break;

				case ProductoConstantesFunciones.LABEL_LARGO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Largo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"largo");
					break;

				case ProductoConstantesFunciones.LABEL_VOLUMEN:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Volumen",sNombreCampoCategoria,sNombreCampoCategoriaValor,"volumen");
					break;

				case ProductoConstantesFunciones.LABEL_PESO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Peso",sNombreCampoCategoria,sNombreCampoCategoriaValor,"peso");
					break;

				case ProductoConstantesFunciones.LABEL_GRAMOS:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Gramos",sNombreCampoCategoria,sNombreCampoCategoriaValor,"gramos");
					break;

				case ProductoConstantesFunciones.LABEL_UNIDADESCAJA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Unidades Caja",sNombreCampoCategoria,sNombreCampoCategoriaValor,"unidades_caja");
					break;

				case ProductoConstantesFunciones.LABEL_MARGEN:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Margen",sNombreCampoCategoria,sNombreCampoCategoriaValor,"margen");
					break;

				case ProductoConstantesFunciones.LABEL_FACTOR:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Factor",sNombreCampoCategoria,sNombreCampoCategoriaValor,"factor");
					break;

				case ProductoConstantesFunciones.LABEL_FOB:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fob",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fob");
					break;

				case ProductoConstantesFunciones.LABEL_FOB2:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fob 2",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fob2");
					break;

				case ProductoConstantesFunciones.LABEL_IDTIPOPRODUCTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tipo Producto",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_producto");
					break;

				case ProductoConstantesFunciones.LABEL_IDCOLORPRODUCTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Color Producto",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_color_producto");
					break;

				case ProductoConstantesFunciones.LABEL_IDCLASEPRODUCTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Clase Producto",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_clase_producto");
					break;

				case ProductoConstantesFunciones.LABEL_IDEFECTOPRODUCTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Efecto Producto",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_efecto_producto");
					break;

				case ProductoConstantesFunciones.LABEL_IDMARCAPRODUCTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Marca Producto",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_marca_producto");
					break;

				case ProductoConstantesFunciones.LABEL_IDMODELOPRODUCTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Modelo Producto",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_modelo_producto");
					break;

				case ProductoConstantesFunciones.LABEL_IDMATERIALPRODUCTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Material Producto",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_material_producto");
					break;

				case ProductoConstantesFunciones.LABEL_IDSEGMENTOPRODUCTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Segmento Producto",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_segmento_producto");
					break;

				case ProductoConstantesFunciones.LABEL_IDTALLAPRODUCTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Talla Producto",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_talla_producto");
					break;

				case ProductoConstantesFunciones.LABEL_GRUPO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Grupo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"grupo");
					break;

				case ProductoConstantesFunciones.LABEL_REFERENCIA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Referencia",sNombreCampoCategoria,sNombreCampoCategoriaValor,"referencia");
					break;

				case ProductoConstantesFunciones.LABEL_APLICACION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Aplicacion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"aplicacion");
					break;

				case ProductoConstantesFunciones.LABEL_PROCEDENCIA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Procedencia",sNombreCampoCategoria,sNombreCampoCategoriaValor,"procedencia");
					break;
					
				default :
					break;
			}
		}
		//VALORES GRAFICO
		//if(sTipoGraficoReporte.equals("BARRAS") || sTipoGraficoReporte.equals("BARRAS_3D") || sTipoGraficoReporte.equals("BARRAS_XY") ||
		//   sTipoGraficoReporte.equals("PASTEL") || sTipoGraficoReporte.equals("PASTEL_3D") || sTipoGraficoReporte.equals("APILADO")) {
			
			existe=true;
			strGrafico=FuncionesReporte.getStringGraficoReporte(sTipoGraficoReporte,sWidthGrafico,strCategorySeries);			
		//}
		
		if(existe) {
			sXmlStringFile=sXmlStringFile.replace("<!--GRAFICO-->", strGrafico);
		}												
		
		return sXmlStringFile;
	}
	
	
	//@SuppressWarnings("deprecation")
	
	public void jButtonGenerarExcelReporteDinamicoProductoActionPerformed(ActionEvent evt) throws Exception {		
		ArrayList<Producto> productosSeleccionados=new ArrayList<Producto>();		
		
		productosSeleccionados=this.getProductosSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"producto";//.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		Boolean existeFilas=false;
		
		Workbook workbook = null;
		FileOutputStream fileOutputStream=null;
		Reporte reporte=new Reporte();
		
		try {
			
			if(sTipoArchivoReporte=="EXCEL2") {
				workbook = new HSSFWorkbook();
				sPath+=".xls";
			
			} else if(sTipoArchivoReporte=="EXCEL2_2") {
				workbook = new XSSFWorkbook();
				sPath+=".xlsx";			
			}
		
			Sheet sheet = workbook.createSheet("Productos");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			Row row = sheet.createRow(iRow);
			Cell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");
			
			for(int index:this.jInternalFrameReporteDinamicoProducto.getjListColumnasSelectReporte().getSelectedIndices()) {
				reporte=(Reporte)this.jInternalFrameReporteDinamicoProducto.getjListColumnasSelectReporte().getModel().getElementAt(index);
				
				switch(reporte.getsCodigo()) {
					
				case ProductoConstantesFunciones.LABEL_IDEMPRESA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoConstantesFunciones.LABEL_IDEMPRESA);
					iRow++;

					for(Producto producto:productosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(producto.getempresa_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoConstantesFunciones.LABEL_IDSUCURSAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoConstantesFunciones.LABEL_IDSUCURSAL);
					iRow++;

					for(Producto producto:productosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(producto.getsucursal_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoConstantesFunciones.LABEL_CODIGO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoConstantesFunciones.LABEL_CODIGO);
					iRow++;

					for(Producto producto:productosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(producto.getcodigo());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoConstantesFunciones.LABEL_NOMBRE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoConstantesFunciones.LABEL_NOMBRE);
					iRow++;

					for(Producto producto:productosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(producto.getnombre());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoConstantesFunciones.LABEL_NOMBREEXTRANJERO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoConstantesFunciones.LABEL_NOMBREEXTRANJERO);
					iRow++;

					for(Producto producto:productosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(producto.getnombre_extranjero());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoConstantesFunciones.LABEL_RESUMENDETALLE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoConstantesFunciones.LABEL_RESUMENDETALLE);
					iRow++;

					for(Producto producto:productosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(producto.getresumen_detalle());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoConstantesFunciones.LABEL_CODIGOBARRA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoConstantesFunciones.LABEL_CODIGOBARRA);
					iRow++;

					for(Producto producto:productosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(producto.getcodigo_barra());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoConstantesFunciones.LABEL_IDLINEA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoConstantesFunciones.LABEL_IDLINEA);
					iRow++;

					for(Producto producto:productosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(producto.getlinea_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoConstantesFunciones.LABEL_IDLINEAGRUPO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoConstantesFunciones.LABEL_IDLINEAGRUPO);
					iRow++;

					for(Producto producto:productosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(producto.getlineagrupo_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoConstantesFunciones.LABEL_IDLINEACATEGORIA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoConstantesFunciones.LABEL_IDLINEACATEGORIA);
					iRow++;

					for(Producto producto:productosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(producto.getlineacategoria_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoConstantesFunciones.LABEL_IDLINEAMARCA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoConstantesFunciones.LABEL_IDLINEAMARCA);
					iRow++;

					for(Producto producto:productosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(producto.getlineamarca_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoConstantesFunciones.LABEL_IDTIPOPRODUCTOSERVICIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoConstantesFunciones.LABEL_IDTIPOPRODUCTOSERVICIO);
					iRow++;

					for(Producto producto:productosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(producto.gettipoproductoservicio_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoConstantesFunciones.LABEL_IDTIPOPRODUCTOSERVICIOINVEN:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoConstantesFunciones.LABEL_IDTIPOPRODUCTOSERVICIOINVEN);
					iRow++;

					for(Producto producto:productosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(producto.gettipoproductoservicioinven_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoConstantesFunciones.LABEL_IDTIPOCOSTEO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoConstantesFunciones.LABEL_IDTIPOCOSTEO);
					iRow++;

					for(Producto producto:productosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(producto.gettipocosteo_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoConstantesFunciones.LABEL_IDUNIDAD:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoConstantesFunciones.LABEL_IDUNIDAD);
					iRow++;

					for(Producto producto:productosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(producto.getunidad_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoConstantesFunciones.LABEL_IDUNIDADPESO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoConstantesFunciones.LABEL_IDUNIDADPESO);
					iRow++;

					for(Producto producto:productosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(producto.getunidadpeso_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoConstantesFunciones.LABEL_IDARANCEL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoConstantesFunciones.LABEL_IDARANCEL);
					iRow++;

					for(Producto producto:productosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(producto.getarancel_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoConstantesFunciones.LABEL_IDCLIENTE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoConstantesFunciones.LABEL_IDCLIENTE);
					iRow++;

					for(Producto producto:productosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(producto.getcliente_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoConstantesFunciones.LABEL_IDCLIENTEPROVEEDORDEFECTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoConstantesFunciones.LABEL_IDCLIENTEPROVEEDORDEFECTO);
					iRow++;

					for(Producto producto:productosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(producto.getclienteproveedordefecto_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoConstantesFunciones.LABEL_ESTAACTIVO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoConstantesFunciones.LABEL_ESTAACTIVO);
					iRow++;

					for(Producto producto:productosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(producto.getesta_activo());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoConstantesFunciones.LABEL_DESCRIPCION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoConstantesFunciones.LABEL_DESCRIPCION);
					iRow++;

					for(Producto producto:productosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(producto.getdescripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoConstantesFunciones.LABEL_PRECIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoConstantesFunciones.LABEL_PRECIO);
					iRow++;

					for(Producto producto:productosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(producto.getprecio());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoConstantesFunciones.LABEL_IVA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoConstantesFunciones.LABEL_IVA);
					iRow++;

					for(Producto producto:productosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(producto.getiva());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoConstantesFunciones.LABEL_IVAVALOR:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoConstantesFunciones.LABEL_IVAVALOR);
					iRow++;

					for(Producto producto:productosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(producto.getiva_valor());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoConstantesFunciones.LABEL_ICE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoConstantesFunciones.LABEL_ICE);
					iRow++;

					for(Producto producto:productosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(producto.getice());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoConstantesFunciones.LABEL_ICEVALOR:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoConstantesFunciones.LABEL_ICEVALOR);
					iRow++;

					for(Producto producto:productosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(producto.getice_valor());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoConstantesFunciones.LABEL_DESCUENTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoConstantesFunciones.LABEL_DESCUENTO);
					iRow++;

					for(Producto producto:productosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(producto.getdescuento());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoConstantesFunciones.LABEL_DESCUENTOVALOR:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoConstantesFunciones.LABEL_DESCUENTOVALOR);
					iRow++;

					for(Producto producto:productosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(producto.getdescuento_valor());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoConstantesFunciones.LABEL_ARANCELPORCENTAJE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoConstantesFunciones.LABEL_ARANCELPORCENTAJE);
					iRow++;

					for(Producto producto:productosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(producto.getarancel_porcentaje());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoConstantesFunciones.LABEL_ARANCELVALOR:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoConstantesFunciones.LABEL_ARANCELVALOR);
					iRow++;

					for(Producto producto:productosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(producto.getarancel_valor());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoConstantesFunciones.LABEL_COMISION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoConstantesFunciones.LABEL_COMISION);
					iRow++;

					for(Producto producto:productosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(producto.getcomision());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoConstantesFunciones.LABEL_COMISIONVALOR:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoConstantesFunciones.LABEL_COMISIONVALOR);
					iRow++;

					for(Producto producto:productosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(producto.getcomision_valor());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoConstantesFunciones.LABEL_DIASPRODUCCION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoConstantesFunciones.LABEL_DIASPRODUCCION);
					iRow++;

					for(Producto producto:productosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(producto.getdias_produccion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoConstantesFunciones.LABEL_CONSTOCKNEGATIVO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoConstantesFunciones.LABEL_CONSTOCKNEGATIVO);
					iRow++;

					for(Producto producto:productosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(producto.getcon_stock_negativo());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoConstantesFunciones.LABEL_CONPRECIOMINIMO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoConstantesFunciones.LABEL_CONPRECIOMINIMO);
					iRow++;

					for(Producto producto:productosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(producto.getcon_precio_minimo());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoConstantesFunciones.LABEL_CONLOTE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoConstantesFunciones.LABEL_CONLOTE);
					iRow++;

					for(Producto producto:productosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(producto.getcon_lote());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoConstantesFunciones.LABEL_CONCONFIRMACION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoConstantesFunciones.LABEL_CONCONFIRMACION);
					iRow++;

					for(Producto producto:productosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(producto.getcon_confirmacion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoConstantesFunciones.LABEL_CONPRESUPUESTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoConstantesFunciones.LABEL_CONPRESUPUESTO);
					iRow++;

					for(Producto producto:productosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(producto.getcon_presupuesto());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoConstantesFunciones.LABEL_CONIMPORTACION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoConstantesFunciones.LABEL_CONIMPORTACION);
					iRow++;

					for(Producto producto:productosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(producto.getcon_importacion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoConstantesFunciones.LABEL_CONFINAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoConstantesFunciones.LABEL_CONFINAL);
					iRow++;

					for(Producto producto:productosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(producto.getcon_final());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoConstantesFunciones.LABEL_CONCONSEP:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoConstantesFunciones.LABEL_CONCONSEP);
					iRow++;

					for(Producto producto:productosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(producto.getcon_consep());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoConstantesFunciones.LABEL_CONSERIE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoConstantesFunciones.LABEL_CONSERIE);
					iRow++;

					for(Producto producto:productosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(producto.getcon_serie());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoConstantesFunciones.LABEL_CONBALANZA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoConstantesFunciones.LABEL_CONBALANZA);
					iRow++;

					for(Producto producto:productosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(producto.getcon_balanza());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoConstantesFunciones.LABEL_ALTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoConstantesFunciones.LABEL_ALTO);
					iRow++;

					for(Producto producto:productosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(producto.getalto());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoConstantesFunciones.LABEL_ANCHO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoConstantesFunciones.LABEL_ANCHO);
					iRow++;

					for(Producto producto:productosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(producto.getancho());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoConstantesFunciones.LABEL_LARGO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoConstantesFunciones.LABEL_LARGO);
					iRow++;

					for(Producto producto:productosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(producto.getlargo());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoConstantesFunciones.LABEL_VOLUMEN:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoConstantesFunciones.LABEL_VOLUMEN);
					iRow++;

					for(Producto producto:productosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(producto.getvolumen());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoConstantesFunciones.LABEL_PESO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoConstantesFunciones.LABEL_PESO);
					iRow++;

					for(Producto producto:productosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(producto.getpeso());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoConstantesFunciones.LABEL_GRAMOS:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoConstantesFunciones.LABEL_GRAMOS);
					iRow++;

					for(Producto producto:productosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(producto.getgramos());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoConstantesFunciones.LABEL_UNIDADESCAJA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoConstantesFunciones.LABEL_UNIDADESCAJA);
					iRow++;

					for(Producto producto:productosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(producto.getunidades_caja());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoConstantesFunciones.LABEL_MARGEN:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoConstantesFunciones.LABEL_MARGEN);
					iRow++;

					for(Producto producto:productosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(producto.getmargen());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoConstantesFunciones.LABEL_FACTOR:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoConstantesFunciones.LABEL_FACTOR);
					iRow++;

					for(Producto producto:productosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(producto.getfactor());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoConstantesFunciones.LABEL_FOB:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoConstantesFunciones.LABEL_FOB);
					iRow++;

					for(Producto producto:productosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(producto.getfob());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoConstantesFunciones.LABEL_FOB2:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoConstantesFunciones.LABEL_FOB2);
					iRow++;

					for(Producto producto:productosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(producto.getfob2());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoConstantesFunciones.LABEL_IDTIPOPRODUCTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoConstantesFunciones.LABEL_IDTIPOPRODUCTO);
					iRow++;

					for(Producto producto:productosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(producto.gettipoproducto_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoConstantesFunciones.LABEL_IDCOLORPRODUCTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoConstantesFunciones.LABEL_IDCOLORPRODUCTO);
					iRow++;

					for(Producto producto:productosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(producto.getcolorproducto_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoConstantesFunciones.LABEL_IDCLASEPRODUCTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoConstantesFunciones.LABEL_IDCLASEPRODUCTO);
					iRow++;

					for(Producto producto:productosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(producto.getclaseproducto_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoConstantesFunciones.LABEL_IDEFECTOPRODUCTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoConstantesFunciones.LABEL_IDEFECTOPRODUCTO);
					iRow++;

					for(Producto producto:productosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(producto.getefectoproducto_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoConstantesFunciones.LABEL_IDMARCAPRODUCTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoConstantesFunciones.LABEL_IDMARCAPRODUCTO);
					iRow++;

					for(Producto producto:productosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(producto.getmarcaproducto_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoConstantesFunciones.LABEL_IDMODELOPRODUCTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoConstantesFunciones.LABEL_IDMODELOPRODUCTO);
					iRow++;

					for(Producto producto:productosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(producto.getmodeloproducto_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoConstantesFunciones.LABEL_IDMATERIALPRODUCTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoConstantesFunciones.LABEL_IDMATERIALPRODUCTO);
					iRow++;

					for(Producto producto:productosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(producto.getmaterialproducto_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoConstantesFunciones.LABEL_IDSEGMENTOPRODUCTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoConstantesFunciones.LABEL_IDSEGMENTOPRODUCTO);
					iRow++;

					for(Producto producto:productosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(producto.getsegmentoproducto_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoConstantesFunciones.LABEL_IDTALLAPRODUCTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoConstantesFunciones.LABEL_IDTALLAPRODUCTO);
					iRow++;

					for(Producto producto:productosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(producto.gettallaproducto_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoConstantesFunciones.LABEL_GRUPO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoConstantesFunciones.LABEL_GRUPO);
					iRow++;

					for(Producto producto:productosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(producto.getgrupo());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoConstantesFunciones.LABEL_REFERENCIA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoConstantesFunciones.LABEL_REFERENCIA);
					iRow++;

					for(Producto producto:productosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(producto.getreferencia());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoConstantesFunciones.LABEL_APLICACION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoConstantesFunciones.LABEL_APLICACION);
					iRow++;

					for(Producto producto:productosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(producto.getaplicacion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProductoConstantesFunciones.LABEL_PROCEDENCIA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProductoConstantesFunciones.LABEL_PROCEDENCIA);
					iRow++;

					for(Producto producto:productosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(producto.getprocedencia());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;
					
					default :
						break;
				}
			}
			
			
			//if(conCabecera) {
			//	this.getFilaCabeceraExportarExcelProducto(row);				
			//	iRow++;
			//}				
			
			//for(Producto productoAux:productosSeleccionados) {
			//	row = sheet.createRow(iRow);
				
			//	this.getFilaDatosExportarExcelProducto(productoAux,row);
				
			//	iRow++;
			//}
			
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.productoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Producto",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}				
	}	
	
	
	
	
	public void buscarPorId(Long idActual) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.getNewConnexionToDeep("");
			}
			
			this.idActual=idActual;
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda("PorId");
				    	
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingProducto(false);
			
			//SI ES MANUAL
			if(ProductoJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualProducto();
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger);
			
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonAnterioresProductoActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion-=this.iNumeroPaginacion;
			/*
			if(this.iNumeroPaginacion<0) {
				this.iNumeroPaginacion=0;
			}
			*/
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.getNewConnexionToDeep("");
			}
			
			this.anteriores();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingProducto(false);
			
			//SI ES MANUAL
			if(ProductoJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualProducto();
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonSiguientesProductoActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion+=this.iNumeroPaginacion;
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.getNewConnexionToDeep("");
			}
			
			this.siguientes();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingProducto(false);
			
			//SI ES MANUAL
			if(ProductoJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualProducto();
			}		
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void aumentarTamanioFilaNuevaTablaProducto() throws Exception {		
		Dimension dimensionMinimum=this.jTableDatosProducto.getMinimumSize();
		Dimension dimensionMaximum=this.jTableDatosProducto.getMaximumSize();
		Dimension dimensionPreferred=this.jTableDatosProducto.getPreferredSize();
	
		double iHeightConFilaNueva=dimensionPreferred.getHeight();
		
		iHeightConFilaNueva+=this.jTableDatosProducto.getRowHeight();
		
		dimensionMinimum.setSize(dimensionMinimum.getWidth(),iHeightConFilaNueva);
		dimensionMaximum.setSize(dimensionMaximum.getWidth(),iHeightConFilaNueva);
		dimensionPreferred.setSize(dimensionPreferred.getWidth(),iHeightConFilaNueva);
		
		this.jTableDatosProducto.setMinimumSize(dimensionMinimum);
		this.jTableDatosProducto.setMaximumSize(dimensionMaximum);
		this.jTableDatosProducto.setPreferredSize(dimensionPreferred);	
	}
	
	public void inicializarActualizarBindingProducto(Boolean esInicializar) throws Exception {
		this.inicializarActualizarBindingProducto(esInicializar,true);
	}
	
	public void inicializarActualizarBindingProducto(Boolean esInicializar,Boolean conTabla) throws Exception {		
		if(conTabla) {
			this.inicializarActualizarBindingTablaProducto(esInicializar);
		}
		
		this.inicializarActualizarBindingBotonesProducto(esInicializar);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.productoSessionBean.getEsGuardarRelacionado()) {
			try{this.inicializarActualizarBindingBusquedasProducto(esInicializar);}catch(Exception e){e.printStackTrace();}
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesProducto(esInicializar) ;
			
			this.inicializarActualizarBindingParametrosReportesProducto(esInicializar) ;
		}
		
		if(esInicializar) {
			if( !ProductoJInternalFrame.ISBINDING_MANUAL_TABLA ||
			   	!ProductoJInternalFrame.ISBINDING_MANUAL) {
			   	
			}
		}
	}
	
	public void inicializarActualizarBindingManualProducto() throws Exception {		
		//NO SE NECESITA HACER BINDING OTRA VEZ
		//this.inicializarActualizarBindingTablaProducto();
		
		this.inicializarActualizarBindingBotonesManualProducto(true);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.productoSessionBean.getEsGuardarRelacionado()) {
			
			this.inicializarActualizarBindingBusquedasManualProducto();			
			
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesProducto() ;
			
			this.inicializarActualizarBindingParametrosReportesPostAccionesManualProducto(false) ;			
			
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesPostAccionesManualProducto(Boolean esSetControles) throws Exception {
		try	{					
			if(!esSetControles) {
				this.isSeleccionarTodos=this.jCheckBoxSeleccionarTodosProducto.isSelected();
				this.isSeleccionados=this.jCheckBoxSeleccionadosProducto.isSelected();
				
				
				this.conGraficoReporte=this.jCheckBoxConGraficoReporteProducto.isSelected();															
				
				
				if(this.jInternalFrameDetalleFormProducto!=null) {
				this.isPostAccionNuevo=this.jInternalFrameDetalleFormProducto.jCheckBoxPostAccionNuevoProducto.isSelected();
				this.isPostAccionSinCerrar=this.jInternalFrameDetalleFormProducto.jCheckBoxPostAccionSinCerrarProducto.isSelected();
				this.isPostAccionSinMensaje=this.jInternalFrameDetalleFormProducto.jCheckBoxPostAccionSinMensajeProducto.isSelected();
				}
			
			} else {
				this.jCheckBoxSeleccionarTodosProducto.setSelected(this.isSeleccionarTodos);
				this.jCheckBoxSeleccionadosProducto.setSelected(this.isSeleccionados);
				
				
				this.jCheckBoxConGraficoReporteProducto.setSelected(this.conGraficoReporte);				
				
				
				if(this.jInternalFrameDetalleFormProducto!=null) {
				this.jInternalFrameDetalleFormProducto.jCheckBoxPostAccionNuevoProducto.setSelected(this.isPostAccionNuevo);
				this.jInternalFrameDetalleFormProducto.jCheckBoxPostAccionSinCerrarProducto.setSelected(this.isPostAccionSinCerrar);
				this.jInternalFrameDetalleFormProducto.jCheckBoxPostAccionSinMensajeProducto.setSelected(this.isPostAccionSinMensaje);
				}
			}
			
			
			if(this.jComboBoxTiposPaginacionProducto.getSelectedItem()!=null) {
				this.sTipoPaginacion=((Reporte)this.jComboBoxTiposPaginacionProducto.getSelectedItem()).getsCodigo();			
			}
			
			
			
			if(this.jInternalFrameDetalleFormProducto!=null) {
			this.sTipoAccionFormulario=((Reporte)this.jInternalFrameDetalleFormProducto.jComboBoxTiposAccionesFormularioProducto.getSelectedItem()).getsCodigo();
			}
			
			
			
			if(!this.conCargarMinimo) {
				this.sTipoArchivoReporte=((Reporte)this.jComboBoxTiposArchivosReportesProducto.getSelectedItem()).getsCodigo();			
				
				if(this.jInternalFrameReporteDinamicoProducto!=null) {
					this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoProducto.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
				}
				
				this.sTipoRelacion=((Reporte)this.jComboBoxTiposRelacionesProducto.getSelectedItem()).getsCodigo();
									
				this.sTipoAccion=((Reporte)this.jComboBoxTiposAccionesProducto.getSelectedItem()).getsCodigo();
													
				this.sTipoSeleccionar=((Reporte)this.jComboBoxTiposSeleccionarProducto.getSelectedItem()).getsCodigo();
									
				this.sTipoReporte=((Reporte)this.jComboBoxTiposReportesProducto.getSelectedItem()).getsCodigo();							
					
				if(this.jInternalFrameReporteDinamicoProducto!=null) {
					this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoProducto.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();							
				}
				
				this.sTipoGraficoReporte=((Reporte)this.jComboBoxTiposGraficosReportesProducto.getSelectedItem()).getsCodigo();											
			}			
			
			this.sValorCampoGeneral=this.jTextFieldValorCampoGeneralProducto.getText();						
			
			
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesProducto(Boolean esInicializar) throws Exception {
		try	{	
			if(ProductoJInternalFrame.ISBINDING_MANUAL) {
				this. inicializarActualizarBindingParametrosReportesPostAccionesManualProducto(false);
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public void inicializarActualizarBindingtiposArchivosReportesAccionesProducto() throws Exception {
		try	{
			if(ProductoJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingtiposArchivosReportesAccionesManualProducto();
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleProducto() throws Exception {
		//TIPOS ACCIONES FORMULARIO	
		this.jInternalFrameDetalleFormProducto.jComboBoxTiposAccionesFormularioProducto.removeAllItems();
				
		for(Reporte reporte:this.tiposAccionesFormulario) {
			this.jInternalFrameDetalleFormProducto.jComboBoxTiposAccionesFormularioProducto.addItem(reporte);
		}
		
		//TIPOS ACCIONES FORMULARIO
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualProducto() throws Exception {
		try	{
			
			//TIPOS ARCHIVOS REPORTES
			this.jComboBoxTiposArchivosReportesProducto.removeAllItems();
				
			for(Reporte reporte:this.tiposArchivosReportes) {
				this.jComboBoxTiposArchivosReportesProducto.addItem(reporte);
			}
			
			
				
			//TIPOS REPORTES
			this.jComboBoxTiposReportesProducto.removeAllItems();
				
			for(Reporte reporte:this.tiposReportes) {
				this.jComboBoxTiposReportesProducto.addItem(reporte);
			}
			
			
			//TIPOS GRAFICOS REPORTES
			this.jComboBoxTiposGraficosReportesProducto.removeAllItems();
				
			for(Reporte reporte:this.tiposGraficosReportes) {
				this.jComboBoxTiposGraficosReportesProducto.addItem(reporte);
			}
			
			
			//TIPOS PAGINACION
			this.jComboBoxTiposPaginacionProducto.removeAllItems();
				
			for(Reporte reporte:this.tiposPaginacion) {
				this.jComboBoxTiposPaginacionProducto.addItem(reporte);
			}
			
			
			if(!this.productoSessionBean.getEsGuardarRelacionado()) {
				this.jComboBoxTiposPaginacionProducto.setSelectedItem(Funciones2.getTipoPaginacionDefecto("NORMAL",this.tiposPaginacion));
			} else {
				this.jComboBoxTiposPaginacionProducto.setSelectedItem(Funciones2.getTipoPaginacionDefecto("RELACIONADO",this.tiposPaginacion));
			}
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposRelacionesProducto.removeAllItems();
				
			for(Reporte reporte:this.tiposRelaciones) {
				this.jComboBoxTiposRelacionesProducto.addItem(reporte);
			}
			
			//TIPOS ACCIONES
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposAccionesProducto.removeAllItems();
				
			for(Reporte reporte:this.tiposAcciones) {
				this.jComboBoxTiposAccionesProducto.addItem(reporte);
			}
			
			//TIPOS ACCIONES			
			
			
			
			//TIPOS ACCIONES FORMULARIO	
			if(this.jInternalFrameDetalleFormProducto!=null) { //if(this.conCargarFormDetalle) {
				this.jInternalFrameDetalleFormProducto.jComboBoxTiposAccionesFormularioProducto.removeAllItems();
				
				for(Reporte reporte:this.tiposAccionesFormulario) {
					this.jInternalFrameDetalleFormProducto.jComboBoxTiposAccionesFormularioProducto.addItem(reporte);
				}
				
			}
			//TIPOS ACCIONES FORMULARIO
			
			
			
			//TIPOS SELECCIONAR
			this.jComboBoxTiposSeleccionarProducto.removeAllItems();
				
			for(Reporte reporte:this.tiposSeleccionar) {
				this.jComboBoxTiposSeleccionarProducto.addItem(reporte);
			}
			
			
			if(this.tiposSeleccionar!=null && this.tiposSeleccionar.size()>1) {
				this.jComboBoxTiposSeleccionarProducto.setSelectedIndex(1);
			}
				
			//REPORTE DINAMICO
			this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualProducto();
							
			//TIPOS COLUMNAS SELECT
			//TIPOS SELECCIONAR
			
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualProducto() throws Exception {
		try	{
			DefaultListModel<Reporte> defaultListModel=new DefaultListModel<Reporte>();
			
			
			//TIPOS ARCHIVOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoProducto!=null) {
				this.jInternalFrameReporteDinamicoProducto.getjComboBoxTiposArchivosReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposArchivosReportesDinamico) {
					this.jInternalFrameReporteDinamicoProducto.getjComboBoxTiposArchivosReportesDinamico().addItem(reporte);
				}
				
			}
			
			//TIPOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoProducto!=null) {
				this.jInternalFrameReporteDinamicoProducto.getjComboBoxTiposReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposReportesDinamico) {
					this.jInternalFrameReporteDinamicoProducto.getjComboBoxTiposReportesDinamico().addItem(reporte);
				}
				
			}
			
			defaultListModel=new DefaultListModel<Reporte>();
			
			if(this.jInternalFrameReporteDinamicoProducto!=null) {
				
				if(this.jInternalFrameReporteDinamicoProducto.getjListColumnasSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoProducto.getjListColumnasSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposColumnasSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoProducto.getjListColumnasSelectReporte().setModel(defaultListModel);									
						
				}	
					
				//TIPOS RELACIONES SELECT
				//TIPOS SELECCIONAR
				defaultListModel=new DefaultListModel<Reporte>();
				if(this.jInternalFrameReporteDinamicoProducto.getjListRelacionesSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoProducto.getjListRelacionesSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposRelacionesSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoProducto.getjListRelacionesSelectReporte().setModel(defaultListModel);									
						
				}	
				
				
				//TIPOS COLUMNAS CATEGORIA DINAMICO
				if(this.jInternalFrameReporteDinamicoProducto.getjComboBoxColumnaCategoriaGrafico()!=null) {
					this.jInternalFrameReporteDinamicoProducto.getjComboBoxColumnaCategoriaGrafico().removeAllItems();
						
					ArrayList<Reporte> tiposColumnasCategoria=ProductoConstantesFunciones.getTiposSeleccionarProducto(true,true,false,true,true);
						
					for(Reporte reporte:tiposColumnasCategoria) {//this.tiposSeleccionar
						this.jInternalFrameReporteDinamicoProducto.getjComboBoxColumnaCategoriaGrafico().addItem(reporte);
					}
					
				}
					
				//TIPOS COLUMNAS CATEGORIA VALOR DINAMICO
				if(this.jInternalFrameReporteDinamicoProducto.getjComboBoxColumnaCategoriaValor()!=null) {
					this.jInternalFrameReporteDinamicoProducto.getjComboBoxColumnaCategoriaValor().removeAllItems();
						
					ArrayList<Reporte> tiposColumnasCategoriaValor=ProductoConstantesFunciones.getTiposSeleccionarProducto(false,false,true,false,false);
						
					for(Reporte reporte:tiposColumnasCategoriaValor) {//this.tiposSeleccionar
						this.jInternalFrameReporteDinamicoProducto.getjComboBoxColumnaCategoriaValor().addItem(reporte);
					}
					
				}
					
				//TIPOS COLUMNAS VALOR
				defaultListModel=new DefaultListModel<Reporte>();
					
				if(this.jInternalFrameReporteDinamicoProducto.getjListColumnasValoresGrafico()!=null) {
					this.jInternalFrameReporteDinamicoProducto.getjListColumnasValoresGrafico().removeAll();
						
					ArrayList<Reporte> tiposColumnasValor=ProductoConstantesFunciones.getTiposSeleccionarProducto(false,false,true,false,false);
						
					for(Reporte reporte:tiposColumnasValor) {//this.tiposSeleccionar
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoProducto.getjListColumnasValoresGrafico().setModel(defaultListModel);									
						
				}
					
				//TIPOS GRAFICOS REPORTES DINAMICOS
				if(this.jInternalFrameReporteDinamicoProducto.getjComboBoxTiposGraficosReportesDinamico()!=null) {
					this.jInternalFrameReporteDinamicoProducto.getjComboBoxTiposGraficosReportesDinamico().removeAllItems();
						
					for(Reporte reporte:this.tiposGraficosReportes) {
						this.jInternalFrameReporteDinamicoProducto.getjComboBoxTiposGraficosReportesDinamico().addItem(reporte);
					}
					
				}
			
			
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	
	
	public void inicializarActualizarBindingBusquedasManualProducto()  throws Exception {				
		//BYDAN_BUSQUEDAS		
		
		this.codigoBusquedaPorCodigo=this.jTextFieldcodigoBusquedaPorCodigoProducto.getText();
		this.nombreBusquedaPorNombre=this.jTextAreanombreBusquedaPorNombreProducto.getText();
		if(this.jComboBoxid_clase_productoFK_IdClaseProductoProducto.getSelectedItem()!=null){this.id_clase_productoFK_IdClaseProducto=((ClaseProducto)this.jComboBoxid_clase_productoFK_IdClaseProductoProducto.getSelectedItem()).getId();}
		if(this.jComboBoxid_clienteFK_IdClienteProducto.getSelectedItem()!=null){this.id_clienteFK_IdCliente=((Cliente)this.jComboBoxid_clienteFK_IdClienteProducto.getSelectedItem()).getId();}
		if(this.jComboBoxid_cliente_proveedor_defectoFK_IdClienteProveedorDefectoProducto.getSelectedItem()!=null){this.id_cliente_proveedor_defectoFK_IdClienteProveedorDefecto=((Cliente)this.jComboBoxid_cliente_proveedor_defectoFK_IdClienteProveedorDefectoProducto.getSelectedItem()).getId();}
		if(this.jComboBoxid_lineaFK_IdLineaProducto.getSelectedItem()!=null){this.id_lineaFK_IdLinea=((Linea)this.jComboBoxid_lineaFK_IdLineaProducto.getSelectedItem()).getId();}
		if(this.jComboBoxid_marca_productoFK_IdMarcaProductoProducto.getSelectedItem()!=null){this.id_marca_productoFK_IdMarcaProducto=((MarcaProducto)this.jComboBoxid_marca_productoFK_IdMarcaProductoProducto.getSelectedItem()).getId();}
		if(this.jComboBoxid_modelo_productoFK_IdModeloProductoProducto.getSelectedItem()!=null){this.id_modelo_productoFK_IdModeloProducto=((ModeloProducto)this.jComboBoxid_modelo_productoFK_IdModeloProductoProducto.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_productoFK_IdTipoProductoProducto.getSelectedItem()!=null){this.id_tipo_productoFK_IdTipoProducto=((TipoProducto)this.jComboBoxid_tipo_productoFK_IdTipoProductoProducto.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_producto_servicioFK_IdTipoProductoServicioProducto.getSelectedItem()!=null){this.id_tipo_producto_servicioFK_IdTipoProductoServicio=((TipoProductoServicio)this.jComboBoxid_tipo_producto_servicioFK_IdTipoProductoServicioProducto.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_producto_servicio_invenFK_IdTipoProductoServicioInvenProducto.getSelectedItem()!=null){this.id_tipo_producto_servicio_invenFK_IdTipoProductoServicioInven=((TipoProductoServicioInven)this.jComboBoxid_tipo_producto_servicio_invenFK_IdTipoProductoServicioInvenProducto.getSelectedItem()).getId();}
		
	}
	
	
	
	
	public void inicializarActualizarBindingBusquedasProducto(Boolean esInicializar) throws Exception {				
		if(ProductoJInternalFrame.ISBINDING_MANUAL) {
			
			this.inicializarActualizarBindingBusquedasManualProducto();			
			
		} else {
		}
	}		
		
	public void inicializarActualizarBindingTablaProducto() throws Exception {
		this.inicializarActualizarBindingTablaProducto(false);
	}
	
	
	public void inicializarActualizarBindingTablaOrderByProducto() {
		//TABLA OrderBy	
		TableColumn tableColumn=new TableColumn();
		Integer iWidthTableDefinicionOrderBy=0;			
			
		this.jInternalFrameOrderByProducto.getjTableDatosOrderBy().setModel(new TablaGeneralOrderByModel(this.arrOrderBy));
					
		//DEFINIR RENDERERS OrderBy
		tableColumn=this.jInternalFrameOrderByProducto.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByProducto.getjTableDatosOrderBy(),OrderBy.ISSELECTED));			
		//tableColumn.addPropertyChangeListener(new ProductoPropertyChangeListener());
					
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		iWidthTableDefinicionOrderBy+=50;
					
		tableColumn=this.jInternalFrameOrderByProducto.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByProducto.getjTableDatosOrderBy(),OrderBy.NOMBRE));
		//tableColumn.addPropertyChangeListener(new ProductoPropertyChangeListener());
					
		tableColumn.setPreferredWidth(150); 	 
		tableColumn.setWidth(150); 	 
		tableColumn.setMinWidth(150);
		tableColumn.setMaxWidth(150);
				
		iWidthTableDefinicionOrderBy+=150;
					
		//tableColumn=this.jTableDatosProductoOrderBy.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProductoOrderBy,OrderBy.NOMBREDB));			
		////tableColumn.addPropertyChangeListener(new ProductoPropertyChangeListener());
								
		tableColumn=this.jInternalFrameOrderByProducto.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByProducto.getjTableDatosOrderBy(),OrderBy.ESDESC));
		//tableColumn.addPropertyChangeListener(new ProductoPropertyChangeListener());
												
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		((AbstractTableModel) this.jInternalFrameOrderByProducto.getjTableDatosOrderBy().getModel()).fireTableDataChanged();
				
		iWidthTableDefinicionOrderBy+=50;
	}
	
	
	
	public void inicializarActualizarBindingTablaProducto(Boolean esInicializar) throws Exception {
		Boolean isNoExiste=false;
		Integer iCountNumeroColumnasNormal=0;
		Integer iCountNumeroColumnasFk=0;
		
		this.iWidthTableDefinicion=0;
		
		int iSizeTabla=0;
		
		iSizeTabla=this.getSizeTablaDatos();
		
	if(esInicializar || ConstantesSwing.FORZAR_INICIALIZAR_TABLA) {//esInicializar
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			isNoExiste=productoLogic.getProductos().size()==0;
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			isNoExiste=productos.size()==0;
		}
		//ARCHITECTURE
			
		if(isNoExiste) {
			if(this.iNumeroPaginacion-this.iNumeroPaginacion>0) {
				this.iNumeroPaginacion-=this.iNumeroPaginacion;
			}
		}
		
		TableColumn tableColumn=new TableColumn();
		
		if(ProductoJInternalFrame.ISBINDING_MANUAL_TABLA) {
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.jTableDatosProducto.setModel(new ProductoModel(this.productoLogic.getProductos(),this));
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.jTableDatosProducto.setModel(new ProductoModel(this.productos,this));
			}
			//ARCHITECTURE
			
							
			
			
			if(this.jInternalFrameOrderByProducto!=null && this.jInternalFrameOrderByProducto.getjTableDatosOrderBy()!=null) {
				this.inicializarActualizarBindingTablaOrderByProducto();
			}
			
								
			//DEFINIR RENDERERS
			tableColumn=this.jTableDatosProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProducto,Constantes2.S_SELECCIONAR));
			//tableColumn.addPropertyChangeListener(new ProductoPropertyChangeListener());
			tableColumn.setCellRenderer(new BooleanRenderer(true,"Seleccionar "+ProductoConstantesFunciones.SCLASSWEBTITULO,productoConstantesFunciones.resaltarSeleccionarProducto,iSizeTabla,true,false,"","",this));
			tableColumn.setCellEditor(new BooleanEditorRenderer(true,"Seleccionar "+ProductoConstantesFunciones.SCLASSWEBTITULO,productoConstantesFunciones.resaltarSeleccionarProducto,false,"","",this));			
			
			tableColumn.setPreferredWidth(50); 	 
			tableColumn.setWidth(50); 	 
			tableColumn.setMinWidth(50); 
			tableColumn.setMaxWidth(50); 
			
			this.iWidthTableDefinicion+=50;
			
			


			tableColumn=this.jTableDatosProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProducto,ProductoConstantesFunciones.LABEL_ID));

		if(this.productoConstantesFunciones.mostraridProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoConstantesFunciones.LABEL_ID,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.productoConstantesFunciones.resaltaridProducto,this.productoConstantesFunciones.activaridProducto,iSizeTabla,this,true,"idProducto","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.productoConstantesFunciones.resaltaridProducto,this.productoConstantesFunciones.activaridProducto,this,true,"idProducto","BASICO",false));

			tableColumn.setPreferredWidth(50);
			tableColumn.setWidth(50);
			tableColumn.setMinWidth(50);
			tableColumn.setMaxWidth(50);

			this.iWidthTableDefinicion+=50;
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProducto,ProductoConstantesFunciones.LABEL_IDEMPRESA));

		if(this.productoConstantesFunciones.mostrarid_empresaProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoConstantesFunciones.LABEL_IDEMPRESA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new EmpresaTableCell(this.empresasForeignKey,this.productoConstantesFunciones.resaltarid_empresaProducto,this,this.productoConstantesFunciones.activarid_empresaProducto,iSizeTabla));
			tableColumn.setCellEditor(new EmpresaTableCell(this.empresasForeignKey,this.productoConstantesFunciones.resaltarid_empresaProducto,this,this.productoConstantesFunciones.activarid_empresaProducto,false,"id_empresaProducto","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProducto,ProductoConstantesFunciones.LABEL_IDSUCURSAL));

		if(this.productoConstantesFunciones.mostrarid_sucursalProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoConstantesFunciones.LABEL_IDSUCURSAL,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new SucursalTableCell(this.sucursalsForeignKey,this.productoConstantesFunciones.resaltarid_sucursalProducto,this,this.productoConstantesFunciones.activarid_sucursalProducto,iSizeTabla));
			tableColumn.setCellEditor(new SucursalTableCell(this.sucursalsForeignKey,this.productoConstantesFunciones.resaltarid_sucursalProducto,this,this.productoConstantesFunciones.activarid_sucursalProducto,false,"id_sucursalProducto","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProducto,ProductoConstantesFunciones.LABEL_CODIGO));

		if(this.productoConstantesFunciones.mostrarcodigoProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoConstantesFunciones.LABEL_CODIGO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.productoConstantesFunciones.resaltarcodigoProducto,this.productoConstantesFunciones.activarcodigoProducto,iSizeTabla,this,true,"codigoProducto","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.productoConstantesFunciones.resaltarcodigoProducto,this.productoConstantesFunciones.activarcodigoProducto,this,true,"codigoProducto","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProducto,ProductoConstantesFunciones.LABEL_NOMBRE));

		if(this.productoConstantesFunciones.mostrarnombreProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoConstantesFunciones.LABEL_NOMBRE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.productoConstantesFunciones.resaltarnombreProducto,this.productoConstantesFunciones.activarnombreProducto,iSizeTabla,this,true,"nombreProducto","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.productoConstantesFunciones.resaltarnombreProducto,this.productoConstantesFunciones.activarnombreProducto,this,true,"nombreProducto","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProducto,ProductoConstantesFunciones.LABEL_NOMBREEXTRANJERO));

		if(this.productoConstantesFunciones.mostrarnombre_extranjeroProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoConstantesFunciones.LABEL_NOMBREEXTRANJERO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.productoConstantesFunciones.resaltarnombre_extranjeroProducto,this.productoConstantesFunciones.activarnombre_extranjeroProducto,iSizeTabla,this,true,"nombre_extranjeroProducto","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.productoConstantesFunciones.resaltarnombre_extranjeroProducto,this.productoConstantesFunciones.activarnombre_extranjeroProducto,this,true,"nombre_extranjeroProducto","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProducto,ProductoConstantesFunciones.LABEL_RESUMENDETALLE));

		if(this.productoConstantesFunciones.mostrarresumen_detalleProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoConstantesFunciones.LABEL_RESUMENDETALLE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.productoConstantesFunciones.resaltarresumen_detalleProducto,this.productoConstantesFunciones.activarresumen_detalleProducto,iSizeTabla,this,true,"resumen_detalleProducto","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.productoConstantesFunciones.resaltarresumen_detalleProducto,this.productoConstantesFunciones.activarresumen_detalleProducto,this,true,"resumen_detalleProducto","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProducto,ProductoConstantesFunciones.LABEL_CODIGOBARRA));

		if(this.productoConstantesFunciones.mostrarcodigo_barraProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoConstantesFunciones.LABEL_CODIGOBARRA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.productoConstantesFunciones.resaltarcodigo_barraProducto,this.productoConstantesFunciones.activarcodigo_barraProducto,iSizeTabla,this,true,"codigo_barraProducto","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.productoConstantesFunciones.resaltarcodigo_barraProducto,this.productoConstantesFunciones.activarcodigo_barraProducto,this,true,"codigo_barraProducto","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProducto,ProductoConstantesFunciones.LABEL_IDLINEA));

		if(this.productoConstantesFunciones.mostrarid_lineaProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoConstantesFunciones.LABEL_IDLINEA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new LineaTableCell(this.lineasForeignKey,this.productoConstantesFunciones.resaltarid_lineaProducto,this,this.productoConstantesFunciones.activarid_lineaProducto,iSizeTabla));
			tableColumn.setCellEditor(new LineaTableCell(this.lineasForeignKey,this.productoConstantesFunciones.resaltarid_lineaProducto,this,this.productoConstantesFunciones.activarid_lineaProducto,true,"id_lineaProducto","BASICO-CON_EVENT_CHANGE"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProducto,ProductoConstantesFunciones.LABEL_IDLINEAGRUPO));

		if(this.productoConstantesFunciones.mostrarid_linea_grupoProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoConstantesFunciones.LABEL_IDLINEAGRUPO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new LineaTableCell(this.lineagruposForeignKey,this.productoConstantesFunciones.resaltarid_linea_grupoProducto,this,this.productoConstantesFunciones.activarid_linea_grupoProducto,iSizeTabla));
			tableColumn.setCellEditor(new LineaTableCell(this.lineagruposForeignKey,this.productoConstantesFunciones.resaltarid_linea_grupoProducto,this,this.productoConstantesFunciones.activarid_linea_grupoProducto,true,"id_linea_grupoProducto","BASICO-CON_EVENT_CHANGE"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProducto,ProductoConstantesFunciones.LABEL_IDLINEACATEGORIA));

		if(this.productoConstantesFunciones.mostrarid_linea_categoriaProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoConstantesFunciones.LABEL_IDLINEACATEGORIA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new LineaTableCell(this.lineacategoriasForeignKey,this.productoConstantesFunciones.resaltarid_linea_categoriaProducto,this,this.productoConstantesFunciones.activarid_linea_categoriaProducto,iSizeTabla));
			tableColumn.setCellEditor(new LineaTableCell(this.lineacategoriasForeignKey,this.productoConstantesFunciones.resaltarid_linea_categoriaProducto,this,this.productoConstantesFunciones.activarid_linea_categoriaProducto,true,"id_linea_categoriaProducto","BASICO-CON_EVENT_CHANGE"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProducto,ProductoConstantesFunciones.LABEL_IDLINEAMARCA));

		if(this.productoConstantesFunciones.mostrarid_linea_marcaProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoConstantesFunciones.LABEL_IDLINEAMARCA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new LineaTableCell(this.lineamarcasForeignKey,this.productoConstantesFunciones.resaltarid_linea_marcaProducto,this,this.productoConstantesFunciones.activarid_linea_marcaProducto,iSizeTabla));
			tableColumn.setCellEditor(new LineaTableCell(this.lineamarcasForeignKey,this.productoConstantesFunciones.resaltarid_linea_marcaProducto,this,this.productoConstantesFunciones.activarid_linea_marcaProducto,true,"id_linea_marcaProducto","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProducto,ProductoConstantesFunciones.LABEL_IDTIPOPRODUCTOSERVICIO));

		if(this.productoConstantesFunciones.mostrarid_tipo_producto_servicioProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoConstantesFunciones.LABEL_IDTIPOPRODUCTOSERVICIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoProductoServicioTableCell(this.tipoproductoserviciosForeignKey,this.productoConstantesFunciones.resaltarid_tipo_producto_servicioProducto,this,this.productoConstantesFunciones.activarid_tipo_producto_servicioProducto,iSizeTabla));
			tableColumn.setCellEditor(new TipoProductoServicioTableCell(this.tipoproductoserviciosForeignKey,this.productoConstantesFunciones.resaltarid_tipo_producto_servicioProducto,this,this.productoConstantesFunciones.activarid_tipo_producto_servicioProducto,true,"id_tipo_producto_servicioProducto","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProducto,ProductoConstantesFunciones.LABEL_IDTIPOPRODUCTOSERVICIOINVEN));

		if(this.productoConstantesFunciones.mostrarid_tipo_producto_servicio_invenProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoConstantesFunciones.LABEL_IDTIPOPRODUCTOSERVICIOINVEN,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoProductoServicioInvenTableCell(this.tipoproductoservicioinvensForeignKey,this.productoConstantesFunciones.resaltarid_tipo_producto_servicio_invenProducto,this,this.productoConstantesFunciones.activarid_tipo_producto_servicio_invenProducto,iSizeTabla));
			tableColumn.setCellEditor(new TipoProductoServicioInvenTableCell(this.tipoproductoservicioinvensForeignKey,this.productoConstantesFunciones.resaltarid_tipo_producto_servicio_invenProducto,this,this.productoConstantesFunciones.activarid_tipo_producto_servicio_invenProducto,true,"id_tipo_producto_servicio_invenProducto","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProducto,ProductoConstantesFunciones.LABEL_IDTIPOCOSTEO));

		if(this.productoConstantesFunciones.mostrarid_tipo_costeoProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoConstantesFunciones.LABEL_IDTIPOCOSTEO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoCosteoTableCell(this.tipocosteosForeignKey,this.productoConstantesFunciones.resaltarid_tipo_costeoProducto,this,this.productoConstantesFunciones.activarid_tipo_costeoProducto,iSizeTabla));
			tableColumn.setCellEditor(new TipoCosteoTableCell(this.tipocosteosForeignKey,this.productoConstantesFunciones.resaltarid_tipo_costeoProducto,this,this.productoConstantesFunciones.activarid_tipo_costeoProducto,true,"id_tipo_costeoProducto","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProducto,ProductoConstantesFunciones.LABEL_IDUNIDAD));

		if(this.productoConstantesFunciones.mostrarid_unidadProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoConstantesFunciones.LABEL_IDUNIDAD,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new UnidadTableCell(this.unidadsForeignKey,this.productoConstantesFunciones.resaltarid_unidadProducto,this,this.productoConstantesFunciones.activarid_unidadProducto,iSizeTabla));
			tableColumn.setCellEditor(new UnidadTableCell(this.unidadsForeignKey,this.productoConstantesFunciones.resaltarid_unidadProducto,this,this.productoConstantesFunciones.activarid_unidadProducto,true,"id_unidadProducto","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProducto,ProductoConstantesFunciones.LABEL_IDUNIDADPESO));

		if(this.productoConstantesFunciones.mostrarid_unidad_pesoProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoConstantesFunciones.LABEL_IDUNIDADPESO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new UnidadTableCell(this.unidadpesosForeignKey,this.productoConstantesFunciones.resaltarid_unidad_pesoProducto,this,this.productoConstantesFunciones.activarid_unidad_pesoProducto,iSizeTabla));
			tableColumn.setCellEditor(new UnidadTableCell(this.unidadpesosForeignKey,this.productoConstantesFunciones.resaltarid_unidad_pesoProducto,this,this.productoConstantesFunciones.activarid_unidad_pesoProducto,true,"id_unidad_pesoProducto","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProducto,ProductoConstantesFunciones.LABEL_IDARANCEL));

		if(this.productoConstantesFunciones.mostrarid_arancelProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoConstantesFunciones.LABEL_IDARANCEL,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new ArancelTableCell(this.arancelsForeignKey,this.productoConstantesFunciones.resaltarid_arancelProducto,this,this.productoConstantesFunciones.activarid_arancelProducto,iSizeTabla));
			tableColumn.setCellEditor(new ArancelTableCell(this.arancelsForeignKey,this.productoConstantesFunciones.resaltarid_arancelProducto,this,this.productoConstantesFunciones.activarid_arancelProducto,true,"id_arancelProducto","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProducto,ProductoConstantesFunciones.LABEL_IDCLIENTE));

		if(this.productoConstantesFunciones.mostrarid_clienteProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoConstantesFunciones.LABEL_IDCLIENTE,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new ClienteTableCell(this.clientesForeignKey,this.productoConstantesFunciones.resaltarid_clienteProducto,this,this.productoConstantesFunciones.activarid_clienteProducto,iSizeTabla));
			tableColumn.setCellEditor(new ClienteTableCell(this.clientesForeignKey,this.productoConstantesFunciones.resaltarid_clienteProducto,this,this.productoConstantesFunciones.activarid_clienteProducto,true,"id_clienteProducto","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75);
			//tableColumn.addPropertyChangeListener(new ProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProducto,ProductoConstantesFunciones.LABEL_IDCLIENTEPROVEEDORDEFECTO));

		if(this.productoConstantesFunciones.mostrarid_cliente_proveedor_defectoProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoConstantesFunciones.LABEL_IDCLIENTEPROVEEDORDEFECTO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new ClienteTableCell(this.clienteproveedordefectosForeignKey,this.productoConstantesFunciones.resaltarid_cliente_proveedor_defectoProducto,this,this.productoConstantesFunciones.activarid_cliente_proveedor_defectoProducto,iSizeTabla));
			tableColumn.setCellEditor(new ClienteTableCell(this.clienteproveedordefectosForeignKey,this.productoConstantesFunciones.resaltarid_cliente_proveedor_defectoProducto,this,this.productoConstantesFunciones.activarid_cliente_proveedor_defectoProducto,true,"id_cliente_proveedor_defectoProducto","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75);
			//tableColumn.addPropertyChangeListener(new ProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProducto,ProductoConstantesFunciones.LABEL_ESTAACTIVO));

		if(this.productoConstantesFunciones.mostraresta_activoProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoConstantesFunciones.LABEL_ESTAACTIVO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.productoConstantesFunciones.resaltaresta_activoProducto,this.productoConstantesFunciones.activaresta_activoProducto,iSizeTabla));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.productoConstantesFunciones.resaltaresta_activoProducto,this.productoConstantesFunciones.activaresta_activoProducto,this,true,"esta_activoProducto","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProducto,ProductoConstantesFunciones.LABEL_DESCRIPCION));

		if(this.productoConstantesFunciones.mostrardescripcionProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoConstantesFunciones.LABEL_DESCRIPCION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.productoConstantesFunciones.resaltardescripcionProducto,this.productoConstantesFunciones.activardescripcionProducto,iSizeTabla,this,true,"descripcionProducto","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.productoConstantesFunciones.resaltardescripcionProducto,this.productoConstantesFunciones.activardescripcionProducto,this,true,"descripcionProducto","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProducto,ProductoConstantesFunciones.LABEL_PRECIO));

		if(this.productoConstantesFunciones.mostrarprecioProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoConstantesFunciones.LABEL_PRECIO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.productoConstantesFunciones.resaltarprecioProducto,this.productoConstantesFunciones.activarprecioProducto,iSizeTabla,this,true,"precioProducto","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.productoConstantesFunciones.resaltarprecioProducto,this.productoConstantesFunciones.activarprecioProducto,this,true,"precioProducto","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProducto,ProductoConstantesFunciones.LABEL_IVA));

		if(this.productoConstantesFunciones.mostrarivaProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoConstantesFunciones.LABEL_IVA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.productoConstantesFunciones.resaltarivaProducto,this.productoConstantesFunciones.activarivaProducto,iSizeTabla,this,true,"ivaProducto","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.productoConstantesFunciones.resaltarivaProducto,this.productoConstantesFunciones.activarivaProducto,this,true,"ivaProducto","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProducto,ProductoConstantesFunciones.LABEL_IVAVALOR));

		if(this.productoConstantesFunciones.mostrariva_valorProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoConstantesFunciones.LABEL_IVAVALOR,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.productoConstantesFunciones.resaltariva_valorProducto,this.productoConstantesFunciones.activariva_valorProducto,iSizeTabla,this,true,"iva_valorProducto","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.productoConstantesFunciones.resaltariva_valorProducto,this.productoConstantesFunciones.activariva_valorProducto,this,true,"iva_valorProducto","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProducto,ProductoConstantesFunciones.LABEL_ICE));

		if(this.productoConstantesFunciones.mostrariceProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoConstantesFunciones.LABEL_ICE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.productoConstantesFunciones.resaltariceProducto,this.productoConstantesFunciones.activariceProducto,iSizeTabla,this,true,"iceProducto","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.productoConstantesFunciones.resaltariceProducto,this.productoConstantesFunciones.activariceProducto,this,true,"iceProducto","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProducto,ProductoConstantesFunciones.LABEL_ICEVALOR));

		if(this.productoConstantesFunciones.mostrarice_valorProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoConstantesFunciones.LABEL_ICEVALOR,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.productoConstantesFunciones.resaltarice_valorProducto,this.productoConstantesFunciones.activarice_valorProducto,iSizeTabla,this,true,"ice_valorProducto","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.productoConstantesFunciones.resaltarice_valorProducto,this.productoConstantesFunciones.activarice_valorProducto,this,true,"ice_valorProducto","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProducto,ProductoConstantesFunciones.LABEL_DESCUENTO));

		if(this.productoConstantesFunciones.mostrardescuentoProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoConstantesFunciones.LABEL_DESCUENTO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.productoConstantesFunciones.resaltardescuentoProducto,this.productoConstantesFunciones.activardescuentoProducto,iSizeTabla,this,true,"descuentoProducto","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.productoConstantesFunciones.resaltardescuentoProducto,this.productoConstantesFunciones.activardescuentoProducto,this,true,"descuentoProducto","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProducto,ProductoConstantesFunciones.LABEL_DESCUENTOVALOR));

		if(this.productoConstantesFunciones.mostrardescuento_valorProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoConstantesFunciones.LABEL_DESCUENTOVALOR,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.productoConstantesFunciones.resaltardescuento_valorProducto,this.productoConstantesFunciones.activardescuento_valorProducto,iSizeTabla,this,true,"descuento_valorProducto","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.productoConstantesFunciones.resaltardescuento_valorProducto,this.productoConstantesFunciones.activardescuento_valorProducto,this,true,"descuento_valorProducto","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProducto,ProductoConstantesFunciones.LABEL_ARANCELPORCENTAJE));

		if(this.productoConstantesFunciones.mostrararancel_porcentajeProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoConstantesFunciones.LABEL_ARANCELPORCENTAJE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.productoConstantesFunciones.resaltararancel_porcentajeProducto,this.productoConstantesFunciones.activararancel_porcentajeProducto,iSizeTabla,this,true,"arancel_porcentajeProducto","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.productoConstantesFunciones.resaltararancel_porcentajeProducto,this.productoConstantesFunciones.activararancel_porcentajeProducto,this,true,"arancel_porcentajeProducto","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProducto,ProductoConstantesFunciones.LABEL_ARANCELVALOR));

		if(this.productoConstantesFunciones.mostrararancel_valorProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoConstantesFunciones.LABEL_ARANCELVALOR,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.productoConstantesFunciones.resaltararancel_valorProducto,this.productoConstantesFunciones.activararancel_valorProducto,iSizeTabla,this,true,"arancel_valorProducto","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.productoConstantesFunciones.resaltararancel_valorProducto,this.productoConstantesFunciones.activararancel_valorProducto,this,true,"arancel_valorProducto","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProducto,ProductoConstantesFunciones.LABEL_COMISION));

		if(this.productoConstantesFunciones.mostrarcomisionProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoConstantesFunciones.LABEL_COMISION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.productoConstantesFunciones.resaltarcomisionProducto,this.productoConstantesFunciones.activarcomisionProducto,iSizeTabla,this,true,"comisionProducto","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.productoConstantesFunciones.resaltarcomisionProducto,this.productoConstantesFunciones.activarcomisionProducto,this,true,"comisionProducto","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProducto,ProductoConstantesFunciones.LABEL_COMISIONVALOR));

		if(this.productoConstantesFunciones.mostrarcomision_valorProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoConstantesFunciones.LABEL_COMISIONVALOR,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.productoConstantesFunciones.resaltarcomision_valorProducto,this.productoConstantesFunciones.activarcomision_valorProducto,iSizeTabla,this,true,"comision_valorProducto","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.productoConstantesFunciones.resaltarcomision_valorProducto,this.productoConstantesFunciones.activarcomision_valorProducto,this,true,"comision_valorProducto","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProducto,ProductoConstantesFunciones.LABEL_DIASPRODUCCION));

		if(this.productoConstantesFunciones.mostrardias_produccionProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoConstantesFunciones.LABEL_DIASPRODUCCION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.productoConstantesFunciones.resaltardias_produccionProducto,this.productoConstantesFunciones.activardias_produccionProducto,iSizeTabla,this,true,"dias_produccionProducto","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.productoConstantesFunciones.resaltardias_produccionProducto,this.productoConstantesFunciones.activardias_produccionProducto,this,true,"dias_produccionProducto","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProducto,ProductoConstantesFunciones.LABEL_CONSTOCKNEGATIVO));

		if(this.productoConstantesFunciones.mostrarcon_stock_negativoProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoConstantesFunciones.LABEL_CONSTOCKNEGATIVO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.productoConstantesFunciones.resaltarcon_stock_negativoProducto,this.productoConstantesFunciones.activarcon_stock_negativoProducto,iSizeTabla));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.productoConstantesFunciones.resaltarcon_stock_negativoProducto,this.productoConstantesFunciones.activarcon_stock_negativoProducto,this,true,"con_stock_negativoProducto","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProducto,ProductoConstantesFunciones.LABEL_CONPRECIOMINIMO));

		if(this.productoConstantesFunciones.mostrarcon_precio_minimoProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoConstantesFunciones.LABEL_CONPRECIOMINIMO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.productoConstantesFunciones.resaltarcon_precio_minimoProducto,this.productoConstantesFunciones.activarcon_precio_minimoProducto,iSizeTabla));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.productoConstantesFunciones.resaltarcon_precio_minimoProducto,this.productoConstantesFunciones.activarcon_precio_minimoProducto,this,true,"con_precio_minimoProducto","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProducto,ProductoConstantesFunciones.LABEL_CONLOTE));

		if(this.productoConstantesFunciones.mostrarcon_loteProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoConstantesFunciones.LABEL_CONLOTE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.productoConstantesFunciones.resaltarcon_loteProducto,this.productoConstantesFunciones.activarcon_loteProducto,iSizeTabla));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.productoConstantesFunciones.resaltarcon_loteProducto,this.productoConstantesFunciones.activarcon_loteProducto,this,true,"con_loteProducto","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProducto,ProductoConstantesFunciones.LABEL_CONCONFIRMACION));

		if(this.productoConstantesFunciones.mostrarcon_confirmacionProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoConstantesFunciones.LABEL_CONCONFIRMACION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.productoConstantesFunciones.resaltarcon_confirmacionProducto,this.productoConstantesFunciones.activarcon_confirmacionProducto,iSizeTabla));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.productoConstantesFunciones.resaltarcon_confirmacionProducto,this.productoConstantesFunciones.activarcon_confirmacionProducto,this,true,"con_confirmacionProducto","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProducto,ProductoConstantesFunciones.LABEL_CONPRESUPUESTO));

		if(this.productoConstantesFunciones.mostrarcon_presupuestoProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoConstantesFunciones.LABEL_CONPRESUPUESTO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.productoConstantesFunciones.resaltarcon_presupuestoProducto,this.productoConstantesFunciones.activarcon_presupuestoProducto,iSizeTabla));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.productoConstantesFunciones.resaltarcon_presupuestoProducto,this.productoConstantesFunciones.activarcon_presupuestoProducto,this,true,"con_presupuestoProducto","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProducto,ProductoConstantesFunciones.LABEL_CONIMPORTACION));

		if(this.productoConstantesFunciones.mostrarcon_importacionProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoConstantesFunciones.LABEL_CONIMPORTACION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.productoConstantesFunciones.resaltarcon_importacionProducto,this.productoConstantesFunciones.activarcon_importacionProducto,iSizeTabla));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.productoConstantesFunciones.resaltarcon_importacionProducto,this.productoConstantesFunciones.activarcon_importacionProducto,this,true,"con_importacionProducto","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProducto,ProductoConstantesFunciones.LABEL_CONFINAL));

		if(this.productoConstantesFunciones.mostrarcon_finalProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoConstantesFunciones.LABEL_CONFINAL,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.productoConstantesFunciones.resaltarcon_finalProducto,this.productoConstantesFunciones.activarcon_finalProducto,iSizeTabla));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.productoConstantesFunciones.resaltarcon_finalProducto,this.productoConstantesFunciones.activarcon_finalProducto,this,true,"con_finalProducto","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProducto,ProductoConstantesFunciones.LABEL_CONCONSEP));

		if(this.productoConstantesFunciones.mostrarcon_consepProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoConstantesFunciones.LABEL_CONCONSEP,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.productoConstantesFunciones.resaltarcon_consepProducto,this.productoConstantesFunciones.activarcon_consepProducto,iSizeTabla));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.productoConstantesFunciones.resaltarcon_consepProducto,this.productoConstantesFunciones.activarcon_consepProducto,this,true,"con_consepProducto","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProducto,ProductoConstantesFunciones.LABEL_CONSERIE));

		if(this.productoConstantesFunciones.mostrarcon_serieProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoConstantesFunciones.LABEL_CONSERIE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.productoConstantesFunciones.resaltarcon_serieProducto,this.productoConstantesFunciones.activarcon_serieProducto,iSizeTabla));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.productoConstantesFunciones.resaltarcon_serieProducto,this.productoConstantesFunciones.activarcon_serieProducto,this,true,"con_serieProducto","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProducto,ProductoConstantesFunciones.LABEL_CONBALANZA));

		if(this.productoConstantesFunciones.mostrarcon_balanzaProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoConstantesFunciones.LABEL_CONBALANZA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.productoConstantesFunciones.resaltarcon_balanzaProducto,this.productoConstantesFunciones.activarcon_balanzaProducto,iSizeTabla));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.productoConstantesFunciones.resaltarcon_balanzaProducto,this.productoConstantesFunciones.activarcon_balanzaProducto,this,true,"con_balanzaProducto","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProducto,ProductoConstantesFunciones.LABEL_ALTO));

		if(this.productoConstantesFunciones.mostraraltoProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoConstantesFunciones.LABEL_ALTO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.productoConstantesFunciones.resaltaraltoProducto,this.productoConstantesFunciones.activaraltoProducto,iSizeTabla,this,true,"altoProducto","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.productoConstantesFunciones.resaltaraltoProducto,this.productoConstantesFunciones.activaraltoProducto,this,true,"altoProducto","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProducto,ProductoConstantesFunciones.LABEL_ANCHO));

		if(this.productoConstantesFunciones.mostraranchoProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoConstantesFunciones.LABEL_ANCHO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.productoConstantesFunciones.resaltaranchoProducto,this.productoConstantesFunciones.activaranchoProducto,iSizeTabla,this,true,"anchoProducto","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.productoConstantesFunciones.resaltaranchoProducto,this.productoConstantesFunciones.activaranchoProducto,this,true,"anchoProducto","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProducto,ProductoConstantesFunciones.LABEL_LARGO));

		if(this.productoConstantesFunciones.mostrarlargoProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoConstantesFunciones.LABEL_LARGO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.productoConstantesFunciones.resaltarlargoProducto,this.productoConstantesFunciones.activarlargoProducto,iSizeTabla,this,true,"largoProducto","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.productoConstantesFunciones.resaltarlargoProducto,this.productoConstantesFunciones.activarlargoProducto,this,true,"largoProducto","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProducto,ProductoConstantesFunciones.LABEL_VOLUMEN));

		if(this.productoConstantesFunciones.mostrarvolumenProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoConstantesFunciones.LABEL_VOLUMEN,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.productoConstantesFunciones.resaltarvolumenProducto,this.productoConstantesFunciones.activarvolumenProducto,iSizeTabla,this,true,"volumenProducto","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.productoConstantesFunciones.resaltarvolumenProducto,this.productoConstantesFunciones.activarvolumenProducto,this,true,"volumenProducto","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProducto,ProductoConstantesFunciones.LABEL_PESO));

		if(this.productoConstantesFunciones.mostrarpesoProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoConstantesFunciones.LABEL_PESO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.productoConstantesFunciones.resaltarpesoProducto,this.productoConstantesFunciones.activarpesoProducto,iSizeTabla,this,true,"pesoProducto","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.productoConstantesFunciones.resaltarpesoProducto,this.productoConstantesFunciones.activarpesoProducto,this,true,"pesoProducto","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProducto,ProductoConstantesFunciones.LABEL_GRAMOS));

		if(this.productoConstantesFunciones.mostrargramosProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoConstantesFunciones.LABEL_GRAMOS,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.productoConstantesFunciones.resaltargramosProducto,this.productoConstantesFunciones.activargramosProducto,iSizeTabla,this,true,"gramosProducto","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.productoConstantesFunciones.resaltargramosProducto,this.productoConstantesFunciones.activargramosProducto,this,true,"gramosProducto","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProducto,ProductoConstantesFunciones.LABEL_UNIDADESCAJA));

		if(this.productoConstantesFunciones.mostrarunidades_cajaProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoConstantesFunciones.LABEL_UNIDADESCAJA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.productoConstantesFunciones.resaltarunidades_cajaProducto,this.productoConstantesFunciones.activarunidades_cajaProducto,iSizeTabla,this,true,"unidades_cajaProducto","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.productoConstantesFunciones.resaltarunidades_cajaProducto,this.productoConstantesFunciones.activarunidades_cajaProducto,this,true,"unidades_cajaProducto","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProducto,ProductoConstantesFunciones.LABEL_MARGEN));

		if(this.productoConstantesFunciones.mostrarmargenProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoConstantesFunciones.LABEL_MARGEN,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.productoConstantesFunciones.resaltarmargenProducto,this.productoConstantesFunciones.activarmargenProducto,iSizeTabla,this,true,"margenProducto","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.productoConstantesFunciones.resaltarmargenProducto,this.productoConstantesFunciones.activarmargenProducto,this,true,"margenProducto","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProducto,ProductoConstantesFunciones.LABEL_FACTOR));

		if(this.productoConstantesFunciones.mostrarfactorProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoConstantesFunciones.LABEL_FACTOR,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.productoConstantesFunciones.resaltarfactorProducto,this.productoConstantesFunciones.activarfactorProducto,iSizeTabla,this,true,"factorProducto","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.productoConstantesFunciones.resaltarfactorProducto,this.productoConstantesFunciones.activarfactorProducto,this,true,"factorProducto","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProducto,ProductoConstantesFunciones.LABEL_FOB));

		if(this.productoConstantesFunciones.mostrarfobProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoConstantesFunciones.LABEL_FOB,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.productoConstantesFunciones.resaltarfobProducto,this.productoConstantesFunciones.activarfobProducto,iSizeTabla,this,true,"fobProducto","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.productoConstantesFunciones.resaltarfobProducto,this.productoConstantesFunciones.activarfobProducto,this,true,"fobProducto","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProducto,ProductoConstantesFunciones.LABEL_FOB2));

		if(this.productoConstantesFunciones.mostrarfob2Producto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoConstantesFunciones.LABEL_FOB2,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.productoConstantesFunciones.resaltarfob2Producto,this.productoConstantesFunciones.activarfob2Producto,iSizeTabla,this,true,"fob2Producto","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.productoConstantesFunciones.resaltarfob2Producto,this.productoConstantesFunciones.activarfob2Producto,this,true,"fob2Producto","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProducto,ProductoConstantesFunciones.LABEL_IDTIPOPRODUCTO));

		if(this.productoConstantesFunciones.mostrarid_tipo_productoProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoConstantesFunciones.LABEL_IDTIPOPRODUCTO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoProductoTableCell(this.tipoproductosForeignKey,this.productoConstantesFunciones.resaltarid_tipo_productoProducto,this,this.productoConstantesFunciones.activarid_tipo_productoProducto,iSizeTabla));
			tableColumn.setCellEditor(new TipoProductoTableCell(this.tipoproductosForeignKey,this.productoConstantesFunciones.resaltarid_tipo_productoProducto,this,this.productoConstantesFunciones.activarid_tipo_productoProducto,true,"id_tipo_productoProducto","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProducto,ProductoConstantesFunciones.LABEL_IDCOLORPRODUCTO));

		if(this.productoConstantesFunciones.mostrarid_color_productoProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoConstantesFunciones.LABEL_IDCOLORPRODUCTO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new ColorProductoTableCell(this.colorproductosForeignKey,this.productoConstantesFunciones.resaltarid_color_productoProducto,this,this.productoConstantesFunciones.activarid_color_productoProducto,iSizeTabla));
			tableColumn.setCellEditor(new ColorProductoTableCell(this.colorproductosForeignKey,this.productoConstantesFunciones.resaltarid_color_productoProducto,this,this.productoConstantesFunciones.activarid_color_productoProducto,true,"id_color_productoProducto","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProducto,ProductoConstantesFunciones.LABEL_IDCLASEPRODUCTO));

		if(this.productoConstantesFunciones.mostrarid_clase_productoProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoConstantesFunciones.LABEL_IDCLASEPRODUCTO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new ClaseProductoTableCell(this.claseproductosForeignKey,this.productoConstantesFunciones.resaltarid_clase_productoProducto,this,this.productoConstantesFunciones.activarid_clase_productoProducto,iSizeTabla));
			tableColumn.setCellEditor(new ClaseProductoTableCell(this.claseproductosForeignKey,this.productoConstantesFunciones.resaltarid_clase_productoProducto,this,this.productoConstantesFunciones.activarid_clase_productoProducto,true,"id_clase_productoProducto","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProducto,ProductoConstantesFunciones.LABEL_IDEFECTOPRODUCTO));

		if(this.productoConstantesFunciones.mostrarid_efecto_productoProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoConstantesFunciones.LABEL_IDEFECTOPRODUCTO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new EfectoProductoTableCell(this.efectoproductosForeignKey,this.productoConstantesFunciones.resaltarid_efecto_productoProducto,this,this.productoConstantesFunciones.activarid_efecto_productoProducto,iSizeTabla));
			tableColumn.setCellEditor(new EfectoProductoTableCell(this.efectoproductosForeignKey,this.productoConstantesFunciones.resaltarid_efecto_productoProducto,this,this.productoConstantesFunciones.activarid_efecto_productoProducto,true,"id_efecto_productoProducto","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProducto,ProductoConstantesFunciones.LABEL_IDMARCAPRODUCTO));

		if(this.productoConstantesFunciones.mostrarid_marca_productoProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoConstantesFunciones.LABEL_IDMARCAPRODUCTO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new MarcaProductoTableCell(this.marcaproductosForeignKey,this.productoConstantesFunciones.resaltarid_marca_productoProducto,this,this.productoConstantesFunciones.activarid_marca_productoProducto,iSizeTabla));
			tableColumn.setCellEditor(new MarcaProductoTableCell(this.marcaproductosForeignKey,this.productoConstantesFunciones.resaltarid_marca_productoProducto,this,this.productoConstantesFunciones.activarid_marca_productoProducto,true,"id_marca_productoProducto","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProducto,ProductoConstantesFunciones.LABEL_IDMODELOPRODUCTO));

		if(this.productoConstantesFunciones.mostrarid_modelo_productoProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoConstantesFunciones.LABEL_IDMODELOPRODUCTO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new ModeloProductoTableCell(this.modeloproductosForeignKey,this.productoConstantesFunciones.resaltarid_modelo_productoProducto,this,this.productoConstantesFunciones.activarid_modelo_productoProducto,iSizeTabla));
			tableColumn.setCellEditor(new ModeloProductoTableCell(this.modeloproductosForeignKey,this.productoConstantesFunciones.resaltarid_modelo_productoProducto,this,this.productoConstantesFunciones.activarid_modelo_productoProducto,true,"id_modelo_productoProducto","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProducto,ProductoConstantesFunciones.LABEL_IDMATERIALPRODUCTO));

		if(this.productoConstantesFunciones.mostrarid_material_productoProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoConstantesFunciones.LABEL_IDMATERIALPRODUCTO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new MaterialProductoTableCell(this.materialproductosForeignKey,this.productoConstantesFunciones.resaltarid_material_productoProducto,this,this.productoConstantesFunciones.activarid_material_productoProducto,iSizeTabla));
			tableColumn.setCellEditor(new MaterialProductoTableCell(this.materialproductosForeignKey,this.productoConstantesFunciones.resaltarid_material_productoProducto,this,this.productoConstantesFunciones.activarid_material_productoProducto,true,"id_material_productoProducto","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProducto,ProductoConstantesFunciones.LABEL_IDSEGMENTOPRODUCTO));

		if(this.productoConstantesFunciones.mostrarid_segmento_productoProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoConstantesFunciones.LABEL_IDSEGMENTOPRODUCTO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new SegmentoProductoTableCell(this.segmentoproductosForeignKey,this.productoConstantesFunciones.resaltarid_segmento_productoProducto,this,this.productoConstantesFunciones.activarid_segmento_productoProducto,iSizeTabla));
			tableColumn.setCellEditor(new SegmentoProductoTableCell(this.segmentoproductosForeignKey,this.productoConstantesFunciones.resaltarid_segmento_productoProducto,this,this.productoConstantesFunciones.activarid_segmento_productoProducto,true,"id_segmento_productoProducto","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProducto,ProductoConstantesFunciones.LABEL_IDTALLAPRODUCTO));

		if(this.productoConstantesFunciones.mostrarid_talla_productoProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoConstantesFunciones.LABEL_IDTALLAPRODUCTO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TallaProductoTableCell(this.tallaproductosForeignKey,this.productoConstantesFunciones.resaltarid_talla_productoProducto,this,this.productoConstantesFunciones.activarid_talla_productoProducto,iSizeTabla));
			tableColumn.setCellEditor(new TallaProductoTableCell(this.tallaproductosForeignKey,this.productoConstantesFunciones.resaltarid_talla_productoProducto,this,this.productoConstantesFunciones.activarid_talla_productoProducto,true,"id_talla_productoProducto","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProducto,ProductoConstantesFunciones.LABEL_GRUPO));

		if(this.productoConstantesFunciones.mostrargrupoProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoConstantesFunciones.LABEL_GRUPO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.productoConstantesFunciones.resaltargrupoProducto,this.productoConstantesFunciones.activargrupoProducto,iSizeTabla,this,true,"grupoProducto","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.productoConstantesFunciones.resaltargrupoProducto,this.productoConstantesFunciones.activargrupoProducto,this,true,"grupoProducto","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProducto,ProductoConstantesFunciones.LABEL_REFERENCIA));

		if(this.productoConstantesFunciones.mostrarreferenciaProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoConstantesFunciones.LABEL_REFERENCIA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.productoConstantesFunciones.resaltarreferenciaProducto,this.productoConstantesFunciones.activarreferenciaProducto,iSizeTabla,this,true,"referenciaProducto","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.productoConstantesFunciones.resaltarreferenciaProducto,this.productoConstantesFunciones.activarreferenciaProducto,this,true,"referenciaProducto","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProducto,ProductoConstantesFunciones.LABEL_APLICACION));

		if(this.productoConstantesFunciones.mostraraplicacionProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoConstantesFunciones.LABEL_APLICACION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.productoConstantesFunciones.resaltaraplicacionProducto,this.productoConstantesFunciones.activaraplicacionProducto,iSizeTabla,this,true,"aplicacionProducto","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.productoConstantesFunciones.resaltaraplicacionProducto,this.productoConstantesFunciones.activaraplicacionProducto,this,true,"aplicacionProducto","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProducto,ProductoConstantesFunciones.LABEL_PROCEDENCIA));

		if(this.productoConstantesFunciones.mostrarprocedenciaProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProductoConstantesFunciones.LABEL_PROCEDENCIA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.productoConstantesFunciones.resaltarprocedenciaProducto,this.productoConstantesFunciones.activarprocedenciaProducto,iSizeTabla,this,true,"procedenciaProducto","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.productoConstantesFunciones.resaltarprocedenciaProducto,this.productoConstantesFunciones.activarprocedenciaProducto,this,true,"procedenciaProducto","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}
			
		} else {
		}			
					
		if(!this.productoSessionBean.getEsGuardarRelacionado()
			&& !this.esParaBusquedaForeignKey) {
			

			if(this.isTienePermisosProveedorProducto && this.productoConstantesFunciones.mostrarProveedorProductoProducto && !ProductoConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Producto Proveedors");
				tableColumn.setHeaderValue("Producto Proveedors");
				tableColumn.setCellRenderer(new ProveedorProductoTableCell(productoConstantesFunciones.resaltarProveedorProductoProducto,this,this.productoConstantesFunciones.activarProveedorProductoProducto));
				tableColumn.setCellEditor(new ProveedorProductoTableCell(productoConstantesFunciones.resaltarProveedorProductoProducto,this,this.productoConstantesFunciones.activarProveedorProductoProducto));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosProducto.addColumn(tableColumn);
			}

			if(this.isTienePermisosPrecio && this.productoConstantesFunciones.mostrarPrecioProducto && !ProductoConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Precios");
				tableColumn.setHeaderValue("Precios");
				tableColumn.setCellRenderer(new PrecioTableCell(productoConstantesFunciones.resaltarPrecioProducto,this,this.productoConstantesFunciones.activarPrecioProducto));
				tableColumn.setCellEditor(new PrecioTableCell(productoConstantesFunciones.resaltarPrecioProducto,this,this.productoConstantesFunciones.activarPrecioProducto));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosProducto.addColumn(tableColumn);
			}

			if(this.isTienePermisosDetalleImpuestoInven && this.productoConstantesFunciones.mostrarDetalleImpuestoInvenProducto && !ProductoConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Detalle Impuesto Invenes");
				tableColumn.setHeaderValue("Detalle Impuesto Invenes");
				tableColumn.setCellRenderer(new DetalleImpuestoInvenTableCell(productoConstantesFunciones.resaltarDetalleImpuestoInvenProducto,this,this.productoConstantesFunciones.activarDetalleImpuestoInvenProducto));
				tableColumn.setCellEditor(new DetalleImpuestoInvenTableCell(productoConstantesFunciones.resaltarDetalleImpuestoInvenProducto,this,this.productoConstantesFunciones.activarDetalleImpuestoInvenProducto));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosProducto.addColumn(tableColumn);
			}

			if(this.isTienePermisosPresupuestoVentas && this.productoConstantesFunciones.mostrarPresupuestoVentasProducto && !ProductoConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Presupuesto Ventases");
				tableColumn.setHeaderValue("Presupuesto Ventases");
				tableColumn.setCellRenderer(new PresupuestoVentasTableCell(productoConstantesFunciones.resaltarPresupuestoVentasProducto,this,this.productoConstantesFunciones.activarPresupuestoVentasProducto));
				tableColumn.setCellEditor(new PresupuestoVentasTableCell(productoConstantesFunciones.resaltarPresupuestoVentasProducto,this,this.productoConstantesFunciones.activarPresupuestoVentasProducto));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosProducto.addColumn(tableColumn);
			}

			if(this.isTienePermisosPoliticaProducto && this.productoConstantesFunciones.mostrarPoliticaProductoProducto && !ProductoConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Politica Productos");
				tableColumn.setHeaderValue("Politica Productos");
				tableColumn.setCellRenderer(new PoliticaProductoTableCell(productoConstantesFunciones.resaltarPoliticaProductoProducto,this,this.productoConstantesFunciones.activarPoliticaProductoProducto));
				tableColumn.setCellEditor(new PoliticaProductoTableCell(productoConstantesFunciones.resaltarPoliticaProductoProducto,this,this.productoConstantesFunciones.activarPoliticaProductoProducto));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosProducto.addColumn(tableColumn);
			}

			if(this.isTienePermisosSerieProducto && this.productoConstantesFunciones.mostrarSerieProductoProducto && !ProductoConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Serie Productos");
				tableColumn.setHeaderValue("Serie Productos");
				tableColumn.setCellRenderer(new SerieProductoTableCell(productoConstantesFunciones.resaltarSerieProductoProducto,this,this.productoConstantesFunciones.activarSerieProductoProducto));
				tableColumn.setCellEditor(new SerieProductoTableCell(productoConstantesFunciones.resaltarSerieProductoProducto,this,this.productoConstantesFunciones.activarSerieProductoProducto));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosProducto.addColumn(tableColumn);
			}

			if(this.isTienePermisosUbicacionProdu && this.productoConstantesFunciones.mostrarUbicacionProduProducto && !ProductoConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Ubicacion Productos");
				tableColumn.setHeaderValue("Ubicacion Productos");
				tableColumn.setCellRenderer(new UbicacionProduTableCell(productoConstantesFunciones.resaltarUbicacionProduProducto,this,this.productoConstantesFunciones.activarUbicacionProduProducto));
				tableColumn.setCellEditor(new UbicacionProduTableCell(productoConstantesFunciones.resaltarUbicacionProduProducto,this,this.productoConstantesFunciones.activarUbicacionProduProducto));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosProducto.addColumn(tableColumn);
			}

			if(this.isTienePermisosParametroProducto && this.productoConstantesFunciones.mostrarParametroProductoProducto && !ProductoConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Parametro Productos");
				tableColumn.setHeaderValue("Parametro Productos");
				tableColumn.setCellRenderer(new ParametroProductoTableCell(productoConstantesFunciones.resaltarParametroProductoProducto,this,this.productoConstantesFunciones.activarParametroProductoProducto));
				tableColumn.setCellEditor(new ParametroProductoTableCell(productoConstantesFunciones.resaltarParametroProductoProducto,this,this.productoConstantesFunciones.activarParametroProductoProducto));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosProducto.addColumn(tableColumn);
			}

			if(this.isTienePermisosProductoUnidad && this.productoConstantesFunciones.mostrarProductoUnidadProducto && !ProductoConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Producto Unidads");
				tableColumn.setHeaderValue("Producto Unidads");
				tableColumn.setCellRenderer(new ProductoUnidadTableCell(productoConstantesFunciones.resaltarProductoUnidadProducto,this,this.productoConstantesFunciones.activarProductoUnidadProducto));
				tableColumn.setCellEditor(new ProductoUnidadTableCell(productoConstantesFunciones.resaltarProductoUnidadProducto,this,this.productoConstantesFunciones.activarProductoUnidadProducto));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosProducto.addColumn(tableColumn);
			}

			if(this.isTienePermisosIngrediente && this.productoConstantesFunciones.mostrarIngredienteProducto && !ProductoConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Ingredientes");
				tableColumn.setHeaderValue("Ingredientes");
				tableColumn.setCellRenderer(new IngredienteTableCell(productoConstantesFunciones.resaltarIngredienteProducto,this,this.productoConstantesFunciones.activarIngredienteProducto));
				tableColumn.setCellEditor(new IngredienteTableCell(productoConstantesFunciones.resaltarIngredienteProducto,this,this.productoConstantesFunciones.activarIngredienteProducto));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosProducto.addColumn(tableColumn);
			}

			if(this.isTienePermisosProductoCarac && this.productoConstantesFunciones.mostrarProductoCaracProducto && !ProductoConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Caracteristicas");
				tableColumn.setHeaderValue("Caracteristicas");
				tableColumn.setCellRenderer(new ProductoCaracTableCell(productoConstantesFunciones.resaltarProductoCaracProducto,this,this.productoConstantesFunciones.activarProductoCaracProducto));
				tableColumn.setCellEditor(new ProductoCaracTableCell(productoConstantesFunciones.resaltarProductoCaracProducto,this,this.productoConstantesFunciones.activarProductoCaracProducto));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosProducto.addColumn(tableColumn);
			}

			if(this.isTienePermisosServicioCliente && this.productoConstantesFunciones.mostrarServicioClienteProducto && !ProductoConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Servicio Clientes");
				tableColumn.setHeaderValue("Servicio Clientes");
				tableColumn.setCellRenderer(new ServicioClienteTableCell(productoConstantesFunciones.resaltarServicioClienteProducto,this,this.productoConstantesFunciones.activarServicioClienteProducto));
				tableColumn.setCellEditor(new ServicioClienteTableCell(productoConstantesFunciones.resaltarServicioClienteProducto,this,this.productoConstantesFunciones.activarServicioClienteProducto));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosProducto.addColumn(tableColumn);
			}

			if(this.isTienePermisosProductoPromocion && this.productoConstantesFunciones.mostrarProductoPromocionProducto && !ProductoConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Promocions");
				tableColumn.setHeaderValue("Promocions");
				tableColumn.setCellRenderer(new ProductoPromocionTableCell(productoConstantesFunciones.resaltarProductoPromocionProducto,this,this.productoConstantesFunciones.activarProductoPromocionProducto));
				tableColumn.setCellEditor(new ProductoPromocionTableCell(productoConstantesFunciones.resaltarProductoPromocionProducto,this,this.productoConstantesFunciones.activarProductoPromocionProducto));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosProducto.addColumn(tableColumn);
			}

			if(this.isTienePermisosProductoEspeci && this.productoConstantesFunciones.mostrarProductoEspeciProducto && !ProductoConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Especificacions");
				tableColumn.setHeaderValue("Especificacions");
				tableColumn.setCellRenderer(new ProductoEspeciTableCell(productoConstantesFunciones.resaltarProductoEspeciProducto,this,this.productoConstantesFunciones.activarProductoEspeciProducto));
				tableColumn.setCellEditor(new ProductoEspeciTableCell(productoConstantesFunciones.resaltarProductoEspeciProducto,this,this.productoConstantesFunciones.activarProductoEspeciProducto));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosProducto.addColumn(tableColumn);
			}

			if(this.isTienePermisosProductoReempla && this.productoConstantesFunciones.mostrarProductoReemplaProducto && !ProductoConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Reemplazos");
				tableColumn.setHeaderValue("Reemplazos");
				tableColumn.setCellRenderer(new ProductoReemplaTableCell(productoConstantesFunciones.resaltarProductoReemplaProducto,this,this.productoConstantesFunciones.activarProductoReemplaProducto));
				tableColumn.setCellEditor(new ProductoReemplaTableCell(productoConstantesFunciones.resaltarProductoReemplaProducto,this,this.productoConstantesFunciones.activarProductoReemplaProducto));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosProducto.addColumn(tableColumn);
			}

			if(this.isTienePermisosProductoEstadistica && this.productoConstantesFunciones.mostrarProductoEstadisticaProducto && !ProductoConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Estadisticas");
				tableColumn.setHeaderValue("Estadisticas");
				tableColumn.setCellRenderer(new ProductoEstadisticaTableCell(productoConstantesFunciones.resaltarProductoEstadisticaProducto,this,this.productoConstantesFunciones.activarProductoEstadisticaProducto));
				tableColumn.setCellEditor(new ProductoEstadisticaTableCell(productoConstantesFunciones.resaltarProductoEstadisticaProducto,this,this.productoConstantesFunciones.activarProductoEstadisticaProducto));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosProducto.addColumn(tableColumn);
			}

			if(this.isTienePermisosPoliticaFactu && this.productoConstantesFunciones.mostrarPoliticaFactuProducto && !ProductoConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Politica Factus");
				tableColumn.setHeaderValue("Politica Factus");
				tableColumn.setCellRenderer(new PoliticaFactuTableCell(productoConstantesFunciones.resaltarPoliticaFactuProducto,this,this.productoConstantesFunciones.activarPoliticaFactuProducto));
				tableColumn.setCellEditor(new PoliticaFactuTableCell(productoConstantesFunciones.resaltarPoliticaFactuProducto,this,this.productoConstantesFunciones.activarPoliticaFactuProducto));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosProducto.addColumn(tableColumn);
			}

			if(this.isTienePermisosProductoCuentaContable && this.productoConstantesFunciones.mostrarProductoCuentaContableProducto && !ProductoConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Producto Cuenta Contables");
				tableColumn.setHeaderValue("Producto Cuenta Contables");
				tableColumn.setCellRenderer(new ProductoCuentaContableTableCell(productoConstantesFunciones.resaltarProductoCuentaContableProducto,this,this.productoConstantesFunciones.activarProductoCuentaContableProducto));
				tableColumn.setCellEditor(new ProductoCuentaContableTableCell(productoConstantesFunciones.resaltarProductoCuentaContableProducto,this,this.productoConstantesFunciones.activarProductoCuentaContableProducto));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosProducto.addColumn(tableColumn);
			}

			if(this.isTienePermisosBodegaProducto && this.productoConstantesFunciones.mostrarBodegaProductoProducto && !ProductoConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Bodega Productos");
				tableColumn.setHeaderValue("Bodega Productos");
				tableColumn.setCellRenderer(new BodegaProductoTableCell(productoConstantesFunciones.resaltarBodegaProductoProducto,this,this.productoConstantesFunciones.activarBodegaProductoProducto));
				tableColumn.setCellEditor(new BodegaProductoTableCell(productoConstantesFunciones.resaltarBodegaProductoProducto,this,this.productoConstantesFunciones.activarBodegaProductoProducto));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosProducto.addColumn(tableColumn);
			}

			if(this.isTienePermisosPresupuestoProducto && this.productoConstantesFunciones.mostrarPresupuestoProductoProducto && !ProductoConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Presupuesto Productos");
				tableColumn.setHeaderValue("Presupuesto Productos");
				tableColumn.setCellRenderer(new PresupuestoProductoTableCell(productoConstantesFunciones.resaltarPresupuestoProductoProducto,this,this.productoConstantesFunciones.activarPresupuestoProductoProducto));
				tableColumn.setCellEditor(new PresupuestoProductoTableCell(productoConstantesFunciones.resaltarPresupuestoProductoProducto,this,this.productoConstantesFunciones.activarPresupuestoProductoProducto));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosProducto.addColumn(tableColumn);
			}

			if(this.isTienePermisosSaldoMesProducto && this.productoConstantesFunciones.mostrarSaldoMesProductoProducto && !ProductoConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Saldo Mes Productos");
				tableColumn.setHeaderValue("Saldo Mes Productos");
				tableColumn.setCellRenderer(new SaldoMesProductoTableCell(productoConstantesFunciones.resaltarSaldoMesProductoProducto,this,this.productoConstantesFunciones.activarSaldoMesProductoProducto));
				tableColumn.setCellEditor(new SaldoMesProductoTableCell(productoConstantesFunciones.resaltarSaldoMesProductoProducto,this,this.productoConstantesFunciones.activarSaldoMesProductoProducto));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosProducto.addColumn(tableColumn);
			}
		}
		
		if(true) {
			String sLabelColumnAccion="Editar";
			String sLabelColumnAccionEli="Eli";
			
			if(this.esParaBusquedaForeignKey)  {
				sLabelColumnAccion="Seleccionar";
				
				//LO MISMO QUE ELSE
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.productoSessionBean.getEsGuardarRelacionado(),iSizeTabla));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.productoSessionBean.getEsGuardarRelacionado(),iSizeTabla));
	
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosProducto.addColumn(tableColumn);
			
			} else {				
				
				//LO MISMO QUE IF
				
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.productoSessionBean.getEsGuardarRelacionado(),iSizeTabla));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.productoSessionBean.getEsGuardarRelacionado(),iSizeTabla));
		
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosProducto.addColumn(tableColumn);				
					
				//ELIMINAR
				if(this.isPermisoEliminarProducto && this.isPermisoGuardarCambiosProducto) {
					tableColumn= new TableColumn();
					tableColumn.setIdentifier(Constantes2.S_ELI);
					tableColumn.setHeaderValue(sLabelColumnAccionEli);
					tableColumn.setCellRenderer(new IdTableCell(this,false,true,this.productoSessionBean.getEsGuardarRelacionado(),iSizeTabla));
					tableColumn.setCellEditor(new IdTableCell(this,false,true,this.productoSessionBean.getEsGuardarRelacionado(),iSizeTabla));
			
					tableColumn.setPreferredWidth(65); 	 
					tableColumn.setWidth(65); 	 
					tableColumn.setMinWidth(65); 
					tableColumn.setMaxWidth(65);
					
					this.iWidthTableDefinicion+=65;
						
					this.jTableDatosProducto.addColumn(tableColumn);
				}
			}			
						
			if(this.conMaximoRelaciones && this.productoSessionBean.getConGuardarRelaciones()) {
				if(this.conFuncionalidadRelaciones) {
					tableColumn= new TableColumn();
					tableColumn.setIdentifier("Editar Rel");
					tableColumn.setHeaderValue("Editar Rel");
					tableColumn.setCellRenderer(new IdTableCell(this,true,false,iSizeTabla));
					tableColumn.setCellEditor(new IdTableCell(this,true,false,iSizeTabla));
		
					tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
					tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
					tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
					tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
					
					this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
					this.jTableDatosProducto.addColumn(tableColumn);
				}
			}
			
			/*
			tableColumn= new TableColumn();
			tableColumn.setIdentifier(Constantes2.S_SELECCIONAR);
			tableColumn.setHeaderValue(Constantes2.S_SELECCIONAR);
			tableColumn.setCellRenderer(new IdSeleccionarTableCell(this));
			tableColumn.setCellEditor(new IdSeleccionarTableCell(this));
			
			tableColumn.setPreferredWidth(30); 	 
			tableColumn.setWidth(30); 	 
			tableColumn.setMinWidth(30); 
			
			this.iWidthTableDefinicion+=30;
			
			this.jTableDatosProducto.addColumn(tableColumn);
			*/
		}
		
		Integer iUltimaColumna=0;//1
		Integer iNuevaPosicionColumna=0;
		
		
		//PERMITE ELIMINAR SIMPLE
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarProducto && this.isPermisoGuardarCambiosProducto) {
				iUltimaColumna++;
			}	
		}
		
		//PERMITE EDITAR SIMPLE
		iUltimaColumna++;	
		
				
		if(this.conFuncionalidadRelaciones) {
			if(this.conMaximoRelaciones && this.productoSessionBean.getConGuardarRelaciones()) {			
				//PERMITE EDITAR RELACIONES
				iUltimaColumna++;//2
			}
		}
		
		//MOVIA SELECCIONAR
		//iUltimaColumna++;
		
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarProducto && this.isPermisoGuardarCambiosProducto) {
				//REUBICA ELIMINAR SIMPLE
				jTableDatosProducto.moveColumn(this.jTableDatosProducto.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3
					
				iUltimaColumna--;
			}
		}
		//REUBICA EDITAR SIMPLE
		jTableDatosProducto.moveColumn(this.jTableDatosProducto.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3				
		
		
		if(this.conFuncionalidadRelaciones) {
			if(this.conMaximoRelaciones && this.productoSessionBean.getConGuardarRelaciones()) {	
				if(iUltimaColumna>1) {
					iUltimaColumna--;
				}
				
				//iNuevaPosicionColumna++;
				
				//REUBICA EDITAR RELACIONES
				jTableDatosProducto.moveColumn(this.jTableDatosProducto.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1
			}
		}
		
		
		//REUBICABA SELECCIONAR
		/*
		if(iUltimaColumna>1) {
			iUltimaColumna--;
		}
		
		//iNuevaPosicionColumna++;
			
		//REUBICA SELECCIONAR FILA CHECK
		jTableDatosProducto.moveColumn(this.jTableDatosProducto.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1		
		*/
		
		//DEFINEN HEADERS
		final TableCellRenderer tableHeaderDefaultCellRenderer = this.jTableDatosProducto.getTableHeader().getDefaultRenderer();
		
		this.jTableDatosProducto.getTableHeader().setDefaultRenderer(new TableCellRendererHeader(this.jTableDatosProducto,tableHeaderDefaultCellRenderer));
	    
		TableColumn column=null;
		
		if(!ProductoJInternalFrame.ISBINDING_MANUAL_TABLA) {
			for(int i = 0; i < this.jTableDatosProducto.getColumnModel().getColumnCount(); i++) { 
				column = this.jTableDatosProducto.getColumnModel().getColumn(i); 
				
				if(column.getIdentifier()!=null) {
					//SI SE UTILIZA UN HEADER ES GENERICO
					//column.setHeaderRenderer(new HeaderRenderer(column.getIdentifier().toString()));
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_ELI)) {
					continue;
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_SELECCIONAR)) {
					if(!ProductoJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(50); 	 
						column.setWidth(50); 	 
						column.setMinWidth(50); 	
						column.setMaxWidth(50); 
						
						this.iWidthTableDefinicion+=50;
					}
					
				} else {
					if(!ProductoJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						column.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						
						this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
					}
				}
			}
		}
		
		this.jTableDatosProducto.setSelectionBackground(FuncionesSwing.getColorSelectedBackground());
		this.jTableDatosProducto.setSelectionForeground(FuncionesSwing.getColorSelectedForeground());
		
		/*
		this.jTableDatosProducto.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
			private static final long serialVersionUID = 1L;
			
		    @Override
		    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
		        final Component component= super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
		        //POR DEFECTO ES MEJOR, SE PIERDE DATOS AL SELECCIONAR BLANCO LETRAS BLANCAS
				component.setBackground(row % 2 == 0 ? FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR) : Funciones2.getColorFilaTabla2()); //FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR)
				component.setForeground(Funciones2.getColorTextoFilaTabla1());
				
				try {
		        	int iSize=-999;
		        	
		        	if(conTotales) {
						//FILA TOTALES OTRO COLOR, SI TABLA NO ES UNO A UNO
			        	if(Constantes.ISUSAEJBLOGICLAYER) {
							iSize=productoLogic.getProductos().size()-1;
								
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							iSize=productos.size()-1;
						}
						
						if(iSize==row) {
							component.setBackground(Funciones2.getColorFilaTablaTotales());
						}
		        	}
					
					//POR EFICIENCIA NO UTILIZAR					
					//if (component instanceof JComponent) {
		            //    JComponent jcomponent = (JComponent) component;		                 		                
		        	//}				
					
				} catch (Exception e) {
					e.printStackTrace();
				}
				
		        return component;
		    }
		});
		*/
		
		//ESTA EN LA DEFINICION DE LA TABLA
		//this.jTableDatosProducto.setRowHeight(Constantes.ISWING_ALTO_FILA_TABLA);
		
		/*
		column=this.jTableDatosProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSistema,Constantes2.S_SELECCIONAR));
		
		if(column!=null) {
			column.setPreferredWidth(25); 	 
			column.setWidth(25); 	 
			column.setMinWidth(25); 	
		}
		*/
			
			//CopyTableToTableTotal();
		} else {
			
			this.actualizarVisualTableDatosProducto();
			
		}
	}
	
	/*
	//COPY_TABLES
	/* FALTARIA RESOLVER:
	   1 SOLO SCROLL PARA 2 TABLAS
	   COPIA EXACTA DE COLUMNAS DE UNA TABLA A OTRA, SI SE MODIFICA TAMANIO TAMBIEN LA OTRA
	*/
	
	public void jButtonIdActionPerformed(ActionEvent evt,int rowIndex,Boolean esRelaciones,Boolean esEliminar) { 
		try {
			if(!esEliminar) {
				this.estaModoSeleccionar=true;
				
				//this.isEsNuevoProducto=false;
					
				ProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.producto,new Object(),this.productoParameterGeneral,this.productoReturnGeneral);
			
				if(this.productoSessionBean.getConGuardarRelaciones()) {
					this.dStart=(double)System.currentTimeMillis();
				}
				
				if(this.jInternalFrameDetalleFormProducto==null) {
					this.inicializarFormDetalle();
				}
				
				this.inicializarInvalidValues();
				
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosProducto.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosProducto.getSelectedRow();	       
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//PUEDE SER PARA DUPLICADO O NUEVO TABLA
				
				if(this.producto.getsType().equals("DUPLICADO")
				   || this.producto.getsType().equals("NUEVO_GUARDAR_CAMBIOS")) {
					
					this.isEsNuevoProducto=true;
				
				} else {
					this.isEsNuevoProducto=false;	
				}
				
				//CONTROL VERSION ANTERIOR
				/*
				if(!this.productoSessionBean.getEsGuardarRelacionado()) {
					if(this.producto.getId()>=0 && !this.producto.getIsNew()) {						
						this.isEsNuevoProducto=false;
						
					} else {
						this.isEsNuevoProducto=true;
					}
					
				} else {
					//CONTROLAR PARA RELACIONADO
				}
				*/
				
				//ESTABLECE SI ES RELACIONADO O NO 
				this.habilitarDeshabilitarTipoMantenimientoProducto(esRelaciones);						
				
				this.seleccionarProducto(evt,null,rowIndex);
				
				//SELECCIONA ACTUAL PERO AUN NO SE HA INGRESADO AL SISTEMA
				//SE DESHABILITA POR GUARDAR CAMBIOS
				/*
				if(this.producto.getId()<0) {
					this.isEsNuevoProducto=true;
				}
				*/
				
				if(!this.esParaBusquedaForeignKey) {
					this.modificarProducto(evt,rowIndex,esRelaciones);
				} else {
					this.seleccionarProducto(evt,rowIndex);
				}	
				
				if(this.productoSessionBean.getConGuardarRelaciones()) {
					this.dEnd=(double)System.currentTimeMillis();					
					this.dDif=this.dEnd - this.dStart;
					
					if(Constantes.ISDEVELOPING) {
						System.out.println("Tiempo(ms) Seleccion Producto: " + this.dDif); 
					}
				}								
				
				ProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.producto,new Object(),this.productoParameterGeneral,this.productoReturnGeneral);
				
			} else {
				this.estaModoEliminarGuardarCambios=true;
				
				this.seleccionarProducto(evt,null,rowIndex);
				
				if(this.permiteMantenimiento(this.producto)) {
					if(this.producto.getId()>0) {
						this.producto.setIsDeleted(true);
						
						this.productosEliminados.add(this.producto);
					}
					
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.productoLogic.getProductos().remove(this.producto);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.productos.remove(this.producto);				
					}
					
					
					((ProductoModel) this.jTableDatosProducto.getModel()).fireTableRowsDeleted(rowIndex,rowIndex);
					
					this.actualizarFilaTotales();
					
					this.inicializarActualizarBindingTablaProducto(false);					
				}								
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException2(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoSeleccionar=false;				
			this.estaModoEliminarGuardarCambios=false;
		}
	}
	
	
	public void seleccionarProducto(ActionEvent evt,javax.swing.event.ListSelectionEvent evt2,int rowIndex) throws Exception { 
		try {
			//SI PUEDE SER NUEVO Y SELECCIONAR (PARA DUPLICAR Y NUEVO TABLA)
			//if(!this.isEsNuevoProducto) {
			
			if(this.jInternalFrameDetalleFormProducto==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosProducto.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosProducto.getSelectedRow();	       
				}
				
				//CUANDO SE RECARGA TABLA TAMBIEN SE SELECCIONA PERO CON -1 POR LO QUE SE NECESITA VALIDAR ANTES
				if(intSelectedRow<0) {
					return;
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
				}
				
				if(ProductoJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesObjetoActualToFormularioProducto(this.producto);
				}
				
				//ARCHITECTURE
				try {
					

					//Empresa
					if(!this.productoConstantesFunciones.cargarid_empresaProducto || this.productoConstantesFunciones.event_dependid_empresaProducto) {
						//this.cargarCombosEmpresasForeignKeyLista(" where id="+this.producto.getid_empresa());
									//this.inicializarActualizarBindingProducto(false,false);
						this.empresasForeignKey=new ArrayList<Empresa>();

						if(producto.getEmpresa()!=null) {
							this.empresasForeignKey.add(producto.getEmpresa());
						}

						this.addItemDefectoCombosForeignKeyEmpresa();
						this.cargarCombosFrameEmpresasForeignKey("Todos");
					}
					this.setActualEmpresaForeignKey(this.producto.getid_empresa(),false,"Formulario");

					//Sucursal
					if(!this.productoConstantesFunciones.cargarid_sucursalProducto || this.productoConstantesFunciones.event_dependid_sucursalProducto) {
						//this.cargarCombosSucursalsForeignKeyLista(" where id="+this.producto.getid_sucursal());
									//this.inicializarActualizarBindingProducto(false,false);
						this.sucursalsForeignKey=new ArrayList<Sucursal>();

						if(producto.getSucursal()!=null) {
							this.sucursalsForeignKey.add(producto.getSucursal());
						}

						this.addItemDefectoCombosForeignKeySucursal();
						this.cargarCombosFrameSucursalsForeignKey("Todos");
					}
					this.setActualSucursalForeignKey(this.producto.getid_sucursal(),false,"Formulario");

					//Linea
					if(!this.productoConstantesFunciones.cargarid_lineaProducto || this.productoConstantesFunciones.event_dependid_lineaProducto) {
						//this.cargarCombosLineasForeignKeyLista(" where id="+this.producto.getid_linea());
									//this.inicializarActualizarBindingProducto(false,false);
						this.lineasForeignKey=new ArrayList<Linea>();

						if(producto.getLinea()!=null) {
							this.lineasForeignKey.add(producto.getLinea());
						}

						this.addItemDefectoCombosForeignKeyLinea();
						this.cargarCombosFrameLineasForeignKey("Todos");
					}
					this.setActualLineaForeignKey(this.producto.getid_linea(),false,"Formulario");

					//LineaGrupo
					if(!this.productoConstantesFunciones.cargarid_linea_grupoProducto || this.productoConstantesFunciones.event_dependid_linea_grupoProducto) {
						//this.cargarCombosLineaGruposForeignKeyLista(" where id="+this.producto.getid_linea_grupo());
									//this.inicializarActualizarBindingProducto(false,false);
						this.lineagruposForeignKey=new ArrayList<Linea>();

						if(producto.getLineaGrupo()!=null) {
							this.lineagruposForeignKey.add(producto.getLineaGrupo());
						}

						this.addItemDefectoCombosForeignKeyLineaGrupo();
						this.cargarCombosFrameLineaGruposForeignKey("Todos");
					}
					this.setActualLineaGrupoForeignKey(this.producto.getid_linea_grupo(),false,"Formulario");

					//LineaCategoria
					if(!this.productoConstantesFunciones.cargarid_linea_categoriaProducto || this.productoConstantesFunciones.event_dependid_linea_categoriaProducto) {
						//this.cargarCombosLineaCategoriasForeignKeyLista(" where id="+this.producto.getid_linea_categoria());
									//this.inicializarActualizarBindingProducto(false,false);
						this.lineacategoriasForeignKey=new ArrayList<Linea>();

						if(producto.getLineaCategoria()!=null) {
							this.lineacategoriasForeignKey.add(producto.getLineaCategoria());
						}

						this.addItemDefectoCombosForeignKeyLineaCategoria();
						this.cargarCombosFrameLineaCategoriasForeignKey("Todos");
					}
					this.setActualLineaCategoriaForeignKey(this.producto.getid_linea_categoria(),false,"Formulario");

					//LineaMarca
					if(!this.productoConstantesFunciones.cargarid_linea_marcaProducto || this.productoConstantesFunciones.event_dependid_linea_marcaProducto) {
						//this.cargarCombosLineaMarcasForeignKeyLista(" where id="+this.producto.getid_linea_marca());
									//this.inicializarActualizarBindingProducto(false,false);
						this.lineamarcasForeignKey=new ArrayList<Linea>();

						if(producto.getLineaMarca()!=null) {
							this.lineamarcasForeignKey.add(producto.getLineaMarca());
						}

						this.addItemDefectoCombosForeignKeyLineaMarca();
						this.cargarCombosFrameLineaMarcasForeignKey("Todos");
					}
					this.setActualLineaMarcaForeignKey(this.producto.getid_linea_marca(),false,"Formulario");

					//TipoProductoServicio
					if(!this.productoConstantesFunciones.cargarid_tipo_producto_servicioProducto || this.productoConstantesFunciones.event_dependid_tipo_producto_servicioProducto) {
						//this.cargarCombosTipoProductoServiciosForeignKeyLista(" where id="+this.producto.getid_tipo_producto_servicio());
									//this.inicializarActualizarBindingProducto(false,false);
						this.tipoproductoserviciosForeignKey=new ArrayList<TipoProductoServicio>();

						if(producto.getTipoProductoServicio()!=null) {
							this.tipoproductoserviciosForeignKey.add(producto.getTipoProductoServicio());
						}

						this.addItemDefectoCombosForeignKeyTipoProductoServicio();
						this.cargarCombosFrameTipoProductoServiciosForeignKey("Todos");
					}
					this.setActualTipoProductoServicioForeignKey(this.producto.getid_tipo_producto_servicio(),false,"Formulario");

					//TipoProductoServicioInven
					if(!this.productoConstantesFunciones.cargarid_tipo_producto_servicio_invenProducto || this.productoConstantesFunciones.event_dependid_tipo_producto_servicio_invenProducto) {
						//this.cargarCombosTipoProductoServicioInvensForeignKeyLista(" where id="+this.producto.getid_tipo_producto_servicio_inven());
									//this.inicializarActualizarBindingProducto(false,false);
						this.tipoproductoservicioinvensForeignKey=new ArrayList<TipoProductoServicioInven>();

						if(producto.getTipoProductoServicioInven()!=null) {
							this.tipoproductoservicioinvensForeignKey.add(producto.getTipoProductoServicioInven());
						}

						this.addItemDefectoCombosForeignKeyTipoProductoServicioInven();
						this.cargarCombosFrameTipoProductoServicioInvensForeignKey("Todos");
					}
					this.setActualTipoProductoServicioInvenForeignKey(this.producto.getid_tipo_producto_servicio_inven(),false,"Formulario");

					//TipoCosteo
					if(!this.productoConstantesFunciones.cargarid_tipo_costeoProducto || this.productoConstantesFunciones.event_dependid_tipo_costeoProducto) {
						//this.cargarCombosTipoCosteosForeignKeyLista(" where id="+this.producto.getid_tipo_costeo());
									//this.inicializarActualizarBindingProducto(false,false);
						this.tipocosteosForeignKey=new ArrayList<TipoCosteo>();

						if(producto.getTipoCosteo()!=null) {
							this.tipocosteosForeignKey.add(producto.getTipoCosteo());
						}

						this.addItemDefectoCombosForeignKeyTipoCosteo();
						this.cargarCombosFrameTipoCosteosForeignKey("Todos");
					}
					this.setActualTipoCosteoForeignKey(this.producto.getid_tipo_costeo(),false,"Formulario");

					//Unidad
					if(!this.productoConstantesFunciones.cargarid_unidadProducto || this.productoConstantesFunciones.event_dependid_unidadProducto) {
						//this.cargarCombosUnidadsForeignKeyLista(" where id="+this.producto.getid_unidad());
									//this.inicializarActualizarBindingProducto(false,false);
						this.unidadsForeignKey=new ArrayList<Unidad>();

						if(producto.getUnidad()!=null) {
							this.unidadsForeignKey.add(producto.getUnidad());
						}

						this.addItemDefectoCombosForeignKeyUnidad();
						this.cargarCombosFrameUnidadsForeignKey("Todos");
					}
					this.setActualUnidadForeignKey(this.producto.getid_unidad(),false,"Formulario");

					//UnidadPeso
					if(!this.productoConstantesFunciones.cargarid_unidad_pesoProducto || this.productoConstantesFunciones.event_dependid_unidad_pesoProducto) {
						//this.cargarCombosUnidadPesosForeignKeyLista(" where id="+this.producto.getid_unidad_peso());
									//this.inicializarActualizarBindingProducto(false,false);
						this.unidadpesosForeignKey=new ArrayList<Unidad>();

						if(producto.getUnidadPeso()!=null) {
							this.unidadpesosForeignKey.add(producto.getUnidadPeso());
						}

						this.addItemDefectoCombosForeignKeyUnidadPeso();
						this.cargarCombosFrameUnidadPesosForeignKey("Todos");
					}
					this.setActualUnidadPesoForeignKey(this.producto.getid_unidad_peso(),false,"Formulario");

					//Arancel
					if(!this.productoConstantesFunciones.cargarid_arancelProducto || this.productoConstantesFunciones.event_dependid_arancelProducto) {
						//this.cargarCombosArancelsForeignKeyLista(" where id="+this.producto.getid_arancel());
									//this.inicializarActualizarBindingProducto(false,false);
						this.arancelsForeignKey=new ArrayList<Arancel>();

						if(producto.getArancel()!=null) {
							this.arancelsForeignKey.add(producto.getArancel());
						}

						this.addItemDefectoCombosForeignKeyArancel();
						this.cargarCombosFrameArancelsForeignKey("Todos");
					}
					this.setActualArancelForeignKey(this.producto.getid_arancel(),false,"Formulario");

					//Cliente
					if(!this.productoConstantesFunciones.cargarid_clienteProducto || this.productoConstantesFunciones.event_dependid_clienteProducto) {
						//this.cargarCombosClientesForeignKeyLista(" where id="+this.producto.getid_cliente());
									//this.inicializarActualizarBindingProducto(false,false);
						this.clientesForeignKey=new ArrayList<Cliente>();

						if(producto.getCliente()!=null) {
							this.clientesForeignKey.add(producto.getCliente());
						}

						this.addItemDefectoCombosForeignKeyCliente();
						this.cargarCombosFrameClientesForeignKey("Todos");
					}
					this.setActualClienteForeignKey(this.producto.getid_cliente(),false,"Formulario");

					//ClienteProveedorDefecto
					if(!this.productoConstantesFunciones.cargarid_cliente_proveedor_defectoProducto || this.productoConstantesFunciones.event_dependid_cliente_proveedor_defectoProducto) {
						//this.cargarCombosClienteProveedorDefectosForeignKeyLista(" where id="+this.producto.getid_cliente_proveedor_defecto());
									//this.inicializarActualizarBindingProducto(false,false);
						this.clienteproveedordefectosForeignKey=new ArrayList<Cliente>();

						if(producto.getClienteProveedorDefecto()!=null) {
							this.clienteproveedordefectosForeignKey.add(producto.getClienteProveedorDefecto());
						}

						this.addItemDefectoCombosForeignKeyClienteProveedorDefecto();
						this.cargarCombosFrameClienteProveedorDefectosForeignKey("Todos");
					}
					this.setActualClienteProveedorDefectoForeignKey(this.producto.getid_cliente_proveedor_defecto(),false,"Formulario");

					//TipoProducto
					if(!this.productoConstantesFunciones.cargarid_tipo_productoProducto || this.productoConstantesFunciones.event_dependid_tipo_productoProducto) {
						//this.cargarCombosTipoProductosForeignKeyLista(" where id="+this.producto.getid_tipo_producto());
									//this.inicializarActualizarBindingProducto(false,false);
						this.tipoproductosForeignKey=new ArrayList<TipoProducto>();

						if(producto.getTipoProducto()!=null) {
							this.tipoproductosForeignKey.add(producto.getTipoProducto());
						}

						this.addItemDefectoCombosForeignKeyTipoProducto();
						this.cargarCombosFrameTipoProductosForeignKey("Todos");
					}
					this.setActualTipoProductoForeignKey(this.producto.getid_tipo_producto(),false,"Formulario");

					//ColorProducto
					if(!this.productoConstantesFunciones.cargarid_color_productoProducto || this.productoConstantesFunciones.event_dependid_color_productoProducto) {
						//this.cargarCombosColorProductosForeignKeyLista(" where id="+this.producto.getid_color_producto());
									//this.inicializarActualizarBindingProducto(false,false);
						this.colorproductosForeignKey=new ArrayList<ColorProducto>();

						if(producto.getColorProducto()!=null) {
							this.colorproductosForeignKey.add(producto.getColorProducto());
						}

						this.addItemDefectoCombosForeignKeyColorProducto();
						this.cargarCombosFrameColorProductosForeignKey("Todos");
					}
					this.setActualColorProductoForeignKey(this.producto.getid_color_producto(),false,"Formulario");

					//ClaseProducto
					if(!this.productoConstantesFunciones.cargarid_clase_productoProducto || this.productoConstantesFunciones.event_dependid_clase_productoProducto) {
						//this.cargarCombosClaseProductosForeignKeyLista(" where id="+this.producto.getid_clase_producto());
									//this.inicializarActualizarBindingProducto(false,false);
						this.claseproductosForeignKey=new ArrayList<ClaseProducto>();

						if(producto.getClaseProducto()!=null) {
							this.claseproductosForeignKey.add(producto.getClaseProducto());
						}

						this.addItemDefectoCombosForeignKeyClaseProducto();
						this.cargarCombosFrameClaseProductosForeignKey("Todos");
					}
					this.setActualClaseProductoForeignKey(this.producto.getid_clase_producto(),false,"Formulario");

					//EfectoProducto
					if(!this.productoConstantesFunciones.cargarid_efecto_productoProducto || this.productoConstantesFunciones.event_dependid_efecto_productoProducto) {
						//this.cargarCombosEfectoProductosForeignKeyLista(" where id="+this.producto.getid_efecto_producto());
									//this.inicializarActualizarBindingProducto(false,false);
						this.efectoproductosForeignKey=new ArrayList<EfectoProducto>();

						if(producto.getEfectoProducto()!=null) {
							this.efectoproductosForeignKey.add(producto.getEfectoProducto());
						}

						this.addItemDefectoCombosForeignKeyEfectoProducto();
						this.cargarCombosFrameEfectoProductosForeignKey("Todos");
					}
					this.setActualEfectoProductoForeignKey(this.producto.getid_efecto_producto(),false,"Formulario");

					//MarcaProducto
					if(!this.productoConstantesFunciones.cargarid_marca_productoProducto || this.productoConstantesFunciones.event_dependid_marca_productoProducto) {
						//this.cargarCombosMarcaProductosForeignKeyLista(" where id="+this.producto.getid_marca_producto());
									//this.inicializarActualizarBindingProducto(false,false);
						this.marcaproductosForeignKey=new ArrayList<MarcaProducto>();

						if(producto.getMarcaProducto()!=null) {
							this.marcaproductosForeignKey.add(producto.getMarcaProducto());
						}

						this.addItemDefectoCombosForeignKeyMarcaProducto();
						this.cargarCombosFrameMarcaProductosForeignKey("Todos");
					}
					this.setActualMarcaProductoForeignKey(this.producto.getid_marca_producto(),false,"Formulario");

					//ModeloProducto
					if(!this.productoConstantesFunciones.cargarid_modelo_productoProducto || this.productoConstantesFunciones.event_dependid_modelo_productoProducto) {
						//this.cargarCombosModeloProductosForeignKeyLista(" where id="+this.producto.getid_modelo_producto());
									//this.inicializarActualizarBindingProducto(false,false);
						this.modeloproductosForeignKey=new ArrayList<ModeloProducto>();

						if(producto.getModeloProducto()!=null) {
							this.modeloproductosForeignKey.add(producto.getModeloProducto());
						}

						this.addItemDefectoCombosForeignKeyModeloProducto();
						this.cargarCombosFrameModeloProductosForeignKey("Todos");
					}
					this.setActualModeloProductoForeignKey(this.producto.getid_modelo_producto(),false,"Formulario");

					//MaterialProducto
					if(!this.productoConstantesFunciones.cargarid_material_productoProducto || this.productoConstantesFunciones.event_dependid_material_productoProducto) {
						//this.cargarCombosMaterialProductosForeignKeyLista(" where id="+this.producto.getid_material_producto());
									//this.inicializarActualizarBindingProducto(false,false);
						this.materialproductosForeignKey=new ArrayList<MaterialProducto>();

						if(producto.getMaterialProducto()!=null) {
							this.materialproductosForeignKey.add(producto.getMaterialProducto());
						}

						this.addItemDefectoCombosForeignKeyMaterialProducto();
						this.cargarCombosFrameMaterialProductosForeignKey("Todos");
					}
					this.setActualMaterialProductoForeignKey(this.producto.getid_material_producto(),false,"Formulario");

					//SegmentoProducto
					if(!this.productoConstantesFunciones.cargarid_segmento_productoProducto || this.productoConstantesFunciones.event_dependid_segmento_productoProducto) {
						//this.cargarCombosSegmentoProductosForeignKeyLista(" where id="+this.producto.getid_segmento_producto());
									//this.inicializarActualizarBindingProducto(false,false);
						this.segmentoproductosForeignKey=new ArrayList<SegmentoProducto>();

						if(producto.getSegmentoProducto()!=null) {
							this.segmentoproductosForeignKey.add(producto.getSegmentoProducto());
						}

						this.addItemDefectoCombosForeignKeySegmentoProducto();
						this.cargarCombosFrameSegmentoProductosForeignKey("Todos");
					}
					this.setActualSegmentoProductoForeignKey(this.producto.getid_segmento_producto(),false,"Formulario");

					//TallaProducto
					if(!this.productoConstantesFunciones.cargarid_talla_productoProducto || this.productoConstantesFunciones.event_dependid_talla_productoProducto) {
						//this.cargarCombosTallaProductosForeignKeyLista(" where id="+this.producto.getid_talla_producto());
									//this.inicializarActualizarBindingProducto(false,false);
						this.tallaproductosForeignKey=new ArrayList<TallaProducto>();

						if(producto.getTallaProducto()!=null) {
							this.tallaproductosForeignKey.add(producto.getTallaProducto());
						}

						this.addItemDefectoCombosForeignKeyTallaProducto();
						this.cargarCombosFrameTallaProductosForeignKey("Todos");
					}
					this.setActualTallaProductoForeignKey(this.producto.getid_talla_producto(),false,"Formulario");
				} catch(Exception e) {
					throw e;
				}
				
				this.actualizarEstadoCeldasBotonesProducto("s", this.isGuardarCambiosEnLote, this.isEsMantenimientoRelacionado);
				
				//NO FUNCIONA BINDING PERO SE MANTIENE
				this.inicializarActualizarBindingBotonesProducto(false) ;
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualProducto() ;
			//}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesObjetoActualToFormularioTodoProducto(Producto producto) throws Exception { 
		this.setVariablesObjetoActualToFormularioTodoProducto(producto,false,"NINGUNO");
	}
	
	public void setVariablesObjetoActualToFormularioTodoProducto(Producto producto,Boolean conCargarListasDesdeObjetoActual,String sTipoEvento) throws Exception { 
		this.setVariablesObjetoActualToFormularioProducto(producto);
		
		if(conCargarListasDesdeObjetoActual) {
			this.setVariablesObjetoActualToListasForeignKeyProducto(producto,sTipoEvento);
		}
		
		this.setVariablesObjetoActualToFormularioForeignKeyProducto(producto);
	}
	
	public void setVariablesObjetoActualToFormularioProducto(Producto producto) throws Exception { 
		try {			
			Image imageActual=null;
			ImageIcon imageIcon = null;
			
			if(this.jInternalFrameDetalleFormProducto==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			
			this.jInternalFrameDetalleFormProducto.jLabelidProducto.setText(producto.getId().toString());
			this.jInternalFrameDetalleFormProducto.jTextFieldcodigoProducto.setText(producto.getcodigo());
			this.jInternalFrameDetalleFormProducto.jTextAreanombreProducto.setText(producto.getnombre());
			this.jInternalFrameDetalleFormProducto.jTextAreanombre_extranjeroProducto.setText(producto.getnombre_extranjero());
			this.jInternalFrameDetalleFormProducto.jTextArearesumen_detalleProducto.setText(producto.getresumen_detalle());
			this.jInternalFrameDetalleFormProducto.jTextFieldcodigo_barraProducto.setText(producto.getcodigo_barra());
			this.jInternalFrameDetalleFormProducto.jCheckBoxesta_activoProducto.setSelected(producto.getesta_activo());
			this.jInternalFrameDetalleFormProducto.jTextAreadescripcionProducto.setText(producto.getdescripcion());
			this.jInternalFrameDetalleFormProducto.jTextFieldprecioProducto.setText(producto.getprecio().toString());
			this.jInternalFrameDetalleFormProducto.jTextFieldivaProducto.setText(producto.getiva().toString());
			this.jInternalFrameDetalleFormProducto.jTextFieldiva_valorProducto.setText(producto.getiva_valor().toString());
			this.jInternalFrameDetalleFormProducto.jTextFieldiceProducto.setText(producto.getice().toString());
			this.jInternalFrameDetalleFormProducto.jTextFieldice_valorProducto.setText(producto.getice_valor().toString());
			this.jInternalFrameDetalleFormProducto.jTextFielddescuentoProducto.setText(producto.getdescuento().toString());
			this.jInternalFrameDetalleFormProducto.jTextFielddescuento_valorProducto.setText(producto.getdescuento_valor().toString());
			this.jInternalFrameDetalleFormProducto.jTextFieldarancel_porcentajeProducto.setText(producto.getarancel_porcentaje().toString());
			this.jInternalFrameDetalleFormProducto.jTextFieldarancel_valorProducto.setText(producto.getarancel_valor().toString());
			this.jInternalFrameDetalleFormProducto.jTextFieldcomisionProducto.setText(producto.getcomision().toString());
			this.jInternalFrameDetalleFormProducto.jTextFieldcomision_valorProducto.setText(producto.getcomision_valor().toString());
			this.jInternalFrameDetalleFormProducto.jTextFielddias_produccionProducto.setText(producto.getdias_produccion().toString());
			this.jInternalFrameDetalleFormProducto.jCheckBoxcon_stock_negativoProducto.setSelected(producto.getcon_stock_negativo());
			this.jInternalFrameDetalleFormProducto.jCheckBoxcon_precio_minimoProducto.setSelected(producto.getcon_precio_minimo());
			this.jInternalFrameDetalleFormProducto.jCheckBoxcon_loteProducto.setSelected(producto.getcon_lote());
			this.jInternalFrameDetalleFormProducto.jCheckBoxcon_confirmacionProducto.setSelected(producto.getcon_confirmacion());
			this.jInternalFrameDetalleFormProducto.jCheckBoxcon_presupuestoProducto.setSelected(producto.getcon_presupuesto());
			this.jInternalFrameDetalleFormProducto.jCheckBoxcon_importacionProducto.setSelected(producto.getcon_importacion());
			this.jInternalFrameDetalleFormProducto.jCheckBoxcon_finalProducto.setSelected(producto.getcon_final());
			this.jInternalFrameDetalleFormProducto.jCheckBoxcon_consepProducto.setSelected(producto.getcon_consep());
			this.jInternalFrameDetalleFormProducto.jCheckBoxcon_serieProducto.setSelected(producto.getcon_serie());
			this.jInternalFrameDetalleFormProducto.jCheckBoxcon_balanzaProducto.setSelected(producto.getcon_balanza());
			this.jInternalFrameDetalleFormProducto.jTextFieldaltoProducto.setText(producto.getalto().toString());
			this.jInternalFrameDetalleFormProducto.jTextFieldanchoProducto.setText(producto.getancho().toString());
			this.jInternalFrameDetalleFormProducto.jTextFieldlargoProducto.setText(producto.getlargo().toString());
			this.jInternalFrameDetalleFormProducto.jTextFieldvolumenProducto.setText(producto.getvolumen().toString());
			this.jInternalFrameDetalleFormProducto.jTextFieldpesoProducto.setText(producto.getpeso().toString());
			this.jInternalFrameDetalleFormProducto.jTextFieldgramosProducto.setText(producto.getgramos().toString());
			this.jInternalFrameDetalleFormProducto.jTextFieldunidades_cajaProducto.setText(producto.getunidades_caja().toString());
			this.jInternalFrameDetalleFormProducto.jTextFieldmargenProducto.setText(producto.getmargen().toString());
			this.jInternalFrameDetalleFormProducto.jTextFieldfactorProducto.setText(producto.getfactor().toString());
			this.jInternalFrameDetalleFormProducto.jTextFieldfobProducto.setText(producto.getfob().toString());
			this.jInternalFrameDetalleFormProducto.jTextFieldfob2Producto.setText(producto.getfob2().toString());
			this.jInternalFrameDetalleFormProducto.jTextAreagrupoProducto.setText(producto.getgrupo());
			this.jInternalFrameDetalleFormProducto.jTextAreareferenciaProducto.setText(producto.getreferencia());
			this.jInternalFrameDetalleFormProducto.jTextAreaaplicacionProducto.setText(producto.getaplicacion());
			this.jInternalFrameDetalleFormProducto.jTextAreaprocedenciaProducto.setText(producto.getprocedencia());
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
		}
	}
		
	public void actualizarInformacion(String sTipo,Producto productoLocal) throws Exception {
		this.actualizarInformacion(sTipo,false,productoLocal);
	}	
	
	public void actualizarInformacion(String sTipo,Boolean conParametroObjeto,Producto productoLocal) throws Exception {
		
		if(!conParametroObjeto) {
			if(!this.getEsControlTabla()) {
				productoLocal=this.producto;
			} else {
				productoLocal=this.productoAnterior;
			}
		}
		
		if(this.permiteMantenimiento(productoLocal)) {
			if(sTipo.equals("EVENTO_CONTROL")) { // || sTipo.equals("EVENTO_NUEVO")
				if(!this.esControlTabla) {
					this.setVariablesFormularioToObjetoActualTodoProducto(productoLocal,true);
					
					if(productoSessionBean.getConGuardarRelaciones()) {
						this.actualizarRelaciones(productoLocal);
					}
				}
			
			} else if(sTipo.equals("INFO_PADRE")) {
				
				if(this.productoSessionBean.getEsGuardarRelacionado()) {
					this.actualizarRelacionFkPadreActual(productoLocal);
				}
			}
		}
	}
	
	public void setVariablesFormularioToObjetoActualTodoProducto(Producto producto,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualProducto(producto,conColumnasBase);
		this.setVariablesFormularioToObjetoActualForeignKeysProducto(producto);
	}
	
	public void setVariablesFormularioToObjetoActualProducto(Producto producto,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualProducto(producto,conColumnasBase,true);
	}
	
	public void setVariablesFormularioToObjetoActualProducto(Producto producto,Boolean conColumnasBase,Boolean conInicializarInvalidValues) throws Exception { 
		String sMensajeCampoActual="";
		Boolean estaValidado=true;
		try {
			
			if(this.jInternalFrameDetalleFormProducto==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			if(conInicializarInvalidValues) {
				this.inicializarInvalidValues();
			}
			
			

		try {
			if(this.jInternalFrameDetalleFormProducto.jLabelidProducto.getText()==null || this.jInternalFrameDetalleFormProducto.jLabelidProducto.getText()=="" || this.jInternalFrameDetalleFormProducto.jLabelidProducto.getText()=="Id") {
				this.jInternalFrameDetalleFormProducto.jLabelidProducto.setText("0");
			}

			if(conColumnasBase) {producto.setId(Long.parseLong(this.jInternalFrameDetalleFormProducto.jLabelidProducto.getText()));}
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProductoConstantesFunciones.LABEL_ID+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelIdProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			producto.setcodigo(this.jInternalFrameDetalleFormProducto.jTextFieldcodigoProducto.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProductoConstantesFunciones.LABEL_CODIGO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelcodigoProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			producto.setnombre(this.jInternalFrameDetalleFormProducto.jTextAreanombreProducto.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProductoConstantesFunciones.LABEL_NOMBRE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelnombreProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			producto.setnombre_extranjero(this.jInternalFrameDetalleFormProducto.jTextAreanombre_extranjeroProducto.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProductoConstantesFunciones.LABEL_NOMBREEXTRANJERO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelnombre_extranjeroProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			producto.setresumen_detalle(this.jInternalFrameDetalleFormProducto.jTextArearesumen_detalleProducto.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProductoConstantesFunciones.LABEL_RESUMENDETALLE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelresumen_detalleProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			producto.setcodigo_barra(this.jInternalFrameDetalleFormProducto.jTextFieldcodigo_barraProducto.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProductoConstantesFunciones.LABEL_CODIGOBARRA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelcodigo_barraProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			producto.setesta_activo(this.jInternalFrameDetalleFormProducto.jCheckBoxesta_activoProducto.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProductoConstantesFunciones.LABEL_ESTAACTIVO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelesta_activoProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			producto.setdescripcion(this.jInternalFrameDetalleFormProducto.jTextAreadescripcionProducto.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProductoConstantesFunciones.LABEL_DESCRIPCION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabeldescripcionProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			producto.setprecio(Double.parseDouble(this.jInternalFrameDetalleFormProducto.jTextFieldprecioProducto.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProductoConstantesFunciones.LABEL_PRECIO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelprecioProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			producto.setiva(Double.parseDouble(this.jInternalFrameDetalleFormProducto.jTextFieldivaProducto.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProductoConstantesFunciones.LABEL_IVA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelivaProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			producto.setiva_valor(Double.parseDouble(this.jInternalFrameDetalleFormProducto.jTextFieldiva_valorProducto.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProductoConstantesFunciones.LABEL_IVAVALOR+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabeliva_valorProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			producto.setice(Double.parseDouble(this.jInternalFrameDetalleFormProducto.jTextFieldiceProducto.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProductoConstantesFunciones.LABEL_ICE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabeliceProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			producto.setice_valor(Double.parseDouble(this.jInternalFrameDetalleFormProducto.jTextFieldice_valorProducto.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProductoConstantesFunciones.LABEL_ICEVALOR+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelice_valorProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			producto.setdescuento(Double.parseDouble(this.jInternalFrameDetalleFormProducto.jTextFielddescuentoProducto.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProductoConstantesFunciones.LABEL_DESCUENTO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabeldescuentoProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			producto.setdescuento_valor(Double.parseDouble(this.jInternalFrameDetalleFormProducto.jTextFielddescuento_valorProducto.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProductoConstantesFunciones.LABEL_DESCUENTOVALOR+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabeldescuento_valorProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			producto.setarancel_porcentaje(Double.parseDouble(this.jInternalFrameDetalleFormProducto.jTextFieldarancel_porcentajeProducto.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProductoConstantesFunciones.LABEL_ARANCELPORCENTAJE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelarancel_porcentajeProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			producto.setarancel_valor(Double.parseDouble(this.jInternalFrameDetalleFormProducto.jTextFieldarancel_valorProducto.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProductoConstantesFunciones.LABEL_ARANCELVALOR+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelarancel_valorProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			producto.setcomision(Double.parseDouble(this.jInternalFrameDetalleFormProducto.jTextFieldcomisionProducto.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProductoConstantesFunciones.LABEL_COMISION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelcomisionProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			producto.setcomision_valor(Double.parseDouble(this.jInternalFrameDetalleFormProducto.jTextFieldcomision_valorProducto.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProductoConstantesFunciones.LABEL_COMISIONVALOR+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelcomision_valorProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			producto.setdias_produccion(Double.parseDouble(this.jInternalFrameDetalleFormProducto.jTextFielddias_produccionProducto.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProductoConstantesFunciones.LABEL_DIASPRODUCCION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabeldias_produccionProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			producto.setcon_stock_negativo(this.jInternalFrameDetalleFormProducto.jCheckBoxcon_stock_negativoProducto.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProductoConstantesFunciones.LABEL_CONSTOCKNEGATIVO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelcon_stock_negativoProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			producto.setcon_precio_minimo(this.jInternalFrameDetalleFormProducto.jCheckBoxcon_precio_minimoProducto.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProductoConstantesFunciones.LABEL_CONPRECIOMINIMO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelcon_precio_minimoProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			producto.setcon_lote(this.jInternalFrameDetalleFormProducto.jCheckBoxcon_loteProducto.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProductoConstantesFunciones.LABEL_CONLOTE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelcon_loteProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			producto.setcon_confirmacion(this.jInternalFrameDetalleFormProducto.jCheckBoxcon_confirmacionProducto.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProductoConstantesFunciones.LABEL_CONCONFIRMACION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelcon_confirmacionProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			producto.setcon_presupuesto(this.jInternalFrameDetalleFormProducto.jCheckBoxcon_presupuestoProducto.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProductoConstantesFunciones.LABEL_CONPRESUPUESTO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelcon_presupuestoProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			producto.setcon_importacion(this.jInternalFrameDetalleFormProducto.jCheckBoxcon_importacionProducto.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProductoConstantesFunciones.LABEL_CONIMPORTACION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelcon_importacionProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			producto.setcon_final(this.jInternalFrameDetalleFormProducto.jCheckBoxcon_finalProducto.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProductoConstantesFunciones.LABEL_CONFINAL+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelcon_finalProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			producto.setcon_consep(this.jInternalFrameDetalleFormProducto.jCheckBoxcon_consepProducto.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProductoConstantesFunciones.LABEL_CONCONSEP+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelcon_consepProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			producto.setcon_serie(this.jInternalFrameDetalleFormProducto.jCheckBoxcon_serieProducto.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProductoConstantesFunciones.LABEL_CONSERIE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelcon_serieProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			producto.setcon_balanza(this.jInternalFrameDetalleFormProducto.jCheckBoxcon_balanzaProducto.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProductoConstantesFunciones.LABEL_CONBALANZA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelcon_balanzaProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			producto.setalto(Double.parseDouble(this.jInternalFrameDetalleFormProducto.jTextFieldaltoProducto.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProductoConstantesFunciones.LABEL_ALTO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelaltoProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			producto.setancho(Double.parseDouble(this.jInternalFrameDetalleFormProducto.jTextFieldanchoProducto.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProductoConstantesFunciones.LABEL_ANCHO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelanchoProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			producto.setlargo(Double.parseDouble(this.jInternalFrameDetalleFormProducto.jTextFieldlargoProducto.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProductoConstantesFunciones.LABEL_LARGO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabellargoProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			producto.setvolumen(Double.parseDouble(this.jInternalFrameDetalleFormProducto.jTextFieldvolumenProducto.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProductoConstantesFunciones.LABEL_VOLUMEN+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelvolumenProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			producto.setpeso(Double.parseDouble(this.jInternalFrameDetalleFormProducto.jTextFieldpesoProducto.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProductoConstantesFunciones.LABEL_PESO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelpesoProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			producto.setgramos(Double.parseDouble(this.jInternalFrameDetalleFormProducto.jTextFieldgramosProducto.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProductoConstantesFunciones.LABEL_GRAMOS+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelgramosProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			producto.setunidades_caja(Double.parseDouble(this.jInternalFrameDetalleFormProducto.jTextFieldunidades_cajaProducto.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProductoConstantesFunciones.LABEL_UNIDADESCAJA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelunidades_cajaProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			producto.setmargen(Double.parseDouble(this.jInternalFrameDetalleFormProducto.jTextFieldmargenProducto.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProductoConstantesFunciones.LABEL_MARGEN+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelmargenProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			producto.setfactor(Double.parseDouble(this.jInternalFrameDetalleFormProducto.jTextFieldfactorProducto.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProductoConstantesFunciones.LABEL_FACTOR+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelfactorProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			producto.setfob(Double.parseDouble(this.jInternalFrameDetalleFormProducto.jTextFieldfobProducto.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProductoConstantesFunciones.LABEL_FOB+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelfobProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			producto.setfob2(Double.parseDouble(this.jInternalFrameDetalleFormProducto.jTextFieldfob2Producto.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProductoConstantesFunciones.LABEL_FOB2+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelfob2Producto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			producto.setgrupo(this.jInternalFrameDetalleFormProducto.jTextAreagrupoProducto.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProductoConstantesFunciones.LABEL_GRUPO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelgrupoProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			producto.setreferencia(this.jInternalFrameDetalleFormProducto.jTextAreareferenciaProducto.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProductoConstantesFunciones.LABEL_REFERENCIA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelreferenciaProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			producto.setaplicacion(this.jInternalFrameDetalleFormProducto.jTextAreaaplicacionProducto.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProductoConstantesFunciones.LABEL_APLICACION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelaplicacionProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			producto.setprocedencia(this.jInternalFrameDetalleFormProducto.jTextAreaprocedenciaProducto.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProductoConstantesFunciones.LABEL_PROCEDENCIA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProducto.jLabelprocedenciaProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}
			
			if(!estaValidado) {
				throw new Exception(sMensajeCampoActual);
			}
		} catch(NumberFormatException e) {
			throw new Exception(sMensajeCampoActual);
			//FuncionesSwing.manageException(this, e,logger,MovimientoInventarioConstantesFunciones.CLASSNAME);
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualProducto(Producto productoBean,Producto producto,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			if(conDefault || (!conDefault && productoBean.getid_linea()!=null && !productoBean.getid_linea().equals(-1L))) {producto.setid_linea(productoBean.getid_linea());}
			if(conDefault || (!conDefault && productoBean.getid_linea_grupo()!=null && !productoBean.getid_linea_grupo().equals(null))) {producto.setid_linea_grupo(productoBean.getid_linea_grupo());}
			if(conDefault || (!conDefault && productoBean.getid_linea_categoria()!=null && !productoBean.getid_linea_categoria().equals(null))) {producto.setid_linea_categoria(productoBean.getid_linea_categoria());}
			if(conDefault || (!conDefault && productoBean.getid_linea_marca()!=null && !productoBean.getid_linea_marca().equals(null))) {producto.setid_linea_marca(productoBean.getid_linea_marca());}
			if(conDefault || (!conDefault && productoBean.getid_tipo_producto_servicio()!=null && !productoBean.getid_tipo_producto_servicio().equals(-1L))) {producto.setid_tipo_producto_servicio(productoBean.getid_tipo_producto_servicio());}
			if(conDefault || (!conDefault && productoBean.getid_tipo_producto_servicio_inven()!=null && !productoBean.getid_tipo_producto_servicio_inven().equals(-1L))) {producto.setid_tipo_producto_servicio_inven(productoBean.getid_tipo_producto_servicio_inven());}
			if(conDefault || (!conDefault && productoBean.getid_tipo_costeo()!=null && !productoBean.getid_tipo_costeo().equals(-1L))) {producto.setid_tipo_costeo(productoBean.getid_tipo_costeo());}
			if(conDefault || (!conDefault && productoBean.getid_unidad()!=null && !productoBean.getid_unidad().equals(-1L))) {producto.setid_unidad(productoBean.getid_unidad());}
			if(conDefault || (!conDefault && productoBean.getid_unidad_peso()!=null && !productoBean.getid_unidad_peso().equals(-1L))) {producto.setid_unidad_peso(productoBean.getid_unidad_peso());}
			if(conDefault || (!conDefault && productoBean.getid_arancel()!=null && !productoBean.getid_arancel().equals(-1L))) {producto.setid_arancel(productoBean.getid_arancel());}
			if(conDefault || (!conDefault && productoBean.getid_cliente()!=null && !productoBean.getid_cliente().equals(-1L))) {producto.setid_cliente(productoBean.getid_cliente());}
			if(conDefault || (!conDefault && productoBean.getid_cliente_proveedor_defecto()!=null && !productoBean.getid_cliente_proveedor_defecto().equals(-1L))) {producto.setid_cliente_proveedor_defecto(productoBean.getid_cliente_proveedor_defecto());}
			if(conDefault || (!conDefault && productoBean.getid_tipo_producto()!=null && !productoBean.getid_tipo_producto().equals(-1L))) {producto.setid_tipo_producto(productoBean.getid_tipo_producto());}
			if(conDefault || (!conDefault && productoBean.getid_color_producto()!=null && !productoBean.getid_color_producto().equals(-1L))) {producto.setid_color_producto(productoBean.getid_color_producto());}
			if(conDefault || (!conDefault && productoBean.getid_clase_producto()!=null && !productoBean.getid_clase_producto().equals(-1L))) {producto.setid_clase_producto(productoBean.getid_clase_producto());}
			if(conDefault || (!conDefault && productoBean.getid_efecto_producto()!=null && !productoBean.getid_efecto_producto().equals(-1L))) {producto.setid_efecto_producto(productoBean.getid_efecto_producto());}
			if(conDefault || (!conDefault && productoBean.getid_marca_producto()!=null && !productoBean.getid_marca_producto().equals(-1L))) {producto.setid_marca_producto(productoBean.getid_marca_producto());}
			if(conDefault || (!conDefault && productoBean.getid_modelo_producto()!=null && !productoBean.getid_modelo_producto().equals(-1L))) {producto.setid_modelo_producto(productoBean.getid_modelo_producto());}
			if(conDefault || (!conDefault && productoBean.getid_material_producto()!=null && !productoBean.getid_material_producto().equals(-1L))) {producto.setid_material_producto(productoBean.getid_material_producto());}
			if(conDefault || (!conDefault && productoBean.getid_segmento_producto()!=null && !productoBean.getid_segmento_producto().equals(-1L))) {producto.setid_segmento_producto(productoBean.getid_segmento_producto());}
			if(conDefault || (!conDefault && productoBean.getid_talla_producto()!=null && !productoBean.getid_talla_producto().equals(-1L))) {producto.setid_talla_producto(productoBean.getid_talla_producto());}
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setCopiarVariablesObjetosProducto(Producto productoOrigen,Producto producto,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			if(conColumnasBase) {if(conDefault || (!conDefault && productoOrigen.getId()!=null && !productoOrigen.getId().equals(0L))) {producto.setId(productoOrigen.getId());}}
			if(conDefault || (!conDefault && productoOrigen.getcodigo()!=null && !productoOrigen.getcodigo().equals(""))) {producto.setcodigo(productoOrigen.getcodigo());}
			if(conDefault || (!conDefault && productoOrigen.getnombre()!=null && !productoOrigen.getnombre().equals(""))) {producto.setnombre(productoOrigen.getnombre());}
			if(conDefault || (!conDefault && productoOrigen.getnombre_extranjero()!=null && !productoOrigen.getnombre_extranjero().equals(""))) {producto.setnombre_extranjero(productoOrigen.getnombre_extranjero());}
			if(conDefault || (!conDefault && productoOrigen.getresumen_detalle()!=null && !productoOrigen.getresumen_detalle().equals(""))) {producto.setresumen_detalle(productoOrigen.getresumen_detalle());}
			if(conDefault || (!conDefault && productoOrigen.getcodigo_barra()!=null && !productoOrigen.getcodigo_barra().equals(""))) {producto.setcodigo_barra(productoOrigen.getcodigo_barra());}
			if(conDefault || (!conDefault && productoOrigen.getid_linea()!=null && !productoOrigen.getid_linea().equals(-1L))) {producto.setid_linea(productoOrigen.getid_linea());}
			if(conDefault || (!conDefault && productoOrigen.getid_linea_grupo()!=null && !productoOrigen.getid_linea_grupo().equals(null))) {producto.setid_linea_grupo(productoOrigen.getid_linea_grupo());}
			if(conDefault || (!conDefault && productoOrigen.getid_linea_categoria()!=null && !productoOrigen.getid_linea_categoria().equals(null))) {producto.setid_linea_categoria(productoOrigen.getid_linea_categoria());}
			if(conDefault || (!conDefault && productoOrigen.getid_linea_marca()!=null && !productoOrigen.getid_linea_marca().equals(null))) {producto.setid_linea_marca(productoOrigen.getid_linea_marca());}
			if(conDefault || (!conDefault && productoOrigen.getid_tipo_producto_servicio()!=null && !productoOrigen.getid_tipo_producto_servicio().equals(-1L))) {producto.setid_tipo_producto_servicio(productoOrigen.getid_tipo_producto_servicio());}
			if(conDefault || (!conDefault && productoOrigen.getid_tipo_producto_servicio_inven()!=null && !productoOrigen.getid_tipo_producto_servicio_inven().equals(-1L))) {producto.setid_tipo_producto_servicio_inven(productoOrigen.getid_tipo_producto_servicio_inven());}
			if(conDefault || (!conDefault && productoOrigen.getid_tipo_costeo()!=null && !productoOrigen.getid_tipo_costeo().equals(-1L))) {producto.setid_tipo_costeo(productoOrigen.getid_tipo_costeo());}
			if(conDefault || (!conDefault && productoOrigen.getid_unidad()!=null && !productoOrigen.getid_unidad().equals(-1L))) {producto.setid_unidad(productoOrigen.getid_unidad());}
			if(conDefault || (!conDefault && productoOrigen.getid_unidad_peso()!=null && !productoOrigen.getid_unidad_peso().equals(-1L))) {producto.setid_unidad_peso(productoOrigen.getid_unidad_peso());}
			if(conDefault || (!conDefault && productoOrigen.getid_arancel()!=null && !productoOrigen.getid_arancel().equals(-1L))) {producto.setid_arancel(productoOrigen.getid_arancel());}
			if(conDefault || (!conDefault && productoOrigen.getid_cliente()!=null && !productoOrigen.getid_cliente().equals(-1L))) {producto.setid_cliente(productoOrigen.getid_cliente());}
			if(conDefault || (!conDefault && productoOrigen.getid_cliente_proveedor_defecto()!=null && !productoOrigen.getid_cliente_proveedor_defecto().equals(-1L))) {producto.setid_cliente_proveedor_defecto(productoOrigen.getid_cliente_proveedor_defecto());}
			if(conDefault || (!conDefault && productoOrigen.getesta_activo()!=null && !productoOrigen.getesta_activo().equals(false))) {producto.setesta_activo(productoOrigen.getesta_activo());}
			if(conDefault || (!conDefault && productoOrigen.getdescripcion()!=null && !productoOrigen.getdescripcion().equals(""))) {producto.setdescripcion(productoOrigen.getdescripcion());}
			if(conDefault || (!conDefault && productoOrigen.getprecio()!=null && !productoOrigen.getprecio().equals(0.0))) {producto.setprecio(productoOrigen.getprecio());}
			if(conDefault || (!conDefault && productoOrigen.getiva()!=null && !productoOrigen.getiva().equals(0.0))) {producto.setiva(productoOrigen.getiva());}
			if(conDefault || (!conDefault && productoOrigen.getiva_valor()!=null && !productoOrigen.getiva_valor().equals(0.0))) {producto.setiva_valor(productoOrigen.getiva_valor());}
			if(conDefault || (!conDefault && productoOrigen.getice()!=null && !productoOrigen.getice().equals(0.0))) {producto.setice(productoOrigen.getice());}
			if(conDefault || (!conDefault && productoOrigen.getice_valor()!=null && !productoOrigen.getice_valor().equals(0.0))) {producto.setice_valor(productoOrigen.getice_valor());}
			if(conDefault || (!conDefault && productoOrigen.getdescuento()!=null && !productoOrigen.getdescuento().equals(0.0))) {producto.setdescuento(productoOrigen.getdescuento());}
			if(conDefault || (!conDefault && productoOrigen.getdescuento_valor()!=null && !productoOrigen.getdescuento_valor().equals(0.0))) {producto.setdescuento_valor(productoOrigen.getdescuento_valor());}
			if(conDefault || (!conDefault && productoOrigen.getarancel_porcentaje()!=null && !productoOrigen.getarancel_porcentaje().equals(0.0))) {producto.setarancel_porcentaje(productoOrigen.getarancel_porcentaje());}
			if(conDefault || (!conDefault && productoOrigen.getarancel_valor()!=null && !productoOrigen.getarancel_valor().equals(0.0))) {producto.setarancel_valor(productoOrigen.getarancel_valor());}
			if(conDefault || (!conDefault && productoOrigen.getcomision()!=null && !productoOrigen.getcomision().equals(0.0))) {producto.setcomision(productoOrigen.getcomision());}
			if(conDefault || (!conDefault && productoOrigen.getcomision_valor()!=null && !productoOrigen.getcomision_valor().equals(0.0))) {producto.setcomision_valor(productoOrigen.getcomision_valor());}
			if(conDefault || (!conDefault && productoOrigen.getdias_produccion()!=null && !productoOrigen.getdias_produccion().equals(0.0))) {producto.setdias_produccion(productoOrigen.getdias_produccion());}
			if(conDefault || (!conDefault && productoOrigen.getcon_stock_negativo()!=null && !productoOrigen.getcon_stock_negativo().equals(false))) {producto.setcon_stock_negativo(productoOrigen.getcon_stock_negativo());}
			if(conDefault || (!conDefault && productoOrigen.getcon_precio_minimo()!=null && !productoOrigen.getcon_precio_minimo().equals(false))) {producto.setcon_precio_minimo(productoOrigen.getcon_precio_minimo());}
			if(conDefault || (!conDefault && productoOrigen.getcon_lote()!=null && !productoOrigen.getcon_lote().equals(false))) {producto.setcon_lote(productoOrigen.getcon_lote());}
			if(conDefault || (!conDefault && productoOrigen.getcon_confirmacion()!=null && !productoOrigen.getcon_confirmacion().equals(false))) {producto.setcon_confirmacion(productoOrigen.getcon_confirmacion());}
			if(conDefault || (!conDefault && productoOrigen.getcon_presupuesto()!=null && !productoOrigen.getcon_presupuesto().equals(false))) {producto.setcon_presupuesto(productoOrigen.getcon_presupuesto());}
			if(conDefault || (!conDefault && productoOrigen.getcon_importacion()!=null && !productoOrigen.getcon_importacion().equals(false))) {producto.setcon_importacion(productoOrigen.getcon_importacion());}
			if(conDefault || (!conDefault && productoOrigen.getcon_final()!=null && !productoOrigen.getcon_final().equals(false))) {producto.setcon_final(productoOrigen.getcon_final());}
			if(conDefault || (!conDefault && productoOrigen.getcon_consep()!=null && !productoOrigen.getcon_consep().equals(false))) {producto.setcon_consep(productoOrigen.getcon_consep());}
			if(conDefault || (!conDefault && productoOrigen.getcon_serie()!=null && !productoOrigen.getcon_serie().equals(false))) {producto.setcon_serie(productoOrigen.getcon_serie());}
			if(conDefault || (!conDefault && productoOrigen.getcon_balanza()!=null && !productoOrigen.getcon_balanza().equals(false))) {producto.setcon_balanza(productoOrigen.getcon_balanza());}
			if(conDefault || (!conDefault && productoOrigen.getalto()!=null && !productoOrigen.getalto().equals(0.0))) {producto.setalto(productoOrigen.getalto());}
			if(conDefault || (!conDefault && productoOrigen.getancho()!=null && !productoOrigen.getancho().equals(0.0))) {producto.setancho(productoOrigen.getancho());}
			if(conDefault || (!conDefault && productoOrigen.getlargo()!=null && !productoOrigen.getlargo().equals(0.0))) {producto.setlargo(productoOrigen.getlargo());}
			if(conDefault || (!conDefault && productoOrigen.getvolumen()!=null && !productoOrigen.getvolumen().equals(0.0))) {producto.setvolumen(productoOrigen.getvolumen());}
			if(conDefault || (!conDefault && productoOrigen.getpeso()!=null && !productoOrigen.getpeso().equals(0.0))) {producto.setpeso(productoOrigen.getpeso());}
			if(conDefault || (!conDefault && productoOrigen.getgramos()!=null && !productoOrigen.getgramos().equals(0.0))) {producto.setgramos(productoOrigen.getgramos());}
			if(conDefault || (!conDefault && productoOrigen.getunidades_caja()!=null && !productoOrigen.getunidades_caja().equals(0.0))) {producto.setunidades_caja(productoOrigen.getunidades_caja());}
			if(conDefault || (!conDefault && productoOrigen.getmargen()!=null && !productoOrigen.getmargen().equals(0.0))) {producto.setmargen(productoOrigen.getmargen());}
			if(conDefault || (!conDefault && productoOrigen.getfactor()!=null && !productoOrigen.getfactor().equals(0.0))) {producto.setfactor(productoOrigen.getfactor());}
			if(conDefault || (!conDefault && productoOrigen.getfob()!=null && !productoOrigen.getfob().equals(0.0))) {producto.setfob(productoOrigen.getfob());}
			if(conDefault || (!conDefault && productoOrigen.getfob2()!=null && !productoOrigen.getfob2().equals(0.0))) {producto.setfob2(productoOrigen.getfob2());}
			if(conDefault || (!conDefault && productoOrigen.getid_tipo_producto()!=null && !productoOrigen.getid_tipo_producto().equals(-1L))) {producto.setid_tipo_producto(productoOrigen.getid_tipo_producto());}
			if(conDefault || (!conDefault && productoOrigen.getid_color_producto()!=null && !productoOrigen.getid_color_producto().equals(-1L))) {producto.setid_color_producto(productoOrigen.getid_color_producto());}
			if(conDefault || (!conDefault && productoOrigen.getid_clase_producto()!=null && !productoOrigen.getid_clase_producto().equals(-1L))) {producto.setid_clase_producto(productoOrigen.getid_clase_producto());}
			if(conDefault || (!conDefault && productoOrigen.getid_efecto_producto()!=null && !productoOrigen.getid_efecto_producto().equals(-1L))) {producto.setid_efecto_producto(productoOrigen.getid_efecto_producto());}
			if(conDefault || (!conDefault && productoOrigen.getid_marca_producto()!=null && !productoOrigen.getid_marca_producto().equals(-1L))) {producto.setid_marca_producto(productoOrigen.getid_marca_producto());}
			if(conDefault || (!conDefault && productoOrigen.getid_modelo_producto()!=null && !productoOrigen.getid_modelo_producto().equals(-1L))) {producto.setid_modelo_producto(productoOrigen.getid_modelo_producto());}
			if(conDefault || (!conDefault && productoOrigen.getid_material_producto()!=null && !productoOrigen.getid_material_producto().equals(-1L))) {producto.setid_material_producto(productoOrigen.getid_material_producto());}
			if(conDefault || (!conDefault && productoOrigen.getid_segmento_producto()!=null && !productoOrigen.getid_segmento_producto().equals(-1L))) {producto.setid_segmento_producto(productoOrigen.getid_segmento_producto());}
			if(conDefault || (!conDefault && productoOrigen.getid_talla_producto()!=null && !productoOrigen.getid_talla_producto().equals(-1L))) {producto.setid_talla_producto(productoOrigen.getid_talla_producto());}
			if(conDefault || (!conDefault && productoOrigen.getgrupo()!=null && !productoOrigen.getgrupo().equals(""))) {producto.setgrupo(productoOrigen.getgrupo());}
			if(conDefault || (!conDefault && productoOrigen.getreferencia()!=null && !productoOrigen.getreferencia().equals(""))) {producto.setreferencia(productoOrigen.getreferencia());}
			if(conDefault || (!conDefault && productoOrigen.getaplicacion()!=null && !productoOrigen.getaplicacion().equals(""))) {producto.setaplicacion(productoOrigen.getaplicacion());}
			if(conDefault || (!conDefault && productoOrigen.getprocedencia()!=null && !productoOrigen.getprocedencia().equals(""))) {producto.setprocedencia(productoOrigen.getprocedencia());}
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	/*
	public void setVariablesObjetoBeanActualToFormularioProducto(Producto producto) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormProducto.jLabelidProducto.setText(producto.getId().toString());
			this.jInternalFrameDetalleFormProducto.jTextFieldcodigoProducto.setText(producto.getcodigo());
			this.jInternalFrameDetalleFormProducto.jTextAreanombreProducto.setText(producto.getnombre());
			this.jInternalFrameDetalleFormProducto.jTextAreanombre_extranjeroProducto.setText(producto.getnombre_extranjero());
			this.jInternalFrameDetalleFormProducto.jTextArearesumen_detalleProducto.setText(producto.getresumen_detalle());
			this.jInternalFrameDetalleFormProducto.jTextFieldcodigo_barraProducto.setText(producto.getcodigo_barra());
			this.jInternalFrameDetalleFormProducto.jCheckBoxesta_activoProducto.setSelected(producto.getesta_activo());
			this.jInternalFrameDetalleFormProducto.jTextAreadescripcionProducto.setText(producto.getdescripcion());
			this.jInternalFrameDetalleFormProducto.jTextFieldprecioProducto.setText(producto.getprecio().toString());
			this.jInternalFrameDetalleFormProducto.jTextFieldivaProducto.setText(producto.getiva().toString());
			this.jInternalFrameDetalleFormProducto.jTextFieldiva_valorProducto.setText(producto.getiva_valor().toString());
			this.jInternalFrameDetalleFormProducto.jTextFieldiceProducto.setText(producto.getice().toString());
			this.jInternalFrameDetalleFormProducto.jTextFieldice_valorProducto.setText(producto.getice_valor().toString());
			this.jInternalFrameDetalleFormProducto.jTextFielddescuentoProducto.setText(producto.getdescuento().toString());
			this.jInternalFrameDetalleFormProducto.jTextFielddescuento_valorProducto.setText(producto.getdescuento_valor().toString());
			this.jInternalFrameDetalleFormProducto.jTextFieldarancel_porcentajeProducto.setText(producto.getarancel_porcentaje().toString());
			this.jInternalFrameDetalleFormProducto.jTextFieldarancel_valorProducto.setText(producto.getarancel_valor().toString());
			this.jInternalFrameDetalleFormProducto.jTextFieldcomisionProducto.setText(producto.getcomision().toString());
			this.jInternalFrameDetalleFormProducto.jTextFieldcomision_valorProducto.setText(producto.getcomision_valor().toString());
			this.jInternalFrameDetalleFormProducto.jTextFielddias_produccionProducto.setText(producto.getdias_produccion().toString());
			this.jInternalFrameDetalleFormProducto.jCheckBoxcon_stock_negativoProducto.setSelected(producto.getcon_stock_negativo());
			this.jInternalFrameDetalleFormProducto.jCheckBoxcon_precio_minimoProducto.setSelected(producto.getcon_precio_minimo());
			this.jInternalFrameDetalleFormProducto.jCheckBoxcon_loteProducto.setSelected(producto.getcon_lote());
			this.jInternalFrameDetalleFormProducto.jCheckBoxcon_confirmacionProducto.setSelected(producto.getcon_confirmacion());
			this.jInternalFrameDetalleFormProducto.jCheckBoxcon_presupuestoProducto.setSelected(producto.getcon_presupuesto());
			this.jInternalFrameDetalleFormProducto.jCheckBoxcon_importacionProducto.setSelected(producto.getcon_importacion());
			this.jInternalFrameDetalleFormProducto.jCheckBoxcon_finalProducto.setSelected(producto.getcon_final());
			this.jInternalFrameDetalleFormProducto.jCheckBoxcon_consepProducto.setSelected(producto.getcon_consep());
			this.jInternalFrameDetalleFormProducto.jCheckBoxcon_serieProducto.setSelected(producto.getcon_serie());
			this.jInternalFrameDetalleFormProducto.jCheckBoxcon_balanzaProducto.setSelected(producto.getcon_balanza());
			this.jInternalFrameDetalleFormProducto.jTextFieldaltoProducto.setText(producto.getalto().toString());
			this.jInternalFrameDetalleFormProducto.jTextFieldanchoProducto.setText(producto.getancho().toString());
			this.jInternalFrameDetalleFormProducto.jTextFieldlargoProducto.setText(producto.getlargo().toString());
			this.jInternalFrameDetalleFormProducto.jTextFieldvolumenProducto.setText(producto.getvolumen().toString());
			this.jInternalFrameDetalleFormProducto.jTextFieldpesoProducto.setText(producto.getpeso().toString());
			this.jInternalFrameDetalleFormProducto.jTextFieldgramosProducto.setText(producto.getgramos().toString());
			this.jInternalFrameDetalleFormProducto.jTextFieldunidades_cajaProducto.setText(producto.getunidades_caja().toString());
			this.jInternalFrameDetalleFormProducto.jTextFieldmargenProducto.setText(producto.getmargen().toString());
			this.jInternalFrameDetalleFormProducto.jTextFieldfactorProducto.setText(producto.getfactor().toString());
			this.jInternalFrameDetalleFormProducto.jTextFieldfobProducto.setText(producto.getfob().toString());
			this.jInternalFrameDetalleFormProducto.jTextFieldfob2Producto.setText(producto.getfob2().toString());
			this.jInternalFrameDetalleFormProducto.jTextAreagrupoProducto.setText(producto.getgrupo());
			this.jInternalFrameDetalleFormProducto.jTextAreareferenciaProducto.setText(producto.getreferencia());
			this.jInternalFrameDetalleFormProducto.jTextAreaaplicacionProducto.setText(producto.getaplicacion());
			this.jInternalFrameDetalleFormProducto.jTextAreaprocedenciaProducto.setText(producto.getprocedencia());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoBeanActualToFormularioProducto(ProductoBean productoBean) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormProducto.jLabelidProducto.setText(productoBean.getId().toString());
			this.jInternalFrameDetalleFormProducto.jTextFieldcodigoProducto.setText(productoBean.getcodigo());
			this.jInternalFrameDetalleFormProducto.jTextAreanombreProducto.setText(productoBean.getnombre());
			this.jInternalFrameDetalleFormProducto.jTextAreanombre_extranjeroProducto.setText(productoBean.getnombre_extranjero());
			this.jInternalFrameDetalleFormProducto.jTextArearesumen_detalleProducto.setText(productoBean.getresumen_detalle());
			this.jInternalFrameDetalleFormProducto.jTextFieldcodigo_barraProducto.setText(productoBean.getcodigo_barra());
			this.jInternalFrameDetalleFormProducto.jCheckBoxesta_activoProducto.setSelected(productoBean.getesta_activo());
			this.jInternalFrameDetalleFormProducto.jTextAreadescripcionProducto.setText(productoBean.getdescripcion());
			this.jInternalFrameDetalleFormProducto.jTextFieldprecioProducto.setText(productoBean.getprecio().toString());
			this.jInternalFrameDetalleFormProducto.jTextFieldivaProducto.setText(productoBean.getiva().toString());
			this.jInternalFrameDetalleFormProducto.jTextFieldiva_valorProducto.setText(productoBean.getiva_valor().toString());
			this.jInternalFrameDetalleFormProducto.jTextFieldiceProducto.setText(productoBean.getice().toString());
			this.jInternalFrameDetalleFormProducto.jTextFieldice_valorProducto.setText(productoBean.getice_valor().toString());
			this.jInternalFrameDetalleFormProducto.jTextFielddescuentoProducto.setText(productoBean.getdescuento().toString());
			this.jInternalFrameDetalleFormProducto.jTextFielddescuento_valorProducto.setText(productoBean.getdescuento_valor().toString());
			this.jInternalFrameDetalleFormProducto.jTextFieldarancel_porcentajeProducto.setText(productoBean.getarancel_porcentaje().toString());
			this.jInternalFrameDetalleFormProducto.jTextFieldarancel_valorProducto.setText(productoBean.getarancel_valor().toString());
			this.jInternalFrameDetalleFormProducto.jTextFieldcomisionProducto.setText(productoBean.getcomision().toString());
			this.jInternalFrameDetalleFormProducto.jTextFieldcomision_valorProducto.setText(productoBean.getcomision_valor().toString());
			this.jInternalFrameDetalleFormProducto.jTextFielddias_produccionProducto.setText(productoBean.getdias_produccion().toString());
			this.jInternalFrameDetalleFormProducto.jCheckBoxcon_stock_negativoProducto.setSelected(productoBean.getcon_stock_negativo());
			this.jInternalFrameDetalleFormProducto.jCheckBoxcon_precio_minimoProducto.setSelected(productoBean.getcon_precio_minimo());
			this.jInternalFrameDetalleFormProducto.jCheckBoxcon_loteProducto.setSelected(productoBean.getcon_lote());
			this.jInternalFrameDetalleFormProducto.jCheckBoxcon_confirmacionProducto.setSelected(productoBean.getcon_confirmacion());
			this.jInternalFrameDetalleFormProducto.jCheckBoxcon_presupuestoProducto.setSelected(productoBean.getcon_presupuesto());
			this.jInternalFrameDetalleFormProducto.jCheckBoxcon_importacionProducto.setSelected(productoBean.getcon_importacion());
			this.jInternalFrameDetalleFormProducto.jCheckBoxcon_finalProducto.setSelected(productoBean.getcon_final());
			this.jInternalFrameDetalleFormProducto.jCheckBoxcon_consepProducto.setSelected(productoBean.getcon_consep());
			this.jInternalFrameDetalleFormProducto.jCheckBoxcon_serieProducto.setSelected(productoBean.getcon_serie());
			this.jInternalFrameDetalleFormProducto.jCheckBoxcon_balanzaProducto.setSelected(productoBean.getcon_balanza());
			this.jInternalFrameDetalleFormProducto.jTextFieldaltoProducto.setText(productoBean.getalto().toString());
			this.jInternalFrameDetalleFormProducto.jTextFieldanchoProducto.setText(productoBean.getancho().toString());
			this.jInternalFrameDetalleFormProducto.jTextFieldlargoProducto.setText(productoBean.getlargo().toString());
			this.jInternalFrameDetalleFormProducto.jTextFieldvolumenProducto.setText(productoBean.getvolumen().toString());
			this.jInternalFrameDetalleFormProducto.jTextFieldpesoProducto.setText(productoBean.getpeso().toString());
			this.jInternalFrameDetalleFormProducto.jTextFieldgramosProducto.setText(productoBean.getgramos().toString());
			this.jInternalFrameDetalleFormProducto.jTextFieldunidades_cajaProducto.setText(productoBean.getunidades_caja().toString());
			this.jInternalFrameDetalleFormProducto.jTextFieldmargenProducto.setText(productoBean.getmargen().toString());
			this.jInternalFrameDetalleFormProducto.jTextFieldfactorProducto.setText(productoBean.getfactor().toString());
			this.jInternalFrameDetalleFormProducto.jTextFieldfobProducto.setText(productoBean.getfob().toString());
			this.jInternalFrameDetalleFormProducto.jTextFieldfob2Producto.setText(productoBean.getfob2().toString());
			this.jInternalFrameDetalleFormProducto.jTextAreagrupoProducto.setText(productoBean.getgrupo());
			this.jInternalFrameDetalleFormProducto.jTextAreareferenciaProducto.setText(productoBean.getreferencia());
			this.jInternalFrameDetalleFormProducto.jTextAreaaplicacionProducto.setText(productoBean.getaplicacion());
			this.jInternalFrameDetalleFormProducto.jTextAreaprocedenciaProducto.setText(productoBean.getprocedencia());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoReturnGeneralToBeanProducto(ProductoParameterReturnGeneral productoReturnGeneral,ProductoBean productoBean,Boolean conDefault) throws Exception { 
		try {
			Producto productoLocal=new Producto();
			
			productoLocal=productoReturnGeneral.getProducto();
			
			
			if(conColumnasBase) {if(conDefault || (!conDefault && productoLocal.getId()!=null && !productoLocal.getId().equals(0L))) {productoBean.setId(productoLocal.getId());}}
			if(conDefault || (!conDefault && productoLocal.getcodigo()!=null && !productoLocal.getcodigo().equals(""))) {productoBean.setcodigo(productoLocal.getcodigo());}
			if(conDefault || (!conDefault && productoLocal.getnombre()!=null && !productoLocal.getnombre().equals(""))) {productoBean.setnombre(productoLocal.getnombre());}
			if(conDefault || (!conDefault && productoLocal.getnombre_extranjero()!=null && !productoLocal.getnombre_extranjero().equals(""))) {productoBean.setnombre_extranjero(productoLocal.getnombre_extranjero());}
			if(conDefault || (!conDefault && productoLocal.getresumen_detalle()!=null && !productoLocal.getresumen_detalle().equals(""))) {productoBean.setresumen_detalle(productoLocal.getresumen_detalle());}
			if(conDefault || (!conDefault && productoLocal.getcodigo_barra()!=null && !productoLocal.getcodigo_barra().equals(""))) {productoBean.setcodigo_barra(productoLocal.getcodigo_barra());}
			if(conDefault || (!conDefault && productoLocal.getid_linea()!=null && !productoLocal.getid_linea().equals(-1L))) {productoBean.setid_linea(productoLocal.getid_linea());}
			if(conDefault || (!conDefault && productoLocal.getid_linea_grupo()!=null && !productoLocal.getid_linea_grupo().equals(null))) {productoBean.setid_linea_grupo(productoLocal.getid_linea_grupo());}
			if(conDefault || (!conDefault && productoLocal.getid_linea_categoria()!=null && !productoLocal.getid_linea_categoria().equals(null))) {productoBean.setid_linea_categoria(productoLocal.getid_linea_categoria());}
			if(conDefault || (!conDefault && productoLocal.getid_linea_marca()!=null && !productoLocal.getid_linea_marca().equals(null))) {productoBean.setid_linea_marca(productoLocal.getid_linea_marca());}
			if(conDefault || (!conDefault && productoLocal.getid_tipo_producto_servicio()!=null && !productoLocal.getid_tipo_producto_servicio().equals(-1L))) {productoBean.setid_tipo_producto_servicio(productoLocal.getid_tipo_producto_servicio());}
			if(conDefault || (!conDefault && productoLocal.getid_tipo_producto_servicio_inven()!=null && !productoLocal.getid_tipo_producto_servicio_inven().equals(-1L))) {productoBean.setid_tipo_producto_servicio_inven(productoLocal.getid_tipo_producto_servicio_inven());}
			if(conDefault || (!conDefault && productoLocal.getid_tipo_costeo()!=null && !productoLocal.getid_tipo_costeo().equals(-1L))) {productoBean.setid_tipo_costeo(productoLocal.getid_tipo_costeo());}
			if(conDefault || (!conDefault && productoLocal.getid_unidad()!=null && !productoLocal.getid_unidad().equals(-1L))) {productoBean.setid_unidad(productoLocal.getid_unidad());}
			if(conDefault || (!conDefault && productoLocal.getid_unidad_peso()!=null && !productoLocal.getid_unidad_peso().equals(-1L))) {productoBean.setid_unidad_peso(productoLocal.getid_unidad_peso());}
			if(conDefault || (!conDefault && productoLocal.getid_arancel()!=null && !productoLocal.getid_arancel().equals(-1L))) {productoBean.setid_arancel(productoLocal.getid_arancel());}
			if(conDefault || (!conDefault && productoLocal.getid_cliente()!=null && !productoLocal.getid_cliente().equals(-1L))) {productoBean.setid_cliente(productoLocal.getid_cliente());}
			if(conDefault || (!conDefault && productoLocal.getid_cliente_proveedor_defecto()!=null && !productoLocal.getid_cliente_proveedor_defecto().equals(-1L))) {productoBean.setid_cliente_proveedor_defecto(productoLocal.getid_cliente_proveedor_defecto());}
			if(conDefault || (!conDefault && productoLocal.getesta_activo()!=null && !productoLocal.getesta_activo().equals(false))) {productoBean.setesta_activo(productoLocal.getesta_activo());}
			if(conDefault || (!conDefault && productoLocal.getdescripcion()!=null && !productoLocal.getdescripcion().equals(""))) {productoBean.setdescripcion(productoLocal.getdescripcion());}
			if(conDefault || (!conDefault && productoLocal.getprecio()!=null && !productoLocal.getprecio().equals(0.0))) {productoBean.setprecio(productoLocal.getprecio());}
			if(conDefault || (!conDefault && productoLocal.getiva()!=null && !productoLocal.getiva().equals(0.0))) {productoBean.setiva(productoLocal.getiva());}
			if(conDefault || (!conDefault && productoLocal.getiva_valor()!=null && !productoLocal.getiva_valor().equals(0.0))) {productoBean.setiva_valor(productoLocal.getiva_valor());}
			if(conDefault || (!conDefault && productoLocal.getice()!=null && !productoLocal.getice().equals(0.0))) {productoBean.setice(productoLocal.getice());}
			if(conDefault || (!conDefault && productoLocal.getice_valor()!=null && !productoLocal.getice_valor().equals(0.0))) {productoBean.setice_valor(productoLocal.getice_valor());}
			if(conDefault || (!conDefault && productoLocal.getdescuento()!=null && !productoLocal.getdescuento().equals(0.0))) {productoBean.setdescuento(productoLocal.getdescuento());}
			if(conDefault || (!conDefault && productoLocal.getdescuento_valor()!=null && !productoLocal.getdescuento_valor().equals(0.0))) {productoBean.setdescuento_valor(productoLocal.getdescuento_valor());}
			if(conDefault || (!conDefault && productoLocal.getarancel_porcentaje()!=null && !productoLocal.getarancel_porcentaje().equals(0.0))) {productoBean.setarancel_porcentaje(productoLocal.getarancel_porcentaje());}
			if(conDefault || (!conDefault && productoLocal.getarancel_valor()!=null && !productoLocal.getarancel_valor().equals(0.0))) {productoBean.setarancel_valor(productoLocal.getarancel_valor());}
			if(conDefault || (!conDefault && productoLocal.getcomision()!=null && !productoLocal.getcomision().equals(0.0))) {productoBean.setcomision(productoLocal.getcomision());}
			if(conDefault || (!conDefault && productoLocal.getcomision_valor()!=null && !productoLocal.getcomision_valor().equals(0.0))) {productoBean.setcomision_valor(productoLocal.getcomision_valor());}
			if(conDefault || (!conDefault && productoLocal.getdias_produccion()!=null && !productoLocal.getdias_produccion().equals(0.0))) {productoBean.setdias_produccion(productoLocal.getdias_produccion());}
			if(conDefault || (!conDefault && productoLocal.getcon_stock_negativo()!=null && !productoLocal.getcon_stock_negativo().equals(false))) {productoBean.setcon_stock_negativo(productoLocal.getcon_stock_negativo());}
			if(conDefault || (!conDefault && productoLocal.getcon_precio_minimo()!=null && !productoLocal.getcon_precio_minimo().equals(false))) {productoBean.setcon_precio_minimo(productoLocal.getcon_precio_minimo());}
			if(conDefault || (!conDefault && productoLocal.getcon_lote()!=null && !productoLocal.getcon_lote().equals(false))) {productoBean.setcon_lote(productoLocal.getcon_lote());}
			if(conDefault || (!conDefault && productoLocal.getcon_confirmacion()!=null && !productoLocal.getcon_confirmacion().equals(false))) {productoBean.setcon_confirmacion(productoLocal.getcon_confirmacion());}
			if(conDefault || (!conDefault && productoLocal.getcon_presupuesto()!=null && !productoLocal.getcon_presupuesto().equals(false))) {productoBean.setcon_presupuesto(productoLocal.getcon_presupuesto());}
			if(conDefault || (!conDefault && productoLocal.getcon_importacion()!=null && !productoLocal.getcon_importacion().equals(false))) {productoBean.setcon_importacion(productoLocal.getcon_importacion());}
			if(conDefault || (!conDefault && productoLocal.getcon_final()!=null && !productoLocal.getcon_final().equals(false))) {productoBean.setcon_final(productoLocal.getcon_final());}
			if(conDefault || (!conDefault && productoLocal.getcon_consep()!=null && !productoLocal.getcon_consep().equals(false))) {productoBean.setcon_consep(productoLocal.getcon_consep());}
			if(conDefault || (!conDefault && productoLocal.getcon_serie()!=null && !productoLocal.getcon_serie().equals(false))) {productoBean.setcon_serie(productoLocal.getcon_serie());}
			if(conDefault || (!conDefault && productoLocal.getcon_balanza()!=null && !productoLocal.getcon_balanza().equals(false))) {productoBean.setcon_balanza(productoLocal.getcon_balanza());}
			if(conDefault || (!conDefault && productoLocal.getalto()!=null && !productoLocal.getalto().equals(0.0))) {productoBean.setalto(productoLocal.getalto());}
			if(conDefault || (!conDefault && productoLocal.getancho()!=null && !productoLocal.getancho().equals(0.0))) {productoBean.setancho(productoLocal.getancho());}
			if(conDefault || (!conDefault && productoLocal.getlargo()!=null && !productoLocal.getlargo().equals(0.0))) {productoBean.setlargo(productoLocal.getlargo());}
			if(conDefault || (!conDefault && productoLocal.getvolumen()!=null && !productoLocal.getvolumen().equals(0.0))) {productoBean.setvolumen(productoLocal.getvolumen());}
			if(conDefault || (!conDefault && productoLocal.getpeso()!=null && !productoLocal.getpeso().equals(0.0))) {productoBean.setpeso(productoLocal.getpeso());}
			if(conDefault || (!conDefault && productoLocal.getgramos()!=null && !productoLocal.getgramos().equals(0.0))) {productoBean.setgramos(productoLocal.getgramos());}
			if(conDefault || (!conDefault && productoLocal.getunidades_caja()!=null && !productoLocal.getunidades_caja().equals(0.0))) {productoBean.setunidades_caja(productoLocal.getunidades_caja());}
			if(conDefault || (!conDefault && productoLocal.getmargen()!=null && !productoLocal.getmargen().equals(0.0))) {productoBean.setmargen(productoLocal.getmargen());}
			if(conDefault || (!conDefault && productoLocal.getfactor()!=null && !productoLocal.getfactor().equals(0.0))) {productoBean.setfactor(productoLocal.getfactor());}
			if(conDefault || (!conDefault && productoLocal.getfob()!=null && !productoLocal.getfob().equals(0.0))) {productoBean.setfob(productoLocal.getfob());}
			if(conDefault || (!conDefault && productoLocal.getfob2()!=null && !productoLocal.getfob2().equals(0.0))) {productoBean.setfob2(productoLocal.getfob2());}
			if(conDefault || (!conDefault && productoLocal.getid_tipo_producto()!=null && !productoLocal.getid_tipo_producto().equals(-1L))) {productoBean.setid_tipo_producto(productoLocal.getid_tipo_producto());}
			if(conDefault || (!conDefault && productoLocal.getid_color_producto()!=null && !productoLocal.getid_color_producto().equals(-1L))) {productoBean.setid_color_producto(productoLocal.getid_color_producto());}
			if(conDefault || (!conDefault && productoLocal.getid_clase_producto()!=null && !productoLocal.getid_clase_producto().equals(-1L))) {productoBean.setid_clase_producto(productoLocal.getid_clase_producto());}
			if(conDefault || (!conDefault && productoLocal.getid_efecto_producto()!=null && !productoLocal.getid_efecto_producto().equals(-1L))) {productoBean.setid_efecto_producto(productoLocal.getid_efecto_producto());}
			if(conDefault || (!conDefault && productoLocal.getid_marca_producto()!=null && !productoLocal.getid_marca_producto().equals(-1L))) {productoBean.setid_marca_producto(productoLocal.getid_marca_producto());}
			if(conDefault || (!conDefault && productoLocal.getid_modelo_producto()!=null && !productoLocal.getid_modelo_producto().equals(-1L))) {productoBean.setid_modelo_producto(productoLocal.getid_modelo_producto());}
			if(conDefault || (!conDefault && productoLocal.getid_material_producto()!=null && !productoLocal.getid_material_producto().equals(-1L))) {productoBean.setid_material_producto(productoLocal.getid_material_producto());}
			if(conDefault || (!conDefault && productoLocal.getid_segmento_producto()!=null && !productoLocal.getid_segmento_producto().equals(-1L))) {productoBean.setid_segmento_producto(productoLocal.getid_segmento_producto());}
			if(conDefault || (!conDefault && productoLocal.getid_talla_producto()!=null && !productoLocal.getid_talla_producto().equals(-1L))) {productoBean.setid_talla_producto(productoLocal.getid_talla_producto());}
			if(conDefault || (!conDefault && productoLocal.getgrupo()!=null && !productoLocal.getgrupo().equals(""))) {productoBean.setgrupo(productoLocal.getgrupo());}
			if(conDefault || (!conDefault && productoLocal.getreferencia()!=null && !productoLocal.getreferencia().equals(""))) {productoBean.setreferencia(productoLocal.getreferencia());}
			if(conDefault || (!conDefault && productoLocal.getaplicacion()!=null && !productoLocal.getaplicacion().equals(""))) {productoBean.setaplicacion(productoLocal.getaplicacion());}
			if(conDefault || (!conDefault && productoLocal.getprocedencia()!=null && !productoLocal.getprocedencia().equals(""))) {productoBean.setprocedencia(productoLocal.getprocedencia());}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	@SuppressWarnings("rawtypes")
	public static void setActualComboBoxProductoGenerico(Long idProductoSeleccionado,JComboBox jComboBoxProducto,List<Producto> productosLocal)throws Exception {
		try {
			Producto  productoTemp=null;

			for(Producto productoAux:productosLocal) {
				if(productoAux.getId()!=null && productoAux.getId().equals(idProductoSeleccionado)) {
					productoTemp=productoAux;
					break;
				}
			}

			jComboBoxProducto.setSelectedItem(productoTemp);

		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("rawtypes")
	public static void setHotKeysComboBoxProductoGenerico(JComboBox jComboBoxProducto,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda)throws Exception {
		try {
			//GLOBAL(id_empresa,id_sucursal,id_ejercicio)
			//BASICO(normal)
			//CON_BUSQUEDA(Permite buscar Fk)
			
			String sKeyStrokeName="";
			KeyStroke keyStrokeControl=null;
			
			if(!sTipoBusqueda.equals("GLOBAL")) {
				
				//BUSCAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSCAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSCAR");
				
				jComboBoxProducto.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxProducto.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Busqueda"));
				//BUSCAR
				
				
				//ACTUALIZAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_ACTUALIZAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_ACTUALIZAR");
				
				jComboBoxProducto.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxProducto.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Update"));
				//ACTUALIZAR
				
				if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxProducto.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
						jComboBoxProducto.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));						
					}
					
					/*
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxProducto.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					} else {
						jComboBoxProducto.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					}
					*/
				}								
				
				//CON_BUSQUEDA								
				if(sTipoBusqueda.contains("CON_BUSQUEDA")) {
					sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSQUEDA");
					keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSQUEDA");
							
					jComboBoxProducto.getInputMap().put(keyStrokeControl, sKeyStrokeName);
					jComboBoxProducto.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction));
				}
				//CON_BUSQUEDA
				
				
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	@SuppressWarnings("rawtypes")
	public void setHotKeysComboBoxGenerico(JComboBox jComboBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
			if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
				jComboBox.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			} else {
				jComboBox.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			}
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextFieldGenerico(JTextField jTextField,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextField.addFocusListener(new TextFieldFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		jTextField.addActionListener(new TextFieldActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextAreaGenerico(JTextArea jTextArea,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextArea.addFocusListener(new TextAreaFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jTextArea.addActionListener(new TextAreaActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJLabelGenerico(JLabel jLabel,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jLabel.addFocusListener(new LabelFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jLabel.addActionListener(new LabelActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJCheckBoxGenerico(JCheckBox jCheckBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jCheckBox.addFocusListener(new CheckBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//SI SE DEFINE AL CAMBIAR VALOR, ESTE NUEVO VALOR NO SE ENVIA AL EVENTO
		//jCheckBox.addItemListener(new CheckBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJDateChooserGenerico(JDateChooser jDateChooser,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		FuncionesSwing.addDateListener(jDateChooser, jInternalFrameBase, sNombreHotKeyAbstractAction);
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJButtonGenerico(JButton jButton,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jButton.addActionListener(new ButtonActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	public void jButtonRelacionActionPerformed(String sTipo,ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado) {
		//ABRIR RELACIONES
		try {
			
		if(sTipo.equals("ProveedorProducto")) {
			jButtonProveedorProductoActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("Precio")) {
			jButtonPrecioActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("DetalleImpuestoInven")) {
			jButtonDetalleImpuestoInvenActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("PresupuestoVentas")) {
			jButtonPresupuestoVentasActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("PoliticaProducto")) {
			jButtonPoliticaProductoActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("SerieProducto")) {
			jButtonSerieProductoActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("UbicacionProdu")) {
			jButtonUbicacionProduActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("ParametroProducto")) {
			jButtonParametroProductoActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("ProductoUnidad")) {
			jButtonProductoUnidadActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("Ingrediente")) {
			jButtonIngredienteActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("ProductoCarac")) {
			jButtonProductoCaracActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("ServicioCliente")) {
			jButtonServicioClienteActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("ProductoPromocion")) {
			jButtonProductoPromocionActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("ProductoEspeci")) {
			jButtonProductoEspeciActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("ProductoReempla")) {
			jButtonProductoReemplaActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("ProductoEstadistica")) {
			jButtonProductoEstadisticaActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("PoliticaFactu")) {
			jButtonPoliticaFactuActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("ProductoCuentaContable")) {
			jButtonProductoCuentaContableActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("BodegaProducto")) {
			jButtonBodegaProductoActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("PresupuestoProducto")) {
			jButtonPresupuestoProductoActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("SaldoMesProducto")) {
			jButtonSaldoMesProductoActionPerformed(evt,rowIndex,true,false,null);
		}
		} catch (Exception e) {
			FuncionesSwing.manageException2(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	public String getDescripcionFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		String sDescripcion="";
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			producto=(Producto) productoLogic.getProductos().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			producto =(Producto) productos.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		if(sTipo.equals("Empresa")) {
			//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
			if(!producto.getIsNew() && !producto.getIsChanged() && !producto.getIsDeleted()) {
				sDescripcion=producto.getempresa_descripcion();
			} else {
				//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
				sDescripcion=producto.getempresa_descripcion();
			}
		}

		if(sTipo.equals("Sucursal")) {
			//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
			if(!producto.getIsNew() && !producto.getIsChanged() && !producto.getIsDeleted()) {
				sDescripcion=producto.getsucursal_descripcion();
			} else {
				//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
				sDescripcion=producto.getsucursal_descripcion();
			}
		}

		if(sTipo.equals("Linea")) {
			//sDescripcion=this.getActualLineaForeignKeyDescripcion((Long)value);
			if(!producto.getIsNew() && !producto.getIsChanged() && !producto.getIsDeleted()) {
				sDescripcion=producto.getlinea_descripcion();
			} else {
				//sDescripcion=this.getActualLineaForeignKeyDescripcion((Long)value);
				sDescripcion=producto.getlinea_descripcion();
			}
		}

		if(sTipo.equals("LineaGrupo")) {
			//sDescripcion=this.getActualLineaGrupoForeignKeyDescripcion((Long)value);
			if(!producto.getIsNew() && !producto.getIsChanged() && !producto.getIsDeleted()) {
				sDescripcion=producto.getlineagrupo_descripcion();
			} else {
				//ES DEPENDIENTE, SE FORZA DESDE DESCRIPCION
				sDescripcion=producto.getlineagrupo_descripcion();
			}
		}

		if(sTipo.equals("LineaCategoria")) {
			//sDescripcion=this.getActualLineaCategoriaForeignKeyDescripcion((Long)value);
			if(!producto.getIsNew() && !producto.getIsChanged() && !producto.getIsDeleted()) {
				sDescripcion=producto.getlineacategoria_descripcion();
			} else {
				//ES DEPENDIENTE, SE FORZA DESDE DESCRIPCION
				sDescripcion=producto.getlineacategoria_descripcion();
			}
		}

		if(sTipo.equals("LineaMarca")) {
			//sDescripcion=this.getActualLineaMarcaForeignKeyDescripcion((Long)value);
			if(!producto.getIsNew() && !producto.getIsChanged() && !producto.getIsDeleted()) {
				sDescripcion=producto.getlineamarca_descripcion();
			} else {
				//ES DEPENDIENTE, SE FORZA DESDE DESCRIPCION
				sDescripcion=producto.getlineamarca_descripcion();
			}
		}

		if(sTipo.equals("TipoProductoServicio")) {
			//sDescripcion=this.getActualTipoProductoServicioForeignKeyDescripcion((Long)value);
			if(!producto.getIsNew() && !producto.getIsChanged() && !producto.getIsDeleted()) {
				sDescripcion=producto.gettipoproductoservicio_descripcion();
			} else {
				//sDescripcion=this.getActualTipoProductoServicioForeignKeyDescripcion((Long)value);
				sDescripcion=producto.gettipoproductoservicio_descripcion();
			}
		}

		if(sTipo.equals("TipoProductoServicioInven")) {
			//sDescripcion=this.getActualTipoProductoServicioInvenForeignKeyDescripcion((Long)value);
			if(!producto.getIsNew() && !producto.getIsChanged() && !producto.getIsDeleted()) {
				sDescripcion=producto.gettipoproductoservicioinven_descripcion();
			} else {
				//sDescripcion=this.getActualTipoProductoServicioInvenForeignKeyDescripcion((Long)value);
				sDescripcion=producto.gettipoproductoservicioinven_descripcion();
			}
		}

		if(sTipo.equals("TipoCosteo")) {
			//sDescripcion=this.getActualTipoCosteoForeignKeyDescripcion((Long)value);
			if(!producto.getIsNew() && !producto.getIsChanged() && !producto.getIsDeleted()) {
				sDescripcion=producto.gettipocosteo_descripcion();
			} else {
				//sDescripcion=this.getActualTipoCosteoForeignKeyDescripcion((Long)value);
				sDescripcion=producto.gettipocosteo_descripcion();
			}
		}

		if(sTipo.equals("Unidad")) {
			//sDescripcion=this.getActualUnidadForeignKeyDescripcion((Long)value);
			if(!producto.getIsNew() && !producto.getIsChanged() && !producto.getIsDeleted()) {
				sDescripcion=producto.getunidad_descripcion();
			} else {
				//sDescripcion=this.getActualUnidadForeignKeyDescripcion((Long)value);
				sDescripcion=producto.getunidad_descripcion();
			}
		}

		if(sTipo.equals("UnidadPeso")) {
			//sDescripcion=this.getActualUnidadPesoForeignKeyDescripcion((Long)value);
			if(!producto.getIsNew() && !producto.getIsChanged() && !producto.getIsDeleted()) {
				sDescripcion=producto.getunidadpeso_descripcion();
			} else {
				//sDescripcion=this.getActualUnidadPesoForeignKeyDescripcion((Long)value);
				sDescripcion=producto.getunidadpeso_descripcion();
			}
		}

		if(sTipo.equals("Arancel")) {
			//sDescripcion=this.getActualArancelForeignKeyDescripcion((Long)value);
			if(!producto.getIsNew() && !producto.getIsChanged() && !producto.getIsDeleted()) {
				sDescripcion=producto.getarancel_descripcion();
			} else {
				//sDescripcion=this.getActualArancelForeignKeyDescripcion((Long)value);
				sDescripcion=producto.getarancel_descripcion();
			}
		}

		if(sTipo.equals("Cliente")) {
			//sDescripcion=this.getActualClienteForeignKeyDescripcion((Long)value);
			if(!producto.getIsNew() && !producto.getIsChanged() && !producto.getIsDeleted()) {
				sDescripcion=producto.getcliente_descripcion();
			} else {
				//sDescripcion=this.getActualClienteForeignKeyDescripcion((Long)value);
				sDescripcion=producto.getcliente_descripcion();
			}
		}

		if(sTipo.equals("ClienteProveedorDefecto")) {
			//sDescripcion=this.getActualClienteProveedorDefectoForeignKeyDescripcion((Long)value);
			if(!producto.getIsNew() && !producto.getIsChanged() && !producto.getIsDeleted()) {
				sDescripcion=producto.getclienteproveedordefecto_descripcion();
			} else {
				//sDescripcion=this.getActualClienteProveedorDefectoForeignKeyDescripcion((Long)value);
				sDescripcion=producto.getclienteproveedordefecto_descripcion();
			}
		}

		if(sTipo.equals("TipoProducto")) {
			//sDescripcion=this.getActualTipoProductoForeignKeyDescripcion((Long)value);
			if(!producto.getIsNew() && !producto.getIsChanged() && !producto.getIsDeleted()) {
				sDescripcion=producto.gettipoproducto_descripcion();
			} else {
				//sDescripcion=this.getActualTipoProductoForeignKeyDescripcion((Long)value);
				sDescripcion=producto.gettipoproducto_descripcion();
			}
		}

		if(sTipo.equals("ColorProducto")) {
			//sDescripcion=this.getActualColorProductoForeignKeyDescripcion((Long)value);
			if(!producto.getIsNew() && !producto.getIsChanged() && !producto.getIsDeleted()) {
				sDescripcion=producto.getcolorproducto_descripcion();
			} else {
				//sDescripcion=this.getActualColorProductoForeignKeyDescripcion((Long)value);
				sDescripcion=producto.getcolorproducto_descripcion();
			}
		}

		if(sTipo.equals("ClaseProducto")) {
			//sDescripcion=this.getActualClaseProductoForeignKeyDescripcion((Long)value);
			if(!producto.getIsNew() && !producto.getIsChanged() && !producto.getIsDeleted()) {
				sDescripcion=producto.getclaseproducto_descripcion();
			} else {
				//sDescripcion=this.getActualClaseProductoForeignKeyDescripcion((Long)value);
				sDescripcion=producto.getclaseproducto_descripcion();
			}
		}

		if(sTipo.equals("EfectoProducto")) {
			//sDescripcion=this.getActualEfectoProductoForeignKeyDescripcion((Long)value);
			if(!producto.getIsNew() && !producto.getIsChanged() && !producto.getIsDeleted()) {
				sDescripcion=producto.getefectoproducto_descripcion();
			} else {
				//sDescripcion=this.getActualEfectoProductoForeignKeyDescripcion((Long)value);
				sDescripcion=producto.getefectoproducto_descripcion();
			}
		}

		if(sTipo.equals("MarcaProducto")) {
			//sDescripcion=this.getActualMarcaProductoForeignKeyDescripcion((Long)value);
			if(!producto.getIsNew() && !producto.getIsChanged() && !producto.getIsDeleted()) {
				sDescripcion=producto.getmarcaproducto_descripcion();
			} else {
				//sDescripcion=this.getActualMarcaProductoForeignKeyDescripcion((Long)value);
				sDescripcion=producto.getmarcaproducto_descripcion();
			}
		}

		if(sTipo.equals("ModeloProducto")) {
			//sDescripcion=this.getActualModeloProductoForeignKeyDescripcion((Long)value);
			if(!producto.getIsNew() && !producto.getIsChanged() && !producto.getIsDeleted()) {
				sDescripcion=producto.getmodeloproducto_descripcion();
			} else {
				//sDescripcion=this.getActualModeloProductoForeignKeyDescripcion((Long)value);
				sDescripcion=producto.getmodeloproducto_descripcion();
			}
		}

		if(sTipo.equals("MaterialProducto")) {
			//sDescripcion=this.getActualMaterialProductoForeignKeyDescripcion((Long)value);
			if(!producto.getIsNew() && !producto.getIsChanged() && !producto.getIsDeleted()) {
				sDescripcion=producto.getmaterialproducto_descripcion();
			} else {
				//sDescripcion=this.getActualMaterialProductoForeignKeyDescripcion((Long)value);
				sDescripcion=producto.getmaterialproducto_descripcion();
			}
		}

		if(sTipo.equals("SegmentoProducto")) {
			//sDescripcion=this.getActualSegmentoProductoForeignKeyDescripcion((Long)value);
			if(!producto.getIsNew() && !producto.getIsChanged() && !producto.getIsDeleted()) {
				sDescripcion=producto.getsegmentoproducto_descripcion();
			} else {
				//sDescripcion=this.getActualSegmentoProductoForeignKeyDescripcion((Long)value);
				sDescripcion=producto.getsegmentoproducto_descripcion();
			}
		}

		if(sTipo.equals("TallaProducto")) {
			//sDescripcion=this.getActualTallaProductoForeignKeyDescripcion((Long)value);
			if(!producto.getIsNew() && !producto.getIsChanged() && !producto.getIsDeleted()) {
				sDescripcion=producto.gettallaproducto_descripcion();
			} else {
				//sDescripcion=this.getActualTallaProductoForeignKeyDescripcion((Long)value);
				sDescripcion=producto.gettallaproducto_descripcion();
			}
		}

		
		return sDescripcion;
	}
	
	public Color getColorFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		Color color=Color.WHITE;
		
		Producto productoRow=new Producto();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			productoRow=(Producto) productoLogic.getProductos().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			productoRow=(Producto) productos.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		
		return color;
	}
	
	
	
	
	public void jButtonProveedorProductoActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Producto producto) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormProducto==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.producto = (Producto)this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.producto = (Producto)this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(producto!=null) {
						this.producto = producto;
					} else {
						this.producto = new Producto();
					}
				}

				if(this.isTienePermisosProveedorProducto && this.permiteMantenimiento(this.producto)) {
					ProveedorProductoBeanSwingJInternalFrame proveedorproductoBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormProducto.proveedorproductoBeanSwingJInternalFramePopup=new ProveedorProductoBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormProducto.proveedorproductoBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						proveedorproductoBeanSwingJInternalFrame=this.jInternalFrameDetalleFormProducto.proveedorproductoBeanSwingJInternalFramePopup;
					} else {
						proveedorproductoBeanSwingJInternalFrame=this.jInternalFrameDetalleFormProducto.proveedorproductoBeanSwingJInternalFrame;
					}

					List<Producto> productos=new ArrayList<Producto>();
					productos.add(this.producto);
					if(!esRelacionado) {
						//proveedorproductoBeanSwingJInternalFrame.proveedorproductoSessionBean.setConGuardarRelaciones(false);
						//proveedorproductoBeanSwingJInternalFrame.proveedorproductoSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					proveedorproductoBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormProducto.cargarProveedorProductoBeanSwingJInternalFrame(productos,this.producto,proveedorproductoBeanSwingJInternalFrame,/*conInicializar,*/proveedorproductoBeanSwingJInternalFrame.proveedorproductoSessionBean.getConGuardarRelaciones(),proveedorproductoBeanSwingJInternalFrame.proveedorproductoSessionBean.getEsGuardarRelacionado());
					proveedorproductoBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						proveedorproductoBeanSwingJInternalFrame.actualizarEstadoPanelsProveedorProducto("no_relacionado");

						proveedorproductoBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(ProveedorProductoConstantesFunciones.ITAMANIOFILATABLA + (ProveedorProductoConstantesFunciones.ITAMANIOFILATABLA/2));

						proveedorproductoBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderProducto=(TitledBorder)this.jScrollPanelDatosProducto.getBorder();
						TitledBorder titledBorderProveedorProducto=(TitledBorder)proveedorproductoBeanSwingJInternalFrame.jScrollPanelDatosProveedorProducto.getBorder();

						titledBorderProveedorProducto.setTitle(titledBorderProducto.getTitle() + " -> Producto Proveedor");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,proveedorproductoBeanSwingJInternalFrame);
						}

						proveedorproductoBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(proveedorproductoBeanSwingJInternalFrame);

						proveedorproductoBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.productoSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Producto Proveedor",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonPrecioActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Producto producto) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormProducto==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.producto = (Producto)this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.producto = (Producto)this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(producto!=null) {
						this.producto = producto;
					} else {
						this.producto = new Producto();
					}
				}

				if(this.isTienePermisosPrecio && this.permiteMantenimiento(this.producto)) {
					PrecioBeanSwingJInternalFrame precioBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormProducto.precioBeanSwingJInternalFramePopup=new PrecioBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormProducto.precioBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						precioBeanSwingJInternalFrame=this.jInternalFrameDetalleFormProducto.precioBeanSwingJInternalFramePopup;
					} else {
						precioBeanSwingJInternalFrame=this.jInternalFrameDetalleFormProducto.precioBeanSwingJInternalFrame;
					}

					List<Producto> productos=new ArrayList<Producto>();
					productos.add(this.producto);
					if(!esRelacionado) {
						//precioBeanSwingJInternalFrame.precioSessionBean.setConGuardarRelaciones(false);
						//precioBeanSwingJInternalFrame.precioSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					precioBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormProducto.cargarPrecioBeanSwingJInternalFrame(productos,this.producto,precioBeanSwingJInternalFrame,/*conInicializar,*/precioBeanSwingJInternalFrame.precioSessionBean.getConGuardarRelaciones(),precioBeanSwingJInternalFrame.precioSessionBean.getEsGuardarRelacionado());
					precioBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						precioBeanSwingJInternalFrame.actualizarEstadoPanelsPrecio("no_relacionado");

						precioBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(PrecioConstantesFunciones.ITAMANIOFILATABLA + (PrecioConstantesFunciones.ITAMANIOFILATABLA/2));

						precioBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderProducto=(TitledBorder)this.jScrollPanelDatosProducto.getBorder();
						TitledBorder titledBorderPrecio=(TitledBorder)precioBeanSwingJInternalFrame.jScrollPanelDatosPrecio.getBorder();

						titledBorderPrecio.setTitle(titledBorderProducto.getTitle() + " -> Precio");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,precioBeanSwingJInternalFrame);
						}

						precioBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(precioBeanSwingJInternalFrame);

						precioBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.productoSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Precio",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonDetalleImpuestoInvenActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Producto producto) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormProducto==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.producto = (Producto)this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.producto = (Producto)this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(producto!=null) {
						this.producto = producto;
					} else {
						this.producto = new Producto();
					}
				}

				if(this.isTienePermisosDetalleImpuestoInven && this.permiteMantenimiento(this.producto)) {
					DetalleImpuestoInvenBeanSwingJInternalFrame detalleimpuestoinvenBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenBeanSwingJInternalFramePopup=new DetalleImpuestoInvenBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						detalleimpuestoinvenBeanSwingJInternalFrame=this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenBeanSwingJInternalFramePopup;
					} else {
						detalleimpuestoinvenBeanSwingJInternalFrame=this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenBeanSwingJInternalFrame;
					}

					List<Producto> productos=new ArrayList<Producto>();
					productos.add(this.producto);
					if(!esRelacionado) {
						//detalleimpuestoinvenBeanSwingJInternalFrame.detalleimpuestoinvenSessionBean.setConGuardarRelaciones(false);
						//detalleimpuestoinvenBeanSwingJInternalFrame.detalleimpuestoinvenSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					detalleimpuestoinvenBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormProducto.cargarDetalleImpuestoInvenBeanSwingJInternalFrame(productos,this.producto,detalleimpuestoinvenBeanSwingJInternalFrame,/*conInicializar,*/detalleimpuestoinvenBeanSwingJInternalFrame.detalleimpuestoinvenSessionBean.getConGuardarRelaciones(),detalleimpuestoinvenBeanSwingJInternalFrame.detalleimpuestoinvenSessionBean.getEsGuardarRelacionado());
					detalleimpuestoinvenBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						detalleimpuestoinvenBeanSwingJInternalFrame.actualizarEstadoPanelsDetalleImpuestoInven("no_relacionado");

						detalleimpuestoinvenBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(DetalleImpuestoInvenConstantesFunciones.ITAMANIOFILATABLA + (DetalleImpuestoInvenConstantesFunciones.ITAMANIOFILATABLA/2));

						detalleimpuestoinvenBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderProducto=(TitledBorder)this.jScrollPanelDatosProducto.getBorder();
						TitledBorder titledBorderDetalleImpuestoInven=(TitledBorder)detalleimpuestoinvenBeanSwingJInternalFrame.jScrollPanelDatosDetalleImpuestoInven.getBorder();

						titledBorderDetalleImpuestoInven.setTitle(titledBorderProducto.getTitle() + " -> Detalle Impuesto Inven");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,detalleimpuestoinvenBeanSwingJInternalFrame);
						}

						detalleimpuestoinvenBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(detalleimpuestoinvenBeanSwingJInternalFrame);

						detalleimpuestoinvenBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.productoSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Detalle Impuesto Inven",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonPresupuestoVentasActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Producto producto) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormProducto==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.producto = (Producto)this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.producto = (Producto)this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(producto!=null) {
						this.producto = producto;
					} else {
						this.producto = new Producto();
					}
				}

				if(this.isTienePermisosPresupuestoVentas && this.permiteMantenimiento(this.producto)) {
					PresupuestoVentasBeanSwingJInternalFrame presupuestoventasBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormProducto.presupuestoventasBeanSwingJInternalFramePopup=new PresupuestoVentasBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormProducto.presupuestoventasBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						presupuestoventasBeanSwingJInternalFrame=this.jInternalFrameDetalleFormProducto.presupuestoventasBeanSwingJInternalFramePopup;
					} else {
						presupuestoventasBeanSwingJInternalFrame=this.jInternalFrameDetalleFormProducto.presupuestoventasBeanSwingJInternalFrame;
					}

					List<Producto> productos=new ArrayList<Producto>();
					productos.add(this.producto);
					if(!esRelacionado) {
						//presupuestoventasBeanSwingJInternalFrame.presupuestoventasSessionBean.setConGuardarRelaciones(false);
						//presupuestoventasBeanSwingJInternalFrame.presupuestoventasSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					presupuestoventasBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormProducto.cargarPresupuestoVentasBeanSwingJInternalFrame(productos,this.producto,presupuestoventasBeanSwingJInternalFrame,/*conInicializar,*/presupuestoventasBeanSwingJInternalFrame.presupuestoventasSessionBean.getConGuardarRelaciones(),presupuestoventasBeanSwingJInternalFrame.presupuestoventasSessionBean.getEsGuardarRelacionado());
					presupuestoventasBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						presupuestoventasBeanSwingJInternalFrame.actualizarEstadoPanelsPresupuestoVentas("no_relacionado");

						presupuestoventasBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(PresupuestoVentasConstantesFunciones.ITAMANIOFILATABLA + (PresupuestoVentasConstantesFunciones.ITAMANIOFILATABLA/2));

						presupuestoventasBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderProducto=(TitledBorder)this.jScrollPanelDatosProducto.getBorder();
						TitledBorder titledBorderPresupuestoVentas=(TitledBorder)presupuestoventasBeanSwingJInternalFrame.jScrollPanelDatosPresupuestoVentas.getBorder();

						titledBorderPresupuestoVentas.setTitle(titledBorderProducto.getTitle() + " -> Presupuesto Ventas");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,presupuestoventasBeanSwingJInternalFrame);
						}

						presupuestoventasBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(presupuestoventasBeanSwingJInternalFrame);

						presupuestoventasBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.productoSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Presupuesto Ventas",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonPoliticaProductoActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Producto producto) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormProducto==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.producto = (Producto)this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.producto = (Producto)this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(producto!=null) {
						this.producto = producto;
					} else {
						this.producto = new Producto();
					}
				}

				if(this.isTienePermisosPoliticaProducto && this.permiteMantenimiento(this.producto)) {
					PoliticaProductoBeanSwingJInternalFrame politicaproductoBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormProducto.politicaproductoBeanSwingJInternalFramePopup=new PoliticaProductoBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormProducto.politicaproductoBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						politicaproductoBeanSwingJInternalFrame=this.jInternalFrameDetalleFormProducto.politicaproductoBeanSwingJInternalFramePopup;
					} else {
						politicaproductoBeanSwingJInternalFrame=this.jInternalFrameDetalleFormProducto.politicaproductoBeanSwingJInternalFrame;
					}

					List<Producto> productos=new ArrayList<Producto>();
					productos.add(this.producto);
					if(!esRelacionado) {
						//politicaproductoBeanSwingJInternalFrame.politicaproductoSessionBean.setConGuardarRelaciones(false);
						//politicaproductoBeanSwingJInternalFrame.politicaproductoSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					politicaproductoBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormProducto.cargarPoliticaProductoBeanSwingJInternalFrame(productos,this.producto,politicaproductoBeanSwingJInternalFrame,/*conInicializar,*/politicaproductoBeanSwingJInternalFrame.politicaproductoSessionBean.getConGuardarRelaciones(),politicaproductoBeanSwingJInternalFrame.politicaproductoSessionBean.getEsGuardarRelacionado());
					politicaproductoBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						politicaproductoBeanSwingJInternalFrame.actualizarEstadoPanelsPoliticaProducto("no_relacionado");

						politicaproductoBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(PoliticaProductoConstantesFunciones.ITAMANIOFILATABLA + (PoliticaProductoConstantesFunciones.ITAMANIOFILATABLA/2));

						politicaproductoBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderProducto=(TitledBorder)this.jScrollPanelDatosProducto.getBorder();
						TitledBorder titledBorderPoliticaProducto=(TitledBorder)politicaproductoBeanSwingJInternalFrame.jScrollPanelDatosPoliticaProducto.getBorder();

						titledBorderPoliticaProducto.setTitle(titledBorderProducto.getTitle() + " -> Politica Producto");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,politicaproductoBeanSwingJInternalFrame);
						}

						politicaproductoBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(politicaproductoBeanSwingJInternalFrame);

						politicaproductoBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.productoSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Politica Producto",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonSerieProductoActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Producto producto) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormProducto==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.producto = (Producto)this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.producto = (Producto)this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(producto!=null) {
						this.producto = producto;
					} else {
						this.producto = new Producto();
					}
				}

				if(this.isTienePermisosSerieProducto && this.permiteMantenimiento(this.producto)) {
					SerieProductoBeanSwingJInternalFrame serieproductoBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFramePopup=new SerieProductoBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						serieproductoBeanSwingJInternalFrame=this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFramePopup;
					} else {
						serieproductoBeanSwingJInternalFrame=this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame;
					}

					List<Producto> productos=new ArrayList<Producto>();
					productos.add(this.producto);
					if(!esRelacionado) {
						//serieproductoBeanSwingJInternalFrame.serieproductoSessionBean.setConGuardarRelaciones(false);
						//serieproductoBeanSwingJInternalFrame.serieproductoSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					serieproductoBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormProducto.cargarSerieProductoBeanSwingJInternalFrame(productos,this.producto,serieproductoBeanSwingJInternalFrame,/*conInicializar,*/serieproductoBeanSwingJInternalFrame.serieproductoSessionBean.getConGuardarRelaciones(),serieproductoBeanSwingJInternalFrame.serieproductoSessionBean.getEsGuardarRelacionado());
					serieproductoBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						serieproductoBeanSwingJInternalFrame.actualizarEstadoPanelsSerieProducto("no_relacionado");

						serieproductoBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(SerieProductoConstantesFunciones.ITAMANIOFILATABLA + (SerieProductoConstantesFunciones.ITAMANIOFILATABLA/2));

						serieproductoBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderProducto=(TitledBorder)this.jScrollPanelDatosProducto.getBorder();
						TitledBorder titledBorderSerieProducto=(TitledBorder)serieproductoBeanSwingJInternalFrame.jScrollPanelDatosSerieProducto.getBorder();

						titledBorderSerieProducto.setTitle(titledBorderProducto.getTitle() + " -> Serie Producto");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,serieproductoBeanSwingJInternalFrame);
						}

						serieproductoBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(serieproductoBeanSwingJInternalFrame);

						serieproductoBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.productoSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Serie Producto",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonUbicacionProduActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Producto producto) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormProducto==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.producto = (Producto)this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.producto = (Producto)this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(producto!=null) {
						this.producto = producto;
					} else {
						this.producto = new Producto();
					}
				}

				if(this.isTienePermisosUbicacionProdu && this.permiteMantenimiento(this.producto)) {
					UbicacionProduBeanSwingJInternalFrame ubicacionproduBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormProducto.ubicacionproduBeanSwingJInternalFramePopup=new UbicacionProduBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormProducto.ubicacionproduBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						ubicacionproduBeanSwingJInternalFrame=this.jInternalFrameDetalleFormProducto.ubicacionproduBeanSwingJInternalFramePopup;
					} else {
						ubicacionproduBeanSwingJInternalFrame=this.jInternalFrameDetalleFormProducto.ubicacionproduBeanSwingJInternalFrame;
					}

					List<Producto> productos=new ArrayList<Producto>();
					productos.add(this.producto);
					if(!esRelacionado) {
						//ubicacionproduBeanSwingJInternalFrame.ubicacionproduSessionBean.setConGuardarRelaciones(false);
						//ubicacionproduBeanSwingJInternalFrame.ubicacionproduSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					ubicacionproduBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormProducto.cargarUbicacionProduBeanSwingJInternalFrame(productos,this.producto,ubicacionproduBeanSwingJInternalFrame,/*conInicializar,*/ubicacionproduBeanSwingJInternalFrame.ubicacionproduSessionBean.getConGuardarRelaciones(),ubicacionproduBeanSwingJInternalFrame.ubicacionproduSessionBean.getEsGuardarRelacionado());
					ubicacionproduBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						ubicacionproduBeanSwingJInternalFrame.actualizarEstadoPanelsUbicacionProdu("no_relacionado");

						ubicacionproduBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(UbicacionProduConstantesFunciones.ITAMANIOFILATABLA + (UbicacionProduConstantesFunciones.ITAMANIOFILATABLA/2));

						ubicacionproduBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderProducto=(TitledBorder)this.jScrollPanelDatosProducto.getBorder();
						TitledBorder titledBorderUbicacionProdu=(TitledBorder)ubicacionproduBeanSwingJInternalFrame.jScrollPanelDatosUbicacionProdu.getBorder();

						titledBorderUbicacionProdu.setTitle(titledBorderProducto.getTitle() + " -> Ubicacion Producto");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,ubicacionproduBeanSwingJInternalFrame);
						}

						ubicacionproduBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(ubicacionproduBeanSwingJInternalFrame);

						ubicacionproduBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.productoSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Ubicacion Producto",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonParametroProductoActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Producto producto) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormProducto==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.producto = (Producto)this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.producto = (Producto)this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(producto!=null) {
						this.producto = producto;
					} else {
						this.producto = new Producto();
					}
				}

				if(this.isTienePermisosParametroProducto && this.permiteMantenimiento(this.producto)) {
					ParametroProductoBeanSwingJInternalFrame parametroproductoBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormProducto.parametroproductoBeanSwingJInternalFramePopup=new ParametroProductoBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormProducto.parametroproductoBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						parametroproductoBeanSwingJInternalFrame=this.jInternalFrameDetalleFormProducto.parametroproductoBeanSwingJInternalFramePopup;
					} else {
						parametroproductoBeanSwingJInternalFrame=this.jInternalFrameDetalleFormProducto.parametroproductoBeanSwingJInternalFrame;
					}

					List<Producto> productos=new ArrayList<Producto>();
					productos.add(this.producto);
					if(!esRelacionado) {
						//parametroproductoBeanSwingJInternalFrame.parametroproductoSessionBean.setConGuardarRelaciones(false);
						//parametroproductoBeanSwingJInternalFrame.parametroproductoSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					parametroproductoBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormProducto.cargarParametroProductoBeanSwingJInternalFrame(productos,this.producto,parametroproductoBeanSwingJInternalFrame,/*conInicializar,*/parametroproductoBeanSwingJInternalFrame.parametroproductoSessionBean.getConGuardarRelaciones(),parametroproductoBeanSwingJInternalFrame.parametroproductoSessionBean.getEsGuardarRelacionado());
					parametroproductoBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						parametroproductoBeanSwingJInternalFrame.actualizarEstadoPanelsParametroProducto("no_relacionado");

						parametroproductoBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(ParametroProductoConstantesFunciones.ITAMANIOFILATABLA + (ParametroProductoConstantesFunciones.ITAMANIOFILATABLA/2));

						parametroproductoBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderProducto=(TitledBorder)this.jScrollPanelDatosProducto.getBorder();
						TitledBorder titledBorderParametroProducto=(TitledBorder)parametroproductoBeanSwingJInternalFrame.jScrollPanelDatosParametroProducto.getBorder();

						titledBorderParametroProducto.setTitle(titledBorderProducto.getTitle() + " -> Parametro Producto");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,parametroproductoBeanSwingJInternalFrame);
						}

						parametroproductoBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(parametroproductoBeanSwingJInternalFrame);

						parametroproductoBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.productoSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Parametro Producto",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonProductoUnidadActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Producto producto) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormProducto==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.producto = (Producto)this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.producto = (Producto)this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(producto!=null) {
						this.producto = producto;
					} else {
						this.producto = new Producto();
					}
				}

				if(this.isTienePermisosProductoUnidad && this.permiteMantenimiento(this.producto)) {
					ProductoUnidadBeanSwingJInternalFrame productounidadBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormProducto.productounidadBeanSwingJInternalFramePopup=new ProductoUnidadBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormProducto.productounidadBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						productounidadBeanSwingJInternalFrame=this.jInternalFrameDetalleFormProducto.productounidadBeanSwingJInternalFramePopup;
					} else {
						productounidadBeanSwingJInternalFrame=this.jInternalFrameDetalleFormProducto.productounidadBeanSwingJInternalFrame;
					}

					List<Producto> productos=new ArrayList<Producto>();
					productos.add(this.producto);
					if(!esRelacionado) {
						//productounidadBeanSwingJInternalFrame.productounidadSessionBean.setConGuardarRelaciones(false);
						//productounidadBeanSwingJInternalFrame.productounidadSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					productounidadBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormProducto.cargarProductoUnidadBeanSwingJInternalFrame(productos,this.producto,productounidadBeanSwingJInternalFrame,/*conInicializar,*/productounidadBeanSwingJInternalFrame.productounidadSessionBean.getConGuardarRelaciones(),productounidadBeanSwingJInternalFrame.productounidadSessionBean.getEsGuardarRelacionado());
					productounidadBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						productounidadBeanSwingJInternalFrame.actualizarEstadoPanelsProductoUnidad("no_relacionado");

						productounidadBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(ProductoUnidadConstantesFunciones.ITAMANIOFILATABLA + (ProductoUnidadConstantesFunciones.ITAMANIOFILATABLA/2));

						productounidadBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderProducto=(TitledBorder)this.jScrollPanelDatosProducto.getBorder();
						TitledBorder titledBorderProductoUnidad=(TitledBorder)productounidadBeanSwingJInternalFrame.jScrollPanelDatosProductoUnidad.getBorder();

						titledBorderProductoUnidad.setTitle(titledBorderProducto.getTitle() + " -> Producto Unidad");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,productounidadBeanSwingJInternalFrame);
						}

						productounidadBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(productounidadBeanSwingJInternalFrame);

						productounidadBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.productoSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Producto Unidad",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonIngredienteActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Producto producto) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormProducto==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.producto = (Producto)this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.producto = (Producto)this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(producto!=null) {
						this.producto = producto;
					} else {
						this.producto = new Producto();
					}
				}

				if(this.isTienePermisosIngrediente && this.permiteMantenimiento(this.producto)) {
					IngredienteBeanSwingJInternalFrame ingredienteBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormProducto.ingredienteBeanSwingJInternalFramePopup=new IngredienteBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormProducto.ingredienteBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						ingredienteBeanSwingJInternalFrame=this.jInternalFrameDetalleFormProducto.ingredienteBeanSwingJInternalFramePopup;
					} else {
						ingredienteBeanSwingJInternalFrame=this.jInternalFrameDetalleFormProducto.ingredienteBeanSwingJInternalFrame;
					}

					List<Producto> productos=new ArrayList<Producto>();
					productos.add(this.producto);
					if(!esRelacionado) {
						//ingredienteBeanSwingJInternalFrame.ingredienteSessionBean.setConGuardarRelaciones(false);
						//ingredienteBeanSwingJInternalFrame.ingredienteSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					ingredienteBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormProducto.cargarIngredienteBeanSwingJInternalFrame(productos,this.producto,ingredienteBeanSwingJInternalFrame,/*conInicializar,*/ingredienteBeanSwingJInternalFrame.ingredienteSessionBean.getConGuardarRelaciones(),ingredienteBeanSwingJInternalFrame.ingredienteSessionBean.getEsGuardarRelacionado());
					ingredienteBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						ingredienteBeanSwingJInternalFrame.actualizarEstadoPanelsIngrediente("no_relacionado");

						ingredienteBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(IngredienteConstantesFunciones.ITAMANIOFILATABLA + (IngredienteConstantesFunciones.ITAMANIOFILATABLA/2));

						ingredienteBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderProducto=(TitledBorder)this.jScrollPanelDatosProducto.getBorder();
						TitledBorder titledBorderIngrediente=(TitledBorder)ingredienteBeanSwingJInternalFrame.jScrollPanelDatosIngrediente.getBorder();

						titledBorderIngrediente.setTitle(titledBorderProducto.getTitle() + " -> Ingrediente");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,ingredienteBeanSwingJInternalFrame);
						}

						ingredienteBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(ingredienteBeanSwingJInternalFrame);

						ingredienteBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.productoSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Ingrediente",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonProductoCaracActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Producto producto) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormProducto==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.producto = (Producto)this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.producto = (Producto)this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(producto!=null) {
						this.producto = producto;
					} else {
						this.producto = new Producto();
					}
				}

				if(this.isTienePermisosProductoCarac && this.permiteMantenimiento(this.producto)) {
					ProductoCaracBeanSwingJInternalFrame productocaracBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormProducto.productocaracBeanSwingJInternalFramePopup=new ProductoCaracBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormProducto.productocaracBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						productocaracBeanSwingJInternalFrame=this.jInternalFrameDetalleFormProducto.productocaracBeanSwingJInternalFramePopup;
					} else {
						productocaracBeanSwingJInternalFrame=this.jInternalFrameDetalleFormProducto.productocaracBeanSwingJInternalFrame;
					}

					List<Producto> productos=new ArrayList<Producto>();
					productos.add(this.producto);
					if(!esRelacionado) {
						//productocaracBeanSwingJInternalFrame.productocaracSessionBean.setConGuardarRelaciones(false);
						//productocaracBeanSwingJInternalFrame.productocaracSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					productocaracBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormProducto.cargarProductoCaracBeanSwingJInternalFrame(productos,this.producto,productocaracBeanSwingJInternalFrame,/*conInicializar,*/productocaracBeanSwingJInternalFrame.productocaracSessionBean.getConGuardarRelaciones(),productocaracBeanSwingJInternalFrame.productocaracSessionBean.getEsGuardarRelacionado());
					productocaracBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						productocaracBeanSwingJInternalFrame.actualizarEstadoPanelsProductoCarac("no_relacionado");

						productocaracBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(ProductoCaracConstantesFunciones.ITAMANIOFILATABLA + (ProductoCaracConstantesFunciones.ITAMANIOFILATABLA/2));

						productocaracBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderProducto=(TitledBorder)this.jScrollPanelDatosProducto.getBorder();
						TitledBorder titledBorderProductoCarac=(TitledBorder)productocaracBeanSwingJInternalFrame.jScrollPanelDatosProductoCarac.getBorder();

						titledBorderProductoCarac.setTitle(titledBorderProducto.getTitle() + " -> Caracteristica");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,productocaracBeanSwingJInternalFrame);
						}

						productocaracBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(productocaracBeanSwingJInternalFrame);

						productocaracBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.productoSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Caracteristica",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonServicioClienteActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Producto producto) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormProducto==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.producto = (Producto)this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.producto = (Producto)this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(producto!=null) {
						this.producto = producto;
					} else {
						this.producto = new Producto();
					}
				}

				if(this.isTienePermisosServicioCliente && this.permiteMantenimiento(this.producto)) {
					ServicioClienteBeanSwingJInternalFrame servicioclienteBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormProducto.servicioclienteBeanSwingJInternalFramePopup=new ServicioClienteBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormProducto.servicioclienteBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						servicioclienteBeanSwingJInternalFrame=this.jInternalFrameDetalleFormProducto.servicioclienteBeanSwingJInternalFramePopup;
					} else {
						servicioclienteBeanSwingJInternalFrame=this.jInternalFrameDetalleFormProducto.servicioclienteBeanSwingJInternalFrame;
					}

					List<Producto> productos=new ArrayList<Producto>();
					productos.add(this.producto);
					if(!esRelacionado) {
						//servicioclienteBeanSwingJInternalFrame.servicioclienteSessionBean.setConGuardarRelaciones(false);
						//servicioclienteBeanSwingJInternalFrame.servicioclienteSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					servicioclienteBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormProducto.cargarServicioClienteBeanSwingJInternalFrame(productos,this.producto,servicioclienteBeanSwingJInternalFrame,/*conInicializar,*/servicioclienteBeanSwingJInternalFrame.servicioclienteSessionBean.getConGuardarRelaciones(),servicioclienteBeanSwingJInternalFrame.servicioclienteSessionBean.getEsGuardarRelacionado());
					servicioclienteBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						servicioclienteBeanSwingJInternalFrame.actualizarEstadoPanelsServicioCliente("no_relacionado");

						servicioclienteBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(ServicioClienteConstantesFunciones.ITAMANIOFILATABLA + (ServicioClienteConstantesFunciones.ITAMANIOFILATABLA/2));

						servicioclienteBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderProducto=(TitledBorder)this.jScrollPanelDatosProducto.getBorder();
						TitledBorder titledBorderServicioCliente=(TitledBorder)servicioclienteBeanSwingJInternalFrame.jScrollPanelDatosServicioCliente.getBorder();

						titledBorderServicioCliente.setTitle(titledBorderProducto.getTitle() + " -> Servicio Cliente");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,servicioclienteBeanSwingJInternalFrame);
						}

						servicioclienteBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(servicioclienteBeanSwingJInternalFrame);

						servicioclienteBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.productoSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Servicio Cliente",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonProductoPromocionActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Producto producto) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormProducto==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.producto = (Producto)this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.producto = (Producto)this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(producto!=null) {
						this.producto = producto;
					} else {
						this.producto = new Producto();
					}
				}

				if(this.isTienePermisosProductoPromocion && this.permiteMantenimiento(this.producto)) {
					ProductoPromocionBeanSwingJInternalFrame productopromocionBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormProducto.productopromocionBeanSwingJInternalFramePopup=new ProductoPromocionBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormProducto.productopromocionBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						productopromocionBeanSwingJInternalFrame=this.jInternalFrameDetalleFormProducto.productopromocionBeanSwingJInternalFramePopup;
					} else {
						productopromocionBeanSwingJInternalFrame=this.jInternalFrameDetalleFormProducto.productopromocionBeanSwingJInternalFrame;
					}

					List<Producto> productos=new ArrayList<Producto>();
					productos.add(this.producto);
					if(!esRelacionado) {
						//productopromocionBeanSwingJInternalFrame.productopromocionSessionBean.setConGuardarRelaciones(false);
						//productopromocionBeanSwingJInternalFrame.productopromocionSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					productopromocionBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormProducto.cargarProductoPromocionBeanSwingJInternalFrame(productos,this.producto,productopromocionBeanSwingJInternalFrame,/*conInicializar,*/productopromocionBeanSwingJInternalFrame.productopromocionSessionBean.getConGuardarRelaciones(),productopromocionBeanSwingJInternalFrame.productopromocionSessionBean.getEsGuardarRelacionado());
					productopromocionBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						productopromocionBeanSwingJInternalFrame.actualizarEstadoPanelsProductoPromocion("no_relacionado");

						productopromocionBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(ProductoPromocionConstantesFunciones.ITAMANIOFILATABLA + (ProductoPromocionConstantesFunciones.ITAMANIOFILATABLA/2));

						productopromocionBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderProducto=(TitledBorder)this.jScrollPanelDatosProducto.getBorder();
						TitledBorder titledBorderProductoPromocion=(TitledBorder)productopromocionBeanSwingJInternalFrame.jScrollPanelDatosProductoPromocion.getBorder();

						titledBorderProductoPromocion.setTitle(titledBorderProducto.getTitle() + " -> Promocion");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,productopromocionBeanSwingJInternalFrame);
						}

						productopromocionBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(productopromocionBeanSwingJInternalFrame);

						productopromocionBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.productoSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Promocion",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonProductoEspeciActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Producto producto) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormProducto==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.producto = (Producto)this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.producto = (Producto)this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(producto!=null) {
						this.producto = producto;
					} else {
						this.producto = new Producto();
					}
				}

				if(this.isTienePermisosProductoEspeci && this.permiteMantenimiento(this.producto)) {
					ProductoEspeciBeanSwingJInternalFrame productoespeciBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormProducto.productoespeciBeanSwingJInternalFramePopup=new ProductoEspeciBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormProducto.productoespeciBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						productoespeciBeanSwingJInternalFrame=this.jInternalFrameDetalleFormProducto.productoespeciBeanSwingJInternalFramePopup;
					} else {
						productoespeciBeanSwingJInternalFrame=this.jInternalFrameDetalleFormProducto.productoespeciBeanSwingJInternalFrame;
					}

					List<Producto> productos=new ArrayList<Producto>();
					productos.add(this.producto);
					if(!esRelacionado) {
						//productoespeciBeanSwingJInternalFrame.productoespeciSessionBean.setConGuardarRelaciones(false);
						//productoespeciBeanSwingJInternalFrame.productoespeciSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					productoespeciBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormProducto.cargarProductoEspeciBeanSwingJInternalFrame(productos,this.producto,productoespeciBeanSwingJInternalFrame,/*conInicializar,*/productoespeciBeanSwingJInternalFrame.productoespeciSessionBean.getConGuardarRelaciones(),productoespeciBeanSwingJInternalFrame.productoespeciSessionBean.getEsGuardarRelacionado());
					productoespeciBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						productoespeciBeanSwingJInternalFrame.actualizarEstadoPanelsProductoEspeci("no_relacionado");

						productoespeciBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(ProductoEspeciConstantesFunciones.ITAMANIOFILATABLA + (ProductoEspeciConstantesFunciones.ITAMANIOFILATABLA/2));

						productoespeciBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderProducto=(TitledBorder)this.jScrollPanelDatosProducto.getBorder();
						TitledBorder titledBorderProductoEspeci=(TitledBorder)productoespeciBeanSwingJInternalFrame.jScrollPanelDatosProductoEspeci.getBorder();

						titledBorderProductoEspeci.setTitle(titledBorderProducto.getTitle() + " -> Especificacion");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,productoespeciBeanSwingJInternalFrame);
						}

						productoespeciBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(productoespeciBeanSwingJInternalFrame);

						productoespeciBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.productoSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Especificacion",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonProductoReemplaActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Producto producto) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormProducto==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.producto = (Producto)this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.producto = (Producto)this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(producto!=null) {
						this.producto = producto;
					} else {
						this.producto = new Producto();
					}
				}

				if(this.isTienePermisosProductoReempla && this.permiteMantenimiento(this.producto)) {
					ProductoReemplaBeanSwingJInternalFrame productoreemplaBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFramePopup=new ProductoReemplaBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						productoreemplaBeanSwingJInternalFrame=this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFramePopup;
					} else {
						productoreemplaBeanSwingJInternalFrame=this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame;
					}

					List<Producto> productos=new ArrayList<Producto>();
					productos.add(this.producto);
					if(!esRelacionado) {
						//productoreemplaBeanSwingJInternalFrame.productoreemplaSessionBean.setConGuardarRelaciones(false);
						//productoreemplaBeanSwingJInternalFrame.productoreemplaSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					productoreemplaBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormProducto.cargarProductoReemplaBeanSwingJInternalFrame(productos,this.producto,productoreemplaBeanSwingJInternalFrame,/*conInicializar,*/productoreemplaBeanSwingJInternalFrame.productoreemplaSessionBean.getConGuardarRelaciones(),productoreemplaBeanSwingJInternalFrame.productoreemplaSessionBean.getEsGuardarRelacionado());
					productoreemplaBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						productoreemplaBeanSwingJInternalFrame.actualizarEstadoPanelsProductoReempla("no_relacionado");

						productoreemplaBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(ProductoReemplaConstantesFunciones.ITAMANIOFILATABLA + (ProductoReemplaConstantesFunciones.ITAMANIOFILATABLA/2));

						productoreemplaBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderProducto=(TitledBorder)this.jScrollPanelDatosProducto.getBorder();
						TitledBorder titledBorderProductoReempla=(TitledBorder)productoreemplaBeanSwingJInternalFrame.jScrollPanelDatosProductoReempla.getBorder();

						titledBorderProductoReempla.setTitle(titledBorderProducto.getTitle() + " -> Reemplazo");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,productoreemplaBeanSwingJInternalFrame);
						}

						productoreemplaBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(productoreemplaBeanSwingJInternalFrame);

						productoreemplaBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.productoSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Reemplazo",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonProductoEstadisticaActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Producto producto) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormProducto==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.producto = (Producto)this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.producto = (Producto)this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(producto!=null) {
						this.producto = producto;
					} else {
						this.producto = new Producto();
					}
				}

				if(this.isTienePermisosProductoEstadistica && this.permiteMantenimiento(this.producto)) {
					ProductoEstadisticaBeanSwingJInternalFrame productoestadisticaBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormProducto.productoestadisticaBeanSwingJInternalFramePopup=new ProductoEstadisticaBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormProducto.productoestadisticaBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						productoestadisticaBeanSwingJInternalFrame=this.jInternalFrameDetalleFormProducto.productoestadisticaBeanSwingJInternalFramePopup;
					} else {
						productoestadisticaBeanSwingJInternalFrame=this.jInternalFrameDetalleFormProducto.productoestadisticaBeanSwingJInternalFrame;
					}

					List<Producto> productos=new ArrayList<Producto>();
					productos.add(this.producto);
					if(!esRelacionado) {
						//productoestadisticaBeanSwingJInternalFrame.productoestadisticaSessionBean.setConGuardarRelaciones(false);
						//productoestadisticaBeanSwingJInternalFrame.productoestadisticaSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					productoestadisticaBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormProducto.cargarProductoEstadisticaBeanSwingJInternalFrame(productos,this.producto,productoestadisticaBeanSwingJInternalFrame,/*conInicializar,*/productoestadisticaBeanSwingJInternalFrame.productoestadisticaSessionBean.getConGuardarRelaciones(),productoestadisticaBeanSwingJInternalFrame.productoestadisticaSessionBean.getEsGuardarRelacionado());
					productoestadisticaBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						productoestadisticaBeanSwingJInternalFrame.actualizarEstadoPanelsProductoEstadistica("no_relacionado");

						productoestadisticaBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(ProductoEstadisticaConstantesFunciones.ITAMANIOFILATABLA + (ProductoEstadisticaConstantesFunciones.ITAMANIOFILATABLA/2));

						productoestadisticaBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderProducto=(TitledBorder)this.jScrollPanelDatosProducto.getBorder();
						TitledBorder titledBorderProductoEstadistica=(TitledBorder)productoestadisticaBeanSwingJInternalFrame.jScrollPanelDatosProductoEstadistica.getBorder();

						titledBorderProductoEstadistica.setTitle(titledBorderProducto.getTitle() + " -> Estadistica");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,productoestadisticaBeanSwingJInternalFrame);
						}

						productoestadisticaBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(productoestadisticaBeanSwingJInternalFrame);

						productoestadisticaBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.productoSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Estadistica",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonPoliticaFactuActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Producto producto) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormProducto==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.producto = (Producto)this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.producto = (Producto)this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(producto!=null) {
						this.producto = producto;
					} else {
						this.producto = new Producto();
					}
				}

				if(this.isTienePermisosPoliticaFactu && this.permiteMantenimiento(this.producto)) {
					PoliticaFactuBeanSwingJInternalFrame politicafactuBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormProducto.politicafactuBeanSwingJInternalFramePopup=new PoliticaFactuBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormProducto.politicafactuBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						politicafactuBeanSwingJInternalFrame=this.jInternalFrameDetalleFormProducto.politicafactuBeanSwingJInternalFramePopup;
					} else {
						politicafactuBeanSwingJInternalFrame=this.jInternalFrameDetalleFormProducto.politicafactuBeanSwingJInternalFrame;
					}

					List<Producto> productos=new ArrayList<Producto>();
					productos.add(this.producto);
					if(!esRelacionado) {
						//politicafactuBeanSwingJInternalFrame.politicafactuSessionBean.setConGuardarRelaciones(false);
						//politicafactuBeanSwingJInternalFrame.politicafactuSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					politicafactuBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormProducto.cargarPoliticaFactuBeanSwingJInternalFrame(productos,this.producto,politicafactuBeanSwingJInternalFrame,/*conInicializar,*/politicafactuBeanSwingJInternalFrame.politicafactuSessionBean.getConGuardarRelaciones(),politicafactuBeanSwingJInternalFrame.politicafactuSessionBean.getEsGuardarRelacionado());
					politicafactuBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						politicafactuBeanSwingJInternalFrame.actualizarEstadoPanelsPoliticaFactu("no_relacionado");

						politicafactuBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(PoliticaFactuConstantesFunciones.ITAMANIOFILATABLA + (PoliticaFactuConstantesFunciones.ITAMANIOFILATABLA/2));

						politicafactuBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderProducto=(TitledBorder)this.jScrollPanelDatosProducto.getBorder();
						TitledBorder titledBorderPoliticaFactu=(TitledBorder)politicafactuBeanSwingJInternalFrame.jScrollPanelDatosPoliticaFactu.getBorder();

						titledBorderPoliticaFactu.setTitle(titledBorderProducto.getTitle() + " -> Politica Factu");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,politicafactuBeanSwingJInternalFrame);
						}

						politicafactuBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(politicafactuBeanSwingJInternalFrame);

						politicafactuBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.productoSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Politica Factu",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonProductoCuentaContableActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Producto producto) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormProducto==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.producto = (Producto)this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.producto = (Producto)this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(producto!=null) {
						this.producto = producto;
					} else {
						this.producto = new Producto();
					}
				}

				if(this.isTienePermisosProductoCuentaContable && this.permiteMantenimiento(this.producto)) {
					ProductoCuentaContableBeanSwingJInternalFrame productocuentacontableBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormProducto.productocuentacontableBeanSwingJInternalFramePopup=new ProductoCuentaContableBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormProducto.productocuentacontableBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						productocuentacontableBeanSwingJInternalFrame=this.jInternalFrameDetalleFormProducto.productocuentacontableBeanSwingJInternalFramePopup;
					} else {
						productocuentacontableBeanSwingJInternalFrame=this.jInternalFrameDetalleFormProducto.productocuentacontableBeanSwingJInternalFrame;
					}

					List<Producto> productos=new ArrayList<Producto>();
					productos.add(this.producto);
					if(!esRelacionado) {
						//productocuentacontableBeanSwingJInternalFrame.productocuentacontableSessionBean.setConGuardarRelaciones(false);
						//productocuentacontableBeanSwingJInternalFrame.productocuentacontableSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					productocuentacontableBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormProducto.cargarProductoCuentaContableBeanSwingJInternalFrame(productos,this.producto,productocuentacontableBeanSwingJInternalFrame,/*conInicializar,*/productocuentacontableBeanSwingJInternalFrame.productocuentacontableSessionBean.getConGuardarRelaciones(),productocuentacontableBeanSwingJInternalFrame.productocuentacontableSessionBean.getEsGuardarRelacionado());
					productocuentacontableBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						productocuentacontableBeanSwingJInternalFrame.actualizarEstadoPanelsProductoCuentaContable("no_relacionado");

						productocuentacontableBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(ProductoCuentaContableConstantesFunciones.ITAMANIOFILATABLA + (ProductoCuentaContableConstantesFunciones.ITAMANIOFILATABLA/2));

						productocuentacontableBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderProducto=(TitledBorder)this.jScrollPanelDatosProducto.getBorder();
						TitledBorder titledBorderProductoCuentaContable=(TitledBorder)productocuentacontableBeanSwingJInternalFrame.jScrollPanelDatosProductoCuentaContable.getBorder();

						titledBorderProductoCuentaContable.setTitle(titledBorderProducto.getTitle() + " -> Producto Cuenta Contable");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,productocuentacontableBeanSwingJInternalFrame);
						}

						productocuentacontableBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(productocuentacontableBeanSwingJInternalFrame);

						productocuentacontableBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.productoSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Producto Cuenta Contable",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonBodegaProductoActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Producto producto) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormProducto==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.producto = (Producto)this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.producto = (Producto)this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(producto!=null) {
						this.producto = producto;
					} else {
						this.producto = new Producto();
					}
				}

				if(this.isTienePermisosBodegaProducto && this.permiteMantenimiento(this.producto)) {
					BodegaProductoBeanSwingJInternalFrame bodegaproductoBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormProducto.bodegaproductoBeanSwingJInternalFramePopup=new BodegaProductoBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormProducto.bodegaproductoBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						bodegaproductoBeanSwingJInternalFrame=this.jInternalFrameDetalleFormProducto.bodegaproductoBeanSwingJInternalFramePopup;
					} else {
						bodegaproductoBeanSwingJInternalFrame=this.jInternalFrameDetalleFormProducto.bodegaproductoBeanSwingJInternalFrame;
					}

					List<Producto> productos=new ArrayList<Producto>();
					productos.add(this.producto);
					if(!esRelacionado) {
						//bodegaproductoBeanSwingJInternalFrame.bodegaproductoSessionBean.setConGuardarRelaciones(false);
						//bodegaproductoBeanSwingJInternalFrame.bodegaproductoSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					bodegaproductoBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormProducto.cargarBodegaProductoBeanSwingJInternalFrame(productos,this.producto,bodegaproductoBeanSwingJInternalFrame,/*conInicializar,*/bodegaproductoBeanSwingJInternalFrame.bodegaproductoSessionBean.getConGuardarRelaciones(),bodegaproductoBeanSwingJInternalFrame.bodegaproductoSessionBean.getEsGuardarRelacionado());
					bodegaproductoBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						bodegaproductoBeanSwingJInternalFrame.actualizarEstadoPanelsBodegaProducto("no_relacionado");

						bodegaproductoBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(BodegaProductoConstantesFunciones.ITAMANIOFILATABLA + (BodegaProductoConstantesFunciones.ITAMANIOFILATABLA/2));

						bodegaproductoBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderProducto=(TitledBorder)this.jScrollPanelDatosProducto.getBorder();
						TitledBorder titledBorderBodegaProducto=(TitledBorder)bodegaproductoBeanSwingJInternalFrame.jScrollPanelDatosBodegaProducto.getBorder();

						titledBorderBodegaProducto.setTitle(titledBorderProducto.getTitle() + " -> Bodega Producto");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,bodegaproductoBeanSwingJInternalFrame);
						}

						bodegaproductoBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(bodegaproductoBeanSwingJInternalFrame);

						bodegaproductoBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.productoSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Bodega Producto",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonPresupuestoProductoActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Producto producto) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormProducto==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.producto = (Producto)this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.producto = (Producto)this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(producto!=null) {
						this.producto = producto;
					} else {
						this.producto = new Producto();
					}
				}

				if(this.isTienePermisosPresupuestoProducto && this.permiteMantenimiento(this.producto)) {
					PresupuestoProductoBeanSwingJInternalFrame presupuestoproductoBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormProducto.presupuestoproductoBeanSwingJInternalFramePopup=new PresupuestoProductoBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormProducto.presupuestoproductoBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						presupuestoproductoBeanSwingJInternalFrame=this.jInternalFrameDetalleFormProducto.presupuestoproductoBeanSwingJInternalFramePopup;
					} else {
						presupuestoproductoBeanSwingJInternalFrame=this.jInternalFrameDetalleFormProducto.presupuestoproductoBeanSwingJInternalFrame;
					}

					List<Producto> productos=new ArrayList<Producto>();
					productos.add(this.producto);
					if(!esRelacionado) {
						//presupuestoproductoBeanSwingJInternalFrame.presupuestoproductoSessionBean.setConGuardarRelaciones(false);
						//presupuestoproductoBeanSwingJInternalFrame.presupuestoproductoSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					presupuestoproductoBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormProducto.cargarPresupuestoProductoBeanSwingJInternalFrame(productos,this.producto,presupuestoproductoBeanSwingJInternalFrame,/*conInicializar,*/presupuestoproductoBeanSwingJInternalFrame.presupuestoproductoSessionBean.getConGuardarRelaciones(),presupuestoproductoBeanSwingJInternalFrame.presupuestoproductoSessionBean.getEsGuardarRelacionado());
					presupuestoproductoBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						presupuestoproductoBeanSwingJInternalFrame.actualizarEstadoPanelsPresupuestoProducto("no_relacionado");

						presupuestoproductoBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(PresupuestoProductoConstantesFunciones.ITAMANIOFILATABLA + (PresupuestoProductoConstantesFunciones.ITAMANIOFILATABLA/2));

						presupuestoproductoBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderProducto=(TitledBorder)this.jScrollPanelDatosProducto.getBorder();
						TitledBorder titledBorderPresupuestoProducto=(TitledBorder)presupuestoproductoBeanSwingJInternalFrame.jScrollPanelDatosPresupuestoProducto.getBorder();

						titledBorderPresupuestoProducto.setTitle(titledBorderProducto.getTitle() + " -> Presupuesto Producto");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,presupuestoproductoBeanSwingJInternalFrame);
						}

						presupuestoproductoBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(presupuestoproductoBeanSwingJInternalFrame);

						presupuestoproductoBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.productoSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Presupuesto Producto",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonSaldoMesProductoActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Producto producto) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormProducto==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.producto = (Producto)this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.producto = (Producto)this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(producto!=null) {
						this.producto = producto;
					} else {
						this.producto = new Producto();
					}
				}

				if(this.isTienePermisosSaldoMesProducto && this.permiteMantenimiento(this.producto)) {
					SaldoMesProductoBeanSwingJInternalFrame saldomesproductoBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormProducto.saldomesproductoBeanSwingJInternalFramePopup=new SaldoMesProductoBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormProducto.saldomesproductoBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						saldomesproductoBeanSwingJInternalFrame=this.jInternalFrameDetalleFormProducto.saldomesproductoBeanSwingJInternalFramePopup;
					} else {
						saldomesproductoBeanSwingJInternalFrame=this.jInternalFrameDetalleFormProducto.saldomesproductoBeanSwingJInternalFrame;
					}

					List<Producto> productos=new ArrayList<Producto>();
					productos.add(this.producto);
					if(!esRelacionado) {
						//saldomesproductoBeanSwingJInternalFrame.saldomesproductoSessionBean.setConGuardarRelaciones(false);
						//saldomesproductoBeanSwingJInternalFrame.saldomesproductoSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					saldomesproductoBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormProducto.cargarSaldoMesProductoBeanSwingJInternalFrame(productos,this.producto,saldomesproductoBeanSwingJInternalFrame,/*conInicializar,*/saldomesproductoBeanSwingJInternalFrame.saldomesproductoSessionBean.getConGuardarRelaciones(),saldomesproductoBeanSwingJInternalFrame.saldomesproductoSessionBean.getEsGuardarRelacionado());
					saldomesproductoBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						saldomesproductoBeanSwingJInternalFrame.actualizarEstadoPanelsSaldoMesProducto("no_relacionado");

						saldomesproductoBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(SaldoMesProductoConstantesFunciones.ITAMANIOFILATABLA + (SaldoMesProductoConstantesFunciones.ITAMANIOFILATABLA/2));

						saldomesproductoBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderProducto=(TitledBorder)this.jScrollPanelDatosProducto.getBorder();
						TitledBorder titledBorderSaldoMesProducto=(TitledBorder)saldomesproductoBeanSwingJInternalFrame.jScrollPanelDatosSaldoMesProducto.getBorder();

						titledBorderSaldoMesProducto.setTitle(titledBorderProducto.getTitle() + " -> Saldo Mes Producto");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,saldomesproductoBeanSwingJInternalFrame);
						}

						saldomesproductoBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(saldomesproductoBeanSwingJInternalFrame);

						saldomesproductoBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.productoSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Saldo Mes Producto",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.closeNewConnexionToDeep();
				}

			}
		}

	
	
	
	public void refrescarBindingTabla(Boolean blnSoloTabla) {
	}
	
	public void inicializarActualizarBindingBotonesManualProducto(Boolean esSetControles) {						
		if(esSetControles) {
			this.jButtonNuevoProducto.setVisible((this.isVisibilidadCeldaNuevoProducto && this.isPermisoNuevoProducto));			
			this.jButtonDuplicarProducto.setVisible((this.isVisibilidadCeldaDuplicarProducto && this.isPermisoDuplicarProducto));			
			this.jButtonCopiarProducto.setVisible((this.isVisibilidadCeldaCopiarProducto && this.isPermisoCopiarProducto));
			this.jButtonVerFormProducto.setVisible((this.isVisibilidadCeldaVerFormProducto && this.isPermisoVerFormProducto));
			
			this.jButtonAbrirOrderByProducto.setVisible((this.isVisibilidadCeldaOrdenProducto && this.isPermisoOrdenProducto));			
			
			this.jButtonNuevoRelacionesProducto.setVisible((this.isVisibilidadCeldaNuevoRelacionesProducto && this.isPermisoNuevoProducto));			
			this.jButtonNuevoGuardarCambiosProducto.setVisible((this.isVisibilidadCeldaNuevoProducto && this.isPermisoNuevoProducto && this.isPermisoGuardarCambiosProducto));
			
			if(this.jInternalFrameDetalleFormProducto!=null) {
			this.jInternalFrameDetalleFormProducto.jButtonModificarProducto.setVisible((this.isVisibilidadCeldaModificarProducto && this.isPermisoActualizarProducto));	
			this.jInternalFrameDetalleFormProducto.jButtonActualizarProducto.setVisible((this.isVisibilidadCeldaActualizarProducto && this.isPermisoActualizarProducto));	
			this.jInternalFrameDetalleFormProducto.jButtonEliminarProducto.setVisible((this.isVisibilidadCeldaEliminarProducto && this.isPermisoEliminarProducto));
			this.jInternalFrameDetalleFormProducto.jButtonCancelarProducto.setVisible(this.isVisibilidadCeldaCancelarProducto);							
			this.jInternalFrameDetalleFormProducto.jButtonGuardarCambiosProducto.setVisible((this.isVisibilidadCeldaGuardarProducto && this.isPermisoGuardarCambiosProducto));			
			
			}
						
			this.jButtonGuardarCambiosTablaProducto.setVisible((this.isVisibilidadCeldaGuardarCambiosProducto && this.isPermisoGuardarCambiosProducto));							
			
			//TOOLBAR
			
			this.jButtonNuevoToolBarProducto.setVisible((this.isVisibilidadCeldaNuevoProducto && this.isPermisoNuevoProducto));						
			this.jButtonDuplicarToolBarProducto.setVisible((this.isVisibilidadCeldaDuplicarProducto && this.isPermisoDuplicarProducto));						
			this.jButtonCopiarToolBarProducto.setVisible((this.isVisibilidadCeldaCopiarProducto && this.isPermisoCopiarProducto));			
			this.jButtonVerFormToolBarProducto.setVisible((this.isVisibilidadCeldaVerFormProducto && this.isPermisoVerFormProducto));			
			this.jButtonAbrirOrderByToolBarProducto.setVisible((this.isVisibilidadCeldaOrdenProducto && this.isPermisoOrdenProducto));
			this.jButtonNuevoRelacionesToolBarProducto.setVisible((this.isVisibilidadCeldaNuevoRelacionesProducto && this.isPermisoNuevoProducto));			
			this.jButtonNuevoGuardarCambiosToolBarProducto.setVisible((this.isVisibilidadCeldaNuevoProducto && this.isPermisoNuevoProducto && this.isPermisoGuardarCambiosProducto));			
			
			if(this.jInternalFrameDetalleFormProducto!=null) {
			this.jInternalFrameDetalleFormProducto.jButtonModificarToolBarProducto.setVisible((this.isVisibilidadCeldaModificarProducto && this.isPermisoActualizarProducto));	
			this.jInternalFrameDetalleFormProducto.jButtonActualizarToolBarProducto.setVisible((this.isVisibilidadCeldaActualizarProducto  && this.isPermisoActualizarProducto));	
			this.jInternalFrameDetalleFormProducto.jButtonEliminarToolBarProducto.setVisible((this.isVisibilidadCeldaEliminarProducto && this.isPermisoEliminarProducto));
			this.jInternalFrameDetalleFormProducto.jButtonCancelarToolBarProducto.setVisible(this.isVisibilidadCeldaCancelarProducto);				
			this.jInternalFrameDetalleFormProducto.jButtonGuardarCambiosToolBarProducto.setVisible((this.isVisibilidadCeldaGuardarProducto && this.isPermisoGuardarCambiosProducto));									
			}
			
			this.jButtonGuardarCambiosTablaToolBarProducto.setVisible((this.isVisibilidadCeldaGuardarCambiosProducto && this.isPermisoGuardarCambiosProducto));									
			
			//TOOLBAR
			
			//MENUS
			
			this.jMenuItemNuevoProducto.setVisible((this.isVisibilidadCeldaNuevoProducto && this.isPermisoNuevoProducto));			
			this.jMenuItemDuplicarProducto.setVisible((this.isVisibilidadCeldaDuplicarProducto && this.isPermisoDuplicarProducto));			
			this.jMenuItemCopiarProducto.setVisible((this.isVisibilidadCeldaCopiarProducto && this.isPermisoCopiarProducto));			
			this.jMenuItemVerFormProducto.setVisible((this.isVisibilidadCeldaVerFormProducto && this.isPermisoVerFormProducto));			
			this.jMenuItemAbrirOrderByProducto.setVisible((this.isVisibilidadCeldaOrdenProducto && this.isPermisoOrdenProducto));			
			//this.jMenuItemMostrarOcultarProducto.setVisible((this.isVisibilidadCeldaOrdenProducto && this.isPermisoOrdenProducto));
			this.jMenuItemDetalleAbrirOrderByProducto.setVisible((this.isVisibilidadCeldaOrdenProducto && this.isPermisoOrdenProducto));			
			//this.jMenuItemDetalleMostrarOcultarProducto.setVisible((this.isVisibilidadCeldaOrdenProducto && this.isPermisoOrdenProducto));			
			this.jMenuItemNuevoRelacionesProducto.setVisible((this.isVisibilidadCeldaNuevoRelacionesProducto && this.isPermisoNuevoProducto));			
			this.jMenuItemNuevoGuardarCambiosProducto.setVisible((this.isVisibilidadCeldaNuevoProducto && this.isPermisoNuevoProducto && this.isPermisoGuardarCambiosProducto));									
			
			if(this.jInternalFrameDetalleFormProducto!=null) {
			this.jInternalFrameDetalleFormProducto.jMenuItemModificarProducto.setVisible((this.isVisibilidadCeldaModificarProducto && this.isPermisoActualizarProducto));	
			this.jInternalFrameDetalleFormProducto.jMenuItemActualizarProducto.setVisible((this.isVisibilidadCeldaActualizarProducto && this.isPermisoActualizarProducto));	
			this.jInternalFrameDetalleFormProducto.jMenuItemEliminarProducto.setVisible((this.isVisibilidadCeldaEliminarProducto && this.isPermisoEliminarProducto));
			this.jInternalFrameDetalleFormProducto.jMenuItemCancelarProducto.setVisible(this.isVisibilidadCeldaCancelarProducto);				
			}
			
			this.jMenuItemGuardarCambiosProducto.setVisible((this.isVisibilidadCeldaGuardarProducto && this.isPermisoGuardarCambiosProducto));						
			this.jMenuItemGuardarCambiosTablaProducto.setVisible((this.isVisibilidadCeldaGuardarCambiosProducto && this.isPermisoGuardarCambiosProducto));						
			
			//MENUS
			
		} else {
			this.isVisibilidadCeldaNuevoProducto=this.jButtonNuevoProducto.isVisible();
			this.isVisibilidadCeldaDuplicarProducto=this.jButtonDuplicarProducto.isVisible();
			this.isVisibilidadCeldaCopiarProducto=this.jButtonCopiarProducto.isVisible();
			this.isVisibilidadCeldaVerFormProducto=this.jButtonVerFormProducto.isVisible();
			
			this.isVisibilidadCeldaOrdenProducto=this.jButtonAbrirOrderByProducto.isVisible();			
			
			this.isVisibilidadCeldaNuevoRelacionesProducto=this.jButtonNuevoRelacionesProducto.isVisible();
			this.isVisibilidadCeldaModificarProducto=this.jButtonModificarProducto.isVisible();
			
			if(this.jInternalFrameDetalleFormProducto!=null) {
			this.isVisibilidadCeldaActualizarProducto=this.jInternalFrameDetalleFormProducto.jButtonActualizarProducto.isVisible();
			this.isVisibilidadCeldaEliminarProducto=this.jInternalFrameDetalleFormProducto.jButtonEliminarProducto.isVisible();
			this.isVisibilidadCeldaCancelarProducto=this.jInternalFrameDetalleFormProducto.jButtonCancelarProducto.isVisible();
			this.isVisibilidadCeldaGuardarProducto=this.jInternalFrameDetalleFormProducto.jButtonGuardarCambiosProducto.isVisible();			
			}
			
			this.isVisibilidadCeldaGuardarCambiosProducto=this.jButtonGuardarCambiosTablaProducto.isVisible();
			
			//TOOLBAR
			
			this.isVisibilidadCeldaNuevoProducto=this.jButtonNuevoToolBarProducto.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesProducto=this.jButtonNuevoRelacionesToolBarProducto.isVisible();
			
			if(this.jInternalFrameDetalleFormProducto!=null) {
			this.isVisibilidadCeldaModificarProducto=this.jInternalFrameDetalleFormProducto.jButtonModificarToolBarProducto.isVisible();
			this.isVisibilidadCeldaActualizarProducto=this.jInternalFrameDetalleFormProducto.jButtonActualizarToolBarProducto.isVisible();
			this.isVisibilidadCeldaEliminarProducto=this.jInternalFrameDetalleFormProducto.jButtonEliminarToolBarProducto.isVisible();
			this.isVisibilidadCeldaCancelarProducto=this.jInternalFrameDetalleFormProducto.jButtonCancelarToolBarProducto.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarProducto=this.jButtonGuardarCambiosToolBarProducto.isVisible();
			this.isVisibilidadCeldaGuardarCambiosProducto=this.jButtonGuardarCambiosTablaToolBarProducto.isVisible();						
			
			//TOOLBAR
			
			//MENUS
			
			this.isVisibilidadCeldaNuevoProducto=this.jMenuItemNuevoProducto.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesProducto=this.jMenuItemNuevoRelacionesProducto.isVisible();
			
			if(this.jInternalFrameDetalleFormProducto!=null) {
			this.isVisibilidadCeldaModificarProducto=this.jInternalFrameDetalleFormProducto.jMenuItemModificarProducto.isVisible();
			this.isVisibilidadCeldaActualizarProducto=this.jInternalFrameDetalleFormProducto.jMenuItemActualizarProducto.isVisible();
			this.isVisibilidadCeldaEliminarProducto=this.jInternalFrameDetalleFormProducto.jMenuItemEliminarProducto.isVisible();
			this.isVisibilidadCeldaCancelarProducto=this.jInternalFrameDetalleFormProducto.jMenuItemCancelarProducto.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarProducto=this.jMenuItemGuardarCambiosProducto.isVisible();
			this.isVisibilidadCeldaGuardarCambiosProducto=this.jMenuItemGuardarCambiosTablaProducto.isVisible();						
			
			//MENUS
		}
	}
	
	public void inicializarActualizarBindingBotonesProducto(Boolean esInicializar) {
		if(ProductoJInternalFrame.ISBINDING_MANUAL) {			
			if(this.productoSessionBean.getConGuardarRelaciones()) {
				//if(this.productoSessionBean.getEsGuardarRelacionado()) {
				
				this.actualizarEstadoCeldasBotonesConGuardarRelacionesProducto();
			}
			
			this.inicializarActualizarBindingBotonesManualProducto(true);
			
		} else {	
		}
	}		
	
	public void inicializarActualizarBindingBotonesPermisosManualProducto() {
		this.jButtonNuevoProducto.setVisible(this.isPermisoNuevoProducto);			
		this.jButtonDuplicarProducto.setVisible(this.isPermisoDuplicarProducto);			
		this.jButtonCopiarProducto.setVisible(this.isPermisoCopiarProducto);			
		this.jButtonVerFormProducto.setVisible(this.isPermisoVerFormProducto);			
		
		this.jButtonAbrirOrderByProducto.setVisible(this.isPermisoOrdenProducto);					
		
		this.jButtonNuevoRelacionesProducto.setVisible(this.isPermisoNuevoProducto);			
		
		if(this.jInternalFrameDetalleFormProducto!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormProducto.jButtonModificarProducto.setVisible(this.isPermisoActualizarProducto);	
			this.jInternalFrameDetalleFormProducto.jButtonActualizarProducto.setVisible(this.isPermisoActualizarProducto);	
			this.jInternalFrameDetalleFormProducto.jButtonEliminarProducto.setVisible(this.isPermisoEliminarProducto);
			this.jInternalFrameDetalleFormProducto.jButtonCancelarProducto.setVisible(this.isVisibilidadCeldaCancelarProducto);						
			this.jInternalFrameDetalleFormProducto.jButtonGuardarCambiosProducto.setVisible(this.isPermisoGuardarCambiosProducto);							
		}
		
		this.jButtonGuardarCambiosTablaProducto.setVisible(this.isPermisoActualizarProducto);
	}
	
	public void inicializarActualizarBindingBotonesPermisosManualFormDetalleProducto() {
		this.jInternalFrameDetalleFormProducto.jButtonModificarProducto.setVisible(this.isPermisoActualizarProducto);	
		this.jInternalFrameDetalleFormProducto.jButtonActualizarProducto.setVisible(this.isPermisoActualizarProducto);	
		this.jInternalFrameDetalleFormProducto.jButtonEliminarProducto.setVisible(this.isPermisoEliminarProducto);
		this.jInternalFrameDetalleFormProducto.jButtonCancelarProducto.setVisible(this.isVisibilidadCeldaCancelarProducto);							
		this.jInternalFrameDetalleFormProducto.jButtonGuardarCambiosProducto.setVisible((this.isVisibilidadCeldaGuardarProducto && this.isPermisoGuardarCambiosProducto));			
	}
	
	public void inicializarActualizarBindingBotonesPermisosProducto() {
		if(ProductoJInternalFrame.ISBINDING_MANUAL) {
			this.inicializarActualizarBindingBotonesPermisosManualProducto();
		} else {
		}
	}
	
	
	public void refrescarBindingBotonesProducto() {
	}
	
	public void jTableDatosProductoListSelectionListener(javax.swing.event.ListSelectionEvent evt) throws Exception { 
		try {
			this.seleccionarProducto(null,evt,-1);
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonidProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProducto(this.getproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.producto==null) {
						this.producto = new Producto();
					}

					this.setVariablesFormularioToObjetoActualProducto(this.producto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
				}

				if(this.producto.getId()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id = "+this.producto.getId().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_empresaProductoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoempresa=true;

			idTienePermisoempresa=this.tienePermisosUsuarioEnPaginaWebProducto(EmpresaConstantesFunciones.CLASSNAME);

			if(idTienePermisoempresa) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosProducto.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosProducto.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualProducto(this.getproducto(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);

				this.empresaBeanSwingJInternalFrame=new EmpresaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.empresaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.empresaBeanSwingJInternalFrame.getEmpresaLogic().setConnexion(this.productoLogic.getConnexion());

				if(this.producto.getid_empresa()!=null) {
					this.empresaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.empresaBeanSwingJInternalFrame.setIdActual(this.producto.getid_empresa());
					this.empresaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpresa();
				}

				JInternalFrameBase jinternalFrame =this.empresaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderProducto=(TitledBorder)this.jScrollPanelDatosProducto.getBorder();
				TitledBorder titledBorderempresa=(TitledBorder)this.empresaBeanSwingJInternalFrame.jScrollPanelDatosEmpresa.getBorder();

				titledBorderempresa.setTitle(titledBorderProducto.getTitle() + " -> Empresa");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_empresaProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProducto(this.getproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.producto==null) {
						this.producto = new Producto();
					}

					this.setVariablesFormularioToObjetoActualProducto(this.producto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
				}

				if(this.producto.getid_empresa()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_empresa = "+this.producto.getid_empresa().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_sucursalProductoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisosucursal=true;

			idTienePermisosucursal=this.tienePermisosUsuarioEnPaginaWebProducto(SucursalConstantesFunciones.CLASSNAME);

			if(idTienePermisosucursal) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosProducto.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosProducto.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualProducto(this.getproducto(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);

				this.sucursalBeanSwingJInternalFrame=new SucursalBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.sucursalBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.sucursalBeanSwingJInternalFrame.getSucursalLogic().setConnexion(this.productoLogic.getConnexion());

				if(this.producto.getid_sucursal()!=null) {
					this.sucursalBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.sucursalBeanSwingJInternalFrame.setIdActual(this.producto.getid_sucursal());
					this.sucursalBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.inicializarActualizarBindingTablaSucursal();
				}

				JInternalFrameBase jinternalFrame =this.sucursalBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderProducto=(TitledBorder)this.jScrollPanelDatosProducto.getBorder();
				TitledBorder titledBordersucursal=(TitledBorder)this.sucursalBeanSwingJInternalFrame.jScrollPanelDatosSucursal.getBorder();

				titledBordersucursal.setTitle(titledBorderProducto.getTitle() + " -> Sucursal");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_sucursalProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProducto(this.getproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.producto==null) {
						this.producto = new Producto();
					}

					this.setVariablesFormularioToObjetoActualProducto(this.producto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
				}

				if(this.producto.getid_sucursal()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_sucursal = "+this.producto.getid_sucursal().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncodigoProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProducto(this.getproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.producto==null) {
						this.producto = new Producto();
					}

					this.setVariablesFormularioToObjetoActualProducto(this.producto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
				}

				if(this.producto.getcodigo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where codigo like '%"+this.producto.getcodigo()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnombreProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProducto(this.getproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.producto==null) {
						this.producto = new Producto();
					}

					this.setVariablesFormularioToObjetoActualProducto(this.producto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
				}

				if(this.producto.getnombre()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where nombre like '%"+this.producto.getnombre()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnombre_extranjeroProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProducto(this.getproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.producto==null) {
						this.producto = new Producto();
					}

					this.setVariablesFormularioToObjetoActualProducto(this.producto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
				}

				if(this.producto.getnombre_extranjero()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where nombre_extranjero like '%"+this.producto.getnombre_extranjero()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonresumen_detalleProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProducto(this.getproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.producto==null) {
						this.producto = new Producto();
					}

					this.setVariablesFormularioToObjetoActualProducto(this.producto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
				}

				if(this.producto.getresumen_detalle()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where resumen_detalle like '%"+this.producto.getresumen_detalle()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncodigo_barraProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProducto(this.getproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.producto==null) {
						this.producto = new Producto();
					}

					this.setVariablesFormularioToObjetoActualProducto(this.producto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
				}

				if(this.producto.getcodigo_barra()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where codigo_barra like '%"+this.producto.getcodigo_barra()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_lineaProductoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisolinea=true;

			idTienePermisolinea=this.tienePermisosUsuarioEnPaginaWebProducto(LineaConstantesFunciones.CLASSNAME);

			if(idTienePermisolinea) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosProducto.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosProducto.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualProducto(this.getproducto(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);

				this.lineaBeanSwingJInternalFrame=new LineaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.lineaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.lineaBeanSwingJInternalFrame.getLineaLogic().setConnexion(this.productoLogic.getConnexion());

				if(this.producto.getid_linea()!=null) {
					this.lineaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.lineaBeanSwingJInternalFrame.setIdActual(this.producto.getid_linea());
					this.lineaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.lineaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.lineaBeanSwingJInternalFrame.inicializarActualizarBindingTablaLinea();
				}

				JInternalFrameBase jinternalFrame =this.lineaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderProducto=(TitledBorder)this.jScrollPanelDatosProducto.getBorder();
				TitledBorder titledBorderlinea=(TitledBorder)this.lineaBeanSwingJInternalFrame.jScrollPanelDatosLinea.getBorder();

				titledBorderlinea.setTitle(titledBorderProducto.getTitle() + " -> Linea");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_lineaProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProducto(this.getproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.producto==null) {
						this.producto = new Producto();
					}

					this.setVariablesFormularioToObjetoActualProducto(this.producto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
				}

				if(this.producto.getid_linea()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_linea = "+this.producto.getid_linea().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_linea_grupoProductoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisolineagrupo=true;

			idTienePermisolineagrupo=this.tienePermisosUsuarioEnPaginaWebProducto(LineaConstantesFunciones.CLASSNAME);

			if(idTienePermisolineagrupo) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosProducto.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosProducto.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualProducto(this.getproducto(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);

				this.lineagrupoBeanSwingJInternalFrame=new LineaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.lineagrupoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.lineagrupoBeanSwingJInternalFrame.getLineaLogic().setConnexion(this.productoLogic.getConnexion());

				if(this.producto.getid_linea_grupo()!=null) {
					this.lineagrupoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.lineagrupoBeanSwingJInternalFrame.setIdActual(this.producto.getid_linea_grupo());
					this.lineagrupoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.lineagrupoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.lineagrupoBeanSwingJInternalFrame.inicializarActualizarBindingTablaLinea();
				}

				JInternalFrameBase jinternalFrame =this.lineagrupoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderProducto=(TitledBorder)this.jScrollPanelDatosProducto.getBorder();
				TitledBorder titledBorderlineagrupo=(TitledBorder)this.lineagrupoBeanSwingJInternalFrame.jScrollPanelDatosLinea.getBorder();

				titledBorderlineagrupo.setTitle(titledBorderProducto.getTitle() + " -> Linea");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_linea_grupoProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProducto(this.getproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.producto==null) {
						this.producto = new Producto();
					}

					this.setVariablesFormularioToObjetoActualProducto(this.producto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
				}

				if(this.producto.getid_linea_grupo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_linea_grupo = "+this.producto.getid_linea_grupo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_linea_categoriaProductoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisolineacategoria=true;

			idTienePermisolineacategoria=this.tienePermisosUsuarioEnPaginaWebProducto(LineaConstantesFunciones.CLASSNAME);

			if(idTienePermisolineacategoria) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosProducto.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosProducto.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualProducto(this.getproducto(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);

				this.lineacategoriaBeanSwingJInternalFrame=new LineaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.lineacategoriaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.lineacategoriaBeanSwingJInternalFrame.getLineaLogic().setConnexion(this.productoLogic.getConnexion());

				if(this.producto.getid_linea_categoria()!=null) {
					this.lineacategoriaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.lineacategoriaBeanSwingJInternalFrame.setIdActual(this.producto.getid_linea_categoria());
					this.lineacategoriaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.lineacategoriaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.lineacategoriaBeanSwingJInternalFrame.inicializarActualizarBindingTablaLinea();
				}

				JInternalFrameBase jinternalFrame =this.lineacategoriaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderProducto=(TitledBorder)this.jScrollPanelDatosProducto.getBorder();
				TitledBorder titledBorderlineacategoria=(TitledBorder)this.lineacategoriaBeanSwingJInternalFrame.jScrollPanelDatosLinea.getBorder();

				titledBorderlineacategoria.setTitle(titledBorderProducto.getTitle() + " -> Linea");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_linea_categoriaProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProducto(this.getproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.producto==null) {
						this.producto = new Producto();
					}

					this.setVariablesFormularioToObjetoActualProducto(this.producto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
				}

				if(this.producto.getid_linea_categoria()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_linea_categoria = "+this.producto.getid_linea_categoria().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_linea_marcaProductoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisolineamarca=true;

			idTienePermisolineamarca=this.tienePermisosUsuarioEnPaginaWebProducto(LineaConstantesFunciones.CLASSNAME);

			if(idTienePermisolineamarca) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosProducto.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosProducto.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualProducto(this.getproducto(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);

				this.lineamarcaBeanSwingJInternalFrame=new LineaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.lineamarcaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.lineamarcaBeanSwingJInternalFrame.getLineaLogic().setConnexion(this.productoLogic.getConnexion());

				if(this.producto.getid_linea_marca()!=null) {
					this.lineamarcaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.lineamarcaBeanSwingJInternalFrame.setIdActual(this.producto.getid_linea_marca());
					this.lineamarcaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.lineamarcaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.lineamarcaBeanSwingJInternalFrame.inicializarActualizarBindingTablaLinea();
				}

				JInternalFrameBase jinternalFrame =this.lineamarcaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderProducto=(TitledBorder)this.jScrollPanelDatosProducto.getBorder();
				TitledBorder titledBorderlineamarca=(TitledBorder)this.lineamarcaBeanSwingJInternalFrame.jScrollPanelDatosLinea.getBorder();

				titledBorderlineamarca.setTitle(titledBorderProducto.getTitle() + " -> Linea");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_linea_marcaProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProducto(this.getproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.producto==null) {
						this.producto = new Producto();
					}

					this.setVariablesFormularioToObjetoActualProducto(this.producto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
				}

				if(this.producto.getid_linea_marca()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_linea_marca = "+this.producto.getid_linea_marca().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_producto_servicioProductoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipoproductoservicio=true;

			idTienePermisotipoproductoservicio=this.tienePermisosUsuarioEnPaginaWebProducto(TipoProductoServicioConstantesFunciones.CLASSNAME);

			if(idTienePermisotipoproductoservicio) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosProducto.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosProducto.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualProducto(this.getproducto(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);

				this.tipoproductoservicioBeanSwingJInternalFrame=new TipoProductoServicioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipoproductoservicioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipoproductoservicioBeanSwingJInternalFrame.getTipoProductoServicioLogic().setConnexion(this.productoLogic.getConnexion());

				if(this.producto.getid_tipo_producto_servicio()!=null) {
					this.tipoproductoservicioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipoproductoservicioBeanSwingJInternalFrame.setIdActual(this.producto.getid_tipo_producto_servicio());
					this.tipoproductoservicioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipoproductoservicioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipoproductoservicioBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoProductoServicio();
				}

				JInternalFrameBase jinternalFrame =this.tipoproductoservicioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderProducto=(TitledBorder)this.jScrollPanelDatosProducto.getBorder();
				TitledBorder titledBordertipoproductoservicio=(TitledBorder)this.tipoproductoservicioBeanSwingJInternalFrame.jScrollPanelDatosTipoProductoServicio.getBorder();

				titledBordertipoproductoservicio.setTitle(titledBorderProducto.getTitle() + " -> Tipo Producto Servicio");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_producto_servicioProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProducto(this.getproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.producto==null) {
						this.producto = new Producto();
					}

					this.setVariablesFormularioToObjetoActualProducto(this.producto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
				}

				if(this.producto.getid_tipo_producto_servicio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_producto_servicio = "+this.producto.getid_tipo_producto_servicio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_producto_servicio_invenProductoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipoproductoservicioinven=true;

			idTienePermisotipoproductoservicioinven=this.tienePermisosUsuarioEnPaginaWebProducto(TipoProductoServicioInvenConstantesFunciones.CLASSNAME);

			if(idTienePermisotipoproductoservicioinven) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosProducto.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosProducto.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualProducto(this.getproducto(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);

				this.tipoproductoservicioinvenBeanSwingJInternalFrame=new TipoProductoServicioInvenBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipoproductoservicioinvenBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipoproductoservicioinvenBeanSwingJInternalFrame.getTipoProductoServicioInvenLogic().setConnexion(this.productoLogic.getConnexion());

				if(this.producto.getid_tipo_producto_servicio_inven()!=null) {
					this.tipoproductoservicioinvenBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipoproductoservicioinvenBeanSwingJInternalFrame.setIdActual(this.producto.getid_tipo_producto_servicio_inven());
					this.tipoproductoservicioinvenBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipoproductoservicioinvenBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipoproductoservicioinvenBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoProductoServicioInven();
				}

				JInternalFrameBase jinternalFrame =this.tipoproductoservicioinvenBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderProducto=(TitledBorder)this.jScrollPanelDatosProducto.getBorder();
				TitledBorder titledBordertipoproductoservicioinven=(TitledBorder)this.tipoproductoservicioinvenBeanSwingJInternalFrame.jScrollPanelDatosTipoProductoServicioInven.getBorder();

				titledBordertipoproductoservicioinven.setTitle(titledBorderProducto.getTitle() + " -> Tipo Producto Servicio Inventario");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_producto_servicio_invenProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProducto(this.getproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.producto==null) {
						this.producto = new Producto();
					}

					this.setVariablesFormularioToObjetoActualProducto(this.producto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
				}

				if(this.producto.getid_tipo_producto_servicio_inven()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_producto_servicio_inven = "+this.producto.getid_tipo_producto_servicio_inven().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_costeoProductoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipocosteo=true;

			idTienePermisotipocosteo=this.tienePermisosUsuarioEnPaginaWebProducto(TipoCosteoConstantesFunciones.CLASSNAME);

			if(idTienePermisotipocosteo) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosProducto.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosProducto.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualProducto(this.getproducto(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);

				this.tipocosteoBeanSwingJInternalFrame=new TipoCosteoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipocosteoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipocosteoBeanSwingJInternalFrame.getTipoCosteoLogic().setConnexion(this.productoLogic.getConnexion());

				if(this.producto.getid_tipo_costeo()!=null) {
					this.tipocosteoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipocosteoBeanSwingJInternalFrame.setIdActual(this.producto.getid_tipo_costeo());
					this.tipocosteoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipocosteoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipocosteoBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoCosteo();
				}

				JInternalFrameBase jinternalFrame =this.tipocosteoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderProducto=(TitledBorder)this.jScrollPanelDatosProducto.getBorder();
				TitledBorder titledBordertipocosteo=(TitledBorder)this.tipocosteoBeanSwingJInternalFrame.jScrollPanelDatosTipoCosteo.getBorder();

				titledBordertipocosteo.setTitle(titledBorderProducto.getTitle() + " -> Tipo Costeo");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_costeoProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProducto(this.getproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.producto==null) {
						this.producto = new Producto();
					}

					this.setVariablesFormularioToObjetoActualProducto(this.producto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
				}

				if(this.producto.getid_tipo_costeo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_costeo = "+this.producto.getid_tipo_costeo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_unidadProductoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisounidad=true;

			idTienePermisounidad=this.tienePermisosUsuarioEnPaginaWebProducto(UnidadConstantesFunciones.CLASSNAME);

			if(idTienePermisounidad) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosProducto.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosProducto.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualProducto(this.getproducto(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);

				this.unidadBeanSwingJInternalFrame=new UnidadBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.unidadBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.unidadBeanSwingJInternalFrame.getUnidadLogic().setConnexion(this.productoLogic.getConnexion());

				if(this.producto.getid_unidad()!=null) {
					this.unidadBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.unidadBeanSwingJInternalFrame.setIdActual(this.producto.getid_unidad());
					this.unidadBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.unidadBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.unidadBeanSwingJInternalFrame.inicializarActualizarBindingTablaUnidad();
				}

				JInternalFrameBase jinternalFrame =this.unidadBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderProducto=(TitledBorder)this.jScrollPanelDatosProducto.getBorder();
				TitledBorder titledBorderunidad=(TitledBorder)this.unidadBeanSwingJInternalFrame.jScrollPanelDatosUnidad.getBorder();

				titledBorderunidad.setTitle(titledBorderProducto.getTitle() + " -> Unidad");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_unidadProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProducto(this.getproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.producto==null) {
						this.producto = new Producto();
					}

					this.setVariablesFormularioToObjetoActualProducto(this.producto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
				}

				if(this.producto.getid_unidad()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_unidad = "+this.producto.getid_unidad().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_unidad_pesoProductoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisounidadpeso=true;

			idTienePermisounidadpeso=this.tienePermisosUsuarioEnPaginaWebProducto(UnidadConstantesFunciones.CLASSNAME);

			if(idTienePermisounidadpeso) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosProducto.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosProducto.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualProducto(this.getproducto(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);

				this.unidadpesoBeanSwingJInternalFrame=new UnidadBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.unidadpesoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.unidadpesoBeanSwingJInternalFrame.getUnidadLogic().setConnexion(this.productoLogic.getConnexion());

				if(this.producto.getid_unidad_peso()!=null) {
					this.unidadpesoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.unidadpesoBeanSwingJInternalFrame.setIdActual(this.producto.getid_unidad_peso());
					this.unidadpesoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.unidadpesoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.unidadpesoBeanSwingJInternalFrame.inicializarActualizarBindingTablaUnidad();
				}

				JInternalFrameBase jinternalFrame =this.unidadpesoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderProducto=(TitledBorder)this.jScrollPanelDatosProducto.getBorder();
				TitledBorder titledBorderunidadpeso=(TitledBorder)this.unidadpesoBeanSwingJInternalFrame.jScrollPanelDatosUnidad.getBorder();

				titledBorderunidadpeso.setTitle(titledBorderProducto.getTitle() + " -> Unidad");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_unidad_pesoProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProducto(this.getproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.producto==null) {
						this.producto = new Producto();
					}

					this.setVariablesFormularioToObjetoActualProducto(this.producto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
				}

				if(this.producto.getid_unidad_peso()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_unidad_peso = "+this.producto.getid_unidad_peso().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_arancelProductoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoarancel=true;

			idTienePermisoarancel=this.tienePermisosUsuarioEnPaginaWebProducto(ArancelConstantesFunciones.CLASSNAME);

			if(idTienePermisoarancel) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosProducto.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosProducto.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualProducto(this.getproducto(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);

				this.arancelBeanSwingJInternalFrame=new ArancelBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.arancelBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.arancelBeanSwingJInternalFrame.getArancelLogic().setConnexion(this.productoLogic.getConnexion());

				if(this.producto.getid_arancel()!=null) {
					this.arancelBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.arancelBeanSwingJInternalFrame.setIdActual(this.producto.getid_arancel());
					this.arancelBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.arancelBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.arancelBeanSwingJInternalFrame.inicializarActualizarBindingTablaArancel();
				}

				JInternalFrameBase jinternalFrame =this.arancelBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderProducto=(TitledBorder)this.jScrollPanelDatosProducto.getBorder();
				TitledBorder titledBorderarancel=(TitledBorder)this.arancelBeanSwingJInternalFrame.jScrollPanelDatosArancel.getBorder();

				titledBorderarancel.setTitle(titledBorderProducto.getTitle() + " -> Arancel");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_arancelProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProducto(this.getproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.producto==null) {
						this.producto = new Producto();
					}

					this.setVariablesFormularioToObjetoActualProducto(this.producto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
				}

				if(this.producto.getid_arancel()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_arancel = "+this.producto.getid_arancel().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_clienteProductoActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.clienteBeanSwingJInternalFrame=new ClienteBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.clienteBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.clienteBeanSwingJInternalFrame.sTipoBusqueda="Cliente";

			if(!this.sFinalQueryGeneral_cliente.equals("")) {
				this.clienteBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_cliente);
				this.clienteBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.clienteBeanSwingJInternalFrame.procesarBusqueda(this.clienteBeanSwingJInternalFrame.sAccionBusqueda);
				this.clienteBeanSwingJInternalFrame.inicializarActualizarBindingCliente(false);
			}

			if(!this.sFinalQueryComboCliente.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.clienteBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderProducto=null;
			TitledBorder titledBordercliente=null;

			if(!this.jScrollPanelDatosProducto.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderProducto=(TitledBorder)this.jScrollPanelDatosProducto.getBorder();
				titledBordercliente=(TitledBorder)this.clienteBeanSwingJInternalFrame.jScrollPanelDatosCliente.getBorder();

				titledBordercliente.setTitle(titledBorderProducto.getTitle() + " -> Cliente");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_clienteProductoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocliente=true;

			idTienePermisocliente=this.tienePermisosUsuarioEnPaginaWebProducto(ClienteConstantesFunciones.CLASSNAME);

			if(idTienePermisocliente) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosProducto.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosProducto.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualProducto(this.getproducto(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);

				this.clienteBeanSwingJInternalFrame=new ClienteBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.clienteBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.clienteBeanSwingJInternalFrame.getClienteLogic().setConnexion(this.productoLogic.getConnexion());

				if(this.producto.getid_cliente()!=null) {
					this.clienteBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.clienteBeanSwingJInternalFrame.setIdActual(this.producto.getid_cliente());
					this.clienteBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.clienteBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.clienteBeanSwingJInternalFrame.inicializarActualizarBindingTablaCliente();
				}

				JInternalFrameBase jinternalFrame =this.clienteBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderProducto=(TitledBorder)this.jScrollPanelDatosProducto.getBorder();
				TitledBorder titledBordercliente=(TitledBorder)this.clienteBeanSwingJInternalFrame.jScrollPanelDatosCliente.getBorder();

				titledBordercliente.setTitle(titledBorderProducto.getTitle() + " -> Cliente");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_clienteProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProducto(this.getproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.producto==null) {
						this.producto = new Producto();
					}

					this.setVariablesFormularioToObjetoActualProducto(this.producto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
				}

				if(this.producto.getid_cliente()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cliente = "+this.producto.getid_cliente().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_cliente_proveedor_defectoProductoActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.clienteproveedordefectoBeanSwingJInternalFrame=new ClienteBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.clienteproveedordefectoBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.clienteproveedordefectoBeanSwingJInternalFrame.sTipoBusqueda="ClienteProveedorDefecto";

			if(!this.sFinalQueryGeneral_clienteproveedordefecto.equals("")) {
				this.clienteproveedordefectoBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_clienteproveedordefecto);
				this.clienteproveedordefectoBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.clienteproveedordefectoBeanSwingJInternalFrame.procesarBusqueda(this.clienteproveedordefectoBeanSwingJInternalFrame.sAccionBusqueda);
				this.clienteproveedordefectoBeanSwingJInternalFrame.inicializarActualizarBindingCliente(false);
			}

			if(!this.sFinalQueryComboClienteProveedorDefecto.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.clienteproveedordefectoBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderProducto=null;
			TitledBorder titledBorderclienteproveedordefecto=null;

			if(!this.jScrollPanelDatosProducto.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderProducto=(TitledBorder)this.jScrollPanelDatosProducto.getBorder();
				titledBorderclienteproveedordefecto=(TitledBorder)this.clienteproveedordefectoBeanSwingJInternalFrame.jScrollPanelDatosCliente.getBorder();

				titledBorderclienteproveedordefecto.setTitle(titledBorderProducto.getTitle() + " -> Cliente");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_cliente_proveedor_defectoProductoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoclienteproveedordefecto=true;

			idTienePermisoclienteproveedordefecto=this.tienePermisosUsuarioEnPaginaWebProducto(ClienteConstantesFunciones.CLASSNAME);

			if(idTienePermisoclienteproveedordefecto) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosProducto.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosProducto.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualProducto(this.getproducto(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);

				this.clienteproveedordefectoBeanSwingJInternalFrame=new ClienteBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.clienteproveedordefectoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.clienteproveedordefectoBeanSwingJInternalFrame.getClienteLogic().setConnexion(this.productoLogic.getConnexion());

				if(this.producto.getid_cliente_proveedor_defecto()!=null) {
					this.clienteproveedordefectoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.clienteproveedordefectoBeanSwingJInternalFrame.setIdActual(this.producto.getid_cliente_proveedor_defecto());
					this.clienteproveedordefectoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.clienteproveedordefectoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.clienteproveedordefectoBeanSwingJInternalFrame.inicializarActualizarBindingTablaCliente();
				}

				JInternalFrameBase jinternalFrame =this.clienteproveedordefectoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderProducto=(TitledBorder)this.jScrollPanelDatosProducto.getBorder();
				TitledBorder titledBorderclienteproveedordefecto=(TitledBorder)this.clienteproveedordefectoBeanSwingJInternalFrame.jScrollPanelDatosCliente.getBorder();

				titledBorderclienteproveedordefecto.setTitle(titledBorderProducto.getTitle() + " -> Cliente");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_cliente_proveedor_defectoProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProducto(this.getproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.producto==null) {
						this.producto = new Producto();
					}

					this.setVariablesFormularioToObjetoActualProducto(this.producto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
				}

				if(this.producto.getid_cliente_proveedor_defecto()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cliente_proveedor_defecto = "+this.producto.getid_cliente_proveedor_defecto().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonesta_activoProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProducto(this.getproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.producto==null) {
						this.producto = new Producto();
					}

					this.setVariablesFormularioToObjetoActualProducto(this.producto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
				}

				if(this.producto.getesta_activo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where esta_activo = "+this.producto.getesta_activo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtondescripcionProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProducto(this.getproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.producto==null) {
						this.producto = new Producto();
					}

					this.setVariablesFormularioToObjetoActualProducto(this.producto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
				}

				if(this.producto.getdescripcion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where descripcion like '%"+this.producto.getdescripcion()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonprecioProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProducto(this.getproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.producto==null) {
						this.producto = new Producto();
					}

					this.setVariablesFormularioToObjetoActualProducto(this.producto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
				}

				if(this.producto.getprecio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where precio = "+this.producto.getprecio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonivaProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProducto(this.getproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.producto==null) {
						this.producto = new Producto();
					}

					this.setVariablesFormularioToObjetoActualProducto(this.producto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
				}

				if(this.producto.getiva()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where iva = "+this.producto.getiva().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoniva_valorProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProducto(this.getproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.producto==null) {
						this.producto = new Producto();
					}

					this.setVariablesFormularioToObjetoActualProducto(this.producto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
				}

				if(this.producto.getiva_valor()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where iva_valor = "+this.producto.getiva_valor().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoniceProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProducto(this.getproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.producto==null) {
						this.producto = new Producto();
					}

					this.setVariablesFormularioToObjetoActualProducto(this.producto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
				}

				if(this.producto.getice()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where ice = "+this.producto.getice().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonice_valorProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProducto(this.getproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.producto==null) {
						this.producto = new Producto();
					}

					this.setVariablesFormularioToObjetoActualProducto(this.producto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
				}

				if(this.producto.getice_valor()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where ice_valor = "+this.producto.getice_valor().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtondescuentoProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProducto(this.getproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.producto==null) {
						this.producto = new Producto();
					}

					this.setVariablesFormularioToObjetoActualProducto(this.producto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
				}

				if(this.producto.getdescuento()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where descuento = "+this.producto.getdescuento().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtondescuento_valorProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProducto(this.getproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.producto==null) {
						this.producto = new Producto();
					}

					this.setVariablesFormularioToObjetoActualProducto(this.producto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
				}

				if(this.producto.getdescuento_valor()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where descuento_valor = "+this.producto.getdescuento_valor().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonarancel_porcentajeProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProducto(this.getproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.producto==null) {
						this.producto = new Producto();
					}

					this.setVariablesFormularioToObjetoActualProducto(this.producto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
				}

				if(this.producto.getarancel_porcentaje()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where arancel_porcentaje = "+this.producto.getarancel_porcentaje().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonarancel_valorProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProducto(this.getproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.producto==null) {
						this.producto = new Producto();
					}

					this.setVariablesFormularioToObjetoActualProducto(this.producto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
				}

				if(this.producto.getarancel_valor()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where arancel_valor = "+this.producto.getarancel_valor().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncomisionProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProducto(this.getproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.producto==null) {
						this.producto = new Producto();
					}

					this.setVariablesFormularioToObjetoActualProducto(this.producto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
				}

				if(this.producto.getcomision()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where comision = "+this.producto.getcomision().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncomision_valorProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProducto(this.getproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.producto==null) {
						this.producto = new Producto();
					}

					this.setVariablesFormularioToObjetoActualProducto(this.producto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
				}

				if(this.producto.getcomision_valor()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where comision_valor = "+this.producto.getcomision_valor().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtondias_produccionProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProducto(this.getproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.producto==null) {
						this.producto = new Producto();
					}

					this.setVariablesFormularioToObjetoActualProducto(this.producto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
				}

				if(this.producto.getdias_produccion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where dias_produccion = "+this.producto.getdias_produccion().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncon_stock_negativoProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProducto(this.getproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.producto==null) {
						this.producto = new Producto();
					}

					this.setVariablesFormularioToObjetoActualProducto(this.producto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
				}

				if(this.producto.getcon_stock_negativo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where con_stock_negativo = "+this.producto.getcon_stock_negativo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncon_precio_minimoProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProducto(this.getproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.producto==null) {
						this.producto = new Producto();
					}

					this.setVariablesFormularioToObjetoActualProducto(this.producto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
				}

				if(this.producto.getcon_precio_minimo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where con_precio_minimo = "+this.producto.getcon_precio_minimo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncon_loteProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProducto(this.getproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.producto==null) {
						this.producto = new Producto();
					}

					this.setVariablesFormularioToObjetoActualProducto(this.producto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
				}

				if(this.producto.getcon_lote()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where con_lote = "+this.producto.getcon_lote().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncon_confirmacionProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProducto(this.getproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.producto==null) {
						this.producto = new Producto();
					}

					this.setVariablesFormularioToObjetoActualProducto(this.producto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
				}

				if(this.producto.getcon_confirmacion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where con_confirmacion = "+this.producto.getcon_confirmacion().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncon_presupuestoProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProducto(this.getproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.producto==null) {
						this.producto = new Producto();
					}

					this.setVariablesFormularioToObjetoActualProducto(this.producto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
				}

				if(this.producto.getcon_presupuesto()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where con_presupuesto = "+this.producto.getcon_presupuesto().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncon_importacionProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProducto(this.getproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.producto==null) {
						this.producto = new Producto();
					}

					this.setVariablesFormularioToObjetoActualProducto(this.producto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
				}

				if(this.producto.getcon_importacion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where con_importacion = "+this.producto.getcon_importacion().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncon_finalProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProducto(this.getproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.producto==null) {
						this.producto = new Producto();
					}

					this.setVariablesFormularioToObjetoActualProducto(this.producto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
				}

				if(this.producto.getcon_final()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where con_final = "+this.producto.getcon_final().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncon_consepProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProducto(this.getproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.producto==null) {
						this.producto = new Producto();
					}

					this.setVariablesFormularioToObjetoActualProducto(this.producto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
				}

				if(this.producto.getcon_consep()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where con_consep = "+this.producto.getcon_consep().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncon_serieProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProducto(this.getproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.producto==null) {
						this.producto = new Producto();
					}

					this.setVariablesFormularioToObjetoActualProducto(this.producto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
				}

				if(this.producto.getcon_serie()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where con_serie = "+this.producto.getcon_serie().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncon_balanzaProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProducto(this.getproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.producto==null) {
						this.producto = new Producto();
					}

					this.setVariablesFormularioToObjetoActualProducto(this.producto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
				}

				if(this.producto.getcon_balanza()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where con_balanza = "+this.producto.getcon_balanza().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonaltoProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProducto(this.getproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.producto==null) {
						this.producto = new Producto();
					}

					this.setVariablesFormularioToObjetoActualProducto(this.producto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
				}

				if(this.producto.getalto()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where alto = "+this.producto.getalto().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonanchoProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProducto(this.getproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.producto==null) {
						this.producto = new Producto();
					}

					this.setVariablesFormularioToObjetoActualProducto(this.producto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
				}

				if(this.producto.getancho()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where ancho = "+this.producto.getancho().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonlargoProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProducto(this.getproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.producto==null) {
						this.producto = new Producto();
					}

					this.setVariablesFormularioToObjetoActualProducto(this.producto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
				}

				if(this.producto.getlargo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where largo = "+this.producto.getlargo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonvolumenProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProducto(this.getproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.producto==null) {
						this.producto = new Producto();
					}

					this.setVariablesFormularioToObjetoActualProducto(this.producto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
				}

				if(this.producto.getvolumen()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where volumen = "+this.producto.getvolumen().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonpesoProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProducto(this.getproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.producto==null) {
						this.producto = new Producto();
					}

					this.setVariablesFormularioToObjetoActualProducto(this.producto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
				}

				if(this.producto.getpeso()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where peso = "+this.producto.getpeso().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtongramosProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProducto(this.getproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.producto==null) {
						this.producto = new Producto();
					}

					this.setVariablesFormularioToObjetoActualProducto(this.producto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
				}

				if(this.producto.getgramos()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where gramos = "+this.producto.getgramos().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonunidades_cajaProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProducto(this.getproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.producto==null) {
						this.producto = new Producto();
					}

					this.setVariablesFormularioToObjetoActualProducto(this.producto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
				}

				if(this.producto.getunidades_caja()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where unidades_caja = "+this.producto.getunidades_caja().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonmargenProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProducto(this.getproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.producto==null) {
						this.producto = new Producto();
					}

					this.setVariablesFormularioToObjetoActualProducto(this.producto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
				}

				if(this.producto.getmargen()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where margen = "+this.producto.getmargen().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfactorProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProducto(this.getproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.producto==null) {
						this.producto = new Producto();
					}

					this.setVariablesFormularioToObjetoActualProducto(this.producto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
				}

				if(this.producto.getfactor()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where factor = "+this.producto.getfactor().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfobProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProducto(this.getproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.producto==null) {
						this.producto = new Producto();
					}

					this.setVariablesFormularioToObjetoActualProducto(this.producto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
				}

				if(this.producto.getfob()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fob = "+this.producto.getfob().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfob2ProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProducto(this.getproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.producto==null) {
						this.producto = new Producto();
					}

					this.setVariablesFormularioToObjetoActualProducto(this.producto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
				}

				if(this.producto.getfob2()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fob2 = "+this.producto.getfob2().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_productoProductoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipoproducto=true;

			idTienePermisotipoproducto=this.tienePermisosUsuarioEnPaginaWebProducto(TipoProductoConstantesFunciones.CLASSNAME);

			if(idTienePermisotipoproducto) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosProducto.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosProducto.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualProducto(this.getproducto(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);

				this.tipoproductoBeanSwingJInternalFrame=new TipoProductoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipoproductoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipoproductoBeanSwingJInternalFrame.getTipoProductoLogic().setConnexion(this.productoLogic.getConnexion());

				if(this.producto.getid_tipo_producto()!=null) {
					this.tipoproductoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipoproductoBeanSwingJInternalFrame.setIdActual(this.producto.getid_tipo_producto());
					this.tipoproductoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipoproductoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipoproductoBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoProducto();
				}

				JInternalFrameBase jinternalFrame =this.tipoproductoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderProducto=(TitledBorder)this.jScrollPanelDatosProducto.getBorder();
				TitledBorder titledBordertipoproducto=(TitledBorder)this.tipoproductoBeanSwingJInternalFrame.jScrollPanelDatosTipoProducto.getBorder();

				titledBordertipoproducto.setTitle(titledBorderProducto.getTitle() + " -> Tipo Producto");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_productoProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProducto(this.getproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.producto==null) {
						this.producto = new Producto();
					}

					this.setVariablesFormularioToObjetoActualProducto(this.producto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
				}

				if(this.producto.getid_tipo_producto()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_producto = "+this.producto.getid_tipo_producto().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_color_productoProductoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocolorproducto=true;

			idTienePermisocolorproducto=this.tienePermisosUsuarioEnPaginaWebProducto(ColorProductoConstantesFunciones.CLASSNAME);

			if(idTienePermisocolorproducto) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosProducto.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosProducto.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualProducto(this.getproducto(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);

				this.colorproductoBeanSwingJInternalFrame=new ColorProductoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.colorproductoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.colorproductoBeanSwingJInternalFrame.getColorProductoLogic().setConnexion(this.productoLogic.getConnexion());

				if(this.producto.getid_color_producto()!=null) {
					this.colorproductoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.colorproductoBeanSwingJInternalFrame.setIdActual(this.producto.getid_color_producto());
					this.colorproductoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.colorproductoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.colorproductoBeanSwingJInternalFrame.inicializarActualizarBindingTablaColorProducto();
				}

				JInternalFrameBase jinternalFrame =this.colorproductoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderProducto=(TitledBorder)this.jScrollPanelDatosProducto.getBorder();
				TitledBorder titledBordercolorproducto=(TitledBorder)this.colorproductoBeanSwingJInternalFrame.jScrollPanelDatosColorProducto.getBorder();

				titledBordercolorproducto.setTitle(titledBorderProducto.getTitle() + " -> Color Producto");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_color_productoProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProducto(this.getproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.producto==null) {
						this.producto = new Producto();
					}

					this.setVariablesFormularioToObjetoActualProducto(this.producto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
				}

				if(this.producto.getid_color_producto()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_color_producto = "+this.producto.getid_color_producto().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_clase_productoProductoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoclaseproducto=true;

			idTienePermisoclaseproducto=this.tienePermisosUsuarioEnPaginaWebProducto(ClaseProductoConstantesFunciones.CLASSNAME);

			if(idTienePermisoclaseproducto) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosProducto.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosProducto.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualProducto(this.getproducto(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);

				this.claseproductoBeanSwingJInternalFrame=new ClaseProductoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.claseproductoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.claseproductoBeanSwingJInternalFrame.getClaseProductoLogic().setConnexion(this.productoLogic.getConnexion());

				if(this.producto.getid_clase_producto()!=null) {
					this.claseproductoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.claseproductoBeanSwingJInternalFrame.setIdActual(this.producto.getid_clase_producto());
					this.claseproductoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.claseproductoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.claseproductoBeanSwingJInternalFrame.inicializarActualizarBindingTablaClaseProducto();
				}

				JInternalFrameBase jinternalFrame =this.claseproductoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderProducto=(TitledBorder)this.jScrollPanelDatosProducto.getBorder();
				TitledBorder titledBorderclaseproducto=(TitledBorder)this.claseproductoBeanSwingJInternalFrame.jScrollPanelDatosClaseProducto.getBorder();

				titledBorderclaseproducto.setTitle(titledBorderProducto.getTitle() + " -> Clase Producto");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_clase_productoProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProducto(this.getproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.producto==null) {
						this.producto = new Producto();
					}

					this.setVariablesFormularioToObjetoActualProducto(this.producto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
				}

				if(this.producto.getid_clase_producto()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_clase_producto = "+this.producto.getid_clase_producto().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_efecto_productoProductoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoefectoproducto=true;

			idTienePermisoefectoproducto=this.tienePermisosUsuarioEnPaginaWebProducto(EfectoProductoConstantesFunciones.CLASSNAME);

			if(idTienePermisoefectoproducto) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosProducto.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosProducto.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualProducto(this.getproducto(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);

				this.efectoproductoBeanSwingJInternalFrame=new EfectoProductoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.efectoproductoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.efectoproductoBeanSwingJInternalFrame.getEfectoProductoLogic().setConnexion(this.productoLogic.getConnexion());

				if(this.producto.getid_efecto_producto()!=null) {
					this.efectoproductoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.efectoproductoBeanSwingJInternalFrame.setIdActual(this.producto.getid_efecto_producto());
					this.efectoproductoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.efectoproductoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.efectoproductoBeanSwingJInternalFrame.inicializarActualizarBindingTablaEfectoProducto();
				}

				JInternalFrameBase jinternalFrame =this.efectoproductoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderProducto=(TitledBorder)this.jScrollPanelDatosProducto.getBorder();
				TitledBorder titledBorderefectoproducto=(TitledBorder)this.efectoproductoBeanSwingJInternalFrame.jScrollPanelDatosEfectoProducto.getBorder();

				titledBorderefectoproducto.setTitle(titledBorderProducto.getTitle() + " -> Efecto Producto");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_efecto_productoProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProducto(this.getproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.producto==null) {
						this.producto = new Producto();
					}

					this.setVariablesFormularioToObjetoActualProducto(this.producto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
				}

				if(this.producto.getid_efecto_producto()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_efecto_producto = "+this.producto.getid_efecto_producto().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_marca_productoProductoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisomarcaproducto=true;

			idTienePermisomarcaproducto=this.tienePermisosUsuarioEnPaginaWebProducto(MarcaProductoConstantesFunciones.CLASSNAME);

			if(idTienePermisomarcaproducto) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosProducto.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosProducto.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualProducto(this.getproducto(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);

				this.marcaproductoBeanSwingJInternalFrame=new MarcaProductoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.marcaproductoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.marcaproductoBeanSwingJInternalFrame.getMarcaProductoLogic().setConnexion(this.productoLogic.getConnexion());

				if(this.producto.getid_marca_producto()!=null) {
					this.marcaproductoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.marcaproductoBeanSwingJInternalFrame.setIdActual(this.producto.getid_marca_producto());
					this.marcaproductoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.marcaproductoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.marcaproductoBeanSwingJInternalFrame.inicializarActualizarBindingTablaMarcaProducto();
				}

				JInternalFrameBase jinternalFrame =this.marcaproductoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderProducto=(TitledBorder)this.jScrollPanelDatosProducto.getBorder();
				TitledBorder titledBordermarcaproducto=(TitledBorder)this.marcaproductoBeanSwingJInternalFrame.jScrollPanelDatosMarcaProducto.getBorder();

				titledBordermarcaproducto.setTitle(titledBorderProducto.getTitle() + " -> Marca Producto");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_marca_productoProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProducto(this.getproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.producto==null) {
						this.producto = new Producto();
					}

					this.setVariablesFormularioToObjetoActualProducto(this.producto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
				}

				if(this.producto.getid_marca_producto()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_marca_producto = "+this.producto.getid_marca_producto().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_modelo_productoProductoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisomodeloproducto=true;

			idTienePermisomodeloproducto=this.tienePermisosUsuarioEnPaginaWebProducto(ModeloProductoConstantesFunciones.CLASSNAME);

			if(idTienePermisomodeloproducto) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosProducto.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosProducto.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualProducto(this.getproducto(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);

				this.modeloproductoBeanSwingJInternalFrame=new ModeloProductoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.modeloproductoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.modeloproductoBeanSwingJInternalFrame.getModeloProductoLogic().setConnexion(this.productoLogic.getConnexion());

				if(this.producto.getid_modelo_producto()!=null) {
					this.modeloproductoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.modeloproductoBeanSwingJInternalFrame.setIdActual(this.producto.getid_modelo_producto());
					this.modeloproductoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.modeloproductoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.modeloproductoBeanSwingJInternalFrame.inicializarActualizarBindingTablaModeloProducto();
				}

				JInternalFrameBase jinternalFrame =this.modeloproductoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderProducto=(TitledBorder)this.jScrollPanelDatosProducto.getBorder();
				TitledBorder titledBordermodeloproducto=(TitledBorder)this.modeloproductoBeanSwingJInternalFrame.jScrollPanelDatosModeloProducto.getBorder();

				titledBordermodeloproducto.setTitle(titledBorderProducto.getTitle() + " -> Modelo Producto");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_modelo_productoProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProducto(this.getproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.producto==null) {
						this.producto = new Producto();
					}

					this.setVariablesFormularioToObjetoActualProducto(this.producto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
				}

				if(this.producto.getid_modelo_producto()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_modelo_producto = "+this.producto.getid_modelo_producto().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_material_productoProductoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisomaterialproducto=true;

			idTienePermisomaterialproducto=this.tienePermisosUsuarioEnPaginaWebProducto(MaterialProductoConstantesFunciones.CLASSNAME);

			if(idTienePermisomaterialproducto) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosProducto.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosProducto.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualProducto(this.getproducto(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);

				this.materialproductoBeanSwingJInternalFrame=new MaterialProductoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.materialproductoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.materialproductoBeanSwingJInternalFrame.getMaterialProductoLogic().setConnexion(this.productoLogic.getConnexion());

				if(this.producto.getid_material_producto()!=null) {
					this.materialproductoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.materialproductoBeanSwingJInternalFrame.setIdActual(this.producto.getid_material_producto());
					this.materialproductoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.materialproductoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.materialproductoBeanSwingJInternalFrame.inicializarActualizarBindingTablaMaterialProducto();
				}

				JInternalFrameBase jinternalFrame =this.materialproductoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderProducto=(TitledBorder)this.jScrollPanelDatosProducto.getBorder();
				TitledBorder titledBordermaterialproducto=(TitledBorder)this.materialproductoBeanSwingJInternalFrame.jScrollPanelDatosMaterialProducto.getBorder();

				titledBordermaterialproducto.setTitle(titledBorderProducto.getTitle() + " -> Material Producto");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_material_productoProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProducto(this.getproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.producto==null) {
						this.producto = new Producto();
					}

					this.setVariablesFormularioToObjetoActualProducto(this.producto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
				}

				if(this.producto.getid_material_producto()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_material_producto = "+this.producto.getid_material_producto().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_segmento_productoProductoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisosegmentoproducto=true;

			idTienePermisosegmentoproducto=this.tienePermisosUsuarioEnPaginaWebProducto(SegmentoProductoConstantesFunciones.CLASSNAME);

			if(idTienePermisosegmentoproducto) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosProducto.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosProducto.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualProducto(this.getproducto(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);

				this.segmentoproductoBeanSwingJInternalFrame=new SegmentoProductoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.segmentoproductoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.segmentoproductoBeanSwingJInternalFrame.getSegmentoProductoLogic().setConnexion(this.productoLogic.getConnexion());

				if(this.producto.getid_segmento_producto()!=null) {
					this.segmentoproductoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.segmentoproductoBeanSwingJInternalFrame.setIdActual(this.producto.getid_segmento_producto());
					this.segmentoproductoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.segmentoproductoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.segmentoproductoBeanSwingJInternalFrame.inicializarActualizarBindingTablaSegmentoProducto();
				}

				JInternalFrameBase jinternalFrame =this.segmentoproductoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderProducto=(TitledBorder)this.jScrollPanelDatosProducto.getBorder();
				TitledBorder titledBordersegmentoproducto=(TitledBorder)this.segmentoproductoBeanSwingJInternalFrame.jScrollPanelDatosSegmentoProducto.getBorder();

				titledBordersegmentoproducto.setTitle(titledBorderProducto.getTitle() + " -> Segmento Producto");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_segmento_productoProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProducto(this.getproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.producto==null) {
						this.producto = new Producto();
					}

					this.setVariablesFormularioToObjetoActualProducto(this.producto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
				}

				if(this.producto.getid_segmento_producto()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_segmento_producto = "+this.producto.getid_segmento_producto().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_talla_productoProductoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotallaproducto=true;

			idTienePermisotallaproducto=this.tienePermisosUsuarioEnPaginaWebProducto(TallaProductoConstantesFunciones.CLASSNAME);

			if(idTienePermisotallaproducto) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosProducto.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosProducto.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualProducto(this.getproducto(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);

				this.tallaproductoBeanSwingJInternalFrame=new TallaProductoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tallaproductoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tallaproductoBeanSwingJInternalFrame.getTallaProductoLogic().setConnexion(this.productoLogic.getConnexion());

				if(this.producto.getid_talla_producto()!=null) {
					this.tallaproductoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tallaproductoBeanSwingJInternalFrame.setIdActual(this.producto.getid_talla_producto());
					this.tallaproductoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tallaproductoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tallaproductoBeanSwingJInternalFrame.inicializarActualizarBindingTablaTallaProducto();
				}

				JInternalFrameBase jinternalFrame =this.tallaproductoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderProducto=(TitledBorder)this.jScrollPanelDatosProducto.getBorder();
				TitledBorder titledBordertallaproducto=(TitledBorder)this.tallaproductoBeanSwingJInternalFrame.jScrollPanelDatosTallaProducto.getBorder();

				titledBordertallaproducto.setTitle(titledBorderProducto.getTitle() + " -> Talla Producto");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_talla_productoProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProducto(this.getproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.producto==null) {
						this.producto = new Producto();
					}

					this.setVariablesFormularioToObjetoActualProducto(this.producto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
				}

				if(this.producto.getid_talla_producto()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_talla_producto = "+this.producto.getid_talla_producto().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtongrupoProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProducto(this.getproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.producto==null) {
						this.producto = new Producto();
					}

					this.setVariablesFormularioToObjetoActualProducto(this.producto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
				}

				if(this.producto.getgrupo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where grupo like '%"+this.producto.getgrupo()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonreferenciaProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProducto(this.getproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.producto==null) {
						this.producto = new Producto();
					}

					this.setVariablesFormularioToObjetoActualProducto(this.producto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
				}

				if(this.producto.getreferencia()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where referencia like '%"+this.producto.getreferencia()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonaplicacionProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProducto(this.getproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.producto==null) {
						this.producto = new Producto();
					}

					this.setVariablesFormularioToObjetoActualProducto(this.producto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
				}

				if(this.producto.getaplicacion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where aplicacion like '%"+this.producto.getaplicacion()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonprocedenciaProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProducto(this.getproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.producto==null) {
						this.producto = new Producto();
					}

					this.setVariablesFormularioToObjetoActualProducto(this.producto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);
				}

				if(this.producto.getprocedencia()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where procedencia like '%"+this.producto.getprocedencia()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoLogic.closeNewConnexionToDeep();
				}

			}
		}

	
	
	public void jButtonBusquedaPorCodigoProductoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingProducto(false,false);

			this.getProductosBusquedaPorCodigo();

			this.inicializarActualizarBindingProducto(false);

			//if(ProductoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingProducto(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonBusquedaPorNombreProductoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingProducto(false,false);

			this.getProductosBusquedaPorNombre();

			this.inicializarActualizarBindingProducto(false);

			//if(ProductoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingProducto(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonBusquedaPorNombreExtranjeroProductoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingProducto(false,false);

			this.getProductosBusquedaPorNombreExtranjero();

			this.inicializarActualizarBindingProducto(false);

			//if(ProductoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingProducto(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdArancelProductoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingProducto(false,false);

			this.getProductosFK_IdArancel();

			this.inicializarActualizarBindingProducto(false);

			//if(ProductoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingProducto(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdClaseProductoProductoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingProducto(false,false);

			this.getProductosFK_IdClaseProducto();

			this.inicializarActualizarBindingProducto(false);

			//if(ProductoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingProducto(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdClienteProductoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingProducto(false,false);

			this.getProductosFK_IdCliente();

			this.inicializarActualizarBindingProducto(false);

			//if(ProductoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingProducto(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdClienteProveedorDefectoProductoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingProducto(false,false);

			this.getProductosFK_IdClienteProveedorDefecto();

			this.inicializarActualizarBindingProducto(false);

			//if(ProductoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingProducto(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdColorProductoProductoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingProducto(false,false);

			this.getProductosFK_IdColorProducto();

			this.inicializarActualizarBindingProducto(false);

			//if(ProductoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingProducto(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEfectoProductoProductoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingProducto(false,false);

			this.getProductosFK_IdEfectoProducto();

			this.inicializarActualizarBindingProducto(false);

			//if(ProductoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingProducto(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEmpresaProductoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingProducto(false,false);

			this.getProductosFK_IdEmpresa();

			this.inicializarActualizarBindingProducto(false);

			//if(ProductoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingProducto(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdLineaProductoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingProducto(false,false);

			this.getProductosFK_IdLinea();

			this.inicializarActualizarBindingProducto(false);

			//if(ProductoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingProducto(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdLineaCategoriaProductoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingProducto(false,false);

			this.getProductosFK_IdLineaCategoria();

			this.inicializarActualizarBindingProducto(false);

			//if(ProductoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingProducto(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdLineaGrupoProductoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingProducto(false,false);

			this.getProductosFK_IdLineaGrupo();

			this.inicializarActualizarBindingProducto(false);

			//if(ProductoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingProducto(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdLineaMarcaProductoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingProducto(false,false);

			this.getProductosFK_IdLineaMarca();

			this.inicializarActualizarBindingProducto(false);

			//if(ProductoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingProducto(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdMarcaProductoProductoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingProducto(false,false);

			this.getProductosFK_IdMarcaProducto();

			this.inicializarActualizarBindingProducto(false);

			//if(ProductoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingProducto(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdMaterialProductoProductoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingProducto(false,false);

			this.getProductosFK_IdMaterialProducto();

			this.inicializarActualizarBindingProducto(false);

			//if(ProductoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingProducto(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdModeloProductoProductoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingProducto(false,false);

			this.getProductosFK_IdModeloProducto();

			this.inicializarActualizarBindingProducto(false);

			//if(ProductoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingProducto(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdSegmentoProductoProductoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingProducto(false,false);

			this.getProductosFK_IdSegmentoProducto();

			this.inicializarActualizarBindingProducto(false);

			//if(ProductoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingProducto(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdSucursalProductoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingProducto(false,false);

			this.getProductosFK_IdSucursal();

			this.inicializarActualizarBindingProducto(false);

			//if(ProductoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingProducto(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTallaProductoProductoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingProducto(false,false);

			this.getProductosFK_IdTallaProducto();

			this.inicializarActualizarBindingProducto(false);

			//if(ProductoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingProducto(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoCosteoProductoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingProducto(false,false);

			this.getProductosFK_IdTipoCosteo();

			this.inicializarActualizarBindingProducto(false);

			//if(ProductoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingProducto(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoProductoProductoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingProducto(false,false);

			this.getProductosFK_IdTipoProducto();

			this.inicializarActualizarBindingProducto(false);

			//if(ProductoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingProducto(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoProductoServicioProductoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingProducto(false,false);

			this.getProductosFK_IdTipoProductoServicio();

			this.inicializarActualizarBindingProducto(false);

			//if(ProductoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingProducto(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoProductoServicioInvenProductoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingProducto(false,false);

			this.getProductosFK_IdTipoProductoServicioInven();

			this.inicializarActualizarBindingProducto(false);

			//if(ProductoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingProducto(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdUnidadProductoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingProducto(false,false);

			this.getProductosFK_IdUnidad();

			this.inicializarActualizarBindingProducto(false);

			//if(ProductoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingProducto(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdUnidadPesoProductoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingProducto(false,false);

			this.getProductosFK_IdUnidadPeso();

			this.inicializarActualizarBindingProducto(false);

			//if(ProductoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingProducto(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.productoLogic.closeNewConnexionToDeep();
			}
		}
	}

	
	public void closingInternalFrameProducto() {
		if(this.jInternalFrameDetalleFormProducto!=null) {
		

		if(this.jInternalFrameDetalleFormProducto.proveedorproductoBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormProducto.proveedorproductoBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormProducto.proveedorproductoBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormProducto.proveedorproductoBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormProducto.proveedorproductoBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormProducto.proveedorproductoBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormProducto.proveedorproductoBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormProducto.proveedorproductoBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormProducto.precioBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormProducto.precioBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormProducto.precioBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormProducto.precioBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormProducto.precioBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormProducto.precioBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormProducto.precioBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormProducto.precioBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormProducto.presupuestoventasBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormProducto.presupuestoventasBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormProducto.presupuestoventasBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormProducto.presupuestoventasBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormProducto.presupuestoventasBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormProducto.presupuestoventasBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormProducto.presupuestoventasBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormProducto.presupuestoventasBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormProducto.politicaproductoBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormProducto.politicaproductoBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormProducto.politicaproductoBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormProducto.politicaproductoBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormProducto.politicaproductoBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormProducto.politicaproductoBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormProducto.politicaproductoBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormProducto.politicaproductoBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormProducto.ubicacionproduBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormProducto.ubicacionproduBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormProducto.ubicacionproduBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormProducto.ubicacionproduBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormProducto.ubicacionproduBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormProducto.ubicacionproduBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormProducto.ubicacionproduBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormProducto.ubicacionproduBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormProducto.parametroproductoBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormProducto.parametroproductoBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormProducto.parametroproductoBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormProducto.parametroproductoBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormProducto.parametroproductoBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormProducto.parametroproductoBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormProducto.parametroproductoBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormProducto.parametroproductoBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormProducto.productounidadBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormProducto.productounidadBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormProducto.productounidadBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormProducto.productounidadBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormProducto.productounidadBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormProducto.productounidadBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormProducto.productounidadBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormProducto.productounidadBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormProducto.ingredienteBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormProducto.ingredienteBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormProducto.ingredienteBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormProducto.ingredienteBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormProducto.ingredienteBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormProducto.ingredienteBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormProducto.ingredienteBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormProducto.ingredienteBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormProducto.productocaracBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormProducto.productocaracBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormProducto.productocaracBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormProducto.productocaracBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormProducto.productocaracBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormProducto.productocaracBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormProducto.productocaracBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormProducto.productocaracBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormProducto.servicioclienteBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormProducto.servicioclienteBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormProducto.servicioclienteBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormProducto.servicioclienteBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormProducto.servicioclienteBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormProducto.servicioclienteBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormProducto.servicioclienteBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormProducto.servicioclienteBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormProducto.productopromocionBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormProducto.productopromocionBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormProducto.productopromocionBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormProducto.productopromocionBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormProducto.productopromocionBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormProducto.productopromocionBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormProducto.productopromocionBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormProducto.productopromocionBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormProducto.productoespeciBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormProducto.productoespeciBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormProducto.productoespeciBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormProducto.productoespeciBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormProducto.productoespeciBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormProducto.productoespeciBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormProducto.productoespeciBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormProducto.productoespeciBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormProducto.productoestadisticaBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormProducto.productoestadisticaBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormProducto.productoestadisticaBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormProducto.productoestadisticaBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormProducto.productoestadisticaBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormProducto.productoestadisticaBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormProducto.productoestadisticaBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormProducto.productoestadisticaBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormProducto.politicafactuBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormProducto.politicafactuBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormProducto.politicafactuBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormProducto.politicafactuBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormProducto.politicafactuBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormProducto.politicafactuBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormProducto.politicafactuBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormProducto.politicafactuBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormProducto.productocuentacontableBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormProducto.productocuentacontableBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormProducto.productocuentacontableBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormProducto.productocuentacontableBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormProducto.productocuentacontableBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormProducto.productocuentacontableBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormProducto.productocuentacontableBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormProducto.productocuentacontableBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormProducto.bodegaproductoBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormProducto.bodegaproductoBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormProducto.bodegaproductoBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormProducto.bodegaproductoBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormProducto.bodegaproductoBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormProducto.bodegaproductoBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormProducto.bodegaproductoBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormProducto.bodegaproductoBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormProducto.presupuestoproductoBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormProducto.presupuestoproductoBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormProducto.presupuestoproductoBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormProducto.presupuestoproductoBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormProducto.presupuestoproductoBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormProducto.presupuestoproductoBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormProducto.presupuestoproductoBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormProducto.presupuestoproductoBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormProducto.saldomesproductoBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormProducto.saldomesproductoBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormProducto.saldomesproductoBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormProducto.saldomesproductoBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormProducto.saldomesproductoBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormProducto.saldomesproductoBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormProducto.saldomesproductoBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormProducto.saldomesproductoBeanSwingJInternalFramePopup=null;
		}	
		
		
		}
		
		if(this.jInternalFrameDetalleFormProducto!=null) {
			this.jInternalFrameDetalleFormProducto.setVisible(false);	    			
			this.jInternalFrameDetalleFormProducto.dispose();
			this.jInternalFrameDetalleFormProducto=null;
		}
		
		
		if(this.jInternalFrameReporteDinamicoProducto!=null) {
			this.jInternalFrameReporteDinamicoProducto.setVisible(false);	    			
			this.jInternalFrameReporteDinamicoProducto.dispose();
			this.jInternalFrameReporteDinamicoProducto=null;
		}
		
		if(this.jInternalFrameImportacionProducto!=null) {
			this.jInternalFrameImportacionProducto.setVisible(false);	    			
			this.jInternalFrameImportacionProducto.dispose();
			this.jInternalFrameImportacionProducto=null;
		}		
		
		
		this.setVisible(false);
		this.dispose();
		//this=null;
	}
	
	
	
	public void jButtonActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {			
			this.startProcessProducto();
			
			ProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.producto,new Object(),this.productoParameterGeneral,this.productoReturnGeneral);
			
			
			if(sTipo.equals("NuevoProducto")) {
				jButtonNuevoProductoActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarProducto")) {
				jButtonDuplicarProductoActionPerformed(evt,false);
			} else if(sTipo.equals("CopiarProducto")) {
				jButtonCopiarProductoActionPerformed(evt);
			} else if(sTipo.equals("VerFormProducto")) {
				jButtonVerFormProductoActionPerformed(evt);
			} else if(sTipo.equals("NuevoToolBarProducto")) {
				jButtonNuevoProductoActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarToolBarProducto")) {
				jButtonDuplicarProductoActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemNuevoProducto")) {
				jButtonNuevoProductoActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemDuplicarProducto")) {
				jButtonDuplicarProductoActionPerformed(evt,false);
			} else if(sTipo.equals("NuevoRelacionesProducto")) {
				jButtonNuevoProductoActionPerformed(evt,true);
			} else if(sTipo.equals("NuevoRelacionesToolBarProducto")) {
				jButtonNuevoProductoActionPerformed(evt,true);
			} else if(sTipo.equals("MenuItemNuevoRelacionesProducto")) {
				jButtonNuevoProductoActionPerformed(evt,true);
			} else if(sTipo.equals("ModificarProducto")) {
				jButtonModificarProductoActionPerformed(evt);
			} else if(sTipo.equals("ModificarToolBarProducto")) {
				jButtonModificarProductoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemModificarProducto")) {
				jButtonModificarProductoActionPerformed(evt);
			} else if(sTipo.equals("ActualizarProducto")) {
				jButtonActualizarProductoActionPerformed(evt);
			} else if(sTipo.equals("ActualizarToolBarProducto")) {
				jButtonActualizarProductoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemActualizarProducto")) {
				jButtonActualizarProductoActionPerformed(evt);
			} else if(sTipo.equals("EliminarProducto")) {
				jButtonEliminarProductoActionPerformed(evt);
			} else if(sTipo.equals("EliminarToolBarProducto")) {
				jButtonEliminarProductoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemEliminarProducto")) {
				jButtonEliminarProductoActionPerformed(evt);
			} else if(sTipo.equals("CancelarProducto")) {
				jButtonCancelarProductoActionPerformed(evt);
			} else if(sTipo.equals("CancelarToolBarProducto")) {
				jButtonCancelarProductoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCancelarProducto")) {
				jButtonCancelarProductoActionPerformed(evt);
			} else if(sTipo.equals("CerrarProducto")) {
				jButtonCerrarProductoActionPerformed(evt);
			} else if(sTipo.equals("CerrarToolBarProducto")) {
				jButtonCerrarProductoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCerrarProducto")) {
				jButtonCerrarProductoActionPerformed(evt);
			} else if(sTipo.equals("MostrarOcultarToolBarProducto")) {
				jButtonMostrarOcultarProductoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemDetalleCerrarProducto")) {
				jButtonCancelarProductoActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosProducto")) {
				jButtonGuardarCambiosProductoActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosToolBarProducto")) {
				jButtonGuardarCambiosProductoActionPerformed(evt);
			} else if(sTipo.equals("CopiarToolBarProducto")) {
				jButtonCopiarProductoActionPerformed(evt);
			} else if(sTipo.equals("VerFormToolBarProducto")) {
				jButtonVerFormProductoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosProducto")) {
				jButtonGuardarCambiosProductoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCopiarProducto")) {
				jButtonCopiarProductoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemVerFormProducto")) {
				jButtonVerFormProductoActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaProducto")) {
				jButtonGuardarCambiosProductoActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaToolBarProducto")) {
				jButtonGuardarCambiosProductoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosTablaProducto")) {
				jButtonGuardarCambiosProductoActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionProducto")) {
				jButtonRecargarInformacionProductoActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionToolBarProducto")) {
				jButtonRecargarInformacionProductoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemRecargarInformacionProducto")) {
				jButtonRecargarInformacionProductoActionPerformed(evt);
			}
			else if(sTipo.equals("AnterioresProducto")) {
				jButtonAnterioresProductoActionPerformed(evt);
			} else if(sTipo.equals("AnterioresToolBarProducto")) {
				jButtonAnterioresProductoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAnterioreProducto")) {
				jButtonAnterioresProductoActionPerformed(evt);
			} else if(sTipo.equals("SiguientesProducto")) {
				jButtonSiguientesProductoActionPerformed(evt);
			} else if(sTipo.equals("SiguientesToolBarProducto")) {
				jButtonSiguientesProductoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemSiguientesProducto")) {
				jButtonSiguientesProductoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAbrirOrderByProducto") || sTipo.equals("MenuItemDetalleAbrirOrderByProducto")) {
				jButtonAbrirOrderByProductoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemMostrarOcultarProducto") || sTipo.equals("MenuItemDetalleMostrarOcultarProducto")) {
				jButtonMostrarOcultarProductoActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosProducto")) {
				jButtonNuevoGuardarCambiosProductoActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosToolBarProducto")) {
				jButtonNuevoGuardarCambiosProductoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemNuevoGuardarCambiosProducto")) {
				jButtonNuevoGuardarCambiosProductoActionPerformed(evt);
			} 
			else if(sTipo.equals("CerrarReporteDinamicoProducto")) {
				jButtonCerrarReporteDinamicoProductoActionPerformed(evt);
			} else if(sTipo.equals("GenerarReporteDinamicoProducto")) {
				jButtonGenerarReporteDinamicoProductoActionPerformed(evt);
			} else if(sTipo.equals("GenerarExcelReporteDinamicoProducto")) {
				
				jButtonGenerarExcelReporteDinamicoProductoActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarImportacionProducto")) {
				jButtonCerrarImportacionProductoActionPerformed(evt);
			} else if(sTipo.equals("GenerarImportacionProducto")) {
				
				jButtonGenerarImportacionProductoActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirImportacionProducto")) {
				
				jButtonAbrirImportacionProductoActionPerformed(evt);
				
			} else if(sTipo.equals("TiposAccionesProducto")) {
				jComboBoxTiposAccionesProductoActionListener(evt,false);
			} else if(sTipo.equals("TiposRelacionesProducto")) {
				jComboBoxTiposRelacionesProductoActionListener(evt);
			} else if(sTipo.equals("TiposAccionesFormularioProducto")) {
				jComboBoxTiposAccionesProductoActionListener(evt,true);
			} else if(sTipo.equals("TiposSeleccionarProducto")) {
				
				jComboBoxTiposSeleccionarProductoActionListener(evt);
				
			} else if(sTipo.equals("ValorCampoGeneralProducto")) {
				jTextFieldValorCampoGeneralProductoActionListener(evt);
			}
			
			
			else if(sTipo.equals("AbrirOrderByProducto")) {
				jButtonAbrirOrderByProductoActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirOrderByToolBarProducto")) {
				jButtonAbrirOrderByProductoActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarOrderByProducto")) {
				jButtonCerrarOrderByProductoActionPerformed(evt);
			} 
						
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idProductoBusqueda")) {
				this.jButtonidProductoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaProductoUpdate")) {
				this.jButtonid_empresaProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaProductoBusqueda")) {
				this.jButtonid_empresaProductoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalProductoUpdate")) {
				this.jButtonid_sucursalProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalProductoBusqueda")) {
				this.jButtonid_sucursalProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("codigoProductoBusqueda")) {
				this.jButtoncodigoProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("nombreProductoBusqueda")) {
				this.jButtonnombreProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("nombre_extranjeroProductoBusqueda")) {
				this.jButtonnombre_extranjeroProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("resumen_detalleProductoBusqueda")) {
				this.jButtonresumen_detalleProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("codigo_barraProductoBusqueda")) {
				this.jButtoncodigo_barraProductoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_lineaProductoUpdate")) {
				this.jButtonid_lineaProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_lineaProductoBusqueda")) {
				this.jButtonid_lineaProductoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_linea_grupoProductoUpdate")) {
				this.jButtonid_linea_grupoProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_linea_grupoProductoBusqueda")) {
				this.jButtonid_linea_grupoProductoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_linea_categoriaProductoUpdate")) {
				this.jButtonid_linea_categoriaProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_linea_categoriaProductoBusqueda")) {
				this.jButtonid_linea_categoriaProductoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_linea_marcaProductoUpdate")) {
				this.jButtonid_linea_marcaProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_linea_marcaProductoBusqueda")) {
				this.jButtonid_linea_marcaProductoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_producto_servicioProductoUpdate")) {
				this.jButtonid_tipo_producto_servicioProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_producto_servicioProductoBusqueda")) {
				this.jButtonid_tipo_producto_servicioProductoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_producto_servicio_invenProductoUpdate")) {
				this.jButtonid_tipo_producto_servicio_invenProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_producto_servicio_invenProductoBusqueda")) {
				this.jButtonid_tipo_producto_servicio_invenProductoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_costeoProductoUpdate")) {
				this.jButtonid_tipo_costeoProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_costeoProductoBusqueda")) {
				this.jButtonid_tipo_costeoProductoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_unidadProductoUpdate")) {
				this.jButtonid_unidadProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_unidadProductoBusqueda")) {
				this.jButtonid_unidadProductoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_unidad_pesoProductoUpdate")) {
				this.jButtonid_unidad_pesoProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_unidad_pesoProductoBusqueda")) {
				this.jButtonid_unidad_pesoProductoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_arancelProductoUpdate")) {
				this.jButtonid_arancelProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_arancelProductoBusqueda")) {
				this.jButtonid_arancelProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_clienteProducto")) {
				this.jButtonid_clienteProductoActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_clienteProductoUpdate")) {
				this.jButtonid_clienteProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_clienteProductoBusqueda")) {
				this.jButtonid_clienteProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_cliente_proveedor_defectoProducto")) {
				this.jButtonid_cliente_proveedor_defectoProductoActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cliente_proveedor_defectoProductoUpdate")) {
				this.jButtonid_cliente_proveedor_defectoProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cliente_proveedor_defectoProductoBusqueda")) {
				this.jButtonid_cliente_proveedor_defectoProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("esta_activoProductoBusqueda")) {
				this.jButtonesta_activoProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descripcionProductoBusqueda")) {
				this.jButtondescripcionProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("precioProductoBusqueda")) {
				this.jButtonprecioProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("ivaProductoBusqueda")) {
				this.jButtonivaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("iva_valorProductoBusqueda")) {
				this.jButtoniva_valorProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("iceProductoBusqueda")) {
				this.jButtoniceProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("ice_valorProductoBusqueda")) {
				this.jButtonice_valorProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descuentoProductoBusqueda")) {
				this.jButtondescuentoProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descuento_valorProductoBusqueda")) {
				this.jButtondescuento_valorProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("arancel_porcentajeProductoBusqueda")) {
				this.jButtonarancel_porcentajeProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("arancel_valorProductoBusqueda")) {
				this.jButtonarancel_valorProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("comisionProductoBusqueda")) {
				this.jButtoncomisionProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("comision_valorProductoBusqueda")) {
				this.jButtoncomision_valorProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("dias_produccionProductoBusqueda")) {
				this.jButtondias_produccionProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_stock_negativoProductoBusqueda")) {
				this.jButtoncon_stock_negativoProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_precio_minimoProductoBusqueda")) {
				this.jButtoncon_precio_minimoProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_loteProductoBusqueda")) {
				this.jButtoncon_loteProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_confirmacionProductoBusqueda")) {
				this.jButtoncon_confirmacionProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_presupuestoProductoBusqueda")) {
				this.jButtoncon_presupuestoProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_importacionProductoBusqueda")) {
				this.jButtoncon_importacionProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_finalProductoBusqueda")) {
				this.jButtoncon_finalProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_consepProductoBusqueda")) {
				this.jButtoncon_consepProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_serieProductoBusqueda")) {
				this.jButtoncon_serieProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_balanzaProductoBusqueda")) {
				this.jButtoncon_balanzaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("altoProductoBusqueda")) {
				this.jButtonaltoProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("anchoProductoBusqueda")) {
				this.jButtonanchoProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("largoProductoBusqueda")) {
				this.jButtonlargoProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("volumenProductoBusqueda")) {
				this.jButtonvolumenProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("pesoProductoBusqueda")) {
				this.jButtonpesoProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("gramosProductoBusqueda")) {
				this.jButtongramosProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("unidades_cajaProductoBusqueda")) {
				this.jButtonunidades_cajaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("margenProductoBusqueda")) {
				this.jButtonmargenProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("factorProductoBusqueda")) {
				this.jButtonfactorProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fobProductoBusqueda")) {
				this.jButtonfobProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fob2ProductoBusqueda")) {
				this.jButtonfob2ProductoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_productoProductoUpdate")) {
				this.jButtonid_tipo_productoProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_productoProductoBusqueda")) {
				this.jButtonid_tipo_productoProductoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_color_productoProductoUpdate")) {
				this.jButtonid_color_productoProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_color_productoProductoBusqueda")) {
				this.jButtonid_color_productoProductoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_clase_productoProductoUpdate")) {
				this.jButtonid_clase_productoProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_clase_productoProductoBusqueda")) {
				this.jButtonid_clase_productoProductoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_efecto_productoProductoUpdate")) {
				this.jButtonid_efecto_productoProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_efecto_productoProductoBusqueda")) {
				this.jButtonid_efecto_productoProductoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_marca_productoProductoUpdate")) {
				this.jButtonid_marca_productoProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_marca_productoProductoBusqueda")) {
				this.jButtonid_marca_productoProductoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_modelo_productoProductoUpdate")) {
				this.jButtonid_modelo_productoProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_modelo_productoProductoBusqueda")) {
				this.jButtonid_modelo_productoProductoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_material_productoProductoUpdate")) {
				this.jButtonid_material_productoProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_material_productoProductoBusqueda")) {
				this.jButtonid_material_productoProductoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_segmento_productoProductoUpdate")) {
				this.jButtonid_segmento_productoProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_segmento_productoProductoBusqueda")) {
				this.jButtonid_segmento_productoProductoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_talla_productoProductoUpdate")) {
				this.jButtonid_talla_productoProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_talla_productoProductoBusqueda")) {
				this.jButtonid_talla_productoProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("grupoProductoBusqueda")) {
				this.jButtongrupoProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("referenciaProductoBusqueda")) {
				this.jButtonreferenciaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("aplicacionProductoBusqueda")) {
				this.jButtonaplicacionProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("procedenciaProductoBusqueda")) {
				this.jButtonprocedenciaProductoBusquedaActionPerformed(evt);
			}
			
			
			else if(sTipo.equals("id_clienteProducto")) {
				this.jButtonid_clienteProductoActionPerformed(evt);
			}
			else if(sTipo.equals("id_cliente_proveedor_defectoProducto")) {
				this.jButtonid_cliente_proveedor_defectoProductoActionPerformed(evt);
			}
			
			
			else if(sTipo.equals("BusquedaPorCodigoProducto")) {
				this.jButtonBusquedaPorCodigoProductoActionPerformed(evt);
			}
			else if(sTipo.equals("BusquedaPorNombreProducto")) {
				this.jButtonBusquedaPorNombreProductoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdClaseProductoProducto")) {
				this.jButtonFK_IdClaseProductoProductoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdClienteProducto")) {
				this.jButtonFK_IdClienteProductoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdClienteProveedorDefectoProducto")) {
				this.jButtonFK_IdClienteProveedorDefectoProductoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdLineaProducto")) {
				this.jButtonFK_IdLineaProductoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdMarcaProductoProducto")) {
				this.jButtonFK_IdMarcaProductoProductoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdModeloProductoProducto")) {
				this.jButtonFK_IdModeloProductoProductoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTipoProductoProducto")) {
				this.jButtonFK_IdTipoProductoProductoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTipoProductoServicioProducto")) {
				this.jButtonFK_IdTipoProductoServicioProductoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTipoProductoServicioInvenProducto")) {
				this.jButtonFK_IdTipoProductoServicioInvenProductoActionPerformed(evt);
			}
			
			;
			
			
			ProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.producto,new Object(),this.productoParameterGeneral,this.productoReturnGeneral);
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
			
  		} finally {
      		this.finishProcessProducto();
      	}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaProductoActual();
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				JTextField jTextField=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				if(containerParent!=null && containerParent.getClass().equals(JTableMe.class)) {
					esControlTabla=true;
				}
						
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.producto);
				
				this.actualizarInformacion("INFO_PADRE",false,this.producto);
				
				ProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.producto,new Object(),this.productoParameterGeneral,this.productoReturnGeneral);
				
				


				
				ProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.producto,new Object(),this.productoParameterGeneral,this.productoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(Producto.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Producto.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
				}
				
			} catch(Exception e) {
  				FuncionesSwing.manageException2(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
  			}
    }
	
	public Boolean existeCambioValor(ControlTipo controlTipo,String sTipo) throws Exception {
		Boolean existeCambio=true;
		
		try {
			Producto productoLocal=null;
			
			if(!this.getEsControlTabla()) {
				productoLocal=this.producto;
			} else {
				productoLocal=this.productoAnterior;
			}
			
			if(controlTipo.equals(ControlTipo.TEXTBOX)) {
				


			}
		
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
  		}
		
		return existeCambio;
	}
	
	public void jTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.producto);
				
				this.actualizarInformacion("INFO_PADRE",false,this.producto);
				
				ProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.producto,new Object(),this.productoParameterGeneral,this.productoReturnGeneral);
							
				
				


				
				ProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.producto,new Object(),this.productoParameterGeneral,this.productoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(Producto.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Producto.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaProductoActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosProducto.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoAnterior =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.productoAnterior =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
  		}
    }	
	
	//CUANDO SE CAMBIA ALGUN FORMATO(TIPO DE LETRA,NEGRILLA,ETC)
	public void jTextFieldChangedUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextField jTextField=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			ProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.producto,new Object(),this.productoParameterGeneral,this.productoReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextField=(JTextField)evt.getSource();
			
			containerParent=jTextField.getParent();
					
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {					
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			ProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.producto,new Object(),this.productoParameterGeneral,this.productoReturnGeneral);
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE QUITA ALGUN CARACTER
	public void jTextFieldRemoveUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE INGRESA ALGUN CARACTER
	public void jTextFieldInsertUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
  		}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jFormattedTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaProductoActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				Container containerParentAux=null;
				JFormattedTextField JFormattedTextField=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JFormattedTextField=(JFormattedTextField)evt.getSource();
				
				containerParentAux=JFormattedTextField.getParent();
				
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.producto);
				
				this.actualizarInformacion("INFO_PADRE",false,this.producto);
				
				ProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.producto,new Object(),this.productoParameterGeneral,this.productoReturnGeneral);
								
						
				


				
				ProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.producto,new Object(),this.productoParameterGeneral,this.productoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(Producto.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Producto.class.getName(),sTipo,"DATE",esControlTabla,conIrServidorAplicacionParent,
							id,JFormattedTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Container containerParentAux=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParentAux=jTextField.getParent();
						
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.producto);
				
				this.actualizarInformacion("INFO_PADRE",false,this.producto);
				
				ProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.producto,new Object(),this.productoParameterGeneral,this.productoReturnGeneral);
								
				
				


				
				ProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.producto,new Object(),this.productoParameterGeneral,this.productoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(Producto.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Producto.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaProductoActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosProducto.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoAnterior =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.productoAnterior =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.DATE,sTipo)) {
				this.actualizarInformacion("EVENTO_CONTROL",false,this.producto);
				
				this.actualizarInformacion("INFO_PADRE",false,this.producto);
			}	
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaProductoActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosProducto.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoAnterior =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.productoAnterior =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaProductoActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.producto);
			
			this.actualizarInformacion("INFO_PADRE",false,this.producto);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jTextAreaFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTAREA,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextArea jTextArea=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextArea=(JTextArea)evt.getSource();
				
				containerParent=jTextArea.getParent();
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.producto);
				
				this.actualizarInformacion("INFO_PADRE",false,this.producto);
				
				ProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.producto,new Object(),this.productoParameterGeneral,this.productoReturnGeneral);
							
				
				


				
				ProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.producto,new Object(),this.productoParameterGeneral,this.productoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(Producto.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Producto.class.getName(),sTipo,"TEXTAREA",esControlTabla,conIrServidorAplicacionParent,
							id,jTextArea, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaProductoActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosProducto.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.productoAnterior =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.productoAnterior =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaChangedUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextArea jTextArea=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			ProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.producto,new Object(),this.productoParameterGeneral,this.productoReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextArea=(JTextArea)evt.getSource();
			
			containerParent=jTextArea.getParent();
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			ProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.producto,new Object(),this.productoParameterGeneral,this.productoReturnGeneral);
			
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaRemoveUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaInsertUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jTextAreaActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaProductoActual();
			
			this.actualizarInformacion("EVENTO_CONTROL",false,this.producto);
			
			this.actualizarInformacion("INFO_PADRE",false,this.producto);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JLabel jLabel=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jLabel=(JLabel)evt.getSource();
				
				containerParent=jLabel.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.producto);
				
				this.actualizarInformacion("INFO_PADRE",false,this.producto);
				
				ProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.producto,new Object(),this.productoParameterGeneral,this.productoReturnGeneral);
								
				
				


				
				ProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.producto,new Object(),this.productoParameterGeneral,this.productoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(Producto.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Producto.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jLabel, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaProductoActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosProducto.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoAnterior =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.productoAnterior =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jLabelActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaProductoActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.producto);
			
			this.actualizarInformacion("INFO_PADRE",false,this.producto);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxItemListenerGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaProductoActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
							
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.producto);
				
				this.actualizarInformacion("INFO_PADRE",false,this.producto);
				
				ProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.producto,new Object(),this.productoParameterGeneral,this.productoReturnGeneral);
												
				
				if(sTipo.equals("SeleccionarTodosProducto")) {
					jCheckBoxSeleccionarTodosProductoItemListener(evt);
				
				} else if(sTipo.equals("SeleccionadosProducto")) {
					jCheckBoxSeleccionadosProductoItemListener(evt);
				
				} else if(sTipo.equals("NuevoToolBarProducto")) {
					
				}
				
				


				
				
				ProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.producto,new Object(),this.productoParameterGeneral,this.productoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(Producto.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Producto.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.CHECKBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				//this.actualizarInformacion("EVENTO_CONTROL",false,this.producto);
				
				//this.actualizarInformacion("INFO_PADRE",false,this.producto);
				
				ProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.producto,new Object(),this.productoParameterGeneral,this.productoReturnGeneral);
												
				
				


				
				
				ProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.producto,new Object(),this.productoParameterGeneral,this.productoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(Producto.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Producto.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaProductoActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosProducto.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.productoAnterior =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.productoAnterior =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaProductoActual();
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.producto);
				
				this.actualizarInformacion("INFO_PADRE",false,this.producto);
				
				ProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.producto,new Object(),this.productoParameterGeneral,this.productoReturnGeneral);
				
				
				ProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.producto,new Object(),this.productoParameterGeneral,this.productoReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO SE UTILIZA, SE USA EL DE ABAJO, IGUAL SE DEJA EL CODIGO COMO RESPALDO Y ES CASI IGUAL
	//ERROR:SI SE USA,AL HACER CLIC EN EL MISMO ELEMENTO O EJECUTAR SELECTEDITEM, SIEMPRE SE EJECUTA COMO SI ESCOGIERA OTRO ELEMENTO(NO DEBERIA)
	//@SuppressWarnings("rawtypes")
	public void jComboBoxActionPerformedGeneral(String sTipo,ActionEvent evt) {		
		try {
			/*		
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			Container containerParent=null;
			Component componentOpposite=null;
			Boolean esControlTabla=false;
				
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			ProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.producto,new Object(),this.productoParameterGeneral,this.productoReturnGeneral);
			JComboBox jComboBoxGenerico=null;						
			
			if(evt.getSource().getClass().equals(JComboBox.class)
				|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
					
				jComboBoxGenerico=(JComboBox)evt.getSource();
				
				containerParent=jComboBoxGenerico.getParent();
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
			}
			
			String sFinalQueryCombo="";
			
			


			if(sTipo.equals("id_lineaProducto")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormProducto.jComboBoxid_lineaProducto;
				}

				if(this.productoSessionBean.getConGuardarRelaciones()) {
					//classes=ProductoConstantesFunciones.getClassesRelationshipsOfProducto(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyLinea(jComboBoxGenerico,"Formulario");

				this.recargarFormProducto(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_lineaFK_IdLineaProducto")) {
				this.procesarActionsCombosForeignKeyLinea(jComboBoxid_lineaFK_IdLineaProducto,"FK_IdLinea");
				//recargarFormProductoLinea(jComboBoxid_lineaFK_IdLineaProducto,"FK_IdLinea");
			}
			 else if(sTipo.equals("id_linea_grupoProducto")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormProducto.jComboBoxid_linea_grupoProducto;
				}

				if(this.productoSessionBean.getConGuardarRelaciones()) {
					//classes=ProductoConstantesFunciones.getClassesRelationshipsOfProducto(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyLineaGrupo(jComboBoxGenerico,"Formulario");

				this.recargarFormProducto(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("id_linea_categoriaProducto")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormProducto.jComboBoxid_linea_categoriaProducto;
				}

				if(this.productoSessionBean.getConGuardarRelaciones()) {
					//classes=ProductoConstantesFunciones.getClassesRelationshipsOfProducto(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyLineaCategoria(jComboBoxGenerico,"Formulario");

				this.recargarFormProducto(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			
			ProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.producto,new Object(),this.productoParameterGeneral,this.productoReturnGeneral);
			*/						
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
  		}		
    }
	
	@SuppressWarnings("rawtypes")
	public void jComboBoxItemStateChangedGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if (evt.getStateChange() == ItemEvent.SELECTED && this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaProductoActual();
			
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=null;//evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}		
					
					this.esControlTabla=esControlTabla;
				}
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.producto);
				
				this.actualizarInformacion("INFO_PADRE",false,this.producto);
				
				ProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.producto,new Object(),this.productoParameterGeneral,this.productoReturnGeneral);
				
				
				String sFinalQueryCombo="";
				
				


			if(sTipo.equals("id_lineaProducto")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormProducto.jComboBoxid_lineaProducto;
				}

				if(this.productoSessionBean.getConGuardarRelaciones()) {
					//classes=ProductoConstantesFunciones.getClassesRelationshipsOfProducto(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyLinea(jComboBoxGenerico,"Formulario");

				this.recargarFormProducto(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_lineaFK_IdLineaProducto")) {
				this.procesarActionsCombosForeignKeyLinea(jComboBoxid_lineaFK_IdLineaProducto,"FK_IdLinea");
				//recargarFormProductoLinea(jComboBoxid_lineaFK_IdLineaProducto,"FK_IdLinea");
			}
			 else if(sTipo.equals("id_linea_grupoProducto")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormProducto.jComboBoxid_linea_grupoProducto;
				}

				if(this.productoSessionBean.getConGuardarRelaciones()) {
					//classes=ProductoConstantesFunciones.getClassesRelationshipsOfProducto(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyLineaGrupo(jComboBoxGenerico,"Formulario");

				this.recargarFormProducto(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("id_linea_categoriaProducto")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormProducto.jComboBoxid_linea_categoriaProducto;
				}

				if(this.productoSessionBean.getConGuardarRelaciones()) {
					//classes=ProductoConstantesFunciones.getClassesRelationshipsOfProducto(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyLineaCategoria(jComboBoxGenerico,"Formulario");

				this.recargarFormProducto(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
				
				ProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.producto,new Object(),this.productoParameterGeneral,this.productoReturnGeneral);
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(Producto.class.getName());
								
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Producto.class.getName(),sTipo,"COMBOBOX",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
  		}
    }
	
	//@SuppressWarnings("rawtypes")
	public void jComboBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		//MANEJADO EN ITEMLISTENER
		/*
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				
				//if(this.esUsoDesdeHijo) {
				//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				//}
				
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
				this.actualizarInformacion("EVENTO_CONTROL",false,this.producto);
				
				this.actualizarInformacion("INFO_PADRE",false,this.producto);
				
				ProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.producto,new Object(),this.productoParameterGeneral,this.productoReturnGeneral);
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}
					
					this.esControlTabla=esControlTabla;
				}
				
				String sFinalQueryCombo="";
				
				


			if(sTipo.equals("id_lineaProducto")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormProducto.jComboBoxid_lineaProducto;
				}

				if(this.productoSessionBean.getConGuardarRelaciones()) {
					//classes=ProductoConstantesFunciones.getClassesRelationshipsOfProducto(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyLinea(jComboBoxGenerico,"Formulario");

				this.recargarFormProducto(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_lineaFK_IdLineaProducto")) {
				this.procesarActionsCombosForeignKeyLinea(jComboBoxid_lineaFK_IdLineaProducto,"FK_IdLinea");
				//recargarFormProductoLinea(jComboBoxid_lineaFK_IdLineaProducto,"FK_IdLinea");
			}
			 else if(sTipo.equals("id_linea_grupoProducto")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormProducto.jComboBoxid_linea_grupoProducto;
				}

				if(this.productoSessionBean.getConGuardarRelaciones()) {
					//classes=ProductoConstantesFunciones.getClassesRelationshipsOfProducto(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyLineaGrupo(jComboBoxGenerico,"Formulario");

				this.recargarFormProducto(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("id_linea_categoriaProducto")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormProducto.jComboBoxid_linea_categoriaProducto;
				}

				if(this.productoSessionBean.getConGuardarRelaciones()) {
					//classes=ProductoConstantesFunciones.getClassesRelationshipsOfProducto(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyLineaCategoria(jComboBoxGenerico,"Formulario");

				this.recargarFormProducto(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
				
				ProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.producto,new Object(),this.productoParameterGeneral,this.productoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(Producto.class.getName());
				
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Producto.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
  		}
		
		*/
    }
	
	public void jComboBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaProductoActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosProducto.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.productoAnterior =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.productoAnterior =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
  		}
    }		
	
	public void tableValueChangedGeneral(String sTipo,ListSelectionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				ProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.producto,new Object(),this.productoParameterGeneral,this.productoReturnGeneral);
				
				if(sTipo.equals("TableDatosSeleccionarProducto")) {
					//BYDAN_DESHABILITADO
					//try {jTableDatosProductoListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
					
					//SOLO CUANDO MOUSE ES SOLTADO
					if (!evt.getValueIsAdjusting()) {
						//SELECCIONA FILA A OBJETO ACTUAL
						Integer intSelectedRow = this.jTableDatosProducto.getSelectedRow();
						
						if(intSelectedRow!=null && intSelectedRow>-1) {
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								this.producto =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
							} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
								this.producto =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(intSelectedRow)];
							}
							//ARCHITECTURE
							
							//System.out.println(this.producto);
						}
					}
					
				} else if(sTipo.equals("jButtonCancelarProducto")) {
				
				}
				
				ProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.producto,new Object(),this.productoParameterGeneral,this.productoReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void tableMouseAdapterGeneral(String sTipo,MouseEvent evt) { 	  
		try {
			ProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.producto,new Object(),this.productoParameterGeneral,this.productoReturnGeneral);
			
			if(sTipo.equals("DatosSeleccionarProducto")) {
				if (evt.getClickCount() == 2) {
					jButtonIdActionPerformed(null,jTableDatosProducto.getSelectedRow(),false,false);
				}	
			} else if(sTipo.equals("jButtonCancelarProducto")) {
			
			}
			
			ProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.producto,new Object(),this.productoParameterGeneral,this.productoReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
  		}
    }
	
	;
	
	public void jButtonActionPerformedTecladoGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			this.startProcessProducto();
			
			ProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.producto,new Object(),this.productoParameterGeneral,this.productoReturnGeneral);
			
			if(sTipo.equals("NuevoProducto")) {
				jButtonNuevoProductoActionPerformed(evt,false);
				
			} else if(sTipo.equals("DuplicarProducto")) {
				jButtonDuplicarProductoActionPerformed(evt,false);
				
			} else if(sTipo.equals("CopiarProducto")) {
				jButtonCopiarProductoActionPerformed(evt);
				
			} else if(sTipo.equals("VerFormProducto")) {
				jButtonVerFormProductoActionPerformed(evt);
				
			} else if(sTipo.equals("NuevoRelacionesProducto")) {
				jButtonNuevoProductoActionPerformed(evt,true);
				
			} else if(sTipo.equals("ModificarProducto")) {
				jButtonModificarProductoActionPerformed(evt);
				
			} else if(sTipo.equals("ActualizarProducto")) {
				jButtonActualizarProductoActionPerformed(evt);
				
			} else if(sTipo.equals("EliminarProducto")) {
				jButtonEliminarProductoActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosTablaProducto")) {
				jButtonGuardarCambiosProductoActionPerformed(evt);
				
			} else if(sTipo.equals("CancelarProducto")) {
				jButtonCancelarProductoActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarProducto")) {
				jButtonCerrarProductoActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosProducto")) {
				jButtonGuardarCambiosProductoActionPerformed(evt);
			
			} else if(sTipo.equals("NuevoGuardarCambiosProducto")) {
				jButtonNuevoGuardarCambiosProductoActionPerformed(evt);
			
			} else if(sTipo.equals("AbrirOrderByProducto")) {
				jButtonAbrirOrderByProductoActionPerformed(evt);
			
			} else if(sTipo.equals("RecargarInformacionProducto")) {
				jButtonRecargarInformacionProductoActionPerformed(evt);
			
			} else if(sTipo.equals("AnterioresProducto")) {
				jButtonAnterioresProductoActionPerformed(evt);			
			
			}  else if(sTipo.equals("SiguientesProducto")) {
				jButtonSiguientesProductoActionPerformed(evt);			
			} 
			
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idProductoBusqueda")) {
				this.jButtonidProductoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaProductoUpdate")) {
				this.jButtonid_empresaProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaProductoBusqueda")) {
				this.jButtonid_empresaProductoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalProductoUpdate")) {
				this.jButtonid_sucursalProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalProductoBusqueda")) {
				this.jButtonid_sucursalProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("codigoProductoBusqueda")) {
				this.jButtoncodigoProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("nombreProductoBusqueda")) {
				this.jButtonnombreProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("nombre_extranjeroProductoBusqueda")) {
				this.jButtonnombre_extranjeroProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("resumen_detalleProductoBusqueda")) {
				this.jButtonresumen_detalleProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("codigo_barraProductoBusqueda")) {
				this.jButtoncodigo_barraProductoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_lineaProductoUpdate")) {
				this.jButtonid_lineaProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_lineaProductoBusqueda")) {
				this.jButtonid_lineaProductoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_linea_grupoProductoUpdate")) {
				this.jButtonid_linea_grupoProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_linea_grupoProductoBusqueda")) {
				this.jButtonid_linea_grupoProductoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_linea_categoriaProductoUpdate")) {
				this.jButtonid_linea_categoriaProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_linea_categoriaProductoBusqueda")) {
				this.jButtonid_linea_categoriaProductoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_linea_marcaProductoUpdate")) {
				this.jButtonid_linea_marcaProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_linea_marcaProductoBusqueda")) {
				this.jButtonid_linea_marcaProductoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_producto_servicioProductoUpdate")) {
				this.jButtonid_tipo_producto_servicioProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_producto_servicioProductoBusqueda")) {
				this.jButtonid_tipo_producto_servicioProductoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_producto_servicio_invenProductoUpdate")) {
				this.jButtonid_tipo_producto_servicio_invenProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_producto_servicio_invenProductoBusqueda")) {
				this.jButtonid_tipo_producto_servicio_invenProductoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_costeoProductoUpdate")) {
				this.jButtonid_tipo_costeoProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_costeoProductoBusqueda")) {
				this.jButtonid_tipo_costeoProductoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_unidadProductoUpdate")) {
				this.jButtonid_unidadProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_unidadProductoBusqueda")) {
				this.jButtonid_unidadProductoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_unidad_pesoProductoUpdate")) {
				this.jButtonid_unidad_pesoProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_unidad_pesoProductoBusqueda")) {
				this.jButtonid_unidad_pesoProductoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_arancelProductoUpdate")) {
				this.jButtonid_arancelProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_arancelProductoBusqueda")) {
				this.jButtonid_arancelProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_clienteProducto")) {
				this.jButtonid_clienteProductoActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_clienteProductoUpdate")) {
				this.jButtonid_clienteProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_clienteProductoBusqueda")) {
				this.jButtonid_clienteProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_cliente_proveedor_defectoProducto")) {
				this.jButtonid_cliente_proveedor_defectoProductoActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cliente_proveedor_defectoProductoUpdate")) {
				this.jButtonid_cliente_proveedor_defectoProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cliente_proveedor_defectoProductoBusqueda")) {
				this.jButtonid_cliente_proveedor_defectoProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("esta_activoProductoBusqueda")) {
				this.jButtonesta_activoProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descripcionProductoBusqueda")) {
				this.jButtondescripcionProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("precioProductoBusqueda")) {
				this.jButtonprecioProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("ivaProductoBusqueda")) {
				this.jButtonivaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("iva_valorProductoBusqueda")) {
				this.jButtoniva_valorProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("iceProductoBusqueda")) {
				this.jButtoniceProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("ice_valorProductoBusqueda")) {
				this.jButtonice_valorProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descuentoProductoBusqueda")) {
				this.jButtondescuentoProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descuento_valorProductoBusqueda")) {
				this.jButtondescuento_valorProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("arancel_porcentajeProductoBusqueda")) {
				this.jButtonarancel_porcentajeProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("arancel_valorProductoBusqueda")) {
				this.jButtonarancel_valorProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("comisionProductoBusqueda")) {
				this.jButtoncomisionProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("comision_valorProductoBusqueda")) {
				this.jButtoncomision_valorProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("dias_produccionProductoBusqueda")) {
				this.jButtondias_produccionProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_stock_negativoProductoBusqueda")) {
				this.jButtoncon_stock_negativoProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_precio_minimoProductoBusqueda")) {
				this.jButtoncon_precio_minimoProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_loteProductoBusqueda")) {
				this.jButtoncon_loteProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_confirmacionProductoBusqueda")) {
				this.jButtoncon_confirmacionProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_presupuestoProductoBusqueda")) {
				this.jButtoncon_presupuestoProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_importacionProductoBusqueda")) {
				this.jButtoncon_importacionProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_finalProductoBusqueda")) {
				this.jButtoncon_finalProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_consepProductoBusqueda")) {
				this.jButtoncon_consepProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_serieProductoBusqueda")) {
				this.jButtoncon_serieProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_balanzaProductoBusqueda")) {
				this.jButtoncon_balanzaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("altoProductoBusqueda")) {
				this.jButtonaltoProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("anchoProductoBusqueda")) {
				this.jButtonanchoProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("largoProductoBusqueda")) {
				this.jButtonlargoProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("volumenProductoBusqueda")) {
				this.jButtonvolumenProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("pesoProductoBusqueda")) {
				this.jButtonpesoProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("gramosProductoBusqueda")) {
				this.jButtongramosProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("unidades_cajaProductoBusqueda")) {
				this.jButtonunidades_cajaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("margenProductoBusqueda")) {
				this.jButtonmargenProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("factorProductoBusqueda")) {
				this.jButtonfactorProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fobProductoBusqueda")) {
				this.jButtonfobProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fob2ProductoBusqueda")) {
				this.jButtonfob2ProductoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_productoProductoUpdate")) {
				this.jButtonid_tipo_productoProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_productoProductoBusqueda")) {
				this.jButtonid_tipo_productoProductoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_color_productoProductoUpdate")) {
				this.jButtonid_color_productoProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_color_productoProductoBusqueda")) {
				this.jButtonid_color_productoProductoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_clase_productoProductoUpdate")) {
				this.jButtonid_clase_productoProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_clase_productoProductoBusqueda")) {
				this.jButtonid_clase_productoProductoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_efecto_productoProductoUpdate")) {
				this.jButtonid_efecto_productoProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_efecto_productoProductoBusqueda")) {
				this.jButtonid_efecto_productoProductoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_marca_productoProductoUpdate")) {
				this.jButtonid_marca_productoProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_marca_productoProductoBusqueda")) {
				this.jButtonid_marca_productoProductoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_modelo_productoProductoUpdate")) {
				this.jButtonid_modelo_productoProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_modelo_productoProductoBusqueda")) {
				this.jButtonid_modelo_productoProductoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_material_productoProductoUpdate")) {
				this.jButtonid_material_productoProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_material_productoProductoBusqueda")) {
				this.jButtonid_material_productoProductoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_segmento_productoProductoUpdate")) {
				this.jButtonid_segmento_productoProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_segmento_productoProductoBusqueda")) {
				this.jButtonid_segmento_productoProductoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_talla_productoProductoUpdate")) {
				this.jButtonid_talla_productoProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_talla_productoProductoBusqueda")) {
				this.jButtonid_talla_productoProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("grupoProductoBusqueda")) {
				this.jButtongrupoProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("referenciaProductoBusqueda")) {
				this.jButtonreferenciaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("aplicacionProductoBusqueda")) {
				this.jButtonaplicacionProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("procedenciaProductoBusqueda")) {
				this.jButtonprocedenciaProductoBusquedaActionPerformed(evt);
			}
			
			ProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.producto,new Object(),this.productoParameterGeneral,this.productoReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
			
  		}  finally {
      		this.finishProcessProducto();
      	}
    }
	
	public void internalFrameClosingInternalFrameGeneral(String sTipo,InternalFrameEvent evt) { 	  
		try {
			ProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.producto,new Object(),this.productoParameterGeneral,this.productoReturnGeneral);
			
			if(sTipo.equals("CloseInternalFrameProducto")) {
				closingInternalFrameProducto();
				
			} else if(sTipo.equals("jButtonCancelarProducto")) {
				JInternalFrameBase jInternalFrameDetalleFormProducto = (JInternalFrameBase)evt.getSource();
	            	
	            ProductoBeanSwingJInternalFrame jInternalFrameParent=(ProductoBeanSwingJInternalFrame)jInternalFrameDetalleFormProducto.getjInternalFrameParent();
	            
				jInternalFrameParent.jButtonCancelarProductoActionPerformed(null);
			}
			
			ProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.producto,new Object(),this.productoParameterGeneral,this.productoReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void recargarFormProducto(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion) throws Exception {
		this.recargarFormProducto(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,false);
	}
	
	public void recargarFormProducto(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion,Boolean esControlTabla) throws Exception {
		if(this.permiteRecargarForm && this.permiteMantenimiento(this.producto)) {
			if(!esControlTabla) {
				if(ProductoJInternalFrame.ISBINDING_MANUAL_TABLA) {			
					this.setVariablesFormularioToObjetoActualProducto(this.producto,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);			
				}
				
				if(this.productoSessionBean.getEstaModoGuardarRelaciones()) {
					this.setVariablesFormularioRelacionesToObjetoActualProducto(this.producto,classes);				
				}
			
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.productoReturnGeneral=productoLogic.procesarEventosProductosWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.productoLogic.getProductos(),this.producto,this.productoParameterGeneral,this.isEsNuevoProducto,classes);//this.productoLogic.getProducto()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
					
					//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					//this.setVariablesObjetoReturnGeneralToBeanProducto(this.productoReturnGeneral,this.productoBean,false);
						
					//ACTUALIZA VARIABLES RELACIONES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					if(this.productoSessionBean.getEstaModoGuardarRelaciones()) {
						//this.setVariablesRelacionesObjetoReturnGeneralToBeanProducto(classes,this.productoReturnGeneral,this.productoBean,false);
					}
						
					if(this.productoReturnGeneral.getConRecargarPropiedades()) {
						//INICIALIZA VARIABLES COMBOS NORMALES (FK)
						this.setVariablesObjetoActualToFormularioForeignKeyProducto(this.productoReturnGeneral.getProducto());
							
						//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
						this.setVariablesObjetoActualToFormularioProducto(this.productoReturnGeneral.getProducto());	
					}
						
					if(this.productoReturnGeneral.getConRecargarRelaciones()) {
						//INICIALIZA VARIABLES RELACIONES A FORMULARIO
						this.setVariablesRelacionesObjetoActualToFormularioProducto(this.productoReturnGeneral.getProducto(),classes);//this.productoBean);	
					}									
					
				} else {				
					//INICIALIZA VARIABLES RELACIONES A FORMULARIO
					this.setVariablesRelacionesObjetoActualToFormularioProducto(this.producto,classes);//this.productoBean);									
				}
			
				if(ProductoJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesFormularioToObjetoActualProducto(this.producto,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysProducto(this.producto);				
				}
				
			} else {
				
				if(((controlTipo.equals(ControlTipo.TEXTBOX) || controlTipo.equals(ControlTipo.DATE)
					|| controlTipo.equals(ControlTipo.TEXTAREA) || controlTipo.equals(ControlTipo.COMBOBOX)
					)				
					&& eventoTipo.equals(EventoTipo.CHANGE)
					)
					
					|| (controlTipo.equals(ControlTipo.CHECKBOX) && eventoTipo.equals(EventoTipo.CLIC))
					
				) { // && sTipoGeneral.equals("TEXTBOX")
					
					if(this.productoAnterior!=null) {
						this.producto=this.productoAnterior;
					}
				}
				
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.productoReturnGeneral=productoLogic.procesarEventosProductosWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.productoLogic.getProductos(),this.producto,this.productoParameterGeneral,this.isEsNuevoProducto,classes);//this.productoLogic.getProducto()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.productoSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.productoSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(this.productoReturnGeneral.getProducto(),productoLogic.getProductos());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(this.productoReturnGeneral.getProducto(),this.productos);
				}
				//ARCHITECTURE
				
				//this.jTableDatosProducto.repaint();
				
				//((AbstractTableModel) this.jTableDatosProducto.getModel()).fireTableDataChanged();
				
				this.actualizarVisualTableDatosProducto();
			}
		}
	}
	
	public void actualizarVisualTableDatosProducto() throws Exception {
		
		ProductoModel productoModel=(ProductoModel)this.jTableDatosProducto.getModel();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			productoModel.productos=this.productoLogic.getProductos();
		
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
			productoModel.productos=this.productos;
		}
		
		
		((ProductoModel) this.jTableDatosProducto.getModel()).fireTableDataChanged();
	}
	
	public void actualizarVisualTableDatosEventosVistaProducto() throws Exception {
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.actualizarLista(this.getproductoAnterior(),this.productoLogic.getProductos());
					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			this.actualizarLista(this.getproductoAnterior(),this.productos);
		}
		//ARCHITECTURE
						
		this.actualizarFilaTotales();
						
		this.actualizarVisualTableDatosProducto();	
	}
	
	public void setVariablesRelacionesObjetoActualToFormularioProducto(Producto producto,ArrayList<Classe> classes) throws Exception { 
		try {
			
			for(Classe clas:classes) {
				if(clas.clas.equals(ProveedorProducto.class)) {
					this.jInternalFrameDetalleFormProducto.proveedorproductoBeanSwingJInternalFrame.proveedorproductoLogic.setProveedorProductos(producto.getProveedorProductos());
					this.jInternalFrameDetalleFormProducto.proveedorproductoBeanSwingJInternalFrame.inicializarActualizarBindingTablaProveedorProducto(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(Precio.class)) {
					this.jInternalFrameDetalleFormProducto.precioBeanSwingJInternalFrame.precioLogic.setPrecios(producto.getPrecios());
					this.jInternalFrameDetalleFormProducto.precioBeanSwingJInternalFrame.inicializarActualizarBindingTablaPrecio(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(DetalleImpuestoInven.class)) {
					this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenBeanSwingJInternalFrame.detalleimpuestoinvenLogic.setDetalleImpuestoInvens(producto.getDetalleImpuestoInvens());
					this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenBeanSwingJInternalFrame.inicializarActualizarBindingTablaDetalleImpuestoInven(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(PresupuestoVentas.class)) {
					this.jInternalFrameDetalleFormProducto.presupuestoventasBeanSwingJInternalFrame.presupuestoventasLogic.setPresupuestoVentass(producto.getPresupuestoVentass());
					this.jInternalFrameDetalleFormProducto.presupuestoventasBeanSwingJInternalFrame.inicializarActualizarBindingTablaPresupuestoVentas(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(PoliticaProducto.class)) {
					this.jInternalFrameDetalleFormProducto.politicaproductoBeanSwingJInternalFrame.politicaproductoLogic.setPoliticaProductos(producto.getPoliticaProductos());
					this.jInternalFrameDetalleFormProducto.politicaproductoBeanSwingJInternalFrame.inicializarActualizarBindingTablaPoliticaProducto(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(SerieProducto.class)) {
					this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame.serieproductoLogic.setSerieProductos(producto.getSerieProductos());
					this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame.inicializarActualizarBindingTablaSerieProducto(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(UbicacionProdu.class)) {
					this.jInternalFrameDetalleFormProducto.ubicacionproduBeanSwingJInternalFrame.ubicacionproduLogic.setUbicacionProdus(producto.getUbicacionProdus());
					this.jInternalFrameDetalleFormProducto.ubicacionproduBeanSwingJInternalFrame.inicializarActualizarBindingTablaUbicacionProdu(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(ParametroProducto.class)) {
					this.jInternalFrameDetalleFormProducto.parametroproductoBeanSwingJInternalFrame.parametroproductoLogic.setParametroProductos(producto.getParametroProductos());
					this.jInternalFrameDetalleFormProducto.parametroproductoBeanSwingJInternalFrame.inicializarActualizarBindingTablaParametroProducto(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(ProductoUnidad.class)) {
					this.jInternalFrameDetalleFormProducto.productounidadBeanSwingJInternalFrame.productounidadLogic.setProductoUnidads(producto.getProductoUnidads());
					this.jInternalFrameDetalleFormProducto.productounidadBeanSwingJInternalFrame.inicializarActualizarBindingTablaProductoUnidad(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(Ingrediente.class)) {
					this.jInternalFrameDetalleFormProducto.ingredienteBeanSwingJInternalFrame.ingredienteLogic.setIngredientes(producto.getIngredienteRelacions());
					this.jInternalFrameDetalleFormProducto.ingredienteBeanSwingJInternalFrame.inicializarActualizarBindingTablaIngrediente(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(ProductoCarac.class)) {
					this.jInternalFrameDetalleFormProducto.productocaracBeanSwingJInternalFrame.productocaracLogic.setProductoCaracs(producto.getProductoCaracs());
					this.jInternalFrameDetalleFormProducto.productocaracBeanSwingJInternalFrame.inicializarActualizarBindingTablaProductoCarac(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(ServicioCliente.class)) {
					this.jInternalFrameDetalleFormProducto.servicioclienteBeanSwingJInternalFrame.servicioclienteLogic.setServicioClientes(producto.getServicioClientes());
					this.jInternalFrameDetalleFormProducto.servicioclienteBeanSwingJInternalFrame.inicializarActualizarBindingTablaServicioCliente(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(ProductoPromocion.class)) {
					this.jInternalFrameDetalleFormProducto.productopromocionBeanSwingJInternalFrame.productopromocionLogic.setProductoPromocions(producto.getProductoPromocionRelacions());
					this.jInternalFrameDetalleFormProducto.productopromocionBeanSwingJInternalFrame.inicializarActualizarBindingTablaProductoPromocion(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(ProductoEspeci.class)) {
					this.jInternalFrameDetalleFormProducto.productoespeciBeanSwingJInternalFrame.productoespeciLogic.setProductoEspecis(producto.getProductoEspecis());
					this.jInternalFrameDetalleFormProducto.productoespeciBeanSwingJInternalFrame.inicializarActualizarBindingTablaProductoEspeci(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(ProductoReempla.class)) {
					this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame.productoreemplaLogic.setProductoReemplas(producto.getProductoReemplas());
					this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame.inicializarActualizarBindingTablaProductoReempla(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(ProductoEstadistica.class)) {
					this.jInternalFrameDetalleFormProducto.productoestadisticaBeanSwingJInternalFrame.productoestadisticaLogic.setProductoEstadisticas(producto.getProductoEstadisticas());
					this.jInternalFrameDetalleFormProducto.productoestadisticaBeanSwingJInternalFrame.inicializarActualizarBindingTablaProductoEstadistica(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(PoliticaFactu.class)) {
					this.jInternalFrameDetalleFormProducto.politicafactuBeanSwingJInternalFrame.politicafactuLogic.setPoliticaFactus(producto.getPoliticaFactus());
					this.jInternalFrameDetalleFormProducto.politicafactuBeanSwingJInternalFrame.inicializarActualizarBindingTablaPoliticaFactu(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(ProductoCuentaContable.class)) {
					this.jInternalFrameDetalleFormProducto.productocuentacontableBeanSwingJInternalFrame.productocuentacontableLogic.setProductoCuentaContables(producto.getProductoCuentaContables());
					this.jInternalFrameDetalleFormProducto.productocuentacontableBeanSwingJInternalFrame.inicializarActualizarBindingTablaProductoCuentaContable(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(BodegaProducto.class)) {
					this.jInternalFrameDetalleFormProducto.bodegaproductoBeanSwingJInternalFrame.bodegaproductoLogic.setBodegaProductos(producto.getBodegaProductos());
					this.jInternalFrameDetalleFormProducto.bodegaproductoBeanSwingJInternalFrame.inicializarActualizarBindingTablaBodegaProducto(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(PresupuestoProducto.class)) {
					this.jInternalFrameDetalleFormProducto.presupuestoproductoBeanSwingJInternalFrame.presupuestoproductoLogic.setPresupuestoProductos(producto.getPresupuestoProductos());
					this.jInternalFrameDetalleFormProducto.presupuestoproductoBeanSwingJInternalFrame.inicializarActualizarBindingTablaPresupuestoProducto(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(SaldoMesProducto.class)) {
					this.jInternalFrameDetalleFormProducto.saldomesproductoBeanSwingJInternalFrame.saldomesproductoLogic.setSaldoMesProductos(producto.getSaldoMesProductos());
					this.jInternalFrameDetalleFormProducto.saldomesproductoBeanSwingJInternalFrame.inicializarActualizarBindingTablaSaldoMesProducto(false);
					break;
				}
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setEventoParentGeneral(Boolean esUsoDesdeHijo,String sDominio,String sDominioTipo,String sTipo,String sTipoGeneral,Boolean esControlTabla,Boolean conIrServidorAplicacion,
						Long id,Component control, EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,ArrayList<String> arrClasses,
						Object evt,GeneralEntityParameterReturnGeneral generalEntityParameterGeneral,Object otro) { 	  
		try {
			
			if(this.permiteManejarEventosControl()) {
				
				//BASE COPIADO DESDE TEXTFIELLOSTFOCUS
				
				//EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				Boolean conTodasRelaciones=false;
				
				this.esUsoDesdeHijo=esUsoDesdeHijo;
										
				ProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.producto,new Object(),generalEntityParameterGeneral,this.productoReturnGeneral);
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				for(String sClasse:arrClasses) {
					if(sClasse.equals("TODOS")) {
						conTodasRelaciones=true;
						break;
					}
				}
				
				if(this.productoSessionBean.getConGuardarRelaciones()) {
					if(conTodasRelaciones) {
						classes=ProductoConstantesFunciones.getClassesRelationshipsOfProducto(new ArrayList<Classe>(),DeepLoadType.NONE);
					} else {
						classes=ProductoConstantesFunciones.getClassesRelationshipsFromStringsOfProducto(arrClasses,DeepLoadType.NONE);
					}
				}
	
				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);
	
				this.recargarFormProducto(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,esControlTabla);
										
				ProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.producto,new Object(),generalEntityParameterGeneral,this.productoReturnGeneral);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
  		}
    }
	
	/*
	public void setVariablesRelacionesObjetoBeanActualToFormularioProducto(ProductoBean productoBean) throws Exception { 
		try {
			
			for(Classe clas:classes) {
				if(clas.clas.equals(ProveedorProducto.class)) {
					this.jInternalFrameDetalleFormProducto.proveedorproductoBeanSwingJInternalFrame.proveedorproductoLogic.setProveedorProductos(producto.getProveedorProductos());
					this.jInternalFrameDetalleFormProducto.proveedorproductoBeanSwingJInternalFrame.inicializarActualizarBindingTablaProveedorProducto(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(Precio.class)) {
					this.jInternalFrameDetalleFormProducto.precioBeanSwingJInternalFrame.precioLogic.setPrecios(producto.getPrecios());
					this.jInternalFrameDetalleFormProducto.precioBeanSwingJInternalFrame.inicializarActualizarBindingTablaPrecio(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(DetalleImpuestoInven.class)) {
					this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenBeanSwingJInternalFrame.detalleimpuestoinvenLogic.setDetalleImpuestoInvens(producto.getDetalleImpuestoInvens());
					this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenBeanSwingJInternalFrame.inicializarActualizarBindingTablaDetalleImpuestoInven(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(PresupuestoVentas.class)) {
					this.jInternalFrameDetalleFormProducto.presupuestoventasBeanSwingJInternalFrame.presupuestoventasLogic.setPresupuestoVentass(producto.getPresupuestoVentass());
					this.jInternalFrameDetalleFormProducto.presupuestoventasBeanSwingJInternalFrame.inicializarActualizarBindingTablaPresupuestoVentas(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(PoliticaProducto.class)) {
					this.jInternalFrameDetalleFormProducto.politicaproductoBeanSwingJInternalFrame.politicaproductoLogic.setPoliticaProductos(producto.getPoliticaProductos());
					this.jInternalFrameDetalleFormProducto.politicaproductoBeanSwingJInternalFrame.inicializarActualizarBindingTablaPoliticaProducto(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(SerieProducto.class)) {
					this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame.serieproductoLogic.setSerieProductos(producto.getSerieProductos());
					this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame.inicializarActualizarBindingTablaSerieProducto(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(UbicacionProdu.class)) {
					this.jInternalFrameDetalleFormProducto.ubicacionproduBeanSwingJInternalFrame.ubicacionproduLogic.setUbicacionProdus(producto.getUbicacionProdus());
					this.jInternalFrameDetalleFormProducto.ubicacionproduBeanSwingJInternalFrame.inicializarActualizarBindingTablaUbicacionProdu(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(ParametroProducto.class)) {
					this.jInternalFrameDetalleFormProducto.parametroproductoBeanSwingJInternalFrame.parametroproductoLogic.setParametroProductos(producto.getParametroProductos());
					this.jInternalFrameDetalleFormProducto.parametroproductoBeanSwingJInternalFrame.inicializarActualizarBindingTablaParametroProducto(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(ProductoUnidad.class)) {
					this.jInternalFrameDetalleFormProducto.productounidadBeanSwingJInternalFrame.productounidadLogic.setProductoUnidads(producto.getProductoUnidads());
					this.jInternalFrameDetalleFormProducto.productounidadBeanSwingJInternalFrame.inicializarActualizarBindingTablaProductoUnidad(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(Ingrediente.class)) {
					this.jInternalFrameDetalleFormProducto.ingredienteBeanSwingJInternalFrame.ingredienteLogic.setIngredientes(producto.getIngredienteRelacions());
					this.jInternalFrameDetalleFormProducto.ingredienteBeanSwingJInternalFrame.inicializarActualizarBindingTablaIngrediente(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(ProductoCarac.class)) {
					this.jInternalFrameDetalleFormProducto.productocaracBeanSwingJInternalFrame.productocaracLogic.setProductoCaracs(producto.getProductoCaracs());
					this.jInternalFrameDetalleFormProducto.productocaracBeanSwingJInternalFrame.inicializarActualizarBindingTablaProductoCarac(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(ServicioCliente.class)) {
					this.jInternalFrameDetalleFormProducto.servicioclienteBeanSwingJInternalFrame.servicioclienteLogic.setServicioClientes(producto.getServicioClientes());
					this.jInternalFrameDetalleFormProducto.servicioclienteBeanSwingJInternalFrame.inicializarActualizarBindingTablaServicioCliente(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(ProductoPromocion.class)) {
					this.jInternalFrameDetalleFormProducto.productopromocionBeanSwingJInternalFrame.productopromocionLogic.setProductoPromocions(producto.getProductoPromocionRelacions());
					this.jInternalFrameDetalleFormProducto.productopromocionBeanSwingJInternalFrame.inicializarActualizarBindingTablaProductoPromocion(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(ProductoEspeci.class)) {
					this.jInternalFrameDetalleFormProducto.productoespeciBeanSwingJInternalFrame.productoespeciLogic.setProductoEspecis(producto.getProductoEspecis());
					this.jInternalFrameDetalleFormProducto.productoespeciBeanSwingJInternalFrame.inicializarActualizarBindingTablaProductoEspeci(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(ProductoReempla.class)) {
					this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame.productoreemplaLogic.setProductoReemplas(producto.getProductoReemplas());
					this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame.inicializarActualizarBindingTablaProductoReempla(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(ProductoEstadistica.class)) {
					this.jInternalFrameDetalleFormProducto.productoestadisticaBeanSwingJInternalFrame.productoestadisticaLogic.setProductoEstadisticas(producto.getProductoEstadisticas());
					this.jInternalFrameDetalleFormProducto.productoestadisticaBeanSwingJInternalFrame.inicializarActualizarBindingTablaProductoEstadistica(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(PoliticaFactu.class)) {
					this.jInternalFrameDetalleFormProducto.politicafactuBeanSwingJInternalFrame.politicafactuLogic.setPoliticaFactus(producto.getPoliticaFactus());
					this.jInternalFrameDetalleFormProducto.politicafactuBeanSwingJInternalFrame.inicializarActualizarBindingTablaPoliticaFactu(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(ProductoCuentaContable.class)) {
					this.jInternalFrameDetalleFormProducto.productocuentacontableBeanSwingJInternalFrame.productocuentacontableLogic.setProductoCuentaContables(producto.getProductoCuentaContables());
					this.jInternalFrameDetalleFormProducto.productocuentacontableBeanSwingJInternalFrame.inicializarActualizarBindingTablaProductoCuentaContable(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(BodegaProducto.class)) {
					this.jInternalFrameDetalleFormProducto.bodegaproductoBeanSwingJInternalFrame.bodegaproductoLogic.setBodegaProductos(producto.getBodegaProductos());
					this.jInternalFrameDetalleFormProducto.bodegaproductoBeanSwingJInternalFrame.inicializarActualizarBindingTablaBodegaProducto(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(PresupuestoProducto.class)) {
					this.jInternalFrameDetalleFormProducto.presupuestoproductoBeanSwingJInternalFrame.presupuestoproductoLogic.setPresupuestoProductos(producto.getPresupuestoProductos());
					this.jInternalFrameDetalleFormProducto.presupuestoproductoBeanSwingJInternalFrame.inicializarActualizarBindingTablaPresupuestoProducto(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(SaldoMesProducto.class)) {
					this.jInternalFrameDetalleFormProducto.saldomesproductoBeanSwingJInternalFrame.saldomesproductoLogic.setSaldoMesProductos(producto.getSaldoMesProductos());
					this.jInternalFrameDetalleFormProducto.saldomesproductoBeanSwingJInternalFrame.inicializarActualizarBindingTablaSaldoMesProducto(false);
					break;
				}
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesRelacionesObjetoReturnGeneralToBeanProducto(ArrayList<Classe> classes,ProductoReturnGeneral productoReturnGeneral,ProductoBean productoBean,Boolean conDefault) throws Exception {
		
			this.productoBean.setProveedorProductos(productoReturnGeneral.getProducto().getProveedorProductos());
			this.productoBean.setPrecios(productoReturnGeneral.getProducto().getPrecios());
			this.productoBean.setDetalleImpuestoInvens(productoReturnGeneral.getProducto().getDetalleImpuestoInvens());
			this.productoBean.setPresupuestoVentass(productoReturnGeneral.getProducto().getPresupuestoVentass());
			this.productoBean.setPoliticaProductos(productoReturnGeneral.getProducto().getPoliticaProductos());
			this.productoBean.setSerieProductos(productoReturnGeneral.getProducto().getSerieProductos());
			this.productoBean.setUbicacionProdus(productoReturnGeneral.getProducto().getUbicacionProdus());
			this.productoBean.setParametroProductos(productoReturnGeneral.getProducto().getParametroProductos());
			this.productoBean.setProductoUnidads(productoReturnGeneral.getProducto().getProductoUnidads());
			this.productoBean.setIngredientes(productoReturnGeneral.getProducto().getIngredientes());
			this.productoBean.setProductoCaracs(productoReturnGeneral.getProducto().getProductoCaracs());
			this.productoBean.setServicioClientes(productoReturnGeneral.getProducto().getServicioClientes());
			this.productoBean.setProductoPromocions(productoReturnGeneral.getProducto().getProductoPromocions());
			this.productoBean.setProductoEspecis(productoReturnGeneral.getProducto().getProductoEspecis());
			this.productoBean.setProductoReemplas(productoReturnGeneral.getProducto().getProductoReemplas());
			this.productoBean.setProductoEstadisticas(productoReturnGeneral.getProducto().getProductoEstadisticas());
			this.productoBean.setPoliticaFactus(productoReturnGeneral.getProducto().getPoliticaFactus());
			this.productoBean.setProductoCuentaContables(productoReturnGeneral.getProducto().getProductoCuentaContables());
			this.productoBean.setBodegaProductos(productoReturnGeneral.getProducto().getBodegaProductos());
			this.productoBean.setPresupuestoProductos(productoReturnGeneral.getProducto().getPresupuestoProductos());
			this.productoBean.setSaldoMesProductos(productoReturnGeneral.getProducto().getSaldoMesProductos());
	}
	*/
	
	public void setVariablesFormularioRelacionesToObjetoActualProducto(Producto producto,ArrayList<Classe> classes) throws Exception {
		
			for(Classe clas:classes) {
				if(clas.clas.equals(ProveedorProducto.class)) {
					producto.setProveedorProductos(this.jInternalFrameDetalleFormProducto.proveedorproductoBeanSwingJInternalFrame.proveedorproductoLogic.getProveedorProductos());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(Precio.class)) {
					producto.setPrecios(this.jInternalFrameDetalleFormProducto.precioBeanSwingJInternalFrame.precioLogic.getPrecios());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(DetalleImpuestoInven.class)) {
					producto.setDetalleImpuestoInvens(this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenBeanSwingJInternalFrame.detalleimpuestoinvenLogic.getDetalleImpuestoInvens());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(PresupuestoVentas.class)) {
					producto.setPresupuestoVentass(this.jInternalFrameDetalleFormProducto.presupuestoventasBeanSwingJInternalFrame.presupuestoventasLogic.getPresupuestoVentass());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(PoliticaProducto.class)) {
					producto.setPoliticaProductos(this.jInternalFrameDetalleFormProducto.politicaproductoBeanSwingJInternalFrame.politicaproductoLogic.getPoliticaProductos());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(SerieProducto.class)) {
					producto.setSerieProductos(this.jInternalFrameDetalleFormProducto.serieproductoBeanSwingJInternalFrame.serieproductoLogic.getSerieProductos());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(UbicacionProdu.class)) {
					producto.setUbicacionProdus(this.jInternalFrameDetalleFormProducto.ubicacionproduBeanSwingJInternalFrame.ubicacionproduLogic.getUbicacionProdus());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(ParametroProducto.class)) {
					producto.setParametroProductos(this.jInternalFrameDetalleFormProducto.parametroproductoBeanSwingJInternalFrame.parametroproductoLogic.getParametroProductos());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(ProductoUnidad.class)) {
					producto.setProductoUnidads(this.jInternalFrameDetalleFormProducto.productounidadBeanSwingJInternalFrame.productounidadLogic.getProductoUnidads());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(Ingrediente.class)) {
					producto.setIngredienteRelacions(this.jInternalFrameDetalleFormProducto.ingredienteBeanSwingJInternalFrame.ingredienteLogic.getIngredientes());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(ProductoCarac.class)) {
					producto.setProductoCaracs(this.jInternalFrameDetalleFormProducto.productocaracBeanSwingJInternalFrame.productocaracLogic.getProductoCaracs());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(ServicioCliente.class)) {
					producto.setServicioClientes(this.jInternalFrameDetalleFormProducto.servicioclienteBeanSwingJInternalFrame.servicioclienteLogic.getServicioClientes());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(ProductoPromocion.class)) {
					producto.setProductoPromocionRelacions(this.jInternalFrameDetalleFormProducto.productopromocionBeanSwingJInternalFrame.productopromocionLogic.getProductoPromocions());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(ProductoEspeci.class)) {
					producto.setProductoEspecis(this.jInternalFrameDetalleFormProducto.productoespeciBeanSwingJInternalFrame.productoespeciLogic.getProductoEspecis());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(ProductoReempla.class)) {
					producto.setProductoReemplas(this.jInternalFrameDetalleFormProducto.productoreemplaBeanSwingJInternalFrame.productoreemplaLogic.getProductoReemplas());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(ProductoEstadistica.class)) {
					producto.setProductoEstadisticas(this.jInternalFrameDetalleFormProducto.productoestadisticaBeanSwingJInternalFrame.productoestadisticaLogic.getProductoEstadisticas());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(PoliticaFactu.class)) {
					producto.setPoliticaFactus(this.jInternalFrameDetalleFormProducto.politicafactuBeanSwingJInternalFrame.politicafactuLogic.getPoliticaFactus());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(ProductoCuentaContable.class)) {
					producto.setProductoCuentaContables(this.jInternalFrameDetalleFormProducto.productocuentacontableBeanSwingJInternalFrame.productocuentacontableLogic.getProductoCuentaContables());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(BodegaProducto.class)) {
					producto.setBodegaProductos(this.jInternalFrameDetalleFormProducto.bodegaproductoBeanSwingJInternalFrame.bodegaproductoLogic.getBodegaProductos());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(PresupuestoProducto.class)) {
					producto.setPresupuestoProductos(this.jInternalFrameDetalleFormProducto.presupuestoproductoBeanSwingJInternalFrame.presupuestoproductoLogic.getPresupuestoProductos());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(SaldoMesProducto.class)) {
					producto.setSaldoMesProductos(this.jInternalFrameDetalleFormProducto.saldomesproductoBeanSwingJInternalFrame.saldomesproductoLogic.getSaldoMesProductos());
					break;
				}
			}
	}
	
	public Boolean permiteManejarEventosControl() {
		Boolean permite=true;				
		
		if(this.estaModoNuevo || this.estaModoSeleccionar || this.estaModoEliminarGuardarCambios) {
			permite=false;
			
		} 
		
		//NO DEBE MEZCLARSE CONCEPTOS
		/*	
		if(!paraTabla && !this.permiteMantenimiento(this.producto)) {
			System.out.println("ERROR:EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES");
				
			//JOptionPane.showMessageDialog(this,"EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES","EVENTO",JOptionPane.ERROR_MESSAGE);			
		}
		*/
		
		return permite;
	}
	
	public void inicializarFormDetalle() throws Exception {
		
		this.jInternalFrameDetalleFormProducto = new ProductoDetalleFormJInternalFrame(jDesktopPane,this.productoSessionBean.getConGuardarRelaciones(),this.productoSessionBean.getEsGuardarRelacionado(),this.cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		this.jDesktopPane.add(this.jInternalFrameDetalleFormProducto);
		this.jInternalFrameDetalleFormProducto.setVisible(false);
		this.jInternalFrameDetalleFormProducto.setSelected(false);						
		
		this.jInternalFrameDetalleFormProducto.setJInternalFrameParent(this);
		
		this.jInternalFrameDetalleFormProducto.productoLogic=this.productoLogic;
		
		this.cargarCombosFrameForeignKeyProducto("Formulario");
		
		this.inicializarActualizarBindingBotonesPermisosManualFormDetalleProducto();
		this.inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleProducto();
		
		this.initActionsFormDetalle();		
		
		this.initActionsCombosTodosForeignKeyProducto("Formulario");
		
		//TALVEZ conSetVariablesGlobales COMO if() 
		this.setVariablesGlobalesCombosForeignKeyProducto();
		
		this.cargarMenuRelaciones();
		
	}
	
	public void initActionsFormDetalle() {	
		
		this.jInternalFrameDetalleFormProducto.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarProducto"));
		
		this.jInternalFrameDetalleFormProducto.jButtonModificarProducto.addActionListener(new ButtonActionListener(this,"ModificarProducto"));

		
		this.jInternalFrameDetalleFormProducto.jButtonModificarToolBarProducto.addActionListener(new ButtonActionListener(this,"ModificarToolBarProducto"));
					
		this.jInternalFrameDetalleFormProducto.jMenuItemModificarProducto.addActionListener(new ButtonActionListener(this,"MenuItemModificarProducto"));		
		
		
		
		this.jInternalFrameDetalleFormProducto.jButtonActualizarProducto.addActionListener (new ButtonActionListener(this,"ActualizarProducto"));
		
		
		this.jInternalFrameDetalleFormProducto.jButtonActualizarToolBarProducto.addActionListener(new ButtonActionListener(this,"ActualizarToolBarProducto"));
						
		this.jInternalFrameDetalleFormProducto.jMenuItemActualizarProducto.addActionListener (new ButtonActionListener(this,"MenuItemActualizarProducto"));		
		
		
		
		this.jInternalFrameDetalleFormProducto.jButtonEliminarProducto.addActionListener (new ButtonActionListener(this,"EliminarProducto"));
		
		
		this.jInternalFrameDetalleFormProducto.jButtonEliminarToolBarProducto.addActionListener (new ButtonActionListener(this,"EliminarToolBarProducto"));
								
		this.jInternalFrameDetalleFormProducto.jMenuItemEliminarProducto.addActionListener (new ButtonActionListener(this,"MenuItemEliminarProducto"));		
		
		
		
		this.jInternalFrameDetalleFormProducto.jButtonCancelarProducto.addActionListener (new ButtonActionListener(this,"CancelarProducto"));
		
		
		this.jInternalFrameDetalleFormProducto.jButtonCancelarToolBarProducto.addActionListener (new ButtonActionListener(this,"CancelarToolBarProducto"));
					
		this.jInternalFrameDetalleFormProducto.jMenuItemCancelarProducto.addActionListener (new ButtonActionListener(this,"MenuItemCancelarProducto"));		
		
		
		
		
		
		this.jInternalFrameDetalleFormProducto.jMenuItemDetalleCerrarProducto.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarProducto"));		
		
		
		
		this.jInternalFrameDetalleFormProducto.jButtonGuardarCambiosToolBarProducto.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarProducto"));
		
		
		
		this.jInternalFrameDetalleFormProducto.jButtonGuardarCambiosToolBarProducto.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarProducto"));
		
		
		
		this.jInternalFrameDetalleFormProducto.jComboBoxTiposAccionesFormularioProducto.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioProducto"));
		
		
				
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonidProductoBusqueda.addActionListener(new ButtonActionListener(this,"idProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProducto.jButtonid_empresaProductoUpdate.addActionListener(new ButtonActionListener(this,"id_empresaProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonid_empresaProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProducto.jButtonid_sucursalProductoUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonid_sucursalProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtoncodigoProductoBusqueda.addActionListener(new ButtonActionListener(this,"codigoProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonnombreProductoBusqueda.addActionListener(new ButtonActionListener(this,"nombreProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonnombre_extranjeroProductoBusqueda.addActionListener(new ButtonActionListener(this,"nombre_extranjeroProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonresumen_detalleProductoBusqueda.addActionListener(new ButtonActionListener(this,"resumen_detalleProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtoncodigo_barraProductoBusqueda.addActionListener(new ButtonActionListener(this,"codigo_barraProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProducto.jButtonid_lineaProductoUpdate.addActionListener(new ButtonActionListener(this,"id_lineaProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonid_lineaProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_lineaProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProducto.jButtonid_linea_grupoProductoUpdate.addActionListener(new ButtonActionListener(this,"id_linea_grupoProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonid_linea_grupoProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_linea_grupoProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProducto.jButtonid_linea_categoriaProductoUpdate.addActionListener(new ButtonActionListener(this,"id_linea_categoriaProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonid_linea_categoriaProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_linea_categoriaProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProducto.jButtonid_linea_marcaProductoUpdate.addActionListener(new ButtonActionListener(this,"id_linea_marcaProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonid_linea_marcaProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_linea_marcaProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProducto.jButtonid_tipo_producto_servicioProductoUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_producto_servicioProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonid_tipo_producto_servicioProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_producto_servicioProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProducto.jButtonid_tipo_producto_servicio_invenProductoUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_producto_servicio_invenProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonid_tipo_producto_servicio_invenProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_producto_servicio_invenProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProducto.jButtonid_tipo_costeoProductoUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_costeoProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonid_tipo_costeoProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_costeoProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProducto.jButtonid_unidadProductoUpdate.addActionListener(new ButtonActionListener(this,"id_unidadProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonid_unidadProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_unidadProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProducto.jButtonid_unidad_pesoProductoUpdate.addActionListener(new ButtonActionListener(this,"id_unidad_pesoProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonid_unidad_pesoProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_unidad_pesoProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProducto.jButtonid_arancelProductoUpdate.addActionListener(new ButtonActionListener(this,"id_arancelProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonid_arancelProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_arancelProductoBusqueda"));
		//jButtonid_clienteProducto.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_clienteProductoActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormProducto.jButtonid_clienteProducto.addActionListener(new ButtonActionListener(this,"id_clienteProducto"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProducto.jButtonid_clienteProductoUpdate.addActionListener(new ButtonActionListener(this,"id_clienteProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonid_clienteProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_clienteProductoBusqueda"));
		//jButtonid_cliente_proveedor_defectoProducto.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cliente_proveedor_defectoProductoActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormProducto.jButtonid_cliente_proveedor_defectoProducto.addActionListener(new ButtonActionListener(this,"id_cliente_proveedor_defectoProducto"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProducto.jButtonid_cliente_proveedor_defectoProductoUpdate.addActionListener(new ButtonActionListener(this,"id_cliente_proveedor_defectoProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonid_cliente_proveedor_defectoProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_cliente_proveedor_defectoProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonesta_activoProductoBusqueda.addActionListener(new ButtonActionListener(this,"esta_activoProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtondescripcionProductoBusqueda.addActionListener(new ButtonActionListener(this,"descripcionProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonprecioProductoBusqueda.addActionListener(new ButtonActionListener(this,"precioProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonivaProductoBusqueda.addActionListener(new ButtonActionListener(this,"ivaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtoniva_valorProductoBusqueda.addActionListener(new ButtonActionListener(this,"iva_valorProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtoniceProductoBusqueda.addActionListener(new ButtonActionListener(this,"iceProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonice_valorProductoBusqueda.addActionListener(new ButtonActionListener(this,"ice_valorProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtondescuentoProductoBusqueda.addActionListener(new ButtonActionListener(this,"descuentoProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtondescuento_valorProductoBusqueda.addActionListener(new ButtonActionListener(this,"descuento_valorProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonarancel_porcentajeProductoBusqueda.addActionListener(new ButtonActionListener(this,"arancel_porcentajeProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonarancel_valorProductoBusqueda.addActionListener(new ButtonActionListener(this,"arancel_valorProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtoncomisionProductoBusqueda.addActionListener(new ButtonActionListener(this,"comisionProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtoncomision_valorProductoBusqueda.addActionListener(new ButtonActionListener(this,"comision_valorProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtondias_produccionProductoBusqueda.addActionListener(new ButtonActionListener(this,"dias_produccionProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtoncon_stock_negativoProductoBusqueda.addActionListener(new ButtonActionListener(this,"con_stock_negativoProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtoncon_precio_minimoProductoBusqueda.addActionListener(new ButtonActionListener(this,"con_precio_minimoProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtoncon_loteProductoBusqueda.addActionListener(new ButtonActionListener(this,"con_loteProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtoncon_confirmacionProductoBusqueda.addActionListener(new ButtonActionListener(this,"con_confirmacionProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtoncon_presupuestoProductoBusqueda.addActionListener(new ButtonActionListener(this,"con_presupuestoProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtoncon_importacionProductoBusqueda.addActionListener(new ButtonActionListener(this,"con_importacionProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtoncon_finalProductoBusqueda.addActionListener(new ButtonActionListener(this,"con_finalProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtoncon_consepProductoBusqueda.addActionListener(new ButtonActionListener(this,"con_consepProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtoncon_serieProductoBusqueda.addActionListener(new ButtonActionListener(this,"con_serieProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtoncon_balanzaProductoBusqueda.addActionListener(new ButtonActionListener(this,"con_balanzaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonaltoProductoBusqueda.addActionListener(new ButtonActionListener(this,"altoProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonanchoProductoBusqueda.addActionListener(new ButtonActionListener(this,"anchoProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonlargoProductoBusqueda.addActionListener(new ButtonActionListener(this,"largoProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonvolumenProductoBusqueda.addActionListener(new ButtonActionListener(this,"volumenProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonpesoProductoBusqueda.addActionListener(new ButtonActionListener(this,"pesoProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtongramosProductoBusqueda.addActionListener(new ButtonActionListener(this,"gramosProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonunidades_cajaProductoBusqueda.addActionListener(new ButtonActionListener(this,"unidades_cajaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonmargenProductoBusqueda.addActionListener(new ButtonActionListener(this,"margenProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonfactorProductoBusqueda.addActionListener(new ButtonActionListener(this,"factorProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonfobProductoBusqueda.addActionListener(new ButtonActionListener(this,"fobProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonfob2ProductoBusqueda.addActionListener(new ButtonActionListener(this,"fob2ProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProducto.jButtonid_tipo_productoProductoUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_productoProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonid_tipo_productoProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_productoProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProducto.jButtonid_color_productoProductoUpdate.addActionListener(new ButtonActionListener(this,"id_color_productoProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonid_color_productoProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_color_productoProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProducto.jButtonid_clase_productoProductoUpdate.addActionListener(new ButtonActionListener(this,"id_clase_productoProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonid_clase_productoProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_clase_productoProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProducto.jButtonid_efecto_productoProductoUpdate.addActionListener(new ButtonActionListener(this,"id_efecto_productoProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonid_efecto_productoProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_efecto_productoProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProducto.jButtonid_marca_productoProductoUpdate.addActionListener(new ButtonActionListener(this,"id_marca_productoProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonid_marca_productoProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_marca_productoProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProducto.jButtonid_modelo_productoProductoUpdate.addActionListener(new ButtonActionListener(this,"id_modelo_productoProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonid_modelo_productoProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_modelo_productoProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProducto.jButtonid_material_productoProductoUpdate.addActionListener(new ButtonActionListener(this,"id_material_productoProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonid_material_productoProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_material_productoProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProducto.jButtonid_segmento_productoProductoUpdate.addActionListener(new ButtonActionListener(this,"id_segmento_productoProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonid_segmento_productoProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_segmento_productoProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProducto.jButtonid_talla_productoProductoUpdate.addActionListener(new ButtonActionListener(this,"id_talla_productoProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonid_talla_productoProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_talla_productoProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtongrupoProductoBusqueda.addActionListener(new ButtonActionListener(this,"grupoProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonreferenciaProductoBusqueda.addActionListener(new ButtonActionListener(this,"referenciaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonaplicacionProductoBusqueda.addActionListener(new ButtonActionListener(this,"aplicacionProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonprocedenciaProductoBusqueda.addActionListener(new ButtonActionListener(this,"procedenciaProductoBusqueda"));
		
		
		;

		//TABBED PANE RELACIONES
		this.jInternalFrameDetalleFormProducto.jTabbedPaneRelacionesProducto.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesProducto"));
		
		;		
		//TABBED PANE RELACIONES FIN(EXTRA TAB)	
	}
	
	public void initActions() {				
		this.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"CloseInternalFrameProducto"));
		
		if(this.jInternalFrameDetalleFormProducto!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormProducto.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarProducto"));
		}
		
		this.jTableDatosProducto.getSelectionModel().addListSelectionListener(new TableListSelectionListener(this,"TableDatosSeleccionarProducto"));
		
		this.jTableDatosProducto.addMouseListener(new TableMouseAdapter(this,"DatosSeleccionarProducto"));
		
		this.jButtonNuevoProducto.addActionListener(new ButtonActionListener(this,"NuevoProducto"));
		
		this.jButtonDuplicarProducto.addActionListener(new ButtonActionListener(this,"DuplicarProducto"));
		
		this.jButtonCopiarProducto.addActionListener(new ButtonActionListener(this,"CopiarProducto"));
		
		this.jButtonVerFormProducto.addActionListener(new ButtonActionListener(this,"VerFormProducto"));
		
		
		this.jButtonNuevoToolBarProducto.addActionListener(new ButtonActionListener(this,"NuevoToolBarProducto"));
			
		this.jButtonDuplicarToolBarProducto.addActionListener(new ButtonActionListener(this,"DuplicarToolBarProducto"));
			
		this.jMenuItemNuevoProducto.addActionListener (new ButtonActionListener(this,"MenuItemNuevoProducto"));
			
		this.jMenuItemDuplicarProducto.addActionListener (new ButtonActionListener(this,"MenuItemDuplicarProducto"));		
		
		
		this.jButtonNuevoRelacionesProducto.addActionListener (new ButtonActionListener(this,"NuevoRelacionesProducto"));
		
		
		this.jButtonNuevoRelacionesToolBarProducto.addActionListener(new ButtonActionListener(this,"NuevoRelacionesToolBarProducto"));
			
		this.jMenuItemNuevoRelacionesProducto.addActionListener(new ButtonActionListener(this,"MenuItemNuevoRelacionesProducto"));		
		
		
		if(this.jInternalFrameDetalleFormProducto!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormProducto.jButtonModificarProducto.addActionListener(new ButtonActionListener(this,"ModificarProducto"));
		}
		
		
		if(this.jInternalFrameDetalleFormProducto!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormProducto.jButtonModificarToolBarProducto.addActionListener(new ButtonActionListener(this,"ModificarToolBarProducto"));
			
			this.jInternalFrameDetalleFormProducto.jMenuItemModificarProducto.addActionListener(new ButtonActionListener(this,"MenuItemModificarProducto"));		
		}
		
		
		if(this.jInternalFrameDetalleFormProducto!=null) { //if(this.conCargarFormDetalle) {			
			this.jInternalFrameDetalleFormProducto.jButtonActualizarProducto.addActionListener (new ButtonActionListener(this,"ActualizarProducto"));
		}
		
		
		if(this.jInternalFrameDetalleFormProducto!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormProducto.jButtonActualizarToolBarProducto.addActionListener(new ButtonActionListener(this,"ActualizarToolBarProducto"));
				
			this.jInternalFrameDetalleFormProducto.jMenuItemActualizarProducto.addActionListener (new ButtonActionListener(this,"MenuItemActualizarProducto"));		
		}
		
		
		if(this.jInternalFrameDetalleFormProducto!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormProducto.jButtonEliminarProducto.addActionListener (new ButtonActionListener(this,"EliminarProducto"));
		}
		
		
		if(this.jInternalFrameDetalleFormProducto!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormProducto.jButtonEliminarToolBarProducto.addActionListener (new ButtonActionListener(this,"EliminarToolBarProducto"));
						
			this.jInternalFrameDetalleFormProducto.jMenuItemEliminarProducto.addActionListener (new ButtonActionListener(this,"MenuItemEliminarProducto"));		
		}
		
		
		if(this.jInternalFrameDetalleFormProducto!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormProducto.jButtonCancelarProducto.addActionListener (new ButtonActionListener(this,"CancelarProducto"));
		}
		
		
		if(this.jInternalFrameDetalleFormProducto!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormProducto.jButtonCancelarToolBarProducto.addActionListener (new ButtonActionListener(this,"CancelarToolBarProducto"));
			
			this.jInternalFrameDetalleFormProducto.jMenuItemCancelarProducto.addActionListener (new ButtonActionListener(this,"MenuItemCancelarProducto"));		
		}
		
		this.jButtonMostrarOcultarTablaToolBarProducto.addActionListener (new ButtonActionListener(this,"MostrarOcultarToolBarProducto"));		
		
		
		this.jButtonCerrarProducto.addActionListener (new ButtonActionListener(this,"CerrarProducto"));
		
		
		this.jButtonCerrarToolBarProducto.addActionListener (new ButtonActionListener(this,"CerrarToolBarProducto"));
			
		this.jMenuItemCerrarProducto.addActionListener (new ButtonActionListener(this,"MenuItemCerrarProducto"));
			
		if(this.jInternalFrameDetalleFormProducto!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormProducto.jMenuItemDetalleCerrarProducto.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarProducto"));		
		}
		
		
		if(this.jInternalFrameDetalleFormProducto!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormProducto.jButtonGuardarCambiosProducto.addActionListener (new ButtonActionListener(this,"GuardarCambiosProducto"));
		}
		
		
		if(this.jInternalFrameDetalleFormProducto!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormProducto.jButtonGuardarCambiosToolBarProducto.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarProducto"));
		}
		
		this.jButtonCopiarToolBarProducto.addActionListener (new ButtonActionListener(this,"CopiarToolBarProducto"));
			
		this.jButtonVerFormToolBarProducto.addActionListener (new ButtonActionListener(this,"VerFormToolBarProducto"));
		
		this.jMenuItemGuardarCambiosProducto.addActionListener (new ButtonActionListener(this,"MenuItemGuardarCambiosProducto"));
			
		this.jMenuItemCopiarProducto.addActionListener (new ButtonActionListener(this,"MenuItemCopiarProducto"));		
		
		this.jMenuItemVerFormProducto.addActionListener (new ButtonActionListener(this,"MenuItemVerFormProducto"));		
		
		
		this.jButtonGuardarCambiosTablaProducto.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaProducto"));
		
		
		this.jButtonGuardarCambiosTablaToolBarProducto.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaToolBarProducto"));
			
		this.jMenuItemGuardarCambiosTablaProducto.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaProducto"));		
		
		
		
		this.jButtonRecargarInformacionProducto.addActionListener (new ButtonActionListener(this,"RecargarInformacionProducto"));
					
		this.jButtonRecargarInformacionToolBarProducto.addActionListener (new ButtonActionListener(this,"RecargarInformacionToolBarProducto"));
		
		this.jMenuItemRecargarInformacionProducto.addActionListener (new ButtonActionListener(this,"MenuItemRecargarInformacionProducto"));		
		
		
		
		this.jButtonAnterioresProducto.addActionListener (new ButtonActionListener(this,"AnterioresProducto"));
		
		
		this.jButtonAnterioresToolBarProducto.addActionListener (new ButtonActionListener(this,"AnterioresToolBarProducto"));
		
		this.jMenuItemAnterioresProducto.addActionListener (new ButtonActionListener(this,"MenuItemAnterioresProducto"));		
		
		
		this.jButtonSiguientesProducto.addActionListener (new ButtonActionListener(this,"SiguientesProducto"));
		
		
		this.jButtonSiguientesToolBarProducto.addActionListener (new ButtonActionListener(this,"SiguientesToolBarProducto"));
			
		this.jMenuItemSiguientesProducto.addActionListener (new ButtonActionListener(this,"MenuItemSiguientesProducto"));
			
		this.jMenuItemAbrirOrderByProducto.addActionListener (new ButtonActionListener(this,"MenuItemAbrirOrderByProducto"));
			
		this.jMenuItemMostrarOcultarProducto.addActionListener (new ButtonActionListener(this,"MenuItemMostrarOcultarProducto"));
			
		this.jMenuItemDetalleAbrirOrderByProducto.addActionListener (new ButtonActionListener(this,"MenuItemDetalleAbrirOrderByProducto"));
			
		this.jMenuItemDetalleMostarOcultarProducto.addActionListener (new ButtonActionListener(this,"MenuItemDetalleMostrarOcultarProducto"));		
		
		
		this.jButtonNuevoGuardarCambiosProducto.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosProducto"));
		
		
		this.jButtonNuevoGuardarCambiosToolBarProducto.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosToolBarProducto"));
			
		this.jMenuItemNuevoGuardarCambiosProducto.addActionListener (new ButtonActionListener(this,"MenuItemNuevoGuardarCambiosProducto"));		
		
		
		
		//SELECCIONAR TODOS
		
		this.jCheckBoxSeleccionarTodosProducto.addItemListener(new CheckBoxItemListener(this,"SeleccionarTodosProducto"));

		this.jCheckBoxSeleccionadosProducto.addItemListener(new CheckBoxItemListener(this,"SeleccionadosProducto"));
		
		if(this.jInternalFrameDetalleFormProducto!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormProducto.jComboBoxTiposAccionesFormularioProducto.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioProducto"));
		}
		
		
		this.jComboBoxTiposRelacionesProducto.addActionListener (new ButtonActionListener(this,"TiposRelacionesProducto"));
			
		this.jComboBoxTiposAccionesProducto.addActionListener (new ButtonActionListener(this,"TiposAccionesProducto"));
					
		this.jComboBoxTiposSeleccionarProducto.addActionListener (new ButtonActionListener(this,"TiposSeleccionarProducto"));
			
		this.jTextFieldValorCampoGeneralProducto.addActionListener (new ButtonActionListener(this,"ValorCampoGeneralProducto"));		
		
		
		if(this.jInternalFrameDetalleFormProducto!=null) { //if(this.conCargarFormDetalle) {
		
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonidProductoBusqueda.addActionListener(new ButtonActionListener(this,"idProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProducto.jButtonid_empresaProductoUpdate.addActionListener(new ButtonActionListener(this,"id_empresaProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonid_empresaProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProducto.jButtonid_sucursalProductoUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonid_sucursalProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtoncodigoProductoBusqueda.addActionListener(new ButtonActionListener(this,"codigoProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonnombreProductoBusqueda.addActionListener(new ButtonActionListener(this,"nombreProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonnombre_extranjeroProductoBusqueda.addActionListener(new ButtonActionListener(this,"nombre_extranjeroProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonresumen_detalleProductoBusqueda.addActionListener(new ButtonActionListener(this,"resumen_detalleProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtoncodigo_barraProductoBusqueda.addActionListener(new ButtonActionListener(this,"codigo_barraProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProducto.jButtonid_lineaProductoUpdate.addActionListener(new ButtonActionListener(this,"id_lineaProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonid_lineaProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_lineaProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProducto.jButtonid_linea_grupoProductoUpdate.addActionListener(new ButtonActionListener(this,"id_linea_grupoProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonid_linea_grupoProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_linea_grupoProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProducto.jButtonid_linea_categoriaProductoUpdate.addActionListener(new ButtonActionListener(this,"id_linea_categoriaProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonid_linea_categoriaProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_linea_categoriaProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProducto.jButtonid_linea_marcaProductoUpdate.addActionListener(new ButtonActionListener(this,"id_linea_marcaProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonid_linea_marcaProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_linea_marcaProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProducto.jButtonid_tipo_producto_servicioProductoUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_producto_servicioProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonid_tipo_producto_servicioProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_producto_servicioProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProducto.jButtonid_tipo_producto_servicio_invenProductoUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_producto_servicio_invenProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonid_tipo_producto_servicio_invenProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_producto_servicio_invenProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProducto.jButtonid_tipo_costeoProductoUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_costeoProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonid_tipo_costeoProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_costeoProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProducto.jButtonid_unidadProductoUpdate.addActionListener(new ButtonActionListener(this,"id_unidadProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonid_unidadProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_unidadProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProducto.jButtonid_unidad_pesoProductoUpdate.addActionListener(new ButtonActionListener(this,"id_unidad_pesoProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonid_unidad_pesoProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_unidad_pesoProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProducto.jButtonid_arancelProductoUpdate.addActionListener(new ButtonActionListener(this,"id_arancelProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonid_arancelProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_arancelProductoBusqueda"));
		//jButtonid_clienteProducto.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_clienteProductoActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormProducto.jButtonid_clienteProducto.addActionListener(new ButtonActionListener(this,"id_clienteProducto"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProducto.jButtonid_clienteProductoUpdate.addActionListener(new ButtonActionListener(this,"id_clienteProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonid_clienteProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_clienteProductoBusqueda"));
		//jButtonid_cliente_proveedor_defectoProducto.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cliente_proveedor_defectoProductoActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormProducto.jButtonid_cliente_proveedor_defectoProducto.addActionListener(new ButtonActionListener(this,"id_cliente_proveedor_defectoProducto"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProducto.jButtonid_cliente_proveedor_defectoProductoUpdate.addActionListener(new ButtonActionListener(this,"id_cliente_proveedor_defectoProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonid_cliente_proveedor_defectoProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_cliente_proveedor_defectoProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonesta_activoProductoBusqueda.addActionListener(new ButtonActionListener(this,"esta_activoProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtondescripcionProductoBusqueda.addActionListener(new ButtonActionListener(this,"descripcionProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonprecioProductoBusqueda.addActionListener(new ButtonActionListener(this,"precioProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonivaProductoBusqueda.addActionListener(new ButtonActionListener(this,"ivaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtoniva_valorProductoBusqueda.addActionListener(new ButtonActionListener(this,"iva_valorProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtoniceProductoBusqueda.addActionListener(new ButtonActionListener(this,"iceProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonice_valorProductoBusqueda.addActionListener(new ButtonActionListener(this,"ice_valorProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtondescuentoProductoBusqueda.addActionListener(new ButtonActionListener(this,"descuentoProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtondescuento_valorProductoBusqueda.addActionListener(new ButtonActionListener(this,"descuento_valorProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonarancel_porcentajeProductoBusqueda.addActionListener(new ButtonActionListener(this,"arancel_porcentajeProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonarancel_valorProductoBusqueda.addActionListener(new ButtonActionListener(this,"arancel_valorProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtoncomisionProductoBusqueda.addActionListener(new ButtonActionListener(this,"comisionProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtoncomision_valorProductoBusqueda.addActionListener(new ButtonActionListener(this,"comision_valorProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtondias_produccionProductoBusqueda.addActionListener(new ButtonActionListener(this,"dias_produccionProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtoncon_stock_negativoProductoBusqueda.addActionListener(new ButtonActionListener(this,"con_stock_negativoProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtoncon_precio_minimoProductoBusqueda.addActionListener(new ButtonActionListener(this,"con_precio_minimoProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtoncon_loteProductoBusqueda.addActionListener(new ButtonActionListener(this,"con_loteProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtoncon_confirmacionProductoBusqueda.addActionListener(new ButtonActionListener(this,"con_confirmacionProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtoncon_presupuestoProductoBusqueda.addActionListener(new ButtonActionListener(this,"con_presupuestoProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtoncon_importacionProductoBusqueda.addActionListener(new ButtonActionListener(this,"con_importacionProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtoncon_finalProductoBusqueda.addActionListener(new ButtonActionListener(this,"con_finalProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtoncon_consepProductoBusqueda.addActionListener(new ButtonActionListener(this,"con_consepProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtoncon_serieProductoBusqueda.addActionListener(new ButtonActionListener(this,"con_serieProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtoncon_balanzaProductoBusqueda.addActionListener(new ButtonActionListener(this,"con_balanzaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonaltoProductoBusqueda.addActionListener(new ButtonActionListener(this,"altoProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonanchoProductoBusqueda.addActionListener(new ButtonActionListener(this,"anchoProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonlargoProductoBusqueda.addActionListener(new ButtonActionListener(this,"largoProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonvolumenProductoBusqueda.addActionListener(new ButtonActionListener(this,"volumenProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonpesoProductoBusqueda.addActionListener(new ButtonActionListener(this,"pesoProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtongramosProductoBusqueda.addActionListener(new ButtonActionListener(this,"gramosProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonunidades_cajaProductoBusqueda.addActionListener(new ButtonActionListener(this,"unidades_cajaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonmargenProductoBusqueda.addActionListener(new ButtonActionListener(this,"margenProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonfactorProductoBusqueda.addActionListener(new ButtonActionListener(this,"factorProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonfobProductoBusqueda.addActionListener(new ButtonActionListener(this,"fobProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonfob2ProductoBusqueda.addActionListener(new ButtonActionListener(this,"fob2ProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProducto.jButtonid_tipo_productoProductoUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_productoProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonid_tipo_productoProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_productoProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProducto.jButtonid_color_productoProductoUpdate.addActionListener(new ButtonActionListener(this,"id_color_productoProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonid_color_productoProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_color_productoProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProducto.jButtonid_clase_productoProductoUpdate.addActionListener(new ButtonActionListener(this,"id_clase_productoProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonid_clase_productoProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_clase_productoProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProducto.jButtonid_efecto_productoProductoUpdate.addActionListener(new ButtonActionListener(this,"id_efecto_productoProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonid_efecto_productoProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_efecto_productoProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProducto.jButtonid_marca_productoProductoUpdate.addActionListener(new ButtonActionListener(this,"id_marca_productoProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonid_marca_productoProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_marca_productoProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProducto.jButtonid_modelo_productoProductoUpdate.addActionListener(new ButtonActionListener(this,"id_modelo_productoProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonid_modelo_productoProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_modelo_productoProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProducto.jButtonid_material_productoProductoUpdate.addActionListener(new ButtonActionListener(this,"id_material_productoProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonid_material_productoProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_material_productoProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProducto.jButtonid_segmento_productoProductoUpdate.addActionListener(new ButtonActionListener(this,"id_segmento_productoProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonid_segmento_productoProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_segmento_productoProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProducto.jButtonid_talla_productoProductoUpdate.addActionListener(new ButtonActionListener(this,"id_talla_productoProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonid_talla_productoProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_talla_productoProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtongrupoProductoBusqueda.addActionListener(new ButtonActionListener(this,"grupoProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonreferenciaProductoBusqueda.addActionListener(new ButtonActionListener(this,"referenciaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonaplicacionProductoBusqueda.addActionListener(new ButtonActionListener(this,"aplicacionProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonprocedenciaProductoBusqueda.addActionListener(new ButtonActionListener(this,"procedenciaProductoBusqueda"));
		}
		
		if(!this.conCargarMinimo) {
		//BYDAN_BUSQUEDAS
		
		
			this.jButtonBusquedaPorCodigoProducto.addActionListener(new ButtonActionListener(this,"BusquedaPorCodigoProducto"));

			this.jButtonBusquedaPorNombreProducto.addActionListener(new ButtonActionListener(this,"BusquedaPorNombreProducto"));

			this.jButtonFK_IdClaseProductoProducto.addActionListener(new ButtonActionListener(this,"FK_IdClaseProductoProducto"));

			this.jButtonFK_IdClienteProducto.addActionListener(new ButtonActionListener(this,"FK_IdClienteProducto"));

			this.jButtonBuscarFK_IdClienteid_clienteProducto.addActionListener(new ButtonActionListener(this,"id_clienteProducto"));

			this.jButtonFK_IdClienteProveedorDefectoProducto.addActionListener(new ButtonActionListener(this,"FK_IdClienteProveedorDefectoProducto"));

			this.jButtonBuscarFK_IdClienteProveedorDefectoid_cliente_proveedor_defectoProducto.addActionListener(new ButtonActionListener(this,"id_cliente_proveedor_defectoProducto"));

			this.jButtonFK_IdLineaProducto.addActionListener(new ButtonActionListener(this,"FK_IdLineaProducto"));

			this.jButtonFK_IdMarcaProductoProducto.addActionListener(new ButtonActionListener(this,"FK_IdMarcaProductoProducto"));

			this.jButtonFK_IdModeloProductoProducto.addActionListener(new ButtonActionListener(this,"FK_IdModeloProductoProducto"));

			this.jButtonFK_IdTipoProductoProducto.addActionListener(new ButtonActionListener(this,"FK_IdTipoProductoProducto"));

			this.jButtonFK_IdTipoProductoServicioProducto.addActionListener(new ButtonActionListener(this,"FK_IdTipoProductoServicioProducto"));

			this.jButtonFK_IdTipoProductoServicioInvenProducto.addActionListener(new ButtonActionListener(this,"FK_IdTipoProductoServicioInvenProducto"));
		
		
		
			//REPORTE DINAMICO
			
			if(this.jInternalFrameReporteDinamicoProducto!=null) {
				this.jInternalFrameReporteDinamicoProducto.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoProducto"));
				this.jInternalFrameReporteDinamicoProducto.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoProducto"));
				this.jInternalFrameReporteDinamicoProducto.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoProducto"));
			}
			
			//this.jButtonCerrarReporteDinamicoProducto.addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoProducto"));				
			//this.jButtonGenerarReporteDinamicoProducto.addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoProducto"));
			//this.jButtonGenerarExcelReporteDinamicoProducto.addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoProducto"));
				
				
			//IMPORTACION			
			if(this.jInternalFrameImportacionProducto!=null) {
				this.jInternalFrameImportacionProducto.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionProducto"));
				this.jInternalFrameImportacionProducto.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionProducto"));
				this.jInternalFrameImportacionProducto.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionProducto"));
			}
			
			//ORDER BY
			this.jButtonAbrirOrderByProducto.addActionListener (new ButtonActionListener(this,"AbrirOrderByProducto"));
			
			this.jButtonAbrirOrderByToolBarProducto.addActionListener (new ButtonActionListener(this,"AbrirOrderByToolBarProducto"));			
			
			if(this.jInternalFrameOrderByProducto!=null) {
				this.jInternalFrameOrderByProducto.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByProducto"));				
			}
			
			
		}
		
		
		
		if(!this.conCargarMinimo) {
			if(this.jInternalFrameDetalleFormProducto!=null) { //if(this.conCargarFormDetalle) {
			;
			}
		}
		
		
		//TABBED PANE RELACIONES
		if(this.jInternalFrameDetalleFormProducto!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormProducto.jTabbedPaneRelacionesProducto.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesProducto"));
		
		;
		}
		//TABBED PANE RELACIONES FIN(EXTRA TAB)		
	}
	
	/*
	public void initActions() {
		String sMapKey = "";
		InputMap inputMap =null;
		
		this.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
            public void internalFrameClosing(InternalFrameEvent event) {          	
            	try {
            		closingInternalFrameProducto();
				} catch (Exception e) {
					e.printStackTrace();
				}
            }
        });
		
		this.jInternalFrameDetalleFormProducto.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
	        public void internalFrameClosing(InternalFrameEvent event) {
	            JInternalFrameBase jInternalFrameDetalleFormProducto = (JInternalFrameBase)event.getSource();
	            	
	            ProductoBeanSwingJInternalFrame jInternalFrameParent=(ProductoBeanSwingJInternalFrame)jInternalFrameDetalleFormProducto.getjInternalFrameParent();
	                
	            try {
					jInternalFrameParent.jButtonCancelarProductoActionPerformed(null);
					
					//jInternalFrameParent.dispose();
					//jInternalFrameParent=null;
					
				} catch (Exception e) {
					e.printStackTrace();
				}
	        }
	    });
			
		this.jTableDatosProducto.getSelectionModel().addListSelectionListener (
	                new ListSelectionListener() {
	                    public void valueChanged(ListSelectionEvent e) {
							//BYDAN_DESHABILITADO
	                    	//try {jTableDatosProductoListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
	                    }
	                }
	     );
		
		this.jTableDatosProducto.addMouseListener(new MouseAdapter() {
			   public void mouseClicked(MouseEvent evt) {
				      if (evt.getClickCount() == 2) {
				    	  jButtonIdActionPerformed(null,jTableDatosProducto.getSelectedRow(),false,false);
				      }
				   }
		});
		
		this.jButtonNuevoProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoProductoActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoToolBarProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoProductoActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoProductoActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoProducto";
		inputMap = this.jButtonNuevoProducto.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_N , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoProducto.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoProductoActionPerformed(evt,false);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonNuevoRelacionesProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoProductoActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoRelacionesToolBarProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoProductoActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoRelacionesProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoProductoActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoRelacionesProducto";
		inputMap = this.jButtonNuevoRelacionesProducto.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_R , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoRelacionesProducto.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoProductoActionPerformed(evt,true);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonModificarProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonModificarToolBarProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemModificarProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ModificarProducto";
		inputMap = this.jButtonModificarProducto.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_M , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonModificarProducto.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonModificarProductoActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonActualizarProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonActualizarToolBarProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemActualizarProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ActualizarProducto";
		inputMap = this.jButtonActualizarProducto.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonActualizarProducto.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonActualizarProductoActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonEliminarProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonEliminarToolBarProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
				
		this.jMenuItemEliminarProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "EliminarProducto";
		inputMap = this.jButtonEliminarProducto.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_E , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonEliminarProducto.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonEliminarProductoActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCancelarProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCancelarToolBarProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCancelarProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CancelarProducto";
		inputMap = this.jButtonCancelarProducto.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_Q , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonCancelarProducto.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCancelarProductoActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCerrarProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCerrarToolBarProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCerrarProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemDetalleCerrarProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  //try {jButtonCerrarProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
					try {jButtonCancelarProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CerrarProducto";
		inputMap = this.jButtonCerrarProducto.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_C , KeyEvent.ALT_MASK), sMapKey);
			
		this.jButtonCerrarProducto.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCerrarProductoActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jInternalFrameDetalleFormProducto.jButtonGuardarCambiosProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosToolBarProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaToolBarProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosTablaProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "GuardarCambiosProducto";
		inputMap = this.jInternalFrameDetalleFormProducto.jButtonGuardarCambiosProducto.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jInternalFrameDetalleFormProducto.jButtonGuardarCambiosProducto.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonGuardarCambiosProductoActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonRecargarInformacionProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonRecargarInformacionToolBarProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemRecargarInformacionProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		this.jButtonAnterioresProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAnterioresToolBarProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemAnterioresProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesToolBarProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemSiguientesProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosToolBarProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoGuardarCambiosProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		//SELECCIONAR TODOS
		this.jCheckBoxSeleccionarTodosProducto.addItemListener(new ItemListener() {		
			public void itemStateChanged(ItemEvent evt) {
				try {jCheckBoxSeleccionarTodosProductoItemListener(evt);}catch(Exception e){e.printStackTrace();}
			}
		});

		this.jComboBoxTiposAccionesProducto.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposAccionesProductoActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jComboBoxTiposSeleccionarProducto.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposSeleccionarProductoActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jTextFieldValorCampoGeneralProducto.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jTextFieldValorCampoGeneralProductoActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonidProductoBusqueda.addActionListener(new ButtonActionListener(this,"idProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProducto.jButtonid_empresaProductoUpdate.addActionListener(new ButtonActionListener(this,"id_empresaProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonid_empresaProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProducto.jButtonid_sucursalProductoUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonid_sucursalProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtoncodigoProductoBusqueda.addActionListener(new ButtonActionListener(this,"codigoProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonnombreProductoBusqueda.addActionListener(new ButtonActionListener(this,"nombreProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonnombre_extranjeroProductoBusqueda.addActionListener(new ButtonActionListener(this,"nombre_extranjeroProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonresumen_detalleProductoBusqueda.addActionListener(new ButtonActionListener(this,"resumen_detalleProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtoncodigo_barraProductoBusqueda.addActionListener(new ButtonActionListener(this,"codigo_barraProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProducto.jButtonid_lineaProductoUpdate.addActionListener(new ButtonActionListener(this,"id_lineaProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonid_lineaProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_lineaProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProducto.jButtonid_linea_grupoProductoUpdate.addActionListener(new ButtonActionListener(this,"id_linea_grupoProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonid_linea_grupoProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_linea_grupoProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProducto.jButtonid_linea_categoriaProductoUpdate.addActionListener(new ButtonActionListener(this,"id_linea_categoriaProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonid_linea_categoriaProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_linea_categoriaProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProducto.jButtonid_linea_marcaProductoUpdate.addActionListener(new ButtonActionListener(this,"id_linea_marcaProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonid_linea_marcaProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_linea_marcaProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProducto.jButtonid_tipo_producto_servicioProductoUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_producto_servicioProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonid_tipo_producto_servicioProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_producto_servicioProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProducto.jButtonid_tipo_producto_servicio_invenProductoUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_producto_servicio_invenProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonid_tipo_producto_servicio_invenProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_producto_servicio_invenProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProducto.jButtonid_tipo_costeoProductoUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_costeoProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonid_tipo_costeoProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_costeoProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProducto.jButtonid_unidadProductoUpdate.addActionListener(new ButtonActionListener(this,"id_unidadProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonid_unidadProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_unidadProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProducto.jButtonid_unidad_pesoProductoUpdate.addActionListener(new ButtonActionListener(this,"id_unidad_pesoProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonid_unidad_pesoProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_unidad_pesoProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProducto.jButtonid_arancelProductoUpdate.addActionListener(new ButtonActionListener(this,"id_arancelProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonid_arancelProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_arancelProductoBusqueda"));
		//jButtonid_clienteProducto.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_clienteProductoActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormProducto.jButtonid_clienteProducto.addActionListener(new ButtonActionListener(this,"id_clienteProducto"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProducto.jButtonid_clienteProductoUpdate.addActionListener(new ButtonActionListener(this,"id_clienteProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonid_clienteProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_clienteProductoBusqueda"));
		//jButtonid_cliente_proveedor_defectoProducto.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cliente_proveedor_defectoProductoActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormProducto.jButtonid_cliente_proveedor_defectoProducto.addActionListener(new ButtonActionListener(this,"id_cliente_proveedor_defectoProducto"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProducto.jButtonid_cliente_proveedor_defectoProductoUpdate.addActionListener(new ButtonActionListener(this,"id_cliente_proveedor_defectoProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonid_cliente_proveedor_defectoProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_cliente_proveedor_defectoProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonesta_activoProductoBusqueda.addActionListener(new ButtonActionListener(this,"esta_activoProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtondescripcionProductoBusqueda.addActionListener(new ButtonActionListener(this,"descripcionProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonprecioProductoBusqueda.addActionListener(new ButtonActionListener(this,"precioProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonivaProductoBusqueda.addActionListener(new ButtonActionListener(this,"ivaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtoniva_valorProductoBusqueda.addActionListener(new ButtonActionListener(this,"iva_valorProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtoniceProductoBusqueda.addActionListener(new ButtonActionListener(this,"iceProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonice_valorProductoBusqueda.addActionListener(new ButtonActionListener(this,"ice_valorProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtondescuentoProductoBusqueda.addActionListener(new ButtonActionListener(this,"descuentoProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtondescuento_valorProductoBusqueda.addActionListener(new ButtonActionListener(this,"descuento_valorProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonarancel_porcentajeProductoBusqueda.addActionListener(new ButtonActionListener(this,"arancel_porcentajeProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonarancel_valorProductoBusqueda.addActionListener(new ButtonActionListener(this,"arancel_valorProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtoncomisionProductoBusqueda.addActionListener(new ButtonActionListener(this,"comisionProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtoncomision_valorProductoBusqueda.addActionListener(new ButtonActionListener(this,"comision_valorProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtondias_produccionProductoBusqueda.addActionListener(new ButtonActionListener(this,"dias_produccionProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtoncon_stock_negativoProductoBusqueda.addActionListener(new ButtonActionListener(this,"con_stock_negativoProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtoncon_precio_minimoProductoBusqueda.addActionListener(new ButtonActionListener(this,"con_precio_minimoProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtoncon_loteProductoBusqueda.addActionListener(new ButtonActionListener(this,"con_loteProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtoncon_confirmacionProductoBusqueda.addActionListener(new ButtonActionListener(this,"con_confirmacionProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtoncon_presupuestoProductoBusqueda.addActionListener(new ButtonActionListener(this,"con_presupuestoProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtoncon_importacionProductoBusqueda.addActionListener(new ButtonActionListener(this,"con_importacionProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtoncon_finalProductoBusqueda.addActionListener(new ButtonActionListener(this,"con_finalProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtoncon_consepProductoBusqueda.addActionListener(new ButtonActionListener(this,"con_consepProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtoncon_serieProductoBusqueda.addActionListener(new ButtonActionListener(this,"con_serieProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtoncon_balanzaProductoBusqueda.addActionListener(new ButtonActionListener(this,"con_balanzaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonaltoProductoBusqueda.addActionListener(new ButtonActionListener(this,"altoProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonanchoProductoBusqueda.addActionListener(new ButtonActionListener(this,"anchoProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonlargoProductoBusqueda.addActionListener(new ButtonActionListener(this,"largoProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonvolumenProductoBusqueda.addActionListener(new ButtonActionListener(this,"volumenProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonpesoProductoBusqueda.addActionListener(new ButtonActionListener(this,"pesoProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtongramosProductoBusqueda.addActionListener(new ButtonActionListener(this,"gramosProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonunidades_cajaProductoBusqueda.addActionListener(new ButtonActionListener(this,"unidades_cajaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonmargenProductoBusqueda.addActionListener(new ButtonActionListener(this,"margenProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonfactorProductoBusqueda.addActionListener(new ButtonActionListener(this,"factorProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonfobProductoBusqueda.addActionListener(new ButtonActionListener(this,"fobProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonfob2ProductoBusqueda.addActionListener(new ButtonActionListener(this,"fob2ProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProducto.jButtonid_tipo_productoProductoUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_productoProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonid_tipo_productoProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_productoProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProducto.jButtonid_color_productoProductoUpdate.addActionListener(new ButtonActionListener(this,"id_color_productoProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonid_color_productoProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_color_productoProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProducto.jButtonid_clase_productoProductoUpdate.addActionListener(new ButtonActionListener(this,"id_clase_productoProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonid_clase_productoProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_clase_productoProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProducto.jButtonid_efecto_productoProductoUpdate.addActionListener(new ButtonActionListener(this,"id_efecto_productoProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonid_efecto_productoProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_efecto_productoProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProducto.jButtonid_marca_productoProductoUpdate.addActionListener(new ButtonActionListener(this,"id_marca_productoProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonid_marca_productoProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_marca_productoProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProducto.jButtonid_modelo_productoProductoUpdate.addActionListener(new ButtonActionListener(this,"id_modelo_productoProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonid_modelo_productoProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_modelo_productoProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProducto.jButtonid_material_productoProductoUpdate.addActionListener(new ButtonActionListener(this,"id_material_productoProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonid_material_productoProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_material_productoProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProducto.jButtonid_segmento_productoProductoUpdate.addActionListener(new ButtonActionListener(this,"id_segmento_productoProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonid_segmento_productoProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_segmento_productoProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProducto.jButtonid_talla_productoProductoUpdate.addActionListener(new ButtonActionListener(this,"id_talla_productoProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonid_talla_productoProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_talla_productoProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtongrupoProductoBusqueda.addActionListener(new ButtonActionListener(this,"grupoProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonreferenciaProductoBusqueda.addActionListener(new ButtonActionListener(this,"referenciaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonaplicacionProductoBusqueda.addActionListener(new ButtonActionListener(this,"aplicacionProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProducto.jButtonprocedenciaProductoBusqueda.addActionListener(new ButtonActionListener(this,"procedenciaProductoBusqueda"));
		
		
		this.jButtonBusquedaPorCodigoProducto.addActionListener(new ButtonActionListener(this,"BusquedaPorCodigoProducto"));

		this.jButtonBusquedaPorNombreProducto.addActionListener(new ButtonActionListener(this,"BusquedaPorNombreProducto"));

		this.jButtonFK_IdClaseProductoProducto.addActionListener(new ButtonActionListener(this,"FK_IdClaseProductoProducto"));

		this.jButtonFK_IdClienteProducto.addActionListener(new ButtonActionListener(this,"FK_IdClienteProducto"));

		this.jButtonBuscarFK_IdClienteid_clienteProducto.addActionListener(new ButtonActionListener(this,"id_clienteProducto"));

		this.jButtonFK_IdClienteProveedorDefectoProducto.addActionListener(new ButtonActionListener(this,"FK_IdClienteProveedorDefectoProducto"));

		this.jButtonBuscarFK_IdClienteProveedorDefectoid_cliente_proveedor_defectoProducto.addActionListener(new ButtonActionListener(this,"id_cliente_proveedor_defectoProducto"));

		this.jButtonFK_IdLineaProducto.addActionListener(new ButtonActionListener(this,"FK_IdLineaProducto"));

		this.jButtonFK_IdMarcaProductoProducto.addActionListener(new ButtonActionListener(this,"FK_IdMarcaProductoProducto"));

		this.jButtonFK_IdModeloProductoProducto.addActionListener(new ButtonActionListener(this,"FK_IdModeloProductoProducto"));

		this.jButtonFK_IdTipoProductoProducto.addActionListener(new ButtonActionListener(this,"FK_IdTipoProductoProducto"));

		this.jButtonFK_IdTipoProductoServicioProducto.addActionListener(new ButtonActionListener(this,"FK_IdTipoProductoServicioProducto"));

		this.jButtonFK_IdTipoProductoServicioInvenProducto.addActionListener(new ButtonActionListener(this,"FK_IdTipoProductoServicioInvenProducto"));

		
		//REPORTE DINAMICO
		this.jButtonCerrarReporteDinamicoProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarReporteDinamicoProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarReporteDinamicoProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarReporteDinamicoProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarExcelReporteDinamicoProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarExcelReporteDinamicoProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		//IMPORTACION
		this.jButtonCerrarImportacionProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarImportacionProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarImportacionProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarImportacionProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAbrirImportacionProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAbrirImportacionProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
	}
	*/
	
	
	public void jComboBoxTiposSeleccionarProductoActionListener(ActionEvent evt) throws Exception {    		
		try {			
			Reporte reporte=(Reporte)this.jComboBoxTiposSeleccionarProducto.getSelectedItem();
			
			//if(reporte.getsCodigo().equals("SELECCIONAR")) {
			//}					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
		}
	}	
	
	
	
	public void seleccionarTodosProducto(Boolean conSeleccionarTodos) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				for(Producto productoAux:this.productoLogic.getProductos()) {
					productoAux.setIsSelected(conSeleccionarTodos);
				}			
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(Producto productoAux:productos) {
					productoAux.setIsSelected(conSeleccionarTodos);
				}
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarTodosProductoItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingProducto(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			
			if(sTipoSeleccionar.equals("COLUMNAS")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(Producto productoAux:this.productoLogic.getProductos()) {
						productoAux.setIsSelected(this.isSeleccionarTodos);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(Producto productoAux:productos) {
						productoAux.setIsSelected(this.isSeleccionarTodos);
					}
				}
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					for(Producto productoAux:this.productoLogic.getProductos()) {
					
						if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_ESTAACTIVO)) {
							existe=true;
							productoAux.setesta_activo(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_CONSTOCKNEGATIVO)) {
							existe=true;
							productoAux.setcon_stock_negativo(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_CONPRECIOMINIMO)) {
							existe=true;
							productoAux.setcon_precio_minimo(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_CONLOTE)) {
							existe=true;
							productoAux.setcon_lote(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_CONCONFIRMACION)) {
							existe=true;
							productoAux.setcon_confirmacion(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_CONPRESUPUESTO)) {
							existe=true;
							productoAux.setcon_presupuesto(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_CONIMPORTACION)) {
							existe=true;
							productoAux.setcon_importacion(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_CONFINAL)) {
							existe=true;
							productoAux.setcon_final(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_CONCONSEP)) {
							existe=true;
							productoAux.setcon_consep(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_CONSERIE)) {
							existe=true;
							productoAux.setcon_serie(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_CONBALANZA)) {
							existe=true;
							productoAux.setcon_balanza(this.isSeleccionarTodos);
						}
					}	
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(Producto productoAux:productos) {
						
						if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_ESTAACTIVO)) {
							existe=true;
							productoAux.setesta_activo(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_CONSTOCKNEGATIVO)) {
							existe=true;
							productoAux.setcon_stock_negativo(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_CONPRECIOMINIMO)) {
							existe=true;
							productoAux.setcon_precio_minimo(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_CONLOTE)) {
							existe=true;
							productoAux.setcon_lote(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_CONCONFIRMACION)) {
							existe=true;
							productoAux.setcon_confirmacion(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_CONPRESUPUESTO)) {
							existe=true;
							productoAux.setcon_presupuesto(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_CONIMPORTACION)) {
							existe=true;
							productoAux.setcon_importacion(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_CONFINAL)) {
							existe=true;
							productoAux.setcon_final(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_CONCONSEP)) {
							existe=true;
							productoAux.setcon_consep(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_CONSERIE)) {
							existe=true;
							productoAux.setcon_serie(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_CONBALANZA)) {
							existe=true;
							productoAux.setcon_balanza(this.isSeleccionarTodos);
						}
					}
				}
			}
					
			if(existe) {
				this.inicializarActualizarBindingTablaProducto(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosProducto.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosProducto.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosProducto,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionadosProductoItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingProducto(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			int[] arrNumRowsSeleccionados=null;
			
			arrNumRowsSeleccionados=this.jTableDatosProducto.getSelectedRows();
			
			Producto productoLocal=new Producto();
			
			//this.seleccionarTodosProducto(false);
			
			for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					productoLocal =(Producto) this.productoLogic.getProductos().toArray()[this.jTableDatosProducto.convertRowIndexToModel(iNumRowSeleccionado)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					productoLocal =(Producto) this.productos.toArray()[this.jTableDatosProducto.convertRowIndexToModel(iNumRowSeleccionado)];
				}
				
				productoLocal.setIsSelected(this.isSeleccionados);
			}
			
			/*
			if(sTipoSeleccionar.equals("SELECCIONAR")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(Producto productoAux:this.productoLogic.getProductos()) {
						productoAux.setIsSelected(this.isSeleccionados);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(Producto productoAux:productos) {
						productoAux.setIsSelected(this.isSeleccionados);
					}
				}
			}
			*/
			
			//if(existe) {
				this.inicializarActualizarBindingTablaProducto(false);
			/*
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			*/
			
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosProducto.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosProducto.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosProducto,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarActualProductoItemListener(ItemEvent evt,Long idActual) throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void ejecutarAuxiliarProductoParaAjaxPostBack() throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jTextFieldValorCampoGeneralProductoActionListener(ActionEvent evt) throws Exception {    		
		try {
			this.inicializarActualizarBindingProducto(false,false);
			
			//System.out.println(this.jTextFieldValorCampoGeneralProducto.getText());		
			
			Boolean existe=false;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(Producto productoAux:this.productoLogic.getProductos()) {
				
						if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_CODIGO)) {
							existe=true;
							productoAux.setcodigo(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_NOMBRE)) {
							existe=true;
							productoAux.setnombre(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_NOMBREEXTRANJERO)) {
							existe=true;
							productoAux.setnombre_extranjero(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_RESUMENDETALLE)) {
							existe=true;
							productoAux.setresumen_detalle(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_CODIGOBARRA)) {
							existe=true;
							productoAux.setcodigo_barra(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_DESCRIPCION)) {
							existe=true;
							productoAux.setdescripcion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_PRECIO)) {
							existe=true;
							productoAux.setprecio(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_IVA)) {
							existe=true;
							productoAux.setiva(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_IVAVALOR)) {
							existe=true;
							productoAux.setiva_valor(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_ICE)) {
							existe=true;
							productoAux.setice(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_ICEVALOR)) {
							existe=true;
							productoAux.setice_valor(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_DESCUENTO)) {
							existe=true;
							productoAux.setdescuento(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_DESCUENTOVALOR)) {
							existe=true;
							productoAux.setdescuento_valor(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_ARANCELPORCENTAJE)) {
							existe=true;
							productoAux.setarancel_porcentaje(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_ARANCELVALOR)) {
							existe=true;
							productoAux.setarancel_valor(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_COMISION)) {
							existe=true;
							productoAux.setcomision(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_COMISIONVALOR)) {
							existe=true;
							productoAux.setcomision_valor(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_DIASPRODUCCION)) {
							existe=true;
							productoAux.setdias_produccion(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_ALTO)) {
							existe=true;
							productoAux.setalto(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_ANCHO)) {
							existe=true;
							productoAux.setancho(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_LARGO)) {
							existe=true;
							productoAux.setlargo(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_VOLUMEN)) {
							existe=true;
							productoAux.setvolumen(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_PESO)) {
							existe=true;
							productoAux.setpeso(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_GRAMOS)) {
							existe=true;
							productoAux.setgramos(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_UNIDADESCAJA)) {
							existe=true;
							productoAux.setunidades_caja(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_MARGEN)) {
							existe=true;
							productoAux.setmargen(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_FACTOR)) {
							existe=true;
							productoAux.setfactor(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_FOB)) {
							existe=true;
							productoAux.setfob(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_FOB2)) {
							existe=true;
							productoAux.setfob2(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_GRUPO)) {
							existe=true;
							productoAux.setgrupo(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_REFERENCIA)) {
							existe=true;
							productoAux.setreferencia(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_APLICACION)) {
							existe=true;
							productoAux.setaplicacion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_PROCEDENCIA)) {
							existe=true;
							productoAux.setprocedencia(this.sValorCampoGeneral);
						}
				}	
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(Producto productoAux:productos) {
					
						if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_CODIGO)) {
							existe=true;
							productoAux.setcodigo(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_NOMBRE)) {
							existe=true;
							productoAux.setnombre(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_NOMBREEXTRANJERO)) {
							existe=true;
							productoAux.setnombre_extranjero(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_RESUMENDETALLE)) {
							existe=true;
							productoAux.setresumen_detalle(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_CODIGOBARRA)) {
							existe=true;
							productoAux.setcodigo_barra(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_DESCRIPCION)) {
							existe=true;
							productoAux.setdescripcion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_PRECIO)) {
							existe=true;
							productoAux.setprecio(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_IVA)) {
							existe=true;
							productoAux.setiva(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_IVAVALOR)) {
							existe=true;
							productoAux.setiva_valor(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_ICE)) {
							existe=true;
							productoAux.setice(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_ICEVALOR)) {
							existe=true;
							productoAux.setice_valor(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_DESCUENTO)) {
							existe=true;
							productoAux.setdescuento(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_DESCUENTOVALOR)) {
							existe=true;
							productoAux.setdescuento_valor(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_ARANCELPORCENTAJE)) {
							existe=true;
							productoAux.setarancel_porcentaje(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_ARANCELVALOR)) {
							existe=true;
							productoAux.setarancel_valor(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_COMISION)) {
							existe=true;
							productoAux.setcomision(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_COMISIONVALOR)) {
							existe=true;
							productoAux.setcomision_valor(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_DIASPRODUCCION)) {
							existe=true;
							productoAux.setdias_produccion(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_ALTO)) {
							existe=true;
							productoAux.setalto(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_ANCHO)) {
							existe=true;
							productoAux.setancho(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_LARGO)) {
							existe=true;
							productoAux.setlargo(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_VOLUMEN)) {
							existe=true;
							productoAux.setvolumen(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_PESO)) {
							existe=true;
							productoAux.setpeso(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_GRAMOS)) {
							existe=true;
							productoAux.setgramos(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_UNIDADESCAJA)) {
							existe=true;
							productoAux.setunidades_caja(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_MARGEN)) {
							existe=true;
							productoAux.setmargen(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_FACTOR)) {
							existe=true;
							productoAux.setfactor(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_FOB)) {
							existe=true;
							productoAux.setfob(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_FOB2)) {
							existe=true;
							productoAux.setfob2(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_GRUPO)) {
							existe=true;
							productoAux.setgrupo(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_REFERENCIA)) {
							existe=true;
							productoAux.setreferencia(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_APLICACION)) {
							existe=true;
							productoAux.setaplicacion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_PROCEDENCIA)) {
							existe=true;
							productoAux.setprocedencia(this.sValorCampoGeneral);
						}
				}
			}
								
			if(existe) {
				this.inicializarActualizarBindingTablaProducto(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jComboBoxTiposAccionesProductoActionListener(ActionEvent evt,Boolean esParaAccionDesdeFormulario) throws Exception {    				
		Boolean conSplash=true;
		
		try {							
		
			this.inicializarActualizarBindingProducto(false,false);
			
			Reporte reporte=new Reporte();
			
			this.esParaAccionDesdeFormularioProducto=esParaAccionDesdeFormulario;
			
			if(!esParaAccionDesdeFormulario) {
				
				reporte=(Reporte)this.jComboBoxTiposAccionesProducto.getSelectedItem();
				
			} else {
				reporte=(Reporte)this.jInternalFrameDetalleFormProducto.jComboBoxTiposAccionesFormularioProducto.getSelectedItem();
			}
			String sTipoAccionLocal=this.sTipoAccion;
			
			if(!esParaAccionDesdeFormulario) {
				sTipoAccionLocal=this.sTipoAccion;
			} else {
				sTipoAccionLocal=this.sTipoAccionFormulario;
			}
			
			if(sTipoAccionLocal.equals("GENERAR REPORTE")) {//reporte.getsCodigo().equals("GENERAR REPORTE")) {
				if(this.isPermisoReporteProducto) {				
					conSplash=true;//false;										
					
					//this.startProcessProducto(conSplash);
				
					this.generarReporteProductosSeleccionados();
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesProducto.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormProducto.jComboBoxTiposAccionesFormularioProducto.setSelectedIndex(0);					
				}
			} else if(sTipoAccionLocal.equals("GENERAR REPORTE DINAMICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.mostrarReporteDinamicoProductosSeleccionados();
				//this.jComboBoxTiposAccionesProducto.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("GENERAR_REPORTE_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoProductosSeleccionados(false);
				//this.jComboBoxTiposAccionesProducto.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("GENERAR_REPORTE_TOTALES_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoProductosSeleccionados(true);
				//this.jComboBoxTiposAccionesProducto.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessProducto();
				
				this.exportarProductosSeleccionados();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesProducto.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormProducto.jComboBoxTiposAccionesFormularioProducto.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("IMPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				this.mostrarImportacionProductos();
				//this.importarProductos();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesProducto.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormProducto.jComboBoxTiposAccionesFormularioProducto.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS_EXCEL")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessProducto();
				//SE EXPORTA SEGUN TIPO ARCHIVO SELECCIONADO
				//this.exportarExcelProductosSeleccionados();
				//this.jComboBoxTiposAccionesProducto.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("RECARGAR_FK")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {								
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE RECARGAR REFERENCIAS ?", "MANTENIMIENTO DE Producto", JOptionPane.OK_CANCEL_OPTION) == 0) {
				
				//this.startProcessProducto();
				
					if(!esParaAccionDesdeFormulario || (esParaAccionDesdeFormulario && this.isEsNuevoProducto)) {
						this.esRecargarFks=true;
						this.cargarCombosForeignKeyProducto(false,false,false);
						this.esRecargarFks=false;
						
						JOptionPane.showMessageDialog(this,"PROCESO EJECUTADO CORRECTAMENTE","MANTENIMIENTO DE Producto",JOptionPane.INFORMATION_MESSAGE);
					} else {
						JOptionPane.showMessageDialog(this,"ESTE PROCESO SOLO FUNCIONA AL INGRESAR UN NUEVO ELEMENTO","MANTENIMIENTO",JOptionPane.ERROR_MESSAGE);	
					}
					
					
				}
				
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesProducto.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormProducto.jComboBoxTiposAccionesFormularioProducto.setSelectedIndex(0);					
				}	
			} 			
			else if(ProductoBeanSwingJInternalFrame.EsProcesoReporte(reporte.getsCodigo())){
				if(this.isPermisoReporteProducto) {				
					if(this.tieneElementosSeleccionados()) {
						this.quitarFilaTotales();
						
						conSplash=false;
						
						//this.startProcessProducto(conSplash);
					
						//this.actualizarParametrosGeneralProducto();
						
						this.generarReporteProcesoAccionProductosSeleccionados(reporte.getsCodigo());
						
						if(!esParaAccionDesdeFormulario) {
							
							this.jComboBoxTiposAccionesProducto.setSelectedIndex(0);					
							
						} else {
							this.jInternalFrameDetalleFormProducto.jComboBoxTiposAccionesFormularioProducto.setSelectedIndex(0);					
						}
					} else {
						JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
			} 
			else if(ProductoBeanSwingJInternalFrameAdditional.EsProcesoAccionNormal(reporte.getsCodigo())){
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR "+reporte.getsDescripcion()+" EN PROCESO ProductoS SELECCIONADOS?", "MANTENIMIENTO DE Producto", JOptionPane.OK_CANCEL_OPTION) == 0) {
						//this.startProcessProducto();
				
						this.actualizarParametrosGeneralProducto();
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {						
							this.productoReturnGeneral=productoLogic.procesarAccionProductosWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,sTipoAccionLocal,this.productoLogic.getProductos(),this.productoParameterGeneral);
						
						} else if(Constantes.ISUSAEJBREMOTE) {
						
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
						this.procesarProductoReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesProducto.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormProducto.jComboBoxTiposAccionesFormularioProducto.setSelectedIndex(0);					
					}
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}				
			} 
			else {
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					this.actualizarParametrosGeneralProducto();
					
					ProductoBeanSwingJInternalFrameAdditional.ProcesarAccion(reporte.getsCodigo(),reporte.getsDescripcion(),this);
					
					this.procesarProductoReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesProducto.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormProducto.jComboBoxTiposAccionesFormularioProducto.setSelectedIndex(0);					
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}
			}
		} catch(Exception e) {
			this.esRecargarFks=false;
			
			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
		
		}  finally {
      		//this.finishProcessProducto(conSplash);
      	}
	}
	
	public void jComboBoxTiposRelacionesProductoActionListener(ActionEvent evt) throws Exception {    				
		Boolean conSplash=true;
		
		try {			
			this.startProcessProducto();
			
			if(this.jInternalFrameDetalleFormProducto==null) { //if(!this.conCargarFormDetalle) {			
				this.inicializarFormDetalle();
			}
			
			ArrayList<Producto> productosSeleccionados=new ArrayList<Producto>();		
			Producto producto=new Producto();
			
			int rowIndex=-1;//CON ESTO SE DESHABILITA SELECCION POR INDICE
			
			this.inicializarActualizarBindingProducto(false,false);
			
			Reporte reporte=new Reporte();
			
			
			reporte=(Reporte)this.jComboBoxTiposRelacionesProducto.getSelectedItem();
			
			
			
			
			productosSeleccionados=this.getProductosSeleccionados(true);
			//this.sTipoAccion;
			
			if(productosSeleccionados.size()==1) {
				for(Producto productoAux:productosSeleccionados) {
					producto=productoAux;
				}
				
				if(this.sTipoAccion.equals("NONE")) {
				
				}
				
				else if(this.sTipoRelacion.equals("Producto Proveedor")) {
					jButtonProveedorProductoActionPerformed(null,rowIndex,true,false,producto);
				}
				else if(this.sTipoRelacion.equals("Precio")) {
					jButtonPrecioActionPerformed(null,rowIndex,true,false,producto);
				}
				else if(this.sTipoRelacion.equals("Detalle Impuesto Inven")) {
					jButtonDetalleImpuestoInvenActionPerformed(null,rowIndex,true,false,producto);
				}
				else if(this.sTipoRelacion.equals("Presupuesto Ventas")) {
					jButtonPresupuestoVentasActionPerformed(null,rowIndex,true,false,producto);
				}
				else if(this.sTipoRelacion.equals("Politica Producto")) {
					jButtonPoliticaProductoActionPerformed(null,rowIndex,true,false,producto);
				}
				else if(this.sTipoRelacion.equals("Serie Producto")) {
					jButtonSerieProductoActionPerformed(null,rowIndex,true,false,producto);
				}
				else if(this.sTipoRelacion.equals("Ubicacion Producto")) {
					jButtonUbicacionProduActionPerformed(null,rowIndex,true,false,producto);
				}
				else if(this.sTipoRelacion.equals("Parametro Producto")) {
					jButtonParametroProductoActionPerformed(null,rowIndex,true,false,producto);
				}
				else if(this.sTipoRelacion.equals("Producto Unidad")) {
					jButtonProductoUnidadActionPerformed(null,rowIndex,true,false,producto);
				}
				else if(this.sTipoRelacion.equals("Ingrediente")) {
					jButtonIngredienteActionPerformed(null,rowIndex,true,false,producto);
				}
				else if(this.sTipoRelacion.equals("Caracteristica")) {
					jButtonProductoCaracActionPerformed(null,rowIndex,true,false,producto);
				}
				else if(this.sTipoRelacion.equals("Servicio Cliente")) {
					jButtonServicioClienteActionPerformed(null,rowIndex,true,false,producto);
				}
				else if(this.sTipoRelacion.equals("Promocion")) {
					jButtonProductoPromocionActionPerformed(null,rowIndex,true,false,producto);
				}
				else if(this.sTipoRelacion.equals("Especificacion")) {
					jButtonProductoEspeciActionPerformed(null,rowIndex,true,false,producto);
				}
				else if(this.sTipoRelacion.equals("Reemplazo")) {
					jButtonProductoReemplaActionPerformed(null,rowIndex,true,false,producto);
				}
				else if(this.sTipoRelacion.equals("Estadistica")) {
					jButtonProductoEstadisticaActionPerformed(null,rowIndex,true,false,producto);
				}
				else if(this.sTipoRelacion.equals("Politica Factu")) {
					jButtonPoliticaFactuActionPerformed(null,rowIndex,true,false,producto);
				}
				else if(this.sTipoRelacion.equals("Producto Cuenta Contable")) {
					jButtonProductoCuentaContableActionPerformed(null,rowIndex,true,false,producto);
				}
				else if(this.sTipoRelacion.equals("Bodega Producto")) {
					jButtonBodegaProductoActionPerformed(null,rowIndex,true,false,producto);
				}
				else if(this.sTipoRelacion.equals("Presupuesto Producto")) {
					jButtonPresupuestoProductoActionPerformed(null,rowIndex,true,false,producto);
				}
				else if(this.sTipoRelacion.equals("Saldo Mes Producto")) {
					jButtonSaldoMesProductoActionPerformed(null,rowIndex,true,false,producto);
				}
			} else {
				JOptionPane.showMessageDialog(this,"SELECCIONE SOLO UN REGISTRO","RELACIONES",JOptionPane.ERROR_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.finishProcessProducto();
			
      		//this.finishProcessProducto(conSplash);
      	}
	}
			
	public static Boolean EsProcesoReporte(String sTipoProceso) throws Exception {
		Boolean esProcesoAccionRepoorte=false;

		if(sTipoProceso.contains("REPORTE_")) {
			 esProcesoAccionRepoorte=true;
		}

		return esProcesoAccionRepoorte;
	}
	
	public void procesarProductoReturnGeneral() throws Exception {
		if(this.productoReturnGeneral.getConRetornoEstaProcesado()) {
			JOptionPane.showMessageDialog(this,this.productoReturnGeneral.getsMensajeProceso(),"PROCESO",JOptionPane.INFORMATION_MESSAGE);
		}
		
		if(this.productoReturnGeneral.getConMostrarMensaje()) {
			JOptionPane.showMessageDialog(this,this.productoReturnGeneral.getsMensajeProceso(),"PROCESO",FuncionesSwing.getColorSelectedBackground(this.productoReturnGeneral.getsTipoMensaje()));
		}
		
		if(this.productoReturnGeneral.getConRecargarInformacion()) {
			this.procesarBusqueda(this.sAccionBusqueda);
			
			this.inicializarActualizarBindingProducto(false);
		}
		
		if(this.productoReturnGeneral.getConRetornoLista() || this.productoReturnGeneral.getConRetornoObjeto()) {
			if(this.productoReturnGeneral.getConRetornoLista()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.productoLogic.setProductos(this.productoReturnGeneral.getProductos());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			if(this.productoReturnGeneral.getConRetornoObjeto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.productoLogic.setProducto(this.productoReturnGeneral.getProducto());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			this.inicializarActualizarBindingProducto(false);
		}
	}
	
	public void actualizarParametrosGeneralProducto() throws Exception {
		
		
	}
	
	public ArrayList<Producto> getProductosSeleccionados(Boolean conSeleccionarTodosAutomatico) throws Exception {
		ArrayList<Producto> productosSeleccionados=new ArrayList<Producto>();
		Boolean existe=false;
		
		if(!this.esParaAccionDesdeFormularioProducto) {
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				
				for(Producto productoAux:productoLogic.getProductos()) {
					if(productoAux.getIsSelected()) {
						productosSeleccionados.add(productoAux);				
					}
				}
				
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(Producto productoAux:this.productos) {
					if(productoAux.getIsSelected()) {
						productosSeleccionados.add(productoAux);				
					}
				}
			}
			
			if(productosSeleccionados.size()>0) {
				existe=true;
			}
			
			//SI NO ESTA NINGUNO SELECCIONADO SE SELECCIONA TODOS
			if(!existe) {
				if(conSeleccionarTodosAutomatico) {
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						productosSeleccionados.addAll(this.productoLogic.getProductos());
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						productosSeleccionados.addAll(this.productos);				
					}
				}
			}
		} else {
			productosSeleccionados.add(this.producto);
		}
		
		return productosSeleccionados;
	}
	
	public void actualizarVariablesTipoReporte(Boolean esReporteNormal,Boolean esReporteDinamico,Boolean esReporteAccionProceso,String sPath) {
		if(esReporteNormal) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=false;
			
		} else if(esReporteAccionProceso) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=true;
			
		} else if(esReporteDinamico) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=true;
			this.esReporteAccionProceso=false;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");			
		}
	}
	
	public void generarReporteProductosSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoReporte.equals("NORMAL") || this.sTipoReporte.equals("FORMULARIO")) {
			existe=true;								
			this.generarReporteNormalProductosSeleccionados();
			
		} else if(this.sTipoReporte.equals("DINAMICO")) {
			existe=true;
			this.mostrarReporteDinamicoProductosSeleccionados();
			
		} else if(this.sTipoReporte.equals("GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoProductosSeleccionados(false);
			
		} else if(this.sTipoReporte.equals("TOTALES_GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoProductosSeleccionados(true);
		}
		else if(this.sTipoReporte.equals("RELACIONES")) {
			//SI SE GENERA REPORTE RELACIONES
			existe=true;
			this.generarReporteRelacionesProductosSeleccionados();
		}					
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE REPORTE VALIDO","REPORTE DE Producto",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void generarReporteRelacionesProductosSeleccionados() throws Exception {
		ArrayList<Producto> productosSeleccionados=new ArrayList<Producto>();		
		
		productosSeleccionados=this.getProductosSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
					
		//this.sTipoReporteExtra="MasterRelaciones";
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		
		this.generarReporteProductos("Todos",productosSeleccionados);
		
	}	
	
	public void generarReporteNormalProductosSeleccionados() throws Exception {
		ArrayList<Producto> productosSeleccionados=new ArrayList<Producto>();		
		
		productosSeleccionados=this.getProductosSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
								
		if(this.sTipoReporte.equals("FORMULARIO")) {
			this.sTipoReporteExtra="Vertical";					
		}
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.generarReporteProductos("Todos",productosSeleccionados);
	}		
	
	public void generarReporteProcesoAccionProductosSeleccionados(String sProcesoReporte) throws Exception {
		ArrayList<Producto> productosSeleccionados=new ArrayList<Producto>();
		
		productosSeleccionados=this.getProductosSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(false,false,true,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.sTipoReporteExtra=sProcesoReporte.toLowerCase();
		
		this.esReporteAccionProceso=true;
		this.generarReporteProductos("Todos",productosSeleccionados);
		this.esReporteAccionProceso=false;
	}
	
	
	public void mostrarReporteDinamicoProductosSeleccionados() throws Exception {
		ArrayList<Producto> productosSeleccionados=new ArrayList<Producto>();		
		
		
		this.abrirInicializarFrameReporteDinamicoProducto();
		
		
		productosSeleccionados=this.getProductosSeleccionados(true);
		
		this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirFrameReporteDinamicoProducto();
		
		
		//this.generarReporteProductos("Todos",productosSeleccionados ,productoImplementable,productoImplementableHome);
	}
	
	public void mostrarImportacionProductos() throws Exception {
		//this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirInicializarFrameImportacionProducto();
		
		this.abrirFrameImportacionProducto();		
		
			
		//this.generarReporteProductos("Todos",productosSeleccionados ,productoImplementable,productoImplementableHome);
	}
	
	public void importarProductos() throws Exception {		
	
	}
	
	public void exportarProductosSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoArchivoReporte.equals("EXCEL")) {
			existe=true;
			this.exportarExcelProductosSeleccionados();
			
		} else if(this.sTipoArchivoReporte.equals("TEXTO")) {
			existe=true;
			this.exportarTextoProductosSeleccionados();
		
		} else if(this.sTipoArchivoReporte.equals("XML")) {
			existe=true;
			this.exportarXmlProductosSeleccionados();
		} 
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE ARCHIVO VALIDO","EXPORTACION DE Producto",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void exportarTextoProductosSeleccionados() throws Exception {
		ArrayList<Producto> productosSeleccionados=new ArrayList<Producto>();		
		
		productosSeleccionados=this.getProductosSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"producto."+"txt";//Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario);
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		BufferedWriter bufferedWriter = null;
		FileWriter fileWriter=null;
		
		fileWriter=new FileWriter(sPath);
		
		bufferedWriter = new BufferedWriter(fileWriter);
		
		try {
			if(conCabecera) {
				sFilaCabecera=this.getFilaCabeceraExportarProducto(sDelimiter);
				
				bufferedWriter.write(sFilaCabecera);
			}				
			
			for(Producto productoAux:productosSeleccionados) {
				sFilaDatos=this.getFilaDatosExportarProducto(productoAux,sDelimiter);
				
				bufferedWriter.write(sFilaDatos);
				
				//productoAux.setsDetalleGeneralEntityReporte(productoAux.toString());			
			}
			
			bufferedWriter.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.productoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Producto",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {
       		if (bufferedWriter != null) {
				bufferedWriter.close();
			}
		}
	}
	
	public String getFilaCabeceraExportarProducto(String sDelimiter) {
		String sFilaCabecera="";
		
		
		sFilaCabecera+=ProductoConstantesFunciones.LABEL_ID;

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoConstantesFunciones.LABEL_VERSIONROW;
		}

		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoConstantesFunciones.LABEL_IDEMPRESA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoConstantesFunciones.LABEL_IDSUCURSAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoConstantesFunciones.LABEL_CODIGO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoConstantesFunciones.LABEL_NOMBRE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoConstantesFunciones.LABEL_NOMBREEXTRANJERO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoConstantesFunciones.LABEL_RESUMENDETALLE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoConstantesFunciones.LABEL_CODIGOBARRA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoConstantesFunciones.LABEL_IDLINEA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoConstantesFunciones.LABEL_IDLINEAGRUPO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoConstantesFunciones.LABEL_IDLINEACATEGORIA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoConstantesFunciones.LABEL_IDLINEAMARCA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoConstantesFunciones.LABEL_IDTIPOPRODUCTOSERVICIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoConstantesFunciones.LABEL_IDTIPOPRODUCTOSERVICIOINVEN;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoConstantesFunciones.LABEL_IDTIPOCOSTEO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoConstantesFunciones.LABEL_IDUNIDAD;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoConstantesFunciones.LABEL_IDUNIDADPESO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoConstantesFunciones.LABEL_IDARANCEL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoConstantesFunciones.LABEL_IDCLIENTE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoConstantesFunciones.LABEL_IDCLIENTEPROVEEDORDEFECTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoConstantesFunciones.LABEL_ESTAACTIVO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoConstantesFunciones.LABEL_DESCRIPCION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoConstantesFunciones.LABEL_PRECIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoConstantesFunciones.LABEL_IVA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoConstantesFunciones.LABEL_IVAVALOR;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoConstantesFunciones.LABEL_ICE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoConstantesFunciones.LABEL_ICEVALOR;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoConstantesFunciones.LABEL_DESCUENTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoConstantesFunciones.LABEL_DESCUENTOVALOR;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoConstantesFunciones.LABEL_ARANCELPORCENTAJE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoConstantesFunciones.LABEL_ARANCELVALOR;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoConstantesFunciones.LABEL_COMISION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoConstantesFunciones.LABEL_COMISIONVALOR;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoConstantesFunciones.LABEL_DIASPRODUCCION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoConstantesFunciones.LABEL_CONSTOCKNEGATIVO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoConstantesFunciones.LABEL_CONPRECIOMINIMO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoConstantesFunciones.LABEL_CONLOTE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoConstantesFunciones.LABEL_CONCONFIRMACION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoConstantesFunciones.LABEL_CONPRESUPUESTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoConstantesFunciones.LABEL_CONIMPORTACION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoConstantesFunciones.LABEL_CONFINAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoConstantesFunciones.LABEL_CONCONSEP;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoConstantesFunciones.LABEL_CONSERIE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoConstantesFunciones.LABEL_CONBALANZA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoConstantesFunciones.LABEL_ALTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoConstantesFunciones.LABEL_ANCHO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoConstantesFunciones.LABEL_LARGO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoConstantesFunciones.LABEL_VOLUMEN;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoConstantesFunciones.LABEL_PESO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoConstantesFunciones.LABEL_GRAMOS;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoConstantesFunciones.LABEL_UNIDADESCAJA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoConstantesFunciones.LABEL_MARGEN;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoConstantesFunciones.LABEL_FACTOR;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoConstantesFunciones.LABEL_FOB;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoConstantesFunciones.LABEL_FOB2;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoConstantesFunciones.LABEL_IDTIPOPRODUCTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoConstantesFunciones.LABEL_IDCOLORPRODUCTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoConstantesFunciones.LABEL_IDCLASEPRODUCTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoConstantesFunciones.LABEL_IDEFECTOPRODUCTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoConstantesFunciones.LABEL_IDMARCAPRODUCTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoConstantesFunciones.LABEL_IDMODELOPRODUCTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoConstantesFunciones.LABEL_IDMATERIALPRODUCTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoConstantesFunciones.LABEL_IDSEGMENTOPRODUCTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoConstantesFunciones.LABEL_IDTALLAPRODUCTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoConstantesFunciones.LABEL_GRUPO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoConstantesFunciones.LABEL_REFERENCIA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoConstantesFunciones.LABEL_APLICACION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProductoConstantesFunciones.LABEL_PROCEDENCIA;
		
		return sFilaCabecera;
	}
	
	public String getFilaDatosExportarProducto(Producto producto,String sDelimiter) {
		String sFilaDatos="";
		
		sFilaDatos+="\r\n";
		
		
		sFilaDatos+=producto.getId().toString();

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaDatos+=sDelimiter;
		sFilaDatos+=producto.getVersionRow().toString();
		}

		sFilaDatos+=sDelimiter;
		sFilaDatos+=producto.getempresa_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=producto.getsucursal_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=producto.getcodigo();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=producto.getnombre();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=producto.getnombre_extranjero();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=producto.getresumen_detalle();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=producto.getcodigo_barra();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=producto.getlinea_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=producto.getlineagrupo_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=producto.getlineacategoria_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=producto.getlineamarca_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=producto.gettipoproductoservicio_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=producto.gettipoproductoservicioinven_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=producto.gettipocosteo_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=producto.getunidad_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=producto.getunidadpeso_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=producto.getarancel_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=producto.getcliente_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=producto.getclienteproveedordefecto_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=producto.getesta_activo().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=producto.getdescripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=producto.getprecio().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=producto.getiva().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=producto.getiva_valor().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=producto.getice().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=producto.getice_valor().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=producto.getdescuento().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=producto.getdescuento_valor().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=producto.getarancel_porcentaje().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=producto.getarancel_valor().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=producto.getcomision().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=producto.getcomision_valor().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=producto.getdias_produccion().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=producto.getcon_stock_negativo().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=producto.getcon_precio_minimo().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=producto.getcon_lote().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=producto.getcon_confirmacion().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=producto.getcon_presupuesto().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=producto.getcon_importacion().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=producto.getcon_final().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=producto.getcon_consep().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=producto.getcon_serie().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=producto.getcon_balanza().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=producto.getalto().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=producto.getancho().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=producto.getlargo().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=producto.getvolumen().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=producto.getpeso().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=producto.getgramos().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=producto.getunidades_caja().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=producto.getmargen().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=producto.getfactor().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=producto.getfob().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=producto.getfob2().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=producto.gettipoproducto_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=producto.getcolorproducto_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=producto.getclaseproducto_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=producto.getefectoproducto_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=producto.getmarcaproducto_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=producto.getmodeloproducto_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=producto.getmaterialproducto_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=producto.getsegmentoproducto_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=producto.gettallaproducto_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=producto.getgrupo();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=producto.getreferencia();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=producto.getaplicacion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=producto.getprocedencia();
		
		return sFilaDatos;
	}
	
	//@SuppressWarnings("deprecation")
	public void exportarExcelProductosSeleccionados() throws Exception {
		ArrayList<Producto> productosSeleccionados=new ArrayList<Producto>();		
		
		productosSeleccionados=this.getProductosSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"producto.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		FileOutputStream fileOutputStream=null;
		
		try {
			HSSFWorkbook workbook = new HSSFWorkbook();
			HSSFSheet sheet = workbook.createSheet("Productos");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			HSSFRow row = sheet.createRow(iRow);
			HSSFCell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");

			if(conCabecera) {
				this.getFilaCabeceraExportarExcelProducto(row);				
				iRow++;
			}				
			
			for(Producto productoAux:productosSeleccionados) {
				row = sheet.createRow(iRow);
				
				this.getFilaDatosExportarExcelProducto(productoAux,row);
				
				iRow++;
			}
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.productoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Producto",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}
	}		
	
	public void exportarXmlProductosSeleccionados() throws Exception {
		ArrayList<Producto> productosSeleccionados=new ArrayList<Producto>();		
		
		productosSeleccionados=this.getProductosSeleccionados(true);
		
		//String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		//Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		//String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"producto.xml";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		DocumentBuilderFactory documentBuilderFactory=null;
		DocumentBuilder documentBuilder =null;
		
		try {
			documentBuilderFactory = DocumentBuilderFactory.newInstance();
			documentBuilder = documentBuilderFactory.newDocumentBuilder();
	
			Document document = documentBuilder.newDocument();
			Element elementRoot = document.createElement("productos");
			
			document.appendChild(elementRoot);
		    			
												
			Element element = null;//document.createElement("producto");
			//elementRoot.appendChild(element);
		
			for(Producto productoAux:productosSeleccionados) {
				element = document.createElement("producto");
				elementRoot.appendChild(element);
			
				this.setFilaDatosExportarXmlProducto(productoAux,document,element);
			}
			
			TransformerFactory transformerFactory = TransformerFactory.newInstance();
			Transformer transformer = transformerFactory.newTransformer();
			DOMSource domSource = new DOMSource(document);
			
			StreamResult streamResult = new StreamResult(new File(sPath));
	
			transformer.transform(domSource, streamResult);
						
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.productoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Producto",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			       				
		}
	}	
	
	//@SuppressWarnings("deprecation")
	public void getFilaCabeceraExportarExcelProducto(HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoConstantesFunciones.LABEL_ID);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoConstantesFunciones.LABEL_VERSIONROW);
		}

		cell = row.createCell(iColumn++);cell.setCellValue(ProductoConstantesFunciones.LABEL_IDEMPRESA);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoConstantesFunciones.LABEL_IDSUCURSAL);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoConstantesFunciones.LABEL_CODIGO);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoConstantesFunciones.LABEL_NOMBRE);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoConstantesFunciones.LABEL_NOMBREEXTRANJERO);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoConstantesFunciones.LABEL_RESUMENDETALLE);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoConstantesFunciones.LABEL_CODIGOBARRA);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoConstantesFunciones.LABEL_IDLINEA);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoConstantesFunciones.LABEL_IDLINEAGRUPO);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoConstantesFunciones.LABEL_IDLINEACATEGORIA);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoConstantesFunciones.LABEL_IDLINEAMARCA);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoConstantesFunciones.LABEL_IDTIPOPRODUCTOSERVICIO);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoConstantesFunciones.LABEL_IDTIPOPRODUCTOSERVICIOINVEN);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoConstantesFunciones.LABEL_IDTIPOCOSTEO);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoConstantesFunciones.LABEL_IDUNIDAD);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoConstantesFunciones.LABEL_IDUNIDADPESO);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoConstantesFunciones.LABEL_IDARANCEL);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoConstantesFunciones.LABEL_IDCLIENTE);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoConstantesFunciones.LABEL_IDCLIENTEPROVEEDORDEFECTO);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoConstantesFunciones.LABEL_ESTAACTIVO);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoConstantesFunciones.LABEL_DESCRIPCION);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoConstantesFunciones.LABEL_PRECIO);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoConstantesFunciones.LABEL_IVA);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoConstantesFunciones.LABEL_IVAVALOR);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoConstantesFunciones.LABEL_ICE);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoConstantesFunciones.LABEL_ICEVALOR);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoConstantesFunciones.LABEL_DESCUENTO);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoConstantesFunciones.LABEL_DESCUENTOVALOR);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoConstantesFunciones.LABEL_ARANCELPORCENTAJE);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoConstantesFunciones.LABEL_ARANCELVALOR);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoConstantesFunciones.LABEL_COMISION);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoConstantesFunciones.LABEL_COMISIONVALOR);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoConstantesFunciones.LABEL_DIASPRODUCCION);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoConstantesFunciones.LABEL_CONSTOCKNEGATIVO);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoConstantesFunciones.LABEL_CONPRECIOMINIMO);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoConstantesFunciones.LABEL_CONLOTE);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoConstantesFunciones.LABEL_CONCONFIRMACION);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoConstantesFunciones.LABEL_CONPRESUPUESTO);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoConstantesFunciones.LABEL_CONIMPORTACION);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoConstantesFunciones.LABEL_CONFINAL);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoConstantesFunciones.LABEL_CONCONSEP);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoConstantesFunciones.LABEL_CONSERIE);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoConstantesFunciones.LABEL_CONBALANZA);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoConstantesFunciones.LABEL_ALTO);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoConstantesFunciones.LABEL_ANCHO);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoConstantesFunciones.LABEL_LARGO);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoConstantesFunciones.LABEL_VOLUMEN);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoConstantesFunciones.LABEL_PESO);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoConstantesFunciones.LABEL_GRAMOS);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoConstantesFunciones.LABEL_UNIDADESCAJA);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoConstantesFunciones.LABEL_MARGEN);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoConstantesFunciones.LABEL_FACTOR);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoConstantesFunciones.LABEL_FOB);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoConstantesFunciones.LABEL_FOB2);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoConstantesFunciones.LABEL_IDTIPOPRODUCTO);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoConstantesFunciones.LABEL_IDCOLORPRODUCTO);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoConstantesFunciones.LABEL_IDCLASEPRODUCTO);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoConstantesFunciones.LABEL_IDEFECTOPRODUCTO);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoConstantesFunciones.LABEL_IDMARCAPRODUCTO);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoConstantesFunciones.LABEL_IDMODELOPRODUCTO);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoConstantesFunciones.LABEL_IDMATERIALPRODUCTO);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoConstantesFunciones.LABEL_IDSEGMENTOPRODUCTO);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoConstantesFunciones.LABEL_IDTALLAPRODUCTO);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoConstantesFunciones.LABEL_GRUPO);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoConstantesFunciones.LABEL_REFERENCIA);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoConstantesFunciones.LABEL_APLICACION);
		cell = row.createCell(iColumn++);cell.setCellValue(ProductoConstantesFunciones.LABEL_PROCEDENCIA);
	}
	
	//@SuppressWarnings("deprecation")
	public void getFilaDatosExportarExcelProducto(Producto producto,HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(producto.getId());
		cell = row.createCell(iColumn++);cell.setCellValue(producto.getempresa_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(producto.getsucursal_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(producto.getcodigo());
		cell = row.createCell(iColumn++);cell.setCellValue(producto.getnombre());
		cell = row.createCell(iColumn++);cell.setCellValue(producto.getnombre_extranjero());
		cell = row.createCell(iColumn++);cell.setCellValue(producto.getresumen_detalle());
		cell = row.createCell(iColumn++);cell.setCellValue(producto.getcodigo_barra());
		cell = row.createCell(iColumn++);cell.setCellValue(producto.getlinea_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(producto.getlineagrupo_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(producto.getlineacategoria_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(producto.getlineamarca_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(producto.gettipoproductoservicio_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(producto.gettipoproductoservicioinven_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(producto.gettipocosteo_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(producto.getunidad_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(producto.getunidadpeso_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(producto.getarancel_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(producto.getcliente_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(producto.getclienteproveedordefecto_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(producto.getesta_activo());
		cell = row.createCell(iColumn++);cell.setCellValue(producto.getdescripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(producto.getprecio());
		cell = row.createCell(iColumn++);cell.setCellValue(producto.getiva());
		cell = row.createCell(iColumn++);cell.setCellValue(producto.getiva_valor());
		cell = row.createCell(iColumn++);cell.setCellValue(producto.getice());
		cell = row.createCell(iColumn++);cell.setCellValue(producto.getice_valor());
		cell = row.createCell(iColumn++);cell.setCellValue(producto.getdescuento());
		cell = row.createCell(iColumn++);cell.setCellValue(producto.getdescuento_valor());
		cell = row.createCell(iColumn++);cell.setCellValue(producto.getarancel_porcentaje());
		cell = row.createCell(iColumn++);cell.setCellValue(producto.getarancel_valor());
		cell = row.createCell(iColumn++);cell.setCellValue(producto.getcomision());
		cell = row.createCell(iColumn++);cell.setCellValue(producto.getcomision_valor());
		cell = row.createCell(iColumn++);cell.setCellValue(producto.getdias_produccion());
		cell = row.createCell(iColumn++);cell.setCellValue(producto.getcon_stock_negativo());
		cell = row.createCell(iColumn++);cell.setCellValue(producto.getcon_precio_minimo());
		cell = row.createCell(iColumn++);cell.setCellValue(producto.getcon_lote());
		cell = row.createCell(iColumn++);cell.setCellValue(producto.getcon_confirmacion());
		cell = row.createCell(iColumn++);cell.setCellValue(producto.getcon_presupuesto());
		cell = row.createCell(iColumn++);cell.setCellValue(producto.getcon_importacion());
		cell = row.createCell(iColumn++);cell.setCellValue(producto.getcon_final());
		cell = row.createCell(iColumn++);cell.setCellValue(producto.getcon_consep());
		cell = row.createCell(iColumn++);cell.setCellValue(producto.getcon_serie());
		cell = row.createCell(iColumn++);cell.setCellValue(producto.getcon_balanza());
		cell = row.createCell(iColumn++);cell.setCellValue(producto.getalto());
		cell = row.createCell(iColumn++);cell.setCellValue(producto.getancho());
		cell = row.createCell(iColumn++);cell.setCellValue(producto.getlargo());
		cell = row.createCell(iColumn++);cell.setCellValue(producto.getvolumen());
		cell = row.createCell(iColumn++);cell.setCellValue(producto.getpeso());
		cell = row.createCell(iColumn++);cell.setCellValue(producto.getgramos());
		cell = row.createCell(iColumn++);cell.setCellValue(producto.getunidades_caja());
		cell = row.createCell(iColumn++);cell.setCellValue(producto.getmargen());
		cell = row.createCell(iColumn++);cell.setCellValue(producto.getfactor());
		cell = row.createCell(iColumn++);cell.setCellValue(producto.getfob());
		cell = row.createCell(iColumn++);cell.setCellValue(producto.getfob2());
		cell = row.createCell(iColumn++);cell.setCellValue(producto.gettipoproducto_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(producto.getcolorproducto_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(producto.getclaseproducto_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(producto.getefectoproducto_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(producto.getmarcaproducto_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(producto.getmodeloproducto_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(producto.getmaterialproducto_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(producto.getsegmentoproducto_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(producto.gettallaproducto_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(producto.getgrupo());
		cell = row.createCell(iColumn++);cell.setCellValue(producto.getreferencia());
		cell = row.createCell(iColumn++);cell.setCellValue(producto.getaplicacion());
		cell = row.createCell(iColumn++);cell.setCellValue(producto.getprocedencia());				
	}
	
	public void setFilaDatosExportarXmlProducto(Producto producto,Document document,Element element) {
		/*
		Element lastname = document.createElement("lastname");
		lastname.appendChild(document.createTextNode("mook kim"));
		element.appendChild(lastname);
		*/
		

		Element elementId = document.createElement(ProductoConstantesFunciones.ID);
		elementId.appendChild(document.createTextNode(producto.getId().toString().trim()));
		element.appendChild(elementId);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){

		Element elementVersionRow = document.createElement(ProductoConstantesFunciones.VERSIONROW);
		elementVersionRow.appendChild(document.createTextNode(producto.getVersionRow().toString().trim()));
		element.appendChild(elementVersionRow);
		}


		Element elementempresa_descripcion = document.createElement(ProductoConstantesFunciones.IDEMPRESA);
		elementempresa_descripcion.appendChild(document.createTextNode(producto.getempresa_descripcion()));
		element.appendChild(elementempresa_descripcion);

		Element elementsucursal_descripcion = document.createElement(ProductoConstantesFunciones.IDSUCURSAL);
		elementsucursal_descripcion.appendChild(document.createTextNode(producto.getsucursal_descripcion()));
		element.appendChild(elementsucursal_descripcion);

		Element elementcodigo = document.createElement(ProductoConstantesFunciones.CODIGO);
		elementcodigo.appendChild(document.createTextNode(producto.getcodigo().trim()));
		element.appendChild(elementcodigo);

		Element elementnombre = document.createElement(ProductoConstantesFunciones.NOMBRE);
		elementnombre.appendChild(document.createTextNode(producto.getnombre().trim()));
		element.appendChild(elementnombre);

		Element elementnombre_extranjero = document.createElement(ProductoConstantesFunciones.NOMBREEXTRANJERO);
		elementnombre_extranjero.appendChild(document.createTextNode(producto.getnombre_extranjero().trim()));
		element.appendChild(elementnombre_extranjero);

		Element elementresumen_detalle = document.createElement(ProductoConstantesFunciones.RESUMENDETALLE);
		elementresumen_detalle.appendChild(document.createTextNode(producto.getresumen_detalle().trim()));
		element.appendChild(elementresumen_detalle);

		Element elementcodigo_barra = document.createElement(ProductoConstantesFunciones.CODIGOBARRA);
		elementcodigo_barra.appendChild(document.createTextNode(producto.getcodigo_barra().trim()));
		element.appendChild(elementcodigo_barra);

		Element elementlinea_descripcion = document.createElement(ProductoConstantesFunciones.IDLINEA);
		elementlinea_descripcion.appendChild(document.createTextNode(producto.getlinea_descripcion()));
		element.appendChild(elementlinea_descripcion);

		Element elementlineagrupo_descripcion = document.createElement(ProductoConstantesFunciones.IDLINEAGRUPO);
		elementlineagrupo_descripcion.appendChild(document.createTextNode(producto.getlineagrupo_descripcion()));
		element.appendChild(elementlineagrupo_descripcion);

		Element elementlineacategoria_descripcion = document.createElement(ProductoConstantesFunciones.IDLINEACATEGORIA);
		elementlineacategoria_descripcion.appendChild(document.createTextNode(producto.getlineacategoria_descripcion()));
		element.appendChild(elementlineacategoria_descripcion);

		Element elementlineamarca_descripcion = document.createElement(ProductoConstantesFunciones.IDLINEAMARCA);
		elementlineamarca_descripcion.appendChild(document.createTextNode(producto.getlineamarca_descripcion()));
		element.appendChild(elementlineamarca_descripcion);

		Element elementtipoproductoservicio_descripcion = document.createElement(ProductoConstantesFunciones.IDTIPOPRODUCTOSERVICIO);
		elementtipoproductoservicio_descripcion.appendChild(document.createTextNode(producto.gettipoproductoservicio_descripcion()));
		element.appendChild(elementtipoproductoservicio_descripcion);

		Element elementtipoproductoservicioinven_descripcion = document.createElement(ProductoConstantesFunciones.IDTIPOPRODUCTOSERVICIOINVEN);
		elementtipoproductoservicioinven_descripcion.appendChild(document.createTextNode(producto.gettipoproductoservicioinven_descripcion()));
		element.appendChild(elementtipoproductoservicioinven_descripcion);

		Element elementtipocosteo_descripcion = document.createElement(ProductoConstantesFunciones.IDTIPOCOSTEO);
		elementtipocosteo_descripcion.appendChild(document.createTextNode(producto.gettipocosteo_descripcion()));
		element.appendChild(elementtipocosteo_descripcion);

		Element elementunidad_descripcion = document.createElement(ProductoConstantesFunciones.IDUNIDAD);
		elementunidad_descripcion.appendChild(document.createTextNode(producto.getunidad_descripcion()));
		element.appendChild(elementunidad_descripcion);

		Element elementunidadpeso_descripcion = document.createElement(ProductoConstantesFunciones.IDUNIDADPESO);
		elementunidadpeso_descripcion.appendChild(document.createTextNode(producto.getunidadpeso_descripcion()));
		element.appendChild(elementunidadpeso_descripcion);

		Element elementarancel_descripcion = document.createElement(ProductoConstantesFunciones.IDARANCEL);
		elementarancel_descripcion.appendChild(document.createTextNode(producto.getarancel_descripcion()));
		element.appendChild(elementarancel_descripcion);

		Element elementcliente_descripcion = document.createElement(ProductoConstantesFunciones.IDCLIENTE);
		elementcliente_descripcion.appendChild(document.createTextNode(producto.getcliente_descripcion()));
		element.appendChild(elementcliente_descripcion);

		Element elementclienteproveedordefecto_descripcion = document.createElement(ProductoConstantesFunciones.IDCLIENTEPROVEEDORDEFECTO);
		elementclienteproveedordefecto_descripcion.appendChild(document.createTextNode(producto.getclienteproveedordefecto_descripcion()));
		element.appendChild(elementclienteproveedordefecto_descripcion);

		Element elementesta_activo = document.createElement(ProductoConstantesFunciones.ESTAACTIVO);
		elementesta_activo.appendChild(document.createTextNode(producto.getesta_activo().toString().trim()));
		element.appendChild(elementesta_activo);

		Element elementdescripcion = document.createElement(ProductoConstantesFunciones.DESCRIPCION);
		elementdescripcion.appendChild(document.createTextNode(producto.getdescripcion().trim()));
		element.appendChild(elementdescripcion);

		Element elementprecio = document.createElement(ProductoConstantesFunciones.PRECIO);
		elementprecio.appendChild(document.createTextNode(producto.getprecio().toString().trim()));
		element.appendChild(elementprecio);

		Element elementiva = document.createElement(ProductoConstantesFunciones.IVA);
		elementiva.appendChild(document.createTextNode(producto.getiva().toString().trim()));
		element.appendChild(elementiva);

		Element elementiva_valor = document.createElement(ProductoConstantesFunciones.IVAVALOR);
		elementiva_valor.appendChild(document.createTextNode(producto.getiva_valor().toString().trim()));
		element.appendChild(elementiva_valor);

		Element elementice = document.createElement(ProductoConstantesFunciones.ICE);
		elementice.appendChild(document.createTextNode(producto.getice().toString().trim()));
		element.appendChild(elementice);

		Element elementice_valor = document.createElement(ProductoConstantesFunciones.ICEVALOR);
		elementice_valor.appendChild(document.createTextNode(producto.getice_valor().toString().trim()));
		element.appendChild(elementice_valor);

		Element elementdescuento = document.createElement(ProductoConstantesFunciones.DESCUENTO);
		elementdescuento.appendChild(document.createTextNode(producto.getdescuento().toString().trim()));
		element.appendChild(elementdescuento);

		Element elementdescuento_valor = document.createElement(ProductoConstantesFunciones.DESCUENTOVALOR);
		elementdescuento_valor.appendChild(document.createTextNode(producto.getdescuento_valor().toString().trim()));
		element.appendChild(elementdescuento_valor);

		Element elementarancel_porcentaje = document.createElement(ProductoConstantesFunciones.ARANCELPORCENTAJE);
		elementarancel_porcentaje.appendChild(document.createTextNode(producto.getarancel_porcentaje().toString().trim()));
		element.appendChild(elementarancel_porcentaje);

		Element elementarancel_valor = document.createElement(ProductoConstantesFunciones.ARANCELVALOR);
		elementarancel_valor.appendChild(document.createTextNode(producto.getarancel_valor().toString().trim()));
		element.appendChild(elementarancel_valor);

		Element elementcomision = document.createElement(ProductoConstantesFunciones.COMISION);
		elementcomision.appendChild(document.createTextNode(producto.getcomision().toString().trim()));
		element.appendChild(elementcomision);

		Element elementcomision_valor = document.createElement(ProductoConstantesFunciones.COMISIONVALOR);
		elementcomision_valor.appendChild(document.createTextNode(producto.getcomision_valor().toString().trim()));
		element.appendChild(elementcomision_valor);

		Element elementdias_produccion = document.createElement(ProductoConstantesFunciones.DIASPRODUCCION);
		elementdias_produccion.appendChild(document.createTextNode(producto.getdias_produccion().toString().trim()));
		element.appendChild(elementdias_produccion);

		Element elementcon_stock_negativo = document.createElement(ProductoConstantesFunciones.CONSTOCKNEGATIVO);
		elementcon_stock_negativo.appendChild(document.createTextNode(producto.getcon_stock_negativo().toString().trim()));
		element.appendChild(elementcon_stock_negativo);

		Element elementcon_precio_minimo = document.createElement(ProductoConstantesFunciones.CONPRECIOMINIMO);
		elementcon_precio_minimo.appendChild(document.createTextNode(producto.getcon_precio_minimo().toString().trim()));
		element.appendChild(elementcon_precio_minimo);

		Element elementcon_lote = document.createElement(ProductoConstantesFunciones.CONLOTE);
		elementcon_lote.appendChild(document.createTextNode(producto.getcon_lote().toString().trim()));
		element.appendChild(elementcon_lote);

		Element elementcon_confirmacion = document.createElement(ProductoConstantesFunciones.CONCONFIRMACION);
		elementcon_confirmacion.appendChild(document.createTextNode(producto.getcon_confirmacion().toString().trim()));
		element.appendChild(elementcon_confirmacion);

		Element elementcon_presupuesto = document.createElement(ProductoConstantesFunciones.CONPRESUPUESTO);
		elementcon_presupuesto.appendChild(document.createTextNode(producto.getcon_presupuesto().toString().trim()));
		element.appendChild(elementcon_presupuesto);

		Element elementcon_importacion = document.createElement(ProductoConstantesFunciones.CONIMPORTACION);
		elementcon_importacion.appendChild(document.createTextNode(producto.getcon_importacion().toString().trim()));
		element.appendChild(elementcon_importacion);

		Element elementcon_final = document.createElement(ProductoConstantesFunciones.CONFINAL);
		elementcon_final.appendChild(document.createTextNode(producto.getcon_final().toString().trim()));
		element.appendChild(elementcon_final);

		Element elementcon_consep = document.createElement(ProductoConstantesFunciones.CONCONSEP);
		elementcon_consep.appendChild(document.createTextNode(producto.getcon_consep().toString().trim()));
		element.appendChild(elementcon_consep);

		Element elementcon_serie = document.createElement(ProductoConstantesFunciones.CONSERIE);
		elementcon_serie.appendChild(document.createTextNode(producto.getcon_serie().toString().trim()));
		element.appendChild(elementcon_serie);

		Element elementcon_balanza = document.createElement(ProductoConstantesFunciones.CONBALANZA);
		elementcon_balanza.appendChild(document.createTextNode(producto.getcon_balanza().toString().trim()));
		element.appendChild(elementcon_balanza);

		Element elementalto = document.createElement(ProductoConstantesFunciones.ALTO);
		elementalto.appendChild(document.createTextNode(producto.getalto().toString().trim()));
		element.appendChild(elementalto);

		Element elementancho = document.createElement(ProductoConstantesFunciones.ANCHO);
		elementancho.appendChild(document.createTextNode(producto.getancho().toString().trim()));
		element.appendChild(elementancho);

		Element elementlargo = document.createElement(ProductoConstantesFunciones.LARGO);
		elementlargo.appendChild(document.createTextNode(producto.getlargo().toString().trim()));
		element.appendChild(elementlargo);

		Element elementvolumen = document.createElement(ProductoConstantesFunciones.VOLUMEN);
		elementvolumen.appendChild(document.createTextNode(producto.getvolumen().toString().trim()));
		element.appendChild(elementvolumen);

		Element elementpeso = document.createElement(ProductoConstantesFunciones.PESO);
		elementpeso.appendChild(document.createTextNode(producto.getpeso().toString().trim()));
		element.appendChild(elementpeso);

		Element elementgramos = document.createElement(ProductoConstantesFunciones.GRAMOS);
		elementgramos.appendChild(document.createTextNode(producto.getgramos().toString().trim()));
		element.appendChild(elementgramos);

		Element elementunidades_caja = document.createElement(ProductoConstantesFunciones.UNIDADESCAJA);
		elementunidades_caja.appendChild(document.createTextNode(producto.getunidades_caja().toString().trim()));
		element.appendChild(elementunidades_caja);

		Element elementmargen = document.createElement(ProductoConstantesFunciones.MARGEN);
		elementmargen.appendChild(document.createTextNode(producto.getmargen().toString().trim()));
		element.appendChild(elementmargen);

		Element elementfactor = document.createElement(ProductoConstantesFunciones.FACTOR);
		elementfactor.appendChild(document.createTextNode(producto.getfactor().toString().trim()));
		element.appendChild(elementfactor);

		Element elementfob = document.createElement(ProductoConstantesFunciones.FOB);
		elementfob.appendChild(document.createTextNode(producto.getfob().toString().trim()));
		element.appendChild(elementfob);

		Element elementfob2 = document.createElement(ProductoConstantesFunciones.FOB2);
		elementfob2.appendChild(document.createTextNode(producto.getfob2().toString().trim()));
		element.appendChild(elementfob2);

		Element elementtipoproducto_descripcion = document.createElement(ProductoConstantesFunciones.IDTIPOPRODUCTO);
		elementtipoproducto_descripcion.appendChild(document.createTextNode(producto.gettipoproducto_descripcion()));
		element.appendChild(elementtipoproducto_descripcion);

		Element elementcolorproducto_descripcion = document.createElement(ProductoConstantesFunciones.IDCOLORPRODUCTO);
		elementcolorproducto_descripcion.appendChild(document.createTextNode(producto.getcolorproducto_descripcion()));
		element.appendChild(elementcolorproducto_descripcion);

		Element elementclaseproducto_descripcion = document.createElement(ProductoConstantesFunciones.IDCLASEPRODUCTO);
		elementclaseproducto_descripcion.appendChild(document.createTextNode(producto.getclaseproducto_descripcion()));
		element.appendChild(elementclaseproducto_descripcion);

		Element elementefectoproducto_descripcion = document.createElement(ProductoConstantesFunciones.IDEFECTOPRODUCTO);
		elementefectoproducto_descripcion.appendChild(document.createTextNode(producto.getefectoproducto_descripcion()));
		element.appendChild(elementefectoproducto_descripcion);

		Element elementmarcaproducto_descripcion = document.createElement(ProductoConstantesFunciones.IDMARCAPRODUCTO);
		elementmarcaproducto_descripcion.appendChild(document.createTextNode(producto.getmarcaproducto_descripcion()));
		element.appendChild(elementmarcaproducto_descripcion);

		Element elementmodeloproducto_descripcion = document.createElement(ProductoConstantesFunciones.IDMODELOPRODUCTO);
		elementmodeloproducto_descripcion.appendChild(document.createTextNode(producto.getmodeloproducto_descripcion()));
		element.appendChild(elementmodeloproducto_descripcion);

		Element elementmaterialproducto_descripcion = document.createElement(ProductoConstantesFunciones.IDMATERIALPRODUCTO);
		elementmaterialproducto_descripcion.appendChild(document.createTextNode(producto.getmaterialproducto_descripcion()));
		element.appendChild(elementmaterialproducto_descripcion);

		Element elementsegmentoproducto_descripcion = document.createElement(ProductoConstantesFunciones.IDSEGMENTOPRODUCTO);
		elementsegmentoproducto_descripcion.appendChild(document.createTextNode(producto.getsegmentoproducto_descripcion()));
		element.appendChild(elementsegmentoproducto_descripcion);

		Element elementtallaproducto_descripcion = document.createElement(ProductoConstantesFunciones.IDTALLAPRODUCTO);
		elementtallaproducto_descripcion.appendChild(document.createTextNode(producto.gettallaproducto_descripcion()));
		element.appendChild(elementtallaproducto_descripcion);

		Element elementgrupo = document.createElement(ProductoConstantesFunciones.GRUPO);
		elementgrupo.appendChild(document.createTextNode(producto.getgrupo().trim()));
		element.appendChild(elementgrupo);

		Element elementreferencia = document.createElement(ProductoConstantesFunciones.REFERENCIA);
		elementreferencia.appendChild(document.createTextNode(producto.getreferencia().trim()));
		element.appendChild(elementreferencia);

		Element elementaplicacion = document.createElement(ProductoConstantesFunciones.APLICACION);
		elementaplicacion.appendChild(document.createTextNode(producto.getaplicacion().trim()));
		element.appendChild(elementaplicacion);

		Element elementprocedencia = document.createElement(ProductoConstantesFunciones.PROCEDENCIA);
		elementprocedencia.appendChild(document.createTextNode(producto.getprocedencia().trim()));
		element.appendChild(elementprocedencia);
	}
	
	public void generarReporteGroupGenericoProductosSeleccionados(Boolean soloTotales) throws Exception {
		ArrayList<Producto> productosSeleccionados=new ArrayList<Producto>();
		
		productosSeleccionados=this.getProductosSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!soloTotales) {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_GENERICO;
		} else {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_TOTALES_GENERICO;
		}
		
		this.setColumnaDescripcionReporteGroupGenericoProducto(productosSeleccionados);
		
		this.generarReporteProductos("Todos",productosSeleccionados);
	}
	
	public void setColumnaDescripcionReporteGroupGenericoProducto(ArrayList<Producto> productosSeleccionados) throws Exception {    		
		try {
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			
			Boolean existe=false;
			
			for(Producto productoAux:productosSeleccionados) {
				productoAux.setsDetalleGeneralEntityReporte(productoAux.toString());
			
				if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_IDEMPRESA)) {
					existe=true;
					productoAux.setsDescripcionGeneralEntityReporte1(productoAux.getempresa_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_IDSUCURSAL)) {
					existe=true;
					productoAux.setsDescripcionGeneralEntityReporte1(productoAux.getsucursal_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_CODIGO)) {
					existe=true;
					productoAux.setsDescripcionGeneralEntityReporte1(productoAux.getcodigo());
				}
				 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_NOMBRE)) {
					existe=true;
					productoAux.setsDescripcionGeneralEntityReporte1(productoAux.getnombre());
				}
				 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_NOMBREEXTRANJERO)) {
					existe=true;
					productoAux.setsDescripcionGeneralEntityReporte1(productoAux.getnombre_extranjero());
				}
				 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_RESUMENDETALLE)) {
					existe=true;
					productoAux.setsDescripcionGeneralEntityReporte1(productoAux.getresumen_detalle());
				}
				 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_CODIGOBARRA)) {
					existe=true;
					productoAux.setsDescripcionGeneralEntityReporte1(productoAux.getcodigo_barra());
				}
				 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_IDLINEA)) {
					existe=true;
					productoAux.setsDescripcionGeneralEntityReporte1(productoAux.getlinea_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_IDLINEAGRUPO)) {
					existe=true;
					productoAux.setsDescripcionGeneralEntityReporte1(productoAux.getlineagrupo_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_IDLINEACATEGORIA)) {
					existe=true;
					productoAux.setsDescripcionGeneralEntityReporte1(productoAux.getlineacategoria_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_IDLINEAMARCA)) {
					existe=true;
					productoAux.setsDescripcionGeneralEntityReporte1(productoAux.getlineamarca_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_IDTIPOPRODUCTOSERVICIO)) {
					existe=true;
					productoAux.setsDescripcionGeneralEntityReporte1(productoAux.gettipoproductoservicio_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_IDTIPOPRODUCTOSERVICIOINVEN)) {
					existe=true;
					productoAux.setsDescripcionGeneralEntityReporte1(productoAux.gettipoproductoservicioinven_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_IDTIPOCOSTEO)) {
					existe=true;
					productoAux.setsDescripcionGeneralEntityReporte1(productoAux.gettipocosteo_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_IDUNIDAD)) {
					existe=true;
					productoAux.setsDescripcionGeneralEntityReporte1(productoAux.getunidad_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_IDUNIDADPESO)) {
					existe=true;
					productoAux.setsDescripcionGeneralEntityReporte1(productoAux.getunidadpeso_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_IDARANCEL)) {
					existe=true;
					productoAux.setsDescripcionGeneralEntityReporte1(productoAux.getarancel_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_IDCLIENTE)) {
					existe=true;
					productoAux.setsDescripcionGeneralEntityReporte1(productoAux.getcliente_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_IDCLIENTEPROVEEDORDEFECTO)) {
					existe=true;
					productoAux.setsDescripcionGeneralEntityReporte1(productoAux.getclienteproveedordefecto_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_ESTAACTIVO)) {
					existe=true;
					productoAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(productoAux.getesta_activo()));
				}
				 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_DESCRIPCION)) {
					existe=true;
					productoAux.setsDescripcionGeneralEntityReporte1(productoAux.getdescripcion());
				}
				 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_CONSTOCKNEGATIVO)) {
					existe=true;
					productoAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(productoAux.getcon_stock_negativo()));
				}
				 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_CONPRECIOMINIMO)) {
					existe=true;
					productoAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(productoAux.getcon_precio_minimo()));
				}
				 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_CONLOTE)) {
					existe=true;
					productoAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(productoAux.getcon_lote()));
				}
				 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_CONCONFIRMACION)) {
					existe=true;
					productoAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(productoAux.getcon_confirmacion()));
				}
				 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_CONPRESUPUESTO)) {
					existe=true;
					productoAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(productoAux.getcon_presupuesto()));
				}
				 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_CONIMPORTACION)) {
					existe=true;
					productoAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(productoAux.getcon_importacion()));
				}
				 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_CONFINAL)) {
					existe=true;
					productoAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(productoAux.getcon_final()));
				}
				 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_CONCONSEP)) {
					existe=true;
					productoAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(productoAux.getcon_consep()));
				}
				 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_CONSERIE)) {
					existe=true;
					productoAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(productoAux.getcon_serie()));
				}
				 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_CONBALANZA)) {
					existe=true;
					productoAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(productoAux.getcon_balanza()));
				}
				 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_IDTIPOPRODUCTO)) {
					existe=true;
					productoAux.setsDescripcionGeneralEntityReporte1(productoAux.gettipoproducto_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_IDCOLORPRODUCTO)) {
					existe=true;
					productoAux.setsDescripcionGeneralEntityReporte1(productoAux.getcolorproducto_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_IDCLASEPRODUCTO)) {
					existe=true;
					productoAux.setsDescripcionGeneralEntityReporte1(productoAux.getclaseproducto_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_IDEFECTOPRODUCTO)) {
					existe=true;
					productoAux.setsDescripcionGeneralEntityReporte1(productoAux.getefectoproducto_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_IDMARCAPRODUCTO)) {
					existe=true;
					productoAux.setsDescripcionGeneralEntityReporte1(productoAux.getmarcaproducto_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_IDMODELOPRODUCTO)) {
					existe=true;
					productoAux.setsDescripcionGeneralEntityReporte1(productoAux.getmodeloproducto_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_IDMATERIALPRODUCTO)) {
					existe=true;
					productoAux.setsDescripcionGeneralEntityReporte1(productoAux.getmaterialproducto_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_IDSEGMENTOPRODUCTO)) {
					existe=true;
					productoAux.setsDescripcionGeneralEntityReporte1(productoAux.getsegmentoproducto_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_IDTALLAPRODUCTO)) {
					existe=true;
					productoAux.setsDescripcionGeneralEntityReporte1(productoAux.gettallaproducto_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_GRUPO)) {
					existe=true;
					productoAux.setsDescripcionGeneralEntityReporte1(productoAux.getgrupo());
				}
				 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_REFERENCIA)) {
					existe=true;
					productoAux.setsDescripcionGeneralEntityReporte1(productoAux.getreferencia());
				}
				 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_APLICACION)) {
					existe=true;
					productoAux.setsDescripcionGeneralEntityReporte1(productoAux.getaplicacion());
				}
				 else if(sTipoSeleccionar.equals(ProductoConstantesFunciones.LABEL_PROCEDENCIA)) {
					existe=true;
					productoAux.setsDescripcionGeneralEntityReporte1(productoAux.getprocedencia());
				}
			}	
											
			if(!existe) {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}										
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void actualizarEstadoCeldasBotonesProducto(String sAccion,Boolean isGuardarCambiosEnLote,Boolean isEsMantenimientoRelacionado) throws Exception {
		if(sAccion=="n") {
			if(!this.esParaBusquedaForeignKey) {
				this.isVisibilidadCeldaNuevoProducto=true;
				this.isVisibilidadCeldaNuevoRelacionesProducto=true;
				this.isVisibilidadCeldaGuardarCambiosProducto=true;
			}
			
			this.isVisibilidadCeldaModificarProducto=false;
			this.isVisibilidadCeldaActualizarProducto=false;
			this.isVisibilidadCeldaEliminarProducto=false;
			this.isVisibilidadCeldaCancelarProducto=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarProducto=true;
				} else {
					this.isVisibilidadCeldaGuardarProducto=false;
				}
			}
		} else if(sAccion=="a") {
			this.isVisibilidadCeldaNuevoProducto=false;
			this.isVisibilidadCeldaNuevoRelacionesProducto=false;
			this.isVisibilidadCeldaGuardarCambiosProducto=false;
			this.isVisibilidadCeldaModificarProducto=false;
			this.isVisibilidadCeldaActualizarProducto=true;
			this.isVisibilidadCeldaEliminarProducto=false;
			this.isVisibilidadCeldaCancelarProducto=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarProducto=true;
				} else {
					this.isVisibilidadCeldaGuardarProducto=false;
				}
			}
		} else if(sAccion=="ae") {
			this.isVisibilidadCeldaNuevoProducto=false;
			this.isVisibilidadCeldaNuevoRelacionesProducto=false;
			this.isVisibilidadCeldaGuardarCambiosProducto=false;
			this.isVisibilidadCeldaModificarProducto=false;
			this.isVisibilidadCeldaActualizarProducto=true;
			this.isVisibilidadCeldaEliminarProducto=true;
			this.isVisibilidadCeldaCancelarProducto=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarProducto=true;
				} else {
					this.isVisibilidadCeldaGuardarProducto=false;
				}
			}
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {
			this.isVisibilidadCeldaNuevoProducto=false;
			this.isVisibilidadCeldaNuevoRelacionesProducto=false;
			this.isVisibilidadCeldaGuardarCambiosProducto=false;
			this.isVisibilidadCeldaModificarProducto=false;
			this.isVisibilidadCeldaActualizarProducto=true;
			this.isVisibilidadCeldaEliminarProducto=false;
			this.isVisibilidadCeldaCancelarProducto=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarProducto=false;
				} else {
					this.isVisibilidadCeldaGuardarProducto=false;
				}
			}
		} else if(sAccion=="c") {
			this.isVisibilidadCeldaNuevoProducto=true;
			this.isVisibilidadCeldaNuevoRelacionesProducto=true;
			this.isVisibilidadCeldaGuardarCambiosProducto=true;
			this.isVisibilidadCeldaModificarProducto=false;
			this.isVisibilidadCeldaActualizarProducto=false;
			this.isVisibilidadCeldaEliminarProducto=false;
			this.isVisibilidadCeldaCancelarProducto=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarProducto=true;
				} else {
					this.isVisibilidadCeldaGuardarProducto=false;
				}
			}
		} else if(sAccion=="t") {
			this.isVisibilidadCeldaNuevoProducto=false;
			this.isVisibilidadCeldaNuevoRelacionesProducto=false;
			this.isVisibilidadCeldaGuardarCambiosProducto=false;
			this.isVisibilidadCeldaActualizarProducto=false;
			this.isVisibilidadCeldaEliminarProducto=false;
			this.isVisibilidadCeldaCancelarProducto=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarProducto=false;
				} else {
					this.isVisibilidadCeldaGuardarProducto=false;
				}
			}
		}  else if(sAccion=="s"||sAccion=="s2") {
			this.isVisibilidadCeldaNuevoProducto=false;
			this.isVisibilidadCeldaNuevoRelacionesProducto=false;
			this.isVisibilidadCeldaGuardarCambiosProducto=false;
			this.isVisibilidadCeldaModificarProducto=true;
			this.isVisibilidadCeldaActualizarProducto=false;
			this.isVisibilidadCeldaEliminarProducto=false;
			this.isVisibilidadCeldaCancelarProducto=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarProducto=false;
				} else {
					this.isVisibilidadCeldaGuardarProducto=false;
				}
			}
		}
		
		//ACTUALIZA VISIBILIDAD PANELES
		if(ProductoJInternalFrame.CON_DATOS_FRAME && !this.esParaBusquedaForeignKey) {
			//SIEMPRE VISIBLE
			this.isVisibilidadCeldaNuevoProducto=true;
			this.isVisibilidadCeldaNuevoRelacionesProducto=true;
			this.isVisibilidadCeldaGuardarCambiosProducto=true;
		} else {
			this.actualizarEstadoPanelsProducto(sAccion);						
		}
		
		if(this.esParaBusquedaForeignKey) {
			this.isVisibilidadCeldaCopiarProducto=false;
			//this.isVisibilidadCeldaVerFormProducto=false;
			this.isVisibilidadCeldaDuplicarProducto=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONES
		if(!productoSessionBean.getConGuardarRelaciones()) {
			this.isVisibilidadCeldaNuevoRelacionesProducto=false;
		} else {
			this.isVisibilidadCeldaNuevoProducto=false;
			this.isVisibilidadCeldaGuardarCambiosProducto=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONADO
		if(productoSessionBean.getEsGuardarRelacionado()) {
			if(!productoSessionBean.getConGuardarRelaciones()) {	
				this.isVisibilidadCeldaNuevoRelacionesProducto=false;												
			}
			
			this.jButtonCerrarProducto.setVisible(false);
		}
		
		//SI NO TIENE MAXIMO DE RELACIONES PERMITIDAS
		if(!this.conMaximoRelaciones) {
			this.isVisibilidadCeldaNuevoRelacionesProducto=false;
		}
		
		if(!this.permiteMantenimiento(this.producto)) {
			this.isVisibilidadCeldaActualizarProducto=false;
			this.isVisibilidadCeldaEliminarProducto=false;
		}
		
		
		
	}
	
	public void actualizarEstadoCeldasBotonesConGuardarRelacionesProducto() {
		this.isVisibilidadCeldaNuevoProducto=false;
		this.isVisibilidadCeldaGuardarCambiosProducto=false;
	}
	
	public void actualizarEstadoPanelsProducto(String sAccion) {
		if(sAccion=="n") {
			if(this.jScrollPanelDatosEdicionProducto!=null) {
				this.jScrollPanelDatosEdicionProducto.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasProducto!=null) {
				this.jTabbedPaneBusquedasProducto.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosProducto!=null) {
				this.jScrollPanelDatosProducto.setVisible(true);
			}
			
			if(this.jPanelPaginacionProducto!=null) {
				this.jPanelPaginacionProducto.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesProducto!=null) {
				this.jPanelParametrosReportesProducto.setVisible(true);		    
			}
			
		} else if(sAccion=="a") {				
			if(this.jScrollPanelDatosEdicionProducto!=null) {
				this.jScrollPanelDatosEdicionProducto.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasProducto!=null) {
				this.jTabbedPaneBusquedasProducto.setVisible(false);			
			}
			
			
			
			if(this.jScrollPanelDatosProducto!=null) {
				this.jScrollPanelDatosProducto.setVisible(false);
			}
			
			if(this.jPanelPaginacionProducto!=null) {
				this.jPanelPaginacionProducto.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesProducto!=null) {
				this.jPanelParametrosReportesProducto.setVisible(false);
			}
						
		} else if(sAccion=="ae") {		
			if(this.jScrollPanelDatosEdicionProducto!=null) {
				this.jScrollPanelDatosEdicionProducto.setVisible(true);		
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasProducto!=null) {
				this.jTabbedPaneBusquedasProducto.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosProducto!=null) {
				this.jScrollPanelDatosProducto.setVisible(false);
			}
			
			if(this.jPanelPaginacionProducto!=null) {
				this.jPanelPaginacionProducto.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesProducto!=null) {
				this.jPanelParametrosReportesProducto.setVisible(false);
			}
						
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {	
			if(this.jScrollPanelDatosEdicionProducto!=null) {
				this.jScrollPanelDatosEdicionProducto.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasProducto!=null) {
				this.jTabbedPaneBusquedasProducto.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosProducto!=null) {
				this.jScrollPanelDatosProducto.setVisible(false);
			}
			
			if(this.jPanelPaginacionProducto!=null) {
				this.jPanelPaginacionProducto.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesProducto!=null) {
				this.jPanelParametrosReportesProducto.setVisible(false);
			}
						
		} else if(sAccion=="c") {	
			if(this.jScrollPanelDatosEdicionProducto!=null) {
				this.jScrollPanelDatosEdicionProducto.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasProducto!=null) {
				this.jTabbedPaneBusquedasProducto.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosProducto!=null) {
				this.jScrollPanelDatosProducto.setVisible(true);
			}
			
			if(this.jPanelPaginacionProducto!=null) {
				this.jPanelPaginacionProducto.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesProducto!=null) {
				this.jPanelParametrosReportesProducto.setVisible(true);
			}
						
		} else if(sAccion=="t") {
			
			if(this.jScrollPanelDatosEdicionProducto!=null) {
				this.jScrollPanelDatosEdicionProducto.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasProducto!=null) {
				this.jTabbedPaneBusquedasProducto.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosProducto!=null) {
				this.jScrollPanelDatosProducto.setVisible(true);
			}
			
			if(this.jPanelPaginacionProducto!=null) {
				this.jPanelPaginacionProducto.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesProducto!=null) {
				this.jPanelParametrosReportesProducto.setVisible(true);
			}
						
		}  else if(sAccion=="s"||sAccion=="s2") {
			if(this.jScrollPanelDatosEdicionProducto!=null) {
				this.jScrollPanelDatosEdicionProducto.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasProducto!=null) {
				this.jTabbedPaneBusquedasProducto.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosProducto!=null) {
				this.jScrollPanelDatosProducto.setVisible(true);
			}
			
			if(this.jPanelPaginacionProducto!=null) {
				this.jPanelPaginacionProducto.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesProducto!=null) {
				this.jPanelParametrosReportesProducto.setVisible(true);
			}
			
		} 
		
		if(sAccion.equals("relacionado") || this.productoSessionBean.getEsGuardarRelacionado()) {
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				if(this.jTabbedPaneBusquedasProducto!=null) {
					this.jTabbedPaneBusquedasProducto.setVisible(false);				
				}
				
			}
			
			if(this.jPanelParametrosReportesProducto!=null) {
				this.jPanelParametrosReportesProducto.setVisible(false);
			}
		
		} else if(sAccion.equals("no_relacionado") && !this.productoSessionBean.getEsGuardarRelacionado()) {
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasProducto!=null) {
				this.jTabbedPaneBusquedasProducto.setVisible(true);			
			}
			
			if(this.jPanelParametrosReportesProducto!=null) {
				this.jPanelParametrosReportesProducto.setVisible(true);
			}
		}
	}	
	
	

	public void setVisibilidadBusquedasParaEmpresa(Boolean isParaEmpresa){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEmpresaNegation=!isParaEmpresa;

			this.isVisibilidadBusquedaPorCodigo=isParaEmpresaNegation;
			if(!this.isVisibilidadBusquedaPorCodigo) {this.jTabbedPaneBusquedasProducto.remove(jPanelBusquedaPorCodigoProducto);}

			this.isVisibilidadBusquedaPorNombre=isParaEmpresaNegation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasProducto.remove(jPanelBusquedaPorNombreProducto);}

			this.isVisibilidadFK_IdClaseProducto=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdClaseProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdClaseProductoProducto);}

			this.isVisibilidadFK_IdCliente=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdClienteProducto);}

			this.isVisibilidadFK_IdClienteProveedorDefecto=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdClienteProveedorDefecto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdClienteProveedorDefectoProducto);}

			this.isVisibilidadFK_IdLinea=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdLinea) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdLineaProducto);}

			this.isVisibilidadFK_IdMarcaProducto=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdMarcaProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdMarcaProductoProducto);}

			this.isVisibilidadFK_IdModeloProducto=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdModeloProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdModeloProductoProducto);}

			this.isVisibilidadFK_IdTipoProducto=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdTipoProductoProducto);}

			this.isVisibilidadFK_IdTipoProductoServicio=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoProductoServicio) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdTipoProductoServicioProducto);}

			this.isVisibilidadFK_IdTipoProductoServicioInven=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoProductoServicioInven) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdTipoProductoServicioInvenProducto);}
		}
		
	}

	public void setVisibilidadBusquedasParaSucursal(Boolean isParaSucursal){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaSucursalNegation=!isParaSucursal;

			this.isVisibilidadBusquedaPorCodigo=isParaSucursalNegation;
			if(!this.isVisibilidadBusquedaPorCodigo) {this.jTabbedPaneBusquedasProducto.remove(jPanelBusquedaPorCodigoProducto);}

			this.isVisibilidadBusquedaPorNombre=isParaSucursalNegation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasProducto.remove(jPanelBusquedaPorNombreProducto);}

			this.isVisibilidadFK_IdClaseProducto=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdClaseProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdClaseProductoProducto);}

			this.isVisibilidadFK_IdCliente=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdClienteProducto);}

			this.isVisibilidadFK_IdClienteProveedorDefecto=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdClienteProveedorDefecto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdClienteProveedorDefectoProducto);}

			this.isVisibilidadFK_IdLinea=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdLinea) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdLineaProducto);}

			this.isVisibilidadFK_IdMarcaProducto=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdMarcaProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdMarcaProductoProducto);}

			this.isVisibilidadFK_IdModeloProducto=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdModeloProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdModeloProductoProducto);}

			this.isVisibilidadFK_IdTipoProducto=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTipoProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdTipoProductoProducto);}

			this.isVisibilidadFK_IdTipoProductoServicio=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTipoProductoServicio) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdTipoProductoServicioProducto);}

			this.isVisibilidadFK_IdTipoProductoServicioInven=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTipoProductoServicioInven) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdTipoProductoServicioInvenProducto);}
		}
		
	}

	public void setVisibilidadBusquedasParaLinea(Boolean isParaLinea){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaLineaNegation=!isParaLinea;

			this.isVisibilidadBusquedaPorCodigo=isParaLineaNegation;
			if(!this.isVisibilidadBusquedaPorCodigo) {this.jTabbedPaneBusquedasProducto.remove(jPanelBusquedaPorCodigoProducto);}

			this.isVisibilidadBusquedaPorNombre=isParaLineaNegation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasProducto.remove(jPanelBusquedaPorNombreProducto);}

			this.isVisibilidadFK_IdClaseProducto=isParaLineaNegation;
			if(!this.isVisibilidadFK_IdClaseProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdClaseProductoProducto);}

			this.isVisibilidadFK_IdCliente=isParaLineaNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdClienteProducto);}

			this.isVisibilidadFK_IdClienteProveedorDefecto=isParaLineaNegation;
			if(!this.isVisibilidadFK_IdClienteProveedorDefecto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdClienteProveedorDefectoProducto);}

			this.isVisibilidadFK_IdLinea=isParaLinea;
			if(!this.isVisibilidadFK_IdLinea) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdLineaProducto);}

			this.isVisibilidadFK_IdMarcaProducto=isParaLineaNegation;
			if(!this.isVisibilidadFK_IdMarcaProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdMarcaProductoProducto);}

			this.isVisibilidadFK_IdModeloProducto=isParaLineaNegation;
			if(!this.isVisibilidadFK_IdModeloProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdModeloProductoProducto);}

			this.isVisibilidadFK_IdTipoProducto=isParaLineaNegation;
			if(!this.isVisibilidadFK_IdTipoProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdTipoProductoProducto);}

			this.isVisibilidadFK_IdTipoProductoServicio=isParaLineaNegation;
			if(!this.isVisibilidadFK_IdTipoProductoServicio) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdTipoProductoServicioProducto);}

			this.isVisibilidadFK_IdTipoProductoServicioInven=isParaLineaNegation;
			if(!this.isVisibilidadFK_IdTipoProductoServicioInven) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdTipoProductoServicioInvenProducto);}
		}
		
	}

	public void setVisibilidadBusquedasParaLineaGrupo(Boolean isParaLineaGrupo){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaLineaGrupoNegation=!isParaLineaGrupo;

			this.isVisibilidadBusquedaPorCodigo=isParaLineaGrupoNegation;
			if(!this.isVisibilidadBusquedaPorCodigo) {this.jTabbedPaneBusquedasProducto.remove(jPanelBusquedaPorCodigoProducto);}

			this.isVisibilidadBusquedaPorNombre=isParaLineaGrupoNegation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasProducto.remove(jPanelBusquedaPorNombreProducto);}

			this.isVisibilidadFK_IdClaseProducto=isParaLineaGrupoNegation;
			if(!this.isVisibilidadFK_IdClaseProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdClaseProductoProducto);}

			this.isVisibilidadFK_IdCliente=isParaLineaGrupoNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdClienteProducto);}

			this.isVisibilidadFK_IdClienteProveedorDefecto=isParaLineaGrupoNegation;
			if(!this.isVisibilidadFK_IdClienteProveedorDefecto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdClienteProveedorDefectoProducto);}

			this.isVisibilidadFK_IdLinea=isParaLineaGrupoNegation;
			if(!this.isVisibilidadFK_IdLinea) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdLineaProducto);}

			this.isVisibilidadFK_IdMarcaProducto=isParaLineaGrupoNegation;
			if(!this.isVisibilidadFK_IdMarcaProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdMarcaProductoProducto);}

			this.isVisibilidadFK_IdModeloProducto=isParaLineaGrupoNegation;
			if(!this.isVisibilidadFK_IdModeloProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdModeloProductoProducto);}

			this.isVisibilidadFK_IdTipoProducto=isParaLineaGrupoNegation;
			if(!this.isVisibilidadFK_IdTipoProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdTipoProductoProducto);}

			this.isVisibilidadFK_IdTipoProductoServicio=isParaLineaGrupoNegation;
			if(!this.isVisibilidadFK_IdTipoProductoServicio) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdTipoProductoServicioProducto);}

			this.isVisibilidadFK_IdTipoProductoServicioInven=isParaLineaGrupoNegation;
			if(!this.isVisibilidadFK_IdTipoProductoServicioInven) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdTipoProductoServicioInvenProducto);}
		}
		
	}

	public void setVisibilidadBusquedasParaLineaCategoria(Boolean isParaLineaCategoria){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaLineaCategoriaNegation=!isParaLineaCategoria;

			this.isVisibilidadBusquedaPorCodigo=isParaLineaCategoriaNegation;
			if(!this.isVisibilidadBusquedaPorCodigo) {this.jTabbedPaneBusquedasProducto.remove(jPanelBusquedaPorCodigoProducto);}

			this.isVisibilidadBusquedaPorNombre=isParaLineaCategoriaNegation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasProducto.remove(jPanelBusquedaPorNombreProducto);}

			this.isVisibilidadFK_IdClaseProducto=isParaLineaCategoriaNegation;
			if(!this.isVisibilidadFK_IdClaseProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdClaseProductoProducto);}

			this.isVisibilidadFK_IdCliente=isParaLineaCategoriaNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdClienteProducto);}

			this.isVisibilidadFK_IdClienteProveedorDefecto=isParaLineaCategoriaNegation;
			if(!this.isVisibilidadFK_IdClienteProveedorDefecto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdClienteProveedorDefectoProducto);}

			this.isVisibilidadFK_IdLinea=isParaLineaCategoriaNegation;
			if(!this.isVisibilidadFK_IdLinea) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdLineaProducto);}

			this.isVisibilidadFK_IdMarcaProducto=isParaLineaCategoriaNegation;
			if(!this.isVisibilidadFK_IdMarcaProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdMarcaProductoProducto);}

			this.isVisibilidadFK_IdModeloProducto=isParaLineaCategoriaNegation;
			if(!this.isVisibilidadFK_IdModeloProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdModeloProductoProducto);}

			this.isVisibilidadFK_IdTipoProducto=isParaLineaCategoriaNegation;
			if(!this.isVisibilidadFK_IdTipoProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdTipoProductoProducto);}

			this.isVisibilidadFK_IdTipoProductoServicio=isParaLineaCategoriaNegation;
			if(!this.isVisibilidadFK_IdTipoProductoServicio) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdTipoProductoServicioProducto);}

			this.isVisibilidadFK_IdTipoProductoServicioInven=isParaLineaCategoriaNegation;
			if(!this.isVisibilidadFK_IdTipoProductoServicioInven) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdTipoProductoServicioInvenProducto);}
		}
		
	}

	public void setVisibilidadBusquedasParaLineaMarca(Boolean isParaLineaMarca){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaLineaMarcaNegation=!isParaLineaMarca;

			this.isVisibilidadBusquedaPorCodigo=isParaLineaMarcaNegation;
			if(!this.isVisibilidadBusquedaPorCodigo) {this.jTabbedPaneBusquedasProducto.remove(jPanelBusquedaPorCodigoProducto);}

			this.isVisibilidadBusquedaPorNombre=isParaLineaMarcaNegation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasProducto.remove(jPanelBusquedaPorNombreProducto);}

			this.isVisibilidadFK_IdClaseProducto=isParaLineaMarcaNegation;
			if(!this.isVisibilidadFK_IdClaseProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdClaseProductoProducto);}

			this.isVisibilidadFK_IdCliente=isParaLineaMarcaNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdClienteProducto);}

			this.isVisibilidadFK_IdClienteProveedorDefecto=isParaLineaMarcaNegation;
			if(!this.isVisibilidadFK_IdClienteProveedorDefecto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdClienteProveedorDefectoProducto);}

			this.isVisibilidadFK_IdLinea=isParaLineaMarcaNegation;
			if(!this.isVisibilidadFK_IdLinea) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdLineaProducto);}

			this.isVisibilidadFK_IdMarcaProducto=isParaLineaMarcaNegation;
			if(!this.isVisibilidadFK_IdMarcaProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdMarcaProductoProducto);}

			this.isVisibilidadFK_IdModeloProducto=isParaLineaMarcaNegation;
			if(!this.isVisibilidadFK_IdModeloProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdModeloProductoProducto);}

			this.isVisibilidadFK_IdTipoProducto=isParaLineaMarcaNegation;
			if(!this.isVisibilidadFK_IdTipoProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdTipoProductoProducto);}

			this.isVisibilidadFK_IdTipoProductoServicio=isParaLineaMarcaNegation;
			if(!this.isVisibilidadFK_IdTipoProductoServicio) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdTipoProductoServicioProducto);}

			this.isVisibilidadFK_IdTipoProductoServicioInven=isParaLineaMarcaNegation;
			if(!this.isVisibilidadFK_IdTipoProductoServicioInven) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdTipoProductoServicioInvenProducto);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoProductoServicio(Boolean isParaTipoProductoServicio){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoProductoServicioNegation=!isParaTipoProductoServicio;

			this.isVisibilidadBusquedaPorCodigo=isParaTipoProductoServicioNegation;
			if(!this.isVisibilidadBusquedaPorCodigo) {this.jTabbedPaneBusquedasProducto.remove(jPanelBusquedaPorCodigoProducto);}

			this.isVisibilidadBusquedaPorNombre=isParaTipoProductoServicioNegation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasProducto.remove(jPanelBusquedaPorNombreProducto);}

			this.isVisibilidadFK_IdClaseProducto=isParaTipoProductoServicioNegation;
			if(!this.isVisibilidadFK_IdClaseProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdClaseProductoProducto);}

			this.isVisibilidadFK_IdCliente=isParaTipoProductoServicioNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdClienteProducto);}

			this.isVisibilidadFK_IdClienteProveedorDefecto=isParaTipoProductoServicioNegation;
			if(!this.isVisibilidadFK_IdClienteProveedorDefecto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdClienteProveedorDefectoProducto);}

			this.isVisibilidadFK_IdLinea=isParaTipoProductoServicioNegation;
			if(!this.isVisibilidadFK_IdLinea) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdLineaProducto);}

			this.isVisibilidadFK_IdMarcaProducto=isParaTipoProductoServicioNegation;
			if(!this.isVisibilidadFK_IdMarcaProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdMarcaProductoProducto);}

			this.isVisibilidadFK_IdModeloProducto=isParaTipoProductoServicioNegation;
			if(!this.isVisibilidadFK_IdModeloProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdModeloProductoProducto);}

			this.isVisibilidadFK_IdTipoProducto=isParaTipoProductoServicioNegation;
			if(!this.isVisibilidadFK_IdTipoProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdTipoProductoProducto);}

			this.isVisibilidadFK_IdTipoProductoServicio=isParaTipoProductoServicio;
			if(!this.isVisibilidadFK_IdTipoProductoServicio) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdTipoProductoServicioProducto);}

			this.isVisibilidadFK_IdTipoProductoServicioInven=isParaTipoProductoServicioNegation;
			if(!this.isVisibilidadFK_IdTipoProductoServicioInven) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdTipoProductoServicioInvenProducto);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoProductoServicioInven(Boolean isParaTipoProductoServicioInven){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoProductoServicioInvenNegation=!isParaTipoProductoServicioInven;

			this.isVisibilidadBusquedaPorCodigo=isParaTipoProductoServicioInvenNegation;
			if(!this.isVisibilidadBusquedaPorCodigo) {this.jTabbedPaneBusquedasProducto.remove(jPanelBusquedaPorCodigoProducto);}

			this.isVisibilidadBusquedaPorNombre=isParaTipoProductoServicioInvenNegation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasProducto.remove(jPanelBusquedaPorNombreProducto);}

			this.isVisibilidadFK_IdClaseProducto=isParaTipoProductoServicioInvenNegation;
			if(!this.isVisibilidadFK_IdClaseProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdClaseProductoProducto);}

			this.isVisibilidadFK_IdCliente=isParaTipoProductoServicioInvenNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdClienteProducto);}

			this.isVisibilidadFK_IdClienteProveedorDefecto=isParaTipoProductoServicioInvenNegation;
			if(!this.isVisibilidadFK_IdClienteProveedorDefecto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdClienteProveedorDefectoProducto);}

			this.isVisibilidadFK_IdLinea=isParaTipoProductoServicioInvenNegation;
			if(!this.isVisibilidadFK_IdLinea) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdLineaProducto);}

			this.isVisibilidadFK_IdMarcaProducto=isParaTipoProductoServicioInvenNegation;
			if(!this.isVisibilidadFK_IdMarcaProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdMarcaProductoProducto);}

			this.isVisibilidadFK_IdModeloProducto=isParaTipoProductoServicioInvenNegation;
			if(!this.isVisibilidadFK_IdModeloProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdModeloProductoProducto);}

			this.isVisibilidadFK_IdTipoProducto=isParaTipoProductoServicioInvenNegation;
			if(!this.isVisibilidadFK_IdTipoProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdTipoProductoProducto);}

			this.isVisibilidadFK_IdTipoProductoServicio=isParaTipoProductoServicioInvenNegation;
			if(!this.isVisibilidadFK_IdTipoProductoServicio) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdTipoProductoServicioProducto);}

			this.isVisibilidadFK_IdTipoProductoServicioInven=isParaTipoProductoServicioInven;
			if(!this.isVisibilidadFK_IdTipoProductoServicioInven) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdTipoProductoServicioInvenProducto);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoCosteo(Boolean isParaTipoCosteo){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoCosteoNegation=!isParaTipoCosteo;

			this.isVisibilidadBusquedaPorCodigo=isParaTipoCosteoNegation;
			if(!this.isVisibilidadBusquedaPorCodigo) {this.jTabbedPaneBusquedasProducto.remove(jPanelBusquedaPorCodigoProducto);}

			this.isVisibilidadBusquedaPorNombre=isParaTipoCosteoNegation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasProducto.remove(jPanelBusquedaPorNombreProducto);}

			this.isVisibilidadFK_IdClaseProducto=isParaTipoCosteoNegation;
			if(!this.isVisibilidadFK_IdClaseProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdClaseProductoProducto);}

			this.isVisibilidadFK_IdCliente=isParaTipoCosteoNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdClienteProducto);}

			this.isVisibilidadFK_IdClienteProveedorDefecto=isParaTipoCosteoNegation;
			if(!this.isVisibilidadFK_IdClienteProveedorDefecto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdClienteProveedorDefectoProducto);}

			this.isVisibilidadFK_IdLinea=isParaTipoCosteoNegation;
			if(!this.isVisibilidadFK_IdLinea) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdLineaProducto);}

			this.isVisibilidadFK_IdMarcaProducto=isParaTipoCosteoNegation;
			if(!this.isVisibilidadFK_IdMarcaProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdMarcaProductoProducto);}

			this.isVisibilidadFK_IdModeloProducto=isParaTipoCosteoNegation;
			if(!this.isVisibilidadFK_IdModeloProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdModeloProductoProducto);}

			this.isVisibilidadFK_IdTipoProducto=isParaTipoCosteoNegation;
			if(!this.isVisibilidadFK_IdTipoProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdTipoProductoProducto);}

			this.isVisibilidadFK_IdTipoProductoServicio=isParaTipoCosteoNegation;
			if(!this.isVisibilidadFK_IdTipoProductoServicio) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdTipoProductoServicioProducto);}

			this.isVisibilidadFK_IdTipoProductoServicioInven=isParaTipoCosteoNegation;
			if(!this.isVisibilidadFK_IdTipoProductoServicioInven) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdTipoProductoServicioInvenProducto);}
		}
		
	}

	public void setVisibilidadBusquedasParaUnidad(Boolean isParaUnidad){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaUnidadNegation=!isParaUnidad;

			this.isVisibilidadBusquedaPorCodigo=isParaUnidadNegation;
			if(!this.isVisibilidadBusquedaPorCodigo) {this.jTabbedPaneBusquedasProducto.remove(jPanelBusquedaPorCodigoProducto);}

			this.isVisibilidadBusquedaPorNombre=isParaUnidadNegation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasProducto.remove(jPanelBusquedaPorNombreProducto);}

			this.isVisibilidadFK_IdClaseProducto=isParaUnidadNegation;
			if(!this.isVisibilidadFK_IdClaseProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdClaseProductoProducto);}

			this.isVisibilidadFK_IdCliente=isParaUnidadNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdClienteProducto);}

			this.isVisibilidadFK_IdClienteProveedorDefecto=isParaUnidadNegation;
			if(!this.isVisibilidadFK_IdClienteProveedorDefecto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdClienteProveedorDefectoProducto);}

			this.isVisibilidadFK_IdLinea=isParaUnidadNegation;
			if(!this.isVisibilidadFK_IdLinea) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdLineaProducto);}

			this.isVisibilidadFK_IdMarcaProducto=isParaUnidadNegation;
			if(!this.isVisibilidadFK_IdMarcaProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdMarcaProductoProducto);}

			this.isVisibilidadFK_IdModeloProducto=isParaUnidadNegation;
			if(!this.isVisibilidadFK_IdModeloProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdModeloProductoProducto);}

			this.isVisibilidadFK_IdTipoProducto=isParaUnidadNegation;
			if(!this.isVisibilidadFK_IdTipoProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdTipoProductoProducto);}

			this.isVisibilidadFK_IdTipoProductoServicio=isParaUnidadNegation;
			if(!this.isVisibilidadFK_IdTipoProductoServicio) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdTipoProductoServicioProducto);}

			this.isVisibilidadFK_IdTipoProductoServicioInven=isParaUnidadNegation;
			if(!this.isVisibilidadFK_IdTipoProductoServicioInven) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdTipoProductoServicioInvenProducto);}
		}
		
	}

	public void setVisibilidadBusquedasParaUnidadPeso(Boolean isParaUnidadPeso){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaUnidadPesoNegation=!isParaUnidadPeso;

			this.isVisibilidadBusquedaPorCodigo=isParaUnidadPesoNegation;
			if(!this.isVisibilidadBusquedaPorCodigo) {this.jTabbedPaneBusquedasProducto.remove(jPanelBusquedaPorCodigoProducto);}

			this.isVisibilidadBusquedaPorNombre=isParaUnidadPesoNegation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasProducto.remove(jPanelBusquedaPorNombreProducto);}

			this.isVisibilidadFK_IdClaseProducto=isParaUnidadPesoNegation;
			if(!this.isVisibilidadFK_IdClaseProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdClaseProductoProducto);}

			this.isVisibilidadFK_IdCliente=isParaUnidadPesoNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdClienteProducto);}

			this.isVisibilidadFK_IdClienteProveedorDefecto=isParaUnidadPesoNegation;
			if(!this.isVisibilidadFK_IdClienteProveedorDefecto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdClienteProveedorDefectoProducto);}

			this.isVisibilidadFK_IdLinea=isParaUnidadPesoNegation;
			if(!this.isVisibilidadFK_IdLinea) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdLineaProducto);}

			this.isVisibilidadFK_IdMarcaProducto=isParaUnidadPesoNegation;
			if(!this.isVisibilidadFK_IdMarcaProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdMarcaProductoProducto);}

			this.isVisibilidadFK_IdModeloProducto=isParaUnidadPesoNegation;
			if(!this.isVisibilidadFK_IdModeloProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdModeloProductoProducto);}

			this.isVisibilidadFK_IdTipoProducto=isParaUnidadPesoNegation;
			if(!this.isVisibilidadFK_IdTipoProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdTipoProductoProducto);}

			this.isVisibilidadFK_IdTipoProductoServicio=isParaUnidadPesoNegation;
			if(!this.isVisibilidadFK_IdTipoProductoServicio) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdTipoProductoServicioProducto);}

			this.isVisibilidadFK_IdTipoProductoServicioInven=isParaUnidadPesoNegation;
			if(!this.isVisibilidadFK_IdTipoProductoServicioInven) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdTipoProductoServicioInvenProducto);}
		}
		
	}

	public void setVisibilidadBusquedasParaArancel(Boolean isParaArancel){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaArancelNegation=!isParaArancel;

			this.isVisibilidadBusquedaPorCodigo=isParaArancelNegation;
			if(!this.isVisibilidadBusquedaPorCodigo) {this.jTabbedPaneBusquedasProducto.remove(jPanelBusquedaPorCodigoProducto);}

			this.isVisibilidadBusquedaPorNombre=isParaArancelNegation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasProducto.remove(jPanelBusquedaPorNombreProducto);}

			this.isVisibilidadFK_IdClaseProducto=isParaArancelNegation;
			if(!this.isVisibilidadFK_IdClaseProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdClaseProductoProducto);}

			this.isVisibilidadFK_IdCliente=isParaArancelNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdClienteProducto);}

			this.isVisibilidadFK_IdClienteProveedorDefecto=isParaArancelNegation;
			if(!this.isVisibilidadFK_IdClienteProveedorDefecto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdClienteProveedorDefectoProducto);}

			this.isVisibilidadFK_IdLinea=isParaArancelNegation;
			if(!this.isVisibilidadFK_IdLinea) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdLineaProducto);}

			this.isVisibilidadFK_IdMarcaProducto=isParaArancelNegation;
			if(!this.isVisibilidadFK_IdMarcaProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdMarcaProductoProducto);}

			this.isVisibilidadFK_IdModeloProducto=isParaArancelNegation;
			if(!this.isVisibilidadFK_IdModeloProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdModeloProductoProducto);}

			this.isVisibilidadFK_IdTipoProducto=isParaArancelNegation;
			if(!this.isVisibilidadFK_IdTipoProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdTipoProductoProducto);}

			this.isVisibilidadFK_IdTipoProductoServicio=isParaArancelNegation;
			if(!this.isVisibilidadFK_IdTipoProductoServicio) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdTipoProductoServicioProducto);}

			this.isVisibilidadFK_IdTipoProductoServicioInven=isParaArancelNegation;
			if(!this.isVisibilidadFK_IdTipoProductoServicioInven) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdTipoProductoServicioInvenProducto);}
		}
		
	}

	public void setVisibilidadBusquedasParaCliente(Boolean isParaCliente){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaClienteNegation=!isParaCliente;

			this.isVisibilidadBusquedaPorCodigo=isParaClienteNegation;
			if(!this.isVisibilidadBusquedaPorCodigo) {this.jTabbedPaneBusquedasProducto.remove(jPanelBusquedaPorCodigoProducto);}

			this.isVisibilidadBusquedaPorNombre=isParaClienteNegation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasProducto.remove(jPanelBusquedaPorNombreProducto);}

			this.isVisibilidadFK_IdClaseProducto=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdClaseProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdClaseProductoProducto);}

			this.isVisibilidadFK_IdCliente=isParaCliente;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdClienteProducto);}

			this.isVisibilidadFK_IdClienteProveedorDefecto=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdClienteProveedorDefecto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdClienteProveedorDefectoProducto);}

			this.isVisibilidadFK_IdLinea=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdLinea) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdLineaProducto);}

			this.isVisibilidadFK_IdMarcaProducto=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdMarcaProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdMarcaProductoProducto);}

			this.isVisibilidadFK_IdModeloProducto=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdModeloProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdModeloProductoProducto);}

			this.isVisibilidadFK_IdTipoProducto=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdTipoProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdTipoProductoProducto);}

			this.isVisibilidadFK_IdTipoProductoServicio=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdTipoProductoServicio) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdTipoProductoServicioProducto);}

			this.isVisibilidadFK_IdTipoProductoServicioInven=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdTipoProductoServicioInven) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdTipoProductoServicioInvenProducto);}
		}
		
	}

	public void setVisibilidadBusquedasParaClienteProveedorDefecto(Boolean isParaClienteProveedorDefecto){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaClienteProveedorDefectoNegation=!isParaClienteProveedorDefecto;

			this.isVisibilidadBusquedaPorCodigo=isParaClienteProveedorDefectoNegation;
			if(!this.isVisibilidadBusquedaPorCodigo) {this.jTabbedPaneBusquedasProducto.remove(jPanelBusquedaPorCodigoProducto);}

			this.isVisibilidadBusquedaPorNombre=isParaClienteProveedorDefectoNegation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasProducto.remove(jPanelBusquedaPorNombreProducto);}

			this.isVisibilidadFK_IdClaseProducto=isParaClienteProveedorDefectoNegation;
			if(!this.isVisibilidadFK_IdClaseProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdClaseProductoProducto);}

			this.isVisibilidadFK_IdCliente=isParaClienteProveedorDefectoNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdClienteProducto);}

			this.isVisibilidadFK_IdClienteProveedorDefecto=isParaClienteProveedorDefecto;
			if(!this.isVisibilidadFK_IdClienteProveedorDefecto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdClienteProveedorDefectoProducto);}

			this.isVisibilidadFK_IdLinea=isParaClienteProveedorDefectoNegation;
			if(!this.isVisibilidadFK_IdLinea) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdLineaProducto);}

			this.isVisibilidadFK_IdMarcaProducto=isParaClienteProveedorDefectoNegation;
			if(!this.isVisibilidadFK_IdMarcaProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdMarcaProductoProducto);}

			this.isVisibilidadFK_IdModeloProducto=isParaClienteProveedorDefectoNegation;
			if(!this.isVisibilidadFK_IdModeloProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdModeloProductoProducto);}

			this.isVisibilidadFK_IdTipoProducto=isParaClienteProveedorDefectoNegation;
			if(!this.isVisibilidadFK_IdTipoProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdTipoProductoProducto);}

			this.isVisibilidadFK_IdTipoProductoServicio=isParaClienteProveedorDefectoNegation;
			if(!this.isVisibilidadFK_IdTipoProductoServicio) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdTipoProductoServicioProducto);}

			this.isVisibilidadFK_IdTipoProductoServicioInven=isParaClienteProveedorDefectoNegation;
			if(!this.isVisibilidadFK_IdTipoProductoServicioInven) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdTipoProductoServicioInvenProducto);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoProducto(Boolean isParaTipoProducto){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoProductoNegation=!isParaTipoProducto;

			this.isVisibilidadBusquedaPorCodigo=isParaTipoProductoNegation;
			if(!this.isVisibilidadBusquedaPorCodigo) {this.jTabbedPaneBusquedasProducto.remove(jPanelBusquedaPorCodigoProducto);}

			this.isVisibilidadBusquedaPorNombre=isParaTipoProductoNegation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasProducto.remove(jPanelBusquedaPorNombreProducto);}

			this.isVisibilidadFK_IdClaseProducto=isParaTipoProductoNegation;
			if(!this.isVisibilidadFK_IdClaseProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdClaseProductoProducto);}

			this.isVisibilidadFK_IdCliente=isParaTipoProductoNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdClienteProducto);}

			this.isVisibilidadFK_IdClienteProveedorDefecto=isParaTipoProductoNegation;
			if(!this.isVisibilidadFK_IdClienteProveedorDefecto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdClienteProveedorDefectoProducto);}

			this.isVisibilidadFK_IdLinea=isParaTipoProductoNegation;
			if(!this.isVisibilidadFK_IdLinea) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdLineaProducto);}

			this.isVisibilidadFK_IdMarcaProducto=isParaTipoProductoNegation;
			if(!this.isVisibilidadFK_IdMarcaProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdMarcaProductoProducto);}

			this.isVisibilidadFK_IdModeloProducto=isParaTipoProductoNegation;
			if(!this.isVisibilidadFK_IdModeloProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdModeloProductoProducto);}

			this.isVisibilidadFK_IdTipoProducto=isParaTipoProducto;
			if(!this.isVisibilidadFK_IdTipoProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdTipoProductoProducto);}

			this.isVisibilidadFK_IdTipoProductoServicio=isParaTipoProductoNegation;
			if(!this.isVisibilidadFK_IdTipoProductoServicio) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdTipoProductoServicioProducto);}

			this.isVisibilidadFK_IdTipoProductoServicioInven=isParaTipoProductoNegation;
			if(!this.isVisibilidadFK_IdTipoProductoServicioInven) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdTipoProductoServicioInvenProducto);}
		}
		
	}

	public void setVisibilidadBusquedasParaColorProducto(Boolean isParaColorProducto){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaColorProductoNegation=!isParaColorProducto;

			this.isVisibilidadBusquedaPorCodigo=isParaColorProductoNegation;
			if(!this.isVisibilidadBusquedaPorCodigo) {this.jTabbedPaneBusquedasProducto.remove(jPanelBusquedaPorCodigoProducto);}

			this.isVisibilidadBusquedaPorNombre=isParaColorProductoNegation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasProducto.remove(jPanelBusquedaPorNombreProducto);}

			this.isVisibilidadFK_IdClaseProducto=isParaColorProductoNegation;
			if(!this.isVisibilidadFK_IdClaseProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdClaseProductoProducto);}

			this.isVisibilidadFK_IdCliente=isParaColorProductoNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdClienteProducto);}

			this.isVisibilidadFK_IdClienteProveedorDefecto=isParaColorProductoNegation;
			if(!this.isVisibilidadFK_IdClienteProveedorDefecto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdClienteProveedorDefectoProducto);}

			this.isVisibilidadFK_IdLinea=isParaColorProductoNegation;
			if(!this.isVisibilidadFK_IdLinea) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdLineaProducto);}

			this.isVisibilidadFK_IdMarcaProducto=isParaColorProductoNegation;
			if(!this.isVisibilidadFK_IdMarcaProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdMarcaProductoProducto);}

			this.isVisibilidadFK_IdModeloProducto=isParaColorProductoNegation;
			if(!this.isVisibilidadFK_IdModeloProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdModeloProductoProducto);}

			this.isVisibilidadFK_IdTipoProducto=isParaColorProductoNegation;
			if(!this.isVisibilidadFK_IdTipoProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdTipoProductoProducto);}

			this.isVisibilidadFK_IdTipoProductoServicio=isParaColorProductoNegation;
			if(!this.isVisibilidadFK_IdTipoProductoServicio) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdTipoProductoServicioProducto);}

			this.isVisibilidadFK_IdTipoProductoServicioInven=isParaColorProductoNegation;
			if(!this.isVisibilidadFK_IdTipoProductoServicioInven) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdTipoProductoServicioInvenProducto);}
		}
		
	}

	public void setVisibilidadBusquedasParaClaseProducto(Boolean isParaClaseProducto){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaClaseProductoNegation=!isParaClaseProducto;

			this.isVisibilidadBusquedaPorCodigo=isParaClaseProductoNegation;
			if(!this.isVisibilidadBusquedaPorCodigo) {this.jTabbedPaneBusquedasProducto.remove(jPanelBusquedaPorCodigoProducto);}

			this.isVisibilidadBusquedaPorNombre=isParaClaseProductoNegation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasProducto.remove(jPanelBusquedaPorNombreProducto);}

			this.isVisibilidadFK_IdClaseProducto=isParaClaseProducto;
			if(!this.isVisibilidadFK_IdClaseProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdClaseProductoProducto);}

			this.isVisibilidadFK_IdCliente=isParaClaseProductoNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdClienteProducto);}

			this.isVisibilidadFK_IdClienteProveedorDefecto=isParaClaseProductoNegation;
			if(!this.isVisibilidadFK_IdClienteProveedorDefecto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdClienteProveedorDefectoProducto);}

			this.isVisibilidadFK_IdLinea=isParaClaseProductoNegation;
			if(!this.isVisibilidadFK_IdLinea) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdLineaProducto);}

			this.isVisibilidadFK_IdMarcaProducto=isParaClaseProductoNegation;
			if(!this.isVisibilidadFK_IdMarcaProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdMarcaProductoProducto);}

			this.isVisibilidadFK_IdModeloProducto=isParaClaseProductoNegation;
			if(!this.isVisibilidadFK_IdModeloProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdModeloProductoProducto);}

			this.isVisibilidadFK_IdTipoProducto=isParaClaseProductoNegation;
			if(!this.isVisibilidadFK_IdTipoProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdTipoProductoProducto);}

			this.isVisibilidadFK_IdTipoProductoServicio=isParaClaseProductoNegation;
			if(!this.isVisibilidadFK_IdTipoProductoServicio) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdTipoProductoServicioProducto);}

			this.isVisibilidadFK_IdTipoProductoServicioInven=isParaClaseProductoNegation;
			if(!this.isVisibilidadFK_IdTipoProductoServicioInven) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdTipoProductoServicioInvenProducto);}
		}
		
	}

	public void setVisibilidadBusquedasParaEfectoProducto(Boolean isParaEfectoProducto){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEfectoProductoNegation=!isParaEfectoProducto;

			this.isVisibilidadBusquedaPorCodigo=isParaEfectoProductoNegation;
			if(!this.isVisibilidadBusquedaPorCodigo) {this.jTabbedPaneBusquedasProducto.remove(jPanelBusquedaPorCodigoProducto);}

			this.isVisibilidadBusquedaPorNombre=isParaEfectoProductoNegation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasProducto.remove(jPanelBusquedaPorNombreProducto);}

			this.isVisibilidadFK_IdClaseProducto=isParaEfectoProductoNegation;
			if(!this.isVisibilidadFK_IdClaseProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdClaseProductoProducto);}

			this.isVisibilidadFK_IdCliente=isParaEfectoProductoNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdClienteProducto);}

			this.isVisibilidadFK_IdClienteProveedorDefecto=isParaEfectoProductoNegation;
			if(!this.isVisibilidadFK_IdClienteProveedorDefecto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdClienteProveedorDefectoProducto);}

			this.isVisibilidadFK_IdLinea=isParaEfectoProductoNegation;
			if(!this.isVisibilidadFK_IdLinea) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdLineaProducto);}

			this.isVisibilidadFK_IdMarcaProducto=isParaEfectoProductoNegation;
			if(!this.isVisibilidadFK_IdMarcaProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdMarcaProductoProducto);}

			this.isVisibilidadFK_IdModeloProducto=isParaEfectoProductoNegation;
			if(!this.isVisibilidadFK_IdModeloProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdModeloProductoProducto);}

			this.isVisibilidadFK_IdTipoProducto=isParaEfectoProductoNegation;
			if(!this.isVisibilidadFK_IdTipoProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdTipoProductoProducto);}

			this.isVisibilidadFK_IdTipoProductoServicio=isParaEfectoProductoNegation;
			if(!this.isVisibilidadFK_IdTipoProductoServicio) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdTipoProductoServicioProducto);}

			this.isVisibilidadFK_IdTipoProductoServicioInven=isParaEfectoProductoNegation;
			if(!this.isVisibilidadFK_IdTipoProductoServicioInven) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdTipoProductoServicioInvenProducto);}
		}
		
	}

	public void setVisibilidadBusquedasParaMarcaProducto(Boolean isParaMarcaProducto){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaMarcaProductoNegation=!isParaMarcaProducto;

			this.isVisibilidadBusquedaPorCodigo=isParaMarcaProductoNegation;
			if(!this.isVisibilidadBusquedaPorCodigo) {this.jTabbedPaneBusquedasProducto.remove(jPanelBusquedaPorCodigoProducto);}

			this.isVisibilidadBusquedaPorNombre=isParaMarcaProductoNegation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasProducto.remove(jPanelBusquedaPorNombreProducto);}

			this.isVisibilidadFK_IdClaseProducto=isParaMarcaProductoNegation;
			if(!this.isVisibilidadFK_IdClaseProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdClaseProductoProducto);}

			this.isVisibilidadFK_IdCliente=isParaMarcaProductoNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdClienteProducto);}

			this.isVisibilidadFK_IdClienteProveedorDefecto=isParaMarcaProductoNegation;
			if(!this.isVisibilidadFK_IdClienteProveedorDefecto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdClienteProveedorDefectoProducto);}

			this.isVisibilidadFK_IdLinea=isParaMarcaProductoNegation;
			if(!this.isVisibilidadFK_IdLinea) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdLineaProducto);}

			this.isVisibilidadFK_IdMarcaProducto=isParaMarcaProducto;
			if(!this.isVisibilidadFK_IdMarcaProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdMarcaProductoProducto);}

			this.isVisibilidadFK_IdModeloProducto=isParaMarcaProductoNegation;
			if(!this.isVisibilidadFK_IdModeloProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdModeloProductoProducto);}

			this.isVisibilidadFK_IdTipoProducto=isParaMarcaProductoNegation;
			if(!this.isVisibilidadFK_IdTipoProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdTipoProductoProducto);}

			this.isVisibilidadFK_IdTipoProductoServicio=isParaMarcaProductoNegation;
			if(!this.isVisibilidadFK_IdTipoProductoServicio) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdTipoProductoServicioProducto);}

			this.isVisibilidadFK_IdTipoProductoServicioInven=isParaMarcaProductoNegation;
			if(!this.isVisibilidadFK_IdTipoProductoServicioInven) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdTipoProductoServicioInvenProducto);}
		}
		
	}

	public void setVisibilidadBusquedasParaModeloProducto(Boolean isParaModeloProducto){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaModeloProductoNegation=!isParaModeloProducto;

			this.isVisibilidadBusquedaPorCodigo=isParaModeloProductoNegation;
			if(!this.isVisibilidadBusquedaPorCodigo) {this.jTabbedPaneBusquedasProducto.remove(jPanelBusquedaPorCodigoProducto);}

			this.isVisibilidadBusquedaPorNombre=isParaModeloProductoNegation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasProducto.remove(jPanelBusquedaPorNombreProducto);}

			this.isVisibilidadFK_IdClaseProducto=isParaModeloProductoNegation;
			if(!this.isVisibilidadFK_IdClaseProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdClaseProductoProducto);}

			this.isVisibilidadFK_IdCliente=isParaModeloProductoNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdClienteProducto);}

			this.isVisibilidadFK_IdClienteProveedorDefecto=isParaModeloProductoNegation;
			if(!this.isVisibilidadFK_IdClienteProveedorDefecto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdClienteProveedorDefectoProducto);}

			this.isVisibilidadFK_IdLinea=isParaModeloProductoNegation;
			if(!this.isVisibilidadFK_IdLinea) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdLineaProducto);}

			this.isVisibilidadFK_IdMarcaProducto=isParaModeloProductoNegation;
			if(!this.isVisibilidadFK_IdMarcaProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdMarcaProductoProducto);}

			this.isVisibilidadFK_IdModeloProducto=isParaModeloProducto;
			if(!this.isVisibilidadFK_IdModeloProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdModeloProductoProducto);}

			this.isVisibilidadFK_IdTipoProducto=isParaModeloProductoNegation;
			if(!this.isVisibilidadFK_IdTipoProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdTipoProductoProducto);}

			this.isVisibilidadFK_IdTipoProductoServicio=isParaModeloProductoNegation;
			if(!this.isVisibilidadFK_IdTipoProductoServicio) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdTipoProductoServicioProducto);}

			this.isVisibilidadFK_IdTipoProductoServicioInven=isParaModeloProductoNegation;
			if(!this.isVisibilidadFK_IdTipoProductoServicioInven) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdTipoProductoServicioInvenProducto);}
		}
		
	}

	public void setVisibilidadBusquedasParaMaterialProducto(Boolean isParaMaterialProducto){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaMaterialProductoNegation=!isParaMaterialProducto;

			this.isVisibilidadBusquedaPorCodigo=isParaMaterialProductoNegation;
			if(!this.isVisibilidadBusquedaPorCodigo) {this.jTabbedPaneBusquedasProducto.remove(jPanelBusquedaPorCodigoProducto);}

			this.isVisibilidadBusquedaPorNombre=isParaMaterialProductoNegation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasProducto.remove(jPanelBusquedaPorNombreProducto);}

			this.isVisibilidadFK_IdClaseProducto=isParaMaterialProductoNegation;
			if(!this.isVisibilidadFK_IdClaseProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdClaseProductoProducto);}

			this.isVisibilidadFK_IdCliente=isParaMaterialProductoNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdClienteProducto);}

			this.isVisibilidadFK_IdClienteProveedorDefecto=isParaMaterialProductoNegation;
			if(!this.isVisibilidadFK_IdClienteProveedorDefecto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdClienteProveedorDefectoProducto);}

			this.isVisibilidadFK_IdLinea=isParaMaterialProductoNegation;
			if(!this.isVisibilidadFK_IdLinea) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdLineaProducto);}

			this.isVisibilidadFK_IdMarcaProducto=isParaMaterialProductoNegation;
			if(!this.isVisibilidadFK_IdMarcaProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdMarcaProductoProducto);}

			this.isVisibilidadFK_IdModeloProducto=isParaMaterialProductoNegation;
			if(!this.isVisibilidadFK_IdModeloProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdModeloProductoProducto);}

			this.isVisibilidadFK_IdTipoProducto=isParaMaterialProductoNegation;
			if(!this.isVisibilidadFK_IdTipoProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdTipoProductoProducto);}

			this.isVisibilidadFK_IdTipoProductoServicio=isParaMaterialProductoNegation;
			if(!this.isVisibilidadFK_IdTipoProductoServicio) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdTipoProductoServicioProducto);}

			this.isVisibilidadFK_IdTipoProductoServicioInven=isParaMaterialProductoNegation;
			if(!this.isVisibilidadFK_IdTipoProductoServicioInven) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdTipoProductoServicioInvenProducto);}
		}
		
	}

	public void setVisibilidadBusquedasParaSegmentoProducto(Boolean isParaSegmentoProducto){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaSegmentoProductoNegation=!isParaSegmentoProducto;

			this.isVisibilidadBusquedaPorCodigo=isParaSegmentoProductoNegation;
			if(!this.isVisibilidadBusquedaPorCodigo) {this.jTabbedPaneBusquedasProducto.remove(jPanelBusquedaPorCodigoProducto);}

			this.isVisibilidadBusquedaPorNombre=isParaSegmentoProductoNegation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasProducto.remove(jPanelBusquedaPorNombreProducto);}

			this.isVisibilidadFK_IdClaseProducto=isParaSegmentoProductoNegation;
			if(!this.isVisibilidadFK_IdClaseProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdClaseProductoProducto);}

			this.isVisibilidadFK_IdCliente=isParaSegmentoProductoNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdClienteProducto);}

			this.isVisibilidadFK_IdClienteProveedorDefecto=isParaSegmentoProductoNegation;
			if(!this.isVisibilidadFK_IdClienteProveedorDefecto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdClienteProveedorDefectoProducto);}

			this.isVisibilidadFK_IdLinea=isParaSegmentoProductoNegation;
			if(!this.isVisibilidadFK_IdLinea) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdLineaProducto);}

			this.isVisibilidadFK_IdMarcaProducto=isParaSegmentoProductoNegation;
			if(!this.isVisibilidadFK_IdMarcaProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdMarcaProductoProducto);}

			this.isVisibilidadFK_IdModeloProducto=isParaSegmentoProductoNegation;
			if(!this.isVisibilidadFK_IdModeloProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdModeloProductoProducto);}

			this.isVisibilidadFK_IdTipoProducto=isParaSegmentoProductoNegation;
			if(!this.isVisibilidadFK_IdTipoProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdTipoProductoProducto);}

			this.isVisibilidadFK_IdTipoProductoServicio=isParaSegmentoProductoNegation;
			if(!this.isVisibilidadFK_IdTipoProductoServicio) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdTipoProductoServicioProducto);}

			this.isVisibilidadFK_IdTipoProductoServicioInven=isParaSegmentoProductoNegation;
			if(!this.isVisibilidadFK_IdTipoProductoServicioInven) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdTipoProductoServicioInvenProducto);}
		}
		
	}

	public void setVisibilidadBusquedasParaTallaProducto(Boolean isParaTallaProducto){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTallaProductoNegation=!isParaTallaProducto;

			this.isVisibilidadBusquedaPorCodigo=isParaTallaProductoNegation;
			if(!this.isVisibilidadBusquedaPorCodigo) {this.jTabbedPaneBusquedasProducto.remove(jPanelBusquedaPorCodigoProducto);}

			this.isVisibilidadBusquedaPorNombre=isParaTallaProductoNegation;
			if(!this.isVisibilidadBusquedaPorNombre) {this.jTabbedPaneBusquedasProducto.remove(jPanelBusquedaPorNombreProducto);}

			this.isVisibilidadFK_IdClaseProducto=isParaTallaProductoNegation;
			if(!this.isVisibilidadFK_IdClaseProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdClaseProductoProducto);}

			this.isVisibilidadFK_IdCliente=isParaTallaProductoNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdClienteProducto);}

			this.isVisibilidadFK_IdClienteProveedorDefecto=isParaTallaProductoNegation;
			if(!this.isVisibilidadFK_IdClienteProveedorDefecto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdClienteProveedorDefectoProducto);}

			this.isVisibilidadFK_IdLinea=isParaTallaProductoNegation;
			if(!this.isVisibilidadFK_IdLinea) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdLineaProducto);}

			this.isVisibilidadFK_IdMarcaProducto=isParaTallaProductoNegation;
			if(!this.isVisibilidadFK_IdMarcaProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdMarcaProductoProducto);}

			this.isVisibilidadFK_IdModeloProducto=isParaTallaProductoNegation;
			if(!this.isVisibilidadFK_IdModeloProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdModeloProductoProducto);}

			this.isVisibilidadFK_IdTipoProducto=isParaTallaProductoNegation;
			if(!this.isVisibilidadFK_IdTipoProducto) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdTipoProductoProducto);}

			this.isVisibilidadFK_IdTipoProductoServicio=isParaTallaProductoNegation;
			if(!this.isVisibilidadFK_IdTipoProductoServicio) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdTipoProductoServicioProducto);}

			this.isVisibilidadFK_IdTipoProductoServicioInven=isParaTallaProductoNegation;
			if(!this.isVisibilidadFK_IdTipoProductoServicioInven) {this.jTabbedPaneBusquedasProducto.remove(jPanelFK_IdTipoProductoServicioInvenProducto);}
		}
		
	}
	
	

	public String registrarSesionProductoParaProveedorProductos() throws Exception {
		Boolean isPaginaPopupProveedorProducto=false;

		try {

			if(this.productoSessionBean==null) {
				this.productoSessionBean=new ProductoSessionBean();
			}

			if(this.jInternalFrameDetalleFormProducto.proveedorproductoSessionBean==null) {
				this.jInternalFrameDetalleFormProducto.proveedorproductoSessionBean=new ProveedorProductoSessionBean();
			}

			this.jInternalFrameDetalleFormProducto.proveedorproductoSessionBean.setsPathNavegacionActual(productoSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+ProveedorProductoConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormProducto.proveedorproductoSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupProveedorProducto=this.jInternalFrameDetalleFormProducto.proveedorproductoSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormProducto.proveedorproductoSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeProveedorProducto(true);
			this.jInternalFrameDetalleFormProducto.proveedorproductoSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeProveedorProducto(ProductoConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormProducto.proveedorproductoSessionBean.setisBusquedaDesdeForeignKeySesionProducto(true);
			this.jInternalFrameDetalleFormProducto.proveedorproductoSessionBean.setlidProductoActual(this.idProductoActual);

			productoSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyProducto(true);
			productoSessionBean.setlIdProductoActualForeignKey(this.idProductoActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionProductoParaPrecios() throws Exception {
		Boolean isPaginaPopupPrecio=false;

		try {

			if(this.productoSessionBean==null) {
				this.productoSessionBean=new ProductoSessionBean();
			}

			if(this.jInternalFrameDetalleFormProducto.precioSessionBean==null) {
				this.jInternalFrameDetalleFormProducto.precioSessionBean=new PrecioSessionBean();
			}

			this.jInternalFrameDetalleFormProducto.precioSessionBean.setsPathNavegacionActual(productoSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+PrecioConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormProducto.precioSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupPrecio=this.jInternalFrameDetalleFormProducto.precioSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormProducto.precioSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdePrecio(true);
			this.jInternalFrameDetalleFormProducto.precioSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdePrecio(ProductoConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormProducto.precioSessionBean.setisBusquedaDesdeForeignKeySesionProducto(true);
			this.jInternalFrameDetalleFormProducto.precioSessionBean.setlidProductoActual(this.idProductoActual);

			productoSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyProducto(true);
			productoSessionBean.setlIdProductoActualForeignKey(this.idProductoActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionProductoParaDetalleImpuestoInvenes() throws Exception {
		Boolean isPaginaPopupDetalleImpuestoInven=false;

		try {

			if(this.productoSessionBean==null) {
				this.productoSessionBean=new ProductoSessionBean();
			}

			if(this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenSessionBean==null) {
				this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenSessionBean=new DetalleImpuestoInvenSessionBean();
			}

			this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenSessionBean.setsPathNavegacionActual(productoSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+DetalleImpuestoInvenConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupDetalleImpuestoInven=this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeDetalleImpuestoInven(true);
			this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeDetalleImpuestoInven(ProductoConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenSessionBean.setisBusquedaDesdeForeignKeySesionProducto(true);
			this.jInternalFrameDetalleFormProducto.detalleimpuestoinvenSessionBean.setlidProductoActual(this.idProductoActual);

			productoSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyProducto(true);
			productoSessionBean.setlIdProductoActualForeignKey(this.idProductoActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionProductoParaPresupuestoVentases() throws Exception {
		Boolean isPaginaPopupPresupuestoVentas=false;

		try {

			if(this.productoSessionBean==null) {
				this.productoSessionBean=new ProductoSessionBean();
			}

			if(this.jInternalFrameDetalleFormProducto.presupuestoventasSessionBean==null) {
				this.jInternalFrameDetalleFormProducto.presupuestoventasSessionBean=new PresupuestoVentasSessionBean();
			}

			this.jInternalFrameDetalleFormProducto.presupuestoventasSessionBean.setsPathNavegacionActual(productoSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+PresupuestoVentasConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormProducto.presupuestoventasSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupPresupuestoVentas=this.jInternalFrameDetalleFormProducto.presupuestoventasSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormProducto.presupuestoventasSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdePresupuestoVentas(true);
			this.jInternalFrameDetalleFormProducto.presupuestoventasSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdePresupuestoVentas(ProductoConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormProducto.presupuestoventasSessionBean.setisBusquedaDesdeForeignKeySesionProducto(true);
			this.jInternalFrameDetalleFormProducto.presupuestoventasSessionBean.setlidProductoActual(this.idProductoActual);

			productoSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyProducto(true);
			productoSessionBean.setlIdProductoActualForeignKey(this.idProductoActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionProductoParaPoliticaProductos() throws Exception {
		Boolean isPaginaPopupPoliticaProducto=false;

		try {

			if(this.productoSessionBean==null) {
				this.productoSessionBean=new ProductoSessionBean();
			}

			if(this.jInternalFrameDetalleFormProducto.politicaproductoSessionBean==null) {
				this.jInternalFrameDetalleFormProducto.politicaproductoSessionBean=new PoliticaProductoSessionBean();
			}

			this.jInternalFrameDetalleFormProducto.politicaproductoSessionBean.setsPathNavegacionActual(productoSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+PoliticaProductoConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormProducto.politicaproductoSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupPoliticaProducto=this.jInternalFrameDetalleFormProducto.politicaproductoSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormProducto.politicaproductoSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdePoliticaProducto(true);
			this.jInternalFrameDetalleFormProducto.politicaproductoSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdePoliticaProducto(ProductoConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormProducto.politicaproductoSessionBean.setisBusquedaDesdeForeignKeySesionProducto(true);
			this.jInternalFrameDetalleFormProducto.politicaproductoSessionBean.setlidProductoActual(this.idProductoActual);

			productoSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyProducto(true);
			productoSessionBean.setlIdProductoActualForeignKey(this.idProductoActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionProductoParaSerieProductos() throws Exception {
		Boolean isPaginaPopupSerieProducto=false;

		try {

			if(this.productoSessionBean==null) {
				this.productoSessionBean=new ProductoSessionBean();
			}

			if(this.jInternalFrameDetalleFormProducto.serieproductoSessionBean==null) {
				this.jInternalFrameDetalleFormProducto.serieproductoSessionBean=new SerieProductoSessionBean();
			}

			this.jInternalFrameDetalleFormProducto.serieproductoSessionBean.setsPathNavegacionActual(productoSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+SerieProductoConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormProducto.serieproductoSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupSerieProducto=this.jInternalFrameDetalleFormProducto.serieproductoSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormProducto.serieproductoSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeSerieProducto(true);
			this.jInternalFrameDetalleFormProducto.serieproductoSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeSerieProducto(ProductoConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormProducto.serieproductoSessionBean.setisBusquedaDesdeForeignKeySesionProducto(true);
			this.jInternalFrameDetalleFormProducto.serieproductoSessionBean.setlidProductoActual(this.idProductoActual);

			productoSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyProducto(true);
			productoSessionBean.setlIdProductoActualForeignKey(this.idProductoActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionProductoParaUbicacionProdus() throws Exception {
		Boolean isPaginaPopupUbicacionProdu=false;

		try {

			if(this.productoSessionBean==null) {
				this.productoSessionBean=new ProductoSessionBean();
			}

			if(this.jInternalFrameDetalleFormProducto.ubicacionproduSessionBean==null) {
				this.jInternalFrameDetalleFormProducto.ubicacionproduSessionBean=new UbicacionProduSessionBean();
			}

			this.jInternalFrameDetalleFormProducto.ubicacionproduSessionBean.setsPathNavegacionActual(productoSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+UbicacionProduConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormProducto.ubicacionproduSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupUbicacionProdu=this.jInternalFrameDetalleFormProducto.ubicacionproduSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormProducto.ubicacionproduSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeUbicacionProdu(true);
			this.jInternalFrameDetalleFormProducto.ubicacionproduSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeUbicacionProdu(ProductoConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormProducto.ubicacionproduSessionBean.setisBusquedaDesdeForeignKeySesionProducto(true);
			this.jInternalFrameDetalleFormProducto.ubicacionproduSessionBean.setlidProductoActual(this.idProductoActual);

			productoSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyProducto(true);
			productoSessionBean.setlIdProductoActualForeignKey(this.idProductoActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionProductoParaParametroProductos() throws Exception {
		Boolean isPaginaPopupParametroProducto=false;

		try {

			if(this.productoSessionBean==null) {
				this.productoSessionBean=new ProductoSessionBean();
			}

			if(this.jInternalFrameDetalleFormProducto.parametroproductoSessionBean==null) {
				this.jInternalFrameDetalleFormProducto.parametroproductoSessionBean=new ParametroProductoSessionBean();
			}

			this.jInternalFrameDetalleFormProducto.parametroproductoSessionBean.setsPathNavegacionActual(productoSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+ParametroProductoConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormProducto.parametroproductoSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupParametroProducto=this.jInternalFrameDetalleFormProducto.parametroproductoSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormProducto.parametroproductoSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeParametroProducto(true);
			this.jInternalFrameDetalleFormProducto.parametroproductoSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeParametroProducto(ProductoConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormProducto.parametroproductoSessionBean.setisBusquedaDesdeForeignKeySesionProducto(true);
			this.jInternalFrameDetalleFormProducto.parametroproductoSessionBean.setlidProductoActual(this.idProductoActual);

			productoSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyProducto(true);
			productoSessionBean.setlIdProductoActualForeignKey(this.idProductoActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionProductoParaProductoUnidads() throws Exception {
		Boolean isPaginaPopupProductoUnidad=false;

		try {

			if(this.productoSessionBean==null) {
				this.productoSessionBean=new ProductoSessionBean();
			}

			if(this.jInternalFrameDetalleFormProducto.productounidadSessionBean==null) {
				this.jInternalFrameDetalleFormProducto.productounidadSessionBean=new ProductoUnidadSessionBean();
			}

			this.jInternalFrameDetalleFormProducto.productounidadSessionBean.setsPathNavegacionActual(productoSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+ProductoUnidadConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormProducto.productounidadSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupProductoUnidad=this.jInternalFrameDetalleFormProducto.productounidadSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormProducto.productounidadSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeProductoUnidad(true);
			this.jInternalFrameDetalleFormProducto.productounidadSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeProductoUnidad(ProductoConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormProducto.productounidadSessionBean.setisBusquedaDesdeForeignKeySesionProducto(true);
			this.jInternalFrameDetalleFormProducto.productounidadSessionBean.setlidProductoActual(this.idProductoActual);

			productoSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyProducto(true);
			productoSessionBean.setlIdProductoActualForeignKey(this.idProductoActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionProductoRelacionParaIngredientes() throws Exception {
		Boolean isPaginaPopupIngrediente=false;

		try {

			if(this.productoSessionBean==null) {
				this.productoSessionBean=new ProductoSessionBean();
			}

			if(this.jInternalFrameDetalleFormProducto.ingredienteSessionBean==null) {
				this.jInternalFrameDetalleFormProducto.ingredienteSessionBean=new IngredienteSessionBean();
			}

			this.jInternalFrameDetalleFormProducto.ingredienteSessionBean.setsPathNavegacionActual(productoSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+IngredienteConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormProducto.ingredienteSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupIngrediente=this.jInternalFrameDetalleFormProducto.ingredienteSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormProducto.ingredienteSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeIngrediente(true);
			this.jInternalFrameDetalleFormProducto.ingredienteSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeIngrediente(ProductoConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormProducto.ingredienteSessionBean.setisBusquedaDesdeForeignKeySesionProductoRelacion(true);
			this.jInternalFrameDetalleFormProducto.ingredienteSessionBean.setlidProductoRelacionActual(this.idProductoActual);

			productoSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyProducto(true);
			productoSessionBean.setlIdProductoActualForeignKey(this.idProductoActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionProductoParaProductoCaracs() throws Exception {
		Boolean isPaginaPopupProductoCarac=false;

		try {

			if(this.productoSessionBean==null) {
				this.productoSessionBean=new ProductoSessionBean();
			}

			if(this.jInternalFrameDetalleFormProducto.productocaracSessionBean==null) {
				this.jInternalFrameDetalleFormProducto.productocaracSessionBean=new ProductoCaracSessionBean();
			}

			this.jInternalFrameDetalleFormProducto.productocaracSessionBean.setsPathNavegacionActual(productoSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+ProductoCaracConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormProducto.productocaracSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupProductoCarac=this.jInternalFrameDetalleFormProducto.productocaracSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormProducto.productocaracSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeProductoCarac(true);
			this.jInternalFrameDetalleFormProducto.productocaracSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeProductoCarac(ProductoConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormProducto.productocaracSessionBean.setisBusquedaDesdeForeignKeySesionProducto(true);
			this.jInternalFrameDetalleFormProducto.productocaracSessionBean.setlidProductoActual(this.idProductoActual);

			productoSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyProducto(true);
			productoSessionBean.setlIdProductoActualForeignKey(this.idProductoActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionProductoParaServicioClientes() throws Exception {
		Boolean isPaginaPopupServicioCliente=false;

		try {

			if(this.productoSessionBean==null) {
				this.productoSessionBean=new ProductoSessionBean();
			}

			if(this.jInternalFrameDetalleFormProducto.servicioclienteSessionBean==null) {
				this.jInternalFrameDetalleFormProducto.servicioclienteSessionBean=new ServicioClienteSessionBean();
			}

			this.jInternalFrameDetalleFormProducto.servicioclienteSessionBean.setsPathNavegacionActual(productoSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+ServicioClienteConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormProducto.servicioclienteSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupServicioCliente=this.jInternalFrameDetalleFormProducto.servicioclienteSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormProducto.servicioclienteSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeServicioCliente(true);
			this.jInternalFrameDetalleFormProducto.servicioclienteSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeServicioCliente(ProductoConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormProducto.servicioclienteSessionBean.setisBusquedaDesdeForeignKeySesionProducto(true);
			this.jInternalFrameDetalleFormProducto.servicioclienteSessionBean.setlidProductoActual(this.idProductoActual);

			productoSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyProducto(true);
			productoSessionBean.setlIdProductoActualForeignKey(this.idProductoActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionProductoRelacionParaProductoPromocions() throws Exception {
		Boolean isPaginaPopupProductoPromocion=false;

		try {

			if(this.productoSessionBean==null) {
				this.productoSessionBean=new ProductoSessionBean();
			}

			if(this.jInternalFrameDetalleFormProducto.productopromocionSessionBean==null) {
				this.jInternalFrameDetalleFormProducto.productopromocionSessionBean=new ProductoPromocionSessionBean();
			}

			this.jInternalFrameDetalleFormProducto.productopromocionSessionBean.setsPathNavegacionActual(productoSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+ProductoPromocionConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormProducto.productopromocionSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupProductoPromocion=this.jInternalFrameDetalleFormProducto.productopromocionSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormProducto.productopromocionSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeProductoPromocion(true);
			this.jInternalFrameDetalleFormProducto.productopromocionSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeProductoPromocion(ProductoConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormProducto.productopromocionSessionBean.setisBusquedaDesdeForeignKeySesionProductoRelacion(true);
			this.jInternalFrameDetalleFormProducto.productopromocionSessionBean.setlidProductoRelacionActual(this.idProductoActual);

			productoSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyProducto(true);
			productoSessionBean.setlIdProductoActualForeignKey(this.idProductoActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionProductoParaProductoEspecis() throws Exception {
		Boolean isPaginaPopupProductoEspeci=false;

		try {

			if(this.productoSessionBean==null) {
				this.productoSessionBean=new ProductoSessionBean();
			}

			if(this.jInternalFrameDetalleFormProducto.productoespeciSessionBean==null) {
				this.jInternalFrameDetalleFormProducto.productoespeciSessionBean=new ProductoEspeciSessionBean();
			}

			this.jInternalFrameDetalleFormProducto.productoespeciSessionBean.setsPathNavegacionActual(productoSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+ProductoEspeciConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormProducto.productoespeciSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupProductoEspeci=this.jInternalFrameDetalleFormProducto.productoespeciSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormProducto.productoespeciSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeProductoEspeci(true);
			this.jInternalFrameDetalleFormProducto.productoespeciSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeProductoEspeci(ProductoConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormProducto.productoespeciSessionBean.setisBusquedaDesdeForeignKeySesionProducto(true);
			this.jInternalFrameDetalleFormProducto.productoespeciSessionBean.setlidProductoActual(this.idProductoActual);

			productoSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyProducto(true);
			productoSessionBean.setlIdProductoActualForeignKey(this.idProductoActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionProductoParaProductoReemplas() throws Exception {
		Boolean isPaginaPopupProductoReempla=false;

		try {

			if(this.productoSessionBean==null) {
				this.productoSessionBean=new ProductoSessionBean();
			}

			if(this.jInternalFrameDetalleFormProducto.productoreemplaSessionBean==null) {
				this.jInternalFrameDetalleFormProducto.productoreemplaSessionBean=new ProductoReemplaSessionBean();
			}

			this.jInternalFrameDetalleFormProducto.productoreemplaSessionBean.setsPathNavegacionActual(productoSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+ProductoReemplaConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormProducto.productoreemplaSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupProductoReempla=this.jInternalFrameDetalleFormProducto.productoreemplaSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormProducto.productoreemplaSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeProductoReempla(true);
			this.jInternalFrameDetalleFormProducto.productoreemplaSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeProductoReempla(ProductoConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormProducto.productoreemplaSessionBean.setisBusquedaDesdeForeignKeySesionProducto(true);
			this.jInternalFrameDetalleFormProducto.productoreemplaSessionBean.setlidProductoActual(this.idProductoActual);

			productoSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyProducto(true);
			productoSessionBean.setlIdProductoActualForeignKey(this.idProductoActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionProductoParaProductoEstadisticas() throws Exception {
		Boolean isPaginaPopupProductoEstadistica=false;

		try {

			if(this.productoSessionBean==null) {
				this.productoSessionBean=new ProductoSessionBean();
			}

			if(this.jInternalFrameDetalleFormProducto.productoestadisticaSessionBean==null) {
				this.jInternalFrameDetalleFormProducto.productoestadisticaSessionBean=new ProductoEstadisticaSessionBean();
			}

			this.jInternalFrameDetalleFormProducto.productoestadisticaSessionBean.setsPathNavegacionActual(productoSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+ProductoEstadisticaConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormProducto.productoestadisticaSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupProductoEstadistica=this.jInternalFrameDetalleFormProducto.productoestadisticaSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormProducto.productoestadisticaSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeProductoEstadistica(true);
			this.jInternalFrameDetalleFormProducto.productoestadisticaSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeProductoEstadistica(ProductoConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormProducto.productoestadisticaSessionBean.setisBusquedaDesdeForeignKeySesionProducto(true);
			this.jInternalFrameDetalleFormProducto.productoestadisticaSessionBean.setlidProductoActual(this.idProductoActual);

			productoSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyProducto(true);
			productoSessionBean.setlIdProductoActualForeignKey(this.idProductoActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionProductoParaPoliticaFactus() throws Exception {
		Boolean isPaginaPopupPoliticaFactu=false;

		try {

			if(this.productoSessionBean==null) {
				this.productoSessionBean=new ProductoSessionBean();
			}

			if(this.jInternalFrameDetalleFormProducto.politicafactuSessionBean==null) {
				this.jInternalFrameDetalleFormProducto.politicafactuSessionBean=new PoliticaFactuSessionBean();
			}

			this.jInternalFrameDetalleFormProducto.politicafactuSessionBean.setsPathNavegacionActual(productoSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+PoliticaFactuConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormProducto.politicafactuSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupPoliticaFactu=this.jInternalFrameDetalleFormProducto.politicafactuSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormProducto.politicafactuSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdePoliticaFactu(true);
			this.jInternalFrameDetalleFormProducto.politicafactuSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdePoliticaFactu(ProductoConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormProducto.politicafactuSessionBean.setisBusquedaDesdeForeignKeySesionProducto(true);
			this.jInternalFrameDetalleFormProducto.politicafactuSessionBean.setlidProductoActual(this.idProductoActual);

			productoSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyProducto(true);
			productoSessionBean.setlIdProductoActualForeignKey(this.idProductoActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionProductoParaProductoCuentaContables() throws Exception {
		Boolean isPaginaPopupProductoCuentaContable=false;

		try {

			if(this.productoSessionBean==null) {
				this.productoSessionBean=new ProductoSessionBean();
			}

			if(this.jInternalFrameDetalleFormProducto.productocuentacontableSessionBean==null) {
				this.jInternalFrameDetalleFormProducto.productocuentacontableSessionBean=new ProductoCuentaContableSessionBean();
			}

			this.jInternalFrameDetalleFormProducto.productocuentacontableSessionBean.setsPathNavegacionActual(productoSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+ProductoCuentaContableConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormProducto.productocuentacontableSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupProductoCuentaContable=this.jInternalFrameDetalleFormProducto.productocuentacontableSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormProducto.productocuentacontableSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeProductoCuentaContable(true);
			this.jInternalFrameDetalleFormProducto.productocuentacontableSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeProductoCuentaContable(ProductoConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormProducto.productocuentacontableSessionBean.setisBusquedaDesdeForeignKeySesionProducto(true);
			this.jInternalFrameDetalleFormProducto.productocuentacontableSessionBean.setlidProductoActual(this.idProductoActual);

			productoSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyProducto(true);
			productoSessionBean.setlIdProductoActualForeignKey(this.idProductoActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionProductoParaBodegaProductos() throws Exception {
		Boolean isPaginaPopupBodegaProducto=false;

		try {

			if(this.productoSessionBean==null) {
				this.productoSessionBean=new ProductoSessionBean();
			}

			if(this.jInternalFrameDetalleFormProducto.bodegaproductoSessionBean==null) {
				this.jInternalFrameDetalleFormProducto.bodegaproductoSessionBean=new BodegaProductoSessionBean();
			}

			this.jInternalFrameDetalleFormProducto.bodegaproductoSessionBean.setsPathNavegacionActual(productoSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+BodegaProductoConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormProducto.bodegaproductoSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupBodegaProducto=this.jInternalFrameDetalleFormProducto.bodegaproductoSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormProducto.bodegaproductoSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeBodegaProducto(true);
			this.jInternalFrameDetalleFormProducto.bodegaproductoSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeBodegaProducto(ProductoConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormProducto.bodegaproductoSessionBean.setisBusquedaDesdeForeignKeySesionProducto(true);
			this.jInternalFrameDetalleFormProducto.bodegaproductoSessionBean.setlidProductoActual(this.idProductoActual);

			productoSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyProducto(true);
			productoSessionBean.setlIdProductoActualForeignKey(this.idProductoActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionProductoParaPresupuestoProductos() throws Exception {
		Boolean isPaginaPopupPresupuestoProducto=false;

		try {

			if(this.productoSessionBean==null) {
				this.productoSessionBean=new ProductoSessionBean();
			}

			if(this.jInternalFrameDetalleFormProducto.presupuestoproductoSessionBean==null) {
				this.jInternalFrameDetalleFormProducto.presupuestoproductoSessionBean=new PresupuestoProductoSessionBean();
			}

			this.jInternalFrameDetalleFormProducto.presupuestoproductoSessionBean.setsPathNavegacionActual(productoSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+PresupuestoProductoConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormProducto.presupuestoproductoSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupPresupuestoProducto=this.jInternalFrameDetalleFormProducto.presupuestoproductoSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormProducto.presupuestoproductoSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdePresupuestoProducto(true);
			this.jInternalFrameDetalleFormProducto.presupuestoproductoSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdePresupuestoProducto(ProductoConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormProducto.presupuestoproductoSessionBean.setisBusquedaDesdeForeignKeySesionProducto(true);
			this.jInternalFrameDetalleFormProducto.presupuestoproductoSessionBean.setlidProductoActual(this.idProductoActual);

			productoSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyProducto(true);
			productoSessionBean.setlIdProductoActualForeignKey(this.idProductoActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionProductoParaSaldoMesProductos() throws Exception {
		Boolean isPaginaPopupSaldoMesProducto=false;

		try {

			if(this.productoSessionBean==null) {
				this.productoSessionBean=new ProductoSessionBean();
			}

			if(this.jInternalFrameDetalleFormProducto.saldomesproductoSessionBean==null) {
				this.jInternalFrameDetalleFormProducto.saldomesproductoSessionBean=new SaldoMesProductoSessionBean();
			}

			this.jInternalFrameDetalleFormProducto.saldomesproductoSessionBean.setsPathNavegacionActual(productoSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+SaldoMesProductoConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormProducto.saldomesproductoSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupSaldoMesProducto=this.jInternalFrameDetalleFormProducto.saldomesproductoSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormProducto.saldomesproductoSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeSaldoMesProducto(true);
			this.jInternalFrameDetalleFormProducto.saldomesproductoSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeSaldoMesProducto(ProductoConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormProducto.saldomesproductoSessionBean.setisBusquedaDesdeForeignKeySesionProducto(true);
			this.jInternalFrameDetalleFormProducto.saldomesproductoSessionBean.setlidProductoActual(this.idProductoActual);

			productoSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyProducto(true);
			productoSessionBean.setlIdProductoActualForeignKey(this.idProductoActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}
	
	

	public String registrarSesionProductoParaBusquedaClientes() throws Exception {
		Boolean isPaginaPopupCliente=false;

		try {

			if(productoSessionBean==null) {
				productoSessionBean=new ProductoSessionBean();
			}

			if(clienteSessionBean==null) {
				clienteSessionBean=new ClienteSessionBean();
			}

			clienteSessionBean.setsPathNavegacionActual(productoSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+ClienteConstantesFunciones.SCLASSWEBTITULO);
			clienteSessionBean.setisPermiteRecargarInformacion(false);
			clienteSessionBean.setisPaginaPopup(true);
			isPaginaPopupCliente=clienteSessionBean.getisPaginaPopup();
			clienteSessionBean.setisPaginaPopup(false);
			clienteSessionBean.setEstaModoBusqueda(true);
			clienteSessionBean.setsFuncionBusquedaRapida("window.opener.productoFuncionGeneral.setCombosCodigoDesdeBusquedaid_cliente(TO_REPLACE);");
			clienteSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeCliente(true);
			clienteSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeCliente(ProductoConstantesFunciones.SNOMBREOPCION);
			//clienteSessionBean.setisBusquedaDesdeForeignKeySesionProducto(true);
			//clienteSessionBean.setlidProductoActual(this.idProductoActual);

			productoSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyProducto(true);
			productoSessionBean.setlIdProductoActualForeignKey(this.idProductoActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}

	public String registrarSesionProductoParaBusquedaClienteProveedorDefectos() throws Exception {
		Boolean isPaginaPopupCliente=false;

		try {

			if(productoSessionBean==null) {
				productoSessionBean=new ProductoSessionBean();
			}

			if(clienteproveedordefectoSessionBean==null) {
				clienteproveedordefectoSessionBean=new ClienteSessionBean();
			}

			clienteproveedordefectoSessionBean.setsPathNavegacionActual(productoSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+ClienteConstantesFunciones.SCLASSWEBTITULO);
			clienteproveedordefectoSessionBean.setisPermiteRecargarInformacion(false);
			clienteproveedordefectoSessionBean.setisPaginaPopup(true);
			isPaginaPopupCliente=clienteproveedordefectoSessionBean.getisPaginaPopup();
			clienteproveedordefectoSessionBean.setisPaginaPopup(false);
			clienteproveedordefectoSessionBean.setEstaModoBusqueda(true);
			clienteproveedordefectoSessionBean.setsFuncionBusquedaRapida("window.opener.productoFuncionGeneral.setCombosCodigoDesdeBusquedaid_cliente_proveedor_defecto(TO_REPLACE);");
			clienteproveedordefectoSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeCliente(true);
			clienteproveedordefectoSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeCliente(ProductoConstantesFunciones.SNOMBREOPCION);
			//clienteSessionBean.setisBusquedaDesdeForeignKeySesionProducto(true);
			//clienteSessionBean.setlidProductoActual(this.idProductoActual);

			productoSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyProducto(true);
			productoSessionBean.setlIdProductoActualForeignKey(this.idProductoActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}
	
	
	public void guardarDatosBusquedaSession() throws Exception {
		
		//ProductoSessionBean productoSessionBean=new ProductoSessionBean();
		
		if(this.productoSessionBean==null) {
			this.productoSessionBean=new ProductoSessionBean();
		}
		
		this.productoSessionBean.setsUltimaBusquedaProducto(this.getsAccionBusqueda());
		this.productoSessionBean.setiNumeroPaginacion(this.getiNumeroPaginacion());
		this.productoSessionBean.setiNumeroPaginacionPagina(this.getiNumeroPaginacionPagina());
		
		if(this.getsAccionBusqueda().equals("Todos")) {
			;
		}
		

		else if(this.getsAccionBusqueda().equals("BusquedaPorCodigo")) {
			productoSessionBean.setcodigo(this.getcodigoBusquedaPorCodigo());	
		}
		else if(this.getsAccionBusqueda().equals("BusquedaPorNombre")) {
			productoSessionBean.setnombre(this.getnombreBusquedaPorNombre());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdClaseProducto")) {
			productoSessionBean.setid_clase_producto(this.getid_clase_productoFK_IdClaseProducto());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdCliente")) {
			productoSessionBean.setid_cliente(this.getid_clienteFK_IdCliente());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdClienteProveedorDefecto")) {
			productoSessionBean.setid_cliente_proveedor_defecto(this.getid_cliente_proveedor_defectoFK_IdClienteProveedorDefecto());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
			productoSessionBean.setid_empresa(this.getid_empresaFK_IdEmpresa());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdLinea")) {
			productoSessionBean.setid_linea(this.getid_lineaFK_IdLinea());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdMarcaProducto")) {
			productoSessionBean.setid_marca_producto(this.getid_marca_productoFK_IdMarcaProducto());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdModeloProducto")) {
			productoSessionBean.setid_modelo_producto(this.getid_modelo_productoFK_IdModeloProducto());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
			productoSessionBean.setid_sucursal(this.getid_sucursalFK_IdSucursal());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoProducto")) {
			productoSessionBean.setid_tipo_producto(this.getid_tipo_productoFK_IdTipoProducto());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoProductoServicio")) {
			productoSessionBean.setid_tipo_producto_servicio(this.getid_tipo_producto_servicioFK_IdTipoProductoServicio());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoProductoServicioInven")) {
			productoSessionBean.setid_tipo_producto_servicio_inven(this.getid_tipo_producto_servicio_invenFK_IdTipoProductoServicioInven());	
		}
		
	}
	
	public void traerDatosBusquedaDesdeSession() throws Exception {
		//ProductoSessionBean productoSessionBean=new ProductoSessionBean();
		
		if(this.productoSessionBean==null) {
			this.productoSessionBean=new ProductoSessionBean();
		}
		
		if(this.productoSessionBean.getsUltimaBusquedaProducto()!=null&&!this.productoSessionBean.getsUltimaBusquedaProducto().equals("")) {
			this.setsAccionBusqueda(productoSessionBean.getsUltimaBusquedaProducto());
			this.setiNumeroPaginacion(productoSessionBean.getiNumeroPaginacion());
			this.setiNumeroPaginacionPagina(productoSessionBean.getiNumeroPaginacionPagina());		
				
			if(this.getsAccionBusqueda().equals("Todos")) {
				;
			}
			

			 else if(this.getsAccionBusqueda().equals("BusquedaPorCodigo")) {
				this.setcodigoBusquedaPorCodigo(productoSessionBean.getcodigo());
				productoSessionBean.setcodigo("");
			}
			 else if(this.getsAccionBusqueda().equals("BusquedaPorNombre")) {
				this.setnombreBusquedaPorNombre(productoSessionBean.getnombre());
				productoSessionBean.setnombre("");
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdClaseProducto")) {
				this.setid_clase_productoFK_IdClaseProducto(productoSessionBean.getid_clase_producto());
				productoSessionBean.setid_clase_producto(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdCliente")) {
				this.setid_clienteFK_IdCliente(productoSessionBean.getid_cliente());
				productoSessionBean.setid_cliente(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdClienteProveedorDefecto")) {
				this.setid_cliente_proveedor_defectoFK_IdClienteProveedorDefecto(productoSessionBean.getid_cliente_proveedor_defecto());
				productoSessionBean.setid_cliente_proveedor_defecto(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
				this.setid_empresaFK_IdEmpresa(productoSessionBean.getid_empresa());
				productoSessionBean.setid_empresa(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdLinea")) {
				this.setid_lineaFK_IdLinea(productoSessionBean.getid_linea());
				productoSessionBean.setid_linea(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdMarcaProducto")) {
				this.setid_marca_productoFK_IdMarcaProducto(productoSessionBean.getid_marca_producto());
				productoSessionBean.setid_marca_producto(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdModeloProducto")) {
				this.setid_modelo_productoFK_IdModeloProducto(productoSessionBean.getid_modelo_producto());
				productoSessionBean.setid_modelo_producto(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
				this.setid_sucursalFK_IdSucursal(productoSessionBean.getid_sucursal());
				productoSessionBean.setid_sucursal(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoProducto")) {
				this.setid_tipo_productoFK_IdTipoProducto(productoSessionBean.getid_tipo_producto());
				productoSessionBean.setid_tipo_producto(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoProductoServicio")) {
				this.setid_tipo_producto_servicioFK_IdTipoProductoServicio(productoSessionBean.getid_tipo_producto_servicio());
				productoSessionBean.setid_tipo_producto_servicio(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoProductoServicioInven")) {
				this.setid_tipo_producto_servicio_invenFK_IdTipoProductoServicioInven(productoSessionBean.getid_tipo_producto_servicio_inven());
				productoSessionBean.setid_tipo_producto_servicio_inven(-1L);
			}
		}
		
		this.productoSessionBean.setsUltimaBusquedaProducto("");
		this.productoSessionBean.setiNumeroPaginacion(ProductoConstantesFunciones.INUMEROPAGINACION);
		this.productoSessionBean.setiNumeroPaginacionPagina(0);
		
	}
	
	public void procesoActualizarFilaTotales(Boolean esCampoValor,String sTipo) {
		try {
			this.actualizarFilaTotales();
				
			this.traerValoresTablaTotales();
			
			this.inicializarActualizarBindingTablaProducto(false);
			
			
			
			
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	
	public void updateBusquedasFormularioProducto() {
		this.updateBorderResaltarBusquedasFormularioProducto();
		this.updateVisibilidadBusquedasFormularioProducto();
		this.updateHabilitarBusquedasFormularioProducto();
	}
	
	public void updateBorderResaltarBusquedasFormularioProducto() {					
	//BYDAN_BUSQUEDAS
		
	int index=0;
		
	if(this.jTabbedPaneBusquedasProducto.getComponents().length>0) {
	

		if(this.productoConstantesFunciones.resaltarBusquedaPorCodigoProducto!=null) {
			index= this.jTabbedPaneBusquedasProducto.indexOfComponent(this.jPanelBusquedaPorCodigoProducto);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasProducto.getComponent(index);
				jPanel.setBorder(this.productoConstantesFunciones.resaltarBusquedaPorCodigoProducto);
			}
		}

		if(this.productoConstantesFunciones.resaltarBusquedaPorNombreProducto!=null) {
			index= this.jTabbedPaneBusquedasProducto.indexOfComponent(this.jPanelBusquedaPorNombreProducto);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasProducto.getComponent(index);
				jPanel.setBorder(this.productoConstantesFunciones.resaltarBusquedaPorNombreProducto);
			}
		}

		if(this.productoConstantesFunciones.resaltarFK_IdClaseProductoProducto!=null) {
			index= this.jTabbedPaneBusquedasProducto.indexOfComponent(this.jPanelFK_IdClaseProductoProducto);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasProducto.getComponent(index);
				jPanel.setBorder(this.productoConstantesFunciones.resaltarFK_IdClaseProductoProducto);
			}
		}

		if(this.productoConstantesFunciones.resaltarFK_IdClienteProducto!=null) {
			index= this.jTabbedPaneBusquedasProducto.indexOfComponent(this.jPanelFK_IdClienteProducto);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasProducto.getComponent(index);
				jPanel.setBorder(this.productoConstantesFunciones.resaltarFK_IdClienteProducto);
			}
		}

		if(this.productoConstantesFunciones.resaltarFK_IdClienteProveedorDefectoProducto!=null) {
			index= this.jTabbedPaneBusquedasProducto.indexOfComponent(this.jPanelFK_IdClienteProveedorDefectoProducto);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasProducto.getComponent(index);
				jPanel.setBorder(this.productoConstantesFunciones.resaltarFK_IdClienteProveedorDefectoProducto);
			}
		}

		if(this.productoConstantesFunciones.resaltarFK_IdLineaProducto!=null) {
			index= this.jTabbedPaneBusquedasProducto.indexOfComponent(this.jPanelFK_IdLineaProducto);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasProducto.getComponent(index);
				jPanel.setBorder(this.productoConstantesFunciones.resaltarFK_IdLineaProducto);
			}
		}

		if(this.productoConstantesFunciones.resaltarFK_IdMarcaProductoProducto!=null) {
			index= this.jTabbedPaneBusquedasProducto.indexOfComponent(this.jPanelFK_IdMarcaProductoProducto);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasProducto.getComponent(index);
				jPanel.setBorder(this.productoConstantesFunciones.resaltarFK_IdMarcaProductoProducto);
			}
		}

		if(this.productoConstantesFunciones.resaltarFK_IdModeloProductoProducto!=null) {
			index= this.jTabbedPaneBusquedasProducto.indexOfComponent(this.jPanelFK_IdModeloProductoProducto);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasProducto.getComponent(index);
				jPanel.setBorder(this.productoConstantesFunciones.resaltarFK_IdModeloProductoProducto);
			}
		}

		if(this.productoConstantesFunciones.resaltarFK_IdTipoProductoProducto!=null) {
			index= this.jTabbedPaneBusquedasProducto.indexOfComponent(this.jPanelFK_IdTipoProductoProducto);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasProducto.getComponent(index);
				jPanel.setBorder(this.productoConstantesFunciones.resaltarFK_IdTipoProductoProducto);
			}
		}

		if(this.productoConstantesFunciones.resaltarFK_IdTipoProductoServicioProducto!=null) {
			index= this.jTabbedPaneBusquedasProducto.indexOfComponent(this.jPanelFK_IdTipoProductoServicioProducto);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasProducto.getComponent(index);
				jPanel.setBorder(this.productoConstantesFunciones.resaltarFK_IdTipoProductoServicioProducto);
			}
		}

		if(this.productoConstantesFunciones.resaltarFK_IdTipoProductoServicioInvenProducto!=null) {
			index= this.jTabbedPaneBusquedasProducto.indexOfComponent(this.jPanelFK_IdTipoProductoServicioInvenProducto);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasProducto.getComponent(index);
				jPanel.setBorder(this.productoConstantesFunciones.resaltarFK_IdTipoProductoServicioInvenProducto);
			}
		}
	}	
	
	}
	
	public void updateVisibilidadBusquedasFormularioProducto() {
	//BYDAN_BUSQUEDAS
	
	int index=0;
	JPanel jPanel=null;
		
	if(this.jTabbedPaneBusquedasProducto.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasProducto.indexOfComponent(this.jPanelBusquedaPorCodigoProducto);
			jPanel=(JPanel)this.jTabbedPaneBusquedasProducto.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.productoConstantesFunciones.mostrarBusquedaPorCodigoProducto);
			if(!this.productoConstantesFunciones.mostrarBusquedaPorCodigoProducto && index>-1) {
				this.jTabbedPaneBusquedasProducto.remove(index);
			}

			index= this.jTabbedPaneBusquedasProducto.indexOfComponent(this.jPanelBusquedaPorNombreProducto);
			jPanel=(JPanel)this.jTabbedPaneBusquedasProducto.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.productoConstantesFunciones.mostrarBusquedaPorNombreProducto);
			if(!this.productoConstantesFunciones.mostrarBusquedaPorNombreProducto && index>-1) {
				this.jTabbedPaneBusquedasProducto.remove(index);
			}

			index= this.jTabbedPaneBusquedasProducto.indexOfComponent(this.jPanelFK_IdClaseProductoProducto);
			jPanel=(JPanel)this.jTabbedPaneBusquedasProducto.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.productoConstantesFunciones.mostrarFK_IdClaseProductoProducto);
			if(!this.productoConstantesFunciones.mostrarFK_IdClaseProductoProducto && index>-1) {
				this.jTabbedPaneBusquedasProducto.remove(index);
			}

			index= this.jTabbedPaneBusquedasProducto.indexOfComponent(this.jPanelFK_IdClienteProducto);
			jPanel=(JPanel)this.jTabbedPaneBusquedasProducto.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.productoConstantesFunciones.mostrarFK_IdClienteProducto);
			if(!this.productoConstantesFunciones.mostrarFK_IdClienteProducto && index>-1) {
				this.jTabbedPaneBusquedasProducto.remove(index);
			}

			index= this.jTabbedPaneBusquedasProducto.indexOfComponent(this.jPanelFK_IdClienteProveedorDefectoProducto);
			jPanel=(JPanel)this.jTabbedPaneBusquedasProducto.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.productoConstantesFunciones.mostrarFK_IdClienteProveedorDefectoProducto);
			if(!this.productoConstantesFunciones.mostrarFK_IdClienteProveedorDefectoProducto && index>-1) {
				this.jTabbedPaneBusquedasProducto.remove(index);
			}

			index= this.jTabbedPaneBusquedasProducto.indexOfComponent(this.jPanelFK_IdLineaProducto);
			jPanel=(JPanel)this.jTabbedPaneBusquedasProducto.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.productoConstantesFunciones.mostrarFK_IdLineaProducto);
			if(!this.productoConstantesFunciones.mostrarFK_IdLineaProducto && index>-1) {
				this.jTabbedPaneBusquedasProducto.remove(index);
			}

			index= this.jTabbedPaneBusquedasProducto.indexOfComponent(this.jPanelFK_IdMarcaProductoProducto);
			jPanel=(JPanel)this.jTabbedPaneBusquedasProducto.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.productoConstantesFunciones.mostrarFK_IdMarcaProductoProducto);
			if(!this.productoConstantesFunciones.mostrarFK_IdMarcaProductoProducto && index>-1) {
				this.jTabbedPaneBusquedasProducto.remove(index);
			}

			index= this.jTabbedPaneBusquedasProducto.indexOfComponent(this.jPanelFK_IdModeloProductoProducto);
			jPanel=(JPanel)this.jTabbedPaneBusquedasProducto.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.productoConstantesFunciones.mostrarFK_IdModeloProductoProducto);
			if(!this.productoConstantesFunciones.mostrarFK_IdModeloProductoProducto && index>-1) {
				this.jTabbedPaneBusquedasProducto.remove(index);
			}

			index= this.jTabbedPaneBusquedasProducto.indexOfComponent(this.jPanelFK_IdTipoProductoProducto);
			jPanel=(JPanel)this.jTabbedPaneBusquedasProducto.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.productoConstantesFunciones.mostrarFK_IdTipoProductoProducto);
			if(!this.productoConstantesFunciones.mostrarFK_IdTipoProductoProducto && index>-1) {
				this.jTabbedPaneBusquedasProducto.remove(index);
			}

			index= this.jTabbedPaneBusquedasProducto.indexOfComponent(this.jPanelFK_IdTipoProductoServicioProducto);
			jPanel=(JPanel)this.jTabbedPaneBusquedasProducto.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.productoConstantesFunciones.mostrarFK_IdTipoProductoServicioProducto);
			if(!this.productoConstantesFunciones.mostrarFK_IdTipoProductoServicioProducto && index>-1) {
				this.jTabbedPaneBusquedasProducto.remove(index);
			}

			index= this.jTabbedPaneBusquedasProducto.indexOfComponent(this.jPanelFK_IdTipoProductoServicioInvenProducto);
			jPanel=(JPanel)this.jTabbedPaneBusquedasProducto.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.productoConstantesFunciones.mostrarFK_IdTipoProductoServicioInvenProducto);
			if(!this.productoConstantesFunciones.mostrarFK_IdTipoProductoServicioInvenProducto && index>-1) {
				this.jTabbedPaneBusquedasProducto.remove(index);
			}
	}	
	
	}
	
	public void updateHabilitarBusquedasFormularioProducto() {
	
	//BYDAN_BUSQUEDAS		
		int index=0;
		JPanel jPanel=null;
			
		if(this.jTabbedPaneBusquedasProducto.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasProducto.indexOfComponent(this.jPanelBusquedaPorCodigoProducto);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasProducto.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.productoConstantesFunciones.activarBusquedaPorCodigoProducto);
				this.jTabbedPaneBusquedasProducto.setEnabledAt(index,this.productoConstantesFunciones.activarBusquedaPorCodigoProducto);
			}

			index= this.jTabbedPaneBusquedasProducto.indexOfComponent(this.jPanelBusquedaPorNombreProducto);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasProducto.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.productoConstantesFunciones.activarBusquedaPorNombreProducto);
				this.jTabbedPaneBusquedasProducto.setEnabledAt(index,this.productoConstantesFunciones.activarBusquedaPorNombreProducto);
			}

			index= this.jTabbedPaneBusquedasProducto.indexOfComponent(this.jPanelFK_IdClaseProductoProducto);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasProducto.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.productoConstantesFunciones.activarFK_IdClaseProductoProducto);
				this.jTabbedPaneBusquedasProducto.setEnabledAt(index,this.productoConstantesFunciones.activarFK_IdClaseProductoProducto);
			}

			index= this.jTabbedPaneBusquedasProducto.indexOfComponent(this.jPanelFK_IdClienteProducto);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasProducto.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.productoConstantesFunciones.activarFK_IdClienteProducto);
				this.jTabbedPaneBusquedasProducto.setEnabledAt(index,this.productoConstantesFunciones.activarFK_IdClienteProducto);
			}

			index= this.jTabbedPaneBusquedasProducto.indexOfComponent(this.jPanelFK_IdClienteProveedorDefectoProducto);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasProducto.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.productoConstantesFunciones.activarFK_IdClienteProveedorDefectoProducto);
				this.jTabbedPaneBusquedasProducto.setEnabledAt(index,this.productoConstantesFunciones.activarFK_IdClienteProveedorDefectoProducto);
			}

			index= this.jTabbedPaneBusquedasProducto.indexOfComponent(this.jPanelFK_IdLineaProducto);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasProducto.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.productoConstantesFunciones.activarFK_IdLineaProducto);
				this.jTabbedPaneBusquedasProducto.setEnabledAt(index,this.productoConstantesFunciones.activarFK_IdLineaProducto);
			}

			index= this.jTabbedPaneBusquedasProducto.indexOfComponent(this.jPanelFK_IdMarcaProductoProducto);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasProducto.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.productoConstantesFunciones.activarFK_IdMarcaProductoProducto);
				this.jTabbedPaneBusquedasProducto.setEnabledAt(index,this.productoConstantesFunciones.activarFK_IdMarcaProductoProducto);
			}

			index= this.jTabbedPaneBusquedasProducto.indexOfComponent(this.jPanelFK_IdModeloProductoProducto);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasProducto.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.productoConstantesFunciones.activarFK_IdModeloProductoProducto);
				this.jTabbedPaneBusquedasProducto.setEnabledAt(index,this.productoConstantesFunciones.activarFK_IdModeloProductoProducto);
			}

			index= this.jTabbedPaneBusquedasProducto.indexOfComponent(this.jPanelFK_IdTipoProductoProducto);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasProducto.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.productoConstantesFunciones.activarFK_IdTipoProductoProducto);
				this.jTabbedPaneBusquedasProducto.setEnabledAt(index,this.productoConstantesFunciones.activarFK_IdTipoProductoProducto);
			}

			index= this.jTabbedPaneBusquedasProducto.indexOfComponent(this.jPanelFK_IdTipoProductoServicioProducto);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasProducto.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.productoConstantesFunciones.activarFK_IdTipoProductoServicioProducto);
				this.jTabbedPaneBusquedasProducto.setEnabledAt(index,this.productoConstantesFunciones.activarFK_IdTipoProductoServicioProducto);
			}

			index= this.jTabbedPaneBusquedasProducto.indexOfComponent(this.jPanelFK_IdTipoProductoServicioInvenProducto);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasProducto.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.productoConstantesFunciones.activarFK_IdTipoProductoServicioInvenProducto);
				this.jTabbedPaneBusquedasProducto.setEnabledAt(index,this.productoConstantesFunciones.activarFK_IdTipoProductoServicioInvenProducto);
			}
		}	
	
	}
	
	
	public void resaltarPanelBusquedaProducto(String sTipoBusqueda) {
		Boolean existe=false;
		//BYDAN_BUSQUEDAS
		
		int index=0;
		Border resaltar = Funciones2.getBorderResaltar(this.parametroGeneralUsuario,"TAB");

		if(sTipoBusqueda.equals("BusquedaPorCodigo")) {
			index= this.jTabbedPaneBusquedasProducto.indexOfComponent(this.jPanelBusquedaPorCodigoProducto);

			this.jTabbedPaneBusquedasProducto.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasProducto.getComponent(index);

			this.productoConstantesFunciones.setResaltarBusquedaPorCodigoProducto(resaltar);

			jPanel.setBorder(this.productoConstantesFunciones.resaltarBusquedaPorCodigoProducto);
			existe=true;
		}
		else if(sTipoBusqueda.equals("BusquedaPorNombre")) {
			index= this.jTabbedPaneBusquedasProducto.indexOfComponent(this.jPanelBusquedaPorNombreProducto);

			this.jTabbedPaneBusquedasProducto.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasProducto.getComponent(index);

			this.productoConstantesFunciones.setResaltarBusquedaPorNombreProducto(resaltar);

			jPanel.setBorder(this.productoConstantesFunciones.resaltarBusquedaPorNombreProducto);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdClaseProducto")) {
			index= this.jTabbedPaneBusquedasProducto.indexOfComponent(this.jPanelFK_IdClaseProductoProducto);

			this.jTabbedPaneBusquedasProducto.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasProducto.getComponent(index);

			this.productoConstantesFunciones.setResaltarFK_IdClaseProductoProducto(resaltar);

			jPanel.setBorder(this.productoConstantesFunciones.resaltarFK_IdClaseProductoProducto);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdCliente")) {
			index= this.jTabbedPaneBusquedasProducto.indexOfComponent(this.jPanelFK_IdClienteProducto);

			this.jTabbedPaneBusquedasProducto.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasProducto.getComponent(index);

			this.productoConstantesFunciones.setResaltarFK_IdClienteProducto(resaltar);

			jPanel.setBorder(this.productoConstantesFunciones.resaltarFK_IdClienteProducto);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdClienteProveedorDefecto")) {
			index= this.jTabbedPaneBusquedasProducto.indexOfComponent(this.jPanelFK_IdClienteProveedorDefectoProducto);

			this.jTabbedPaneBusquedasProducto.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasProducto.getComponent(index);

			this.productoConstantesFunciones.setResaltarFK_IdClienteProveedorDefectoProducto(resaltar);

			jPanel.setBorder(this.productoConstantesFunciones.resaltarFK_IdClienteProveedorDefectoProducto);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdLinea")) {
			index= this.jTabbedPaneBusquedasProducto.indexOfComponent(this.jPanelFK_IdLineaProducto);

			this.jTabbedPaneBusquedasProducto.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasProducto.getComponent(index);

			this.productoConstantesFunciones.setResaltarFK_IdLineaProducto(resaltar);

			jPanel.setBorder(this.productoConstantesFunciones.resaltarFK_IdLineaProducto);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdMarcaProducto")) {
			index= this.jTabbedPaneBusquedasProducto.indexOfComponent(this.jPanelFK_IdMarcaProductoProducto);

			this.jTabbedPaneBusquedasProducto.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasProducto.getComponent(index);

			this.productoConstantesFunciones.setResaltarFK_IdMarcaProductoProducto(resaltar);

			jPanel.setBorder(this.productoConstantesFunciones.resaltarFK_IdMarcaProductoProducto);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdModeloProducto")) {
			index= this.jTabbedPaneBusquedasProducto.indexOfComponent(this.jPanelFK_IdModeloProductoProducto);

			this.jTabbedPaneBusquedasProducto.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasProducto.getComponent(index);

			this.productoConstantesFunciones.setResaltarFK_IdModeloProductoProducto(resaltar);

			jPanel.setBorder(this.productoConstantesFunciones.resaltarFK_IdModeloProductoProducto);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoProducto")) {
			index= this.jTabbedPaneBusquedasProducto.indexOfComponent(this.jPanelFK_IdTipoProductoProducto);

			this.jTabbedPaneBusquedasProducto.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasProducto.getComponent(index);

			this.productoConstantesFunciones.setResaltarFK_IdTipoProductoProducto(resaltar);

			jPanel.setBorder(this.productoConstantesFunciones.resaltarFK_IdTipoProductoProducto);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoProductoServicio")) {
			index= this.jTabbedPaneBusquedasProducto.indexOfComponent(this.jPanelFK_IdTipoProductoServicioProducto);

			this.jTabbedPaneBusquedasProducto.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasProducto.getComponent(index);

			this.productoConstantesFunciones.setResaltarFK_IdTipoProductoServicioProducto(resaltar);

			jPanel.setBorder(this.productoConstantesFunciones.resaltarFK_IdTipoProductoServicioProducto);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoProductoServicioInven")) {
			index= this.jTabbedPaneBusquedasProducto.indexOfComponent(this.jPanelFK_IdTipoProductoServicioInvenProducto);

			this.jTabbedPaneBusquedasProducto.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasProducto.getComponent(index);

			this.productoConstantesFunciones.setResaltarFK_IdTipoProductoServicioInvenProducto(resaltar);

			jPanel.setBorder(this.productoConstantesFunciones.resaltarFK_IdTipoProductoServicioInvenProducto);
			existe=true;
		}
		

		if(existe) {
			
			this.jTtoolBarProducto.setBorder(resaltar);
			
		}
	}	
	
	//NO FUNCIONA
	public void windowClosed(WindowEvent e) {	
	}
		
	public void windowClosing(WindowEvent e) {	    	    
	}

	public void windowOpened(WindowEvent e) {	    
	}

	public void windowIconified(WindowEvent e) {	    
	}

	public void windowDeiconified(WindowEvent e) {	    
	}

	public void windowActivated(WindowEvent e) {	    
	}

	public void windowDeactivated(WindowEvent e) {	    
	}

	public void windowGainedFocus(WindowEvent e) {	    
	}

	public void windowLostFocus(WindowEvent e) {	    
	}
	
	public void updateControlesFormularioProducto() throws Exception {

		if(this.jInternalFrameDetalleFormProducto==null) { //if(!this.conCargarFormDetalle) {			
			this.inicializarFormDetalle();
		}
		
		this.updateBorderResaltarControlesFormularioProducto();
		this.updateVisibilidadResaltarControlesFormularioProducto();
		this.updateHabilitarResaltarControlesFormularioProducto();
		
	}
	
	public void updateBorderResaltarControlesFormularioProducto() throws Exception {
		if(this.jInternalFrameDetalleFormProducto==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
	
		if(this.productoConstantesFunciones.resaltaridProducto!=null && this.jInternalFrameDetalleFormProducto!=null) {this.jInternalFrameDetalleFormProducto.jLabelidProducto.setBorder(this.productoConstantesFunciones.resaltaridProducto);}
		if(this.productoConstantesFunciones.resaltarid_empresaProducto!=null && this.jInternalFrameDetalleFormProducto!=null) {this.jInternalFrameDetalleFormProducto.jComboBoxid_empresaProducto.setBorder(this.productoConstantesFunciones.resaltarid_empresaProducto);}
		if(this.productoConstantesFunciones.resaltarid_sucursalProducto!=null && this.jInternalFrameDetalleFormProducto!=null) {this.jInternalFrameDetalleFormProducto.jComboBoxid_sucursalProducto.setBorder(this.productoConstantesFunciones.resaltarid_sucursalProducto);}
		if(this.productoConstantesFunciones.resaltarcodigoProducto!=null && this.jInternalFrameDetalleFormProducto!=null) {this.jInternalFrameDetalleFormProducto.jTextFieldcodigoProducto.setBorder(this.productoConstantesFunciones.resaltarcodigoProducto);}
		if(this.productoConstantesFunciones.resaltarnombreProducto!=null && this.jInternalFrameDetalleFormProducto!=null) {this.jInternalFrameDetalleFormProducto.jTextAreanombreProducto.setBorder(this.productoConstantesFunciones.resaltarnombreProducto);}
		if(this.productoConstantesFunciones.resaltarnombre_extranjeroProducto!=null && this.jInternalFrameDetalleFormProducto!=null) {this.jInternalFrameDetalleFormProducto.jTextAreanombre_extranjeroProducto.setBorder(this.productoConstantesFunciones.resaltarnombre_extranjeroProducto);}
		if(this.productoConstantesFunciones.resaltarresumen_detalleProducto!=null && this.jInternalFrameDetalleFormProducto!=null) {this.jInternalFrameDetalleFormProducto.jTextArearesumen_detalleProducto.setBorder(this.productoConstantesFunciones.resaltarresumen_detalleProducto);}
		if(this.productoConstantesFunciones.resaltarcodigo_barraProducto!=null && this.jInternalFrameDetalleFormProducto!=null) {this.jInternalFrameDetalleFormProducto.jTextFieldcodigo_barraProducto.setBorder(this.productoConstantesFunciones.resaltarcodigo_barraProducto);}
		if(this.productoConstantesFunciones.resaltarid_lineaProducto!=null && this.jInternalFrameDetalleFormProducto!=null) {this.jInternalFrameDetalleFormProducto.jComboBoxid_lineaProducto.setBorder(this.productoConstantesFunciones.resaltarid_lineaProducto);}
		if(this.productoConstantesFunciones.resaltarid_linea_grupoProducto!=null && this.jInternalFrameDetalleFormProducto!=null) {this.jInternalFrameDetalleFormProducto.jComboBoxid_linea_grupoProducto.setBorder(this.productoConstantesFunciones.resaltarid_linea_grupoProducto);}
		if(this.productoConstantesFunciones.resaltarid_linea_categoriaProducto!=null && this.jInternalFrameDetalleFormProducto!=null) {this.jInternalFrameDetalleFormProducto.jComboBoxid_linea_categoriaProducto.setBorder(this.productoConstantesFunciones.resaltarid_linea_categoriaProducto);}
		if(this.productoConstantesFunciones.resaltarid_linea_marcaProducto!=null && this.jInternalFrameDetalleFormProducto!=null) {this.jInternalFrameDetalleFormProducto.jComboBoxid_linea_marcaProducto.setBorder(this.productoConstantesFunciones.resaltarid_linea_marcaProducto);}
		if(this.productoConstantesFunciones.resaltarid_tipo_producto_servicioProducto!=null && this.jInternalFrameDetalleFormProducto!=null) {this.jInternalFrameDetalleFormProducto.jComboBoxid_tipo_producto_servicioProducto.setBorder(this.productoConstantesFunciones.resaltarid_tipo_producto_servicioProducto);}
		if(this.productoConstantesFunciones.resaltarid_tipo_producto_servicio_invenProducto!=null && this.jInternalFrameDetalleFormProducto!=null) {this.jInternalFrameDetalleFormProducto.jComboBoxid_tipo_producto_servicio_invenProducto.setBorder(this.productoConstantesFunciones.resaltarid_tipo_producto_servicio_invenProducto);}
		if(this.productoConstantesFunciones.resaltarid_tipo_costeoProducto!=null && this.jInternalFrameDetalleFormProducto!=null) {this.jInternalFrameDetalleFormProducto.jComboBoxid_tipo_costeoProducto.setBorder(this.productoConstantesFunciones.resaltarid_tipo_costeoProducto);}
		if(this.productoConstantesFunciones.resaltarid_unidadProducto!=null && this.jInternalFrameDetalleFormProducto!=null) {this.jInternalFrameDetalleFormProducto.jComboBoxid_unidadProducto.setBorder(this.productoConstantesFunciones.resaltarid_unidadProducto);}
		if(this.productoConstantesFunciones.resaltarid_unidad_pesoProducto!=null && this.jInternalFrameDetalleFormProducto!=null) {this.jInternalFrameDetalleFormProducto.jComboBoxid_unidad_pesoProducto.setBorder(this.productoConstantesFunciones.resaltarid_unidad_pesoProducto);}
		if(this.productoConstantesFunciones.resaltarid_arancelProducto!=null && this.jInternalFrameDetalleFormProducto!=null) {this.jInternalFrameDetalleFormProducto.jComboBoxid_arancelProducto.setBorder(this.productoConstantesFunciones.resaltarid_arancelProducto);}
		if(this.productoConstantesFunciones.resaltarid_clienteProducto!=null && this.jInternalFrameDetalleFormProducto!=null) {this.jInternalFrameDetalleFormProducto.jComboBoxid_clienteProducto.setBorder(this.productoConstantesFunciones.resaltarid_clienteProducto);}
		if(this.productoConstantesFunciones.resaltarid_cliente_proveedor_defectoProducto!=null && this.jInternalFrameDetalleFormProducto!=null) {this.jInternalFrameDetalleFormProducto.jComboBoxid_cliente_proveedor_defectoProducto.setBorder(this.productoConstantesFunciones.resaltarid_cliente_proveedor_defectoProducto);}
		if(this.productoConstantesFunciones.resaltaresta_activoProducto!=null && this.jInternalFrameDetalleFormProducto!=null) {this.jInternalFrameDetalleFormProducto.jCheckBoxesta_activoProducto.setBorderPainted(true);this.jInternalFrameDetalleFormProducto.jCheckBoxesta_activoProducto.setBorder(this.productoConstantesFunciones.resaltaresta_activoProducto);}
		if(this.productoConstantesFunciones.resaltardescripcionProducto!=null && this.jInternalFrameDetalleFormProducto!=null) {this.jInternalFrameDetalleFormProducto.jTextAreadescripcionProducto.setBorder(this.productoConstantesFunciones.resaltardescripcionProducto);}
		if(this.productoConstantesFunciones.resaltarprecioProducto!=null && this.jInternalFrameDetalleFormProducto!=null) {this.jInternalFrameDetalleFormProducto.jTextFieldprecioProducto.setBorder(this.productoConstantesFunciones.resaltarprecioProducto);}
		if(this.productoConstantesFunciones.resaltarivaProducto!=null && this.jInternalFrameDetalleFormProducto!=null) {this.jInternalFrameDetalleFormProducto.jTextFieldivaProducto.setBorder(this.productoConstantesFunciones.resaltarivaProducto);}
		if(this.productoConstantesFunciones.resaltariva_valorProducto!=null && this.jInternalFrameDetalleFormProducto!=null) {this.jInternalFrameDetalleFormProducto.jTextFieldiva_valorProducto.setBorder(this.productoConstantesFunciones.resaltariva_valorProducto);}
		if(this.productoConstantesFunciones.resaltariceProducto!=null && this.jInternalFrameDetalleFormProducto!=null) {this.jInternalFrameDetalleFormProducto.jTextFieldiceProducto.setBorder(this.productoConstantesFunciones.resaltariceProducto);}
		if(this.productoConstantesFunciones.resaltarice_valorProducto!=null && this.jInternalFrameDetalleFormProducto!=null) {this.jInternalFrameDetalleFormProducto.jTextFieldice_valorProducto.setBorder(this.productoConstantesFunciones.resaltarice_valorProducto);}
		if(this.productoConstantesFunciones.resaltardescuentoProducto!=null && this.jInternalFrameDetalleFormProducto!=null) {this.jInternalFrameDetalleFormProducto.jTextFielddescuentoProducto.setBorder(this.productoConstantesFunciones.resaltardescuentoProducto);}
		if(this.productoConstantesFunciones.resaltardescuento_valorProducto!=null && this.jInternalFrameDetalleFormProducto!=null) {this.jInternalFrameDetalleFormProducto.jTextFielddescuento_valorProducto.setBorder(this.productoConstantesFunciones.resaltardescuento_valorProducto);}
		if(this.productoConstantesFunciones.resaltararancel_porcentajeProducto!=null && this.jInternalFrameDetalleFormProducto!=null) {this.jInternalFrameDetalleFormProducto.jTextFieldarancel_porcentajeProducto.setBorder(this.productoConstantesFunciones.resaltararancel_porcentajeProducto);}
		if(this.productoConstantesFunciones.resaltararancel_valorProducto!=null && this.jInternalFrameDetalleFormProducto!=null) {this.jInternalFrameDetalleFormProducto.jTextFieldarancel_valorProducto.setBorder(this.productoConstantesFunciones.resaltararancel_valorProducto);}
		if(this.productoConstantesFunciones.resaltarcomisionProducto!=null && this.jInternalFrameDetalleFormProducto!=null) {this.jInternalFrameDetalleFormProducto.jTextFieldcomisionProducto.setBorder(this.productoConstantesFunciones.resaltarcomisionProducto);}
		if(this.productoConstantesFunciones.resaltarcomision_valorProducto!=null && this.jInternalFrameDetalleFormProducto!=null) {this.jInternalFrameDetalleFormProducto.jTextFieldcomision_valorProducto.setBorder(this.productoConstantesFunciones.resaltarcomision_valorProducto);}
		if(this.productoConstantesFunciones.resaltardias_produccionProducto!=null && this.jInternalFrameDetalleFormProducto!=null) {this.jInternalFrameDetalleFormProducto.jTextFielddias_produccionProducto.setBorder(this.productoConstantesFunciones.resaltardias_produccionProducto);}
		if(this.productoConstantesFunciones.resaltarcon_stock_negativoProducto!=null && this.jInternalFrameDetalleFormProducto!=null) {this.jInternalFrameDetalleFormProducto.jCheckBoxcon_stock_negativoProducto.setBorderPainted(true);this.jInternalFrameDetalleFormProducto.jCheckBoxcon_stock_negativoProducto.setBorder(this.productoConstantesFunciones.resaltarcon_stock_negativoProducto);}
		if(this.productoConstantesFunciones.resaltarcon_precio_minimoProducto!=null && this.jInternalFrameDetalleFormProducto!=null) {this.jInternalFrameDetalleFormProducto.jCheckBoxcon_precio_minimoProducto.setBorderPainted(true);this.jInternalFrameDetalleFormProducto.jCheckBoxcon_precio_minimoProducto.setBorder(this.productoConstantesFunciones.resaltarcon_precio_minimoProducto);}
		if(this.productoConstantesFunciones.resaltarcon_loteProducto!=null && this.jInternalFrameDetalleFormProducto!=null) {this.jInternalFrameDetalleFormProducto.jCheckBoxcon_loteProducto.setBorderPainted(true);this.jInternalFrameDetalleFormProducto.jCheckBoxcon_loteProducto.setBorder(this.productoConstantesFunciones.resaltarcon_loteProducto);}
		if(this.productoConstantesFunciones.resaltarcon_confirmacionProducto!=null && this.jInternalFrameDetalleFormProducto!=null) {this.jInternalFrameDetalleFormProducto.jCheckBoxcon_confirmacionProducto.setBorderPainted(true);this.jInternalFrameDetalleFormProducto.jCheckBoxcon_confirmacionProducto.setBorder(this.productoConstantesFunciones.resaltarcon_confirmacionProducto);}
		if(this.productoConstantesFunciones.resaltarcon_presupuestoProducto!=null && this.jInternalFrameDetalleFormProducto!=null) {this.jInternalFrameDetalleFormProducto.jCheckBoxcon_presupuestoProducto.setBorderPainted(true);this.jInternalFrameDetalleFormProducto.jCheckBoxcon_presupuestoProducto.setBorder(this.productoConstantesFunciones.resaltarcon_presupuestoProducto);}
		if(this.productoConstantesFunciones.resaltarcon_importacionProducto!=null && this.jInternalFrameDetalleFormProducto!=null) {this.jInternalFrameDetalleFormProducto.jCheckBoxcon_importacionProducto.setBorderPainted(true);this.jInternalFrameDetalleFormProducto.jCheckBoxcon_importacionProducto.setBorder(this.productoConstantesFunciones.resaltarcon_importacionProducto);}
		if(this.productoConstantesFunciones.resaltarcon_finalProducto!=null && this.jInternalFrameDetalleFormProducto!=null) {this.jInternalFrameDetalleFormProducto.jCheckBoxcon_finalProducto.setBorderPainted(true);this.jInternalFrameDetalleFormProducto.jCheckBoxcon_finalProducto.setBorder(this.productoConstantesFunciones.resaltarcon_finalProducto);}
		if(this.productoConstantesFunciones.resaltarcon_consepProducto!=null && this.jInternalFrameDetalleFormProducto!=null) {this.jInternalFrameDetalleFormProducto.jCheckBoxcon_consepProducto.setBorderPainted(true);this.jInternalFrameDetalleFormProducto.jCheckBoxcon_consepProducto.setBorder(this.productoConstantesFunciones.resaltarcon_consepProducto);}
		if(this.productoConstantesFunciones.resaltarcon_serieProducto!=null && this.jInternalFrameDetalleFormProducto!=null) {this.jInternalFrameDetalleFormProducto.jCheckBoxcon_serieProducto.setBorderPainted(true);this.jInternalFrameDetalleFormProducto.jCheckBoxcon_serieProducto.setBorder(this.productoConstantesFunciones.resaltarcon_serieProducto);}
		if(this.productoConstantesFunciones.resaltarcon_balanzaProducto!=null && this.jInternalFrameDetalleFormProducto!=null) {this.jInternalFrameDetalleFormProducto.jCheckBoxcon_balanzaProducto.setBorderPainted(true);this.jInternalFrameDetalleFormProducto.jCheckBoxcon_balanzaProducto.setBorder(this.productoConstantesFunciones.resaltarcon_balanzaProducto);}
		if(this.productoConstantesFunciones.resaltaraltoProducto!=null && this.jInternalFrameDetalleFormProducto!=null) {this.jInternalFrameDetalleFormProducto.jTextFieldaltoProducto.setBorder(this.productoConstantesFunciones.resaltaraltoProducto);}
		if(this.productoConstantesFunciones.resaltaranchoProducto!=null && this.jInternalFrameDetalleFormProducto!=null) {this.jInternalFrameDetalleFormProducto.jTextFieldanchoProducto.setBorder(this.productoConstantesFunciones.resaltaranchoProducto);}
		if(this.productoConstantesFunciones.resaltarlargoProducto!=null && this.jInternalFrameDetalleFormProducto!=null) {this.jInternalFrameDetalleFormProducto.jTextFieldlargoProducto.setBorder(this.productoConstantesFunciones.resaltarlargoProducto);}
		if(this.productoConstantesFunciones.resaltarvolumenProducto!=null && this.jInternalFrameDetalleFormProducto!=null) {this.jInternalFrameDetalleFormProducto.jTextFieldvolumenProducto.setBorder(this.productoConstantesFunciones.resaltarvolumenProducto);}
		if(this.productoConstantesFunciones.resaltarpesoProducto!=null && this.jInternalFrameDetalleFormProducto!=null) {this.jInternalFrameDetalleFormProducto.jTextFieldpesoProducto.setBorder(this.productoConstantesFunciones.resaltarpesoProducto);}
		if(this.productoConstantesFunciones.resaltargramosProducto!=null && this.jInternalFrameDetalleFormProducto!=null) {this.jInternalFrameDetalleFormProducto.jTextFieldgramosProducto.setBorder(this.productoConstantesFunciones.resaltargramosProducto);}
		if(this.productoConstantesFunciones.resaltarunidades_cajaProducto!=null && this.jInternalFrameDetalleFormProducto!=null) {this.jInternalFrameDetalleFormProducto.jTextFieldunidades_cajaProducto.setBorder(this.productoConstantesFunciones.resaltarunidades_cajaProducto);}
		if(this.productoConstantesFunciones.resaltarmargenProducto!=null && this.jInternalFrameDetalleFormProducto!=null) {this.jInternalFrameDetalleFormProducto.jTextFieldmargenProducto.setBorder(this.productoConstantesFunciones.resaltarmargenProducto);}
		if(this.productoConstantesFunciones.resaltarfactorProducto!=null && this.jInternalFrameDetalleFormProducto!=null) {this.jInternalFrameDetalleFormProducto.jTextFieldfactorProducto.setBorder(this.productoConstantesFunciones.resaltarfactorProducto);}
		if(this.productoConstantesFunciones.resaltarfobProducto!=null && this.jInternalFrameDetalleFormProducto!=null) {this.jInternalFrameDetalleFormProducto.jTextFieldfobProducto.setBorder(this.productoConstantesFunciones.resaltarfobProducto);}
		if(this.productoConstantesFunciones.resaltarfob2Producto!=null && this.jInternalFrameDetalleFormProducto!=null) {this.jInternalFrameDetalleFormProducto.jTextFieldfob2Producto.setBorder(this.productoConstantesFunciones.resaltarfob2Producto);}
		if(this.productoConstantesFunciones.resaltarid_tipo_productoProducto!=null && this.jInternalFrameDetalleFormProducto!=null) {this.jInternalFrameDetalleFormProducto.jComboBoxid_tipo_productoProducto.setBorder(this.productoConstantesFunciones.resaltarid_tipo_productoProducto);}
		if(this.productoConstantesFunciones.resaltarid_color_productoProducto!=null && this.jInternalFrameDetalleFormProducto!=null) {this.jInternalFrameDetalleFormProducto.jComboBoxid_color_productoProducto.setBorder(this.productoConstantesFunciones.resaltarid_color_productoProducto);}
		if(this.productoConstantesFunciones.resaltarid_clase_productoProducto!=null && this.jInternalFrameDetalleFormProducto!=null) {this.jInternalFrameDetalleFormProducto.jComboBoxid_clase_productoProducto.setBorder(this.productoConstantesFunciones.resaltarid_clase_productoProducto);}
		if(this.productoConstantesFunciones.resaltarid_efecto_productoProducto!=null && this.jInternalFrameDetalleFormProducto!=null) {this.jInternalFrameDetalleFormProducto.jComboBoxid_efecto_productoProducto.setBorder(this.productoConstantesFunciones.resaltarid_efecto_productoProducto);}
		if(this.productoConstantesFunciones.resaltarid_marca_productoProducto!=null && this.jInternalFrameDetalleFormProducto!=null) {this.jInternalFrameDetalleFormProducto.jComboBoxid_marca_productoProducto.setBorder(this.productoConstantesFunciones.resaltarid_marca_productoProducto);}
		if(this.productoConstantesFunciones.resaltarid_modelo_productoProducto!=null && this.jInternalFrameDetalleFormProducto!=null) {this.jInternalFrameDetalleFormProducto.jComboBoxid_modelo_productoProducto.setBorder(this.productoConstantesFunciones.resaltarid_modelo_productoProducto);}
		if(this.productoConstantesFunciones.resaltarid_material_productoProducto!=null && this.jInternalFrameDetalleFormProducto!=null) {this.jInternalFrameDetalleFormProducto.jComboBoxid_material_productoProducto.setBorder(this.productoConstantesFunciones.resaltarid_material_productoProducto);}
		if(this.productoConstantesFunciones.resaltarid_segmento_productoProducto!=null && this.jInternalFrameDetalleFormProducto!=null) {this.jInternalFrameDetalleFormProducto.jComboBoxid_segmento_productoProducto.setBorder(this.productoConstantesFunciones.resaltarid_segmento_productoProducto);}
		if(this.productoConstantesFunciones.resaltarid_talla_productoProducto!=null && this.jInternalFrameDetalleFormProducto!=null) {this.jInternalFrameDetalleFormProducto.jComboBoxid_talla_productoProducto.setBorder(this.productoConstantesFunciones.resaltarid_talla_productoProducto);}
		if(this.productoConstantesFunciones.resaltargrupoProducto!=null && this.jInternalFrameDetalleFormProducto!=null) {this.jInternalFrameDetalleFormProducto.jTextAreagrupoProducto.setBorder(this.productoConstantesFunciones.resaltargrupoProducto);}
		if(this.productoConstantesFunciones.resaltarreferenciaProducto!=null && this.jInternalFrameDetalleFormProducto!=null) {this.jInternalFrameDetalleFormProducto.jTextAreareferenciaProducto.setBorder(this.productoConstantesFunciones.resaltarreferenciaProducto);}
		if(this.productoConstantesFunciones.resaltaraplicacionProducto!=null && this.jInternalFrameDetalleFormProducto!=null) {this.jInternalFrameDetalleFormProducto.jTextAreaaplicacionProducto.setBorder(this.productoConstantesFunciones.resaltaraplicacionProducto);}
		if(this.productoConstantesFunciones.resaltarprocedenciaProducto!=null && this.jInternalFrameDetalleFormProducto!=null) {this.jInternalFrameDetalleFormProducto.jTextAreaprocedenciaProducto.setBorder(this.productoConstantesFunciones.resaltarprocedenciaProducto);}
	}
	
	public void updateVisibilidadResaltarControlesFormularioProducto() throws Exception {		
		if(this.jInternalFrameDetalleFormProducto==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormProducto!=null) {
	
		//this.jInternalFrameDetalleFormProducto.jLabelidProducto.setVisible(this.productoConstantesFunciones.mostraridProducto);
		this.jInternalFrameDetalleFormProducto.jPanelidProducto.setVisible(this.productoConstantesFunciones.mostraridProducto);
		//this.jInternalFrameDetalleFormProducto.jComboBoxid_empresaProducto.setVisible(this.productoConstantesFunciones.mostrarid_empresaProducto);
		this.jInternalFrameDetalleFormProducto.jPanelid_empresaProducto.setVisible(this.productoConstantesFunciones.mostrarid_empresaProducto);
		//this.jInternalFrameDetalleFormProducto.jComboBoxid_sucursalProducto.setVisible(this.productoConstantesFunciones.mostrarid_sucursalProducto);
		this.jInternalFrameDetalleFormProducto.jPanelid_sucursalProducto.setVisible(this.productoConstantesFunciones.mostrarid_sucursalProducto);
		//this.jInternalFrameDetalleFormProducto.jTextFieldcodigoProducto.setVisible(this.productoConstantesFunciones.mostrarcodigoProducto);
		this.jInternalFrameDetalleFormProducto.jPanelcodigoProducto.setVisible(this.productoConstantesFunciones.mostrarcodigoProducto);
		//this.jInternalFrameDetalleFormProducto.jTextAreanombreProducto.setVisible(this.productoConstantesFunciones.mostrarnombreProducto);
		this.jInternalFrameDetalleFormProducto.jPanelnombreProducto.setVisible(this.productoConstantesFunciones.mostrarnombreProducto);
		//this.jInternalFrameDetalleFormProducto.jTextAreanombre_extranjeroProducto.setVisible(this.productoConstantesFunciones.mostrarnombre_extranjeroProducto);
		this.jInternalFrameDetalleFormProducto.jPanelnombre_extranjeroProducto.setVisible(this.productoConstantesFunciones.mostrarnombre_extranjeroProducto);
		//this.jInternalFrameDetalleFormProducto.jTextArearesumen_detalleProducto.setVisible(this.productoConstantesFunciones.mostrarresumen_detalleProducto);
		this.jInternalFrameDetalleFormProducto.jPanelresumen_detalleProducto.setVisible(this.productoConstantesFunciones.mostrarresumen_detalleProducto);
		//this.jInternalFrameDetalleFormProducto.jTextFieldcodigo_barraProducto.setVisible(this.productoConstantesFunciones.mostrarcodigo_barraProducto);
		this.jInternalFrameDetalleFormProducto.jPanelcodigo_barraProducto.setVisible(this.productoConstantesFunciones.mostrarcodigo_barraProducto);
		//this.jInternalFrameDetalleFormProducto.jComboBoxid_lineaProducto.setVisible(this.productoConstantesFunciones.mostrarid_lineaProducto);
		this.jInternalFrameDetalleFormProducto.jPanelid_lineaProducto.setVisible(this.productoConstantesFunciones.mostrarid_lineaProducto);
		//this.jInternalFrameDetalleFormProducto.jComboBoxid_linea_grupoProducto.setVisible(this.productoConstantesFunciones.mostrarid_linea_grupoProducto);
		this.jInternalFrameDetalleFormProducto.jPanelid_linea_grupoProducto.setVisible(this.productoConstantesFunciones.mostrarid_linea_grupoProducto);
		//this.jInternalFrameDetalleFormProducto.jComboBoxid_linea_categoriaProducto.setVisible(this.productoConstantesFunciones.mostrarid_linea_categoriaProducto);
		this.jInternalFrameDetalleFormProducto.jPanelid_linea_categoriaProducto.setVisible(this.productoConstantesFunciones.mostrarid_linea_categoriaProducto);
		//this.jInternalFrameDetalleFormProducto.jComboBoxid_linea_marcaProducto.setVisible(this.productoConstantesFunciones.mostrarid_linea_marcaProducto);
		this.jInternalFrameDetalleFormProducto.jPanelid_linea_marcaProducto.setVisible(this.productoConstantesFunciones.mostrarid_linea_marcaProducto);
		//this.jInternalFrameDetalleFormProducto.jComboBoxid_tipo_producto_servicioProducto.setVisible(this.productoConstantesFunciones.mostrarid_tipo_producto_servicioProducto);
		this.jInternalFrameDetalleFormProducto.jPanelid_tipo_producto_servicioProducto.setVisible(this.productoConstantesFunciones.mostrarid_tipo_producto_servicioProducto);
		//this.jInternalFrameDetalleFormProducto.jComboBoxid_tipo_producto_servicio_invenProducto.setVisible(this.productoConstantesFunciones.mostrarid_tipo_producto_servicio_invenProducto);
		this.jInternalFrameDetalleFormProducto.jPanelid_tipo_producto_servicio_invenProducto.setVisible(this.productoConstantesFunciones.mostrarid_tipo_producto_servicio_invenProducto);
		//this.jInternalFrameDetalleFormProducto.jComboBoxid_tipo_costeoProducto.setVisible(this.productoConstantesFunciones.mostrarid_tipo_costeoProducto);
		this.jInternalFrameDetalleFormProducto.jPanelid_tipo_costeoProducto.setVisible(this.productoConstantesFunciones.mostrarid_tipo_costeoProducto);
		//this.jInternalFrameDetalleFormProducto.jComboBoxid_unidadProducto.setVisible(this.productoConstantesFunciones.mostrarid_unidadProducto);
		this.jInternalFrameDetalleFormProducto.jPanelid_unidadProducto.setVisible(this.productoConstantesFunciones.mostrarid_unidadProducto);
		//this.jInternalFrameDetalleFormProducto.jComboBoxid_unidad_pesoProducto.setVisible(this.productoConstantesFunciones.mostrarid_unidad_pesoProducto);
		this.jInternalFrameDetalleFormProducto.jPanelid_unidad_pesoProducto.setVisible(this.productoConstantesFunciones.mostrarid_unidad_pesoProducto);
		//this.jInternalFrameDetalleFormProducto.jComboBoxid_arancelProducto.setVisible(this.productoConstantesFunciones.mostrarid_arancelProducto);
		this.jInternalFrameDetalleFormProducto.jPanelid_arancelProducto.setVisible(this.productoConstantesFunciones.mostrarid_arancelProducto);
		//this.jInternalFrameDetalleFormProducto.jComboBoxid_clienteProducto.setVisible(this.productoConstantesFunciones.mostrarid_clienteProducto);
		this.jInternalFrameDetalleFormProducto.jPanelid_clienteProducto.setVisible(this.productoConstantesFunciones.mostrarid_clienteProducto);
			this.jInternalFrameDetalleFormProducto.jButtonid_clienteProducto.setVisible(this.productoConstantesFunciones.mostrarid_clienteProducto);
		//this.jInternalFrameDetalleFormProducto.jComboBoxid_cliente_proveedor_defectoProducto.setVisible(this.productoConstantesFunciones.mostrarid_cliente_proveedor_defectoProducto);
		this.jInternalFrameDetalleFormProducto.jPanelid_cliente_proveedor_defectoProducto.setVisible(this.productoConstantesFunciones.mostrarid_cliente_proveedor_defectoProducto);
			this.jInternalFrameDetalleFormProducto.jButtonid_cliente_proveedor_defectoProducto.setVisible(this.productoConstantesFunciones.mostrarid_cliente_proveedor_defectoProducto);
		//this.jInternalFrameDetalleFormProducto.jCheckBoxesta_activoProducto.setVisible(this.productoConstantesFunciones.mostraresta_activoProducto);
		this.jInternalFrameDetalleFormProducto.jPanelesta_activoProducto.setVisible(this.productoConstantesFunciones.mostraresta_activoProducto);
		//this.jInternalFrameDetalleFormProducto.jTextAreadescripcionProducto.setVisible(this.productoConstantesFunciones.mostrardescripcionProducto);
		this.jInternalFrameDetalleFormProducto.jPaneldescripcionProducto.setVisible(this.productoConstantesFunciones.mostrardescripcionProducto);
		//this.jInternalFrameDetalleFormProducto.jTextFieldprecioProducto.setVisible(this.productoConstantesFunciones.mostrarprecioProducto);
		this.jInternalFrameDetalleFormProducto.jPanelprecioProducto.setVisible(this.productoConstantesFunciones.mostrarprecioProducto);
		//this.jInternalFrameDetalleFormProducto.jTextFieldivaProducto.setVisible(this.productoConstantesFunciones.mostrarivaProducto);
		this.jInternalFrameDetalleFormProducto.jPanelivaProducto.setVisible(this.productoConstantesFunciones.mostrarivaProducto);
		//this.jInternalFrameDetalleFormProducto.jTextFieldiva_valorProducto.setVisible(this.productoConstantesFunciones.mostrariva_valorProducto);
		this.jInternalFrameDetalleFormProducto.jPaneliva_valorProducto.setVisible(this.productoConstantesFunciones.mostrariva_valorProducto);
		//this.jInternalFrameDetalleFormProducto.jTextFieldiceProducto.setVisible(this.productoConstantesFunciones.mostrariceProducto);
		this.jInternalFrameDetalleFormProducto.jPaneliceProducto.setVisible(this.productoConstantesFunciones.mostrariceProducto);
		//this.jInternalFrameDetalleFormProducto.jTextFieldice_valorProducto.setVisible(this.productoConstantesFunciones.mostrarice_valorProducto);
		this.jInternalFrameDetalleFormProducto.jPanelice_valorProducto.setVisible(this.productoConstantesFunciones.mostrarice_valorProducto);
		//this.jInternalFrameDetalleFormProducto.jTextFielddescuentoProducto.setVisible(this.productoConstantesFunciones.mostrardescuentoProducto);
		this.jInternalFrameDetalleFormProducto.jPaneldescuentoProducto.setVisible(this.productoConstantesFunciones.mostrardescuentoProducto);
		//this.jInternalFrameDetalleFormProducto.jTextFielddescuento_valorProducto.setVisible(this.productoConstantesFunciones.mostrardescuento_valorProducto);
		this.jInternalFrameDetalleFormProducto.jPaneldescuento_valorProducto.setVisible(this.productoConstantesFunciones.mostrardescuento_valorProducto);
		//this.jInternalFrameDetalleFormProducto.jTextFieldarancel_porcentajeProducto.setVisible(this.productoConstantesFunciones.mostrararancel_porcentajeProducto);
		this.jInternalFrameDetalleFormProducto.jPanelarancel_porcentajeProducto.setVisible(this.productoConstantesFunciones.mostrararancel_porcentajeProducto);
		//this.jInternalFrameDetalleFormProducto.jTextFieldarancel_valorProducto.setVisible(this.productoConstantesFunciones.mostrararancel_valorProducto);
		this.jInternalFrameDetalleFormProducto.jPanelarancel_valorProducto.setVisible(this.productoConstantesFunciones.mostrararancel_valorProducto);
		//this.jInternalFrameDetalleFormProducto.jTextFieldcomisionProducto.setVisible(this.productoConstantesFunciones.mostrarcomisionProducto);
		this.jInternalFrameDetalleFormProducto.jPanelcomisionProducto.setVisible(this.productoConstantesFunciones.mostrarcomisionProducto);
		//this.jInternalFrameDetalleFormProducto.jTextFieldcomision_valorProducto.setVisible(this.productoConstantesFunciones.mostrarcomision_valorProducto);
		this.jInternalFrameDetalleFormProducto.jPanelcomision_valorProducto.setVisible(this.productoConstantesFunciones.mostrarcomision_valorProducto);
		//this.jInternalFrameDetalleFormProducto.jTextFielddias_produccionProducto.setVisible(this.productoConstantesFunciones.mostrardias_produccionProducto);
		this.jInternalFrameDetalleFormProducto.jPaneldias_produccionProducto.setVisible(this.productoConstantesFunciones.mostrardias_produccionProducto);
		//this.jInternalFrameDetalleFormProducto.jCheckBoxcon_stock_negativoProducto.setVisible(this.productoConstantesFunciones.mostrarcon_stock_negativoProducto);
		this.jInternalFrameDetalleFormProducto.jPanelcon_stock_negativoProducto.setVisible(this.productoConstantesFunciones.mostrarcon_stock_negativoProducto);
		//this.jInternalFrameDetalleFormProducto.jCheckBoxcon_precio_minimoProducto.setVisible(this.productoConstantesFunciones.mostrarcon_precio_minimoProducto);
		this.jInternalFrameDetalleFormProducto.jPanelcon_precio_minimoProducto.setVisible(this.productoConstantesFunciones.mostrarcon_precio_minimoProducto);
		//this.jInternalFrameDetalleFormProducto.jCheckBoxcon_loteProducto.setVisible(this.productoConstantesFunciones.mostrarcon_loteProducto);
		this.jInternalFrameDetalleFormProducto.jPanelcon_loteProducto.setVisible(this.productoConstantesFunciones.mostrarcon_loteProducto);
		//this.jInternalFrameDetalleFormProducto.jCheckBoxcon_confirmacionProducto.setVisible(this.productoConstantesFunciones.mostrarcon_confirmacionProducto);
		this.jInternalFrameDetalleFormProducto.jPanelcon_confirmacionProducto.setVisible(this.productoConstantesFunciones.mostrarcon_confirmacionProducto);
		//this.jInternalFrameDetalleFormProducto.jCheckBoxcon_presupuestoProducto.setVisible(this.productoConstantesFunciones.mostrarcon_presupuestoProducto);
		this.jInternalFrameDetalleFormProducto.jPanelcon_presupuestoProducto.setVisible(this.productoConstantesFunciones.mostrarcon_presupuestoProducto);
		//this.jInternalFrameDetalleFormProducto.jCheckBoxcon_importacionProducto.setVisible(this.productoConstantesFunciones.mostrarcon_importacionProducto);
		this.jInternalFrameDetalleFormProducto.jPanelcon_importacionProducto.setVisible(this.productoConstantesFunciones.mostrarcon_importacionProducto);
		//this.jInternalFrameDetalleFormProducto.jCheckBoxcon_finalProducto.setVisible(this.productoConstantesFunciones.mostrarcon_finalProducto);
		this.jInternalFrameDetalleFormProducto.jPanelcon_finalProducto.setVisible(this.productoConstantesFunciones.mostrarcon_finalProducto);
		//this.jInternalFrameDetalleFormProducto.jCheckBoxcon_consepProducto.setVisible(this.productoConstantesFunciones.mostrarcon_consepProducto);
		this.jInternalFrameDetalleFormProducto.jPanelcon_consepProducto.setVisible(this.productoConstantesFunciones.mostrarcon_consepProducto);
		//this.jInternalFrameDetalleFormProducto.jCheckBoxcon_serieProducto.setVisible(this.productoConstantesFunciones.mostrarcon_serieProducto);
		this.jInternalFrameDetalleFormProducto.jPanelcon_serieProducto.setVisible(this.productoConstantesFunciones.mostrarcon_serieProducto);
		//this.jInternalFrameDetalleFormProducto.jCheckBoxcon_balanzaProducto.setVisible(this.productoConstantesFunciones.mostrarcon_balanzaProducto);
		this.jInternalFrameDetalleFormProducto.jPanelcon_balanzaProducto.setVisible(this.productoConstantesFunciones.mostrarcon_balanzaProducto);
		//this.jInternalFrameDetalleFormProducto.jTextFieldaltoProducto.setVisible(this.productoConstantesFunciones.mostraraltoProducto);
		this.jInternalFrameDetalleFormProducto.jPanelaltoProducto.setVisible(this.productoConstantesFunciones.mostraraltoProducto);
		//this.jInternalFrameDetalleFormProducto.jTextFieldanchoProducto.setVisible(this.productoConstantesFunciones.mostraranchoProducto);
		this.jInternalFrameDetalleFormProducto.jPanelanchoProducto.setVisible(this.productoConstantesFunciones.mostraranchoProducto);
		//this.jInternalFrameDetalleFormProducto.jTextFieldlargoProducto.setVisible(this.productoConstantesFunciones.mostrarlargoProducto);
		this.jInternalFrameDetalleFormProducto.jPanellargoProducto.setVisible(this.productoConstantesFunciones.mostrarlargoProducto);
		//this.jInternalFrameDetalleFormProducto.jTextFieldvolumenProducto.setVisible(this.productoConstantesFunciones.mostrarvolumenProducto);
		this.jInternalFrameDetalleFormProducto.jPanelvolumenProducto.setVisible(this.productoConstantesFunciones.mostrarvolumenProducto);
		//this.jInternalFrameDetalleFormProducto.jTextFieldpesoProducto.setVisible(this.productoConstantesFunciones.mostrarpesoProducto);
		this.jInternalFrameDetalleFormProducto.jPanelpesoProducto.setVisible(this.productoConstantesFunciones.mostrarpesoProducto);
		//this.jInternalFrameDetalleFormProducto.jTextFieldgramosProducto.setVisible(this.productoConstantesFunciones.mostrargramosProducto);
		this.jInternalFrameDetalleFormProducto.jPanelgramosProducto.setVisible(this.productoConstantesFunciones.mostrargramosProducto);
		//this.jInternalFrameDetalleFormProducto.jTextFieldunidades_cajaProducto.setVisible(this.productoConstantesFunciones.mostrarunidades_cajaProducto);
		this.jInternalFrameDetalleFormProducto.jPanelunidades_cajaProducto.setVisible(this.productoConstantesFunciones.mostrarunidades_cajaProducto);
		//this.jInternalFrameDetalleFormProducto.jTextFieldmargenProducto.setVisible(this.productoConstantesFunciones.mostrarmargenProducto);
		this.jInternalFrameDetalleFormProducto.jPanelmargenProducto.setVisible(this.productoConstantesFunciones.mostrarmargenProducto);
		//this.jInternalFrameDetalleFormProducto.jTextFieldfactorProducto.setVisible(this.productoConstantesFunciones.mostrarfactorProducto);
		this.jInternalFrameDetalleFormProducto.jPanelfactorProducto.setVisible(this.productoConstantesFunciones.mostrarfactorProducto);
		//this.jInternalFrameDetalleFormProducto.jTextFieldfobProducto.setVisible(this.productoConstantesFunciones.mostrarfobProducto);
		this.jInternalFrameDetalleFormProducto.jPanelfobProducto.setVisible(this.productoConstantesFunciones.mostrarfobProducto);
		//this.jInternalFrameDetalleFormProducto.jTextFieldfob2Producto.setVisible(this.productoConstantesFunciones.mostrarfob2Producto);
		this.jInternalFrameDetalleFormProducto.jPanelfob2Producto.setVisible(this.productoConstantesFunciones.mostrarfob2Producto);
		//this.jInternalFrameDetalleFormProducto.jComboBoxid_tipo_productoProducto.setVisible(this.productoConstantesFunciones.mostrarid_tipo_productoProducto);
		this.jInternalFrameDetalleFormProducto.jPanelid_tipo_productoProducto.setVisible(this.productoConstantesFunciones.mostrarid_tipo_productoProducto);
		//this.jInternalFrameDetalleFormProducto.jComboBoxid_color_productoProducto.setVisible(this.productoConstantesFunciones.mostrarid_color_productoProducto);
		this.jInternalFrameDetalleFormProducto.jPanelid_color_productoProducto.setVisible(this.productoConstantesFunciones.mostrarid_color_productoProducto);
		//this.jInternalFrameDetalleFormProducto.jComboBoxid_clase_productoProducto.setVisible(this.productoConstantesFunciones.mostrarid_clase_productoProducto);
		this.jInternalFrameDetalleFormProducto.jPanelid_clase_productoProducto.setVisible(this.productoConstantesFunciones.mostrarid_clase_productoProducto);
		//this.jInternalFrameDetalleFormProducto.jComboBoxid_efecto_productoProducto.setVisible(this.productoConstantesFunciones.mostrarid_efecto_productoProducto);
		this.jInternalFrameDetalleFormProducto.jPanelid_efecto_productoProducto.setVisible(this.productoConstantesFunciones.mostrarid_efecto_productoProducto);
		//this.jInternalFrameDetalleFormProducto.jComboBoxid_marca_productoProducto.setVisible(this.productoConstantesFunciones.mostrarid_marca_productoProducto);
		this.jInternalFrameDetalleFormProducto.jPanelid_marca_productoProducto.setVisible(this.productoConstantesFunciones.mostrarid_marca_productoProducto);
		//this.jInternalFrameDetalleFormProducto.jComboBoxid_modelo_productoProducto.setVisible(this.productoConstantesFunciones.mostrarid_modelo_productoProducto);
		this.jInternalFrameDetalleFormProducto.jPanelid_modelo_productoProducto.setVisible(this.productoConstantesFunciones.mostrarid_modelo_productoProducto);
		//this.jInternalFrameDetalleFormProducto.jComboBoxid_material_productoProducto.setVisible(this.productoConstantesFunciones.mostrarid_material_productoProducto);
		this.jInternalFrameDetalleFormProducto.jPanelid_material_productoProducto.setVisible(this.productoConstantesFunciones.mostrarid_material_productoProducto);
		//this.jInternalFrameDetalleFormProducto.jComboBoxid_segmento_productoProducto.setVisible(this.productoConstantesFunciones.mostrarid_segmento_productoProducto);
		this.jInternalFrameDetalleFormProducto.jPanelid_segmento_productoProducto.setVisible(this.productoConstantesFunciones.mostrarid_segmento_productoProducto);
		//this.jInternalFrameDetalleFormProducto.jComboBoxid_talla_productoProducto.setVisible(this.productoConstantesFunciones.mostrarid_talla_productoProducto);
		this.jInternalFrameDetalleFormProducto.jPanelid_talla_productoProducto.setVisible(this.productoConstantesFunciones.mostrarid_talla_productoProducto);
		//this.jInternalFrameDetalleFormProducto.jTextAreagrupoProducto.setVisible(this.productoConstantesFunciones.mostrargrupoProducto);
		this.jInternalFrameDetalleFormProducto.jPanelgrupoProducto.setVisible(this.productoConstantesFunciones.mostrargrupoProducto);
		//this.jInternalFrameDetalleFormProducto.jTextAreareferenciaProducto.setVisible(this.productoConstantesFunciones.mostrarreferenciaProducto);
		this.jInternalFrameDetalleFormProducto.jPanelreferenciaProducto.setVisible(this.productoConstantesFunciones.mostrarreferenciaProducto);
		//this.jInternalFrameDetalleFormProducto.jTextAreaaplicacionProducto.setVisible(this.productoConstantesFunciones.mostraraplicacionProducto);
		this.jInternalFrameDetalleFormProducto.jPanelaplicacionProducto.setVisible(this.productoConstantesFunciones.mostraraplicacionProducto);
		//this.jInternalFrameDetalleFormProducto.jTextAreaprocedenciaProducto.setVisible(this.productoConstantesFunciones.mostrarprocedenciaProducto);
		this.jInternalFrameDetalleFormProducto.jPanelprocedenciaProducto.setVisible(this.productoConstantesFunciones.mostrarprocedenciaProducto);
		}
	}
	
	public void updateHabilitarResaltarControlesFormularioProducto() throws Exception {
		if(this.jInternalFrameDetalleFormProducto==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormProducto!=null) {
	
		this.jInternalFrameDetalleFormProducto.jLabelidProducto.setEnabled(this.productoConstantesFunciones.activaridProducto);
		this.jInternalFrameDetalleFormProducto.jComboBoxid_empresaProducto.setEnabled(this.productoConstantesFunciones.activarid_empresaProducto);
		this.jInternalFrameDetalleFormProducto.jComboBoxid_sucursalProducto.setEnabled(this.productoConstantesFunciones.activarid_sucursalProducto);
		this.jInternalFrameDetalleFormProducto.jTextFieldcodigoProducto.setEnabled(this.productoConstantesFunciones.activarcodigoProducto);
		this.jInternalFrameDetalleFormProducto.jTextAreanombreProducto.setEnabled(this.productoConstantesFunciones.activarnombreProducto);
		this.jInternalFrameDetalleFormProducto.jTextAreanombre_extranjeroProducto.setEnabled(this.productoConstantesFunciones.activarnombre_extranjeroProducto);
		this.jInternalFrameDetalleFormProducto.jTextArearesumen_detalleProducto.setEnabled(this.productoConstantesFunciones.activarresumen_detalleProducto);
		this.jInternalFrameDetalleFormProducto.jTextFieldcodigo_barraProducto.setEnabled(this.productoConstantesFunciones.activarcodigo_barraProducto);
		this.jInternalFrameDetalleFormProducto.jComboBoxid_lineaProducto.setEnabled(this.productoConstantesFunciones.activarid_lineaProducto);
		this.jInternalFrameDetalleFormProducto.jComboBoxid_linea_grupoProducto.setEnabled(this.productoConstantesFunciones.activarid_linea_grupoProducto);
		this.jInternalFrameDetalleFormProducto.jComboBoxid_linea_categoriaProducto.setEnabled(this.productoConstantesFunciones.activarid_linea_categoriaProducto);
		this.jInternalFrameDetalleFormProducto.jComboBoxid_linea_marcaProducto.setEnabled(this.productoConstantesFunciones.activarid_linea_marcaProducto);
		this.jInternalFrameDetalleFormProducto.jComboBoxid_tipo_producto_servicioProducto.setEnabled(this.productoConstantesFunciones.activarid_tipo_producto_servicioProducto);
		this.jInternalFrameDetalleFormProducto.jComboBoxid_tipo_producto_servicio_invenProducto.setEnabled(this.productoConstantesFunciones.activarid_tipo_producto_servicio_invenProducto);
		this.jInternalFrameDetalleFormProducto.jComboBoxid_tipo_costeoProducto.setEnabled(this.productoConstantesFunciones.activarid_tipo_costeoProducto);
		this.jInternalFrameDetalleFormProducto.jComboBoxid_unidadProducto.setEnabled(this.productoConstantesFunciones.activarid_unidadProducto);
		this.jInternalFrameDetalleFormProducto.jComboBoxid_unidad_pesoProducto.setEnabled(this.productoConstantesFunciones.activarid_unidad_pesoProducto);
		this.jInternalFrameDetalleFormProducto.jComboBoxid_arancelProducto.setEnabled(this.productoConstantesFunciones.activarid_arancelProducto);
		this.jInternalFrameDetalleFormProducto.jComboBoxid_clienteProducto.setEnabled(this.productoConstantesFunciones.activarid_clienteProducto);
			this.jInternalFrameDetalleFormProducto.jButtonid_clienteProducto.setEnabled(this.productoConstantesFunciones.activarid_clienteProducto);
		this.jInternalFrameDetalleFormProducto.jComboBoxid_cliente_proveedor_defectoProducto.setEnabled(this.productoConstantesFunciones.activarid_cliente_proveedor_defectoProducto);
			this.jInternalFrameDetalleFormProducto.jButtonid_cliente_proveedor_defectoProducto.setEnabled(this.productoConstantesFunciones.activarid_cliente_proveedor_defectoProducto);
		this.jInternalFrameDetalleFormProducto.jCheckBoxesta_activoProducto.setEnabled(this.productoConstantesFunciones.activaresta_activoProducto);
		this.jInternalFrameDetalleFormProducto.jTextAreadescripcionProducto.setEnabled(this.productoConstantesFunciones.activardescripcionProducto);
		this.jInternalFrameDetalleFormProducto.jTextFieldprecioProducto.setEnabled(this.productoConstantesFunciones.activarprecioProducto);
		this.jInternalFrameDetalleFormProducto.jTextFieldivaProducto.setEnabled(this.productoConstantesFunciones.activarivaProducto);
		this.jInternalFrameDetalleFormProducto.jTextFieldiva_valorProducto.setEnabled(this.productoConstantesFunciones.activariva_valorProducto);
		this.jInternalFrameDetalleFormProducto.jTextFieldiceProducto.setEnabled(this.productoConstantesFunciones.activariceProducto);
		this.jInternalFrameDetalleFormProducto.jTextFieldice_valorProducto.setEnabled(this.productoConstantesFunciones.activarice_valorProducto);
		this.jInternalFrameDetalleFormProducto.jTextFielddescuentoProducto.setEnabled(this.productoConstantesFunciones.activardescuentoProducto);
		this.jInternalFrameDetalleFormProducto.jTextFielddescuento_valorProducto.setEnabled(this.productoConstantesFunciones.activardescuento_valorProducto);
		this.jInternalFrameDetalleFormProducto.jTextFieldarancel_porcentajeProducto.setEnabled(this.productoConstantesFunciones.activararancel_porcentajeProducto);
		this.jInternalFrameDetalleFormProducto.jTextFieldarancel_valorProducto.setEnabled(this.productoConstantesFunciones.activararancel_valorProducto);
		this.jInternalFrameDetalleFormProducto.jTextFieldcomisionProducto.setEnabled(this.productoConstantesFunciones.activarcomisionProducto);
		this.jInternalFrameDetalleFormProducto.jTextFieldcomision_valorProducto.setEnabled(this.productoConstantesFunciones.activarcomision_valorProducto);
		this.jInternalFrameDetalleFormProducto.jTextFielddias_produccionProducto.setEnabled(this.productoConstantesFunciones.activardias_produccionProducto);
		this.jInternalFrameDetalleFormProducto.jCheckBoxcon_stock_negativoProducto.setEnabled(this.productoConstantesFunciones.activarcon_stock_negativoProducto);
		this.jInternalFrameDetalleFormProducto.jCheckBoxcon_precio_minimoProducto.setEnabled(this.productoConstantesFunciones.activarcon_precio_minimoProducto);
		this.jInternalFrameDetalleFormProducto.jCheckBoxcon_loteProducto.setEnabled(this.productoConstantesFunciones.activarcon_loteProducto);
		this.jInternalFrameDetalleFormProducto.jCheckBoxcon_confirmacionProducto.setEnabled(this.productoConstantesFunciones.activarcon_confirmacionProducto);
		this.jInternalFrameDetalleFormProducto.jCheckBoxcon_presupuestoProducto.setEnabled(this.productoConstantesFunciones.activarcon_presupuestoProducto);
		this.jInternalFrameDetalleFormProducto.jCheckBoxcon_importacionProducto.setEnabled(this.productoConstantesFunciones.activarcon_importacionProducto);
		this.jInternalFrameDetalleFormProducto.jCheckBoxcon_finalProducto.setEnabled(this.productoConstantesFunciones.activarcon_finalProducto);
		this.jInternalFrameDetalleFormProducto.jCheckBoxcon_consepProducto.setEnabled(this.productoConstantesFunciones.activarcon_consepProducto);
		this.jInternalFrameDetalleFormProducto.jCheckBoxcon_serieProducto.setEnabled(this.productoConstantesFunciones.activarcon_serieProducto);
		this.jInternalFrameDetalleFormProducto.jCheckBoxcon_balanzaProducto.setEnabled(this.productoConstantesFunciones.activarcon_balanzaProducto);
		this.jInternalFrameDetalleFormProducto.jTextFieldaltoProducto.setEnabled(this.productoConstantesFunciones.activaraltoProducto);
		this.jInternalFrameDetalleFormProducto.jTextFieldanchoProducto.setEnabled(this.productoConstantesFunciones.activaranchoProducto);
		this.jInternalFrameDetalleFormProducto.jTextFieldlargoProducto.setEnabled(this.productoConstantesFunciones.activarlargoProducto);
		this.jInternalFrameDetalleFormProducto.jTextFieldvolumenProducto.setEnabled(this.productoConstantesFunciones.activarvolumenProducto);
		this.jInternalFrameDetalleFormProducto.jTextFieldpesoProducto.setEnabled(this.productoConstantesFunciones.activarpesoProducto);
		this.jInternalFrameDetalleFormProducto.jTextFieldgramosProducto.setEnabled(this.productoConstantesFunciones.activargramosProducto);
		this.jInternalFrameDetalleFormProducto.jTextFieldunidades_cajaProducto.setEnabled(this.productoConstantesFunciones.activarunidades_cajaProducto);
		this.jInternalFrameDetalleFormProducto.jTextFieldmargenProducto.setEnabled(this.productoConstantesFunciones.activarmargenProducto);
		this.jInternalFrameDetalleFormProducto.jTextFieldfactorProducto.setEnabled(this.productoConstantesFunciones.activarfactorProducto);
		this.jInternalFrameDetalleFormProducto.jTextFieldfobProducto.setEnabled(this.productoConstantesFunciones.activarfobProducto);
		this.jInternalFrameDetalleFormProducto.jTextFieldfob2Producto.setEnabled(this.productoConstantesFunciones.activarfob2Producto);
		this.jInternalFrameDetalleFormProducto.jComboBoxid_tipo_productoProducto.setEnabled(this.productoConstantesFunciones.activarid_tipo_productoProducto);
		this.jInternalFrameDetalleFormProducto.jComboBoxid_color_productoProducto.setEnabled(this.productoConstantesFunciones.activarid_color_productoProducto);
		this.jInternalFrameDetalleFormProducto.jComboBoxid_clase_productoProducto.setEnabled(this.productoConstantesFunciones.activarid_clase_productoProducto);
		this.jInternalFrameDetalleFormProducto.jComboBoxid_efecto_productoProducto.setEnabled(this.productoConstantesFunciones.activarid_efecto_productoProducto);
		this.jInternalFrameDetalleFormProducto.jComboBoxid_marca_productoProducto.setEnabled(this.productoConstantesFunciones.activarid_marca_productoProducto);
		this.jInternalFrameDetalleFormProducto.jComboBoxid_modelo_productoProducto.setEnabled(this.productoConstantesFunciones.activarid_modelo_productoProducto);
		this.jInternalFrameDetalleFormProducto.jComboBoxid_material_productoProducto.setEnabled(this.productoConstantesFunciones.activarid_material_productoProducto);
		this.jInternalFrameDetalleFormProducto.jComboBoxid_segmento_productoProducto.setEnabled(this.productoConstantesFunciones.activarid_segmento_productoProducto);
		this.jInternalFrameDetalleFormProducto.jComboBoxid_talla_productoProducto.setEnabled(this.productoConstantesFunciones.activarid_talla_productoProducto);
		this.jInternalFrameDetalleFormProducto.jTextAreagrupoProducto.setEnabled(this.productoConstantesFunciones.activargrupoProducto);
		this.jInternalFrameDetalleFormProducto.jTextAreareferenciaProducto.setEnabled(this.productoConstantesFunciones.activarreferenciaProducto);
		this.jInternalFrameDetalleFormProducto.jTextAreaaplicacionProducto.setEnabled(this.productoConstantesFunciones.activaraplicacionProducto);
		this.jInternalFrameDetalleFormProducto.jTextAreaprocedenciaProducto.setEnabled(this.productoConstantesFunciones.activarprocedenciaProducto);
		}
	}
	
		
}