/*
*AVISO LEGAL
Â© Copyright
*Este programa esta protegido por la ley de derechos de autor.
*La reproduccion o distribucion ilicita de este programa o de cualquiera de
*sus partes esta penado por la ley con severas sanciones civiles y penales,
*y seran objeto de todas las sanciones legales que correspondan.

*Su contenido no puede copiarse para fines comerciales o de otras,
*ni puede mostrarse, incluso en una version modificada, en otros sitios Web.
Solo esta permitido colocar hipervinculos al sitio web.
*/
package com.bydan.erp.inventario.presentation.swing.jinternalframes;




import com.bydan.erp.seguridad.business.entity.Usuario;
import com.bydan.erp.seguridad.business.entity.ResumenUsuario;
import com.bydan.erp.seguridad.business.entity.Opcion;
import com.bydan.erp.seguridad.business.entity.PerfilOpcion;
import com.bydan.erp.seguridad.business.entity.PerfilCampo;
import com.bydan.erp.seguridad.business.entity.PerfilAccion;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralSg;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralUsuario;
import com.bydan.erp.seguridad.business.entity.Modulo;
import com.bydan.erp.seguridad.business.entity.Accion;

import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneralAdditional;
import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneral;


//import com.bydan.erp.seguridad.business.entity.PerfilAccion;


import com.bydan.erp.seguridad.util.SistemaConstantesFunciones;
import com.bydan.erp.seguridad.util.SistemaConstantesFuncionesAdditional;
import com.bydan.erp.seguridad.business.logic.SistemaLogicAdditional;

import com.bydan.erp.inventario.util.BodegaProductoConstantesFunciones;
import com.bydan.erp.inventario.util.BodegaProductoParameterReturnGeneral;
//import com.bydan.erp.inventario.util.BodegaProductoParameterGeneral;
//import com.bydan.erp.inventario.presentation.report.source.BodegaProductoBean;
import com.bydan.framework.erp.business.dataaccess.ConstantesSql;
import com.bydan.framework.erp.business.entity.Classe;
import com.bydan.framework.erp.business.entity.DatoGeneral;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterGeneral;
import com.bydan.framework.erp.business.entity.OrderBy;
import com.bydan.framework.erp.business.entity.DatoGeneralMinimo;
import com.bydan.framework.erp.business.entity.GeneralEntity;
import com.bydan.framework.erp.business.entity.Mensajes;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterReturnGeneral;
//import com.bydan.framework.erp.business.entity.MaintenanceType;
import com.bydan.framework.erp.util.MaintenanceType;
import com.bydan.framework.erp.util.FuncionesReporte;
import com.bydan.framework.erp.business.logic.DatosCliente;
import com.bydan.framework.erp.business.logic.Pagination;

import com.bydan.erp.inventario.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralTotalModel;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralOrderByModel;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverter;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverterFromDate;
import com.bydan.framework.erp.presentation.desktop.swing.DateRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.DateEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.TextFieldRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.RunnableProceso;
import com.bydan.framework.erp.presentation.desktop.swing.*;
//import com.bydan.framework.erp.presentation.desktop.swing.TextFieldEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.HeaderRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.JInternalFrameBase;
import com.bydan.framework.erp.presentation.desktop.swing.FuncionesSwing;
import com.bydan.framework.erp.presentation.desktop.swing.MainJFrame;
import com.bydan.framework.erp.resources.imagenes.AuxiliarImagenes;
import com.bydan.erp.inventario.resources.reportes.AuxiliarReportes;


import com.bydan.erp.inventario.util.*;
import com.bydan.erp.inventario.business.logic.*;

import com.bydan.erp.seguridad.business.logic.*;
import com.bydan.erp.contabilidad.business.logic.*;

//EJB

//PARAMETROS


//EJB PARAMETROS

import com.bydan.framework.erp.business.logic.*;
import com.bydan.framework.erp.util.*;

import com.bydan.erp.inventario.business.entity.*;
//import com.bydan.framework.erp.business.entity.ConexionBeanFace;
//import com.bydan.framework.erp.business.entity.Mensajes;


import com.bydan.erp.seguridad.presentation.swing.jinternalframes.*;
import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.*;

import com.bydan.erp.seguridad.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.auxiliar.*;






import javax.imageio.ImageIO;
import java.net.NetworkInterface;
import java.net.InterfaceAddress;
import java.net.InetAddress;
import javax.naming.InitialContext;
import java.lang.Long;
import java.util.Date;
import java.util.Enumeration;
import java.util.Iterator;
import java.util.Set;
import java.util.HashSet;
import java.util.List;
import java.util.ArrayList;
import java.io.Serializable;
import java.util.Hashtable;
import java.util.Collections;
import java.io.File;
import java.io.FileInputStream;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.BufferedReader;
import java.io.FileReader;
import java.util.HashMap;
import java.util.Map;
import java.io.PrintWriter;
import java.sql.SQLException;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.stream.StreamSource;

import org.xml.sax.EntityResolver;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;

import org.w3c.dom.Document;
import org.w3c.dom.Document;
import org.w3c.dom.NodeList;
import org.w3c.dom.Node;
import org.w3c.dom.Element;

import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.util.CellRangeAddress;

import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;


import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRRuntimeException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.engine.export.JRHtmlExporter;
import net.sf.jasperreports.j2ee.servlets.BaseHttpServlet;
import net.sf.jasperreports.engine.JRExporterParameter;
import net.sf.jasperreports.engine.data.JRBeanArrayDataSource;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;

import org.apache.log4j.Logger;

import com.bydan.framework.erp.business.entity.Reporte;


//VALIDACION
import org.hibernate.validator.ClassValidator;
import org.hibernate.validator.InvalidValue;

import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.JasperRunManager;
import net.sf.jasperreports.engine.export.JExcelApiExporter;
import net.sf.jasperreports.engine.export.JRCsvExporter;
import net.sf.jasperreports.engine.export.JRRtfExporter;
import net.sf.jasperreports.engine.export.JRXlsExporter;
import net.sf.jasperreports.engine.export.JRXlsExporterParameter;
import net.sf.jasperreports.engine.util.JRSaver;
import net.sf.jasperreports.engine.xml.JRXmlWriter;


import com.bydan.erp.inventario.presentation.web.jsf.sessionbean.*;

import java.util.EventObject;
import javax.swing.*;
import javax.swing.border.Border;
import javax.swing.border.TitledBorder;
import javax.swing.border.EmptyBorder;
import javax.swing.event.*;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import java.awt.*;
import java.awt.event.*;

import org.jdesktop.beansbinding.Binding.SyncFailure;
import org.jdesktop.beansbinding.BindingListener;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.ELProperty;
import org.jdesktop.beansbinding.AutoBinding.UpdateStrategy;
import org.jdesktop.beansbinding.PropertyStateEvent;
import org.jdesktop.swingbinding.JComboBoxBinding;
import org.jdesktop.swingbinding.SwingBindings;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeEvent;

import com.toedter.calendar.JDateChooser;


import com.bydan.erp.seguridad.business.entity.*;
import com.bydan.erp.contabilidad.business.entity.*;
import com.bydan.erp.seguridad.util.*;
import com.bydan.erp.contabilidad.util.*;
import com.bydan.erp.seguridad.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.contabilidad.presentation.web.jsf.sessionbean.*;


@SuppressWarnings("unused")
public class BodegaProductoBeanSwingJInternalFrame extends BodegaProductoJInternalFrame implements WindowListener,WindowFocusListener
{				
	
	public static final long serialVersionUID = 1L;
	
	public static Logger logger = Logger.getLogger(BodegaProductoBeanSwingJInternalFrame.class);  
	
	public static ClassValidator<BodegaProducto> bodegaproductoValidator = new ClassValidator<BodegaProducto>(BodegaProducto.class);
	
	public InvalidValue[] invalidValues=null;
		

	//Ejb Foreign Keys
	
	public BodegaProducto bodegaproducto;	
	public BodegaProducto bodegaproductoAux;
	public BodegaProducto bodegaproductoAnterior;//USADO PARA MANEJAR FOCUS GAINED,LOST
	public BodegaProducto bodegaproductoTotales;
	public Long idBodegaProductoActual;
	public Long iIdNuevoBodegaProducto=0L;
	public int rowIndexActual=0;
	
	
	
	
	public String sFinalQueryComboEmpresa="";

	public List<Empresa> empresasForeignKey;

	public List<Empresa> getempresasForeignKey() {
		return empresasForeignKey;
	}

	public void setempresasForeignKey(List<Empresa> empresasForeignKey) {
		this.empresasForeignKey = empresasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Empresa empresaForeignKey;

	public Empresa getempresaForeignKey() {
		return empresaForeignKey;
	}

	public void setempresaForeignKey(Empresa empresaForeignKey) {
		this.empresaForeignKey = empresaForeignKey;
	}

	public String sFinalQueryComboSucursal="";

	public List<Sucursal> sucursalsForeignKey;

	public List<Sucursal> getsucursalsForeignKey() {
		return sucursalsForeignKey;
	}

	public void setsucursalsForeignKey(List<Sucursal> sucursalsForeignKey) {
		this.sucursalsForeignKey = sucursalsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Sucursal sucursalForeignKey;

	public Sucursal getsucursalForeignKey() {
		return sucursalForeignKey;
	}

	public void setsucursalForeignKey(Sucursal sucursalForeignKey) {
		this.sucursalForeignKey = sucursalForeignKey;
	}

	public String sFinalQueryComboBodega="";

	public List<Bodega> bodegasForeignKey;

	public List<Bodega> getbodegasForeignKey() {
		return bodegasForeignKey;
	}

	public void setbodegasForeignKey(List<Bodega> bodegasForeignKey) {
		this.bodegasForeignKey = bodegasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Bodega bodegaForeignKey;

	public Bodega getbodegaForeignKey() {
		return bodegaForeignKey;
	}

	public void setbodegaForeignKey(Bodega bodegaForeignKey) {
		this.bodegaForeignKey = bodegaForeignKey;
	}

	public String sFinalQueryComboProducto="";

	public List<Producto> productosForeignKey;

	public List<Producto> getproductosForeignKey() {
		return productosForeignKey;
	}

	public void setproductosForeignKey(List<Producto> productosForeignKey) {
		this.productosForeignKey = productosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Producto productoForeignKey;

	public Producto getproductoForeignKey() {
		return productoForeignKey;
	}

	public void setproductoForeignKey(Producto productoForeignKey) {
		this.productoForeignKey = productoForeignKey;
	}

	public String sFinalQueryComboUnidad="";

	public List<Unidad> unidadsForeignKey;

	public List<Unidad> getunidadsForeignKey() {
		return unidadsForeignKey;
	}

	public void setunidadsForeignKey(List<Unidad> unidadsForeignKey) {
		this.unidadsForeignKey = unidadsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Unidad unidadForeignKey;

	public Unidad getunidadForeignKey() {
		return unidadForeignKey;
	}

	public void setunidadForeignKey(Unidad unidadForeignKey) {
		this.unidadForeignKey = unidadForeignKey;
	}

	public String sFinalQueryComboCentroCosto="";

	public List<CentroCosto> centrocostosForeignKey;

	public List<CentroCosto> getcentrocostosForeignKey() {
		return centrocostosForeignKey;
	}

	public void setcentrocostosForeignKey(List<CentroCosto> centrocostosForeignKey) {
		this.centrocostosForeignKey = centrocostosForeignKey;
	}

	//OBJETO FK ACTUAL
	public CentroCosto centrocostoForeignKey;

	public CentroCosto getcentrocostoForeignKey() {
		return centrocostoForeignKey;
	}

	public void setcentrocostoForeignKey(CentroCosto centrocostoForeignKey) {
		this.centrocostoForeignKey = centrocostoForeignKey;
	}

	public String sFinalQueryComboEstadoBodegaProducto="";

	public List<EstadoBodegaProducto> estadobodegaproductosForeignKey;

	public List<EstadoBodegaProducto> getestadobodegaproductosForeignKey() {
		return estadobodegaproductosForeignKey;
	}

	public void setestadobodegaproductosForeignKey(List<EstadoBodegaProducto> estadobodegaproductosForeignKey) {
		this.estadobodegaproductosForeignKey = estadobodegaproductosForeignKey;
	}

	//OBJETO FK ACTUAL
	public EstadoBodegaProducto estadobodegaproductoForeignKey;

	public EstadoBodegaProducto getestadobodegaproductoForeignKey() {
		return estadobodegaproductoForeignKey;
	}

	public void setestadobodegaproductoForeignKey(EstadoBodegaProducto estadobodegaproductoForeignKey) {
		this.estadobodegaproductoForeignKey = estadobodegaproductoForeignKey;
	}

	public String sFinalQueryComboCuentaContableInventario="";

	public List<CuentaContable> cuentacontableinventariosForeignKey;

	public List<CuentaContable> getcuentacontableinventariosForeignKey() {
		return cuentacontableinventariosForeignKey;
	}

	public void setcuentacontableinventariosForeignKey(List<CuentaContable> cuentacontableinventariosForeignKey) {
		this.cuentacontableinventariosForeignKey = cuentacontableinventariosForeignKey;
	}

	//OBJETO FK ACTUAL
	public CuentaContable cuentacontableinventarioForeignKey;

	public CuentaContable getcuentacontableinventarioForeignKey() {
		return cuentacontableinventarioForeignKey;
	}

	public void setcuentacontableinventarioForeignKey(CuentaContable cuentacontableinventarioForeignKey) {
		this.cuentacontableinventarioForeignKey = cuentacontableinventarioForeignKey;
	}

	public String sFinalQueryComboCuentaContableCostoVenta="";

	public List<CuentaContable> cuentacontablecostoventasForeignKey;

	public List<CuentaContable> getcuentacontablecostoventasForeignKey() {
		return cuentacontablecostoventasForeignKey;
	}

	public void setcuentacontablecostoventasForeignKey(List<CuentaContable> cuentacontablecostoventasForeignKey) {
		this.cuentacontablecostoventasForeignKey = cuentacontablecostoventasForeignKey;
	}

	//OBJETO FK ACTUAL
	public CuentaContable cuentacontablecostoventaForeignKey;

	public CuentaContable getcuentacontablecostoventaForeignKey() {
		return cuentacontablecostoventaForeignKey;
	}

	public void setcuentacontablecostoventaForeignKey(CuentaContable cuentacontablecostoventaForeignKey) {
		this.cuentacontablecostoventaForeignKey = cuentacontablecostoventaForeignKey;
	}

	public String sFinalQueryComboCuentaContableVenta="";

	public List<CuentaContable> cuentacontableventasForeignKey;

	public List<CuentaContable> getcuentacontableventasForeignKey() {
		return cuentacontableventasForeignKey;
	}

	public void setcuentacontableventasForeignKey(List<CuentaContable> cuentacontableventasForeignKey) {
		this.cuentacontableventasForeignKey = cuentacontableventasForeignKey;
	}

	//OBJETO FK ACTUAL
	public CuentaContable cuentacontableventaForeignKey;

	public CuentaContable getcuentacontableventaForeignKey() {
		return cuentacontableventaForeignKey;
	}

	public void setcuentacontableventaForeignKey(CuentaContable cuentacontableventaForeignKey) {
		this.cuentacontableventaForeignKey = cuentacontableventaForeignKey;
	}

	public String sFinalQueryComboCuentaContableDescuento="";

	public List<CuentaContable> cuentacontabledescuentosForeignKey;

	public List<CuentaContable> getcuentacontabledescuentosForeignKey() {
		return cuentacontabledescuentosForeignKey;
	}

	public void setcuentacontabledescuentosForeignKey(List<CuentaContable> cuentacontabledescuentosForeignKey) {
		this.cuentacontabledescuentosForeignKey = cuentacontabledescuentosForeignKey;
	}

	//OBJETO FK ACTUAL
	public CuentaContable cuentacontabledescuentoForeignKey;

	public CuentaContable getcuentacontabledescuentoForeignKey() {
		return cuentacontabledescuentoForeignKey;
	}

	public void setcuentacontabledescuentoForeignKey(CuentaContable cuentacontabledescuentoForeignKey) {
		this.cuentacontabledescuentoForeignKey = cuentacontabledescuentoForeignKey;
	}

	public String sFinalQueryComboCuentaContableProduccion="";

	public List<CuentaContable> cuentacontableproduccionsForeignKey;

	public List<CuentaContable> getcuentacontableproduccionsForeignKey() {
		return cuentacontableproduccionsForeignKey;
	}

	public void setcuentacontableproduccionsForeignKey(List<CuentaContable> cuentacontableproduccionsForeignKey) {
		this.cuentacontableproduccionsForeignKey = cuentacontableproduccionsForeignKey;
	}

	//OBJETO FK ACTUAL
	public CuentaContable cuentacontableproduccionForeignKey;

	public CuentaContable getcuentacontableproduccionForeignKey() {
		return cuentacontableproduccionForeignKey;
	}

	public void setcuentacontableproduccionForeignKey(CuentaContable cuentacontableproduccionForeignKey) {
		this.cuentacontableproduccionForeignKey = cuentacontableproduccionForeignKey;
	}

	public String sFinalQueryComboCuentaContableDevolucion="";

	public List<CuentaContable> cuentacontabledevolucionsForeignKey;

	public List<CuentaContable> getcuentacontabledevolucionsForeignKey() {
		return cuentacontabledevolucionsForeignKey;
	}

	public void setcuentacontabledevolucionsForeignKey(List<CuentaContable> cuentacontabledevolucionsForeignKey) {
		this.cuentacontabledevolucionsForeignKey = cuentacontabledevolucionsForeignKey;
	}

	//OBJETO FK ACTUAL
	public CuentaContable cuentacontabledevolucionForeignKey;

	public CuentaContable getcuentacontabledevolucionForeignKey() {
		return cuentacontabledevolucionForeignKey;
	}

	public void setcuentacontabledevolucionForeignKey(CuentaContable cuentacontabledevolucionForeignKey) {
		this.cuentacontabledevolucionForeignKey = cuentacontabledevolucionForeignKey;
	}

	public String sFinalQueryComboCuentaContableIngresoDebito="";

	public List<CuentaContable> cuentacontableingresodebitosForeignKey;

	public List<CuentaContable> getcuentacontableingresodebitosForeignKey() {
		return cuentacontableingresodebitosForeignKey;
	}

	public void setcuentacontableingresodebitosForeignKey(List<CuentaContable> cuentacontableingresodebitosForeignKey) {
		this.cuentacontableingresodebitosForeignKey = cuentacontableingresodebitosForeignKey;
	}

	//OBJETO FK ACTUAL
	public CuentaContable cuentacontableingresodebitoForeignKey;

	public CuentaContable getcuentacontableingresodebitoForeignKey() {
		return cuentacontableingresodebitoForeignKey;
	}

	public void setcuentacontableingresodebitoForeignKey(CuentaContable cuentacontableingresodebitoForeignKey) {
		this.cuentacontableingresodebitoForeignKey = cuentacontableingresodebitoForeignKey;
	}

	public String sFinalQueryComboCuentaContableIngresoCredito="";

	public List<CuentaContable> cuentacontableingresocreditosForeignKey;

	public List<CuentaContable> getcuentacontableingresocreditosForeignKey() {
		return cuentacontableingresocreditosForeignKey;
	}

	public void setcuentacontableingresocreditosForeignKey(List<CuentaContable> cuentacontableingresocreditosForeignKey) {
		this.cuentacontableingresocreditosForeignKey = cuentacontableingresocreditosForeignKey;
	}

	//OBJETO FK ACTUAL
	public CuentaContable cuentacontableingresocreditoForeignKey;

	public CuentaContable getcuentacontableingresocreditoForeignKey() {
		return cuentacontableingresocreditoForeignKey;
	}

	public void setcuentacontableingresocreditoForeignKey(CuentaContable cuentacontableingresocreditoForeignKey) {
		this.cuentacontableingresocreditoForeignKey = cuentacontableingresocreditoForeignKey;
	}

	public String sFinalQueryComboCuentaContableResultadoDebito="";

	public List<CuentaContable> cuentacontableresultadodebitosForeignKey;

	public List<CuentaContable> getcuentacontableresultadodebitosForeignKey() {
		return cuentacontableresultadodebitosForeignKey;
	}

	public void setcuentacontableresultadodebitosForeignKey(List<CuentaContable> cuentacontableresultadodebitosForeignKey) {
		this.cuentacontableresultadodebitosForeignKey = cuentacontableresultadodebitosForeignKey;
	}

	//OBJETO FK ACTUAL
	public CuentaContable cuentacontableresultadodebitoForeignKey;

	public CuentaContable getcuentacontableresultadodebitoForeignKey() {
		return cuentacontableresultadodebitoForeignKey;
	}

	public void setcuentacontableresultadodebitoForeignKey(CuentaContable cuentacontableresultadodebitoForeignKey) {
		this.cuentacontableresultadodebitoForeignKey = cuentacontableresultadodebitoForeignKey;
	}

	public String sFinalQueryComboCuentaContableResultadoCredito="";

	public List<CuentaContable> cuentacontableresultadocreditosForeignKey;

	public List<CuentaContable> getcuentacontableresultadocreditosForeignKey() {
		return cuentacontableresultadocreditosForeignKey;
	}

	public void setcuentacontableresultadocreditosForeignKey(List<CuentaContable> cuentacontableresultadocreditosForeignKey) {
		this.cuentacontableresultadocreditosForeignKey = cuentacontableresultadocreditosForeignKey;
	}

	//OBJETO FK ACTUAL
	public CuentaContable cuentacontableresultadocreditoForeignKey;

	public CuentaContable getcuentacontableresultadocreditoForeignKey() {
		return cuentacontableresultadocreditoForeignKey;
	}

	public void setcuentacontableresultadocreditoForeignKey(CuentaContable cuentacontableresultadocreditoForeignKey) {
		this.cuentacontableresultadocreditoForeignKey = cuentacontableresultadocreditoForeignKey;
	}

		
	
	
	
	//BUSQUEDA INTERNA FK
	public Long idProductoActual=0L;

	public Long getidProductoActual() {
		return idProductoActual;
	}

	public void setidProductoActual(Long idProductoActual) {
		this.idProductoActual= idProductoActual;
	}
	
	
	
	
	//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
	public String sFinalQueryGeneral="";
	public Boolean isEntroOnLoad=false;
	public Boolean isErrorGuardar=false;
	
	public Boolean isGuardarCambiosEnLote=false;
	public Boolean isCargarCombosDependencia=false;
	public Boolean isSeleccionarTodos=false;
	public Boolean isSeleccionados=false;
	public Boolean conGraficoReporte=false;
	
	public Boolean isPostAccionNuevo=false;
	public Boolean isPostAccionSinCerrar=false;
	public Boolean isPostAccionSinMensaje=false;
	
	
	public Boolean esControlTabla=false;
	
	public Boolean isPermisoTodoBodegaProducto;
	public Boolean isPermisoNuevoBodegaProducto;
	public Boolean isPermisoActualizarBodegaProducto;
	public Boolean isPermisoActualizarOriginalBodegaProducto;
	public Boolean isPermisoEliminarBodegaProducto;
	public Boolean isPermisoGuardarCambiosBodegaProducto;
	public Boolean isPermisoConsultaBodegaProducto;
	public Boolean isPermisoBusquedaBodegaProducto;
	public Boolean isPermisoReporteBodegaProducto;
	public Boolean isPermisoPaginacionMedioBodegaProducto;
	public Boolean isPermisoPaginacionAltoBodegaProducto;
	public Boolean isPermisoPaginacionTodoBodegaProducto;
	public Boolean isPermisoCopiarBodegaProducto;
	public Boolean isPermisoVerFormBodegaProducto;
	public Boolean isPermisoDuplicarBodegaProducto;
	public Boolean isPermisoOrdenBodegaProducto;
	
	
	public ArrayList<DatoGeneral> arrDatoGeneral;
	public ArrayList<String> arrDatoGeneralNo;
	ArrayList<Classe> classesActual=new ArrayList<Classe>();
	
	public List<Accion> accions;	
	public List<Accion> accionsFormulario;
	
	
	public ArrayList<DatoGeneralMinimo> arrDatoGeneralMinimos;
	
	public ArrayList<Reporte> tiposArchivosReportes;
	public ArrayList<Reporte> tiposArchivosReportesDinamico;
	public ArrayList<Reporte> tiposReportes;
	public ArrayList<Reporte> tiposReportesDinamico;
	public ArrayList<Reporte> tiposGraficosReportes;
	public ArrayList<Reporte> tiposPaginacion;
	public ArrayList<Reporte> tiposRelaciones;
	public ArrayList<Reporte> tiposAcciones;
	public ArrayList<Reporte> tiposAccionesFormulario;
	public ArrayList<Reporte> tiposSeleccionar;
	
	public ArrayList<Reporte> tiposColumnasSelect;
	public ArrayList<Reporte> tiposRelacionesSelect;
	
	
	public Integer iNumeroPaginacion;
	public Integer iNumeroPaginacionPagina;
	public Pagination pagination;
	public DatosCliente datosCliente;
	public DatosDeep datosDeep;
	public String sTipoArchivoReporte="";
	public String sTipoArchivoReporteDinamico="";
	public String sTipoReporte="";
	public String sTipoReporteDinamico="";
	public String sTipoGraficoReporte="";
	public String sTipoPaginacion="";
	public String sTipoRelacion="";
	public String sTipoAccion="";
	public String sTipoAccionFormulario="";
	public String sTipoSeleccionar="";	
	public String sDetalleReporte="";
	public Boolean isMostrarNumeroPaginacion;
	public String sTipoReporteExtra="";
	public String sValorCampoGeneral="";
	public Boolean esReporteDinamico=false;
	public Boolean esReporteAccionProceso=false;
	public Boolean esRecargarFks=false;
	public String sPathReporteDinamico="";
	
	public BodegaProductoParameterReturnGeneral bodegaproductoReturnGeneral;
	public BodegaProductoParameterReturnGeneral bodegaproductoParameterGeneral;
	
	 	
	public JasperPrint jasperPrint = null;
	
	public Long lIdUsuarioSesion=0L;				
	
	public Boolean isEsNuevoBodegaProducto=false;
	public Boolean esParaAccionDesdeFormularioBodegaProducto=false;
	public Boolean isEsMantenimientoRelacionesRelacionadoUnico=false;
	public Boolean isEsMantenimientoRelaciones=false;
	public Boolean isEsMantenimientoRelacionado=false;	
	public Boolean isContieneImagenes=false;
		
	//public Boolean conTotales=false; //Viene heredado de JInternalFrameBase
	//public Boolean esParaBusquedaForeignKey=false;
	
	
	protected BodegaProductoSessionBeanAdditional bodegaproductoSessionBeanAdditional=null;
	
	public BodegaProductoSessionBeanAdditional getBodegaProductoSessionBeanAdditional() {
		return this.bodegaproductoSessionBeanAdditional;
	}
	
	public void setBodegaProductoSessionBeanAdditional(BodegaProductoSessionBeanAdditional bodegaproductoSessionBeanAdditional) {
		try {
			this.bodegaproductoSessionBeanAdditional=bodegaproductoSessionBeanAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	protected BodegaProductoBeanSwingJInternalFrameAdditional bodegaproductoBeanSwingJInternalFrameAdditional=null;
	//public class BodegaProductoBeanSwingJInternalFrame
	
	public BodegaProductoBeanSwingJInternalFrameAdditional getBodegaProductoBeanSwingJInternalFrameAdditional() {
		return this.bodegaproductoBeanSwingJInternalFrameAdditional;
	}
	
	public void setBodegaProductoBeanSwingJInternalFrameAdditional(BodegaProductoBeanSwingJInternalFrameAdditional bodegaproductoBeanSwingJInternalFrameAdditional) {
		try {
			this.bodegaproductoBeanSwingJInternalFrameAdditional=bodegaproductoBeanSwingJInternalFrameAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	//ESTA EN PADRE
	
	//public BodegaProductoLogic bodegaproductoLogic;
	public SistemaLogicAdditional sistemaLogicAdditional;
	
	
	public BodegaProducto bodegaproductoBean;
	public BodegaProductoConstantesFunciones bodegaproductoConstantesFunciones;
	//public BodegaProductoParameterReturnGeneral bodegaproductoReturnGeneral;
	
	//FK
	
	public EmpresaLogic empresaLogic;
	public SucursalLogic sucursalLogic;
	public BodegaLogic bodegaLogic;
	public ProductoLogic productoLogic;
	public UnidadLogic unidadLogic;
	public CentroCostoLogic centrocostoLogic;
	public EstadoBodegaProductoLogic estadobodegaproductoLogic;
	public CuentaContableLogic cuentacontableinventarioLogic;
	public CuentaContableLogic cuentacontablecostoventaLogic;
	public CuentaContableLogic cuentacontableventaLogic;
	public CuentaContableLogic cuentacontabledescuentoLogic;
	public CuentaContableLogic cuentacontableproduccionLogic;
	public CuentaContableLogic cuentacontabledevolucionLogic;
	public CuentaContableLogic cuentacontableingresodebitoLogic;
	public CuentaContableLogic cuentacontableingresocreditoLogic;
	public CuentaContableLogic cuentacontableresultadodebitoLogic;
	public CuentaContableLogic cuentacontableresultadocreditoLogic;
	
	//PARAMETROS
	
	
	//public List<BodegaProducto> bodegaproductos;	
	//public List<BodegaProducto> bodegaproductosEliminados;
	//public List<BodegaProducto> bodegaproductosAux;
	
	public String sAccionMantenimiento="";
	public String sAccionBusqueda="";
	public String sAccionAdicional="";
	public String sUltimaBusqueda="";
	
	public Mensaje mensaje;
	
	
	public String sVisibilidadTablaBusquedas="";					
	public String sVisibilidadTablaElementos="";	
	public String sVisibilidadTablaAcciones="";			
	
	public Boolean isVisibilidadCeldaNuevoBodegaProducto=false;
	public Boolean isVisibilidadCeldaDuplicarBodegaProducto=true;
	public Boolean isVisibilidadCeldaCopiarBodegaProducto=true;
	public Boolean isVisibilidadCeldaVerFormBodegaProducto=true;
	public Boolean isVisibilidadCeldaOrdenBodegaProducto=true;
	public Boolean isVisibilidadCeldaNuevoRelacionesBodegaProducto=false;
	public Boolean isVisibilidadCeldaModificarBodegaProducto=false;
	public Boolean isVisibilidadCeldaActualizarBodegaProducto=false;
	public Boolean isVisibilidadCeldaEliminarBodegaProducto=false;
	public Boolean isVisibilidadCeldaCancelarBodegaProducto=false;
	public Boolean isVisibilidadCeldaGuardarBodegaProducto=false;	
	public Boolean isVisibilidadCeldaGuardarCambiosBodegaProducto=false;	
	
	
	public Boolean isVisibilidadFK_IdBodega=false;
	public Boolean isVisibilidadFK_IdBodegaProducto=false;
	public Boolean isVisibilidadFK_IdCentroCosto=false;
	public Boolean isVisibilidadFK_IdCuentaContableCostoVenta=false;
	public Boolean isVisibilidadFK_IdCuentaContableDescuento=false;
	public Boolean isVisibilidadFK_IdCuentaContableDevolucion=false;
	public Boolean isVisibilidadFK_IdCuentaContableIngresoCredito=false;
	public Boolean isVisibilidadFK_IdCuentaContableIngresoDebito=false;
	public Boolean isVisibilidadFK_IdCuentaContableInventario=false;
	public Boolean isVisibilidadFK_IdCuentaContableProduccion=false;
	public Boolean isVisibilidadFK_IdCuentaContableResultadoCredito=false;
	public Boolean isVisibilidadFK_IdCuentaContableResultadoDebito=false;
	public Boolean isVisibilidadFK_IdCuentaContableVenta=false;
	public Boolean isVisibilidadFK_IdEmpresa=false;
	public Boolean isVisibilidadFK_IdProducto=false;
	public Boolean isVisibilidadFK_IdSucursal=false;
	public Boolean isVisibilidadFK_IdUnidad=false;
	
	public Long getiIdNuevoBodegaProducto() {
		return this.iIdNuevoBodegaProducto;
	}

	public void setiIdNuevoBodegaProducto(Long iIdNuevoBodegaProducto) {
		this.iIdNuevoBodegaProducto = iIdNuevoBodegaProducto;
	}
	
	public Long getidBodegaProductoActual() {
		return this.idBodegaProductoActual;
	}

	public void setidBodegaProductoActual(Long idBodegaProductoActual) {
		this.idBodegaProductoActual = idBodegaProductoActual;
	}
	
	public int getrowIndexActual() {
		return this.rowIndexActual;
	}

	public void setrowIndexActual(int rowIndexActual) {
		this.rowIndexActual=rowIndexActual;
	}
	
	
	public BodegaProducto getbodegaproducto() {
		return this.bodegaproducto;
	}

	public void setbodegaproducto(BodegaProducto bodegaproducto) {
		this.bodegaproducto = bodegaproducto;
	}
	
	public BodegaProducto getbodegaproductoAux() {
		return this.bodegaproductoAux;
	}

	public void setbodegaproductoAux(BodegaProducto bodegaproductoAux) {
		this.bodegaproductoAux = bodegaproductoAux;
	}				
	
	public BodegaProducto getbodegaproductoAnterior() {
		return this.bodegaproductoAnterior;
	}

	public void setbodegaproductoAnterior(BodegaProducto bodegaproductoAnterior) {
		this.bodegaproductoAnterior = bodegaproductoAnterior;
	}	
	
	public BodegaProducto getbodegaproductoTotales() {
		return this.bodegaproductoTotales;
	}

	public void setbodegaproductoTotales(BodegaProducto bodegaproductoTotales) {
		this.bodegaproductoTotales = bodegaproductoTotales;
	}	
	
	public BodegaProducto getbodegaproductoBean() {
		return this.bodegaproductoBean;
	}

	public void setbodegaproductoBean(BodegaProducto bodegaproductoBean) {
		this.bodegaproductoBean = bodegaproductoBean;
	}	
	
	public BodegaProductoParameterReturnGeneral getbodegaproductoReturnGeneral() {
		return this.bodegaproductoReturnGeneral;
	}

	public void setbodegaproductoReturnGeneral(BodegaProductoParameterReturnGeneral bodegaproductoReturnGeneral) {
		this.bodegaproductoReturnGeneral = bodegaproductoReturnGeneral;
	}	
	
	
	public Long id_bodegaFK_IdBodega=-1L;

	public Long getid_bodegaFK_IdBodega() {
		return this.id_bodegaFK_IdBodega;
	}

	public void setid_bodegaFK_IdBodega(Long id_bodegaFK_IdBodega) {
		this.id_bodegaFK_IdBodega = id_bodegaFK_IdBodega;
	}

	public Long id_estado_bodega_productoFK_IdBodegaProducto=-1L;

	public Long getid_estado_bodega_productoFK_IdBodegaProducto() {
		return this.id_estado_bodega_productoFK_IdBodegaProducto;
	}

	public void setid_estado_bodega_productoFK_IdBodegaProducto(Long id_estado_bodega_productoFK_IdBodegaProducto) {
		this.id_estado_bodega_productoFK_IdBodegaProducto = id_estado_bodega_productoFK_IdBodegaProducto;
	}

	public Long id_centro_costoFK_IdCentroCosto=null;

	public Long getid_centro_costoFK_IdCentroCosto() {
		return this.id_centro_costoFK_IdCentroCosto;
	}

	public void setid_centro_costoFK_IdCentroCosto(Long id_centro_costoFK_IdCentroCosto) {
		this.id_centro_costoFK_IdCentroCosto = id_centro_costoFK_IdCentroCosto;
	}

	public Long id_cuenta_contable_costo_ventaFK_IdCuentaContableCostoVenta=-1L;

	public Long getid_cuenta_contable_costo_ventaFK_IdCuentaContableCostoVenta() {
		return this.id_cuenta_contable_costo_ventaFK_IdCuentaContableCostoVenta;
	}

	public void setid_cuenta_contable_costo_ventaFK_IdCuentaContableCostoVenta(Long id_cuenta_contable_costo_ventaFK_IdCuentaContableCostoVenta) {
		this.id_cuenta_contable_costo_ventaFK_IdCuentaContableCostoVenta = id_cuenta_contable_costo_ventaFK_IdCuentaContableCostoVenta;
	}

	public Long id_cuenta_contable_descuentoFK_IdCuentaContableDescuento=-1L;

	public Long getid_cuenta_contable_descuentoFK_IdCuentaContableDescuento() {
		return this.id_cuenta_contable_descuentoFK_IdCuentaContableDescuento;
	}

	public void setid_cuenta_contable_descuentoFK_IdCuentaContableDescuento(Long id_cuenta_contable_descuentoFK_IdCuentaContableDescuento) {
		this.id_cuenta_contable_descuentoFK_IdCuentaContableDescuento = id_cuenta_contable_descuentoFK_IdCuentaContableDescuento;
	}

	public Long id_cuenta_contable_devolucionFK_IdCuentaContableDevolucion=-1L;

	public Long getid_cuenta_contable_devolucionFK_IdCuentaContableDevolucion() {
		return this.id_cuenta_contable_devolucionFK_IdCuentaContableDevolucion;
	}

	public void setid_cuenta_contable_devolucionFK_IdCuentaContableDevolucion(Long id_cuenta_contable_devolucionFK_IdCuentaContableDevolucion) {
		this.id_cuenta_contable_devolucionFK_IdCuentaContableDevolucion = id_cuenta_contable_devolucionFK_IdCuentaContableDevolucion;
	}

	public Long id_cuenta_contable_ingreso_creditoFK_IdCuentaContableIngresoCredito=-1L;

	public Long getid_cuenta_contable_ingreso_creditoFK_IdCuentaContableIngresoCredito() {
		return this.id_cuenta_contable_ingreso_creditoFK_IdCuentaContableIngresoCredito;
	}

	public void setid_cuenta_contable_ingreso_creditoFK_IdCuentaContableIngresoCredito(Long id_cuenta_contable_ingreso_creditoFK_IdCuentaContableIngresoCredito) {
		this.id_cuenta_contable_ingreso_creditoFK_IdCuentaContableIngresoCredito = id_cuenta_contable_ingreso_creditoFK_IdCuentaContableIngresoCredito;
	}

	public Long id_cuenta_contable_ingreso_debitoFK_IdCuentaContableIngresoDebito=-1L;

	public Long getid_cuenta_contable_ingreso_debitoFK_IdCuentaContableIngresoDebito() {
		return this.id_cuenta_contable_ingreso_debitoFK_IdCuentaContableIngresoDebito;
	}

	public void setid_cuenta_contable_ingreso_debitoFK_IdCuentaContableIngresoDebito(Long id_cuenta_contable_ingreso_debitoFK_IdCuentaContableIngresoDebito) {
		this.id_cuenta_contable_ingreso_debitoFK_IdCuentaContableIngresoDebito = id_cuenta_contable_ingreso_debitoFK_IdCuentaContableIngresoDebito;
	}

	public Long id_cuenta_contable_inventarioFK_IdCuentaContableInventario=-1L;

	public Long getid_cuenta_contable_inventarioFK_IdCuentaContableInventario() {
		return this.id_cuenta_contable_inventarioFK_IdCuentaContableInventario;
	}

	public void setid_cuenta_contable_inventarioFK_IdCuentaContableInventario(Long id_cuenta_contable_inventarioFK_IdCuentaContableInventario) {
		this.id_cuenta_contable_inventarioFK_IdCuentaContableInventario = id_cuenta_contable_inventarioFK_IdCuentaContableInventario;
	}

	public Long id_cuenta_contable_produccionFK_IdCuentaContableProduccion=-1L;

	public Long getid_cuenta_contable_produccionFK_IdCuentaContableProduccion() {
		return this.id_cuenta_contable_produccionFK_IdCuentaContableProduccion;
	}

	public void setid_cuenta_contable_produccionFK_IdCuentaContableProduccion(Long id_cuenta_contable_produccionFK_IdCuentaContableProduccion) {
		this.id_cuenta_contable_produccionFK_IdCuentaContableProduccion = id_cuenta_contable_produccionFK_IdCuentaContableProduccion;
	}

	public Long id_cuenta_contable_resultado_creditoFK_IdCuentaContableResultadoCredito=-1L;

	public Long getid_cuenta_contable_resultado_creditoFK_IdCuentaContableResultadoCredito() {
		return this.id_cuenta_contable_resultado_creditoFK_IdCuentaContableResultadoCredito;
	}

	public void setid_cuenta_contable_resultado_creditoFK_IdCuentaContableResultadoCredito(Long id_cuenta_contable_resultado_creditoFK_IdCuentaContableResultadoCredito) {
		this.id_cuenta_contable_resultado_creditoFK_IdCuentaContableResultadoCredito = id_cuenta_contable_resultado_creditoFK_IdCuentaContableResultadoCredito;
	}

	public Long id_cuenta_contable_resultado_debitoFK_IdCuentaContableResultadoDebito=-1L;

	public Long getid_cuenta_contable_resultado_debitoFK_IdCuentaContableResultadoDebito() {
		return this.id_cuenta_contable_resultado_debitoFK_IdCuentaContableResultadoDebito;
	}

	public void setid_cuenta_contable_resultado_debitoFK_IdCuentaContableResultadoDebito(Long id_cuenta_contable_resultado_debitoFK_IdCuentaContableResultadoDebito) {
		this.id_cuenta_contable_resultado_debitoFK_IdCuentaContableResultadoDebito = id_cuenta_contable_resultado_debitoFK_IdCuentaContableResultadoDebito;
	}

	public Long id_cuenta_contable_ventaFK_IdCuentaContableVenta=-1L;

	public Long getid_cuenta_contable_ventaFK_IdCuentaContableVenta() {
		return this.id_cuenta_contable_ventaFK_IdCuentaContableVenta;
	}

	public void setid_cuenta_contable_ventaFK_IdCuentaContableVenta(Long id_cuenta_contable_ventaFK_IdCuentaContableVenta) {
		this.id_cuenta_contable_ventaFK_IdCuentaContableVenta = id_cuenta_contable_ventaFK_IdCuentaContableVenta;
	}

	public Long id_empresaFK_IdEmpresa=-1L;

	public Long getid_empresaFK_IdEmpresa() {
		return this.id_empresaFK_IdEmpresa;
	}

	public void setid_empresaFK_IdEmpresa(Long id_empresaFK_IdEmpresa) {
		this.id_empresaFK_IdEmpresa = id_empresaFK_IdEmpresa;
	}

	public Long id_productoFK_IdProducto=-1L;

	public Long getid_productoFK_IdProducto() {
		return this.id_productoFK_IdProducto;
	}

	public void setid_productoFK_IdProducto(Long id_productoFK_IdProducto) {
		this.id_productoFK_IdProducto = id_productoFK_IdProducto;
	}

	public Long id_sucursalFK_IdSucursal=-1L;

	public Long getid_sucursalFK_IdSucursal() {
		return this.id_sucursalFK_IdSucursal;
	}

	public void setid_sucursalFK_IdSucursal(Long id_sucursalFK_IdSucursal) {
		this.id_sucursalFK_IdSucursal = id_sucursalFK_IdSucursal;
	}

	public Long id_unidadFK_IdUnidad=-1L;

	public Long getid_unidadFK_IdUnidad() {
		return this.id_unidadFK_IdUnidad;
	}

	public void setid_unidadFK_IdUnidad(Long id_unidadFK_IdUnidad) {
		this.id_unidadFK_IdUnidad = id_unidadFK_IdUnidad;
	}

		
	
	//ELEMENTOS TABLAS PARAMETOS
	
	
	
	
	
	
	//ELEMENTOS TABLAS PARAMETOS_FIN
	
	
	public BodegaProductoLogic getBodegaProductoLogic()	{		
		return bodegaproductoLogic;
	}

	public void setBodegaProductoLogic(BodegaProductoLogic bodegaproductoLogic) {
		this.bodegaproductoLogic = bodegaproductoLogic;
	}
	
	
	public void setsFinalQueryGeneral(String sFinalQueryGeneral) {
		this.sFinalQueryGeneral=sFinalQueryGeneral;
	}
	
	public String getsFinalQueryGeneral() {
		return this.sFinalQueryGeneral;
	}
		
	public Boolean getIsGuardarCambiosEnLote() {
		return isGuardarCambiosEnLote;
	}

	public void setIsGuardarCambiosEnLote(Boolean isGuardarCambiosEnLote) {
		this.isGuardarCambiosEnLote = isGuardarCambiosEnLote;
	}
	
	public Boolean getIsCargarCombosDependencia() {
		return isCargarCombosDependencia;
	}

	public void setIsCargarCombosDependencia(Boolean isCargarCombosDependencia) {
		this.isCargarCombosDependencia = isCargarCombosDependencia;
	}
	
	public Boolean getIsEsNuevoBodegaProducto() {
		return isEsNuevoBodegaProducto;
	}

	public void setIsEsNuevoBodegaProducto(Boolean isEsNuevoBodegaProducto) {
		this.isEsNuevoBodegaProducto = isEsNuevoBodegaProducto;
	}

	public Boolean getEsParaAccionDesdeFormularioBodegaProducto() {
		return esParaAccionDesdeFormularioBodegaProducto;
	}
	
	public void setEsParaAccionDesdeFormularioBodegaProducto(Boolean esParaAccionDesdeFormularioBodegaProducto) {
		this.esParaAccionDesdeFormularioBodegaProducto = esParaAccionDesdeFormularioBodegaProducto;
	}
	
	public Boolean getIsEsMantenimientoRelacionesRelacionadoUnico() {
		return isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public void setIsEsMantenimientoRelacionesRelacionadoUnico(Boolean isEsMantenimientoRelacionesRelacionadoUnico) {
		this.isEsMantenimientoRelacionesRelacionadoUnico = isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public Boolean getIsEsMantenimientoRelaciones() {
		return isEsMantenimientoRelaciones;
	}

	public void setIsEsMantenimientoRelaciones(Boolean isEsMantenimientoRelaciones) {
		this.isEsMantenimientoRelaciones = isEsMantenimientoRelaciones;
	}

	public Boolean getIsEsMantenimientoRelacionado() {
		return isEsMantenimientoRelacionado;
	}

	public void setIsEsMantenimientoRelacionado(Boolean isEsMantenimientoRelacionado) {
		this.isEsMantenimientoRelacionado = isEsMantenimientoRelacionado;
	}

	public Boolean getesParaBusquedaForeignKey() {
		return esParaBusquedaForeignKey;
	}

	public void setesParaBusquedaForeignKey(Boolean esParaBusquedaForeignKey) {
		this.esParaBusquedaForeignKey = esParaBusquedaForeignKey;
	}

	public Boolean getIsContieneImagenes() {
		return isContieneImagenes;
	}

	public void setIsContieneImagenes(Boolean isContieneImagenes) {
		this.isContieneImagenes = isContieneImagenes;
	}		
	
	
	public void cargarCombosEmpresasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.empresasForeignKey=new ArrayList<Empresa>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EmpresaLogic empresaLogic=new EmpresaLogic();

			//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

			if(this.bodegaproductoSessionBean==null) {
				this.bodegaproductoSessionBean=new BodegaProductoSessionBean();
			}

			if(!this.bodegaproductoSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

					empresaLogic.getTodosEmpresasWithConnection(sFinalQuery,new Pagination());

					this.empresasForeignKey=empresaLogic.getEmpresas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEmpresa(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					empresaLogic.getEntityWithConnection(bodegaproductoSessionBean.getlidEmpresaActual());
					this.empresasForeignKey.add(empresaLogic.getEmpresa());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosSucursalsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.sucursalsForeignKey=new ArrayList<Sucursal>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			SucursalLogic sucursalLogic=new SucursalLogic();

			//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

			if(this.bodegaproductoSessionBean==null) {
				this.bodegaproductoSessionBean=new BodegaProductoSessionBean();
			}

			if(!this.bodegaproductoSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

					sucursalLogic.getTodosSucursalsWithConnection(sFinalQuery,new Pagination());

					this.sucursalsForeignKey=sucursalLogic.getSucursals();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaSucursal(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					sucursalLogic.getEntityWithConnection(bodegaproductoSessionBean.getlidSucursalActual());
					this.sucursalsForeignKey.add(sucursalLogic.getSucursal());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosBodegasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.bodegasForeignKey=new ArrayList<Bodega>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			BodegaLogic bodegaLogic=new BodegaLogic();

			//bodegaLogic.getBodegaDataAccess().setIsForForeingKeyData(true);

			if(this.bodegaproductoSessionBean==null) {
				this.bodegaproductoSessionBean=new BodegaProductoSessionBean();
			}

			if(!this.bodegaproductoSessionBean.getisBusquedaDesdeForeignKeySesionBodega()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//bodegaLogic.getBodegaDataAccess().setIsForForeingKeyData(true);

					bodegaLogic.getTodosBodegasWithConnection(sFinalQuery,new Pagination());

					this.bodegasForeignKey=bodegaLogic.getBodegas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaBodega(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					bodegaLogic.getEntityWithConnection(bodegaproductoSessionBean.getlidBodegaActual());
					this.bodegasForeignKey.add(bodegaLogic.getBodega());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosProductosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.productosForeignKey=new ArrayList<Producto>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			ProductoLogic productoLogic=new ProductoLogic();

			//productoLogic.getProductoDataAccess().setIsForForeingKeyData(true);

			if(this.bodegaproductoSessionBean==null) {
				this.bodegaproductoSessionBean=new BodegaProductoSessionBean();
			}

			if(!this.bodegaproductoSessionBean.getisBusquedaDesdeForeignKeySesionProducto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//productoLogic.getProductoDataAccess().setIsForForeingKeyData(true);

					productoLogic.getTodosProductosWithConnection(sFinalQuery,new Pagination());

					this.productosForeignKey=productoLogic.getProductos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaProducto(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					productoLogic.getEntityWithConnection(bodegaproductoSessionBean.getlidProductoActual());
					this.productosForeignKey.add(productoLogic.getProducto());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosUnidadsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.unidadsForeignKey=new ArrayList<Unidad>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			UnidadLogic unidadLogic=new UnidadLogic();

			//unidadLogic.getUnidadDataAccess().setIsForForeingKeyData(true);

			if(this.bodegaproductoSessionBean==null) {
				this.bodegaproductoSessionBean=new BodegaProductoSessionBean();
			}

			if(!this.bodegaproductoSessionBean.getisBusquedaDesdeForeignKeySesionUnidad()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//unidadLogic.getUnidadDataAccess().setIsForForeingKeyData(true);

					unidadLogic.getTodosUnidadsWithConnection(sFinalQuery,new Pagination());

					this.unidadsForeignKey=unidadLogic.getUnidads();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaUnidad(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					unidadLogic.getEntityWithConnection(bodegaproductoSessionBean.getlidUnidadActual());
					this.unidadsForeignKey.add(unidadLogic.getUnidad());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCentroCostosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.centrocostosForeignKey=new ArrayList<CentroCosto>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CentroCostoLogic centrocostoLogic=new CentroCostoLogic();

			//centrocostoLogic.getCentroCostoDataAccess().setIsForForeingKeyData(true);

			if(this.bodegaproductoSessionBean==null) {
				this.bodegaproductoSessionBean=new BodegaProductoSessionBean();
			}

			if(!this.bodegaproductoSessionBean.getisBusquedaDesdeForeignKeySesionCentroCosto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//centrocostoLogic.getCentroCostoDataAccess().setIsForForeingKeyData(true);

					centrocostoLogic.getTodosCentroCostosWithConnection(sFinalQuery,new Pagination());

					this.centrocostosForeignKey=centrocostoLogic.getCentroCostos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCentroCosto(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					centrocostoLogic.getEntityWithConnection(bodegaproductoSessionBean.getlidCentroCostoActual());
					this.centrocostosForeignKey.add(centrocostoLogic.getCentroCosto());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEstadoBodegaProductosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.estadobodegaproductosForeignKey=new ArrayList<EstadoBodegaProducto>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EstadoBodegaProductoLogic estadobodegaproductoLogic=new EstadoBodegaProductoLogic();

			//estadobodegaproductoLogic.getEstadoBodegaProductoDataAccess().setIsForForeingKeyData(true);

			if(this.bodegaproductoSessionBean==null) {
				this.bodegaproductoSessionBean=new BodegaProductoSessionBean();
			}

			if(!this.bodegaproductoSessionBean.getisBusquedaDesdeForeignKeySesionEstadoBodegaProducto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//estadobodegaproductoLogic.getEstadoBodegaProductoDataAccess().setIsForForeingKeyData(true);

					estadobodegaproductoLogic.getTodosEstadoBodegaProductosWithConnection(sFinalQuery,new Pagination());

					this.estadobodegaproductosForeignKey=estadobodegaproductoLogic.getEstadoBodegaProductos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEstadoBodegaProducto(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					estadobodegaproductoLogic.getEntityWithConnection(bodegaproductoSessionBean.getlidEstadoBodegaProductoActual());
					this.estadobodegaproductosForeignKey.add(estadobodegaproductoLogic.getEstadoBodegaProducto());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCuentaContableInventariosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.cuentacontableinventariosForeignKey=new ArrayList<CuentaContable>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CuentaContableLogic cuentacontableLogic=new CuentaContableLogic();

			//cuentacontableLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

			if(this.bodegaproductoSessionBean==null) {
				this.bodegaproductoSessionBean=new BodegaProductoSessionBean();
			}

			if(!this.bodegaproductoSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableInventario()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//cuentacontableinventarioLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

					cuentacontableLogic.getTodosCuentaContablesWithConnection(sFinalQuery,new Pagination());

					this.cuentacontableinventariosForeignKey=cuentacontableLogic.getCuentaContables();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCuentaContableInventario(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontableLogic.getEntityWithConnection(bodegaproductoSessionBean.getlidCuentaContableInventarioActual());
					this.cuentacontableinventariosForeignKey.add(cuentacontableLogic.getCuentaContable());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCuentaContableCostoVentasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.cuentacontablecostoventasForeignKey=new ArrayList<CuentaContable>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CuentaContableLogic cuentacontableLogic=new CuentaContableLogic();

			//cuentacontableLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

			if(this.bodegaproductoSessionBean==null) {
				this.bodegaproductoSessionBean=new BodegaProductoSessionBean();
			}

			if(!this.bodegaproductoSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableCostoVenta()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//cuentacontablecostoventaLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

					cuentacontableLogic.getTodosCuentaContablesWithConnection(sFinalQuery,new Pagination());

					this.cuentacontablecostoventasForeignKey=cuentacontableLogic.getCuentaContables();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCuentaContableCostoVenta(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontableLogic.getEntityWithConnection(bodegaproductoSessionBean.getlidCuentaContableCostoVentaActual());
					this.cuentacontablecostoventasForeignKey.add(cuentacontableLogic.getCuentaContable());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCuentaContableVentasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.cuentacontableventasForeignKey=new ArrayList<CuentaContable>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CuentaContableLogic cuentacontableLogic=new CuentaContableLogic();

			//cuentacontableLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

			if(this.bodegaproductoSessionBean==null) {
				this.bodegaproductoSessionBean=new BodegaProductoSessionBean();
			}

			if(!this.bodegaproductoSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableVenta()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//cuentacontableventaLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

					cuentacontableLogic.getTodosCuentaContablesWithConnection(sFinalQuery,new Pagination());

					this.cuentacontableventasForeignKey=cuentacontableLogic.getCuentaContables();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCuentaContableVenta(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontableLogic.getEntityWithConnection(bodegaproductoSessionBean.getlidCuentaContableVentaActual());
					this.cuentacontableventasForeignKey.add(cuentacontableLogic.getCuentaContable());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCuentaContableDescuentosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.cuentacontabledescuentosForeignKey=new ArrayList<CuentaContable>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CuentaContableLogic cuentacontableLogic=new CuentaContableLogic();

			//cuentacontableLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

			if(this.bodegaproductoSessionBean==null) {
				this.bodegaproductoSessionBean=new BodegaProductoSessionBean();
			}

			if(!this.bodegaproductoSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableDescuento()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//cuentacontabledescuentoLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

					cuentacontableLogic.getTodosCuentaContablesWithConnection(sFinalQuery,new Pagination());

					this.cuentacontabledescuentosForeignKey=cuentacontableLogic.getCuentaContables();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCuentaContableDescuento(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontableLogic.getEntityWithConnection(bodegaproductoSessionBean.getlidCuentaContableDescuentoActual());
					this.cuentacontabledescuentosForeignKey.add(cuentacontableLogic.getCuentaContable());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCuentaContableProduccionsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.cuentacontableproduccionsForeignKey=new ArrayList<CuentaContable>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CuentaContableLogic cuentacontableLogic=new CuentaContableLogic();

			//cuentacontableLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

			if(this.bodegaproductoSessionBean==null) {
				this.bodegaproductoSessionBean=new BodegaProductoSessionBean();
			}

			if(!this.bodegaproductoSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableProduccion()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//cuentacontableproduccionLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

					cuentacontableLogic.getTodosCuentaContablesWithConnection(sFinalQuery,new Pagination());

					this.cuentacontableproduccionsForeignKey=cuentacontableLogic.getCuentaContables();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCuentaContableProduccion(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontableLogic.getEntityWithConnection(bodegaproductoSessionBean.getlidCuentaContableProduccionActual());
					this.cuentacontableproduccionsForeignKey.add(cuentacontableLogic.getCuentaContable());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCuentaContableDevolucionsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.cuentacontabledevolucionsForeignKey=new ArrayList<CuentaContable>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CuentaContableLogic cuentacontableLogic=new CuentaContableLogic();

			//cuentacontableLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

			if(this.bodegaproductoSessionBean==null) {
				this.bodegaproductoSessionBean=new BodegaProductoSessionBean();
			}

			if(!this.bodegaproductoSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableDevolucion()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//cuentacontabledevolucionLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

					cuentacontableLogic.getTodosCuentaContablesWithConnection(sFinalQuery,new Pagination());

					this.cuentacontabledevolucionsForeignKey=cuentacontableLogic.getCuentaContables();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCuentaContableDevolucion(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontableLogic.getEntityWithConnection(bodegaproductoSessionBean.getlidCuentaContableDevolucionActual());
					this.cuentacontabledevolucionsForeignKey.add(cuentacontableLogic.getCuentaContable());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCuentaContableIngresoDebitosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.cuentacontableingresodebitosForeignKey=new ArrayList<CuentaContable>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CuentaContableLogic cuentacontableLogic=new CuentaContableLogic();

			//cuentacontableLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

			if(this.bodegaproductoSessionBean==null) {
				this.bodegaproductoSessionBean=new BodegaProductoSessionBean();
			}

			if(!this.bodegaproductoSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableIngresoDebito()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//cuentacontableingresodebitoLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

					cuentacontableLogic.getTodosCuentaContablesWithConnection(sFinalQuery,new Pagination());

					this.cuentacontableingresodebitosForeignKey=cuentacontableLogic.getCuentaContables();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCuentaContableIngresoDebito(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontableLogic.getEntityWithConnection(bodegaproductoSessionBean.getlidCuentaContableIngresoDebitoActual());
					this.cuentacontableingresodebitosForeignKey.add(cuentacontableLogic.getCuentaContable());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCuentaContableIngresoCreditosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.cuentacontableingresocreditosForeignKey=new ArrayList<CuentaContable>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CuentaContableLogic cuentacontableLogic=new CuentaContableLogic();

			//cuentacontableLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

			if(this.bodegaproductoSessionBean==null) {
				this.bodegaproductoSessionBean=new BodegaProductoSessionBean();
			}

			if(!this.bodegaproductoSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableIngresoCredito()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//cuentacontableingresocreditoLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

					cuentacontableLogic.getTodosCuentaContablesWithConnection(sFinalQuery,new Pagination());

					this.cuentacontableingresocreditosForeignKey=cuentacontableLogic.getCuentaContables();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCuentaContableIngresoCredito(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontableLogic.getEntityWithConnection(bodegaproductoSessionBean.getlidCuentaContableIngresoCreditoActual());
					this.cuentacontableingresocreditosForeignKey.add(cuentacontableLogic.getCuentaContable());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCuentaContableResultadoDebitosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.cuentacontableresultadodebitosForeignKey=new ArrayList<CuentaContable>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CuentaContableLogic cuentacontableLogic=new CuentaContableLogic();

			//cuentacontableLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

			if(this.bodegaproductoSessionBean==null) {
				this.bodegaproductoSessionBean=new BodegaProductoSessionBean();
			}

			if(!this.bodegaproductoSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableResultadoDebito()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//cuentacontableresultadodebitoLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

					cuentacontableLogic.getTodosCuentaContablesWithConnection(sFinalQuery,new Pagination());

					this.cuentacontableresultadodebitosForeignKey=cuentacontableLogic.getCuentaContables();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCuentaContableResultadoDebito(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontableLogic.getEntityWithConnection(bodegaproductoSessionBean.getlidCuentaContableResultadoDebitoActual());
					this.cuentacontableresultadodebitosForeignKey.add(cuentacontableLogic.getCuentaContable());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCuentaContableResultadoCreditosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.cuentacontableresultadocreditosForeignKey=new ArrayList<CuentaContable>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CuentaContableLogic cuentacontableLogic=new CuentaContableLogic();

			//cuentacontableLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

			if(this.bodegaproductoSessionBean==null) {
				this.bodegaproductoSessionBean=new BodegaProductoSessionBean();
			}

			if(!this.bodegaproductoSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableResultadoCredito()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//cuentacontableresultadocreditoLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

					cuentacontableLogic.getTodosCuentaContablesWithConnection(sFinalQuery,new Pagination());

					this.cuentacontableresultadocreditosForeignKey=cuentacontableLogic.getCuentaContables();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCuentaContableResultadoCredito(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontableLogic.getEntityWithConnection(bodegaproductoSessionBean.getlidCuentaContableResultadoCreditoActual());
					this.cuentacontableresultadocreditosForeignKey.add(cuentacontableLogic.getCuentaContable());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	
	public void setActualEmpresaForeignKey(Long idEmpresaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(empresaTemp!=null) {

					if(this.bodegaproducto!=null) {
						this.bodegaproducto.setEmpresa(empresaTemp);
					}

					if(this.jInternalFrameDetalleFormBodegaProducto!=null) {
						this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_empresaBodegaProducto.setSelectedItem(empresaTemp);
					}
				} else {
					//jComboBoxid_empresaBodegaProducto.setSelectedItem(empresaTemp);
					if(this.jInternalFrameDetalleFormBodegaProducto!=null) {
						if(this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_empresaBodegaProducto.getItemCount()>0) {
							this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_empresaBodegaProducto.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEmpresaForeignKeyDescripcion(Long idEmpresaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}


			sDescripcion=EmpresaConstantesFunciones.getEmpresaDescripcion(empresaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEmpresaForeignKeyGenerico(Long idEmpresaSeleccionado,JComboBox jComboBoxid_empresaBodegaProductoGenerico)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(empresaTemp!=null) {
				jComboBoxid_empresaBodegaProductoGenerico.setSelectedItem(empresaTemp);
			} else {
				if(jComboBoxid_empresaBodegaProductoGenerico!=null && jComboBoxid_empresaBodegaProductoGenerico.getItemCount()>0) {
					jComboBoxid_empresaBodegaProductoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualSucursalForeignKey(Long idSucursalSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(sucursalTemp!=null) {

					if(this.bodegaproducto!=null) {
						this.bodegaproducto.setSucursal(sucursalTemp);
					}

					if(this.jInternalFrameDetalleFormBodegaProducto!=null) {
						this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_sucursalBodegaProducto.setSelectedItem(sucursalTemp);
					}
				} else {
					//jComboBoxid_sucursalBodegaProducto.setSelectedItem(sucursalTemp);
					if(this.jInternalFrameDetalleFormBodegaProducto!=null) {
						if(this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_sucursalBodegaProducto.getItemCount()>0) {
							this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_sucursalBodegaProducto.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualSucursalForeignKeyDescripcion(Long idSucursalSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}


			sDescripcion=SucursalConstantesFunciones.getSucursalDescripcion(sucursalTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualSucursalForeignKeyGenerico(Long idSucursalSeleccionado,JComboBox jComboBoxid_sucursalBodegaProductoGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sucursalTemp!=null) {
				jComboBoxid_sucursalBodegaProductoGenerico.setSelectedItem(sucursalTemp);
			} else {
				if(jComboBoxid_sucursalBodegaProductoGenerico!=null && jComboBoxid_sucursalBodegaProductoGenerico.getItemCount()>0) {
					jComboBoxid_sucursalBodegaProductoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualBodegaForeignKey(Long idBodegaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Bodega  bodegaTemp=null;

			for(Bodega bodegaAux:bodegasForeignKey) {
				if(bodegaAux.getId()!=null && bodegaAux.getId().equals(idBodegaSeleccionado)) {
					bodegaTemp=bodegaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(bodegaTemp!=null) {

					if(this.bodegaproducto!=null) {
						this.bodegaproducto.setBodega(bodegaTemp);
					}

					if(this.jInternalFrameDetalleFormBodegaProducto!=null) {
						this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_bodegaBodegaProducto.setSelectedItem(bodegaTemp);
					}
				} else {
					//jComboBoxid_bodegaBodegaProducto.setSelectedItem(bodegaTemp);
					if(this.jInternalFrameDetalleFormBodegaProducto!=null) {
						if(this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_bodegaBodegaProducto.getItemCount()>0) {
							this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_bodegaBodegaProducto.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdBodega") || sFormularioTipoBusqueda.equals("Todos")){
					if(bodegaTemp!=null && jComboBoxid_bodegaFK_IdBodegaBodegaProducto!=null) {
						jComboBoxid_bodegaFK_IdBodegaBodegaProducto.setSelectedItem(bodegaTemp);
					} else {
						if(jComboBoxid_bodegaFK_IdBodegaBodegaProducto!=null) {
							//jComboBoxid_bodegaFK_IdBodegaBodegaProducto.setSelectedItem(bodegaTemp);
							if(jComboBoxid_bodegaFK_IdBodegaBodegaProducto.getItemCount()>0) {
								jComboBoxid_bodegaFK_IdBodegaBodegaProducto.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualBodegaForeignKeyDescripcion(Long idBodegaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Bodega  bodegaTemp=null;

			for(Bodega bodegaAux:bodegasForeignKey) {
				if(bodegaAux.getId()!=null && bodegaAux.getId().equals(idBodegaSeleccionado)) {
					bodegaTemp=bodegaAux;
					break;
				}
			}


			sDescripcion=BodegaConstantesFunciones.getBodegaDescripcion(bodegaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualBodegaForeignKeyGenerico(Long idBodegaSeleccionado,JComboBox jComboBoxid_bodegaBodegaProductoGenerico)throws Exception
	{
		try
		{
			Bodega  bodegaTemp=null;

			for(Bodega bodegaAux:bodegasForeignKey) {
				if(bodegaAux.getId()!=null && bodegaAux.getId().equals(idBodegaSeleccionado)) {
					bodegaTemp=bodegaAux;
					break;
				}
			}

			if(bodegaTemp!=null) {
				jComboBoxid_bodegaBodegaProductoGenerico.setSelectedItem(bodegaTemp);
			} else {
				if(jComboBoxid_bodegaBodegaProductoGenerico!=null && jComboBoxid_bodegaBodegaProductoGenerico.getItemCount()>0) {
					jComboBoxid_bodegaBodegaProductoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualProductoForeignKey(Long idProductoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Producto  productoTemp=null;

			for(Producto productoAux:productosForeignKey) {
				if(productoAux.getId()!=null && productoAux.getId().equals(idProductoSeleccionado)) {
					productoTemp=productoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(productoTemp!=null) {

					if(this.bodegaproducto!=null) {
						this.bodegaproducto.setProducto(productoTemp);
					}

					if(this.jInternalFrameDetalleFormBodegaProducto!=null) {
						this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_productoBodegaProducto.setSelectedItem(productoTemp);
					}
				} else {
					//jComboBoxid_productoBodegaProducto.setSelectedItem(productoTemp);
					if(this.jInternalFrameDetalleFormBodegaProducto!=null) {
						if(this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_productoBodegaProducto.getItemCount()>0) {
							this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_productoBodegaProducto.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdProducto") || sFormularioTipoBusqueda.equals("Todos")){
					if(productoTemp!=null && jComboBoxid_productoFK_IdProductoBodegaProducto!=null) {
						jComboBoxid_productoFK_IdProductoBodegaProducto.setSelectedItem(productoTemp);
					} else {
						if(jComboBoxid_productoFK_IdProductoBodegaProducto!=null) {
							//jComboBoxid_productoFK_IdProductoBodegaProducto.setSelectedItem(productoTemp);
							if(jComboBoxid_productoFK_IdProductoBodegaProducto.getItemCount()>0) {
								jComboBoxid_productoFK_IdProductoBodegaProducto.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualProductoForeignKeyDescripcion(Long idProductoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Producto  productoTemp=null;

			for(Producto productoAux:productosForeignKey) {
				if(productoAux.getId()!=null && productoAux.getId().equals(idProductoSeleccionado)) {
					productoTemp=productoAux;
					break;
				}
			}


			sDescripcion=ProductoConstantesFunciones.getProductoDescripcion(productoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualProductoForeignKeyGenerico(Long idProductoSeleccionado,JComboBox jComboBoxid_productoBodegaProductoGenerico)throws Exception
	{
		try
		{
			Producto  productoTemp=null;

			for(Producto productoAux:productosForeignKey) {
				if(productoAux.getId()!=null && productoAux.getId().equals(idProductoSeleccionado)) {
					productoTemp=productoAux;
					break;
				}
			}

			if(productoTemp!=null) {
				jComboBoxid_productoBodegaProductoGenerico.setSelectedItem(productoTemp);
			} else {
				if(jComboBoxid_productoBodegaProductoGenerico!=null && jComboBoxid_productoBodegaProductoGenerico.getItemCount()>0) {
					jComboBoxid_productoBodegaProductoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualUnidadForeignKey(Long idUnidadSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Unidad  unidadTemp=null;

			for(Unidad unidadAux:unidadsForeignKey) {
				if(unidadAux.getId()!=null && unidadAux.getId().equals(idUnidadSeleccionado)) {
					unidadTemp=unidadAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(unidadTemp!=null) {

					if(this.bodegaproducto!=null) {
						this.bodegaproducto.setUnidad(unidadTemp);
					}

					if(this.jInternalFrameDetalleFormBodegaProducto!=null) {
						this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_unidadBodegaProducto.setSelectedItem(unidadTemp);
					}
				} else {
					//jComboBoxid_unidadBodegaProducto.setSelectedItem(unidadTemp);
					if(this.jInternalFrameDetalleFormBodegaProducto!=null) {
						if(this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_unidadBodegaProducto.getItemCount()>0) {
							this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_unidadBodegaProducto.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdUnidad") || sFormularioTipoBusqueda.equals("Todos")){
					if(unidadTemp!=null && jComboBoxid_unidadFK_IdUnidadBodegaProducto!=null) {
						jComboBoxid_unidadFK_IdUnidadBodegaProducto.setSelectedItem(unidadTemp);
					} else {
						if(jComboBoxid_unidadFK_IdUnidadBodegaProducto!=null) {
							//jComboBoxid_unidadFK_IdUnidadBodegaProducto.setSelectedItem(unidadTemp);
							if(jComboBoxid_unidadFK_IdUnidadBodegaProducto.getItemCount()>0) {
								jComboBoxid_unidadFK_IdUnidadBodegaProducto.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualUnidadForeignKeyDescripcion(Long idUnidadSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Unidad  unidadTemp=null;

			for(Unidad unidadAux:unidadsForeignKey) {
				if(unidadAux.getId()!=null && unidadAux.getId().equals(idUnidadSeleccionado)) {
					unidadTemp=unidadAux;
					break;
				}
			}


			sDescripcion=UnidadConstantesFunciones.getUnidadDescripcion(unidadTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualUnidadForeignKeyGenerico(Long idUnidadSeleccionado,JComboBox jComboBoxid_unidadBodegaProductoGenerico)throws Exception
	{
		try
		{
			Unidad  unidadTemp=null;

			for(Unidad unidadAux:unidadsForeignKey) {
				if(unidadAux.getId()!=null && unidadAux.getId().equals(idUnidadSeleccionado)) {
					unidadTemp=unidadAux;
					break;
				}
			}

			if(unidadTemp!=null) {
				jComboBoxid_unidadBodegaProductoGenerico.setSelectedItem(unidadTemp);
			} else {
				if(jComboBoxid_unidadBodegaProductoGenerico!=null && jComboBoxid_unidadBodegaProductoGenerico.getItemCount()>0) {
					jComboBoxid_unidadBodegaProductoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCentroCostoForeignKey(Long idCentroCostoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			CentroCosto  centrocostoTemp=null;

			for(CentroCosto centrocostoAux:centrocostosForeignKey) {
				if(centrocostoAux.getId()!=null && centrocostoAux.getId().equals(idCentroCostoSeleccionado)) {
					centrocostoTemp=centrocostoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(centrocostoTemp!=null) {

					if(this.bodegaproducto!=null) {
						this.bodegaproducto.setCentroCosto(centrocostoTemp);
					}

					if(this.jInternalFrameDetalleFormBodegaProducto!=null) {
						this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_centro_costoBodegaProducto.setSelectedItem(centrocostoTemp);
					}
				} else {
					//jComboBoxid_centro_costoBodegaProducto.setSelectedItem(centrocostoTemp);
					if(this.jInternalFrameDetalleFormBodegaProducto!=null) {
						if(this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_centro_costoBodegaProducto.getItemCount()>0) {
							this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_centro_costoBodegaProducto.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdCentroCosto") || sFormularioTipoBusqueda.equals("Todos")){
					if(centrocostoTemp!=null && jComboBoxid_centro_costoFK_IdCentroCostoBodegaProducto!=null) {
						jComboBoxid_centro_costoFK_IdCentroCostoBodegaProducto.setSelectedItem(centrocostoTemp);
					} else {
						if(jComboBoxid_centro_costoFK_IdCentroCostoBodegaProducto!=null) {
							//jComboBoxid_centro_costoFK_IdCentroCostoBodegaProducto.setSelectedItem(centrocostoTemp);
							if(jComboBoxid_centro_costoFK_IdCentroCostoBodegaProducto.getItemCount()>0) {
								jComboBoxid_centro_costoFK_IdCentroCostoBodegaProducto.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCentroCostoForeignKeyDescripcion(Long idCentroCostoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			CentroCosto  centrocostoTemp=null;

			for(CentroCosto centrocostoAux:centrocostosForeignKey) {
				if(centrocostoAux.getId()!=null && centrocostoAux.getId().equals(idCentroCostoSeleccionado)) {
					centrocostoTemp=centrocostoAux;
					break;
				}
			}


			sDescripcion=CentroCostoConstantesFunciones.getCentroCostoDescripcion(centrocostoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCentroCostoForeignKeyGenerico(Long idCentroCostoSeleccionado,JComboBox jComboBoxid_centro_costoBodegaProductoGenerico)throws Exception
	{
		try
		{
			CentroCosto  centrocostoTemp=null;

			for(CentroCosto centrocostoAux:centrocostosForeignKey) {
				if(centrocostoAux.getId()!=null && centrocostoAux.getId().equals(idCentroCostoSeleccionado)) {
					centrocostoTemp=centrocostoAux;
					break;
				}
			}

			if(centrocostoTemp!=null) {
				jComboBoxid_centro_costoBodegaProductoGenerico.setSelectedItem(centrocostoTemp);
			} else {
				if(jComboBoxid_centro_costoBodegaProductoGenerico!=null && jComboBoxid_centro_costoBodegaProductoGenerico.getItemCount()>0) {
					jComboBoxid_centro_costoBodegaProductoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEstadoBodegaProductoForeignKey(Long idEstadoBodegaProductoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			EstadoBodegaProducto  estadobodegaproductoTemp=null;

			for(EstadoBodegaProducto estadobodegaproductoAux:estadobodegaproductosForeignKey) {
				if(estadobodegaproductoAux.getId()!=null && estadobodegaproductoAux.getId().equals(idEstadoBodegaProductoSeleccionado)) {
					estadobodegaproductoTemp=estadobodegaproductoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(estadobodegaproductoTemp!=null) {

					if(this.bodegaproducto!=null) {
						this.bodegaproducto.setEstadoBodegaProducto(estadobodegaproductoTemp);
					}

					if(this.jInternalFrameDetalleFormBodegaProducto!=null) {
						this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_estado_bodega_productoBodegaProducto.setSelectedItem(estadobodegaproductoTemp);
					}
				} else {
					//jComboBoxid_estado_bodega_productoBodegaProducto.setSelectedItem(estadobodegaproductoTemp);
					if(this.jInternalFrameDetalleFormBodegaProducto!=null) {
						if(this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_estado_bodega_productoBodegaProducto.getItemCount()>0) {
							this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_estado_bodega_productoBodegaProducto.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEstadoBodegaProductoForeignKeyDescripcion(Long idEstadoBodegaProductoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			EstadoBodegaProducto  estadobodegaproductoTemp=null;

			for(EstadoBodegaProducto estadobodegaproductoAux:estadobodegaproductosForeignKey) {
				if(estadobodegaproductoAux.getId()!=null && estadobodegaproductoAux.getId().equals(idEstadoBodegaProductoSeleccionado)) {
					estadobodegaproductoTemp=estadobodegaproductoAux;
					break;
				}
			}


			sDescripcion=EstadoBodegaProductoConstantesFunciones.getEstadoBodegaProductoDescripcion(estadobodegaproductoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEstadoBodegaProductoForeignKeyGenerico(Long idEstadoBodegaProductoSeleccionado,JComboBox jComboBoxid_estado_bodega_productoBodegaProductoGenerico)throws Exception
	{
		try
		{
			EstadoBodegaProducto  estadobodegaproductoTemp=null;

			for(EstadoBodegaProducto estadobodegaproductoAux:estadobodegaproductosForeignKey) {
				if(estadobodegaproductoAux.getId()!=null && estadobodegaproductoAux.getId().equals(idEstadoBodegaProductoSeleccionado)) {
					estadobodegaproductoTemp=estadobodegaproductoAux;
					break;
				}
			}

			if(estadobodegaproductoTemp!=null) {
				jComboBoxid_estado_bodega_productoBodegaProductoGenerico.setSelectedItem(estadobodegaproductoTemp);
			} else {
				if(jComboBoxid_estado_bodega_productoBodegaProductoGenerico!=null && jComboBoxid_estado_bodega_productoBodegaProductoGenerico.getItemCount()>0) {
					jComboBoxid_estado_bodega_productoBodegaProductoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCuentaContableInventarioForeignKey(Long idCuentaContableInventarioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableinventarioTemp=null;

			for(CuentaContable cuentacontableinventarioAux:cuentacontableinventariosForeignKey) {
				if(cuentacontableinventarioAux.getId()!=null && cuentacontableinventarioAux.getId().equals(idCuentaContableInventarioSeleccionado)) {
					cuentacontableinventarioTemp=cuentacontableinventarioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(cuentacontableinventarioTemp!=null) {

					if(this.bodegaproducto!=null) {
						this.bodegaproducto.setCuentaContableInventario(cuentacontableinventarioTemp);
					}

					if(this.jInternalFrameDetalleFormBodegaProducto!=null) {
						this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_inventarioBodegaProducto.setSelectedItem(cuentacontableinventarioTemp);
					}
				} else {
					//jComboBoxid_cuenta_contable_inventarioBodegaProducto.setSelectedItem(cuentacontableinventarioTemp);
					if(this.jInternalFrameDetalleFormBodegaProducto!=null) {
						if(this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_inventarioBodegaProducto.getItemCount()>0) {
							this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_inventarioBodegaProducto.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCuentaContableInventarioForeignKeyDescripcion(Long idCuentaContableInventarioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			CuentaContable  cuentacontableinventarioTemp=null;

			for(CuentaContable cuentacontableinventarioAux:cuentacontableinventariosForeignKey) {
				if(cuentacontableinventarioAux.getId()!=null && cuentacontableinventarioAux.getId().equals(idCuentaContableInventarioSeleccionado)) {
					cuentacontableinventarioTemp=cuentacontableinventarioAux;
					break;
				}
			}


			sDescripcion=CuentaContableConstantesFunciones.getCuentaContableDescripcion(cuentacontableinventarioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCuentaContableInventarioForeignKeyGenerico(Long idCuentaContableInventarioSeleccionado,JComboBox jComboBoxid_cuenta_contable_inventarioBodegaProductoGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableinventarioTemp=null;

			for(CuentaContable cuentacontableinventarioAux:cuentacontableinventariosForeignKey) {
				if(cuentacontableinventarioAux.getId()!=null && cuentacontableinventarioAux.getId().equals(idCuentaContableInventarioSeleccionado)) {
					cuentacontableinventarioTemp=cuentacontableinventarioAux;
					break;
				}
			}

			if(cuentacontableinventarioTemp!=null) {
				jComboBoxid_cuenta_contable_inventarioBodegaProductoGenerico.setSelectedItem(cuentacontableinventarioTemp);
			} else {
				if(jComboBoxid_cuenta_contable_inventarioBodegaProductoGenerico!=null && jComboBoxid_cuenta_contable_inventarioBodegaProductoGenerico.getItemCount()>0) {
					jComboBoxid_cuenta_contable_inventarioBodegaProductoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCuentaContableCostoVentaForeignKey(Long idCuentaContableCostoVentaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			CuentaContable  cuentacontablecostoventaTemp=null;

			for(CuentaContable cuentacontablecostoventaAux:cuentacontablecostoventasForeignKey) {
				if(cuentacontablecostoventaAux.getId()!=null && cuentacontablecostoventaAux.getId().equals(idCuentaContableCostoVentaSeleccionado)) {
					cuentacontablecostoventaTemp=cuentacontablecostoventaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(cuentacontablecostoventaTemp!=null) {

					if(this.bodegaproducto!=null) {
						this.bodegaproducto.setCuentaContableCostoVenta(cuentacontablecostoventaTemp);
					}

					if(this.jInternalFrameDetalleFormBodegaProducto!=null) {
						this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_costo_ventaBodegaProducto.setSelectedItem(cuentacontablecostoventaTemp);
					}
				} else {
					//jComboBoxid_cuenta_contable_costo_ventaBodegaProducto.setSelectedItem(cuentacontablecostoventaTemp);
					if(this.jInternalFrameDetalleFormBodegaProducto!=null) {
						if(this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_costo_ventaBodegaProducto.getItemCount()>0) {
							this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_costo_ventaBodegaProducto.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdCuentaContableCostoVenta") || sFormularioTipoBusqueda.equals("Todos")){
					if(cuentacontablecostoventaTemp!=null && jComboBoxid_cuenta_contable_costo_ventaFK_IdCuentaContableCostoVentaBodegaProducto!=null) {
						jComboBoxid_cuenta_contable_costo_ventaFK_IdCuentaContableCostoVentaBodegaProducto.setSelectedItem(cuentacontablecostoventaTemp);
					} else {
						if(jComboBoxid_cuenta_contable_costo_ventaFK_IdCuentaContableCostoVentaBodegaProducto!=null) {
							//jComboBoxid_cuenta_contable_costo_ventaFK_IdCuentaContableCostoVentaBodegaProducto.setSelectedItem(cuentacontablecostoventaTemp);
							if(jComboBoxid_cuenta_contable_costo_ventaFK_IdCuentaContableCostoVentaBodegaProducto.getItemCount()>0) {
								jComboBoxid_cuenta_contable_costo_ventaFK_IdCuentaContableCostoVentaBodegaProducto.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCuentaContableCostoVentaForeignKeyDescripcion(Long idCuentaContableCostoVentaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			CuentaContable  cuentacontablecostoventaTemp=null;

			for(CuentaContable cuentacontablecostoventaAux:cuentacontablecostoventasForeignKey) {
				if(cuentacontablecostoventaAux.getId()!=null && cuentacontablecostoventaAux.getId().equals(idCuentaContableCostoVentaSeleccionado)) {
					cuentacontablecostoventaTemp=cuentacontablecostoventaAux;
					break;
				}
			}


			sDescripcion=CuentaContableConstantesFunciones.getCuentaContableDescripcion(cuentacontablecostoventaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCuentaContableCostoVentaForeignKeyGenerico(Long idCuentaContableCostoVentaSeleccionado,JComboBox jComboBoxid_cuenta_contable_costo_ventaBodegaProductoGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontablecostoventaTemp=null;

			for(CuentaContable cuentacontablecostoventaAux:cuentacontablecostoventasForeignKey) {
				if(cuentacontablecostoventaAux.getId()!=null && cuentacontablecostoventaAux.getId().equals(idCuentaContableCostoVentaSeleccionado)) {
					cuentacontablecostoventaTemp=cuentacontablecostoventaAux;
					break;
				}
			}

			if(cuentacontablecostoventaTemp!=null) {
				jComboBoxid_cuenta_contable_costo_ventaBodegaProductoGenerico.setSelectedItem(cuentacontablecostoventaTemp);
			} else {
				if(jComboBoxid_cuenta_contable_costo_ventaBodegaProductoGenerico!=null && jComboBoxid_cuenta_contable_costo_ventaBodegaProductoGenerico.getItemCount()>0) {
					jComboBoxid_cuenta_contable_costo_ventaBodegaProductoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCuentaContableVentaForeignKey(Long idCuentaContableVentaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableventaTemp=null;

			for(CuentaContable cuentacontableventaAux:cuentacontableventasForeignKey) {
				if(cuentacontableventaAux.getId()!=null && cuentacontableventaAux.getId().equals(idCuentaContableVentaSeleccionado)) {
					cuentacontableventaTemp=cuentacontableventaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(cuentacontableventaTemp!=null) {

					if(this.bodegaproducto!=null) {
						this.bodegaproducto.setCuentaContableVenta(cuentacontableventaTemp);
					}

					if(this.jInternalFrameDetalleFormBodegaProducto!=null) {
						this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_ventaBodegaProducto.setSelectedItem(cuentacontableventaTemp);
					}
				} else {
					//jComboBoxid_cuenta_contable_ventaBodegaProducto.setSelectedItem(cuentacontableventaTemp);
					if(this.jInternalFrameDetalleFormBodegaProducto!=null) {
						if(this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_ventaBodegaProducto.getItemCount()>0) {
							this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_ventaBodegaProducto.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdCuentaContableVenta") || sFormularioTipoBusqueda.equals("Todos")){
					if(cuentacontableventaTemp!=null && jComboBoxid_cuenta_contable_ventaFK_IdCuentaContableVentaBodegaProducto!=null) {
						jComboBoxid_cuenta_contable_ventaFK_IdCuentaContableVentaBodegaProducto.setSelectedItem(cuentacontableventaTemp);
					} else {
						if(jComboBoxid_cuenta_contable_ventaFK_IdCuentaContableVentaBodegaProducto!=null) {
							//jComboBoxid_cuenta_contable_ventaFK_IdCuentaContableVentaBodegaProducto.setSelectedItem(cuentacontableventaTemp);
							if(jComboBoxid_cuenta_contable_ventaFK_IdCuentaContableVentaBodegaProducto.getItemCount()>0) {
								jComboBoxid_cuenta_contable_ventaFK_IdCuentaContableVentaBodegaProducto.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCuentaContableVentaForeignKeyDescripcion(Long idCuentaContableVentaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			CuentaContable  cuentacontableventaTemp=null;

			for(CuentaContable cuentacontableventaAux:cuentacontableventasForeignKey) {
				if(cuentacontableventaAux.getId()!=null && cuentacontableventaAux.getId().equals(idCuentaContableVentaSeleccionado)) {
					cuentacontableventaTemp=cuentacontableventaAux;
					break;
				}
			}


			sDescripcion=CuentaContableConstantesFunciones.getCuentaContableDescripcion(cuentacontableventaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCuentaContableVentaForeignKeyGenerico(Long idCuentaContableVentaSeleccionado,JComboBox jComboBoxid_cuenta_contable_ventaBodegaProductoGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableventaTemp=null;

			for(CuentaContable cuentacontableventaAux:cuentacontableventasForeignKey) {
				if(cuentacontableventaAux.getId()!=null && cuentacontableventaAux.getId().equals(idCuentaContableVentaSeleccionado)) {
					cuentacontableventaTemp=cuentacontableventaAux;
					break;
				}
			}

			if(cuentacontableventaTemp!=null) {
				jComboBoxid_cuenta_contable_ventaBodegaProductoGenerico.setSelectedItem(cuentacontableventaTemp);
			} else {
				if(jComboBoxid_cuenta_contable_ventaBodegaProductoGenerico!=null && jComboBoxid_cuenta_contable_ventaBodegaProductoGenerico.getItemCount()>0) {
					jComboBoxid_cuenta_contable_ventaBodegaProductoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCuentaContableDescuentoForeignKey(Long idCuentaContableDescuentoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			CuentaContable  cuentacontabledescuentoTemp=null;

			for(CuentaContable cuentacontabledescuentoAux:cuentacontabledescuentosForeignKey) {
				if(cuentacontabledescuentoAux.getId()!=null && cuentacontabledescuentoAux.getId().equals(idCuentaContableDescuentoSeleccionado)) {
					cuentacontabledescuentoTemp=cuentacontabledescuentoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(cuentacontabledescuentoTemp!=null) {

					if(this.bodegaproducto!=null) {
						this.bodegaproducto.setCuentaContableDescuento(cuentacontabledescuentoTemp);
					}

					if(this.jInternalFrameDetalleFormBodegaProducto!=null) {
						this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_descuentoBodegaProducto.setSelectedItem(cuentacontabledescuentoTemp);
					}
				} else {
					//jComboBoxid_cuenta_contable_descuentoBodegaProducto.setSelectedItem(cuentacontabledescuentoTemp);
					if(this.jInternalFrameDetalleFormBodegaProducto!=null) {
						if(this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_descuentoBodegaProducto.getItemCount()>0) {
							this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_descuentoBodegaProducto.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCuentaContableDescuentoForeignKeyDescripcion(Long idCuentaContableDescuentoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			CuentaContable  cuentacontabledescuentoTemp=null;

			for(CuentaContable cuentacontabledescuentoAux:cuentacontabledescuentosForeignKey) {
				if(cuentacontabledescuentoAux.getId()!=null && cuentacontabledescuentoAux.getId().equals(idCuentaContableDescuentoSeleccionado)) {
					cuentacontabledescuentoTemp=cuentacontabledescuentoAux;
					break;
				}
			}


			sDescripcion=CuentaContableConstantesFunciones.getCuentaContableDescripcion(cuentacontabledescuentoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCuentaContableDescuentoForeignKeyGenerico(Long idCuentaContableDescuentoSeleccionado,JComboBox jComboBoxid_cuenta_contable_descuentoBodegaProductoGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontabledescuentoTemp=null;

			for(CuentaContable cuentacontabledescuentoAux:cuentacontabledescuentosForeignKey) {
				if(cuentacontabledescuentoAux.getId()!=null && cuentacontabledescuentoAux.getId().equals(idCuentaContableDescuentoSeleccionado)) {
					cuentacontabledescuentoTemp=cuentacontabledescuentoAux;
					break;
				}
			}

			if(cuentacontabledescuentoTemp!=null) {
				jComboBoxid_cuenta_contable_descuentoBodegaProductoGenerico.setSelectedItem(cuentacontabledescuentoTemp);
			} else {
				if(jComboBoxid_cuenta_contable_descuentoBodegaProductoGenerico!=null && jComboBoxid_cuenta_contable_descuentoBodegaProductoGenerico.getItemCount()>0) {
					jComboBoxid_cuenta_contable_descuentoBodegaProductoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCuentaContableProduccionForeignKey(Long idCuentaContableProduccionSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableproduccionTemp=null;

			for(CuentaContable cuentacontableproduccionAux:cuentacontableproduccionsForeignKey) {
				if(cuentacontableproduccionAux.getId()!=null && cuentacontableproduccionAux.getId().equals(idCuentaContableProduccionSeleccionado)) {
					cuentacontableproduccionTemp=cuentacontableproduccionAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(cuentacontableproduccionTemp!=null) {

					if(this.bodegaproducto!=null) {
						this.bodegaproducto.setCuentaContableProduccion(cuentacontableproduccionTemp);
					}

					if(this.jInternalFrameDetalleFormBodegaProducto!=null) {
						this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_produccionBodegaProducto.setSelectedItem(cuentacontableproduccionTemp);
					}
				} else {
					//jComboBoxid_cuenta_contable_produccionBodegaProducto.setSelectedItem(cuentacontableproduccionTemp);
					if(this.jInternalFrameDetalleFormBodegaProducto!=null) {
						if(this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_produccionBodegaProducto.getItemCount()>0) {
							this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_produccionBodegaProducto.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdCuentaContableProduccion") || sFormularioTipoBusqueda.equals("Todos")){
					if(cuentacontableproduccionTemp!=null && jComboBoxid_cuenta_contable_produccionFK_IdCuentaContableProduccionBodegaProducto!=null) {
						jComboBoxid_cuenta_contable_produccionFK_IdCuentaContableProduccionBodegaProducto.setSelectedItem(cuentacontableproduccionTemp);
					} else {
						if(jComboBoxid_cuenta_contable_produccionFK_IdCuentaContableProduccionBodegaProducto!=null) {
							//jComboBoxid_cuenta_contable_produccionFK_IdCuentaContableProduccionBodegaProducto.setSelectedItem(cuentacontableproduccionTemp);
							if(jComboBoxid_cuenta_contable_produccionFK_IdCuentaContableProduccionBodegaProducto.getItemCount()>0) {
								jComboBoxid_cuenta_contable_produccionFK_IdCuentaContableProduccionBodegaProducto.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCuentaContableProduccionForeignKeyDescripcion(Long idCuentaContableProduccionSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			CuentaContable  cuentacontableproduccionTemp=null;

			for(CuentaContable cuentacontableproduccionAux:cuentacontableproduccionsForeignKey) {
				if(cuentacontableproduccionAux.getId()!=null && cuentacontableproduccionAux.getId().equals(idCuentaContableProduccionSeleccionado)) {
					cuentacontableproduccionTemp=cuentacontableproduccionAux;
					break;
				}
			}


			sDescripcion=CuentaContableConstantesFunciones.getCuentaContableDescripcion(cuentacontableproduccionTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCuentaContableProduccionForeignKeyGenerico(Long idCuentaContableProduccionSeleccionado,JComboBox jComboBoxid_cuenta_contable_produccionBodegaProductoGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableproduccionTemp=null;

			for(CuentaContable cuentacontableproduccionAux:cuentacontableproduccionsForeignKey) {
				if(cuentacontableproduccionAux.getId()!=null && cuentacontableproduccionAux.getId().equals(idCuentaContableProduccionSeleccionado)) {
					cuentacontableproduccionTemp=cuentacontableproduccionAux;
					break;
				}
			}

			if(cuentacontableproduccionTemp!=null) {
				jComboBoxid_cuenta_contable_produccionBodegaProductoGenerico.setSelectedItem(cuentacontableproduccionTemp);
			} else {
				if(jComboBoxid_cuenta_contable_produccionBodegaProductoGenerico!=null && jComboBoxid_cuenta_contable_produccionBodegaProductoGenerico.getItemCount()>0) {
					jComboBoxid_cuenta_contable_produccionBodegaProductoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCuentaContableDevolucionForeignKey(Long idCuentaContableDevolucionSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			CuentaContable  cuentacontabledevolucionTemp=null;

			for(CuentaContable cuentacontabledevolucionAux:cuentacontabledevolucionsForeignKey) {
				if(cuentacontabledevolucionAux.getId()!=null && cuentacontabledevolucionAux.getId().equals(idCuentaContableDevolucionSeleccionado)) {
					cuentacontabledevolucionTemp=cuentacontabledevolucionAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(cuentacontabledevolucionTemp!=null) {

					if(this.bodegaproducto!=null) {
						this.bodegaproducto.setCuentaContableDevolucion(cuentacontabledevolucionTemp);
					}

					if(this.jInternalFrameDetalleFormBodegaProducto!=null) {
						this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_devolucionBodegaProducto.setSelectedItem(cuentacontabledevolucionTemp);
					}
				} else {
					//jComboBoxid_cuenta_contable_devolucionBodegaProducto.setSelectedItem(cuentacontabledevolucionTemp);
					if(this.jInternalFrameDetalleFormBodegaProducto!=null) {
						if(this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_devolucionBodegaProducto.getItemCount()>0) {
							this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_devolucionBodegaProducto.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCuentaContableDevolucionForeignKeyDescripcion(Long idCuentaContableDevolucionSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			CuentaContable  cuentacontabledevolucionTemp=null;

			for(CuentaContable cuentacontabledevolucionAux:cuentacontabledevolucionsForeignKey) {
				if(cuentacontabledevolucionAux.getId()!=null && cuentacontabledevolucionAux.getId().equals(idCuentaContableDevolucionSeleccionado)) {
					cuentacontabledevolucionTemp=cuentacontabledevolucionAux;
					break;
				}
			}


			sDescripcion=CuentaContableConstantesFunciones.getCuentaContableDescripcion(cuentacontabledevolucionTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCuentaContableDevolucionForeignKeyGenerico(Long idCuentaContableDevolucionSeleccionado,JComboBox jComboBoxid_cuenta_contable_devolucionBodegaProductoGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontabledevolucionTemp=null;

			for(CuentaContable cuentacontabledevolucionAux:cuentacontabledevolucionsForeignKey) {
				if(cuentacontabledevolucionAux.getId()!=null && cuentacontabledevolucionAux.getId().equals(idCuentaContableDevolucionSeleccionado)) {
					cuentacontabledevolucionTemp=cuentacontabledevolucionAux;
					break;
				}
			}

			if(cuentacontabledevolucionTemp!=null) {
				jComboBoxid_cuenta_contable_devolucionBodegaProductoGenerico.setSelectedItem(cuentacontabledevolucionTemp);
			} else {
				if(jComboBoxid_cuenta_contable_devolucionBodegaProductoGenerico!=null && jComboBoxid_cuenta_contable_devolucionBodegaProductoGenerico.getItemCount()>0) {
					jComboBoxid_cuenta_contable_devolucionBodegaProductoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCuentaContableIngresoDebitoForeignKey(Long idCuentaContableIngresoDebitoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableingresodebitoTemp=null;

			for(CuentaContable cuentacontableingresodebitoAux:cuentacontableingresodebitosForeignKey) {
				if(cuentacontableingresodebitoAux.getId()!=null && cuentacontableingresodebitoAux.getId().equals(idCuentaContableIngresoDebitoSeleccionado)) {
					cuentacontableingresodebitoTemp=cuentacontableingresodebitoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(cuentacontableingresodebitoTemp!=null) {

					if(this.bodegaproducto!=null) {
						this.bodegaproducto.setCuentaContableIngresoDebito(cuentacontableingresodebitoTemp);
					}

					if(this.jInternalFrameDetalleFormBodegaProducto!=null) {
						this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_ingreso_debitoBodegaProducto.setSelectedItem(cuentacontableingresodebitoTemp);
					}
				} else {
					//jComboBoxid_cuenta_contable_ingreso_debitoBodegaProducto.setSelectedItem(cuentacontableingresodebitoTemp);
					if(this.jInternalFrameDetalleFormBodegaProducto!=null) {
						if(this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_ingreso_debitoBodegaProducto.getItemCount()>0) {
							this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_ingreso_debitoBodegaProducto.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdCuentaContableIngresoDebito") || sFormularioTipoBusqueda.equals("Todos")){
					if(cuentacontableingresodebitoTemp!=null && jComboBoxid_cuenta_contable_ingreso_debitoFK_IdCuentaContableIngresoDebitoBodegaProducto!=null) {
						jComboBoxid_cuenta_contable_ingreso_debitoFK_IdCuentaContableIngresoDebitoBodegaProducto.setSelectedItem(cuentacontableingresodebitoTemp);
					} else {
						if(jComboBoxid_cuenta_contable_ingreso_debitoFK_IdCuentaContableIngresoDebitoBodegaProducto!=null) {
							//jComboBoxid_cuenta_contable_ingreso_debitoFK_IdCuentaContableIngresoDebitoBodegaProducto.setSelectedItem(cuentacontableingresodebitoTemp);
							if(jComboBoxid_cuenta_contable_ingreso_debitoFK_IdCuentaContableIngresoDebitoBodegaProducto.getItemCount()>0) {
								jComboBoxid_cuenta_contable_ingreso_debitoFK_IdCuentaContableIngresoDebitoBodegaProducto.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCuentaContableIngresoDebitoForeignKeyDescripcion(Long idCuentaContableIngresoDebitoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			CuentaContable  cuentacontableingresodebitoTemp=null;

			for(CuentaContable cuentacontableingresodebitoAux:cuentacontableingresodebitosForeignKey) {
				if(cuentacontableingresodebitoAux.getId()!=null && cuentacontableingresodebitoAux.getId().equals(idCuentaContableIngresoDebitoSeleccionado)) {
					cuentacontableingresodebitoTemp=cuentacontableingresodebitoAux;
					break;
				}
			}


			sDescripcion=CuentaContableConstantesFunciones.getCuentaContableDescripcion(cuentacontableingresodebitoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCuentaContableIngresoDebitoForeignKeyGenerico(Long idCuentaContableIngresoDebitoSeleccionado,JComboBox jComboBoxid_cuenta_contable_ingreso_debitoBodegaProductoGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableingresodebitoTemp=null;

			for(CuentaContable cuentacontableingresodebitoAux:cuentacontableingresodebitosForeignKey) {
				if(cuentacontableingresodebitoAux.getId()!=null && cuentacontableingresodebitoAux.getId().equals(idCuentaContableIngresoDebitoSeleccionado)) {
					cuentacontableingresodebitoTemp=cuentacontableingresodebitoAux;
					break;
				}
			}

			if(cuentacontableingresodebitoTemp!=null) {
				jComboBoxid_cuenta_contable_ingreso_debitoBodegaProductoGenerico.setSelectedItem(cuentacontableingresodebitoTemp);
			} else {
				if(jComboBoxid_cuenta_contable_ingreso_debitoBodegaProductoGenerico!=null && jComboBoxid_cuenta_contable_ingreso_debitoBodegaProductoGenerico.getItemCount()>0) {
					jComboBoxid_cuenta_contable_ingreso_debitoBodegaProductoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCuentaContableIngresoCreditoForeignKey(Long idCuentaContableIngresoCreditoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableingresocreditoTemp=null;

			for(CuentaContable cuentacontableingresocreditoAux:cuentacontableingresocreditosForeignKey) {
				if(cuentacontableingresocreditoAux.getId()!=null && cuentacontableingresocreditoAux.getId().equals(idCuentaContableIngresoCreditoSeleccionado)) {
					cuentacontableingresocreditoTemp=cuentacontableingresocreditoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(cuentacontableingresocreditoTemp!=null) {

					if(this.bodegaproducto!=null) {
						this.bodegaproducto.setCuentaContableIngresoCredito(cuentacontableingresocreditoTemp);
					}

					if(this.jInternalFrameDetalleFormBodegaProducto!=null) {
						this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_ingreso_creditoBodegaProducto.setSelectedItem(cuentacontableingresocreditoTemp);
					}
				} else {
					//jComboBoxid_cuenta_contable_ingreso_creditoBodegaProducto.setSelectedItem(cuentacontableingresocreditoTemp);
					if(this.jInternalFrameDetalleFormBodegaProducto!=null) {
						if(this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_ingreso_creditoBodegaProducto.getItemCount()>0) {
							this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_ingreso_creditoBodegaProducto.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdCuentaContableIngresoCredito") || sFormularioTipoBusqueda.equals("Todos")){
					if(cuentacontableingresocreditoTemp!=null && jComboBoxid_cuenta_contable_ingreso_creditoFK_IdCuentaContableIngresoCreditoBodegaProducto!=null) {
						jComboBoxid_cuenta_contable_ingreso_creditoFK_IdCuentaContableIngresoCreditoBodegaProducto.setSelectedItem(cuentacontableingresocreditoTemp);
					} else {
						if(jComboBoxid_cuenta_contable_ingreso_creditoFK_IdCuentaContableIngresoCreditoBodegaProducto!=null) {
							//jComboBoxid_cuenta_contable_ingreso_creditoFK_IdCuentaContableIngresoCreditoBodegaProducto.setSelectedItem(cuentacontableingresocreditoTemp);
							if(jComboBoxid_cuenta_contable_ingreso_creditoFK_IdCuentaContableIngresoCreditoBodegaProducto.getItemCount()>0) {
								jComboBoxid_cuenta_contable_ingreso_creditoFK_IdCuentaContableIngresoCreditoBodegaProducto.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCuentaContableIngresoCreditoForeignKeyDescripcion(Long idCuentaContableIngresoCreditoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			CuentaContable  cuentacontableingresocreditoTemp=null;

			for(CuentaContable cuentacontableingresocreditoAux:cuentacontableingresocreditosForeignKey) {
				if(cuentacontableingresocreditoAux.getId()!=null && cuentacontableingresocreditoAux.getId().equals(idCuentaContableIngresoCreditoSeleccionado)) {
					cuentacontableingresocreditoTemp=cuentacontableingresocreditoAux;
					break;
				}
			}


			sDescripcion=CuentaContableConstantesFunciones.getCuentaContableDescripcion(cuentacontableingresocreditoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCuentaContableIngresoCreditoForeignKeyGenerico(Long idCuentaContableIngresoCreditoSeleccionado,JComboBox jComboBoxid_cuenta_contable_ingreso_creditoBodegaProductoGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableingresocreditoTemp=null;

			for(CuentaContable cuentacontableingresocreditoAux:cuentacontableingresocreditosForeignKey) {
				if(cuentacontableingresocreditoAux.getId()!=null && cuentacontableingresocreditoAux.getId().equals(idCuentaContableIngresoCreditoSeleccionado)) {
					cuentacontableingresocreditoTemp=cuentacontableingresocreditoAux;
					break;
				}
			}

			if(cuentacontableingresocreditoTemp!=null) {
				jComboBoxid_cuenta_contable_ingreso_creditoBodegaProductoGenerico.setSelectedItem(cuentacontableingresocreditoTemp);
			} else {
				if(jComboBoxid_cuenta_contable_ingreso_creditoBodegaProductoGenerico!=null && jComboBoxid_cuenta_contable_ingreso_creditoBodegaProductoGenerico.getItemCount()>0) {
					jComboBoxid_cuenta_contable_ingreso_creditoBodegaProductoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCuentaContableResultadoDebitoForeignKey(Long idCuentaContableResultadoDebitoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableresultadodebitoTemp=null;

			for(CuentaContable cuentacontableresultadodebitoAux:cuentacontableresultadodebitosForeignKey) {
				if(cuentacontableresultadodebitoAux.getId()!=null && cuentacontableresultadodebitoAux.getId().equals(idCuentaContableResultadoDebitoSeleccionado)) {
					cuentacontableresultadodebitoTemp=cuentacontableresultadodebitoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(cuentacontableresultadodebitoTemp!=null) {

					if(this.bodegaproducto!=null) {
						this.bodegaproducto.setCuentaContableResultadoDebito(cuentacontableresultadodebitoTemp);
					}

					if(this.jInternalFrameDetalleFormBodegaProducto!=null) {
						this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_resultado_debitoBodegaProducto.setSelectedItem(cuentacontableresultadodebitoTemp);
					}
				} else {
					//jComboBoxid_cuenta_contable_resultado_debitoBodegaProducto.setSelectedItem(cuentacontableresultadodebitoTemp);
					if(this.jInternalFrameDetalleFormBodegaProducto!=null) {
						if(this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_resultado_debitoBodegaProducto.getItemCount()>0) {
							this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_resultado_debitoBodegaProducto.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdCuentaContableResultadoDebito") || sFormularioTipoBusqueda.equals("Todos")){
					if(cuentacontableresultadodebitoTemp!=null && jComboBoxid_cuenta_contable_resultado_debitoFK_IdCuentaContableResultadoDebitoBodegaProducto!=null) {
						jComboBoxid_cuenta_contable_resultado_debitoFK_IdCuentaContableResultadoDebitoBodegaProducto.setSelectedItem(cuentacontableresultadodebitoTemp);
					} else {
						if(jComboBoxid_cuenta_contable_resultado_debitoFK_IdCuentaContableResultadoDebitoBodegaProducto!=null) {
							//jComboBoxid_cuenta_contable_resultado_debitoFK_IdCuentaContableResultadoDebitoBodegaProducto.setSelectedItem(cuentacontableresultadodebitoTemp);
							if(jComboBoxid_cuenta_contable_resultado_debitoFK_IdCuentaContableResultadoDebitoBodegaProducto.getItemCount()>0) {
								jComboBoxid_cuenta_contable_resultado_debitoFK_IdCuentaContableResultadoDebitoBodegaProducto.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCuentaContableResultadoDebitoForeignKeyDescripcion(Long idCuentaContableResultadoDebitoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			CuentaContable  cuentacontableresultadodebitoTemp=null;

			for(CuentaContable cuentacontableresultadodebitoAux:cuentacontableresultadodebitosForeignKey) {
				if(cuentacontableresultadodebitoAux.getId()!=null && cuentacontableresultadodebitoAux.getId().equals(idCuentaContableResultadoDebitoSeleccionado)) {
					cuentacontableresultadodebitoTemp=cuentacontableresultadodebitoAux;
					break;
				}
			}


			sDescripcion=CuentaContableConstantesFunciones.getCuentaContableDescripcion(cuentacontableresultadodebitoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCuentaContableResultadoDebitoForeignKeyGenerico(Long idCuentaContableResultadoDebitoSeleccionado,JComboBox jComboBoxid_cuenta_contable_resultado_debitoBodegaProductoGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableresultadodebitoTemp=null;

			for(CuentaContable cuentacontableresultadodebitoAux:cuentacontableresultadodebitosForeignKey) {
				if(cuentacontableresultadodebitoAux.getId()!=null && cuentacontableresultadodebitoAux.getId().equals(idCuentaContableResultadoDebitoSeleccionado)) {
					cuentacontableresultadodebitoTemp=cuentacontableresultadodebitoAux;
					break;
				}
			}

			if(cuentacontableresultadodebitoTemp!=null) {
				jComboBoxid_cuenta_contable_resultado_debitoBodegaProductoGenerico.setSelectedItem(cuentacontableresultadodebitoTemp);
			} else {
				if(jComboBoxid_cuenta_contable_resultado_debitoBodegaProductoGenerico!=null && jComboBoxid_cuenta_contable_resultado_debitoBodegaProductoGenerico.getItemCount()>0) {
					jComboBoxid_cuenta_contable_resultado_debitoBodegaProductoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCuentaContableResultadoCreditoForeignKey(Long idCuentaContableResultadoCreditoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableresultadocreditoTemp=null;

			for(CuentaContable cuentacontableresultadocreditoAux:cuentacontableresultadocreditosForeignKey) {
				if(cuentacontableresultadocreditoAux.getId()!=null && cuentacontableresultadocreditoAux.getId().equals(idCuentaContableResultadoCreditoSeleccionado)) {
					cuentacontableresultadocreditoTemp=cuentacontableresultadocreditoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(cuentacontableresultadocreditoTemp!=null) {

					if(this.bodegaproducto!=null) {
						this.bodegaproducto.setCuentaContableResultadoCredito(cuentacontableresultadocreditoTemp);
					}

					if(this.jInternalFrameDetalleFormBodegaProducto!=null) {
						this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_resultado_creditoBodegaProducto.setSelectedItem(cuentacontableresultadocreditoTemp);
					}
				} else {
					//jComboBoxid_cuenta_contable_resultado_creditoBodegaProducto.setSelectedItem(cuentacontableresultadocreditoTemp);
					if(this.jInternalFrameDetalleFormBodegaProducto!=null) {
						if(this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_resultado_creditoBodegaProducto.getItemCount()>0) {
							this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_resultado_creditoBodegaProducto.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdCuentaContableResultadoCredito") || sFormularioTipoBusqueda.equals("Todos")){
					if(cuentacontableresultadocreditoTemp!=null && jComboBoxid_cuenta_contable_resultado_creditoFK_IdCuentaContableResultadoCreditoBodegaProducto!=null) {
						jComboBoxid_cuenta_contable_resultado_creditoFK_IdCuentaContableResultadoCreditoBodegaProducto.setSelectedItem(cuentacontableresultadocreditoTemp);
					} else {
						if(jComboBoxid_cuenta_contable_resultado_creditoFK_IdCuentaContableResultadoCreditoBodegaProducto!=null) {
							//jComboBoxid_cuenta_contable_resultado_creditoFK_IdCuentaContableResultadoCreditoBodegaProducto.setSelectedItem(cuentacontableresultadocreditoTemp);
							if(jComboBoxid_cuenta_contable_resultado_creditoFK_IdCuentaContableResultadoCreditoBodegaProducto.getItemCount()>0) {
								jComboBoxid_cuenta_contable_resultado_creditoFK_IdCuentaContableResultadoCreditoBodegaProducto.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCuentaContableResultadoCreditoForeignKeyDescripcion(Long idCuentaContableResultadoCreditoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			CuentaContable  cuentacontableresultadocreditoTemp=null;

			for(CuentaContable cuentacontableresultadocreditoAux:cuentacontableresultadocreditosForeignKey) {
				if(cuentacontableresultadocreditoAux.getId()!=null && cuentacontableresultadocreditoAux.getId().equals(idCuentaContableResultadoCreditoSeleccionado)) {
					cuentacontableresultadocreditoTemp=cuentacontableresultadocreditoAux;
					break;
				}
			}


			sDescripcion=CuentaContableConstantesFunciones.getCuentaContableDescripcion(cuentacontableresultadocreditoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCuentaContableResultadoCreditoForeignKeyGenerico(Long idCuentaContableResultadoCreditoSeleccionado,JComboBox jComboBoxid_cuenta_contable_resultado_creditoBodegaProductoGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableresultadocreditoTemp=null;

			for(CuentaContable cuentacontableresultadocreditoAux:cuentacontableresultadocreditosForeignKey) {
				if(cuentacontableresultadocreditoAux.getId()!=null && cuentacontableresultadocreditoAux.getId().equals(idCuentaContableResultadoCreditoSeleccionado)) {
					cuentacontableresultadocreditoTemp=cuentacontableresultadocreditoAux;
					break;
				}
			}

			if(cuentacontableresultadocreditoTemp!=null) {
				jComboBoxid_cuenta_contable_resultado_creditoBodegaProductoGenerico.setSelectedItem(cuentacontableresultadocreditoTemp);
			} else {
				if(jComboBoxid_cuenta_contable_resultado_creditoBodegaProductoGenerico!=null && jComboBoxid_cuenta_contable_resultado_creditoBodegaProductoGenerico.getItemCount()>0) {
					jComboBoxid_cuenta_contable_resultado_creditoBodegaProductoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	
	
	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEmpresaForeignKey(BodegaProducto bodegaproducto,JComboBox jComboBoxid_empresaBodegaProductoGenerico)throws Exception
	{
		try
		{
			Empresa  empresaAux=new Empresa();

			if(jComboBoxid_empresaBodegaProductoGenerico==null) {
				empresaAux=(Empresa)this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_empresaBodegaProducto.getSelectedItem();
			} else {
				empresaAux=(Empresa)jComboBoxid_empresaBodegaProductoGenerico.getSelectedItem();
			}

			if(empresaAux!=null && empresaAux.getId()!=null) {
				bodegaproducto.setid_empresa(empresaAux.getId());
				bodegaproducto.setempresa_descripcion(BodegaProductoConstantesFunciones.getEmpresaDescripcion(empresaAux));
				bodegaproducto.setEmpresa(empresaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarSucursalForeignKey(BodegaProducto bodegaproducto,JComboBox jComboBoxid_sucursalBodegaProductoGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalAux=new Sucursal();

			if(jComboBoxid_sucursalBodegaProductoGenerico==null) {
				sucursalAux=(Sucursal)this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_sucursalBodegaProducto.getSelectedItem();
			} else {
				sucursalAux=(Sucursal)jComboBoxid_sucursalBodegaProductoGenerico.getSelectedItem();
			}

			if(sucursalAux!=null && sucursalAux.getId()!=null) {
				bodegaproducto.setid_sucursal(sucursalAux.getId());
				bodegaproducto.setsucursal_descripcion(BodegaProductoConstantesFunciones.getSucursalDescripcion(sucursalAux));
				bodegaproducto.setSucursal(sucursalAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarBodegaForeignKey(BodegaProducto bodegaproducto,JComboBox jComboBoxid_bodegaBodegaProductoGenerico)throws Exception
	{
		try
		{
			Bodega  bodegaAux=new Bodega();

			if(jComboBoxid_bodegaBodegaProductoGenerico==null) {
				bodegaAux=(Bodega)this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_bodegaBodegaProducto.getSelectedItem();
			} else {
				bodegaAux=(Bodega)jComboBoxid_bodegaBodegaProductoGenerico.getSelectedItem();
			}

			if(bodegaAux!=null && bodegaAux.getId()!=null) {
				bodegaproducto.setid_bodega(bodegaAux.getId());
				bodegaproducto.setbodega_descripcion(BodegaProductoConstantesFunciones.getBodegaDescripcion(bodegaAux));
				bodegaproducto.setBodega(bodegaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarProductoForeignKey(BodegaProducto bodegaproducto,JComboBox jComboBoxid_productoBodegaProductoGenerico)throws Exception
	{
		try
		{
			Producto  productoAux=new Producto();

			if(jComboBoxid_productoBodegaProductoGenerico==null) {
				productoAux=(Producto)this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_productoBodegaProducto.getSelectedItem();
			} else {
				productoAux=(Producto)jComboBoxid_productoBodegaProductoGenerico.getSelectedItem();
			}

			if(productoAux!=null && productoAux.getId()!=null) {
				bodegaproducto.setid_producto(productoAux.getId());
				bodegaproducto.setproducto_descripcion(BodegaProductoConstantesFunciones.getProductoDescripcion(productoAux));
				bodegaproducto.setProducto(productoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarUnidadForeignKey(BodegaProducto bodegaproducto,JComboBox jComboBoxid_unidadBodegaProductoGenerico)throws Exception
	{
		try
		{
			Unidad  unidadAux=new Unidad();

			if(jComboBoxid_unidadBodegaProductoGenerico==null) {
				unidadAux=(Unidad)this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_unidadBodegaProducto.getSelectedItem();
			} else {
				unidadAux=(Unidad)jComboBoxid_unidadBodegaProductoGenerico.getSelectedItem();
			}

			if(unidadAux!=null && unidadAux.getId()!=null) {
				bodegaproducto.setid_unidad(unidadAux.getId());
				bodegaproducto.setunidad_descripcion(BodegaProductoConstantesFunciones.getUnidadDescripcion(unidadAux));
				bodegaproducto.setUnidad(unidadAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCentroCostoForeignKey(BodegaProducto bodegaproducto,JComboBox jComboBoxid_centro_costoBodegaProductoGenerico)throws Exception
	{
		try
		{
			CentroCosto  centrocostoAux=new CentroCosto();

			if(jComboBoxid_centro_costoBodegaProductoGenerico==null) {
				centrocostoAux=(CentroCosto)this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_centro_costoBodegaProducto.getSelectedItem();
			} else {
				centrocostoAux=(CentroCosto)jComboBoxid_centro_costoBodegaProductoGenerico.getSelectedItem();
			}

			if(centrocostoAux!=null) {
				bodegaproducto.setid_centro_costo(centrocostoAux.getId());
				bodegaproducto.setcentrocosto_descripcion(BodegaProductoConstantesFunciones.getCentroCostoDescripcion(centrocostoAux));
				bodegaproducto.setCentroCosto(centrocostoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEstadoBodegaProductoForeignKey(BodegaProducto bodegaproducto,JComboBox jComboBoxid_estado_bodega_productoBodegaProductoGenerico)throws Exception
	{
		try
		{
			EstadoBodegaProducto  estadobodegaproductoAux=new EstadoBodegaProducto();

			if(jComboBoxid_estado_bodega_productoBodegaProductoGenerico==null) {
				estadobodegaproductoAux=(EstadoBodegaProducto)this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_estado_bodega_productoBodegaProducto.getSelectedItem();
			} else {
				estadobodegaproductoAux=(EstadoBodegaProducto)jComboBoxid_estado_bodega_productoBodegaProductoGenerico.getSelectedItem();
			}

			if(estadobodegaproductoAux!=null && estadobodegaproductoAux.getId()!=null) {
				bodegaproducto.setid_estado_bodega_producto(estadobodegaproductoAux.getId());
				bodegaproducto.setestadobodegaproducto_descripcion(BodegaProductoConstantesFunciones.getEstadoBodegaProductoDescripcion(estadobodegaproductoAux));
				bodegaproducto.setEstadoBodegaProducto(estadobodegaproductoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCuentaContableInventarioForeignKey(BodegaProducto bodegaproducto,JComboBox jComboBoxid_cuenta_contable_inventarioBodegaProductoGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableAux=new CuentaContable();

			if(jComboBoxid_cuenta_contable_inventarioBodegaProductoGenerico==null) {
				cuentacontableAux=(CuentaContable)this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_inventarioBodegaProducto.getSelectedItem();
			} else {
				cuentacontableAux=(CuentaContable)jComboBoxid_cuenta_contable_inventarioBodegaProductoGenerico.getSelectedItem();
			}

			if(cuentacontableAux!=null && cuentacontableAux.getId()!=null) {
				bodegaproducto.setid_cuenta_contable_inventario(cuentacontableAux.getId());
				bodegaproducto.setcuentacontableinventario_descripcion(BodegaProductoConstantesFunciones.getCuentaContableInventarioDescripcion(cuentacontableAux));
				bodegaproducto.setCuentaContableInventario(cuentacontableAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCuentaContableCostoVentaForeignKey(BodegaProducto bodegaproducto,JComboBox jComboBoxid_cuenta_contable_costo_ventaBodegaProductoGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableAux=new CuentaContable();

			if(jComboBoxid_cuenta_contable_costo_ventaBodegaProductoGenerico==null) {
				cuentacontableAux=(CuentaContable)this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_costo_ventaBodegaProducto.getSelectedItem();
			} else {
				cuentacontableAux=(CuentaContable)jComboBoxid_cuenta_contable_costo_ventaBodegaProductoGenerico.getSelectedItem();
			}

			if(cuentacontableAux!=null && cuentacontableAux.getId()!=null) {
				bodegaproducto.setid_cuenta_contable_costo_venta(cuentacontableAux.getId());
				bodegaproducto.setcuentacontablecostoventa_descripcion(BodegaProductoConstantesFunciones.getCuentaContableCostoVentaDescripcion(cuentacontableAux));
				bodegaproducto.setCuentaContableCostoVenta(cuentacontableAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCuentaContableVentaForeignKey(BodegaProducto bodegaproducto,JComboBox jComboBoxid_cuenta_contable_ventaBodegaProductoGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableAux=new CuentaContable();

			if(jComboBoxid_cuenta_contable_ventaBodegaProductoGenerico==null) {
				cuentacontableAux=(CuentaContable)this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_ventaBodegaProducto.getSelectedItem();
			} else {
				cuentacontableAux=(CuentaContable)jComboBoxid_cuenta_contable_ventaBodegaProductoGenerico.getSelectedItem();
			}

			if(cuentacontableAux!=null && cuentacontableAux.getId()!=null) {
				bodegaproducto.setid_cuenta_contable_venta(cuentacontableAux.getId());
				bodegaproducto.setcuentacontableventa_descripcion(BodegaProductoConstantesFunciones.getCuentaContableVentaDescripcion(cuentacontableAux));
				bodegaproducto.setCuentaContableVenta(cuentacontableAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCuentaContableDescuentoForeignKey(BodegaProducto bodegaproducto,JComboBox jComboBoxid_cuenta_contable_descuentoBodegaProductoGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableAux=new CuentaContable();

			if(jComboBoxid_cuenta_contable_descuentoBodegaProductoGenerico==null) {
				cuentacontableAux=(CuentaContable)this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_descuentoBodegaProducto.getSelectedItem();
			} else {
				cuentacontableAux=(CuentaContable)jComboBoxid_cuenta_contable_descuentoBodegaProductoGenerico.getSelectedItem();
			}

			if(cuentacontableAux!=null && cuentacontableAux.getId()!=null) {
				bodegaproducto.setid_cuenta_contable_descuento(cuentacontableAux.getId());
				bodegaproducto.setcuentacontabledescuento_descripcion(BodegaProductoConstantesFunciones.getCuentaContableDescuentoDescripcion(cuentacontableAux));
				bodegaproducto.setCuentaContableDescuento(cuentacontableAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCuentaContableProduccionForeignKey(BodegaProducto bodegaproducto,JComboBox jComboBoxid_cuenta_contable_produccionBodegaProductoGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableAux=new CuentaContable();

			if(jComboBoxid_cuenta_contable_produccionBodegaProductoGenerico==null) {
				cuentacontableAux=(CuentaContable)this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_produccionBodegaProducto.getSelectedItem();
			} else {
				cuentacontableAux=(CuentaContable)jComboBoxid_cuenta_contable_produccionBodegaProductoGenerico.getSelectedItem();
			}

			if(cuentacontableAux!=null && cuentacontableAux.getId()!=null) {
				bodegaproducto.setid_cuenta_contable_produccion(cuentacontableAux.getId());
				bodegaproducto.setcuentacontableproduccion_descripcion(BodegaProductoConstantesFunciones.getCuentaContableProduccionDescripcion(cuentacontableAux));
				bodegaproducto.setCuentaContableProduccion(cuentacontableAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCuentaContableDevolucionForeignKey(BodegaProducto bodegaproducto,JComboBox jComboBoxid_cuenta_contable_devolucionBodegaProductoGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableAux=new CuentaContable();

			if(jComboBoxid_cuenta_contable_devolucionBodegaProductoGenerico==null) {
				cuentacontableAux=(CuentaContable)this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_devolucionBodegaProducto.getSelectedItem();
			} else {
				cuentacontableAux=(CuentaContable)jComboBoxid_cuenta_contable_devolucionBodegaProductoGenerico.getSelectedItem();
			}

			if(cuentacontableAux!=null && cuentacontableAux.getId()!=null) {
				bodegaproducto.setid_cuenta_contable_devolucion(cuentacontableAux.getId());
				bodegaproducto.setcuentacontabledevolucion_descripcion(BodegaProductoConstantesFunciones.getCuentaContableDevolucionDescripcion(cuentacontableAux));
				bodegaproducto.setCuentaContableDevolucion(cuentacontableAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCuentaContableIngresoDebitoForeignKey(BodegaProducto bodegaproducto,JComboBox jComboBoxid_cuenta_contable_ingreso_debitoBodegaProductoGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableAux=new CuentaContable();

			if(jComboBoxid_cuenta_contable_ingreso_debitoBodegaProductoGenerico==null) {
				cuentacontableAux=(CuentaContable)this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_ingreso_debitoBodegaProducto.getSelectedItem();
			} else {
				cuentacontableAux=(CuentaContable)jComboBoxid_cuenta_contable_ingreso_debitoBodegaProductoGenerico.getSelectedItem();
			}

			if(cuentacontableAux!=null && cuentacontableAux.getId()!=null) {
				bodegaproducto.setid_cuenta_contable_ingreso_debito(cuentacontableAux.getId());
				bodegaproducto.setcuentacontableingresodebito_descripcion(BodegaProductoConstantesFunciones.getCuentaContableIngresoDebitoDescripcion(cuentacontableAux));
				bodegaproducto.setCuentaContableIngresoDebito(cuentacontableAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCuentaContableIngresoCreditoForeignKey(BodegaProducto bodegaproducto,JComboBox jComboBoxid_cuenta_contable_ingreso_creditoBodegaProductoGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableAux=new CuentaContable();

			if(jComboBoxid_cuenta_contable_ingreso_creditoBodegaProductoGenerico==null) {
				cuentacontableAux=(CuentaContable)this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_ingreso_creditoBodegaProducto.getSelectedItem();
			} else {
				cuentacontableAux=(CuentaContable)jComboBoxid_cuenta_contable_ingreso_creditoBodegaProductoGenerico.getSelectedItem();
			}

			if(cuentacontableAux!=null && cuentacontableAux.getId()!=null) {
				bodegaproducto.setid_cuenta_contable_ingreso_credito(cuentacontableAux.getId());
				bodegaproducto.setcuentacontableingresocredito_descripcion(BodegaProductoConstantesFunciones.getCuentaContableIngresoCreditoDescripcion(cuentacontableAux));
				bodegaproducto.setCuentaContableIngresoCredito(cuentacontableAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCuentaContableResultadoDebitoForeignKey(BodegaProducto bodegaproducto,JComboBox jComboBoxid_cuenta_contable_resultado_debitoBodegaProductoGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableAux=new CuentaContable();

			if(jComboBoxid_cuenta_contable_resultado_debitoBodegaProductoGenerico==null) {
				cuentacontableAux=(CuentaContable)this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_resultado_debitoBodegaProducto.getSelectedItem();
			} else {
				cuentacontableAux=(CuentaContable)jComboBoxid_cuenta_contable_resultado_debitoBodegaProductoGenerico.getSelectedItem();
			}

			if(cuentacontableAux!=null && cuentacontableAux.getId()!=null) {
				bodegaproducto.setid_cuenta_contable_resultado_debito(cuentacontableAux.getId());
				bodegaproducto.setcuentacontableresultadodebito_descripcion(BodegaProductoConstantesFunciones.getCuentaContableResultadoDebitoDescripcion(cuentacontableAux));
				bodegaproducto.setCuentaContableResultadoDebito(cuentacontableAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCuentaContableResultadoCreditoForeignKey(BodegaProducto bodegaproducto,JComboBox jComboBoxid_cuenta_contable_resultado_creditoBodegaProductoGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableAux=new CuentaContable();

			if(jComboBoxid_cuenta_contable_resultado_creditoBodegaProductoGenerico==null) {
				cuentacontableAux=(CuentaContable)this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_resultado_creditoBodegaProducto.getSelectedItem();
			} else {
				cuentacontableAux=(CuentaContable)jComboBoxid_cuenta_contable_resultado_creditoBodegaProductoGenerico.getSelectedItem();
			}

			if(cuentacontableAux!=null && cuentacontableAux.getId()!=null) {
				bodegaproducto.setid_cuenta_contable_resultado_credito(cuentacontableAux.getId());
				bodegaproducto.setcuentacontableresultadocredito_descripcion(BodegaProductoConstantesFunciones.getCuentaContableResultadoCreditoDescripcion(cuentacontableAux));
				bodegaproducto.setCuentaContableResultadoCredito(cuentacontableAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	


		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEmpresasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEmpresa=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!BodegaProductoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormBodegaProducto!=null) { 
							this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_empresaBodegaProducto.removeAllItems();

							for(Empresa empresa:this.empresasForeignKey) {
								this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_empresaBodegaProducto.addItem(empresa);
							}
						}
					}

					if(this.jInternalFrameDetalleFormBodegaProducto!=null) { 
					}

					if(!BodegaProductoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameSucursalsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingSucursal=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!BodegaProductoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormBodegaProducto!=null) { 
							this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_sucursalBodegaProducto.removeAllItems();

							for(Sucursal sucursal:this.sucursalsForeignKey) {
								this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_sucursalBodegaProducto.addItem(sucursal);
							}
						}
					}

					if(this.jInternalFrameDetalleFormBodegaProducto!=null) { 
					}

					if(!BodegaProductoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameBodegasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingBodega=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!BodegaProductoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormBodegaProducto!=null) { 
							this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_bodegaBodegaProducto.removeAllItems();

							for(Bodega bodega:this.bodegasForeignKey) {
								this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_bodegaBodegaProducto.addItem(bodega);
							}
						}
					}

					if(this.jInternalFrameDetalleFormBodegaProducto!=null) { 
					}

					if(!BodegaProductoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdBodega") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!BodegaProductoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_bodegaFK_IdBodegaBodegaProducto.removeAllItems();

							for(Bodega bodega:this.bodegasForeignKey) {
								this.jComboBoxid_bodegaFK_IdBodegaBodegaProducto.addItem(bodega);
							}
						}

						if(!BodegaProductoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameProductosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingProducto=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!BodegaProductoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormBodegaProducto!=null) { 
							this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_productoBodegaProducto.removeAllItems();

							for(Producto producto:this.productosForeignKey) {
								this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_productoBodegaProducto.addItem(producto);
							}
						}
					}

					if(this.jInternalFrameDetalleFormBodegaProducto!=null) { 
					}

					if(!BodegaProductoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdProducto") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!BodegaProductoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_productoFK_IdProductoBodegaProducto.removeAllItems();

							for(Producto producto:this.productosForeignKey) {
								this.jComboBoxid_productoFK_IdProductoBodegaProducto.addItem(producto);
							}
						}

						if(!BodegaProductoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameUnidadsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingUnidad=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!BodegaProductoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormBodegaProducto!=null) { 
							this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_unidadBodegaProducto.removeAllItems();

							for(Unidad unidad:this.unidadsForeignKey) {
								this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_unidadBodegaProducto.addItem(unidad);
							}
						}
					}

					if(this.jInternalFrameDetalleFormBodegaProducto!=null) { 
					}

					if(!BodegaProductoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdUnidad") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!BodegaProductoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_unidadFK_IdUnidadBodegaProducto.removeAllItems();

							for(Unidad unidad:this.unidadsForeignKey) {
								this.jComboBoxid_unidadFK_IdUnidadBodegaProducto.addItem(unidad);
							}
						}

						if(!BodegaProductoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCentroCostosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCentroCosto=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!BodegaProductoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormBodegaProducto!=null) { 
							this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_centro_costoBodegaProducto.removeAllItems();

							for(CentroCosto centrocosto:this.centrocostosForeignKey) {
								this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_centro_costoBodegaProducto.addItem(centrocosto);
							}
						}
					}

					if(this.jInternalFrameDetalleFormBodegaProducto!=null) { 
					}

					if(!BodegaProductoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdCentroCosto") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!BodegaProductoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_centro_costoFK_IdCentroCostoBodegaProducto.removeAllItems();

							for(CentroCosto centrocosto:this.centrocostosForeignKey) {
								this.jComboBoxid_centro_costoFK_IdCentroCostoBodegaProducto.addItem(centrocosto);
							}
						}

						if(!BodegaProductoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEstadoBodegaProductosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEstadoBodegaProducto=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!BodegaProductoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormBodegaProducto!=null) { 
							this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_estado_bodega_productoBodegaProducto.removeAllItems();

							for(EstadoBodegaProducto estadobodegaproducto:this.estadobodegaproductosForeignKey) {
								if(estadobodegaproducto.getes_defecto()) {
									this.bodegaproductoBean.setid_estado_bodega_producto(estadobodegaproducto.getId());
								}

								this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_estado_bodega_productoBodegaProducto.addItem(estadobodegaproducto);
							}
						}
					}

					if(this.jInternalFrameDetalleFormBodegaProducto!=null) { 
					}

					if(!BodegaProductoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCuentaContableInventariosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCuentaContable=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!BodegaProductoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormBodegaProducto!=null) { 
							this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_inventarioBodegaProducto.removeAllItems();

							for(CuentaContable cuentacontableinventario:this.cuentacontableinventariosForeignKey) {
								this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_inventarioBodegaProducto.addItem(cuentacontableinventario);
							}
						}
					}

					if(this.jInternalFrameDetalleFormBodegaProducto!=null) { 
					}

					if(!BodegaProductoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCuentaContableCostoVentasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCuentaContable=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!BodegaProductoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormBodegaProducto!=null) { 
							this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_costo_ventaBodegaProducto.removeAllItems();

							for(CuentaContable cuentacontablecostoventa:this.cuentacontablecostoventasForeignKey) {
								this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_costo_ventaBodegaProducto.addItem(cuentacontablecostoventa);
							}
						}
					}

					if(this.jInternalFrameDetalleFormBodegaProducto!=null) { 
					}

					if(!BodegaProductoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdCuentaContableCostoVenta") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!BodegaProductoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_cuenta_contable_costo_ventaFK_IdCuentaContableCostoVentaBodegaProducto.removeAllItems();

							for(CuentaContable cuentacontablecostoventa:this.cuentacontablecostoventasForeignKey) {
								this.jComboBoxid_cuenta_contable_costo_ventaFK_IdCuentaContableCostoVentaBodegaProducto.addItem(cuentacontablecostoventa);
							}
						}

						if(!BodegaProductoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCuentaContableVentasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCuentaContable=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!BodegaProductoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormBodegaProducto!=null) { 
							this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_ventaBodegaProducto.removeAllItems();

							for(CuentaContable cuentacontableventa:this.cuentacontableventasForeignKey) {
								this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_ventaBodegaProducto.addItem(cuentacontableventa);
							}
						}
					}

					if(this.jInternalFrameDetalleFormBodegaProducto!=null) { 
					}

					if(!BodegaProductoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdCuentaContableVenta") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!BodegaProductoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_cuenta_contable_ventaFK_IdCuentaContableVentaBodegaProducto.removeAllItems();

							for(CuentaContable cuentacontableventa:this.cuentacontableventasForeignKey) {
								this.jComboBoxid_cuenta_contable_ventaFK_IdCuentaContableVentaBodegaProducto.addItem(cuentacontableventa);
							}
						}

						if(!BodegaProductoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCuentaContableDescuentosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCuentaContable=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!BodegaProductoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormBodegaProducto!=null) { 
							this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_descuentoBodegaProducto.removeAllItems();

							for(CuentaContable cuentacontabledescuento:this.cuentacontabledescuentosForeignKey) {
								this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_descuentoBodegaProducto.addItem(cuentacontabledescuento);
							}
						}
					}

					if(this.jInternalFrameDetalleFormBodegaProducto!=null) { 
					}

					if(!BodegaProductoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCuentaContableProduccionsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCuentaContable=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!BodegaProductoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormBodegaProducto!=null) { 
							this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_produccionBodegaProducto.removeAllItems();

							for(CuentaContable cuentacontableproduccion:this.cuentacontableproduccionsForeignKey) {
								this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_produccionBodegaProducto.addItem(cuentacontableproduccion);
							}
						}
					}

					if(this.jInternalFrameDetalleFormBodegaProducto!=null) { 
					}

					if(!BodegaProductoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdCuentaContableProduccion") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!BodegaProductoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_cuenta_contable_produccionFK_IdCuentaContableProduccionBodegaProducto.removeAllItems();

							for(CuentaContable cuentacontableproduccion:this.cuentacontableproduccionsForeignKey) {
								this.jComboBoxid_cuenta_contable_produccionFK_IdCuentaContableProduccionBodegaProducto.addItem(cuentacontableproduccion);
							}
						}

						if(!BodegaProductoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCuentaContableDevolucionsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCuentaContable=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!BodegaProductoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormBodegaProducto!=null) { 
							this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_devolucionBodegaProducto.removeAllItems();

							for(CuentaContable cuentacontabledevolucion:this.cuentacontabledevolucionsForeignKey) {
								this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_devolucionBodegaProducto.addItem(cuentacontabledevolucion);
							}
						}
					}

					if(this.jInternalFrameDetalleFormBodegaProducto!=null) { 
					}

					if(!BodegaProductoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCuentaContableIngresoDebitosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCuentaContable=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!BodegaProductoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormBodegaProducto!=null) { 
							this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_ingreso_debitoBodegaProducto.removeAllItems();

							for(CuentaContable cuentacontableingresodebito:this.cuentacontableingresodebitosForeignKey) {
								this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_ingreso_debitoBodegaProducto.addItem(cuentacontableingresodebito);
							}
						}
					}

					if(this.jInternalFrameDetalleFormBodegaProducto!=null) { 
					}

					if(!BodegaProductoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdCuentaContableIngresoDebito") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!BodegaProductoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_cuenta_contable_ingreso_debitoFK_IdCuentaContableIngresoDebitoBodegaProducto.removeAllItems();

							for(CuentaContable cuentacontableingresodebito:this.cuentacontableingresodebitosForeignKey) {
								this.jComboBoxid_cuenta_contable_ingreso_debitoFK_IdCuentaContableIngresoDebitoBodegaProducto.addItem(cuentacontableingresodebito);
							}
						}

						if(!BodegaProductoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCuentaContableIngresoCreditosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCuentaContable=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!BodegaProductoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormBodegaProducto!=null) { 
							this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_ingreso_creditoBodegaProducto.removeAllItems();

							for(CuentaContable cuentacontableingresocredito:this.cuentacontableingresocreditosForeignKey) {
								this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_ingreso_creditoBodegaProducto.addItem(cuentacontableingresocredito);
							}
						}
					}

					if(this.jInternalFrameDetalleFormBodegaProducto!=null) { 
					}

					if(!BodegaProductoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdCuentaContableIngresoCredito") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!BodegaProductoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_cuenta_contable_ingreso_creditoFK_IdCuentaContableIngresoCreditoBodegaProducto.removeAllItems();

							for(CuentaContable cuentacontableingresocredito:this.cuentacontableingresocreditosForeignKey) {
								this.jComboBoxid_cuenta_contable_ingreso_creditoFK_IdCuentaContableIngresoCreditoBodegaProducto.addItem(cuentacontableingresocredito);
							}
						}

						if(!BodegaProductoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCuentaContableResultadoDebitosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCuentaContable=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!BodegaProductoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormBodegaProducto!=null) { 
							this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_resultado_debitoBodegaProducto.removeAllItems();

							for(CuentaContable cuentacontableresultadodebito:this.cuentacontableresultadodebitosForeignKey) {
								this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_resultado_debitoBodegaProducto.addItem(cuentacontableresultadodebito);
							}
						}
					}

					if(this.jInternalFrameDetalleFormBodegaProducto!=null) { 
					}

					if(!BodegaProductoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdCuentaContableResultadoDebito") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!BodegaProductoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_cuenta_contable_resultado_debitoFK_IdCuentaContableResultadoDebitoBodegaProducto.removeAllItems();

							for(CuentaContable cuentacontableresultadodebito:this.cuentacontableresultadodebitosForeignKey) {
								this.jComboBoxid_cuenta_contable_resultado_debitoFK_IdCuentaContableResultadoDebitoBodegaProducto.addItem(cuentacontableresultadodebito);
							}
						}

						if(!BodegaProductoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCuentaContableResultadoCreditosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCuentaContable=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!BodegaProductoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormBodegaProducto!=null) { 
							this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_resultado_creditoBodegaProducto.removeAllItems();

							for(CuentaContable cuentacontableresultadocredito:this.cuentacontableresultadocreditosForeignKey) {
								this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_resultado_creditoBodegaProducto.addItem(cuentacontableresultadocredito);
							}
						}
					}

					if(this.jInternalFrameDetalleFormBodegaProducto!=null) { 
					}

					if(!BodegaProductoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdCuentaContableResultadoCredito") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!BodegaProductoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_cuenta_contable_resultado_creditoFK_IdCuentaContableResultadoCreditoBodegaProducto.removeAllItems();

							for(CuentaContable cuentacontableresultadocredito:this.cuentacontableresultadocreditosForeignKey) {
								this.jComboBoxid_cuenta_contable_resultado_creditoFK_IdCuentaContableResultadoCreditoBodegaProducto.addItem(cuentacontableresultadocredito);
							}
						}

						if(!BodegaProductoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

	


		public void setSelectedItemCombosFrameEmpresaForeignKey(Empresa empresa,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormBodegaProducto!=null) {
							this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_empresaBodegaProducto.setSelectedItem(empresa);
						}
					} else {
						if(this.jInternalFrameDetalleFormBodegaProducto!=null) {
							this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_empresaBodegaProducto.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameSucursalForeignKey(Sucursal sucursal,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormBodegaProducto!=null) {
							this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_sucursalBodegaProducto.setSelectedItem(sucursal);
						}
					} else {
						if(this.jInternalFrameDetalleFormBodegaProducto!=null) {
							this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_sucursalBodegaProducto.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameBodegaForeignKey(Bodega bodega,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormBodegaProducto!=null) {
							this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_bodegaBodegaProducto.setSelectedItem(bodega);
						}
					} else {
						if(this.jInternalFrameDetalleFormBodegaProducto!=null) {
							this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_bodegaBodegaProducto.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_bodegaFK_IdBodegaBodegaProducto.setSelectedItem(bodega);
						} else {
							this.jComboBoxid_bodegaFK_IdBodegaBodegaProducto.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameProductoForeignKey(Producto producto,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormBodegaProducto!=null) {
							this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_productoBodegaProducto.setSelectedItem(producto);
						}
					} else {
						if(this.jInternalFrameDetalleFormBodegaProducto!=null) {
							this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_productoBodegaProducto.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_productoFK_IdProductoBodegaProducto.setSelectedItem(producto);
						} else {
							this.jComboBoxid_productoFK_IdProductoBodegaProducto.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameUnidadForeignKey(Unidad unidad,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormBodegaProducto!=null) {
							this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_unidadBodegaProducto.setSelectedItem(unidad);
						}
					} else {
						if(this.jInternalFrameDetalleFormBodegaProducto!=null) {
							this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_unidadBodegaProducto.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_unidadFK_IdUnidadBodegaProducto.setSelectedItem(unidad);
						} else {
							this.jComboBoxid_unidadFK_IdUnidadBodegaProducto.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCentroCostoForeignKey(CentroCosto centrocosto,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormBodegaProducto!=null) {
							this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_centro_costoBodegaProducto.setSelectedItem(centrocosto);
						}
					} else {
						if(this.jInternalFrameDetalleFormBodegaProducto!=null) {
							this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_centro_costoBodegaProducto.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_centro_costoFK_IdCentroCostoBodegaProducto.setSelectedItem(centrocosto);
						} else {
							this.jComboBoxid_centro_costoFK_IdCentroCostoBodegaProducto.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEstadoBodegaProductoForeignKey(EstadoBodegaProducto estadobodegaproducto,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormBodegaProducto!=null) {
							this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_estado_bodega_productoBodegaProducto.setSelectedItem(estadobodegaproducto);
						}
					} else {
						if(this.jInternalFrameDetalleFormBodegaProducto!=null) {
							this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_estado_bodega_productoBodegaProducto.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCuentaContableInventarioForeignKey(CuentaContable cuentacontableinventario,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormBodegaProducto!=null) {
							this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_inventarioBodegaProducto.setSelectedItem(cuentacontableinventario);
						}
					} else {
						if(this.jInternalFrameDetalleFormBodegaProducto!=null) {
							this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_inventarioBodegaProducto.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCuentaContableCostoVentaForeignKey(CuentaContable cuentacontablecostoventa,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormBodegaProducto!=null) {
							this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_costo_ventaBodegaProducto.setSelectedItem(cuentacontablecostoventa);
						}
					} else {
						if(this.jInternalFrameDetalleFormBodegaProducto!=null) {
							this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_costo_ventaBodegaProducto.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_cuenta_contable_costo_ventaFK_IdCuentaContableCostoVentaBodegaProducto.setSelectedItem(cuentacontablecostoventa);
						} else {
							this.jComboBoxid_cuenta_contable_costo_ventaFK_IdCuentaContableCostoVentaBodegaProducto.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCuentaContableVentaForeignKey(CuentaContable cuentacontableventa,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormBodegaProducto!=null) {
							this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_ventaBodegaProducto.setSelectedItem(cuentacontableventa);
						}
					} else {
						if(this.jInternalFrameDetalleFormBodegaProducto!=null) {
							this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_ventaBodegaProducto.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_cuenta_contable_ventaFK_IdCuentaContableVentaBodegaProducto.setSelectedItem(cuentacontableventa);
						} else {
							this.jComboBoxid_cuenta_contable_ventaFK_IdCuentaContableVentaBodegaProducto.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCuentaContableDescuentoForeignKey(CuentaContable cuentacontabledescuento,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormBodegaProducto!=null) {
							this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_descuentoBodegaProducto.setSelectedItem(cuentacontabledescuento);
						}
					} else {
						if(this.jInternalFrameDetalleFormBodegaProducto!=null) {
							this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_descuentoBodegaProducto.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCuentaContableProduccionForeignKey(CuentaContable cuentacontableproduccion,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormBodegaProducto!=null) {
							this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_produccionBodegaProducto.setSelectedItem(cuentacontableproduccion);
						}
					} else {
						if(this.jInternalFrameDetalleFormBodegaProducto!=null) {
							this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_produccionBodegaProducto.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_cuenta_contable_produccionFK_IdCuentaContableProduccionBodegaProducto.setSelectedItem(cuentacontableproduccion);
						} else {
							this.jComboBoxid_cuenta_contable_produccionFK_IdCuentaContableProduccionBodegaProducto.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCuentaContableDevolucionForeignKey(CuentaContable cuentacontabledevolucion,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormBodegaProducto!=null) {
							this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_devolucionBodegaProducto.setSelectedItem(cuentacontabledevolucion);
						}
					} else {
						if(this.jInternalFrameDetalleFormBodegaProducto!=null) {
							this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_devolucionBodegaProducto.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCuentaContableIngresoDebitoForeignKey(CuentaContable cuentacontableingresodebito,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormBodegaProducto!=null) {
							this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_ingreso_debitoBodegaProducto.setSelectedItem(cuentacontableingresodebito);
						}
					} else {
						if(this.jInternalFrameDetalleFormBodegaProducto!=null) {
							this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_ingreso_debitoBodegaProducto.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_cuenta_contable_ingreso_debitoFK_IdCuentaContableIngresoDebitoBodegaProducto.setSelectedItem(cuentacontableingresodebito);
						} else {
							this.jComboBoxid_cuenta_contable_ingreso_debitoFK_IdCuentaContableIngresoDebitoBodegaProducto.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCuentaContableIngresoCreditoForeignKey(CuentaContable cuentacontableingresocredito,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormBodegaProducto!=null) {
							this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_ingreso_creditoBodegaProducto.setSelectedItem(cuentacontableingresocredito);
						}
					} else {
						if(this.jInternalFrameDetalleFormBodegaProducto!=null) {
							this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_ingreso_creditoBodegaProducto.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_cuenta_contable_ingreso_creditoFK_IdCuentaContableIngresoCreditoBodegaProducto.setSelectedItem(cuentacontableingresocredito);
						} else {
							this.jComboBoxid_cuenta_contable_ingreso_creditoFK_IdCuentaContableIngresoCreditoBodegaProducto.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCuentaContableResultadoDebitoForeignKey(CuentaContable cuentacontableresultadodebito,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormBodegaProducto!=null) {
							this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_resultado_debitoBodegaProducto.setSelectedItem(cuentacontableresultadodebito);
						}
					} else {
						if(this.jInternalFrameDetalleFormBodegaProducto!=null) {
							this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_resultado_debitoBodegaProducto.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_cuenta_contable_resultado_debitoFK_IdCuentaContableResultadoDebitoBodegaProducto.setSelectedItem(cuentacontableresultadodebito);
						} else {
							this.jComboBoxid_cuenta_contable_resultado_debitoFK_IdCuentaContableResultadoDebitoBodegaProducto.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCuentaContableResultadoCreditoForeignKey(CuentaContable cuentacontableresultadocredito,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormBodegaProducto!=null) {
							this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_resultado_creditoBodegaProducto.setSelectedItem(cuentacontableresultadocredito);
						}
					} else {
						if(this.jInternalFrameDetalleFormBodegaProducto!=null) {
							this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_resultado_creditoBodegaProducto.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_cuenta_contable_resultado_creditoFK_IdCuentaContableResultadoCreditoBodegaProducto.setSelectedItem(cuentacontableresultadocredito);
						} else {
							this.jComboBoxid_cuenta_contable_resultado_creditoFK_IdCuentaContableResultadoCreditoBodegaProducto.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

	


	
	public void refrescarForeignKeysDescripcionesBodegaProducto() throws Exception {
		//SI FUNCIONA DEEPLOAD ESTO VA AL ULTIMO
		if(Constantes.ISUSAEJBLOGICLAYER) {
			BodegaProductoConstantesFunciones.refrescarForeignKeysDescripcionesBodegaProducto(this.bodegaproductoLogic.getBodegaProductos());
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			BodegaProductoConstantesFunciones.refrescarForeignKeysDescripcionesBodegaProducto(this.bodegaproductos);
		}
		
		/*
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		classes.add(new Classe(Empresa.class));
		classes.add(new Classe(Sucursal.class));
		classes.add(new Classe(Bodega.class));
		classes.add(new Classe(Producto.class));
		classes.add(new Classe(Unidad.class));
		classes.add(new Classe(CentroCosto.class));
		classes.add(new Classe(EstadoBodegaProducto.class));
		classes.add(new Classe(CuentaContable.class));
			
		if(Constantes.ISUSAEJBLOGICLAYER) {
			//USA LOS OBJETOS DE LOGIC DIRECTAMENTE
			//bodegaproductoLogic.setBodegaProductos(this.bodegaproductos);
			bodegaproductoLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
	
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		*/				
	}	
	
	
	
	public Integer getiNumeroPaginacion() {
		return iNumeroPaginacion;
	}

	public void setiNumeroPaginacion(Integer iNumeroPaginacion) {
		this.iNumeroPaginacion= iNumeroPaginacion;
	}
	
	public Integer getiNumeroPaginacionPagina() {
		return iNumeroPaginacionPagina;
	}

	public void setiNumeroPaginacionPagina(Integer iNumeroPaginacionPagina) {
		this.iNumeroPaginacionPagina= iNumeroPaginacionPagina;
	}
	
	
	public Boolean getIsSeleccionarTodos() {
		return this.isSeleccionarTodos;
	}

	public void setIsSeleccionarTodos(Boolean isSeleccionarTodos) {
		this.isSeleccionarTodos= isSeleccionarTodos;
	}
	
	public Boolean getEsControlTabla() {
		return this.esControlTabla;
	}

	public void setEsControlTabla(Boolean esControlTabla) {
		this.esControlTabla= esControlTabla;
	}
	
	public Boolean getIsSeleccionados() {
		return this.isSeleccionados;
	}

	public void setIsSeleccionados(Boolean isSeleccionados) {
		this.isSeleccionados= isSeleccionados;
	}
	
	public Boolean getIsPostAccionNuevo() {
		return this.isPostAccionNuevo;
	}

	public void setIsPostAccionNuevo(Boolean isPostAccionNuevo) {
		this.isPostAccionNuevo= isPostAccionNuevo;
	}
	
	public Boolean getIsPostAccionSinCerrar() {
		return this.isPostAccionSinCerrar;
	}

	public void setIsPostAccionSinCerrar(Boolean isPostAccionSinCerrar) {
		this.isPostAccionSinCerrar= isPostAccionSinCerrar;
	}
	
	public Boolean getIsPostAccionSinMensaje() {
		return this.isPostAccionSinMensaje;
	}

	public void setIsPostAccionSinMensaje(Boolean isPostAccionSinMensaje) {
		this.isPostAccionSinMensaje= isPostAccionSinMensaje;
	}
	
	public Boolean getConGraficoReporte() {
		return this.conGraficoReporte;
	}

	public void setConGraficoReporte(Boolean conGraficoReporte) {
		this.conGraficoReporte= conGraficoReporte;
	}
	
	
	public ArrayList<Reporte> gettiposArchivosReportes() {
		return this.tiposArchivosReportes;
	}
	
	public void settiposArchivosReportes(ArrayList<Reporte> tiposArchivosReportes) {
		this.tiposArchivosReportes = tiposArchivosReportes;
	}
	
	//TIPOS ARCHIVOS DINAMICOS
	public ArrayList<Reporte> gettiposArchivosReportesDinamico() {
		return this.tiposArchivosReportesDinamico;
	}
	
	public void settiposArchivosReportesDinamico(ArrayList<Reporte> tiposArchivosReportesDinamico) {
		this.tiposArchivosReportesDinamico = tiposArchivosReportesDinamico;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportes() {
		return this.tiposReportes;
	}
	
	public void settiposReportes(ArrayList<Reporte> tiposReportes) {
		this.tiposReportes = tiposReportes;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportesDinamico() {
		return this.tiposReportesDinamico;
	}
	
	public void settiposReportesDinamico(ArrayList<Reporte> tiposReportesDinamico) {
		this.tiposReportesDinamico = tiposReportesDinamico;
	}
	
	//TIPOS GRAFICOS REPORTES
	public ArrayList<Reporte> gettiposGraficosReportes() {
		return this.tiposGraficosReportes;
	}
	
	public void settiposGraficosReportes(ArrayList<Reporte> tiposGraficosReportes) {
		this.tiposGraficosReportes = tiposGraficosReportes;
	}
	
	public ArrayList<Reporte> gettiposPaginacion() {
		return this.tiposPaginacion;
	}
	
	public void settiposPaginacion(ArrayList<Reporte> tiposPaginacion) {
		this.tiposPaginacion = tiposPaginacion;
	}
	
	public ArrayList<Reporte> gettiposRelaciones() {
		return this.tiposRelaciones;
	}
	
	public void settiposRelaciones(ArrayList<Reporte> tiposRelaciones) {
		this.tiposRelaciones= tiposRelaciones;
	}
	
	public ArrayList<Reporte> gettiposAcciones() {
		return this.tiposAcciones;
	}
	
	public void settiposAcciones(ArrayList<Reporte> tiposAcciones) {
		this.tiposAcciones = tiposAcciones;
	}
	
	public ArrayList<Reporte> gettiposAccionesFormulario() {
		return this.tiposAccionesFormulario;
	}
	
	public void settiposAccionesFormulario(ArrayList<Reporte> tiposAccionesFormulario) {
		this.tiposAccionesFormulario = tiposAccionesFormulario;
	}
	
	public ArrayList<Reporte> gettiposSeleccionar() {
		return this.tiposSeleccionar;
	}
	
	public void settiposSeleccionar(ArrayList<Reporte> tiposSeleccionar) {
		this.tiposSeleccionar = tiposSeleccionar;
	}
	
	public ArrayList<Reporte> gettiposColumnasSelect() {
		return this.tiposColumnasSelect;
	}
	
	public void settiposColumnasSelect(ArrayList<Reporte> tiposColumnasSelect) {
		this.tiposColumnasSelect = tiposColumnasSelect;
	}
		
	public ArrayList<Reporte> gettiposRelacionesSelect() {
		return this.tiposRelacionesSelect;
	}
	
	public void settiposRelacionesSelect(ArrayList<Reporte> tiposRelacionesSelect) {
		this.tiposRelacionesSelect = tiposRelacionesSelect;
	}
	
	public Long getIIdUsuarioSesion() {
		return lIdUsuarioSesion;
	}

	public void setIIdUsuarioSesion(Long lIdUsuarioSesion) {
		this.lIdUsuarioSesion = lIdUsuarioSesion;
	}
	
	
	public List<Accion> getAccions() {
		return this.accions;
	}

	public void setAccions(List<Accion> accions) {
		this.accions = accions;
	}
	
	public List<Accion> getAccionsFormulario() {
		return this.accionsFormulario;
	}

	public void setAccionsFormulario(List<Accion> accionsFormulario) {
		this.accionsFormulario = accionsFormulario;
	}
	
	public String getsAccionMantenimiento() {
		return sAccionMantenimiento;
	}

	public void setsAccionMantenimiento(String sAccionMantenimiento) {
		this.sAccionMantenimiento = sAccionMantenimiento;
	}

	public String getsAccionBusqueda() {
		return sAccionBusqueda;
	}

	public void setsAccionBusqueda(String sAccionBusqueda) {
		this.sAccionBusqueda = sAccionBusqueda;
	}

	public String getsAccionAdicional() {
		return sAccionAdicional;
	}

	public void setsAccionAdicional(String sAccionAdicional) {
		this.sAccionAdicional = sAccionAdicional;
	}

	public String getsUltimaBusqueda() {
		return sUltimaBusqueda;
	}

	public void setsUltimaBusqueda(String sUltimaBusqueda) {
		this.sUltimaBusqueda = sUltimaBusqueda;
	}
	
	public String getsTipoArchivoReporte() {
		return sTipoArchivoReporte;
	}

	public void setsTipoArchivoReporte(String sTipoArchivoReporte) {
		this.sTipoArchivoReporte = sTipoArchivoReporte;
	}
	
	public String getsTipoArchivoReporteDinamico() {
		return sTipoArchivoReporteDinamico;
	}

	public void setsTipoArchivoReporteDinamico(String sTipoArchivoReporteDinamico) {
		this.sTipoArchivoReporteDinamico = sTipoArchivoReporteDinamico;
	}
	
	public String getsTipoReporte() {
		return sTipoReporte;
	}

	public void setsTipoReporte(String sTipoReporte) {
		this.sTipoReporte = sTipoReporte;
	}
	
	public String getsTipoReporteDinamico() {
		return sTipoReporteDinamico;
	}

	public void setsTipoReporteDinamico(String sTipoReporteDinamico) {
		this.sTipoReporteDinamico = sTipoReporteDinamico;
	}
	
	public String getsTipoGraficoReporte() {
		return sTipoGraficoReporte;
	}

	public void setsTipoGraficoReporte(String sTipoGraficoReporte) {
		this.sTipoGraficoReporte = sTipoGraficoReporte;
	}
	
	public String getsTipoPaginacion() {
		return sTipoPaginacion;
	}

	public void setsTipoPaginacion(String sTipoPaginacion) {
		this.sTipoPaginacion = sTipoPaginacion;
	}
	
	public String getsTipoRelacion() {
		return sTipoRelacion;
	}

	public void setsTipoRelacion(String sTipoRelacion) {
		this.sTipoRelacion = sTipoRelacion;
	}
	
	public String getsTipoAccion() {
		return sTipoAccion;
	}

	public void setsTipoAccion(String sTipoAccion) {
		this.sTipoAccion = sTipoAccion;
	}
	
	public String getsTipoAccionFormulario() {
		return sTipoAccionFormulario;
	}

	public void setsTipoAccionFormulario(String sTipoAccionFormulario) {
		this.sTipoAccionFormulario = sTipoAccionFormulario;
	}
	
	public String getsTipoSeleccionar() {
		return sTipoSeleccionar;
	}

	public void setsTipoSeleccionar(String sTipoSeleccionar) {
		this.sTipoSeleccionar = sTipoSeleccionar;
	}
	
	public String getsValorCampoGeneral() {
		return sValorCampoGeneral;
	}

	public void setsValorCampoGeneral(String sValorCampoGeneral) {
		this.sValorCampoGeneral = sValorCampoGeneral;
	}			

	public String getsDetalleReporte() {
		return sDetalleReporte;
	}

	public void setsDetalleReporte(String sDetalleReporte) {
		this.sDetalleReporte = sDetalleReporte;
	}
	
	
	public String getsTipoReporteExtra() {
		return sTipoReporteExtra;
	}

	public void setsTipoReporteExtra(String sTipoReporteExtra) {
		this.sTipoReporteExtra = sTipoReporteExtra;
	}
	
	public Boolean getesReporteDinamico() {
		return esReporteDinamico;
	}	
	
	public void setesReporteDinamico(Boolean esReporteDinamico) {
		this.esReporteDinamico = esReporteDinamico;
	}
	
	public Boolean getesRecargarFks() {
		return esRecargarFks;
	}	
	
	public void setesRecargarFks(Boolean esRecargarFks) {
		this.esRecargarFks = esRecargarFks;
	}
	
	public Boolean getesReporteAccionProceso() {
		return esReporteAccionProceso;
	}	
	
	public void setesReporteAccionProceso(Boolean esReporteAccionProceso) {
		this.esReporteAccionProceso= esReporteAccionProceso;
	}
		
	public BodegaProductoParameterReturnGeneral getBodegaProductoParameterGeneral() {
		return this.bodegaproductoParameterGeneral;
	}
	
	public void setBodegaProductoParameterGeneral(BodegaProductoParameterReturnGeneral bodegaproductoParameterGeneral) {
		this.bodegaproductoParameterGeneral = bodegaproductoParameterGeneral;
	}
	
	public String getsPathReporteDinamico() {
		return sPathReporteDinamico;
	}

	public void setsPathReporteDinamico(String sPathReporteDinamico) {
		this.sPathReporteDinamico = sPathReporteDinamico;
	}
		
	public Boolean getisMostrarNumeroPaginacion() {
		return isMostrarNumeroPaginacion;
	}

	public void setisMostrarNumeroPaginacion(Boolean isMostrarNumeroPaginacion) {
		this.isMostrarNumeroPaginacion = isMostrarNumeroPaginacion;
	}
	
	public Mensaje getMensaje() {
		return mensaje;
	}

	public void setMensaje(Mensaje mensaje) {
		this.mensaje = mensaje;
	}
	
	public Boolean getIsPermisoTodoBodegaProducto() {
		return isPermisoTodoBodegaProducto;
	}

	public void setIsPermisoTodoBodegaProducto(Boolean isPermisoTodoBodegaProducto) {
		this.isPermisoTodoBodegaProducto = isPermisoTodoBodegaProducto;
	}

	public Boolean getIsPermisoNuevoBodegaProducto() {
		return isPermisoNuevoBodegaProducto;
	}

	public void setIsPermisoNuevoBodegaProducto(Boolean isPermisoNuevoBodegaProducto) {
		this.isPermisoNuevoBodegaProducto = isPermisoNuevoBodegaProducto;
	}

	public Boolean getIsPermisoActualizarBodegaProducto() {
		return isPermisoActualizarBodegaProducto;
	}

	public void setIsPermisoActualizarBodegaProducto(Boolean isPermisoActualizarBodegaProducto) {
		this.isPermisoActualizarBodegaProducto = isPermisoActualizarBodegaProducto;
	}

	public Boolean getIsPermisoEliminarBodegaProducto() {
		return isPermisoEliminarBodegaProducto;
	}

	public void setIsPermisoEliminarBodegaProducto(Boolean isPermisoEliminarBodegaProducto) {
		this.isPermisoEliminarBodegaProducto = isPermisoEliminarBodegaProducto;
	}

	public Boolean getIsPermisoGuardarCambiosBodegaProducto() {
		return isPermisoGuardarCambiosBodegaProducto;
	}

	public void setIsPermisoGuardarCambiosBodegaProducto(Boolean isPermisoGuardarCambiosBodegaProducto) {
		this.isPermisoGuardarCambiosBodegaProducto = isPermisoGuardarCambiosBodegaProducto;
	}
	
	public Boolean getIsPermisoConsultaBodegaProducto() {
		return isPermisoConsultaBodegaProducto;
	}

	public void setIsPermisoConsultaBodegaProducto(Boolean isPermisoConsultaBodegaProducto) {
		this.isPermisoConsultaBodegaProducto = isPermisoConsultaBodegaProducto;
	}

	public Boolean getIsPermisoBusquedaBodegaProducto() {
		return isPermisoBusquedaBodegaProducto;
	}

	public void setIsPermisoBusquedaBodegaProducto(Boolean isPermisoBusquedaBodegaProducto) {
		this.isPermisoBusquedaBodegaProducto = isPermisoBusquedaBodegaProducto;
	}

	public Boolean getIsPermisoReporteBodegaProducto() {
		return isPermisoReporteBodegaProducto;
	}

	public void setIsPermisoReporteBodegaProducto(Boolean isPermisoReporteBodegaProducto) {
		this.isPermisoReporteBodegaProducto = isPermisoReporteBodegaProducto;
	}
	
	public Boolean getIsPermisoPaginacionMedioBodegaProducto() {
		return isPermisoPaginacionMedioBodegaProducto;
	}

	public void setIsPermisoPaginacionMedioBodegaProducto(Boolean isPermisoPaginacionMedioBodegaProducto) {
		this.isPermisoPaginacionMedioBodegaProducto = isPermisoPaginacionMedioBodegaProducto;
	}
	
	public Boolean getIsPermisoPaginacionTodoBodegaProducto() {
		return isPermisoPaginacionTodoBodegaProducto;
	}

	public void setIsPermisoPaginacionTodoBodegaProducto(Boolean isPermisoPaginacionTodoBodegaProducto) {
		this.isPermisoPaginacionTodoBodegaProducto = isPermisoPaginacionTodoBodegaProducto;
	}
	
	public Boolean getIsPermisoPaginacionAltoBodegaProducto() {
		return isPermisoPaginacionAltoBodegaProducto;
	}

	public void setIsPermisoPaginacionAltoBodegaProducto(Boolean isPermisoPaginacionAltoBodegaProducto) {
		this.isPermisoPaginacionAltoBodegaProducto = isPermisoPaginacionAltoBodegaProducto;
	}
	
	public Boolean getIsPermisoCopiarBodegaProducto() {
		return isPermisoCopiarBodegaProducto;
	}

	public void setIsPermisoCopiarBodegaProducto(Boolean isPermisoCopiarBodegaProducto) {
		this.isPermisoCopiarBodegaProducto = isPermisoCopiarBodegaProducto;
	}
	
	public Boolean getIsPermisoVerFormBodegaProducto() {
		return isPermisoVerFormBodegaProducto;
	}

	public void setIsPermisoVerFormBodegaProducto(Boolean isPermisoVerFormBodegaProducto) {
		this.isPermisoVerFormBodegaProducto = isPermisoVerFormBodegaProducto;
	}
	
	public Boolean getIsPermisoDuplicarBodegaProducto() {
		return isPermisoDuplicarBodegaProducto;
	}

	public void setIsPermisoDuplicarBodegaProducto(Boolean isPermisoDuplicarBodegaProducto) {
		this.isPermisoDuplicarBodegaProducto = isPermisoDuplicarBodegaProducto;
	}
	
	public Boolean getIsPermisoOrdenBodegaProducto() {
		return isPermisoOrdenBodegaProducto;
	}

	public void setIsPermisoOrdenBodegaProducto(Boolean isPermisoOrdenBodegaProducto) {
		this.isPermisoOrdenBodegaProducto = isPermisoOrdenBodegaProducto;
	}
	
	public String getsVisibilidadTablaBusquedas() {
		return sVisibilidadTablaBusquedas;
	}

	public void setsVisibilidadTablaBusquedas(String sVisibilidadTablaBusquedas) {
		this.sVisibilidadTablaBusquedas = sVisibilidadTablaBusquedas;
	}
	
	public String getsVisibilidadTablaElementos() {
		return sVisibilidadTablaElementos;
	}

	public void setsVisibilidadTablaElementos(String sVisibilidadTablaElementos) {
		this.sVisibilidadTablaElementos = sVisibilidadTablaElementos;
	}

	public String getsVisibilidadTablaAcciones() {
		return sVisibilidadTablaAcciones;
	}

	public void setsVisibilidadTablaAcciones(String sVisibilidadTablaAcciones) {
		this.sVisibilidadTablaAcciones = sVisibilidadTablaAcciones;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoBodegaProducto() {
		return isVisibilidadCeldaNuevoBodegaProducto;
	}

	public void setIsVisibilidadCeldaNuevoBodegaProducto(Boolean isVisibilidadCeldaNuevoBodegaProducto) {
		this.isVisibilidadCeldaNuevoBodegaProducto = isVisibilidadCeldaNuevoBodegaProducto;
	}
	
	public Boolean getIsVisibilidadCeldaDuplicarBodegaProducto() {
		return isVisibilidadCeldaDuplicarBodegaProducto;
	}

	public void setIsVisibilidadCeldaDuplicarBodegaProducto(Boolean isVisibilidadCeldaDuplicarBodegaProducto) {
		this.isVisibilidadCeldaDuplicarBodegaProducto = isVisibilidadCeldaDuplicarBodegaProducto;
	}
	
	public Boolean getIsVisibilidadCeldaCopiarBodegaProducto() {
		return isVisibilidadCeldaCopiarBodegaProducto;
	}

	public void setIsVisibilidadCeldaCopiarBodegaProducto(Boolean isVisibilidadCeldaCopiarBodegaProducto) {
		this.isVisibilidadCeldaCopiarBodegaProducto = isVisibilidadCeldaCopiarBodegaProducto;
	}
	
	public Boolean getIsVisibilidadCeldaVerFormBodegaProducto() {
		return isVisibilidadCeldaVerFormBodegaProducto;
	}

	public void setIsVisibilidadCeldaVerFormBodegaProducto(Boolean isVisibilidadCeldaVerFormBodegaProducto) {
		this.isVisibilidadCeldaVerFormBodegaProducto = isVisibilidadCeldaVerFormBodegaProducto;
	}
	
	public Boolean getIsVisibilidadCeldaOrdenBodegaProducto() {
		return isVisibilidadCeldaOrdenBodegaProducto;
	}

	public void setIsVisibilidadCeldaOrdenBodegaProducto(Boolean isVisibilidadCeldaOrdenBodegaProducto) {
		this.isVisibilidadCeldaOrdenBodegaProducto = isVisibilidadCeldaOrdenBodegaProducto;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoRelacionesBodegaProducto() {
		return isVisibilidadCeldaNuevoRelacionesBodegaProducto;
	}

	public void setIsVisibilidadCeldaNuevoRelacionesBodegaProducto(Boolean isVisibilidadCeldaNuevoRelacionesBodegaProducto) {
		this.isVisibilidadCeldaNuevoRelacionesBodegaProducto = isVisibilidadCeldaNuevoRelacionesBodegaProducto;
	}
	
	public Boolean getIsVisibilidadCeldaModificarBodegaProducto() {
		return isVisibilidadCeldaModificarBodegaProducto;
	}

	public void setIsVisibilidadCeldaModificarBodegaProducto(Boolean isVisibilidadCeldaModificarBodegaProducto) {
		this.isVisibilidadCeldaModificarBodegaProducto = isVisibilidadCeldaModificarBodegaProducto;
	}
	
	public Boolean getIsVisibilidadCeldaActualizarBodegaProducto() {
		return isVisibilidadCeldaActualizarBodegaProducto;
	}

	public void setIsVisibilidadCeldaActualizarBodegaProducto(Boolean isVisibilidadCeldaActualizarBodegaProducto) {
		this.isVisibilidadCeldaActualizarBodegaProducto = isVisibilidadCeldaActualizarBodegaProducto;
	}

	public Boolean getIsVisibilidadCeldaEliminarBodegaProducto() {
		return isVisibilidadCeldaEliminarBodegaProducto;
	}

	public void setIsVisibilidadCeldaEliminarBodegaProducto(Boolean isVisibilidadCeldaEliminarBodegaProducto) {
		this.isVisibilidadCeldaEliminarBodegaProducto = isVisibilidadCeldaEliminarBodegaProducto;
	}

	public Boolean getIsVisibilidadCeldaCancelarBodegaProducto() {
		return isVisibilidadCeldaCancelarBodegaProducto;
	}

	public void setIsVisibilidadCeldaCancelarBodegaProducto(Boolean isVisibilidadCeldaCancelarBodegaProducto) {
		this.isVisibilidadCeldaCancelarBodegaProducto = isVisibilidadCeldaCancelarBodegaProducto;
	}

	public Boolean getIsVisibilidadCeldaGuardarBodegaProducto() {
		return isVisibilidadCeldaGuardarBodegaProducto;
	}

	public void setIsVisibilidadCeldaGuardarBodegaProducto(Boolean isVisibilidadCeldaGuardarBodegaProducto) {
		this.isVisibilidadCeldaGuardarBodegaProducto = isVisibilidadCeldaGuardarBodegaProducto;
	}
	
	public Boolean getIsVisibilidadCeldaGuardarCambiosBodegaProducto() {
		return isVisibilidadCeldaGuardarCambiosBodegaProducto;
	}

	public void setIsVisibilidadCeldaGuardarCambiosBodegaProducto(Boolean isVisibilidadCeldaGuardarCambiosBodegaProducto) {
		this.isVisibilidadCeldaGuardarCambiosBodegaProducto = isVisibilidadCeldaGuardarCambiosBodegaProducto;
	}
		
	public BodegaProductoSessionBean getbodegaproductoSessionBean() {
		return this.bodegaproductoSessionBean;
	}
	
	public void setbodegaproductoSessionBean(BodegaProductoSessionBean bodegaproductoSessionBean) {
		this.bodegaproductoSessionBean=bodegaproductoSessionBean;
	}
	
	
	public Boolean getisVisibilidadFK_IdBodega() {
		return this.isVisibilidadFK_IdBodega;
	}

	public void setisVisibilidadFK_IdBodega(Boolean isVisibilidadFK_IdBodega) {
		this.isVisibilidadFK_IdBodega=isVisibilidadFK_IdBodega;
	}

	public Boolean getisVisibilidadFK_IdBodegaProducto() {
		return this.isVisibilidadFK_IdBodegaProducto;
	}

	public void setisVisibilidadFK_IdBodegaProducto(Boolean isVisibilidadFK_IdBodegaProducto) {
		this.isVisibilidadFK_IdBodegaProducto=isVisibilidadFK_IdBodegaProducto;
	}

	public Boolean getisVisibilidadFK_IdCentroCosto() {
		return this.isVisibilidadFK_IdCentroCosto;
	}

	public void setisVisibilidadFK_IdCentroCosto(Boolean isVisibilidadFK_IdCentroCosto) {
		this.isVisibilidadFK_IdCentroCosto=isVisibilidadFK_IdCentroCosto;
	}

	public Boolean getisVisibilidadFK_IdCuentaContableCostoVenta() {
		return this.isVisibilidadFK_IdCuentaContableCostoVenta;
	}

	public void setisVisibilidadFK_IdCuentaContableCostoVenta(Boolean isVisibilidadFK_IdCuentaContableCostoVenta) {
		this.isVisibilidadFK_IdCuentaContableCostoVenta=isVisibilidadFK_IdCuentaContableCostoVenta;
	}

	public Boolean getisVisibilidadFK_IdCuentaContableDescuento() {
		return this.isVisibilidadFK_IdCuentaContableDescuento;
	}

	public void setisVisibilidadFK_IdCuentaContableDescuento(Boolean isVisibilidadFK_IdCuentaContableDescuento) {
		this.isVisibilidadFK_IdCuentaContableDescuento=isVisibilidadFK_IdCuentaContableDescuento;
	}

	public Boolean getisVisibilidadFK_IdCuentaContableDevolucion() {
		return this.isVisibilidadFK_IdCuentaContableDevolucion;
	}

	public void setisVisibilidadFK_IdCuentaContableDevolucion(Boolean isVisibilidadFK_IdCuentaContableDevolucion) {
		this.isVisibilidadFK_IdCuentaContableDevolucion=isVisibilidadFK_IdCuentaContableDevolucion;
	}

	public Boolean getisVisibilidadFK_IdCuentaContableIngresoCredito() {
		return this.isVisibilidadFK_IdCuentaContableIngresoCredito;
	}

	public void setisVisibilidadFK_IdCuentaContableIngresoCredito(Boolean isVisibilidadFK_IdCuentaContableIngresoCredito) {
		this.isVisibilidadFK_IdCuentaContableIngresoCredito=isVisibilidadFK_IdCuentaContableIngresoCredito;
	}

	public Boolean getisVisibilidadFK_IdCuentaContableIngresoDebito() {
		return this.isVisibilidadFK_IdCuentaContableIngresoDebito;
	}

	public void setisVisibilidadFK_IdCuentaContableIngresoDebito(Boolean isVisibilidadFK_IdCuentaContableIngresoDebito) {
		this.isVisibilidadFK_IdCuentaContableIngresoDebito=isVisibilidadFK_IdCuentaContableIngresoDebito;
	}

	public Boolean getisVisibilidadFK_IdCuentaContableInventario() {
		return this.isVisibilidadFK_IdCuentaContableInventario;
	}

	public void setisVisibilidadFK_IdCuentaContableInventario(Boolean isVisibilidadFK_IdCuentaContableInventario) {
		this.isVisibilidadFK_IdCuentaContableInventario=isVisibilidadFK_IdCuentaContableInventario;
	}

	public Boolean getisVisibilidadFK_IdCuentaContableProduccion() {
		return this.isVisibilidadFK_IdCuentaContableProduccion;
	}

	public void setisVisibilidadFK_IdCuentaContableProduccion(Boolean isVisibilidadFK_IdCuentaContableProduccion) {
		this.isVisibilidadFK_IdCuentaContableProduccion=isVisibilidadFK_IdCuentaContableProduccion;
	}

	public Boolean getisVisibilidadFK_IdCuentaContableResultadoCredito() {
		return this.isVisibilidadFK_IdCuentaContableResultadoCredito;
	}

	public void setisVisibilidadFK_IdCuentaContableResultadoCredito(Boolean isVisibilidadFK_IdCuentaContableResultadoCredito) {
		this.isVisibilidadFK_IdCuentaContableResultadoCredito=isVisibilidadFK_IdCuentaContableResultadoCredito;
	}

	public Boolean getisVisibilidadFK_IdCuentaContableResultadoDebito() {
		return this.isVisibilidadFK_IdCuentaContableResultadoDebito;
	}

	public void setisVisibilidadFK_IdCuentaContableResultadoDebito(Boolean isVisibilidadFK_IdCuentaContableResultadoDebito) {
		this.isVisibilidadFK_IdCuentaContableResultadoDebito=isVisibilidadFK_IdCuentaContableResultadoDebito;
	}

	public Boolean getisVisibilidadFK_IdCuentaContableVenta() {
		return this.isVisibilidadFK_IdCuentaContableVenta;
	}

	public void setisVisibilidadFK_IdCuentaContableVenta(Boolean isVisibilidadFK_IdCuentaContableVenta) {
		this.isVisibilidadFK_IdCuentaContableVenta=isVisibilidadFK_IdCuentaContableVenta;
	}

	public Boolean getisVisibilidadFK_IdEmpresa() {
		return this.isVisibilidadFK_IdEmpresa;
	}

	public void setisVisibilidadFK_IdEmpresa(Boolean isVisibilidadFK_IdEmpresa) {
		this.isVisibilidadFK_IdEmpresa=isVisibilidadFK_IdEmpresa;
	}

	public Boolean getisVisibilidadFK_IdProducto() {
		return this.isVisibilidadFK_IdProducto;
	}

	public void setisVisibilidadFK_IdProducto(Boolean isVisibilidadFK_IdProducto) {
		this.isVisibilidadFK_IdProducto=isVisibilidadFK_IdProducto;
	}

	public Boolean getisVisibilidadFK_IdSucursal() {
		return this.isVisibilidadFK_IdSucursal;
	}

	public void setisVisibilidadFK_IdSucursal(Boolean isVisibilidadFK_IdSucursal) {
		this.isVisibilidadFK_IdSucursal=isVisibilidadFK_IdSucursal;
	}

	public Boolean getisVisibilidadFK_IdUnidad() {
		return this.isVisibilidadFK_IdUnidad;
	}

	public void setisVisibilidadFK_IdUnidad(Boolean isVisibilidadFK_IdUnidad) {
		this.isVisibilidadFK_IdUnidad=isVisibilidadFK_IdUnidad;
	}

	
	
	public void setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(BodegaProducto bodegaproducto)throws Exception {
		try {
			
				this.setActualParaGuardarEmpresaForeignKey(bodegaproducto,null);
				this.setActualParaGuardarSucursalForeignKey(bodegaproducto,null);
				this.setActualParaGuardarBodegaForeignKey(bodegaproducto,null);
				this.setActualParaGuardarProductoForeignKey(bodegaproducto,null);
				this.setActualParaGuardarUnidadForeignKey(bodegaproducto,null);
				this.setActualParaGuardarCentroCostoForeignKey(bodegaproducto,null);
				this.setActualParaGuardarEstadoBodegaProductoForeignKey(bodegaproducto,null);
				this.setActualParaGuardarCuentaContableInventarioForeignKey(bodegaproducto,null);
				this.setActualParaGuardarCuentaContableCostoVentaForeignKey(bodegaproducto,null);
				this.setActualParaGuardarCuentaContableVentaForeignKey(bodegaproducto,null);
				this.setActualParaGuardarCuentaContableDescuentoForeignKey(bodegaproducto,null);
				this.setActualParaGuardarCuentaContableProduccionForeignKey(bodegaproducto,null);
				this.setActualParaGuardarCuentaContableDevolucionForeignKey(bodegaproducto,null);
				this.setActualParaGuardarCuentaContableIngresoDebitoForeignKey(bodegaproducto,null);
				this.setActualParaGuardarCuentaContableIngresoCreditoForeignKey(bodegaproducto,null);
				this.setActualParaGuardarCuentaContableResultadoDebitoForeignKey(bodegaproducto,null);
				this.setActualParaGuardarCuentaContableResultadoCreditoForeignKey(bodegaproducto,null);
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarLicenciaCliente(DatosCliente datosCliente) throws Exception {
		Boolean existe=false;
			
		try {
				InputStream reportFile=null;
				
				String sPath=this.parametroGeneralUsuario.getpath_exportar()+"erp_bydan/license/license.xml";
				
				reportFile = new FileInputStream(sPath);
				
				Document documentBuilder=null;
				
				if(this.constantes2.DOCUMENT_BUILDER==null) {
					documentBuilder=Funciones2.parseXml(reportFile);
				} else {
					documentBuilder=this.constantes2.DOCUMENT_BUILDER;
				}
				
				//GlobalSeguridad.readXml(documentBuilder);
				
				String sNamePCServerLicencia="";
				String sClaveSistemaLicencia="";
				Date dFechaServerLicencia=null;
				
				//CARGAR ELEMENTOS DE LICENCIA
				NodeList nodeList = documentBuilder.getElementsByTagName("Licencia");
				
				for (int iIndice = 0; iIndice < nodeList.getLength(); iIndice++) {
					Node node = nodeList.item(iIndice);
				
					if (node.getNodeType() == Node.ELEMENT_NODE) {
						Element element = (Element) node;
						 
						sNamePCServerLicencia=element.getElementsByTagName("NombrePc").item(0).getTextContent();
						sClaveSistemaLicencia=element.getElementsByTagName("ClaveSistema").item(0).getTextContent();
						
						existe=true;
						break;
					}
				}														
			
				
			if(existe) {
				datosCliente.setsClaveSistema(sClaveSistemaLicencia);
				
				if(!datosCliente.getsNamePCServer().equals(sNamePCServerLicencia)
					&& !datosCliente.getsNamePCServer().equals("")) {
					
					datosCliente.setsNamePCServer(sNamePCServerLicencia);
				}
			} else {
				throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
			}
		} catch(Exception e) {
			throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
		}						
	}
	
	public void cargarDatosCliente() throws Exception {
		String sPrimerMacAddress="";		
		String sHostName="";		 
		String sHostIp="";		  
		String sHostUser="";
		
		
		sPrimerMacAddress=FuncionesNetwork.getPrimerMacAddress();		
		sHostName=FuncionesNetwork.getHostName();		 
		sHostIp=FuncionesNetwork.getHostIp();		  
		sHostUser=FuncionesNetwork.getHostUser();
		
		
		this.datosCliente=new DatosCliente();
		if(lIdUsuarioSesion!=null){datosCliente.setIdUsuario(this.lIdUsuarioSesion);}
		
		//SERVIDOR WEB Y TALVEZ SERVIDOR SWING WINDOWS
		this.datosCliente.setsUsuarioPCServer(sHostUser);
		this.datosCliente.setsNamePCServer(sHostName);
		this.datosCliente.setsIPPCServer(sHostIp);
		this.datosCliente.setsMacAddressPCServer(sPrimerMacAddress);
			
			//CLIENTE SWING WINDOWS
			this.datosCliente.setIsClienteWeb(false);
			
			this.datosCliente.setsUsuarioPC(sHostUser);
			this.datosCliente.setsNamePC(sHostName);
			this.datosCliente.setsIPPC(sHostIp);
			this.datosCliente.setsMacAddressPC(sPrimerMacAddress);	
			
			
			//this.cargarLicenciaCliente(this.datosCliente);
			
	}
	
	public void bugActualizarReferenciaActual(BodegaProducto bodegaproducto,BodegaProducto bodegaproductoAux) throws Exception {
		//ARCHITECTURE		
		//EL ID NEGATIVO GUARDADO EN ORIGINAL SIRVE PARA VERIFICAR Y ACTUALIZAR EL REGISTRO NUEVO (ID,VERSIONROW)
		this.setCamposBaseDesdeOriginalBodegaProducto(bodegaproducto);
					
		//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
		bodegaproductoAux.setId(bodegaproducto.getId());
		bodegaproductoAux.setVersionRow(bodegaproducto.getVersionRow());					
	}
	
	public void ejecutarMantenimiento(MaintenanceType maintenanceType)throws Exception {	
		try	{								
			
			//this.startProcessBodegaProducto();
		
			int intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();	       
			
			//PUEDE SER -1 CUANDO SE ELIMINA EN GUARDAR CAMBIOS
			if(intSelectedRow>=0 && maintenanceType!=MaintenanceType.GUARDARCAMBIOS) {
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
					
				//ARCHITECTURE
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproducto =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
					this.bodegaproducto =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
				}
				
				//ARCHITECTURE
				
				if(BodegaProductoJInternalFrame.ISBINDING_MANUAL_TABLA) {
					//this.setVariablesFormularioToObjetoActualBodegaProducto(this.bodegaproducto,true);
				}
				
				this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
			}
			
			//LUEGO DE TRAER DATOS CORRESPONDIENTES QUE COINCIDA LISTA TABLA QUITO FILA TOTALES
			if(this.conTotales) {
				//MEJOR LO DEJO, SI EXISTE EXCEPCION SE PIEDE FILA TOTALES Y ORDEN INDICE FILA ACTUAL
				//this.quitarFilaTotales();
			}
			
			this.cargarDatosCliente();
			
			this.datosDeep=new DatosDeep();
			
			//SE CAMBIA ESTADOS CON ERROR, ENTONCES SE EJECUTA ANTES
			//this.invalidValues = bodegaproductoValidator.getInvalidValues(this.bodegaproducto);
			
			//if(this.invalidValues==null || this.invalidValues.length<=0) {
			
			bodegaproductoLogic.setDatosCliente(datosCliente);
			bodegaproductoLogic.setIsConDeep(false);
			
			if(maintenanceType==MaintenanceType.NUEVO) {
				bodegaproductoAux=new  BodegaProducto();
				
				bodegaproductoAux.setIsNew(true);
				bodegaproductoAux.setIsChanged(true);
				
				bodegaproductoAux.setBodegaProductoOriginal(this.bodegaproducto);
				
				bodegaproductoAux.setId(this.bodegaproducto.getId());	
				bodegaproductoAux.setVersionRow(this.bodegaproducto.getVersionRow());	
				bodegaproductoAux.setid_empresa(this.bodegaproducto.getid_empresa());	
				bodegaproductoAux.setid_sucursal(this.bodegaproducto.getid_sucursal());	
				bodegaproductoAux.setid_bodega(this.bodegaproducto.getid_bodega());	
				bodegaproductoAux.setid_producto(this.bodegaproducto.getid_producto());	
				bodegaproductoAux.setid_unidad(this.bodegaproducto.getid_unidad());	
				bodegaproductoAux.setid_centro_costo(this.bodegaproducto.getid_centro_costo());	
				bodegaproductoAux.setid_estado_bodega_producto(this.bodegaproducto.getid_estado_bodega_producto());	
				bodegaproductoAux.setdescripcion(this.bodegaproducto.getdescripcion());	
				bodegaproductoAux.setcantidad_disponible(this.bodegaproducto.getcantidad_disponible());	
				bodegaproductoAux.setstock_maximo(this.bodegaproducto.getstock_maximo());	
				bodegaproductoAux.setstock_minimo(this.bodegaproducto.getstock_minimo());	
				bodegaproductoAux.setiva(this.bodegaproducto.getiva());	
				bodegaproductoAux.setiva_valor(this.bodegaproducto.getiva_valor());	
				bodegaproductoAux.setdescuento(this.bodegaproducto.getdescuento());	
				bodegaproductoAux.setdescuento_valor(this.bodegaproducto.getdescuento_valor());	
				bodegaproductoAux.setice(this.bodegaproducto.getice());	
				bodegaproductoAux.setice_valor(this.bodegaproducto.getice_valor());	
				bodegaproductoAux.setcosto_promedio(this.bodegaproducto.getcosto_promedio());	
				bodegaproductoAux.setporcentaje_comision(this.bodegaproducto.getporcentaje_comision());	
				bodegaproductoAux.setprecio(this.bodegaproducto.getprecio());	
				bodegaproductoAux.setultimo_costo(this.bodegaproducto.getultimo_costo());	
				bodegaproductoAux.setcosto(this.bodegaproducto.getcosto());	
				bodegaproductoAux.setarancel_porcentaje(this.bodegaproducto.getarancel_porcentaje());	
				bodegaproductoAux.setice_porcentaje(this.bodegaproducto.getice_porcentaje());	
				bodegaproductoAux.setpeso(this.bodegaproducto.getpeso());	
				bodegaproductoAux.setcon_iva(this.bodegaproducto.getcon_iva());	
				bodegaproductoAux.setcon_impuesto(this.bodegaproducto.getcon_impuesto());	
				bodegaproductoAux.setcon_ice(this.bodegaproducto.getcon_ice());	
				bodegaproductoAux.setesta_activo(this.bodegaproducto.getesta_activo());	
				bodegaproductoAux.setcon_balanza(this.bodegaproducto.getcon_balanza());	
				bodegaproductoAux.setcantidad_pedida(this.bodegaproducto.getcantidad_pedida());	
				bodegaproductoAux.setcantidad_fisica(this.bodegaproducto.getcantidad_fisica());	
				bodegaproductoAux.setcantidad_requerido(this.bodegaproducto.getcantidad_requerido());	
				bodegaproductoAux.setprecio_costo(this.bodegaproducto.getprecio_costo());	
				bodegaproductoAux.setprecio_promedio(this.bodegaproducto.getprecio_promedio());	
				bodegaproductoAux.settotal_ingresos(this.bodegaproducto.gettotal_ingresos());	
				bodegaproductoAux.settotal_egresos(this.bodegaproducto.gettotal_egresos());	
				bodegaproductoAux.settotal_provision(this.bodegaproducto.gettotal_provision());	
				bodegaproductoAux.settotal_proceso(this.bodegaproducto.gettotal_proceso());	
				bodegaproductoAux.setcosto_calculado(this.bodegaproducto.getcosto_calculado());	
				bodegaproductoAux.setdias_produccion(this.bodegaproducto.getdias_produccion());	
				bodegaproductoAux.setprecio_reposicion(this.bodegaproducto.getprecio_reposicion());	
				bodegaproductoAux.setfecha_ultimo_pedido(this.bodegaproducto.getfecha_ultimo_pedido());	
				bodegaproductoAux.setfecha_ingreso(this.bodegaproducto.getfecha_ingreso());	
				bodegaproductoAux.setfecha_egreso(this.bodegaproducto.getfecha_egreso());	
				bodegaproductoAux.setfecha_ultima_compra(this.bodegaproducto.getfecha_ultima_compra());	
				bodegaproductoAux.setfecha_ultima_venta(this.bodegaproducto.getfecha_ultima_venta());	
				bodegaproductoAux.setfecha_ultima_devolucion(this.bodegaproducto.getfecha_ultima_devolucion());	
				bodegaproductoAux.setid_cuenta_contable_inventario(this.bodegaproducto.getid_cuenta_contable_inventario());	
				bodegaproductoAux.setid_cuenta_contable_costo_venta(this.bodegaproducto.getid_cuenta_contable_costo_venta());	
				bodegaproductoAux.setid_cuenta_contable_venta(this.bodegaproducto.getid_cuenta_contable_venta());	
				bodegaproductoAux.setid_cuenta_contable_descuento(this.bodegaproducto.getid_cuenta_contable_descuento());	
				bodegaproductoAux.setid_cuenta_contable_produccion(this.bodegaproducto.getid_cuenta_contable_produccion());	
				bodegaproductoAux.setid_cuenta_contable_devolucion(this.bodegaproducto.getid_cuenta_contable_devolucion());	
				bodegaproductoAux.setid_cuenta_contable_ingreso_debito(this.bodegaproducto.getid_cuenta_contable_ingreso_debito());	
				bodegaproductoAux.setid_cuenta_contable_ingreso_credito(this.bodegaproducto.getid_cuenta_contable_ingreso_credito());	
				bodegaproductoAux.setid_cuenta_contable_resultado_debito(this.bodegaproducto.getid_cuenta_contable_resultado_debito());	
				bodegaproductoAux.setid_cuenta_contable_resultado_credito(this.bodegaproducto.getid_cuenta_contable_resultado_credito());	
								
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.bodegaproductoSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.bodegaproductoSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(bodegaproductoAux,bodegaproductoLogic.getBodegaProductos());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(bodegaproductoAux,bodegaproductos);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote  && !this.bodegaproductoSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.bodegaproductoSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						bodegaproductoLogic.saveBodegaProductos();//WithConnection
						//bodegaproductoLogic.getSetVersionRowBodegaProductos();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE		
					
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.bodegaproducto,bodegaproductoAux);
					
					this.refrescarForeignKeysDescripcionesBodegaProducto();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.bodegaproductoSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
						}
						//ARCHITECTURE	
						
						if(!this.bodegaproductoSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
												
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								bodegaproductoLogic.saveBodegaProductoRelaciones(bodegaproductoAux);//WithConnection
								//bodegaproductoLogic.getSetVersionRowBodegaProductos();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.bodegaproducto,bodegaproductoAux);
					
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE	
						} else {
							
							
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.bodegaproductoSessionBean.getEstaModoGuardarRelaciones() 
									|| this.bodegaproductoSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(bodegaproductoAux,bodegaproductoLogic.getBodegaProductos());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(bodegaproductoAux,bodegaproductos);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.bodegaproducto,bodegaproductoAux);												
						}
					}
				}
			} else if(maintenanceType==MaintenanceType.ACTUALIZAR) {
				bodegaproductoAux=new  BodegaProducto();
				
				//PUEDE QUE SE ACTUALIZE ALGUN REGISTRO NUEVO
				if(!this.bodegaproductoSessionBean.getEsGuardarRelacionado() 
					|| (this.bodegaproductoSessionBean.getEsGuardarRelacionado() && this.bodegaproducto.getId()>=0)) {
						
					bodegaproductoAux.setIsNew(false);
				}
				
				bodegaproductoAux.setIsDeleted(false);
			
				bodegaproductoAux.setId(this.bodegaproducto.getId());	
				bodegaproductoAux.setVersionRow(this.bodegaproducto.getVersionRow());	
				bodegaproductoAux.setid_empresa(this.bodegaproducto.getid_empresa());	
				bodegaproductoAux.setid_sucursal(this.bodegaproducto.getid_sucursal());	
				bodegaproductoAux.setid_bodega(this.bodegaproducto.getid_bodega());	
				bodegaproductoAux.setid_producto(this.bodegaproducto.getid_producto());	
				bodegaproductoAux.setid_unidad(this.bodegaproducto.getid_unidad());	
				bodegaproductoAux.setid_centro_costo(this.bodegaproducto.getid_centro_costo());	
				bodegaproductoAux.setid_estado_bodega_producto(this.bodegaproducto.getid_estado_bodega_producto());	
				bodegaproductoAux.setdescripcion(this.bodegaproducto.getdescripcion());	
				bodegaproductoAux.setcantidad_disponible(this.bodegaproducto.getcantidad_disponible());	
				bodegaproductoAux.setstock_maximo(this.bodegaproducto.getstock_maximo());	
				bodegaproductoAux.setstock_minimo(this.bodegaproducto.getstock_minimo());	
				bodegaproductoAux.setiva(this.bodegaproducto.getiva());	
				bodegaproductoAux.setiva_valor(this.bodegaproducto.getiva_valor());	
				bodegaproductoAux.setdescuento(this.bodegaproducto.getdescuento());	
				bodegaproductoAux.setdescuento_valor(this.bodegaproducto.getdescuento_valor());	
				bodegaproductoAux.setice(this.bodegaproducto.getice());	
				bodegaproductoAux.setice_valor(this.bodegaproducto.getice_valor());	
				bodegaproductoAux.setcosto_promedio(this.bodegaproducto.getcosto_promedio());	
				bodegaproductoAux.setporcentaje_comision(this.bodegaproducto.getporcentaje_comision());	
				bodegaproductoAux.setprecio(this.bodegaproducto.getprecio());	
				bodegaproductoAux.setultimo_costo(this.bodegaproducto.getultimo_costo());	
				bodegaproductoAux.setcosto(this.bodegaproducto.getcosto());	
				bodegaproductoAux.setarancel_porcentaje(this.bodegaproducto.getarancel_porcentaje());	
				bodegaproductoAux.setice_porcentaje(this.bodegaproducto.getice_porcentaje());	
				bodegaproductoAux.setpeso(this.bodegaproducto.getpeso());	
				bodegaproductoAux.setcon_iva(this.bodegaproducto.getcon_iva());	
				bodegaproductoAux.setcon_impuesto(this.bodegaproducto.getcon_impuesto());	
				bodegaproductoAux.setcon_ice(this.bodegaproducto.getcon_ice());	
				bodegaproductoAux.setesta_activo(this.bodegaproducto.getesta_activo());	
				bodegaproductoAux.setcon_balanza(this.bodegaproducto.getcon_balanza());	
				bodegaproductoAux.setcantidad_pedida(this.bodegaproducto.getcantidad_pedida());	
				bodegaproductoAux.setcantidad_fisica(this.bodegaproducto.getcantidad_fisica());	
				bodegaproductoAux.setcantidad_requerido(this.bodegaproducto.getcantidad_requerido());	
				bodegaproductoAux.setprecio_costo(this.bodegaproducto.getprecio_costo());	
				bodegaproductoAux.setprecio_promedio(this.bodegaproducto.getprecio_promedio());	
				bodegaproductoAux.settotal_ingresos(this.bodegaproducto.gettotal_ingresos());	
				bodegaproductoAux.settotal_egresos(this.bodegaproducto.gettotal_egresos());	
				bodegaproductoAux.settotal_provision(this.bodegaproducto.gettotal_provision());	
				bodegaproductoAux.settotal_proceso(this.bodegaproducto.gettotal_proceso());	
				bodegaproductoAux.setcosto_calculado(this.bodegaproducto.getcosto_calculado());	
				bodegaproductoAux.setdias_produccion(this.bodegaproducto.getdias_produccion());	
				bodegaproductoAux.setprecio_reposicion(this.bodegaproducto.getprecio_reposicion());	
				bodegaproductoAux.setfecha_ultimo_pedido(this.bodegaproducto.getfecha_ultimo_pedido());	
				bodegaproductoAux.setfecha_ingreso(this.bodegaproducto.getfecha_ingreso());	
				bodegaproductoAux.setfecha_egreso(this.bodegaproducto.getfecha_egreso());	
				bodegaproductoAux.setfecha_ultima_compra(this.bodegaproducto.getfecha_ultima_compra());	
				bodegaproductoAux.setfecha_ultima_venta(this.bodegaproducto.getfecha_ultima_venta());	
				bodegaproductoAux.setfecha_ultima_devolucion(this.bodegaproducto.getfecha_ultima_devolucion());	
				bodegaproductoAux.setid_cuenta_contable_inventario(this.bodegaproducto.getid_cuenta_contable_inventario());	
				bodegaproductoAux.setid_cuenta_contable_costo_venta(this.bodegaproducto.getid_cuenta_contable_costo_venta());	
				bodegaproductoAux.setid_cuenta_contable_venta(this.bodegaproducto.getid_cuenta_contable_venta());	
				bodegaproductoAux.setid_cuenta_contable_descuento(this.bodegaproducto.getid_cuenta_contable_descuento());	
				bodegaproductoAux.setid_cuenta_contable_produccion(this.bodegaproducto.getid_cuenta_contable_produccion());	
				bodegaproductoAux.setid_cuenta_contable_devolucion(this.bodegaproducto.getid_cuenta_contable_devolucion());	
				bodegaproductoAux.setid_cuenta_contable_ingreso_debito(this.bodegaproducto.getid_cuenta_contable_ingreso_debito());	
				bodegaproductoAux.setid_cuenta_contable_ingreso_credito(this.bodegaproducto.getid_cuenta_contable_ingreso_credito());	
				bodegaproductoAux.setid_cuenta_contable_resultado_debito(this.bodegaproducto.getid_cuenta_contable_resultado_debito());	
				bodegaproductoAux.setid_cuenta_contable_resultado_credito(this.bodegaproducto.getid_cuenta_contable_resultado_credito());	
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(bodegaproductoAux,bodegaproductoLogic.getBodegaProductos());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(bodegaproductoAux,bodegaproductos);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote && !this.bodegaproductoSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.bodegaproductoSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						bodegaproductoLogic.saveBodegaProductos();//WithConnection
						//bodegaproductoLogic.getSetVersionRowBodegaProductos();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
					
					//TALVEZ ESTA DEMAS POR SER UPDATE
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.bodegaproducto,bodegaproductoAux);
					
					this.refrescarForeignKeysDescripcionesBodegaProducto();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.bodegaproductoSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
						}
						//ARCHITECTURE
						
						if(!this.bodegaproductoSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								bodegaproductoLogic.saveBodegaProductoRelaciones(bodegaproductoAux);//WithConnection
								//bodegaproductoLogic.getSetVersionRowBodegaProductos();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.bodegaproducto,bodegaproductoAux);
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
						} else {
							
							
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.bodegaproductoSessionBean.getEstaModoGuardarRelaciones() 
									|| this.bodegaproductoSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(bodegaproductoAux,bodegaproductoLogic.getBodegaProductos());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(bodegaproductoAux,bodegaproductos);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.bodegaproducto,bodegaproductoAux);
					
						}
					}
				}				
			} else if(maintenanceType==MaintenanceType.ELIMINAR) {
				bodegaproductoAux=new  BodegaProducto();
				
				bodegaproductoAux.setIsNew(false);
				bodegaproductoAux.setIsChanged(false);
				
				bodegaproductoAux.setIsDeleted(true);
				
				bodegaproductoAux.setId(this.bodegaproducto.getId());	
				bodegaproductoAux.setVersionRow(this.bodegaproducto.getVersionRow());	
				bodegaproductoAux.setid_empresa(this.bodegaproducto.getid_empresa());	
				bodegaproductoAux.setid_sucursal(this.bodegaproducto.getid_sucursal());	
				bodegaproductoAux.setid_bodega(this.bodegaproducto.getid_bodega());	
				bodegaproductoAux.setid_producto(this.bodegaproducto.getid_producto());	
				bodegaproductoAux.setid_unidad(this.bodegaproducto.getid_unidad());	
				bodegaproductoAux.setid_centro_costo(this.bodegaproducto.getid_centro_costo());	
				bodegaproductoAux.setid_estado_bodega_producto(this.bodegaproducto.getid_estado_bodega_producto());	
				bodegaproductoAux.setdescripcion(this.bodegaproducto.getdescripcion());	
				bodegaproductoAux.setcantidad_disponible(this.bodegaproducto.getcantidad_disponible());	
				bodegaproductoAux.setstock_maximo(this.bodegaproducto.getstock_maximo());	
				bodegaproductoAux.setstock_minimo(this.bodegaproducto.getstock_minimo());	
				bodegaproductoAux.setiva(this.bodegaproducto.getiva());	
				bodegaproductoAux.setiva_valor(this.bodegaproducto.getiva_valor());	
				bodegaproductoAux.setdescuento(this.bodegaproducto.getdescuento());	
				bodegaproductoAux.setdescuento_valor(this.bodegaproducto.getdescuento_valor());	
				bodegaproductoAux.setice(this.bodegaproducto.getice());	
				bodegaproductoAux.setice_valor(this.bodegaproducto.getice_valor());	
				bodegaproductoAux.setcosto_promedio(this.bodegaproducto.getcosto_promedio());	
				bodegaproductoAux.setporcentaje_comision(this.bodegaproducto.getporcentaje_comision());	
				bodegaproductoAux.setprecio(this.bodegaproducto.getprecio());	
				bodegaproductoAux.setultimo_costo(this.bodegaproducto.getultimo_costo());	
				bodegaproductoAux.setcosto(this.bodegaproducto.getcosto());	
				bodegaproductoAux.setarancel_porcentaje(this.bodegaproducto.getarancel_porcentaje());	
				bodegaproductoAux.setice_porcentaje(this.bodegaproducto.getice_porcentaje());	
				bodegaproductoAux.setpeso(this.bodegaproducto.getpeso());	
				bodegaproductoAux.setcon_iva(this.bodegaproducto.getcon_iva());	
				bodegaproductoAux.setcon_impuesto(this.bodegaproducto.getcon_impuesto());	
				bodegaproductoAux.setcon_ice(this.bodegaproducto.getcon_ice());	
				bodegaproductoAux.setesta_activo(this.bodegaproducto.getesta_activo());	
				bodegaproductoAux.setcon_balanza(this.bodegaproducto.getcon_balanza());	
				bodegaproductoAux.setcantidad_pedida(this.bodegaproducto.getcantidad_pedida());	
				bodegaproductoAux.setcantidad_fisica(this.bodegaproducto.getcantidad_fisica());	
				bodegaproductoAux.setcantidad_requerido(this.bodegaproducto.getcantidad_requerido());	
				bodegaproductoAux.setprecio_costo(this.bodegaproducto.getprecio_costo());	
				bodegaproductoAux.setprecio_promedio(this.bodegaproducto.getprecio_promedio());	
				bodegaproductoAux.settotal_ingresos(this.bodegaproducto.gettotal_ingresos());	
				bodegaproductoAux.settotal_egresos(this.bodegaproducto.gettotal_egresos());	
				bodegaproductoAux.settotal_provision(this.bodegaproducto.gettotal_provision());	
				bodegaproductoAux.settotal_proceso(this.bodegaproducto.gettotal_proceso());	
				bodegaproductoAux.setcosto_calculado(this.bodegaproducto.getcosto_calculado());	
				bodegaproductoAux.setdias_produccion(this.bodegaproducto.getdias_produccion());	
				bodegaproductoAux.setprecio_reposicion(this.bodegaproducto.getprecio_reposicion());	
				bodegaproductoAux.setfecha_ultimo_pedido(this.bodegaproducto.getfecha_ultimo_pedido());	
				bodegaproductoAux.setfecha_ingreso(this.bodegaproducto.getfecha_ingreso());	
				bodegaproductoAux.setfecha_egreso(this.bodegaproducto.getfecha_egreso());	
				bodegaproductoAux.setfecha_ultima_compra(this.bodegaproducto.getfecha_ultima_compra());	
				bodegaproductoAux.setfecha_ultima_venta(this.bodegaproducto.getfecha_ultima_venta());	
				bodegaproductoAux.setfecha_ultima_devolucion(this.bodegaproducto.getfecha_ultima_devolucion());	
				bodegaproductoAux.setid_cuenta_contable_inventario(this.bodegaproducto.getid_cuenta_contable_inventario());	
				bodegaproductoAux.setid_cuenta_contable_costo_venta(this.bodegaproducto.getid_cuenta_contable_costo_venta());	
				bodegaproductoAux.setid_cuenta_contable_venta(this.bodegaproducto.getid_cuenta_contable_venta());	
				bodegaproductoAux.setid_cuenta_contable_descuento(this.bodegaproducto.getid_cuenta_contable_descuento());	
				bodegaproductoAux.setid_cuenta_contable_produccion(this.bodegaproducto.getid_cuenta_contable_produccion());	
				bodegaproductoAux.setid_cuenta_contable_devolucion(this.bodegaproducto.getid_cuenta_contable_devolucion());	
				bodegaproductoAux.setid_cuenta_contable_ingreso_debito(this.bodegaproducto.getid_cuenta_contable_ingreso_debito());	
				bodegaproductoAux.setid_cuenta_contable_ingreso_credito(this.bodegaproducto.getid_cuenta_contable_ingreso_credito());	
				bodegaproductoAux.setid_cuenta_contable_resultado_debito(this.bodegaproducto.getid_cuenta_contable_resultado_debito());	
				bodegaproductoAux.setid_cuenta_contable_resultado_credito(this.bodegaproducto.getid_cuenta_contable_resultado_credito());	
				
				if(this.bodegaproductoSessionBean.getEsGuardarRelacionado()) {
					//ELEMENTO ACTUAL NO SE HA INGRESADO AL SISTEMA, NO SE PUEDE ELIMINAR ALGO QUE NO EXISTE
					if(this.bodegaproductoAux.getId()>=0) {	
						this.bodegaproductosEliminados.add(bodegaproductoAux);											
					}
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					actualizarLista(bodegaproductoAux,bodegaproductoLogic.getBodegaProductos());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(bodegaproductoAux,bodegaproductos);
				}
				//ARCHITECTURE
				
				
				if(!isGuardarCambiosEnLote && !this.bodegaproductoSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.bodegaproductoSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						bodegaproductoLogic.saveBodegaProductos();//WithConnection
						//bodegaproductoLogic.getSetVersionRowBodegaProductos();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.bodegaproductoSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
						}
						//ARCHITECTURE
						
						
						if(!this.bodegaproductoSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								bodegaproductoLogic.saveBodegaProductoRelaciones(bodegaproductoAux);//WithConnection
								//bodegaproductoLogic.getSetVersionRowBodegaProductos();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
						}
					}  else {
							
						
								
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							if(this.bodegaproductoSessionBean.getEstaModoGuardarRelaciones() 
								|| this.bodegaproductoSessionBean.getEsGuardarRelacionado())	{
								actualizarLista(bodegaproductoAux,bodegaproductoLogic.getBodegaProductos());
							}
						} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
							actualizarLista(bodegaproductoAux,bodegaproductos);
						}
						//ARCHITECTURE
					}
				}				
			} else if(maintenanceType==MaintenanceType.GUARDARCAMBIOS) {		
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.getBodegaProductos().addAll(this.bodegaproductosEliminados);
					
					bodegaproductoLogic.saveBodegaProductos();//WithConnection
					//bodegaproductoLogic.getSetVersionRowBodegaProductos();//WithConnection
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}	
				//ARCHITECTURE
				this.refrescarForeignKeysDescripcionesBodegaProducto();
				
				this.bodegaproductosEliminados= new ArrayList<BodegaProducto>();		
			}
			
			if(this.bodegaproductoSessionBean.getEsGuardarRelacionado()) {
				 this.crearFilaTotales();
			}
			
			
									
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.bodegaproductoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				if(!this.isPostAccionSinMensaje) {
					JOptionPane.showMessageDialog(this,"Bodega Producto GUARDADO CORRECTAMENTE","MANTENIMIENTO DE Bodega Producto",JOptionPane.INFORMATION_MESSAGE);
					if(maintenanceType==MaintenanceType.NUEVO || maintenanceType==MaintenanceType.ACTUALIZAR) {
						//CUANDO ES NUEVO SE PIERDE REFERENCIA NO SE PORQUE
						this.bodegaproducto=bodegaproductoAux;
					}
				}
			}
			
			this.isErrorGuardar=false;
			
			this.inicializarInvalidValues();
		/*
		} else {
			this.mostrarInvalidValues();	
		}
		*/
			
		} catch(Exception e) {
			this.isErrorGuardar=true;
			
			this.crearFilaTotales();
			
			throw e;
		} finally {
      		//this.finishProcessBodegaProducto();
      	}
		
	}	
	
	public void actualizarRelaciones(BodegaProducto bodegaproductoLocal) throws Exception {
		
		if(this.bodegaproductoSessionBean.getConGuardarRelaciones()) {			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
			
			
			} else {
				
			}
		}
	}
	
	public void actualizarRelacionFkPadreActual(BodegaProducto bodegaproductoLocal) throws Exception {	
		if(this.bodegaproductoSessionBean.getEsGuardarRelacionado()) {			
			
		
			if(this.jInternalFrameParent.getClass().equals(EmpresaDetalleFormJInternalFrame.class)) {
				EmpresaBeanSwingJInternalFrame empresaBeanSwingJInternalFrameLocal=(EmpresaBeanSwingJInternalFrame) ((EmpresaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				empresaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEmpresa(empresaBeanSwingJInternalFrameLocal.getempresa(),true);
				empresaBeanSwingJInternalFrameLocal.actualizarLista(empresaBeanSwingJInternalFrameLocal.empresa,this.empresasForeignKey);

				empresaBeanSwingJInternalFrameLocal.actualizarRelaciones(empresaBeanSwingJInternalFrameLocal.empresa);

				bodegaproductoLocal.setEmpresa(empresaBeanSwingJInternalFrameLocal.empresa);

				this.addItemDefectoCombosForeignKeyEmpresa();
				this.cargarCombosFrameEmpresasForeignKey("Formulario");
				this.setActualEmpresaForeignKey(empresaBeanSwingJInternalFrameLocal.empresa.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(SucursalDetalleFormJInternalFrame.class)) {
				SucursalBeanSwingJInternalFrame sucursalBeanSwingJInternalFrameLocal=(SucursalBeanSwingJInternalFrame) ((SucursalDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				sucursalBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoSucursal(sucursalBeanSwingJInternalFrameLocal.getsucursal(),true);
				sucursalBeanSwingJInternalFrameLocal.actualizarLista(sucursalBeanSwingJInternalFrameLocal.sucursal,this.sucursalsForeignKey);

				sucursalBeanSwingJInternalFrameLocal.actualizarRelaciones(sucursalBeanSwingJInternalFrameLocal.sucursal);

				bodegaproductoLocal.setSucursal(sucursalBeanSwingJInternalFrameLocal.sucursal);

				this.addItemDefectoCombosForeignKeySucursal();
				this.cargarCombosFrameSucursalsForeignKey("Formulario");
				this.setActualSucursalForeignKey(sucursalBeanSwingJInternalFrameLocal.sucursal.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(BodegaDetalleFormJInternalFrame.class)) {
				BodegaBeanSwingJInternalFrame bodegaBeanSwingJInternalFrameLocal=(BodegaBeanSwingJInternalFrame) ((BodegaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				bodegaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoBodega(bodegaBeanSwingJInternalFrameLocal.getbodega(),true);
				bodegaBeanSwingJInternalFrameLocal.actualizarLista(bodegaBeanSwingJInternalFrameLocal.bodega,this.bodegasForeignKey);

				bodegaBeanSwingJInternalFrameLocal.actualizarRelaciones(bodegaBeanSwingJInternalFrameLocal.bodega);

				bodegaproductoLocal.setBodega(bodegaBeanSwingJInternalFrameLocal.bodega);

				this.addItemDefectoCombosForeignKeyBodega();
				this.cargarCombosFrameBodegasForeignKey("Formulario");
				this.setActualBodegaForeignKey(bodegaBeanSwingJInternalFrameLocal.bodega.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(ProductoDetalleFormJInternalFrame.class)) {
				ProductoBeanSwingJInternalFrame productoBeanSwingJInternalFrameLocal=(ProductoBeanSwingJInternalFrame) ((ProductoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				productoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoProducto(productoBeanSwingJInternalFrameLocal.getproducto(),true);
				productoBeanSwingJInternalFrameLocal.actualizarLista(productoBeanSwingJInternalFrameLocal.producto,this.productosForeignKey);

				productoBeanSwingJInternalFrameLocal.actualizarRelaciones(productoBeanSwingJInternalFrameLocal.producto);

				bodegaproductoLocal.setProducto(productoBeanSwingJInternalFrameLocal.producto);

				this.addItemDefectoCombosForeignKeyProducto();
				this.cargarCombosFrameProductosForeignKey("Formulario");
				this.setActualProductoForeignKey(productoBeanSwingJInternalFrameLocal.producto.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(UnidadDetalleFormJInternalFrame.class)) {
				UnidadBeanSwingJInternalFrame unidadBeanSwingJInternalFrameLocal=(UnidadBeanSwingJInternalFrame) ((UnidadDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				unidadBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoUnidad(unidadBeanSwingJInternalFrameLocal.getunidad(),true);
				unidadBeanSwingJInternalFrameLocal.actualizarLista(unidadBeanSwingJInternalFrameLocal.unidad,this.unidadsForeignKey);

				unidadBeanSwingJInternalFrameLocal.actualizarRelaciones(unidadBeanSwingJInternalFrameLocal.unidad);

				bodegaproductoLocal.setUnidad(unidadBeanSwingJInternalFrameLocal.unidad);

				this.addItemDefectoCombosForeignKeyUnidad();
				this.cargarCombosFrameUnidadsForeignKey("Formulario");
				this.setActualUnidadForeignKey(unidadBeanSwingJInternalFrameLocal.unidad.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CentroCostoDetalleFormJInternalFrame.class)) {
				CentroCostoBeanSwingJInternalFrame centrocostoBeanSwingJInternalFrameLocal=(CentroCostoBeanSwingJInternalFrame) ((CentroCostoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				centrocostoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCentroCosto(centrocostoBeanSwingJInternalFrameLocal.getcentrocosto(),true);
				centrocostoBeanSwingJInternalFrameLocal.actualizarLista(centrocostoBeanSwingJInternalFrameLocal.centrocosto,this.centrocostosForeignKey);

				centrocostoBeanSwingJInternalFrameLocal.actualizarRelaciones(centrocostoBeanSwingJInternalFrameLocal.centrocosto);

				bodegaproductoLocal.setCentroCosto(centrocostoBeanSwingJInternalFrameLocal.centrocosto);

				this.addItemDefectoCombosForeignKeyCentroCosto();
				this.cargarCombosFrameCentroCostosForeignKey("Formulario");
				this.setActualCentroCostoForeignKey(centrocostoBeanSwingJInternalFrameLocal.centrocosto.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EstadoBodegaProductoDetalleFormJInternalFrame.class)) {
				EstadoBodegaProductoBeanSwingJInternalFrame estadobodegaproductoBeanSwingJInternalFrameLocal=(EstadoBodegaProductoBeanSwingJInternalFrame) ((EstadoBodegaProductoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				estadobodegaproductoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEstadoBodegaProducto(estadobodegaproductoBeanSwingJInternalFrameLocal.getestadobodegaproducto(),true);
				estadobodegaproductoBeanSwingJInternalFrameLocal.actualizarLista(estadobodegaproductoBeanSwingJInternalFrameLocal.estadobodegaproducto,this.estadobodegaproductosForeignKey);

				estadobodegaproductoBeanSwingJInternalFrameLocal.actualizarRelaciones(estadobodegaproductoBeanSwingJInternalFrameLocal.estadobodegaproducto);

				bodegaproductoLocal.setEstadoBodegaProducto(estadobodegaproductoBeanSwingJInternalFrameLocal.estadobodegaproducto);

				this.addItemDefectoCombosForeignKeyEstadoBodegaProducto();
				this.cargarCombosFrameEstadoBodegaProductosForeignKey("Formulario");
				this.setActualEstadoBodegaProductoForeignKey(estadobodegaproductoBeanSwingJInternalFrameLocal.estadobodegaproducto.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CuentaContableDetalleFormJInternalFrame.class)) {
				CuentaContableBeanSwingJInternalFrame cuentacontableinventarioBeanSwingJInternalFrameLocal=(CuentaContableBeanSwingJInternalFrame) ((CuentaContableDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				cuentacontableinventarioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCuentaContable(cuentacontableinventarioBeanSwingJInternalFrameLocal.getcuentacontable(),true);
				cuentacontableinventarioBeanSwingJInternalFrameLocal.actualizarLista(cuentacontableinventarioBeanSwingJInternalFrameLocal.cuentacontable,this.cuentacontableinventariosForeignKey);

				cuentacontableinventarioBeanSwingJInternalFrameLocal.actualizarRelaciones(cuentacontableinventarioBeanSwingJInternalFrameLocal.cuentacontable);

				bodegaproductoLocal.setCuentaContableInventario(cuentacontableinventarioBeanSwingJInternalFrameLocal.cuentacontable);

				this.addItemDefectoCombosForeignKeyCuentaContableInventario();
				this.cargarCombosFrameCuentaContableInventariosForeignKey("Formulario");
				this.setActualCuentaContableInventarioForeignKey(cuentacontableinventarioBeanSwingJInternalFrameLocal.cuentacontable.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CuentaContableDetalleFormJInternalFrame.class)) {
				CuentaContableBeanSwingJInternalFrame cuentacontablecostoventaBeanSwingJInternalFrameLocal=(CuentaContableBeanSwingJInternalFrame) ((CuentaContableDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				cuentacontablecostoventaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCuentaContable(cuentacontablecostoventaBeanSwingJInternalFrameLocal.getcuentacontable(),true);
				cuentacontablecostoventaBeanSwingJInternalFrameLocal.actualizarLista(cuentacontablecostoventaBeanSwingJInternalFrameLocal.cuentacontable,this.cuentacontablecostoventasForeignKey);

				cuentacontablecostoventaBeanSwingJInternalFrameLocal.actualizarRelaciones(cuentacontablecostoventaBeanSwingJInternalFrameLocal.cuentacontable);

				bodegaproductoLocal.setCuentaContableCostoVenta(cuentacontablecostoventaBeanSwingJInternalFrameLocal.cuentacontable);

				this.addItemDefectoCombosForeignKeyCuentaContableCostoVenta();
				this.cargarCombosFrameCuentaContableCostoVentasForeignKey("Formulario");
				this.setActualCuentaContableCostoVentaForeignKey(cuentacontablecostoventaBeanSwingJInternalFrameLocal.cuentacontable.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CuentaContableDetalleFormJInternalFrame.class)) {
				CuentaContableBeanSwingJInternalFrame cuentacontableventaBeanSwingJInternalFrameLocal=(CuentaContableBeanSwingJInternalFrame) ((CuentaContableDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				cuentacontableventaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCuentaContable(cuentacontableventaBeanSwingJInternalFrameLocal.getcuentacontable(),true);
				cuentacontableventaBeanSwingJInternalFrameLocal.actualizarLista(cuentacontableventaBeanSwingJInternalFrameLocal.cuentacontable,this.cuentacontableventasForeignKey);

				cuentacontableventaBeanSwingJInternalFrameLocal.actualizarRelaciones(cuentacontableventaBeanSwingJInternalFrameLocal.cuentacontable);

				bodegaproductoLocal.setCuentaContableVenta(cuentacontableventaBeanSwingJInternalFrameLocal.cuentacontable);

				this.addItemDefectoCombosForeignKeyCuentaContableVenta();
				this.cargarCombosFrameCuentaContableVentasForeignKey("Formulario");
				this.setActualCuentaContableVentaForeignKey(cuentacontableventaBeanSwingJInternalFrameLocal.cuentacontable.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CuentaContableDetalleFormJInternalFrame.class)) {
				CuentaContableBeanSwingJInternalFrame cuentacontabledescuentoBeanSwingJInternalFrameLocal=(CuentaContableBeanSwingJInternalFrame) ((CuentaContableDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				cuentacontabledescuentoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCuentaContable(cuentacontabledescuentoBeanSwingJInternalFrameLocal.getcuentacontable(),true);
				cuentacontabledescuentoBeanSwingJInternalFrameLocal.actualizarLista(cuentacontabledescuentoBeanSwingJInternalFrameLocal.cuentacontable,this.cuentacontabledescuentosForeignKey);

				cuentacontabledescuentoBeanSwingJInternalFrameLocal.actualizarRelaciones(cuentacontabledescuentoBeanSwingJInternalFrameLocal.cuentacontable);

				bodegaproductoLocal.setCuentaContableDescuento(cuentacontabledescuentoBeanSwingJInternalFrameLocal.cuentacontable);

				this.addItemDefectoCombosForeignKeyCuentaContableDescuento();
				this.cargarCombosFrameCuentaContableDescuentosForeignKey("Formulario");
				this.setActualCuentaContableDescuentoForeignKey(cuentacontabledescuentoBeanSwingJInternalFrameLocal.cuentacontable.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CuentaContableDetalleFormJInternalFrame.class)) {
				CuentaContableBeanSwingJInternalFrame cuentacontableproduccionBeanSwingJInternalFrameLocal=(CuentaContableBeanSwingJInternalFrame) ((CuentaContableDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				cuentacontableproduccionBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCuentaContable(cuentacontableproduccionBeanSwingJInternalFrameLocal.getcuentacontable(),true);
				cuentacontableproduccionBeanSwingJInternalFrameLocal.actualizarLista(cuentacontableproduccionBeanSwingJInternalFrameLocal.cuentacontable,this.cuentacontableproduccionsForeignKey);

				cuentacontableproduccionBeanSwingJInternalFrameLocal.actualizarRelaciones(cuentacontableproduccionBeanSwingJInternalFrameLocal.cuentacontable);

				bodegaproductoLocal.setCuentaContableProduccion(cuentacontableproduccionBeanSwingJInternalFrameLocal.cuentacontable);

				this.addItemDefectoCombosForeignKeyCuentaContableProduccion();
				this.cargarCombosFrameCuentaContableProduccionsForeignKey("Formulario");
				this.setActualCuentaContableProduccionForeignKey(cuentacontableproduccionBeanSwingJInternalFrameLocal.cuentacontable.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CuentaContableDetalleFormJInternalFrame.class)) {
				CuentaContableBeanSwingJInternalFrame cuentacontabledevolucionBeanSwingJInternalFrameLocal=(CuentaContableBeanSwingJInternalFrame) ((CuentaContableDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				cuentacontabledevolucionBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCuentaContable(cuentacontabledevolucionBeanSwingJInternalFrameLocal.getcuentacontable(),true);
				cuentacontabledevolucionBeanSwingJInternalFrameLocal.actualizarLista(cuentacontabledevolucionBeanSwingJInternalFrameLocal.cuentacontable,this.cuentacontabledevolucionsForeignKey);

				cuentacontabledevolucionBeanSwingJInternalFrameLocal.actualizarRelaciones(cuentacontabledevolucionBeanSwingJInternalFrameLocal.cuentacontable);

				bodegaproductoLocal.setCuentaContableDevolucion(cuentacontabledevolucionBeanSwingJInternalFrameLocal.cuentacontable);

				this.addItemDefectoCombosForeignKeyCuentaContableDevolucion();
				this.cargarCombosFrameCuentaContableDevolucionsForeignKey("Formulario");
				this.setActualCuentaContableDevolucionForeignKey(cuentacontabledevolucionBeanSwingJInternalFrameLocal.cuentacontable.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CuentaContableDetalleFormJInternalFrame.class)) {
				CuentaContableBeanSwingJInternalFrame cuentacontableingresodebitoBeanSwingJInternalFrameLocal=(CuentaContableBeanSwingJInternalFrame) ((CuentaContableDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				cuentacontableingresodebitoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCuentaContable(cuentacontableingresodebitoBeanSwingJInternalFrameLocal.getcuentacontable(),true);
				cuentacontableingresodebitoBeanSwingJInternalFrameLocal.actualizarLista(cuentacontableingresodebitoBeanSwingJInternalFrameLocal.cuentacontable,this.cuentacontableingresodebitosForeignKey);

				cuentacontableingresodebitoBeanSwingJInternalFrameLocal.actualizarRelaciones(cuentacontableingresodebitoBeanSwingJInternalFrameLocal.cuentacontable);

				bodegaproductoLocal.setCuentaContableIngresoDebito(cuentacontableingresodebitoBeanSwingJInternalFrameLocal.cuentacontable);

				this.addItemDefectoCombosForeignKeyCuentaContableIngresoDebito();
				this.cargarCombosFrameCuentaContableIngresoDebitosForeignKey("Formulario");
				this.setActualCuentaContableIngresoDebitoForeignKey(cuentacontableingresodebitoBeanSwingJInternalFrameLocal.cuentacontable.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CuentaContableDetalleFormJInternalFrame.class)) {
				CuentaContableBeanSwingJInternalFrame cuentacontableingresocreditoBeanSwingJInternalFrameLocal=(CuentaContableBeanSwingJInternalFrame) ((CuentaContableDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				cuentacontableingresocreditoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCuentaContable(cuentacontableingresocreditoBeanSwingJInternalFrameLocal.getcuentacontable(),true);
				cuentacontableingresocreditoBeanSwingJInternalFrameLocal.actualizarLista(cuentacontableingresocreditoBeanSwingJInternalFrameLocal.cuentacontable,this.cuentacontableingresocreditosForeignKey);

				cuentacontableingresocreditoBeanSwingJInternalFrameLocal.actualizarRelaciones(cuentacontableingresocreditoBeanSwingJInternalFrameLocal.cuentacontable);

				bodegaproductoLocal.setCuentaContableIngresoCredito(cuentacontableingresocreditoBeanSwingJInternalFrameLocal.cuentacontable);

				this.addItemDefectoCombosForeignKeyCuentaContableIngresoCredito();
				this.cargarCombosFrameCuentaContableIngresoCreditosForeignKey("Formulario");
				this.setActualCuentaContableIngresoCreditoForeignKey(cuentacontableingresocreditoBeanSwingJInternalFrameLocal.cuentacontable.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CuentaContableDetalleFormJInternalFrame.class)) {
				CuentaContableBeanSwingJInternalFrame cuentacontableresultadodebitoBeanSwingJInternalFrameLocal=(CuentaContableBeanSwingJInternalFrame) ((CuentaContableDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				cuentacontableresultadodebitoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCuentaContable(cuentacontableresultadodebitoBeanSwingJInternalFrameLocal.getcuentacontable(),true);
				cuentacontableresultadodebitoBeanSwingJInternalFrameLocal.actualizarLista(cuentacontableresultadodebitoBeanSwingJInternalFrameLocal.cuentacontable,this.cuentacontableresultadodebitosForeignKey);

				cuentacontableresultadodebitoBeanSwingJInternalFrameLocal.actualizarRelaciones(cuentacontableresultadodebitoBeanSwingJInternalFrameLocal.cuentacontable);

				bodegaproductoLocal.setCuentaContableResultadoDebito(cuentacontableresultadodebitoBeanSwingJInternalFrameLocal.cuentacontable);

				this.addItemDefectoCombosForeignKeyCuentaContableResultadoDebito();
				this.cargarCombosFrameCuentaContableResultadoDebitosForeignKey("Formulario");
				this.setActualCuentaContableResultadoDebitoForeignKey(cuentacontableresultadodebitoBeanSwingJInternalFrameLocal.cuentacontable.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CuentaContableDetalleFormJInternalFrame.class)) {
				CuentaContableBeanSwingJInternalFrame cuentacontableresultadocreditoBeanSwingJInternalFrameLocal=(CuentaContableBeanSwingJInternalFrame) ((CuentaContableDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				cuentacontableresultadocreditoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCuentaContable(cuentacontableresultadocreditoBeanSwingJInternalFrameLocal.getcuentacontable(),true);
				cuentacontableresultadocreditoBeanSwingJInternalFrameLocal.actualizarLista(cuentacontableresultadocreditoBeanSwingJInternalFrameLocal.cuentacontable,this.cuentacontableresultadocreditosForeignKey);

				cuentacontableresultadocreditoBeanSwingJInternalFrameLocal.actualizarRelaciones(cuentacontableresultadocreditoBeanSwingJInternalFrameLocal.cuentacontable);

				bodegaproductoLocal.setCuentaContableResultadoCredito(cuentacontableresultadocreditoBeanSwingJInternalFrameLocal.cuentacontable);

				this.addItemDefectoCombosForeignKeyCuentaContableResultadoCredito();
				this.cargarCombosFrameCuentaContableResultadoCreditosForeignKey("Formulario");
				this.setActualCuentaContableResultadoCreditoForeignKey(cuentacontableresultadocreditoBeanSwingJInternalFrameLocal.cuentacontable.getId(),false,"Formulario");
			}
		
		}
	}
	
	public Boolean validarBodegaProductoActual() throws Exception {
		Boolean estaValidado=false;
		this.inicializarInvalidValues();
		
		/*
		int intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.bodegaproducto =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
			this.bodegaproducto =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
		}
		//ARCHITECTURE
		*/
		
		this.invalidValues = bodegaproductoValidator.getInvalidValues(this.bodegaproducto);
					
		if(this.invalidValues==null || this.invalidValues.length<=0) {
			estaValidado=true;
		} else {
			this.mostrarInvalidValues();	
		}
		
		return estaValidado;
	}
	
	public void actualizarLista(BodegaProducto bodegaproducto,List<BodegaProducto> bodegaproductos) throws Exception {
		try	{		
			BodegaProductoConstantesFunciones.actualizarLista(bodegaproducto,bodegaproductos,this.bodegaproductoSessionBean.getEsGuardarRelacionado());		
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void actualizarSelectedLista(BodegaProducto bodegaproducto,List<BodegaProducto> bodegaproductos) throws Exception {
		try	{			
			BodegaProductoConstantesFunciones.actualizarSelectedLista(bodegaproducto,bodegaproductos);
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public Boolean tieneElementosSeleccionados() throws Exception {
		Boolean tiene=false;
		
		List<BodegaProducto> bodegaproductosLocal=null;
		
		try	{			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				bodegaproductosLocal=this.bodegaproductoLogic.getBodegaProductos();
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				bodegaproductosLocal=this.bodegaproductos;
			}
			//ARCHITECTURE
		
			for(BodegaProducto bodegaproductoLocal:bodegaproductosLocal) {
				if(this.permiteMantenimiento(bodegaproductoLocal) && bodegaproductoLocal.getIsSelected()) {
					tiene=true;
					break;
				}
			}
		} catch(Exception e) {
			throw e;
		}
		
		return tiene;
	}			
	
	public void mostrarInvalidValues() throws Exception {
		String sMensaje="";
				
		for (InvalidValue invalidValue : this.invalidValues) {
			sMensaje+="\r\n"+BodegaProductoConstantesFunciones.getBodegaProductoLabelDesdeNombre(invalidValue.getPropertyName())+"->"+invalidValue.getMessage();
			
			//MOSTRAR CAMPOS INVALIDOS
			if(invalidValue.getPropertyName().equals(BodegaProductoConstantesFunciones.IDEMPRESA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabelid_empresaBodegaProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(BodegaProductoConstantesFunciones.IDSUCURSAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabelid_sucursalBodegaProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(BodegaProductoConstantesFunciones.IDBODEGA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabelid_bodegaBodegaProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(BodegaProductoConstantesFunciones.IDPRODUCTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabelid_productoBodegaProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(BodegaProductoConstantesFunciones.IDUNIDAD)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabelid_unidadBodegaProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(BodegaProductoConstantesFunciones.IDCENTROCOSTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabelid_centro_costoBodegaProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(BodegaProductoConstantesFunciones.IDESTADOBODEGAPRODUCTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabelid_estado_bodega_productoBodegaProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(BodegaProductoConstantesFunciones.DESCRIPCION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabeldescripcionBodegaProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(BodegaProductoConstantesFunciones.CANTIDADDISPONIBLE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabelcantidad_disponibleBodegaProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(BodegaProductoConstantesFunciones.STOCKMAXIMO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabelstock_maximoBodegaProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(BodegaProductoConstantesFunciones.STOCKMINIMO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabelstock_minimoBodegaProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(BodegaProductoConstantesFunciones.IVA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabelivaBodegaProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(BodegaProductoConstantesFunciones.IVAVALOR)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabeliva_valorBodegaProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(BodegaProductoConstantesFunciones.DESCUENTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabeldescuentoBodegaProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(BodegaProductoConstantesFunciones.DESCUENTOVALOR)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabeldescuento_valorBodegaProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(BodegaProductoConstantesFunciones.ICE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabeliceBodegaProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(BodegaProductoConstantesFunciones.ICEVALOR)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabelice_valorBodegaProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(BodegaProductoConstantesFunciones.COSTOPROMEDIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabelcosto_promedioBodegaProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(BodegaProductoConstantesFunciones.PORCENTAJECOMISION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabelporcentaje_comisionBodegaProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(BodegaProductoConstantesFunciones.PRECIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabelprecioBodegaProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(BodegaProductoConstantesFunciones.ULTIMOCOSTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabelultimo_costoBodegaProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(BodegaProductoConstantesFunciones.COSTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabelcostoBodegaProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(BodegaProductoConstantesFunciones.ARANCELPORCENTAJE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabelarancel_porcentajeBodegaProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(BodegaProductoConstantesFunciones.ICEPORCENTAJE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabelice_porcentajeBodegaProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(BodegaProductoConstantesFunciones.PESO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabelpesoBodegaProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(BodegaProductoConstantesFunciones.CONIVA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabelcon_ivaBodegaProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(BodegaProductoConstantesFunciones.CONIMPUESTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabelcon_impuestoBodegaProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(BodegaProductoConstantesFunciones.CONICE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabelcon_iceBodegaProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(BodegaProductoConstantesFunciones.ESTAACTIVO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabelesta_activoBodegaProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(BodegaProductoConstantesFunciones.CONBALANZA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabelcon_balanzaBodegaProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(BodegaProductoConstantesFunciones.CANTIDADPEDIDA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabelcantidad_pedidaBodegaProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(BodegaProductoConstantesFunciones.CANTIDADFISICA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabelcantidad_fisicaBodegaProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(BodegaProductoConstantesFunciones.CANTIDADREQUERIDO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabelcantidad_requeridoBodegaProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(BodegaProductoConstantesFunciones.PRECIOCOSTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabelprecio_costoBodegaProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(BodegaProductoConstantesFunciones.PRECIOPROMEDIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabelprecio_promedioBodegaProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(BodegaProductoConstantesFunciones.TOTALINGRESOS)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabeltotal_ingresosBodegaProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(BodegaProductoConstantesFunciones.TOTALEGRESOS)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabeltotal_egresosBodegaProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(BodegaProductoConstantesFunciones.TOTALPROVISION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabeltotal_provisionBodegaProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(BodegaProductoConstantesFunciones.TOTALPROCESO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabeltotal_procesoBodegaProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(BodegaProductoConstantesFunciones.COSTOCALCULADO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabelcosto_calculadoBodegaProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(BodegaProductoConstantesFunciones.DIASPRODUCCION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabeldias_produccionBodegaProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(BodegaProductoConstantesFunciones.PRECIOREPOSICION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabelprecio_reposicionBodegaProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(BodegaProductoConstantesFunciones.FECHAULTIMOPEDIDO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabelfecha_ultimo_pedidoBodegaProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(BodegaProductoConstantesFunciones.FECHAINGRESO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabelfecha_ingresoBodegaProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(BodegaProductoConstantesFunciones.FECHAEGRESO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabelfecha_egresoBodegaProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(BodegaProductoConstantesFunciones.FECHAULTIMACOMPRA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabelfecha_ultima_compraBodegaProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(BodegaProductoConstantesFunciones.FECHAULTIMAVENTA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabelfecha_ultima_ventaBodegaProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(BodegaProductoConstantesFunciones.FECHAULTIMADEVOLUCION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabelfecha_ultima_devolucionBodegaProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(BodegaProductoConstantesFunciones.IDCUENTACONTABLEINVENTARIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabelid_cuenta_contable_inventarioBodegaProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(BodegaProductoConstantesFunciones.IDCUENTACONTABLECOSTOVENTA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabelid_cuenta_contable_costo_ventaBodegaProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(BodegaProductoConstantesFunciones.IDCUENTACONTABLEVENTA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabelid_cuenta_contable_ventaBodegaProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(BodegaProductoConstantesFunciones.IDCUENTACONTABLEDESCUENTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabelid_cuenta_contable_descuentoBodegaProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(BodegaProductoConstantesFunciones.IDCUENTACONTABLEPRODUCCION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabelid_cuenta_contable_produccionBodegaProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(BodegaProductoConstantesFunciones.IDCUENTACONTABLEDEVOLUCION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabelid_cuenta_contable_devolucionBodegaProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(BodegaProductoConstantesFunciones.IDCUENTACONTABLEINGRESODEBITO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabelid_cuenta_contable_ingreso_debitoBodegaProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(BodegaProductoConstantesFunciones.IDCUENTACONTABLEINGRESOCREDITO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabelid_cuenta_contable_ingreso_creditoBodegaProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(BodegaProductoConstantesFunciones.IDCUENTACONTABLERESULTADODEBITO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabelid_cuenta_contable_resultado_debitoBodegaProducto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(BodegaProductoConstantesFunciones.IDCUENTACONTABLERESULTADOCREDITO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabelid_cuenta_contable_resultado_creditoBodegaProducto,invalidValue.getMessage());}
        }
		
		
		if(!sMensaje.equals("")) {
			//JOptionPane.showMessageDialog(this,sMensaje,"VALIDACION ",JOptionPane.ERROR_MESSAGE);
			throw new Exception(sMensaje);			
		}
		
		/*
		System.out.println(invalidValue);
        System.out.println("message=" + invalidValue.getMessage());
        System.out.println("propertyName=" + invalidValue.getPropertyName());
        System.out.println("propertyPath=" + invalidValue.getPropertyPath());
        System.out.println("value=" + invalidValue.getValue());
        */
	}		
	
	public void inicializarInvalidValues() throws Exception {
		String sMensaje="";	
		
		if(this.jInternalFrameDetalleFormBodegaProducto!=null) {
		
		//MOSTRAR CAMPOS INVALIDOS
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormBodegaProducto.jLabelid_empresaBodegaProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormBodegaProducto.jLabelid_sucursalBodegaProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormBodegaProducto.jLabelid_bodegaBodegaProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormBodegaProducto.jLabelid_productoBodegaProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormBodegaProducto.jLabelid_unidadBodegaProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormBodegaProducto.jLabelid_centro_costoBodegaProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormBodegaProducto.jLabelid_estado_bodega_productoBodegaProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormBodegaProducto.jLabeldescripcionBodegaProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormBodegaProducto.jLabelcantidad_disponibleBodegaProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormBodegaProducto.jLabelstock_maximoBodegaProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormBodegaProducto.jLabelstock_minimoBodegaProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormBodegaProducto.jLabelivaBodegaProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormBodegaProducto.jLabeliva_valorBodegaProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormBodegaProducto.jLabeldescuentoBodegaProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormBodegaProducto.jLabeldescuento_valorBodegaProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormBodegaProducto.jLabeliceBodegaProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormBodegaProducto.jLabelice_valorBodegaProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormBodegaProducto.jLabelcosto_promedioBodegaProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormBodegaProducto.jLabelporcentaje_comisionBodegaProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormBodegaProducto.jLabelprecioBodegaProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormBodegaProducto.jLabelultimo_costoBodegaProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormBodegaProducto.jLabelcostoBodegaProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormBodegaProducto.jLabelarancel_porcentajeBodegaProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormBodegaProducto.jLabelice_porcentajeBodegaProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormBodegaProducto.jLabelpesoBodegaProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormBodegaProducto.jLabelcon_ivaBodegaProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormBodegaProducto.jLabelcon_impuestoBodegaProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormBodegaProducto.jLabelcon_iceBodegaProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormBodegaProducto.jLabelesta_activoBodegaProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormBodegaProducto.jLabelcon_balanzaBodegaProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormBodegaProducto.jLabelcantidad_pedidaBodegaProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormBodegaProducto.jLabelcantidad_fisicaBodegaProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormBodegaProducto.jLabelcantidad_requeridoBodegaProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormBodegaProducto.jLabelprecio_costoBodegaProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormBodegaProducto.jLabelprecio_promedioBodegaProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormBodegaProducto.jLabeltotal_ingresosBodegaProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormBodegaProducto.jLabeltotal_egresosBodegaProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormBodegaProducto.jLabeltotal_provisionBodegaProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormBodegaProducto.jLabeltotal_procesoBodegaProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormBodegaProducto.jLabelcosto_calculadoBodegaProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormBodegaProducto.jLabeldias_produccionBodegaProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormBodegaProducto.jLabelprecio_reposicionBodegaProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormBodegaProducto.jLabelfecha_ultimo_pedidoBodegaProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormBodegaProducto.jLabelfecha_ingresoBodegaProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormBodegaProducto.jLabelfecha_egresoBodegaProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormBodegaProducto.jLabelfecha_ultima_compraBodegaProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormBodegaProducto.jLabelfecha_ultima_ventaBodegaProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormBodegaProducto.jLabelfecha_ultima_devolucionBodegaProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormBodegaProducto.jLabelid_cuenta_contable_inventarioBodegaProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormBodegaProducto.jLabelid_cuenta_contable_costo_ventaBodegaProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormBodegaProducto.jLabelid_cuenta_contable_ventaBodegaProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormBodegaProducto.jLabelid_cuenta_contable_descuentoBodegaProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormBodegaProducto.jLabelid_cuenta_contable_produccionBodegaProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormBodegaProducto.jLabelid_cuenta_contable_devolucionBodegaProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormBodegaProducto.jLabelid_cuenta_contable_ingreso_debitoBodegaProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormBodegaProducto.jLabelid_cuenta_contable_ingreso_creditoBodegaProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormBodegaProducto.jLabelid_cuenta_contable_resultado_debitoBodegaProducto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormBodegaProducto.jLabelid_cuenta_contable_resultado_creditoBodegaProducto,"");
		
		}
	}
	
	
	
	public void actualizarObjetoPadreFk(String sTipo)  throws Exception {
		if(sTipo.equals("XXXAuxiliar")) {
		
		}
		
	}
	
	public void nuevoPreparar() throws Exception {
		this.nuevoPreparar(false);
	}
	
	public void nuevoPreparar(Boolean esNuevoGuardarCambios) throws Exception {
		this.iIdNuevoBodegaProducto--;	
		
		
		this.bodegaproductoAux=new BodegaProducto();
		
		this.bodegaproductoAux.setId(this.iIdNuevoBodegaProducto);
		this.bodegaproductoAux.setIsChanged(true);
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.bodegaproductoLogic.getBodegaProductos().add(this.bodegaproductoAux);
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.bodegaproductos.add(this.bodegaproductoAux);
		}
		//ARCHITECTURE
		
		this.bodegaproducto=this.bodegaproductoAux;
		
		if(BodegaProductoJInternalFrame.ISBINDING_MANUAL_TABLA) {
			this.setVariablesObjetoActualToFormularioBodegaProducto(this.bodegaproducto);
			this.setVariablesObjetoActualToFormularioForeignKeyBodegaProducto(this.bodegaproducto);
		}
				
		//this.setDefaultControlesBodegaProducto();
		
		this.inicializarInvalidValues();
				
		//SELECCIONA ITEM DEFECTO-->SET O SELECTED INDEX
		this.setItemDefectoCombosForeignKeyBodegaProducto();
		
		
		//INICIALIZA VARIABLES COMBOS GLOBALES A FORMULARIO(ParametroGeneralUsuario)
		this.setVariablesGlobalesCombosForeignKeyBodegaProducto();
		
		//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
		//this.setVariablesGlobalesAuxiliaresCombosForeignKeyBodegaProducto();
		
		//SI TIENE FOREIGN KEY CON CAMPO esDefecto=true, SE ACTUALIZA A OBJETO ACTUAL
		this.setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualBodegaProducto(this.bodegaproductoBean,this.bodegaproducto,false,false);
		
		//ACTUALIZA VALORES PARA EL OBJETO ACTUAL ANTES DE ENVIARLO A ACTUALIZAR
		this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
				
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		if(this.jInternalFrameParent!=null) {
			this.jInternalFrameParent.actualizarObjetoPadreFk(BodegaProductoConstantesFunciones.CLASSNAME);
		}	
		
		
		if(this.bodegaproductoSessionBean.getConGuardarRelaciones()) {
			classes=BodegaProductoConstantesFunciones.getClassesRelationshipsOfBodegaProducto(new ArrayList<Classe>(),DeepLoadType.NONE);
		}
		
		this.classesActual=new ArrayList<Classe>();
		this.classesActual.addAll(classes);
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {						
			this.bodegaproductoReturnGeneral=bodegaproductoLogic.procesarEventosBodegaProductosWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,EventoGlobalTipo.FORM_RECARGAR,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.bodegaproductoLogic.getBodegaProductos(),this.bodegaproducto,this.bodegaproductoParameterGeneral,this.isEsNuevoBodegaProducto,classes);//this.bodegaproductoLogic.getBodegaProducto()
						
		} else if(Constantes.ISUSAEJBREMOTE) {
						
		} else if(Constantes.ISUSAEJBHOME) {
		}
		//ARCHITECTURE
		
		//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
		//this.setVariablesObjetoReturnGeneralToBeanBodegaProducto(this.bodegaproductoReturnGeneral,this.bodegaproductoBean,false);
		
		if(this.bodegaproductoReturnGeneral.getConRecargarPropiedades()) {
			//INICIALIZA VARIABLES COMBOS NORMALES (FK)
			this.setVariablesObjetoActualToFormularioForeignKeyBodegaProducto(this.bodegaproductoReturnGeneral.getBodegaProducto());
			
			//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
			this.setVariablesObjetoActualToFormularioBodegaProducto(this.bodegaproductoReturnGeneral.getBodegaProducto());
		}
		
		if(this.bodegaproductoReturnGeneral.getConRecargarRelaciones()) {
			//INICIALIZA VARIABLES RELACIONES A FORMULARIO
			this.setVariablesRelacionesObjetoActualToFormularioBodegaProducto(this.bodegaproductoReturnGeneral.getBodegaProducto(),classes);//this.bodegaproductoBean);	
		}
			
		//ACTUALIZA VARIABLES FORMULARIO A OBJETO ACTUAL (PARA NUEVO TABLA O GUARDAR CAMBIOS
		if(esNuevoGuardarCambios) {
			this.setVariablesFormularioToObjetoActualBodegaProducto(this.bodegaproducto,false);
		}
		
		//INICIALIZA VARIABLES COMBOS DEFAULT DEL PROYECTO(|DEFAULT para FK)
		//this.setVariablesDefaultCombosForeignKeyBodegaProducto();
		
		//INICIALIZA VARIABLES COMBOS PARAMETRO DEL PROYECTO(|VALORPARAM Era para ParametroModulo, ahora en logic)
		//this.setVariablesParametroCombosForeignKeyBodegaProducto();						
		
		if(!esNuevoGuardarCambios) {
			//INICIALIZA VARIABLES POR OPCION MENU
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			BodegaProductoBeanSwingJInternalFrameAdditional.RecargarFormBodegaProducto(this,"NUEVO_PREPARAR","",this.arrDatoGeneral);
		
			//NO FUNCIONA BINDINGS			
			this.inicializarActualizarBindingBodegaProducto(false);
						
			if(bodegaproductoSessionBean.getConGuardarRelaciones()) {
				//DEBERIA YA ESTAR CARGADO LOS COMBOS Y SI SE NECESITA ALGO MAS SE DEBE CREAR FUNCION LIMITADA
				//SI DEBE TRAER Y RESETEAR TABLA
								
			}
				
			//SI ES MANUAL
			if(BodegaProductoJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualBodegaProducto();
			}
			
			this.actualizarVisualTableDatosBodegaProducto();
			
			this.jTableDatosBodegaProducto.setRowSelectionInterval(this.getIndiceNuevoBodegaProducto(), this.getIndiceNuevoBodegaProducto());
			
			this.seleccionarFilaTablaBodegaProductoActual();
						
			this.actualizarEstadoCeldasBotonesBodegaProducto("a", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		}		
	}
	
	public void habilitarDeshabilitarControlesBodegaProducto(Boolean isHabilitar) throws Exception {
		
		this.jInternalFrameDetalleFormBodegaProducto.jTextAreadescripcionBodegaProducto.setEnabled(isHabilitar && this.bodegaproductoConstantesFunciones.activardescripcionBodegaProducto);//
		this.jInternalFrameDetalleFormBodegaProducto.jTextFieldcantidad_disponibleBodegaProducto.setEnabled(isHabilitar && this.bodegaproductoConstantesFunciones.activarcantidad_disponibleBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jTextFieldstock_maximoBodegaProducto.setEnabled(isHabilitar && this.bodegaproductoConstantesFunciones.activarstock_maximoBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jTextFieldstock_minimoBodegaProducto.setEnabled(isHabilitar && this.bodegaproductoConstantesFunciones.activarstock_minimoBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jTextFieldivaBodegaProducto.setEnabled(isHabilitar && this.bodegaproductoConstantesFunciones.activarivaBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jTextFieldiva_valorBodegaProducto.setEnabled(isHabilitar && this.bodegaproductoConstantesFunciones.activariva_valorBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jTextFielddescuentoBodegaProducto.setEnabled(isHabilitar && this.bodegaproductoConstantesFunciones.activardescuentoBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jTextFielddescuento_valorBodegaProducto.setEnabled(isHabilitar && this.bodegaproductoConstantesFunciones.activardescuento_valorBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jTextFieldiceBodegaProducto.setEnabled(isHabilitar && this.bodegaproductoConstantesFunciones.activariceBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jTextFieldice_valorBodegaProducto.setEnabled(isHabilitar && this.bodegaproductoConstantesFunciones.activarice_valorBodegaProducto);//
		this.jInternalFrameDetalleFormBodegaProducto.jTextFieldcosto_promedioBodegaProducto.setEnabled(isHabilitar && this.bodegaproductoConstantesFunciones.activarcosto_promedioBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jTextFieldporcentaje_comisionBodegaProducto.setEnabled(isHabilitar && this.bodegaproductoConstantesFunciones.activarporcentaje_comisionBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jTextFieldprecioBodegaProducto.setEnabled(isHabilitar && this.bodegaproductoConstantesFunciones.activarprecioBodegaProducto);//
		this.jInternalFrameDetalleFormBodegaProducto.jTextFieldultimo_costoBodegaProducto.setEnabled(isHabilitar && this.bodegaproductoConstantesFunciones.activarultimo_costoBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jTextFieldcostoBodegaProducto.setEnabled(isHabilitar && this.bodegaproductoConstantesFunciones.activarcostoBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jTextFieldarancel_porcentajeBodegaProducto.setEnabled(isHabilitar && this.bodegaproductoConstantesFunciones.activararancel_porcentajeBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jTextFieldice_porcentajeBodegaProducto.setEnabled(isHabilitar && this.bodegaproductoConstantesFunciones.activarice_porcentajeBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jTextFieldpesoBodegaProducto.setEnabled(isHabilitar && this.bodegaproductoConstantesFunciones.activarpesoBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jCheckBoxcon_ivaBodegaProducto.setEnabled(isHabilitar && this.bodegaproductoConstantesFunciones.activarcon_ivaBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jCheckBoxcon_impuestoBodegaProducto.setEnabled(isHabilitar && this.bodegaproductoConstantesFunciones.activarcon_impuestoBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jCheckBoxcon_iceBodegaProducto.setEnabled(isHabilitar && this.bodegaproductoConstantesFunciones.activarcon_iceBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jCheckBoxesta_activoBodegaProducto.setEnabled(isHabilitar && this.bodegaproductoConstantesFunciones.activaresta_activoBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jCheckBoxcon_balanzaBodegaProducto.setEnabled(isHabilitar && this.bodegaproductoConstantesFunciones.activarcon_balanzaBodegaProducto);//
		this.jInternalFrameDetalleFormBodegaProducto.jTextFieldcantidad_pedidaBodegaProducto.setEnabled(isHabilitar && this.bodegaproductoConstantesFunciones.activarcantidad_pedidaBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jTextFieldcantidad_fisicaBodegaProducto.setEnabled(isHabilitar && this.bodegaproductoConstantesFunciones.activarcantidad_fisicaBodegaProducto);//
		this.jInternalFrameDetalleFormBodegaProducto.jTextFieldcantidad_requeridoBodegaProducto.setEnabled(isHabilitar && this.bodegaproductoConstantesFunciones.activarcantidad_requeridoBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jTextFieldprecio_costoBodegaProducto.setEnabled(isHabilitar && this.bodegaproductoConstantesFunciones.activarprecio_costoBodegaProducto);//
		this.jInternalFrameDetalleFormBodegaProducto.jTextFieldprecio_promedioBodegaProducto.setEnabled(isHabilitar && this.bodegaproductoConstantesFunciones.activarprecio_promedioBodegaProducto);//
		this.jInternalFrameDetalleFormBodegaProducto.jTextFieldtotal_ingresosBodegaProducto.setEnabled(isHabilitar && this.bodegaproductoConstantesFunciones.activartotal_ingresosBodegaProducto);//
		this.jInternalFrameDetalleFormBodegaProducto.jTextFieldtotal_egresosBodegaProducto.setEnabled(isHabilitar && this.bodegaproductoConstantesFunciones.activartotal_egresosBodegaProducto);//
		this.jInternalFrameDetalleFormBodegaProducto.jTextFieldtotal_provisionBodegaProducto.setEnabled(isHabilitar && this.bodegaproductoConstantesFunciones.activartotal_provisionBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jTextFieldtotal_procesoBodegaProducto.setEnabled(isHabilitar && this.bodegaproductoConstantesFunciones.activartotal_procesoBodegaProducto);//
		this.jInternalFrameDetalleFormBodegaProducto.jTextFieldcosto_calculadoBodegaProducto.setEnabled(isHabilitar && this.bodegaproductoConstantesFunciones.activarcosto_calculadoBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jTextFielddias_produccionBodegaProducto.setEnabled(isHabilitar && this.bodegaproductoConstantesFunciones.activardias_produccionBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jTextFieldprecio_reposicionBodegaProducto.setEnabled(isHabilitar && this.bodegaproductoConstantesFunciones.activarprecio_reposicionBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jDateChooserfecha_ultimo_pedidoBodegaProducto.setEnabled(isHabilitar && this.bodegaproductoConstantesFunciones.activarfecha_ultimo_pedidoBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jDateChooserfecha_ingresoBodegaProducto.setEnabled(isHabilitar && this.bodegaproductoConstantesFunciones.activarfecha_ingresoBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jDateChooserfecha_egresoBodegaProducto.setEnabled(isHabilitar && this.bodegaproductoConstantesFunciones.activarfecha_egresoBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jDateChooserfecha_ultima_compraBodegaProducto.setEnabled(isHabilitar && this.bodegaproductoConstantesFunciones.activarfecha_ultima_compraBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jDateChooserfecha_ultima_ventaBodegaProducto.setEnabled(isHabilitar && this.bodegaproductoConstantesFunciones.activarfecha_ultima_ventaBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jDateChooserfecha_ultima_devolucionBodegaProducto.setEnabled(isHabilitar && this.bodegaproductoConstantesFunciones.activarfecha_ultima_devolucionBodegaProducto);	
		//
		this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_empresaBodegaProducto.setEnabled(isHabilitar && this.bodegaproductoConstantesFunciones.activarid_empresaBodegaProducto);//
		this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_sucursalBodegaProducto.setEnabled(isHabilitar && this.bodegaproductoConstantesFunciones.activarid_sucursalBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_bodegaBodegaProducto.setEnabled(isHabilitar && this.bodegaproductoConstantesFunciones.activarid_bodegaBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_productoBodegaProducto.setEnabled(isHabilitar && this.bodegaproductoConstantesFunciones.activarid_productoBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_unidadBodegaProducto.setEnabled(isHabilitar && this.bodegaproductoConstantesFunciones.activarid_unidadBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_centro_costoBodegaProducto.setEnabled(isHabilitar && this.bodegaproductoConstantesFunciones.activarid_centro_costoBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_estado_bodega_productoBodegaProducto.setEnabled(isHabilitar && this.bodegaproductoConstantesFunciones.activarid_estado_bodega_productoBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_inventarioBodegaProducto.setEnabled(isHabilitar && this.bodegaproductoConstantesFunciones.activarid_cuenta_contable_inventarioBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_costo_ventaBodegaProducto.setEnabled(isHabilitar && this.bodegaproductoConstantesFunciones.activarid_cuenta_contable_costo_ventaBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_ventaBodegaProducto.setEnabled(isHabilitar && this.bodegaproductoConstantesFunciones.activarid_cuenta_contable_ventaBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_descuentoBodegaProducto.setEnabled(isHabilitar && this.bodegaproductoConstantesFunciones.activarid_cuenta_contable_descuentoBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_produccionBodegaProducto.setEnabled(isHabilitar && this.bodegaproductoConstantesFunciones.activarid_cuenta_contable_produccionBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_devolucionBodegaProducto.setEnabled(isHabilitar && this.bodegaproductoConstantesFunciones.activarid_cuenta_contable_devolucionBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_ingreso_debitoBodegaProducto.setEnabled(isHabilitar && this.bodegaproductoConstantesFunciones.activarid_cuenta_contable_ingreso_debitoBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_ingreso_creditoBodegaProducto.setEnabled(isHabilitar && this.bodegaproductoConstantesFunciones.activarid_cuenta_contable_ingreso_creditoBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_resultado_debitoBodegaProducto.setEnabled(isHabilitar && this.bodegaproductoConstantesFunciones.activarid_cuenta_contable_resultado_debitoBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_resultado_creditoBodegaProducto.setEnabled(isHabilitar && this.bodegaproductoConstantesFunciones.activarid_cuenta_contable_resultado_creditoBodegaProducto);
	};
	
	public void setDefaultControlesBodegaProducto() throws Exception {
			
	};
	
	
	public void habilitarDeshabilitarTipoMantenimientoBodegaProducto(Boolean esRelaciones) throws Exception {
		if(esRelaciones) {
			//this.bodegaproductoSessionBean.setConGuardarRelaciones(true);			
			this.bodegaproductoSessionBean.setEstaModoGuardarRelaciones(true);				
			this.jInternalFrameDetalleFormBodegaProducto.jTabbedPaneRelacionesBodegaProducto.setVisible(true);
			
					
		} else {
			//this.bodegaproductoSessionBean.setConGuardarRelaciones(false);			
			this.bodegaproductoSessionBean.setEstaModoGuardarRelaciones(false);						
			this.jInternalFrameDetalleFormBodegaProducto.jTabbedPaneRelacionesBodegaProducto.setVisible(false);
			
			
		}
	};
	
	public int getIndiceNuevoBodegaProducto() throws Exception {
		int iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(BodegaProducto bodegaproductoAux:this.bodegaproductoLogic.getBodegaProductos()) {
				if(bodegaproductoAux.getId().equals(this.iIdNuevoBodegaProducto)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(BodegaProducto bodegaproductoAux:this.bodegaproductos) {
				if(bodegaproductoAux.getId().equals(this.iIdNuevoBodegaProducto)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndice-1;
		}
		
		return iIndice;
	}
	
	public int getIndiceActualBodegaProducto(BodegaProducto bodegaproducto,Integer iIndiceActual) throws Exception {
		Integer iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(BodegaProducto bodegaproductoAux:this.bodegaproductoLogic.getBodegaProductos()) {
				if(bodegaproductoAux.getId().equals(bodegaproducto.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(BodegaProducto bodegaproductoAux:this.bodegaproductos) {
				if(bodegaproductoAux.getId().equals(bodegaproducto.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndiceActual;
		}
		
		return iIndice;
	}
	
	public void setCamposBaseDesdeOriginalBodegaProducto(BodegaProducto bodegaproductoOriginal) throws Exception {
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(BodegaProducto bodegaproductoAux:this.bodegaproductoLogic.getBodegaProductos()) {
				if(bodegaproductoAux.getBodegaProductoOriginal().getId().equals(bodegaproductoOriginal.getId())) {
					existe=true;
					bodegaproductoOriginal.setId(bodegaproductoAux.getId());
					bodegaproductoOriginal.setVersionRow(bodegaproductoAux.getVersionRow());
					break;
				}
				
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(BodegaProducto bodegaproductoAux:this.bodegaproductos) {
				if(bodegaproductoAux.getBodegaProductoOriginal().getId().equals(bodegaproductoOriginal.getId())) {
					existe=true;
					bodegaproductoOriginal.setId(bodegaproductoAux.getId());
					bodegaproductoOriginal.setVersionRow(bodegaproductoAux.getVersionRow());
					break;
				}				
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
		}
	}
	
	public void cancelarNuevosBodegaProducto(Boolean esParaCancelar) throws Exception {
		bodegaproductosAux=new ArrayList<BodegaProducto>();
		bodegaproductoAux=new BodegaProducto();
		
		if(!this.bodegaproductoSessionBean.getEsGuardarRelacionado()) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(BodegaProducto bodegaproductoAux:this.bodegaproductoLogic.getBodegaProductos()) {
					if(bodegaproductoAux.getId()<0) {
						bodegaproductosAux.add(bodegaproductoAux);
					}		
				}
				this.iIdNuevoBodegaProducto=0L;
				this.bodegaproductoLogic.getBodegaProductos().removeAll(bodegaproductosAux);
					
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(BodegaProducto bodegaproductoAux:this.bodegaproductos) {
					if(bodegaproductoAux.getId()<0) {
						bodegaproductosAux.add(bodegaproductoAux);
					}		
				}
				this.iIdNuevoBodegaProducto=0L;
				this.bodegaproductos.removeAll(bodegaproductosAux);
			}	
		} else {			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				if(esParaCancelar && this.isEsNuevoBodegaProducto 
					&& this.bodegaproductoLogic.getBodegaProductos().size()>0
					) {
					bodegaproductoAux=this.bodegaproductoLogic.getBodegaProductos().get(this.bodegaproductoLogic.getBodegaProductos().size() - 1);
				
					if(bodegaproductoAux.getId()<0) {
						this.bodegaproductoLogic.getBodegaProductos().remove(bodegaproductoAux);
					}
				}
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				if(esParaCancelar && this.isEsNuevoBodegaProducto && this.bodegaproductos.size()>0) {
					bodegaproductoAux=this.bodegaproductos.get(this.bodegaproductos.size() - 1);
				
					if(bodegaproductoAux.getId()<0) {
						this.bodegaproductos.remove(bodegaproductoAux);
					}
				}
			}	
		}
	}
	
	public void cancelarNuevoBodegaProducto(Boolean esParaCancelar) throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			if(bodegaproducto.getId()<0) {
				this.bodegaproductoLogic.getBodegaProductos().remove(this.bodegaproducto);
			}					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			if(bodegaproducto.getId()<0) {
				this.bodegaproductos.remove(this.bodegaproducto);
			}
		}			
	}
	
	public void setEstadosInicialesBodegaProducto(List<BodegaProducto> bodegaproductosAux) throws Exception {
		BodegaProductoConstantesFunciones.setEstadosInicialesBodegaProducto(bodegaproductosAux);
	}
	
	public void setEstadosInicialesBodegaProducto(BodegaProducto bodegaproductoAux) throws Exception {
		BodegaProductoConstantesFunciones.setEstadosInicialesBodegaProducto(bodegaproductoAux);		
	}
	
	public void nuevo() throws Exception {
		try	{
			//ESTA VALIDADO EN FUNCION ACTUALIZAR
			//if(this.validarBodegaProductoActual()) {
				this.ejecutarMantenimiento(MaintenanceType.NUEVO);
				
				this.actualizarEstadoCeldasBotonesBodegaProducto("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
				
			//}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void actualizar() throws Exception {
		try	{
			if(this.validarBodegaProductoActual()) {
				if(!this.isEsNuevoBodegaProducto) {
					this.ejecutarMantenimiento(MaintenanceType.ACTUALIZAR);
					
					this.actualizarEstadoCeldasBotonesBodegaProducto("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
					
				} else {					
					this.nuevo();
					this.isEsNuevoBodegaProducto=false;
				}
				
				//SE CANCELA AL FINAL DEL PROCESO JBUTTONACTUALIZAR
				//this.cancelar(false);
			}		
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void eliminar() throws Exception {
		try	{	
			if(this.validarBodegaProductoActual()) {
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE ELIMINAR EL/LA Bodega Producto ?", "MANTENIMIENTO DE Bodega Producto", JOptionPane.OK_CANCEL_OPTION) == 0) {
					this.ejecutarMantenimiento(MaintenanceType.ELIMINAR);			
					this.actualizarEstadoCeldasBotonesBodegaProducto("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
				}
			
			}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void guardarCambios() throws Exception {
		try	{
			this.ejecutarMantenimiento(MaintenanceType.GUARDARCAMBIOS);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarAsignar(BodegaProducto bodegaproducto) throws Exception {
		BodegaProductoConstantesFunciones.seleccionarAsignar(this.bodegaproducto,bodegaproducto);
	}
	
	public void seleccionar() throws Exception {
		try	{
			//ACTUALIZO EL PERMISO ACTUALIZAR CON EL PERMISO ACTUALIZAR ORIGINAL ESTE PERMISO SE UTILIZA PARA EL NUEVO TAMBIEN
			this.isPermisoActualizarBodegaProducto=this.isPermisoActualizarOriginalBodegaProducto;
			
			
			this.seleccionarAsignar(bodegaproducto);
			
			

			idProductoActual=bodegaproducto.getid_producto();
			this.seleccionarProductoActual();
			
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			BodegaProductoConstantesFunciones.quitarEspaciosBodegaProducto(this.bodegaproducto,this.arrDatoGeneral);
			
			
			this.actualizarEstadoCeldasBotonesBodegaProducto("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarBusqueda(Long id) throws Exception {
		try	{
			this.bodegaproductoSessionBean.setsFuncionBusquedaRapida(this.bodegaproductoSessionBean.getsFuncionBusquedaRapida().replace("TO_REPLACE", id.toString()));
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	
	//BUSQUEDA INTERNA FK
	public void seleccionarProductoActual() throws Exception {
		try	{
			Producto productoAux=new Producto();

			if(this.idProductoActual != null && this.idProductoActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					productoLogic.getEntityWithConnection(this.idProductoActual);
					productoAux= productoLogic.getProducto();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				productosForeignKey=new ArrayList<Producto>();
				productosForeignKey.add(productoAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	
	public void cancelar() throws Exception {
		this.cancelar(true);
	}
	
	public void cancelar(Boolean esParaCancelar) throws Exception {
		try {
														
			
			//SE UTILIZA COLUMNA ELIMINAR EN TABLA
			if(this.isEsNuevoBodegaProducto) {
				//NO CANCELA TODOS NUEVOS POR FUNCIONALIDAD GUARDAR CAMBIOS
				//this.cancelarNuevosBodegaProducto(esParaCancelar);				
				this.cancelarNuevoBodegaProducto(esParaCancelar);								
			}
			
			this.bodegaproducto=new BodegaProducto();
			
			this.inicializarBodegaProducto();
			
			this.actualizarEstadoCeldasBotonesBodegaProducto("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void inicializarBodegaProducto() throws Exception {
		try {
			BodegaProductoConstantesFunciones.inicializarBodegaProducto(this.bodegaproducto);
			
			} catch(Exception e) {
			throw e;
		}
	}
	
	public void anteriores()throws Exception {
		try	{
			//this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			
			if(this.iNumeroPaginacionPagina-this.iNumeroPaginacion<this.iNumeroPaginacion) {
				this.iNumeroPaginacionPagina=0;		
			} else {
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			}
			
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void siguientes()throws Exception {
		try	{			
			if(this.bodegaproductoLogic.getBodegaProductos().size()>0) {
					
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina+this.iNumeroPaginacion;
			}
				
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void generarReporteBodegaProductos(String sAccionBusqueda,List<BodegaProducto> bodegaproductosParaReportes) throws Exception {
		//HttpSession httpSession = httpServletRequest.getSession();
		Long iIdUsuarioSesion=0L;	
		
		
		if(usuarioActual==null) {
			this.usuarioActual=new Usuario();
		}
		
		iIdUsuarioSesion=usuarioActual.getId();
		
		String sPathReportes="";
		
		InputStream reportFile=null;
		InputStream imageFile=null;
			
		imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		String sPathReporteFinal="";
		
		if(!esReporteAccionProceso) {
			if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
				if(!this.esReporteDinamico) {
					sPathReporteFinal="BodegaProducto"+this.sTipoReporteExtra+"Design.jasper";
					reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
				} else {
					sPathReporteFinal=this.sPathReporteDinamico;
					reportFile = new FileInputStream(sPathReporteFinal);
				}
			} else {
				sPathReporteFinal="BodegaProductoMasterRelaciones"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);
				//sPathReportes=reportFile.getPath().replace("BodegaProductoMasterRelacionesDesign.jasper", "");
			}
		} else {
				sPathReporteFinal="BodegaProducto"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
		}
		
		if(reportFile==null) {
			throw new JRRuntimeException(sPathReporteFinal+" no existe");
		}
		
		String sUsuario="";
		
		if(usuarioActual!=null) {
			sUsuario=usuarioActual.getuser_name();
		}
		
		Map<String, Object> parameters = new HashMap<String, Object>();
		parameters.put("usuario", sUsuario);
		
		parameters.put("titulo", Funciones.GetTituloSistemaReporte(this.parametroGeneralSg,this.moduloActual,this.usuarioActual));
		parameters.put("subtitulo", "Reporte De  Bodega Productos");		
		parameters.put("busquedapor", BodegaProductoConstantesFunciones.getNombreIndice(sAccionBusqueda)+sDetalleReporte);
		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			parameters.put("SUBREPORT_DIR", sPathReportes);
		}
		
		parameters.put("con_grafico", this.conGraficoReporte);
		
		JasperReport jasperReport = (JasperReport)JRLoader.loadObject(reportFile);
				
		this.cargarDatosCliente();
		
		ArrayList<Classe> classes=new ArrayList<Classe>();		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			
			
		} else {
			//FK DEBERIA TRAERSE DE ANTEMANO
			
		}
								
		
		//CLASSES PARA REPORTES OBJETOS RELACIONADOS
		if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
			classes=new ArrayList<Classe>();
		}
		
		JRBeanArrayDataSource jrbeanArrayDataSourceBodegaProducto=null;
		
		if(this.sTipoReporteExtra!=null && !this.sTipoReporteExtra.equals("")) {
			BodegaProductoConstantesFunciones.S_TIPOREPORTE_EXTRA=this.sTipoReporteExtra;
		} else {
			BodegaProductoConstantesFunciones.S_TIPOREPORTE_EXTRA="";
		}
		
		jrbeanArrayDataSourceBodegaProducto=new JRBeanArrayDataSource(BodegaProductoJInternalFrame.TraerBodegaProductoBeans(bodegaproductosParaReportes,classes).toArray());
		
		jasperPrint = JasperFillManager.fillReport(jasperReport,parameters,jrbeanArrayDataSourceBodegaProducto);
				
		
		String sPathDest=Constantes.SUNIDAD_ARCHIVOS+":/"+Constantes.SCONTEXTSERVER+"/"+BodegaProductoConstantesFunciones.SCHEMA+"/reportes";
		
		File filePathDest = new File(sPathDest);
		
		if(!filePathDest.exists()) {
			filePathDest.mkdirs();				
		}
				
		String sDestFileName=sPathDest+"/"+BodegaProductoConstantesFunciones.CLASSNAME;
				
		if(this.sTipoArchivoReporte=="VISUALIZAR") {
			JasperViewer jasperViewer = new JasperViewer(jasperPrint,false) ;
			jasperViewer.setVisible(true) ; 

		} else if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML") {	
			//JasperFillManager.fillReportToFile(reportFile.getAbsolutePath(),parameters, new JRBeanArrayDataSource(BodegaProductoBean.TraerBodegaProductoBeans(bodegaproductosParaReportes).toArray()));
							
			if(this.sTipoArchivoReporte=="HTML") {
				sDestFileName+=".html";
				JasperExportManager.exportReportToHtmlFile(jasperPrint,sDestFileName);
					
			} else if(this.sTipoArchivoReporte=="PDF") {
				sDestFileName+=".pdf";
				JasperExportManager.exportReportToPdfFile(jasperPrint,sDestFileName);
			} else {
				sDestFileName+=".xml";
				JasperExportManager.exportReportToXmlFile(jasperPrint,sDestFileName, false);
			}	
			
		} else if(this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {
				
			if(this.sTipoArchivoReporte=="WORD") {
				sDestFileName+=".rtf";
					
				JRRtfExporter exporter = new JRRtfExporter();
		
				exporter.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporter.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
		
				exporter.exportReport();
				
			} else	{
				sDestFileName+=".xls";
					
				JRXlsExporter exporterXls = new JRXlsExporter();
		
				exporterXls.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporterXls.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
				exporterXls.setParameter(JRXlsExporterParameter.IS_ONE_PAGE_PER_SHEET, Boolean.TRUE);
		
				exporterXls.exportReport();
			}
			
		} else if(this.sTipoArchivoReporte=="EXCEL2"||this.sTipoArchivoReporte=="EXCEL2_2") {
			//sDestFileName+=".xlsx";
			
			if(this.sTipoReporte.equals("NORMAL")) {
				this.generarExcelReporteBodegaProductos(sAccionBusqueda,sTipoArchivoReporte,bodegaproductosParaReportes);
			
			} else if(this.sTipoReporte.equals("FORMULARIO")){
				this.generarExcelReporteVerticalBodegaProductos(sAccionBusqueda,sTipoArchivoReporte,bodegaproductosParaReportes,false);
			
			} else if(this.sTipoReporte.equals("DINAMICO")){
				
				if(this.sTipoReporteDinamico.equals("NORMAL")) {
					
					this.jButtonGenerarExcelReporteDinamicoBodegaProductoActionPerformed(null);
					//this.generarExcelReporteBodegaProductos(sAccionBusqueda,sTipoArchivoReporte,bodegaproductosParaReportes);
					
				
				} else if(this.sTipoReporteDinamico.equals("FORMULARIO")){
					this.generarExcelReporteVerticalBodegaProductos(sAccionBusqueda,sTipoArchivoReporte,bodegaproductosParaReportes,true);
				
				} else if(this.sTipoReporteDinamico.equals("RELACIONES")){
					this.generarExcelReporteRelacionesBodegaProductos(sAccionBusqueda,sTipoArchivoReporte,bodegaproductosParaReportes,true);
				}
				
			} else if(this.sTipoReporte.equals("RELACIONES")){
				this.generarExcelReporteRelacionesBodegaProductos(sAccionBusqueda,sTipoArchivoReporte,bodegaproductosParaReportes,false);
			}
		}
		
		if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML"||this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {				
			JOptionPane.showMessageDialog(this,"REPORTE "+sDestFileName+" GENERADO SATISFACTORIAMENTE","REPORTES ",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteBodegaProductos(String sAccionBusqueda,String sTipoArchivoReporte,List<BodegaProducto> bodegaproductosParaReportes) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"bodegaproducto";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("BodegaProductos");
         
        int iRow = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderBodegaProducto("NORMAL",row,workbook);
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux=null;
		
		int i=0;
		
      	for(BodegaProducto bodegaproducto : bodegaproductosParaReportes) {            
			row = sheet.createRow(iRow++);
			iCell = 0;
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				cellStyleDataAux=cellStyleData;
			}
			
			BodegaProductoConstantesFunciones.generarExcelReporteDataBodegaProducto("NORMAL",row,workbook,bodegaproducto,cellStyleDataAux);
		
			
			/*
            Cell cell0 = row.createCell(0);
            cell0.setCellValue(country.getName());
            Cell cell1 = row.createCell(1);
            cell1.setCellValue(country.getShortCode());
			*/
			
			i++;
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.bodegaproductoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Bodega Producto",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteHeaderBodegaProducto(String sTipo,Row row,Workbook workbook) {
		
		BodegaProductoConstantesFunciones.generarExcelReporteHeaderBodegaProducto(sTipo,row,workbook);
		
		/*
		Cell cell=null;
		int iCell=0;
		
		CellStyle cellStyle = workbook.createCellStyle();
		cellStyle.setFillBackgroundColor(IndexedColors.GREEN.getIndex());
		cellStyle.setFillPattern(CellStyle.ALIGN_FILL);
		*/
		
	}
	
	public void generarExcelReporteVerticalBodegaProductos(String sAccionBusqueda,String sTipoArchivoReporte,List<BodegaProducto> bodegaproductosParaReportes,Boolean paraDinamico) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"bodegaproducto_vertical";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("BodegaProductos");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		CellStyle cellStyle = Funciones2.getStyleTitulo(workbook,"ZEBRA");;
		
		CellStyle cellStyleTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL_VERTICAL");
		
		
		for(BodegaProducto bodegaproducto : bodegaproductosParaReportes) {
			row = sheet.createRow(iRow++);
			iRowLast=iRow - 1;
			
			cell = row.createCell(0);
			cell.setCellValue(BodegaProductoConstantesFunciones.getBodegaProductoDescripcion(bodegaproducto));
			cell.setCellStyle(cellStyleTitulo);
			
			sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
	
			


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(BodegaProductoConstantesFunciones.LABEL_IDEMPRESA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_IDEMPRESA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(bodegaproducto.getempresa_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(BodegaProductoConstantesFunciones.LABEL_IDSUCURSAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_IDSUCURSAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(bodegaproducto.getsucursal_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(BodegaProductoConstantesFunciones.LABEL_IDBODEGA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_IDBODEGA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(bodegaproducto.getbodega_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(BodegaProductoConstantesFunciones.LABEL_IDPRODUCTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_IDPRODUCTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(bodegaproducto.getproducto_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(BodegaProductoConstantesFunciones.LABEL_IDUNIDAD))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_IDUNIDAD);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(bodegaproducto.getunidad_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(BodegaProductoConstantesFunciones.LABEL_IDCENTROCOSTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_IDCENTROCOSTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(bodegaproducto.getcentrocosto_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(BodegaProductoConstantesFunciones.LABEL_IDESTADOBODEGAPRODUCTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_IDESTADOBODEGAPRODUCTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(bodegaproducto.getestadobodegaproducto_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(BodegaProductoConstantesFunciones.LABEL_DESCRIPCION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_DESCRIPCION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(bodegaproducto.getdescripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(BodegaProductoConstantesFunciones.LABEL_CANTIDADDISPONIBLE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_CANTIDADDISPONIBLE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(bodegaproducto.getcantidad_disponible());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(BodegaProductoConstantesFunciones.LABEL_STOCKMAXIMO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_STOCKMAXIMO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(bodegaproducto.getstock_maximo());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(BodegaProductoConstantesFunciones.LABEL_STOCKMINIMO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_STOCKMINIMO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(bodegaproducto.getstock_minimo());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(BodegaProductoConstantesFunciones.LABEL_IVA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_IVA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(bodegaproducto.getiva());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(BodegaProductoConstantesFunciones.LABEL_IVAVALOR))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_IVAVALOR);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(bodegaproducto.getiva_valor());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(BodegaProductoConstantesFunciones.LABEL_DESCUENTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_DESCUENTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(bodegaproducto.getdescuento());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(BodegaProductoConstantesFunciones.LABEL_DESCUENTOVALOR))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_DESCUENTOVALOR);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(bodegaproducto.getdescuento_valor());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(BodegaProductoConstantesFunciones.LABEL_ICE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_ICE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(bodegaproducto.getice());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(BodegaProductoConstantesFunciones.LABEL_ICEVALOR))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_ICEVALOR);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(bodegaproducto.getice_valor());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(BodegaProductoConstantesFunciones.LABEL_COSTOPROMEDIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_COSTOPROMEDIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(bodegaproducto.getcosto_promedio());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(BodegaProductoConstantesFunciones.LABEL_PORCENTAJECOMISION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_PORCENTAJECOMISION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(bodegaproducto.getporcentaje_comision());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(BodegaProductoConstantesFunciones.LABEL_PRECIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_PRECIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(bodegaproducto.getprecio());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(BodegaProductoConstantesFunciones.LABEL_ULTIMOCOSTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_ULTIMOCOSTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(bodegaproducto.getultimo_costo());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(BodegaProductoConstantesFunciones.LABEL_COSTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_COSTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(bodegaproducto.getcosto());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(BodegaProductoConstantesFunciones.LABEL_ARANCELPORCENTAJE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_ARANCELPORCENTAJE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(bodegaproducto.getarancel_porcentaje());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(BodegaProductoConstantesFunciones.LABEL_ICEPORCENTAJE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_ICEPORCENTAJE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(bodegaproducto.getice_porcentaje());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(BodegaProductoConstantesFunciones.LABEL_PESO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_PESO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(bodegaproducto.getpeso());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(BodegaProductoConstantesFunciones.LABEL_CONIVA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_CONIVA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(bodegaproducto.getcon_iva()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(BodegaProductoConstantesFunciones.LABEL_CONIMPUESTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_CONIMPUESTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(bodegaproducto.getcon_impuesto()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(BodegaProductoConstantesFunciones.LABEL_CONICE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_CONICE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(bodegaproducto.getcon_ice()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(BodegaProductoConstantesFunciones.LABEL_ESTAACTIVO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_ESTAACTIVO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(bodegaproducto.getesta_activo()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(BodegaProductoConstantesFunciones.LABEL_CONBALANZA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_CONBALANZA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(bodegaproducto.getcon_balanza()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(BodegaProductoConstantesFunciones.LABEL_CANTIDADPEDIDA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_CANTIDADPEDIDA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(bodegaproducto.getcantidad_pedida());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(BodegaProductoConstantesFunciones.LABEL_CANTIDADFISICA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_CANTIDADFISICA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(bodegaproducto.getcantidad_fisica());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(BodegaProductoConstantesFunciones.LABEL_CANTIDADREQUERIDO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_CANTIDADREQUERIDO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(bodegaproducto.getcantidad_requerido());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(BodegaProductoConstantesFunciones.LABEL_PRECIOCOSTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_PRECIOCOSTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(bodegaproducto.getprecio_costo());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(BodegaProductoConstantesFunciones.LABEL_PRECIOPROMEDIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_PRECIOPROMEDIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(bodegaproducto.getprecio_promedio());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(BodegaProductoConstantesFunciones.LABEL_TOTALINGRESOS))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_TOTALINGRESOS);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(bodegaproducto.gettotal_ingresos());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(BodegaProductoConstantesFunciones.LABEL_TOTALEGRESOS))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_TOTALEGRESOS);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(bodegaproducto.gettotal_egresos());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(BodegaProductoConstantesFunciones.LABEL_TOTALPROVISION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_TOTALPROVISION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(bodegaproducto.gettotal_provision());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(BodegaProductoConstantesFunciones.LABEL_TOTALPROCESO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_TOTALPROCESO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(bodegaproducto.gettotal_proceso());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(BodegaProductoConstantesFunciones.LABEL_COSTOCALCULADO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_COSTOCALCULADO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(bodegaproducto.getcosto_calculado());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(BodegaProductoConstantesFunciones.LABEL_DIASPRODUCCION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_DIASPRODUCCION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(bodegaproducto.getdias_produccion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(BodegaProductoConstantesFunciones.LABEL_PRECIOREPOSICION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_PRECIOREPOSICION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(bodegaproducto.getprecio_reposicion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(BodegaProductoConstantesFunciones.LABEL_FECHAULTIMOPEDIDO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_FECHAULTIMOPEDIDO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(bodegaproducto.getfecha_ultimo_pedido());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(BodegaProductoConstantesFunciones.LABEL_FECHAINGRESO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_FECHAINGRESO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(bodegaproducto.getfecha_ingreso());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(BodegaProductoConstantesFunciones.LABEL_FECHAEGRESO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_FECHAEGRESO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(bodegaproducto.getfecha_egreso());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(BodegaProductoConstantesFunciones.LABEL_FECHAULTIMACOMPRA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_FECHAULTIMACOMPRA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(bodegaproducto.getfecha_ultima_compra());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(BodegaProductoConstantesFunciones.LABEL_FECHAULTIMAVENTA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_FECHAULTIMAVENTA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(bodegaproducto.getfecha_ultima_venta());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(BodegaProductoConstantesFunciones.LABEL_FECHAULTIMADEVOLUCION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_FECHAULTIMADEVOLUCION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(bodegaproducto.getfecha_ultima_devolucion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEINVENTARIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEINVENTARIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(bodegaproducto.getcuentacontableinventario_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLECOSTOVENTA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLECOSTOVENTA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(bodegaproducto.getcuentacontablecostoventa_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEVENTA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEVENTA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(bodegaproducto.getcuentacontableventa_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEDESCUENTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEDESCUENTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(bodegaproducto.getcuentacontabledescuento_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEPRODUCCION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEPRODUCCION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(bodegaproducto.getcuentacontableproduccion_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEDEVOLUCION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEDEVOLUCION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(bodegaproducto.getcuentacontabledevolucion_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEINGRESODEBITO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEINGRESODEBITO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(bodegaproducto.getcuentacontableingresodebito_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEINGRESOCREDITO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEINGRESOCREDITO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(bodegaproducto.getcuentacontableingresocredito_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLERESULTADODEBITO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLERESULTADODEBITO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(bodegaproducto.getcuentacontableresultadodebito_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLERESULTADOCREDITO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLERESULTADOCREDITO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(bodegaproducto.getcuentacontableresultadocredito_descripcion());


			}						
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.bodegaproductoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Bodega Producto",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteRelacionesBodegaProductos(String sAccionBusqueda,String sTipoArchivoReporte,List<BodegaProducto> bodegaproductosParaReportes,Boolean paraDinamico) throws Exception {
		
		ArrayList<Classe> classes=new ArrayList<Classe>();
		List<BodegaProducto> bodegaproductosRespaldo=null;
		
		classes=BodegaProductoConstantesFunciones.getClassesRelationshipsOfBodegaProducto(new ArrayList<Classe>(),DeepLoadType.NONE,false);
					
		this.datosDeep=new DatosDeep();
		
		this.datosDeep.setIsDeep(false);
		this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
		this.datosDeep.setClases(classes);
			
		this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
		this.datosCliente.setIsConDeep(true);	
		this.datosCliente.setIsConExportar(false);
		
						
		this.bodegaproductoLogic.setDatosCliente(this.datosCliente);
		this.bodegaproductoLogic.setDatosDeep(this.datosDeep);
		this.bodegaproductoLogic.setIsConDeep(true);
		
		bodegaproductosRespaldo=this.bodegaproductoLogic.getBodegaProductos();
		
		this.bodegaproductoLogic.setBodegaProductos(bodegaproductosParaReportes);	
		this.bodegaproductoLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
		
		bodegaproductosParaReportes=this.bodegaproductoLogic.getBodegaProductos();
		this.bodegaproductoLogic.setBodegaProductos(bodegaproductosRespaldo);
		
		
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"bodegaproducto_relacion";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("BodegaProductos");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderBodegaProducto("NORMAL",row,workbook);
		
		int i=0;
		int i2=0;
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL");
		CellStyle cellStyleDataZebra = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux =null;
		CellStyle cellStyleDataAuxHijo =null;
		
		for(BodegaProducto bodegaproducto : bodegaproductosParaReportes) {			
			if(i!=0) {
				row = sheet.createRow(iRow++);				
				this.generarExcelReporteHeaderBodegaProducto("NORMAL",row,workbook);
			}
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				//cellStyleDataAux=cellStyleData;
			}
			
			row = sheet.createRow(iRow++);						
			BodegaProductoConstantesFunciones.generarExcelReporteDataBodegaProducto("NORMAL",row,workbook,bodegaproducto,cellStyleDataAux);
		
			
			
			
			i++;
        }
        
		/*
		row = sheet.createRow(iRow++);
		iRowLast=iRow - 1;
			
		cell = row.createCell(0);
		cell.setCellValue(BodegaProductoConstantesFunciones.getBodegaProductoDescripcion(bodegaproducto));
		cell.setCellStyle(cellStyleTitulo);
			
		sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
		*/
		
			
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.bodegaproductoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Bodega Producto",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	
	public Boolean existeColumnaReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoBodegaProducto.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoBodegaProducto.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public Boolean existeRelacionReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoBodegaProducto.getjListRelacionesSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoBodegaProducto.getjListRelacionesSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public void startProcessBodegaProducto() throws Exception {		
		this.startProcessBodegaProducto(true);
	}
	
	public void startProcessBodegaProducto(Boolean conSplash) throws Exception {		
		//FuncionesSwing.enableDisablePanels(false,this.jTabbedPaneBusquedasBodegaProducto ,this.jPanelParametrosReportesBodegaProducto, this.jScrollPanelDatosBodegaProducto,this.jPanelPaginacionBodegaProducto, this.jScrollPanelDatosEdicionBodegaProducto, this.jPanelAccionesBodegaProducto,this.jPanelAccionesFormularioBodegaProducto,this.jmenuBarBodegaProducto,this.jmenuBarDetalleBodegaProducto,this.jTtoolBarBodegaProducto,this.jTtoolBarDetalleBodegaProducto);		
		
		final JTabbedPane jTabbedPaneBusquedasBodegaProducto=this.jTabbedPaneBusquedasBodegaProducto; 
		
		final JPanel jPanelParametrosReportesBodegaProducto=this.jPanelParametrosReportesBodegaProducto;
		//final JScrollPane jScrollPanelDatosBodegaProducto=this.jScrollPanelDatosBodegaProducto;
		final JTable jTableDatosBodegaProducto=this.jTableDatosBodegaProducto;		
		final JPanel jPanelPaginacionBodegaProducto=this.jPanelPaginacionBodegaProducto;
		//final JScrollPane jScrollPanelDatosEdicionBodegaProducto=this.jScrollPanelDatosEdicionBodegaProducto;
		final JPanel jPanelAccionesBodegaProducto=this.jPanelAccionesBodegaProducto;
		
		JPanel jPanelCamposAuxiliarBodegaProducto=new JPanelMe();
		JPanel jPanelAccionesFormularioAuxiliarBodegaProducto=new JPanelMe();
		
		if(this.jInternalFrameDetalleFormBodegaProducto!=null) {
			jPanelCamposAuxiliarBodegaProducto=this.jInternalFrameDetalleFormBodegaProducto.jPanelCamposBodegaProducto;
			jPanelAccionesFormularioAuxiliarBodegaProducto=this.jInternalFrameDetalleFormBodegaProducto.jPanelAccionesFormularioBodegaProducto;
		}
		
		final JPanel jPanelCamposBodegaProducto=jPanelCamposAuxiliarBodegaProducto;
		final JPanel jPanelAccionesFormularioBodegaProducto=jPanelAccionesFormularioAuxiliarBodegaProducto;
		
		
		final JMenuBar jmenuBarBodegaProducto=this.jmenuBarBodegaProducto;
		final JToolBar jTtoolBarBodegaProducto=this.jTtoolBarBodegaProducto;		
		
		
		JMenuBar jmenuBarDetalleAuxiliarBodegaProducto=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarBodegaProducto=new JToolBar();		
		
		if(this.jInternalFrameDetalleFormBodegaProducto!=null) {
			jmenuBarDetalleAuxiliarBodegaProducto=this.jInternalFrameDetalleFormBodegaProducto.jmenuBarDetalleBodegaProducto;
			jTtoolBarDetalleAuxiliarBodegaProducto=this.jInternalFrameDetalleFormBodegaProducto.jTtoolBarDetalleBodegaProducto;
		}
		
		final JMenuBar jmenuBarDetalleBodegaProducto=jmenuBarDetalleAuxiliarBodegaProducto;
		final JToolBar jTtoolBarDetalleBodegaProducto=jTtoolBarDetalleAuxiliarBodegaProducto;		
		
		
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("START");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasBodegaProducto;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesBodegaProducto;
			processRunnable.jTableDatos=jTableDatosBodegaProducto;
			processRunnable.jPanelCampos=jPanelCamposBodegaProducto;
			processRunnable.jPanelPaginacion=jPanelPaginacionBodegaProducto;
			processRunnable.jPanelAcciones=jPanelAccionesBodegaProducto;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioBodegaProducto;
			
			
			processRunnable.jmenuBar=jmenuBarBodegaProducto;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleBodegaProducto;
			processRunnable.jTtoolBar=jTtoolBarBodegaProducto;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleBodegaProducto;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasBodegaProducto ,jPanelParametrosReportesBodegaProducto,jTableDatosBodegaProducto, /*jScrollPanelDatosBodegaProducto,*/jPanelCamposBodegaProducto,jPanelPaginacionBodegaProducto, /*jScrollPanelDatosEdicionBodegaProducto,*/ jPanelAccionesBodegaProducto,jPanelAccionesFormularioBodegaProducto,jmenuBarBodegaProducto,jmenuBarDetalleBodegaProducto,jTtoolBarBodegaProducto,jTtoolBarDetalleBodegaProducto);
		
			startProcess();//this.
		}
						
		/*
		if(conSplash) {
			SwingUtilities.invokeLater(new Runnable() {
			      public void run() {
			    	  try {
							FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasBodegaProducto ,jPanelParametrosReportesBodegaProducto, jScrollPanelDatosBodegaProducto,jPanelPaginacionBodegaProducto, jScrollPanelDatosEdicionBodegaProducto, jPanelAccionesBodegaProducto,jPanelAccionesFormularioBodegaProducto,jmenuBarBodegaProducto,jmenuBarDetalleBodegaProducto,jTtoolBarBodegaProducto,jTtoolBarDetalleBodegaProducto);
						
							startProcess();//this.
							
						} catch (Exception e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
			      }
			});
		}
		*/
	}
	
	public void finishProcessBodegaProducto() {// throws Exception 
		this.finishProcessBodegaProducto(true);
	}
	
	public void finishProcessBodegaProducto(Boolean conSplash) {// throws Exception 
		//FuncionesSwing.enableDisablePanels(true,this.jTabbedPaneBusquedasBodegaProducto ,this.jPanelParametrosReportesBodegaProducto, this.jScrollPanelDatosBodegaProducto,this.jPanelPaginacionBodegaProducto, this.jScrollPanelDatosEdicionBodegaProducto, this.jPanelAccionesBodegaProducto,this.jPanelAccionesFormularioBodegaProducto,this.jmenuBarBodegaProducto,this.jmenuBarDetalleBodegaProducto,this.jTtoolBarBodegaProducto,this.jTtoolBarDetalleBodegaProducto);		
		
		final JTabbedPane jTabbedPaneBusquedasBodegaProducto=this.jTabbedPaneBusquedasBodegaProducto; 
		
		final JPanel jPanelParametrosReportesBodegaProducto=this.jPanelParametrosReportesBodegaProducto;
		//final JScrollPane jScrollPanelDatosBodegaProducto=this.jScrollPanelDatosBodegaProducto;
		final JTable jTableDatosBodegaProducto=this.jTableDatosBodegaProducto;		
		final JPanel jPanelPaginacionBodegaProducto=this.jPanelPaginacionBodegaProducto;
		//final JScrollPane jScrollPanelDatosEdicionBodegaProducto=this.jScrollPanelDatosEdicionBodegaProducto;
		final JPanel jPanelAccionesBodegaProducto=this.jPanelAccionesBodegaProducto;
		
		JPanel jPanelCamposAuxiliarBodegaProducto=new JPanel();
		JPanel jPanelAccionesFormularioAuxiliarBodegaProducto=new JPanel();
		
		if(this.jInternalFrameDetalleFormBodegaProducto!=null) {
			jPanelCamposAuxiliarBodegaProducto=this.jInternalFrameDetalleFormBodegaProducto.jPanelCamposBodegaProducto;
			jPanelAccionesFormularioAuxiliarBodegaProducto=this.jInternalFrameDetalleFormBodegaProducto.jPanelAccionesFormularioBodegaProducto;
		}
		
		final JPanel jPanelCamposBodegaProducto=jPanelCamposAuxiliarBodegaProducto;
		final JPanel jPanelAccionesFormularioBodegaProducto=jPanelAccionesFormularioAuxiliarBodegaProducto;
		
		
		final JMenuBar jmenuBarBodegaProducto=this.jmenuBarBodegaProducto;		
		final JToolBar jTtoolBarBodegaProducto=this.jTtoolBarBodegaProducto;
				
		JMenuBar jmenuBarDetalleAuxiliarBodegaProducto=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarBodegaProducto=new JToolBar();
		
		if(this.jInternalFrameDetalleFormBodegaProducto!=null) {
			jmenuBarDetalleAuxiliarBodegaProducto=this.jInternalFrameDetalleFormBodegaProducto.jmenuBarDetalleBodegaProducto;
			jTtoolBarDetalleAuxiliarBodegaProducto=this.jInternalFrameDetalleFormBodegaProducto.jTtoolBarDetalleBodegaProducto;		
		}
		
		final JMenuBar jmenuBarDetalleBodegaProducto=jmenuBarDetalleAuxiliarBodegaProducto;
		final JToolBar jTtoolBarDetalleBodegaProducto=jTtoolBarDetalleAuxiliarBodegaProducto;
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("END");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasBodegaProducto;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesBodegaProducto;
			processRunnable.jTableDatos=jTableDatosBodegaProducto;
			processRunnable.jPanelCampos=jPanelCamposBodegaProducto;
			processRunnable.jPanelPaginacion=jPanelPaginacionBodegaProducto;
			processRunnable.jPanelAcciones=jPanelAccionesBodegaProducto;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioBodegaProducto;
			
			
			processRunnable.jmenuBar=jmenuBarBodegaProducto;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleBodegaProducto;
			processRunnable.jTtoolBar=jTtoolBarBodegaProducto;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleBodegaProducto;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			if(conSplash) {
				SwingUtilities.invokeLater(new RunnableProceso(true,this,jTabbedPaneBusquedasBodegaProducto ,jPanelParametrosReportesBodegaProducto, jTableDatosBodegaProducto,/*jScrollPanelDatosBodegaProducto,*/jPanelCamposBodegaProducto,jPanelPaginacionBodegaProducto, /*jScrollPanelDatosEdicionBodegaProducto,*/ jPanelAccionesBodegaProducto,jPanelAccionesFormularioBodegaProducto,jmenuBarBodegaProducto,jmenuBarDetalleBodegaProducto,jTtoolBarBodegaProducto,jTtoolBarDetalleBodegaProducto));
			}
		}						
	}
	
	/*
	public void habilitarDeshabilitarControlesBodegaProducto(Boolean esHabilitar,Boolean conDetalle) {
		this.habilitarDeshabilitarToolBarBodegaProducto(esHabilitar,conDetalle);
		this.habilitarDeshabilitarMenuBodegaProducto(esHabilitar,conDetalle);
	}
	
	public void habilitarDeshabilitarToolBarBodegaProducto(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jTtoolBarBodegaProducto,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jTtoolBarDetalleBodegaProducto,esHabilitar,1,1);
		}
	}
	
	public void habilitarDeshabilitarMenuBodegaProducto(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jmenuBarBodegaProducto,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jmenuBarDetalleBodegaProducto,esHabilitar,1,1);
		}
	}
	*/
	
	
	
	public void procesarBusqueda(String sAccionBusqueda) throws Exception {		
		String  finalQueryPaginacion=this.bodegaproductoConstantesFunciones.getsFinalQueryBodegaProducto();
		String  finalQueryPaginacionTodos=this.bodegaproductoConstantesFunciones.getsFinalQueryBodegaProducto();
		
		Boolean esBusqueda=false;
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!sAccionBusqueda.equals("Todos"))	{
			esBusqueda=true;
		}
		
		this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
		this.arrDatoGeneralNo= new  ArrayList<String>();
		
		ArrayList<String> arrColumnasGlobalesNo=BodegaProductoConstantesFunciones.getArrayColumnasGlobalesNoBodegaProducto(this.arrDatoGeneral);
		ArrayList<String> arrColumnasGlobales=BodegaProductoConstantesFunciones.getArrayColumnasGlobalesBodegaProducto(this.arrDatoGeneral,arrColumnasGlobalesNo);
		
			
		String  finalQueryGlobal="";
		
		finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,!esBusqueda,esBusqueda,arrColumnasGlobales,BodegaProductoConstantesFunciones.TABLENAME);
		
		String sOrderBy="";
		
		
		sOrderBy=Funciones2.getFinalQueryOrderBy(this.arrOrderBy);
		
		
		if(!sOrderBy.equals("")) {			
			finalQueryPaginacion=sOrderBy;
			finalQueryPaginacionTodos=sOrderBy;
		}
		
		
		//INICIALIZA ELIMINADOS
		this.bodegaproductosEliminados= new ArrayList<BodegaProducto>();
		
		if(!this.isEntroOnLoad) {
			this.onLoad();
		}/* else {
			this.isEntroOnLoad=false;
		}*/
		
		
		
				
		try	{		
			
			//this.startProcessBodegaProducto();
		
				///*BodegaProductoSessionBean*/this.bodegaproductoSessionBean=new BodegaProductoSessionBean();
			
			if(this.bodegaproductoSessionBean==null) {
				this.bodegaproductoSessionBean=new BodegaProductoSessionBean();
			}
			
			//ACTUALIZA EL TAMANIO DE PAGINACION DESDE EL COMBO
			if(this.sTipoPaginacion!=null && !this.sTipoPaginacion.equals("")) {
				if(!this.sTipoPaginacion.equals("TODOS")) {
					this.iNumeroPaginacion=Integer.parseInt(this.sTipoPaginacion);
				} else {
					this.iNumeroPaginacion=-1;
					this.iNumeroPaginacionPagina=-1;
				}
			} else {
				if(this.iNumeroPaginacion==null || (this.iNumeroPaginacion!=null && this.iNumeroPaginacion<=0)) {
					this.iNumeroPaginacion=BodegaProductoConstantesFunciones.INUMEROPAGINACION;
				}
			}
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);
			
			this.cargarDatosCliente();
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			classes=BodegaProductoConstantesFunciones.getClassesForeignKeysOfBodegaProducto(new ArrayList<Classe>(),DeepLoadType.NONE);
			
		
			this.datosDeep=new DatosDeep();
			this.datosDeep.setIsDeep(false);
			this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
			this.datosDeep.setClases(classes);
			
			this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
			this.datosCliente.setIsConDeep(true);
			
			if(false) {//this.conExportar
				this.datosCliente.setIsConExportar(true);
				this.datosCliente.setDatosExportarParametros(Funciones2.getTipoExportar(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getcon_exportar_cabecera(),Funciones2.getTipoDelimiter(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getpath_exportar()+"/bodegaproducto."+Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario));
			} else {
				this.datosCliente.setIsConExportar(false);
			}
			
			bodegaproductosAux= new ArrayList<BodegaProducto>();
			
				
			bodegaproductoLogic.setDatosCliente(this.datosCliente);
			bodegaproductoLogic.setDatosDeep(this.datosDeep);
			bodegaproductoLogic.setIsConDeep(true);
			
			
			bodegaproductoLogic.getBodegaProductoDataAccess().setIsForForeingsKeysDataRelationships(true);
			
			if(sAccionBusqueda.equals("Todos") || sAccionBusqueda.equals("Query"))	{	
				if(sAccionBusqueda.equals("Todos")) {
					//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
					//this.sFinalQueryGeneral="";
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacionTodos );
					
					bodegaproductoLogic.getTodosBodegaProductos(finalQueryGlobal,pagination);
					
					//bodegaproductoLogic.getTodosBodegaProductosWithConnection(finalQueryGlobal,pagination);										
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
				
				if(bodegaproductoLogic.getBodegaProductos()==null|| bodegaproductoLogic.getBodegaProductos().size()==0)	{
					
				
				}
				
				if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(-1);
						this.pagination.setiMaxResults(-1);
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							bodegaproductosAux= new ArrayList<BodegaProducto>();
							bodegaproductosAux.addAll(bodegaproductoLogic.getBodegaProductos());						
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							bodegaproductosAux= new ArrayList<BodegaProducto>();
							bodegaproductosAux.addAll(bodegaproductos);
						}
						//ARCHITECTURE
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							bodegaproductoLogic.getTodosBodegaProductos(finalQueryGlobal+"",this.pagination);												
							
							//bodegaproductoLogic.getTodosBodegaProductosWithConnection(finalQueryGlobal+"",this.pagination);												
						} else if(Constantes.ISUSAEJBREMOTE) {
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
					}
					
					this.generarReporteBodegaProductos("Todos",bodegaproductoLogic.getBodegaProductos() );
					
					if(false) {//isMostrarTodosResultadosReporte						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							bodegaproductoLogic.setBodegaProductos(new ArrayList<BodegaProducto>());					
							bodegaproductoLogic.getBodegaProductos().addAll(bodegaproductosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							bodegaproductos=new ArrayList<BodegaProducto>();
							bodegaproductos.addAll(bodegaproductosAux);
						}
						//ARCHITECTURE
						
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);														
					}
				}
			}
			else if(sAccionBusqueda.equals("PorId")) {
				Long idBodegaProducto=0L;
				
				if(this.idActual!=null && this.idActual!=0L) {
					idBodegaProducto=this.idActual;
				
				} else if(this.idBodegaProductoActual!=null && this.idBodegaProductoActual!=0L) {
					idBodegaProducto=idBodegaProductoActual;
				}
				
					
				this.sDetalleReporte=BodegaProductoConstantesFunciones.getDetalleIndicePorId(idBodegaProducto);
				
				this.bodegaproductos=new ArrayList<BodegaProducto>();
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {					
					bodegaproductoLogic.getEntity(idBodegaProducto);
					
					//bodegaproductoLogic.getEntityWithConnection(idBodegaProducto);
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
								
				if(Constantes.ISUSAEJBLOGICLAYER) {
					bodegaproductoLogic.setBodegaProductos(new ArrayList<BodegaProducto>());
					bodegaproductoLogic.getBodegaProductos().add(bodegaproductoLogic.getBodegaProducto());
				
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.bodegaproductos=new ArrayList<BodegaProducto>();
					this.bodegaproductos.add(bodegaproducto);
				}
				
				if(bodegaproductoLogic.getBodegaProducto()==null)	{
					
				
				}			
			}
			
		
			else if(sAccionBusqueda.equals("FK_IdBodega")) {
				this.sDetalleReporte=BodegaProductoConstantesFunciones.getDetalleIndiceFK_IdBodega(id_bodegaFK_IdBodega);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					bodegaproductoLogic.getBodegaProductosFK_IdBodega(finalQueryGlobal,pagination,id_bodegaFK_IdBodega);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=BodegaProductoConstantesFunciones.getDetalleIndiceFK_IdBodega(id_bodegaFK_IdBodega);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=BodegaProductoConstantesFunciones.getDetalleIndiceFK_IdBodega(id_bodegaFK_IdBodega);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=bodegaproductoLogic.getBodegaProductos()==null||bodegaproductoLogic.getBodegaProductos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=bodegaproductos==null|| bodegaproductos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						bodegaproductosAux=new ArrayList<BodegaProducto>();
						bodegaproductosAux.addAll(bodegaproductoLogic.getBodegaProductos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							bodegaproductosAux=new ArrayList<BodegaProducto>();
							bodegaproductosAux.addAll(bodegaproductos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							bodegaproductoLogic.getBodegaProductosFK_IdBodega(finalQueryGlobal,pagination,id_bodegaFK_IdBodega);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=BodegaProductoConstantesFunciones.getDetalleIndiceFK_IdBodega(id_bodegaFK_IdBodega);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=BodegaProductoConstantesFunciones.getDetalleIndiceFK_IdBodega(id_bodegaFK_IdBodega);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteBodegaProductos("FK_IdBodega",bodegaproductoLogic.getBodegaProductos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteBodegaProductos("FK_IdBodega",bodegaproductos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						bodegaproductoLogic.setBodegaProductos(new ArrayList<BodegaProducto>());
						bodegaproductoLogic.getBodegaProductos().addAll(bodegaproductosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							bodegaproductos=new ArrayList<BodegaProducto>();
							bodegaproductos.addAll(bodegaproductosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdCentroCosto")) {
				this.sDetalleReporte=BodegaProductoConstantesFunciones.getDetalleIndiceFK_IdCentroCosto(id_centro_costoFK_IdCentroCosto);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					bodegaproductoLogic.getBodegaProductosFK_IdCentroCosto(finalQueryGlobal,pagination,id_centro_costoFK_IdCentroCosto);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=BodegaProductoConstantesFunciones.getDetalleIndiceFK_IdCentroCosto(id_centro_costoFK_IdCentroCosto);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=BodegaProductoConstantesFunciones.getDetalleIndiceFK_IdCentroCosto(id_centro_costoFK_IdCentroCosto);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=bodegaproductoLogic.getBodegaProductos()==null||bodegaproductoLogic.getBodegaProductos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=bodegaproductos==null|| bodegaproductos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						bodegaproductosAux=new ArrayList<BodegaProducto>();
						bodegaproductosAux.addAll(bodegaproductoLogic.getBodegaProductos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							bodegaproductosAux=new ArrayList<BodegaProducto>();
							bodegaproductosAux.addAll(bodegaproductos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							bodegaproductoLogic.getBodegaProductosFK_IdCentroCosto(finalQueryGlobal,pagination,id_centro_costoFK_IdCentroCosto);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=BodegaProductoConstantesFunciones.getDetalleIndiceFK_IdCentroCosto(id_centro_costoFK_IdCentroCosto);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=BodegaProductoConstantesFunciones.getDetalleIndiceFK_IdCentroCosto(id_centro_costoFK_IdCentroCosto);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteBodegaProductos("FK_IdCentroCosto",bodegaproductoLogic.getBodegaProductos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteBodegaProductos("FK_IdCentroCosto",bodegaproductos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						bodegaproductoLogic.setBodegaProductos(new ArrayList<BodegaProducto>());
						bodegaproductoLogic.getBodegaProductos().addAll(bodegaproductosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							bodegaproductos=new ArrayList<BodegaProducto>();
							bodegaproductos.addAll(bodegaproductosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdCuentaContableCostoVenta")) {
				this.sDetalleReporte=BodegaProductoConstantesFunciones.getDetalleIndiceFK_IdCuentaContableCostoVenta(id_cuenta_contable_costo_ventaFK_IdCuentaContableCostoVenta);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					bodegaproductoLogic.getBodegaProductosFK_IdCuentaContableCostoVenta(finalQueryGlobal,pagination,id_cuenta_contable_costo_ventaFK_IdCuentaContableCostoVenta);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=BodegaProductoConstantesFunciones.getDetalleIndiceFK_IdCuentaContableCostoVenta(id_cuenta_contable_costo_ventaFK_IdCuentaContableCostoVenta);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=BodegaProductoConstantesFunciones.getDetalleIndiceFK_IdCuentaContableCostoVenta(id_cuenta_contable_costo_ventaFK_IdCuentaContableCostoVenta);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=bodegaproductoLogic.getBodegaProductos()==null||bodegaproductoLogic.getBodegaProductos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=bodegaproductos==null|| bodegaproductos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						bodegaproductosAux=new ArrayList<BodegaProducto>();
						bodegaproductosAux.addAll(bodegaproductoLogic.getBodegaProductos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							bodegaproductosAux=new ArrayList<BodegaProducto>();
							bodegaproductosAux.addAll(bodegaproductos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							bodegaproductoLogic.getBodegaProductosFK_IdCuentaContableCostoVenta(finalQueryGlobal,pagination,id_cuenta_contable_costo_ventaFK_IdCuentaContableCostoVenta);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=BodegaProductoConstantesFunciones.getDetalleIndiceFK_IdCuentaContableCostoVenta(id_cuenta_contable_costo_ventaFK_IdCuentaContableCostoVenta);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=BodegaProductoConstantesFunciones.getDetalleIndiceFK_IdCuentaContableCostoVenta(id_cuenta_contable_costo_ventaFK_IdCuentaContableCostoVenta);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteBodegaProductos("FK_IdCuentaContableCostoVenta",bodegaproductoLogic.getBodegaProductos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteBodegaProductos("FK_IdCuentaContableCostoVenta",bodegaproductos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						bodegaproductoLogic.setBodegaProductos(new ArrayList<BodegaProducto>());
						bodegaproductoLogic.getBodegaProductos().addAll(bodegaproductosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							bodegaproductos=new ArrayList<BodegaProducto>();
							bodegaproductos.addAll(bodegaproductosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdCuentaContableIngresoCredito")) {
				this.sDetalleReporte=BodegaProductoConstantesFunciones.getDetalleIndiceFK_IdCuentaContableIngresoCredito(id_cuenta_contable_ingreso_creditoFK_IdCuentaContableIngresoCredito);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					bodegaproductoLogic.getBodegaProductosFK_IdCuentaContableIngresoCredito(finalQueryGlobal,pagination,id_cuenta_contable_ingreso_creditoFK_IdCuentaContableIngresoCredito);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=BodegaProductoConstantesFunciones.getDetalleIndiceFK_IdCuentaContableIngresoCredito(id_cuenta_contable_ingreso_creditoFK_IdCuentaContableIngresoCredito);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=BodegaProductoConstantesFunciones.getDetalleIndiceFK_IdCuentaContableIngresoCredito(id_cuenta_contable_ingreso_creditoFK_IdCuentaContableIngresoCredito);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=bodegaproductoLogic.getBodegaProductos()==null||bodegaproductoLogic.getBodegaProductos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=bodegaproductos==null|| bodegaproductos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						bodegaproductosAux=new ArrayList<BodegaProducto>();
						bodegaproductosAux.addAll(bodegaproductoLogic.getBodegaProductos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							bodegaproductosAux=new ArrayList<BodegaProducto>();
							bodegaproductosAux.addAll(bodegaproductos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							bodegaproductoLogic.getBodegaProductosFK_IdCuentaContableIngresoCredito(finalQueryGlobal,pagination,id_cuenta_contable_ingreso_creditoFK_IdCuentaContableIngresoCredito);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=BodegaProductoConstantesFunciones.getDetalleIndiceFK_IdCuentaContableIngresoCredito(id_cuenta_contable_ingreso_creditoFK_IdCuentaContableIngresoCredito);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=BodegaProductoConstantesFunciones.getDetalleIndiceFK_IdCuentaContableIngresoCredito(id_cuenta_contable_ingreso_creditoFK_IdCuentaContableIngresoCredito);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteBodegaProductos("FK_IdCuentaContableIngresoCredito",bodegaproductoLogic.getBodegaProductos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteBodegaProductos("FK_IdCuentaContableIngresoCredito",bodegaproductos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						bodegaproductoLogic.setBodegaProductos(new ArrayList<BodegaProducto>());
						bodegaproductoLogic.getBodegaProductos().addAll(bodegaproductosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							bodegaproductos=new ArrayList<BodegaProducto>();
							bodegaproductos.addAll(bodegaproductosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdCuentaContableIngresoDebito")) {
				this.sDetalleReporte=BodegaProductoConstantesFunciones.getDetalleIndiceFK_IdCuentaContableIngresoDebito(id_cuenta_contable_ingreso_debitoFK_IdCuentaContableIngresoDebito);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					bodegaproductoLogic.getBodegaProductosFK_IdCuentaContableIngresoDebito(finalQueryGlobal,pagination,id_cuenta_contable_ingreso_debitoFK_IdCuentaContableIngresoDebito);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=BodegaProductoConstantesFunciones.getDetalleIndiceFK_IdCuentaContableIngresoDebito(id_cuenta_contable_ingreso_debitoFK_IdCuentaContableIngresoDebito);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=BodegaProductoConstantesFunciones.getDetalleIndiceFK_IdCuentaContableIngresoDebito(id_cuenta_contable_ingreso_debitoFK_IdCuentaContableIngresoDebito);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=bodegaproductoLogic.getBodegaProductos()==null||bodegaproductoLogic.getBodegaProductos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=bodegaproductos==null|| bodegaproductos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						bodegaproductosAux=new ArrayList<BodegaProducto>();
						bodegaproductosAux.addAll(bodegaproductoLogic.getBodegaProductos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							bodegaproductosAux=new ArrayList<BodegaProducto>();
							bodegaproductosAux.addAll(bodegaproductos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							bodegaproductoLogic.getBodegaProductosFK_IdCuentaContableIngresoDebito(finalQueryGlobal,pagination,id_cuenta_contable_ingreso_debitoFK_IdCuentaContableIngresoDebito);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=BodegaProductoConstantesFunciones.getDetalleIndiceFK_IdCuentaContableIngresoDebito(id_cuenta_contable_ingreso_debitoFK_IdCuentaContableIngresoDebito);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=BodegaProductoConstantesFunciones.getDetalleIndiceFK_IdCuentaContableIngresoDebito(id_cuenta_contable_ingreso_debitoFK_IdCuentaContableIngresoDebito);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteBodegaProductos("FK_IdCuentaContableIngresoDebito",bodegaproductoLogic.getBodegaProductos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteBodegaProductos("FK_IdCuentaContableIngresoDebito",bodegaproductos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						bodegaproductoLogic.setBodegaProductos(new ArrayList<BodegaProducto>());
						bodegaproductoLogic.getBodegaProductos().addAll(bodegaproductosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							bodegaproductos=new ArrayList<BodegaProducto>();
							bodegaproductos.addAll(bodegaproductosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdCuentaContableProduccion")) {
				this.sDetalleReporte=BodegaProductoConstantesFunciones.getDetalleIndiceFK_IdCuentaContableProduccion(id_cuenta_contable_produccionFK_IdCuentaContableProduccion);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					bodegaproductoLogic.getBodegaProductosFK_IdCuentaContableProduccion(finalQueryGlobal,pagination,id_cuenta_contable_produccionFK_IdCuentaContableProduccion);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=BodegaProductoConstantesFunciones.getDetalleIndiceFK_IdCuentaContableProduccion(id_cuenta_contable_produccionFK_IdCuentaContableProduccion);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=BodegaProductoConstantesFunciones.getDetalleIndiceFK_IdCuentaContableProduccion(id_cuenta_contable_produccionFK_IdCuentaContableProduccion);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=bodegaproductoLogic.getBodegaProductos()==null||bodegaproductoLogic.getBodegaProductos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=bodegaproductos==null|| bodegaproductos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						bodegaproductosAux=new ArrayList<BodegaProducto>();
						bodegaproductosAux.addAll(bodegaproductoLogic.getBodegaProductos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							bodegaproductosAux=new ArrayList<BodegaProducto>();
							bodegaproductosAux.addAll(bodegaproductos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							bodegaproductoLogic.getBodegaProductosFK_IdCuentaContableProduccion(finalQueryGlobal,pagination,id_cuenta_contable_produccionFK_IdCuentaContableProduccion);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=BodegaProductoConstantesFunciones.getDetalleIndiceFK_IdCuentaContableProduccion(id_cuenta_contable_produccionFK_IdCuentaContableProduccion);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=BodegaProductoConstantesFunciones.getDetalleIndiceFK_IdCuentaContableProduccion(id_cuenta_contable_produccionFK_IdCuentaContableProduccion);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteBodegaProductos("FK_IdCuentaContableProduccion",bodegaproductoLogic.getBodegaProductos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteBodegaProductos("FK_IdCuentaContableProduccion",bodegaproductos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						bodegaproductoLogic.setBodegaProductos(new ArrayList<BodegaProducto>());
						bodegaproductoLogic.getBodegaProductos().addAll(bodegaproductosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							bodegaproductos=new ArrayList<BodegaProducto>();
							bodegaproductos.addAll(bodegaproductosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdCuentaContableResultadoCredito")) {
				this.sDetalleReporte=BodegaProductoConstantesFunciones.getDetalleIndiceFK_IdCuentaContableResultadoCredito(id_cuenta_contable_resultado_creditoFK_IdCuentaContableResultadoCredito);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					bodegaproductoLogic.getBodegaProductosFK_IdCuentaContableResultadoCredito(finalQueryGlobal,pagination,id_cuenta_contable_resultado_creditoFK_IdCuentaContableResultadoCredito);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=BodegaProductoConstantesFunciones.getDetalleIndiceFK_IdCuentaContableResultadoCredito(id_cuenta_contable_resultado_creditoFK_IdCuentaContableResultadoCredito);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=BodegaProductoConstantesFunciones.getDetalleIndiceFK_IdCuentaContableResultadoCredito(id_cuenta_contable_resultado_creditoFK_IdCuentaContableResultadoCredito);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=bodegaproductoLogic.getBodegaProductos()==null||bodegaproductoLogic.getBodegaProductos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=bodegaproductos==null|| bodegaproductos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						bodegaproductosAux=new ArrayList<BodegaProducto>();
						bodegaproductosAux.addAll(bodegaproductoLogic.getBodegaProductos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							bodegaproductosAux=new ArrayList<BodegaProducto>();
							bodegaproductosAux.addAll(bodegaproductos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							bodegaproductoLogic.getBodegaProductosFK_IdCuentaContableResultadoCredito(finalQueryGlobal,pagination,id_cuenta_contable_resultado_creditoFK_IdCuentaContableResultadoCredito);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=BodegaProductoConstantesFunciones.getDetalleIndiceFK_IdCuentaContableResultadoCredito(id_cuenta_contable_resultado_creditoFK_IdCuentaContableResultadoCredito);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=BodegaProductoConstantesFunciones.getDetalleIndiceFK_IdCuentaContableResultadoCredito(id_cuenta_contable_resultado_creditoFK_IdCuentaContableResultadoCredito);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteBodegaProductos("FK_IdCuentaContableResultadoCredito",bodegaproductoLogic.getBodegaProductos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteBodegaProductos("FK_IdCuentaContableResultadoCredito",bodegaproductos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						bodegaproductoLogic.setBodegaProductos(new ArrayList<BodegaProducto>());
						bodegaproductoLogic.getBodegaProductos().addAll(bodegaproductosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							bodegaproductos=new ArrayList<BodegaProducto>();
							bodegaproductos.addAll(bodegaproductosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdCuentaContableResultadoDebito")) {
				this.sDetalleReporte=BodegaProductoConstantesFunciones.getDetalleIndiceFK_IdCuentaContableResultadoDebito(id_cuenta_contable_resultado_debitoFK_IdCuentaContableResultadoDebito);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					bodegaproductoLogic.getBodegaProductosFK_IdCuentaContableResultadoDebito(finalQueryGlobal,pagination,id_cuenta_contable_resultado_debitoFK_IdCuentaContableResultadoDebito);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=BodegaProductoConstantesFunciones.getDetalleIndiceFK_IdCuentaContableResultadoDebito(id_cuenta_contable_resultado_debitoFK_IdCuentaContableResultadoDebito);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=BodegaProductoConstantesFunciones.getDetalleIndiceFK_IdCuentaContableResultadoDebito(id_cuenta_contable_resultado_debitoFK_IdCuentaContableResultadoDebito);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=bodegaproductoLogic.getBodegaProductos()==null||bodegaproductoLogic.getBodegaProductos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=bodegaproductos==null|| bodegaproductos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						bodegaproductosAux=new ArrayList<BodegaProducto>();
						bodegaproductosAux.addAll(bodegaproductoLogic.getBodegaProductos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							bodegaproductosAux=new ArrayList<BodegaProducto>();
							bodegaproductosAux.addAll(bodegaproductos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							bodegaproductoLogic.getBodegaProductosFK_IdCuentaContableResultadoDebito(finalQueryGlobal,pagination,id_cuenta_contable_resultado_debitoFK_IdCuentaContableResultadoDebito);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=BodegaProductoConstantesFunciones.getDetalleIndiceFK_IdCuentaContableResultadoDebito(id_cuenta_contable_resultado_debitoFK_IdCuentaContableResultadoDebito);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=BodegaProductoConstantesFunciones.getDetalleIndiceFK_IdCuentaContableResultadoDebito(id_cuenta_contable_resultado_debitoFK_IdCuentaContableResultadoDebito);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteBodegaProductos("FK_IdCuentaContableResultadoDebito",bodegaproductoLogic.getBodegaProductos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteBodegaProductos("FK_IdCuentaContableResultadoDebito",bodegaproductos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						bodegaproductoLogic.setBodegaProductos(new ArrayList<BodegaProducto>());
						bodegaproductoLogic.getBodegaProductos().addAll(bodegaproductosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							bodegaproductos=new ArrayList<BodegaProducto>();
							bodegaproductos.addAll(bodegaproductosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdCuentaContableVenta")) {
				this.sDetalleReporte=BodegaProductoConstantesFunciones.getDetalleIndiceFK_IdCuentaContableVenta(id_cuenta_contable_ventaFK_IdCuentaContableVenta);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					bodegaproductoLogic.getBodegaProductosFK_IdCuentaContableVenta(finalQueryGlobal,pagination,id_cuenta_contable_ventaFK_IdCuentaContableVenta);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=BodegaProductoConstantesFunciones.getDetalleIndiceFK_IdCuentaContableVenta(id_cuenta_contable_ventaFK_IdCuentaContableVenta);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=BodegaProductoConstantesFunciones.getDetalleIndiceFK_IdCuentaContableVenta(id_cuenta_contable_ventaFK_IdCuentaContableVenta);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=bodegaproductoLogic.getBodegaProductos()==null||bodegaproductoLogic.getBodegaProductos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=bodegaproductos==null|| bodegaproductos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						bodegaproductosAux=new ArrayList<BodegaProducto>();
						bodegaproductosAux.addAll(bodegaproductoLogic.getBodegaProductos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							bodegaproductosAux=new ArrayList<BodegaProducto>();
							bodegaproductosAux.addAll(bodegaproductos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							bodegaproductoLogic.getBodegaProductosFK_IdCuentaContableVenta(finalQueryGlobal,pagination,id_cuenta_contable_ventaFK_IdCuentaContableVenta);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=BodegaProductoConstantesFunciones.getDetalleIndiceFK_IdCuentaContableVenta(id_cuenta_contable_ventaFK_IdCuentaContableVenta);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=BodegaProductoConstantesFunciones.getDetalleIndiceFK_IdCuentaContableVenta(id_cuenta_contable_ventaFK_IdCuentaContableVenta);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteBodegaProductos("FK_IdCuentaContableVenta",bodegaproductoLogic.getBodegaProductos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteBodegaProductos("FK_IdCuentaContableVenta",bodegaproductos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						bodegaproductoLogic.setBodegaProductos(new ArrayList<BodegaProducto>());
						bodegaproductoLogic.getBodegaProductos().addAll(bodegaproductosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							bodegaproductos=new ArrayList<BodegaProducto>();
							bodegaproductos.addAll(bodegaproductosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEmpresa")) {
				this.sDetalleReporte=BodegaProductoConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					bodegaproductoLogic.getBodegaProductosFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=BodegaProductoConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=BodegaProductoConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=bodegaproductoLogic.getBodegaProductos()==null||bodegaproductoLogic.getBodegaProductos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=bodegaproductos==null|| bodegaproductos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						bodegaproductosAux=new ArrayList<BodegaProducto>();
						bodegaproductosAux.addAll(bodegaproductoLogic.getBodegaProductos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							bodegaproductosAux=new ArrayList<BodegaProducto>();
							bodegaproductosAux.addAll(bodegaproductos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							bodegaproductoLogic.getBodegaProductosFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=BodegaProductoConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=BodegaProductoConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteBodegaProductos("FK_IdEmpresa",bodegaproductoLogic.getBodegaProductos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteBodegaProductos("FK_IdEmpresa",bodegaproductos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						bodegaproductoLogic.setBodegaProductos(new ArrayList<BodegaProducto>());
						bodegaproductoLogic.getBodegaProductos().addAll(bodegaproductosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							bodegaproductos=new ArrayList<BodegaProducto>();
							bodegaproductos.addAll(bodegaproductosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdProducto")) {
				this.sDetalleReporte=BodegaProductoConstantesFunciones.getDetalleIndiceFK_IdProducto(id_productoFK_IdProducto);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					bodegaproductoLogic.getBodegaProductosFK_IdProducto(finalQueryGlobal,pagination,id_productoFK_IdProducto);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=BodegaProductoConstantesFunciones.getDetalleIndiceFK_IdProducto(id_productoFK_IdProducto);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=BodegaProductoConstantesFunciones.getDetalleIndiceFK_IdProducto(id_productoFK_IdProducto);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=bodegaproductoLogic.getBodegaProductos()==null||bodegaproductoLogic.getBodegaProductos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=bodegaproductos==null|| bodegaproductos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						bodegaproductosAux=new ArrayList<BodegaProducto>();
						bodegaproductosAux.addAll(bodegaproductoLogic.getBodegaProductos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							bodegaproductosAux=new ArrayList<BodegaProducto>();
							bodegaproductosAux.addAll(bodegaproductos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							bodegaproductoLogic.getBodegaProductosFK_IdProducto(finalQueryGlobal,pagination,id_productoFK_IdProducto);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=BodegaProductoConstantesFunciones.getDetalleIndiceFK_IdProducto(id_productoFK_IdProducto);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=BodegaProductoConstantesFunciones.getDetalleIndiceFK_IdProducto(id_productoFK_IdProducto);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteBodegaProductos("FK_IdProducto",bodegaproductoLogic.getBodegaProductos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteBodegaProductos("FK_IdProducto",bodegaproductos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						bodegaproductoLogic.setBodegaProductos(new ArrayList<BodegaProducto>());
						bodegaproductoLogic.getBodegaProductos().addAll(bodegaproductosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							bodegaproductos=new ArrayList<BodegaProducto>();
							bodegaproductos.addAll(bodegaproductosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdSucursal")) {
				this.sDetalleReporte=BodegaProductoConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					bodegaproductoLogic.getBodegaProductosFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=BodegaProductoConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=BodegaProductoConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=bodegaproductoLogic.getBodegaProductos()==null||bodegaproductoLogic.getBodegaProductos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=bodegaproductos==null|| bodegaproductos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						bodegaproductosAux=new ArrayList<BodegaProducto>();
						bodegaproductosAux.addAll(bodegaproductoLogic.getBodegaProductos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							bodegaproductosAux=new ArrayList<BodegaProducto>();
							bodegaproductosAux.addAll(bodegaproductos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							bodegaproductoLogic.getBodegaProductosFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=BodegaProductoConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=BodegaProductoConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteBodegaProductos("FK_IdSucursal",bodegaproductoLogic.getBodegaProductos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteBodegaProductos("FK_IdSucursal",bodegaproductos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						bodegaproductoLogic.setBodegaProductos(new ArrayList<BodegaProducto>());
						bodegaproductoLogic.getBodegaProductos().addAll(bodegaproductosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							bodegaproductos=new ArrayList<BodegaProducto>();
							bodegaproductos.addAll(bodegaproductosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdUnidad")) {
				this.sDetalleReporte=BodegaProductoConstantesFunciones.getDetalleIndiceFK_IdUnidad(id_unidadFK_IdUnidad);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					bodegaproductoLogic.getBodegaProductosFK_IdUnidad(finalQueryGlobal,pagination,id_unidadFK_IdUnidad);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=BodegaProductoConstantesFunciones.getDetalleIndiceFK_IdUnidad(id_unidadFK_IdUnidad);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=BodegaProductoConstantesFunciones.getDetalleIndiceFK_IdUnidad(id_unidadFK_IdUnidad);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=bodegaproductoLogic.getBodegaProductos()==null||bodegaproductoLogic.getBodegaProductos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=bodegaproductos==null|| bodegaproductos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						bodegaproductosAux=new ArrayList<BodegaProducto>();
						bodegaproductosAux.addAll(bodegaproductoLogic.getBodegaProductos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							bodegaproductosAux=new ArrayList<BodegaProducto>();
							bodegaproductosAux.addAll(bodegaproductos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							bodegaproductoLogic.getBodegaProductosFK_IdUnidad(finalQueryGlobal,pagination,id_unidadFK_IdUnidad);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=BodegaProductoConstantesFunciones.getDetalleIndiceFK_IdUnidad(id_unidadFK_IdUnidad);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=BodegaProductoConstantesFunciones.getDetalleIndiceFK_IdUnidad(id_unidadFK_IdUnidad);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteBodegaProductos("FK_IdUnidad",bodegaproductoLogic.getBodegaProductos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteBodegaProductos("FK_IdUnidad",bodegaproductos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						bodegaproductoLogic.setBodegaProductos(new ArrayList<BodegaProducto>());
						bodegaproductoLogic.getBodegaProductos().addAll(bodegaproductosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							bodegaproductos=new ArrayList<BodegaProducto>();
							bodegaproductos.addAll(bodegaproductosAux);
						}
						//ARCHITECTURE
					}
				}

			} 
		
		
		
		this.redimensionarTablaDatos();
		//this.refrescarForeignKeysDescripcionesBodegaProducto();
		
		
		if(this.conTotales) {
			this.crearFilaTotales();
		}		
		} catch (JRException e) {
			throw e;
		} catch(Exception e) {
			throw e;
      	} finally {
      		//this.finishProcessBodegaProducto();
      	}
		
	}				
	
	public void redimensionarTablaDatos() throws Exception {
		int iSizeTabla=0;
				
		iSizeTabla=this.getSizeTablaDatos();
		
		//ARCHITECTURE
		/*
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=bodegaproductoLogic.getBodegaProductos().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=bodegaproductos.size();
		}
		*/
		//ARCHITECTURE
											
		this.redimensionarTablaDatos(iSizeTabla);		
	}
	
	public Integer getSizeTablaDatos() throws Exception {
		Integer iSizeTabla=0;
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=bodegaproductoLogic.getBodegaProductos().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=bodegaproductos.size();
		}
		//ARCHITECTURE
											
		return iSizeTabla;		
	}
	
			
	public Boolean permiteMantenimiento(BodegaProducto bodegaproducto) {
		Boolean permite=true;
		
		if(this.bodegaproducto.getsType().equals(Constantes2.S_TOTALES)) {
			permite=false;
		}
		
		return permite;
	}
	
	public void traerValoresTablaTotales() throws Exception {
	}
	
	
	public void traerValoresTablaOrderBy() throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.arrOrderBy=BodegaProductoConstantesFunciones.getOrderByListaBodegaProducto();							
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.arrOrderBy=BodegaProductoConstantesFunciones.getOrderByListaBodegaProducto();
		}		
	}
	
	
	public Boolean existeFilaTotales() throws Exception {
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(BodegaProducto bodegaproducto:bodegaproductoLogic.getBodegaProductos()) {
				if(bodegaproducto.getsType().equals(Constantes2.S_TOTALES)) {
					bodegaproductoTotales=bodegaproducto;
					existe=true;
					break;
				}
			}
								
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(BodegaProducto bodegaproducto:this.bodegaproductos) {
				if(bodegaproducto.getsType().equals(Constantes2.S_TOTALES)) {
					bodegaproductoTotales=bodegaproducto;
					existe=true;
					break;
				}
			}
		}
		
		return existe;
	}
	
	public void crearFilaTotales() throws Exception {
		Boolean existe=false;
		
		existe=this.existeFilaTotales();
		
		if(!existe) {
			//SI NO ES UNO A UNO SE CREA FILA TOTALES
			this.bodegaproductoAux=new BodegaProducto();
			this.bodegaproductoAux.setsType(Constantes2.S_TOTALES);
			this.bodegaproductoAux.setIsNew(false);
			this.bodegaproductoAux.setIsChanged(false);
			this.bodegaproductoAux.setIsDeleted(false);
				
			if(Constantes.ISUSAEJBLOGICLAYER) {
				BodegaProductoConstantesFunciones.TotalizarValoresFilaBodegaProducto(this.bodegaproductoLogic.getBodegaProductos(),this.bodegaproductoAux);
				
				this.bodegaproductoLogic.getBodegaProductos().add(this.bodegaproductoAux);
				
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				BodegaProductoConstantesFunciones.TotalizarValoresFilaBodegaProducto(this.bodegaproductos,this.bodegaproductoAux);
				
				this.bodegaproductos.add(this.bodegaproductoAux);
			}
		}
	}
	
	public void quitarFilaTotales() throws Exception {
		bodegaproductoTotales=new BodegaProducto();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.bodegaproductoLogic.getBodegaProductos().remove(bodegaproductoTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.bodegaproductos.remove(bodegaproductoTotales);
			}
		}
	}
	
	public void actualizarFilaTotales() throws Exception {
		bodegaproductoTotales=new BodegaProducto();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(BodegaProducto bodegaproducto:bodegaproductoLogic.getBodegaProductos()) {
				if(bodegaproducto.getsType().equals(Constantes2.S_TOTALES)) {
					bodegaproductoTotales=bodegaproducto;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				BodegaProductoConstantesFunciones.TotalizarValoresFilaBodegaProducto(this.bodegaproductoLogic.getBodegaProductos(),bodegaproductoTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(BodegaProducto bodegaproducto:this.bodegaproductos) {
				if(bodegaproducto.getsType().equals(Constantes2.S_TOTALES)) {
					bodegaproductoTotales=bodegaproducto;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				BodegaProductoConstantesFunciones.TotalizarValoresFilaBodegaProducto(this.bodegaproductos,bodegaproductoTotales);
			}
		}
	}		
	
	public void recargarInformacion()throws Exception {
		try {
			sAccionBusqueda="Todos";
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
		}	
	}		
	
	
	public void getBodegaProductosFK_IdBodega()throws Exception {
		try {
			sAccionBusqueda="FK_IdBodega";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getBodegaProductosFK_IdBodegaProducto()throws Exception {
		try {
			sAccionBusqueda="FK_IdBodegaProducto";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getBodegaProductosFK_IdCentroCosto()throws Exception {
		try {
			sAccionBusqueda="FK_IdCentroCosto";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getBodegaProductosFK_IdCuentaContableCostoVenta()throws Exception {
		try {
			sAccionBusqueda="FK_IdCuentaContableCostoVenta";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getBodegaProductosFK_IdCuentaContableDescuento()throws Exception {
		try {
			sAccionBusqueda="FK_IdCuentaContableDescuento";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getBodegaProductosFK_IdCuentaContableDevolucion()throws Exception {
		try {
			sAccionBusqueda="FK_IdCuentaContableDevolucion";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getBodegaProductosFK_IdCuentaContableIngresoCredito()throws Exception {
		try {
			sAccionBusqueda="FK_IdCuentaContableIngresoCredito";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getBodegaProductosFK_IdCuentaContableIngresoDebito()throws Exception {
		try {
			sAccionBusqueda="FK_IdCuentaContableIngresoDebito";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getBodegaProductosFK_IdCuentaContableInventario()throws Exception {
		try {
			sAccionBusqueda="FK_IdCuentaContableInventario";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getBodegaProductosFK_IdCuentaContableProduccion()throws Exception {
		try {
			sAccionBusqueda="FK_IdCuentaContableProduccion";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getBodegaProductosFK_IdCuentaContableResultadoCredito()throws Exception {
		try {
			sAccionBusqueda="FK_IdCuentaContableResultadoCredito";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getBodegaProductosFK_IdCuentaContableResultadoDebito()throws Exception {
		try {
			sAccionBusqueda="FK_IdCuentaContableResultadoDebito";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getBodegaProductosFK_IdCuentaContableVenta()throws Exception {
		try {
			sAccionBusqueda="FK_IdCuentaContableVenta";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getBodegaProductosFK_IdEmpresa()throws Exception {
		try {
			sAccionBusqueda="FK_IdEmpresa";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getBodegaProductosFK_IdProducto()throws Exception {
		try {
			sAccionBusqueda="FK_IdProducto";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getBodegaProductosFK_IdSucursal()throws Exception {
		try {
			sAccionBusqueda="FK_IdSucursal";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getBodegaProductosFK_IdUnidad()throws Exception {
		try {
			sAccionBusqueda="FK_IdUnidad";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getBodegaProductoPorIdBodegaPorIdProductoPorIdUnidad()throws Exception {
		try {
			sAccionBusqueda="PorIdBodegaPorIdProductoPorIdUnidad";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			throw e;
		}
	}

	
	
	public void getBodegaProductosFK_IdBodega(String sFinalQuery,Long id_bodega)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					bodegaproductoLogic.getBodegaProductosFK_IdBodega(sFinalQuery,this.pagination,id_bodega);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getBodegaProductosFK_IdBodegaProducto(String sFinalQuery,Long id_estado_bodega_producto)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					bodegaproductoLogic.getBodegaProductosFK_IdBodegaProducto(sFinalQuery,this.pagination,id_estado_bodega_producto);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getBodegaProductosFK_IdCentroCosto(String sFinalQuery,Long id_centro_costo)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					bodegaproductoLogic.getBodegaProductosFK_IdCentroCosto(sFinalQuery,this.pagination,id_centro_costo);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getBodegaProductosFK_IdCuentaContableCostoVenta(String sFinalQuery,Long id_cuenta_contable_costo_venta)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					bodegaproductoLogic.getBodegaProductosFK_IdCuentaContableCostoVenta(sFinalQuery,this.pagination,id_cuenta_contable_costo_venta);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getBodegaProductosFK_IdCuentaContableDescuento(String sFinalQuery,Long id_cuenta_contable_descuento)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					bodegaproductoLogic.getBodegaProductosFK_IdCuentaContableDescuento(sFinalQuery,this.pagination,id_cuenta_contable_descuento);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getBodegaProductosFK_IdCuentaContableDevolucion(String sFinalQuery,Long id_cuenta_contable_devolucion)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					bodegaproductoLogic.getBodegaProductosFK_IdCuentaContableDevolucion(sFinalQuery,this.pagination,id_cuenta_contable_devolucion);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getBodegaProductosFK_IdCuentaContableIngresoCredito(String sFinalQuery,Long id_cuenta_contable_ingreso_credito)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					bodegaproductoLogic.getBodegaProductosFK_IdCuentaContableIngresoCredito(sFinalQuery,this.pagination,id_cuenta_contable_ingreso_credito);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getBodegaProductosFK_IdCuentaContableIngresoDebito(String sFinalQuery,Long id_cuenta_contable_ingreso_debito)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					bodegaproductoLogic.getBodegaProductosFK_IdCuentaContableIngresoDebito(sFinalQuery,this.pagination,id_cuenta_contable_ingreso_debito);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getBodegaProductosFK_IdCuentaContableInventario(String sFinalQuery,Long id_cuenta_contable_inventario)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					bodegaproductoLogic.getBodegaProductosFK_IdCuentaContableInventario(sFinalQuery,this.pagination,id_cuenta_contable_inventario);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getBodegaProductosFK_IdCuentaContableProduccion(String sFinalQuery,Long id_cuenta_contable_produccion)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					bodegaproductoLogic.getBodegaProductosFK_IdCuentaContableProduccion(sFinalQuery,this.pagination,id_cuenta_contable_produccion);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getBodegaProductosFK_IdCuentaContableResultadoCredito(String sFinalQuery,Long id_cuenta_contable_resultado_credito)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					bodegaproductoLogic.getBodegaProductosFK_IdCuentaContableResultadoCredito(sFinalQuery,this.pagination,id_cuenta_contable_resultado_credito);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getBodegaProductosFK_IdCuentaContableResultadoDebito(String sFinalQuery,Long id_cuenta_contable_resultado_debito)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					bodegaproductoLogic.getBodegaProductosFK_IdCuentaContableResultadoDebito(sFinalQuery,this.pagination,id_cuenta_contable_resultado_debito);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getBodegaProductosFK_IdCuentaContableVenta(String sFinalQuery,Long id_cuenta_contable_venta)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					bodegaproductoLogic.getBodegaProductosFK_IdCuentaContableVenta(sFinalQuery,this.pagination,id_cuenta_contable_venta);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getBodegaProductosFK_IdEmpresa(String sFinalQuery,Long id_empresa)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					bodegaproductoLogic.getBodegaProductosFK_IdEmpresa(sFinalQuery,this.pagination,id_empresa);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getBodegaProductosFK_IdProducto(String sFinalQuery,Long id_producto)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					bodegaproductoLogic.getBodegaProductosFK_IdProducto(sFinalQuery,this.pagination,id_producto);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getBodegaProductosFK_IdSucursal(String sFinalQuery,Long id_sucursal)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					bodegaproductoLogic.getBodegaProductosFK_IdSucursal(sFinalQuery,this.pagination,id_sucursal);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getBodegaProductosFK_IdUnidad(String sFinalQuery,Long id_unidad)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					bodegaproductoLogic.getBodegaProductosFK_IdUnidad(sFinalQuery,this.pagination,id_unidad);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getBodegaProductoPorIdBodegaPorIdProductoPorIdUnidad(Long id_bodega,Long id_producto,Long id_unidad)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					bodegaproductoLogic.getBodegaProductoPorIdBodegaPorIdProductoPorIdUnidad(id_bodega,id_producto,id_unidad);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	
	public void onLoad()throws Exception {		
		try {		
			isEntroOnLoad=true;
			//INTENTA TRAER DATOS DE BUSQUEDA ANTERIOR
			this.traerDatosBusquedaDesdeSession();
					
			//SINO SE CUMPLE VIENE DE PADRE FOREIGN O BUSQUEDA ANTIGUA
			if(this.sAccionBusqueda.equals("")) {
				this.sAccionBusqueda="Todos";
			}
								
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch (Exception e) {
			throw e;
		}
	}		
	
	public void inicializarPermisosBodegaProducto() {
		this.isPermisoTodoBodegaProducto=false;
		this.isPermisoNuevoBodegaProducto=false;
		this.isPermisoActualizarBodegaProducto=false;
		this.isPermisoActualizarOriginalBodegaProducto=false;
		this.isPermisoEliminarBodegaProducto=false;
		this.isPermisoGuardarCambiosBodegaProducto=false;
		this.isPermisoConsultaBodegaProducto=false;
		this.isPermisoBusquedaBodegaProducto=false;
		this.isPermisoReporteBodegaProducto=false;		
		this.isPermisoOrdenBodegaProducto=false;		
		this.isPermisoPaginacionMedioBodegaProducto=false;		
		this.isPermisoPaginacionAltoBodegaProducto=false;
		this.isPermisoPaginacionTodoBodegaProducto=false;
		this.isPermisoCopiarBodegaProducto=false;		
		this.isPermisoVerFormBodegaProducto=false;		
		this.isPermisoDuplicarBodegaProducto=false;		
		this.isPermisoOrdenBodegaProducto=false;		
	}
	
	public void setPermisosUsuarioBodegaProducto(Boolean isPermiso) {
		this.isPermisoTodoBodegaProducto=isPermiso;
		this.isPermisoNuevoBodegaProducto=isPermiso;
		this.isPermisoActualizarBodegaProducto=isPermiso;
		this.isPermisoActualizarOriginalBodegaProducto=isPermiso;
		this.isPermisoEliminarBodegaProducto=isPermiso;
		this.isPermisoGuardarCambiosBodegaProducto=isPermiso;
		this.isPermisoConsultaBodegaProducto=isPermiso;
		this.isPermisoBusquedaBodegaProducto=isPermiso;
		this.isPermisoReporteBodegaProducto=isPermiso;
		this.isPermisoOrdenBodegaProducto=isPermiso;		
		this.isPermisoPaginacionMedioBodegaProducto=isPermiso;		
		this.isPermisoPaginacionAltoBodegaProducto=isPermiso;		
		this.isPermisoPaginacionTodoBodegaProducto=isPermiso;		
		this.isPermisoCopiarBodegaProducto=isPermiso;		
		this.isPermisoVerFormBodegaProducto=isPermiso;		
		this.isPermisoDuplicarBodegaProducto=isPermiso;
		this.isPermisoOrdenBodegaProducto=isPermiso;
	}
	
	public void setPermisosMantenimientoUsuarioBodegaProducto(Boolean isPermiso) {
		//this.isPermisoTodoBodegaProducto=isPermiso;
		this.isPermisoNuevoBodegaProducto=isPermiso;
		this.isPermisoActualizarBodegaProducto=isPermiso;
		this.isPermisoActualizarOriginalBodegaProducto=isPermiso;
		this.isPermisoEliminarBodegaProducto=isPermiso;
		this.isPermisoGuardarCambiosBodegaProducto=isPermiso;
		//this.isPermisoConsultaBodegaProducto=isPermiso;
		//this.isPermisoBusquedaBodegaProducto=isPermiso;
		//this.isPermisoReporteBodegaProducto=isPermiso;
		//this.isPermisoOrdenBodegaProducto=isPermiso;		
		//this.isPermisoPaginacionMedioBodegaProducto=isPermiso;		
		//this.isPermisoPaginacionAltoBodegaProducto=isPermiso;		
		//this.isPermisoPaginacionTodoBodegaProducto=isPermiso;		
		//this.isPermisoCopiarBodegaProducto=isPermiso;		
		//this.isPermisoDuplicarBodegaProducto=isPermiso;
		//this.isPermisoOrdenBodegaProducto=isPermiso;
	}
	
	public void inicializarSetPermisosUsuarioBodegaProductoClasesRelacionadas() throws Exception {
		ArrayList<String> arrPaginas=new ArrayList<String>();		
		ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
		
		
		if(BodegaProductoJInternalFrame.CON_LLAMADA_SIMPLE) {
			this.opcionsRelacionadas.addAll(this.sistemaReturnGeneral.getOpcionsRelacionadas());
			
		} else {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				opcionsFinal=sistemaLogicAdditional.tienePermisosOpcionesEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, arrPaginas);
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
			
			this.opcionsRelacionadas.addAll(opcionsFinal);
		}
		
		
		
	}
	
	public Boolean tienePermisosUsuarioEnPaginaWebBodegaProducto(String sPagina) throws Exception {
		Boolean tienePermisos=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			tienePermisos=sistemaLogicAdditional.tienePermisosEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, sPagina);
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		
		return tienePermisos;
	}
	
	public void inicializarSetPermisosUsuarioBodegaProductoClasesRelacionadas(Boolean conPermiso) throws Exception {
		
	}
	
	public Boolean verificarGetPermisosUsuarioBodegaProductoClaseRelacionada(ArrayList<String> arrPaginasFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioClaseRelacionada(arrPaginasFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public Boolean verificarGetPermisosUsuarioOpcionBodegaProductoClaseRelacionada(List<Opcion> opcionsFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioOpcionClaseRelacionada(opcionsFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public void actualizarTabsSetPermisosUsuarioBodegaProductoClasesRelacionadas() throws Exception {
		
	}
	
	public void setPermisosUsuarioBodegaProducto() throws Exception {
		
		PerfilOpcion perfilOpcionUsuario=new PerfilOpcion();		
		Long idOpcion=this.opcionActual.getId();
		
		if(BodegaProductoJInternalFrame.CON_LLAMADA_SIMPLE) {
			perfilOpcionUsuario=this.sistemaReturnGeneral.getPerfilOpcion();
			
		} else {
			if(this.bodegaproductoSessionBean.getEsGuardarRelacionado()) {
				idOpcion=0L;
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				perfilOpcionUsuario=sistemaLogicAdditional.traerPermisosPaginaWebPerfilOpcion(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, BodegaProductoConstantesFunciones.SNOMBREOPCION,idOpcion);				
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
		}
		
		if(perfilOpcionUsuario!=null && perfilOpcionUsuario.getId()>0) {
			this.isPermisoNuevoBodegaProducto=perfilOpcionUsuario.getingreso()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarBodegaProducto=perfilOpcionUsuario.getmodificacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarOriginalBodegaProducto=this.isPermisoActualizarBodegaProducto;
			this.isPermisoEliminarBodegaProducto=perfilOpcionUsuario.geteliminacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoGuardarCambiosBodegaProducto=perfilOpcionUsuario.getguardar_cambios()||perfilOpcionUsuario.gettodo();
			this.isPermisoConsultaBodegaProducto=perfilOpcionUsuario.getconsulta()||perfilOpcionUsuario.gettodo();
			this.isPermisoBusquedaBodegaProducto=perfilOpcionUsuario.getbusqueda()||perfilOpcionUsuario.gettodo();
			this.isPermisoTodoBodegaProducto=perfilOpcionUsuario.gettodo()||perfilOpcionUsuario.gettodo();
			this.isPermisoReporteBodegaProducto=perfilOpcionUsuario.getreporte()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenBodegaProducto=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionMedioBodegaProducto=perfilOpcionUsuario.getpaginacion_medio()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionAltoBodegaProducto=perfilOpcionUsuario.getpaginacion_alto()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionTodoBodegaProducto=perfilOpcionUsuario.getpaginacion_todo()||perfilOpcionUsuario.gettodo();
			this.isPermisoCopiarBodegaProducto=perfilOpcionUsuario.getcopiar()||perfilOpcionUsuario.gettodo();
			this.isPermisoVerFormBodegaProducto=true;//perfilOpcionUsuario.getver_form()||perfilOpcionUsuario.gettodo();
			this.isPermisoDuplicarBodegaProducto=perfilOpcionUsuario.getduplicar()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenBodegaProducto=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			
			if(this.bodegaproductoSessionBean.getEsGuardarRelacionado()) {
				this.opcionActual.setId(perfilOpcionUsuario.getid_opcion());
				
				this.jTableDatosBodegaProducto.setToolTipText(this.jTableDatosBodegaProducto.getToolTipText()+"_"+perfilOpcionUsuario.getid_opcion());		
			}
		} else {
			this.setPermisosUsuarioBodegaProducto(false);
		}
		
		//SI SE NECESITA PONER TODOS LOS PERMISOS POR DEFECTO
		//
		
	}
	
	public void setAccionesUsuarioBodegaProducto(Boolean esParaAccionesFormulario) throws Exception {		
		Reporte reporte=null;
		
		if(!esParaAccionesFormulario) {
			this.accions=new ArrayList<Accion>();
			
			if(BodegaProductoJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accions=this.sistemaReturnGeneral.getAccions();
				
				
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accions=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,false);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accions.size()>0) {			
				for(Accion accion:this.accions) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
		
		
					this.tiposAcciones.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAcciones.add(reporte);
			
		} else {
			//ACCIONES FORMULARIO
			this.accionsFormulario=new ArrayList<Accion>();
			
			if(BodegaProductoJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accionsFormulario=this.sistemaReturnGeneral.getAccionsFormulario();
			
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accionsFormulario=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,true);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accionsFormulario.size()>0) {			
				for(Accion accion:this.accionsFormulario) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
					
					this.tiposAccionesFormulario.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAccionesFormulario.add(reporte);
		}				
	}	 	
	
	public void setRelacionesUsuarioBodegaProducto() throws Exception {
		Reporte reporte=null;
		
		
		
		
		//ORDENAR ALFABETICAMENTE
		Collections.sort(this.tiposRelaciones, new ReporteComparator());
		/*
		reporte=new Reporte();
		reporte.setsCodigo(accion.getcodigo());
		reporte.setsDescripcion(accion.getnombre());
			
		this.tiposRelaciones.add(reporte);
		*/
	}	
	
		
	@SuppressWarnings({ "unchecked", "rawtypes" } )
	public void inicializarCombosForeignKeyBodegaProductoListas()throws Exception {
		try	{						
			
				this.empresasForeignKey=new ArrayList();
				this.sucursalsForeignKey=new ArrayList();
				this.bodegasForeignKey=new ArrayList();
				this.productosForeignKey=new ArrayList();
				this.unidadsForeignKey=new ArrayList();
				this.centrocostosForeignKey=new ArrayList();
				this.estadobodegaproductosForeignKey=new ArrayList();
				this.cuentacontableinventariosForeignKey=new ArrayList();
				this.cuentacontablecostoventasForeignKey=new ArrayList();
				this.cuentacontableventasForeignKey=new ArrayList();
				this.cuentacontabledescuentosForeignKey=new ArrayList();
				this.cuentacontableproduccionsForeignKey=new ArrayList();
				this.cuentacontabledevolucionsForeignKey=new ArrayList();
				this.cuentacontableingresodebitosForeignKey=new ArrayList();
				this.cuentacontableingresocreditosForeignKey=new ArrayList();
				this.cuentacontableresultadodebitosForeignKey=new ArrayList();
				this.cuentacontableresultadocreditosForeignKey=new ArrayList();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void cargarCombosTodosForeignKeyBodegaProductoListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			String sFinalQueryCombo="";
			
			Modulo  moduloActualAux=new Modulo();
			
			if(BodegaProductoJInternalFrame.ISLOAD_FKLOTE) {
				this.cargarCombosLoteForeignKeyBodegaProductoListas(false);
			} else {
			
				this.cargarCombosForeignKeyEmpresaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeySucursalListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyBodegaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyProductoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyUnidadListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCentroCostoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEstadoBodegaProductoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCuentaContableInventarioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCuentaContableCostoVentaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCuentaContableVentaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCuentaContableDescuentoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCuentaContableProduccionListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCuentaContableDevolucionListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCuentaContableIngresoDebitoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCuentaContableIngresoCreditoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCuentaContableResultadoDebitoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCuentaContableResultadoCreditoListas(cargarCombosDependencia,sFinalQueryCombo);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	

	public void cargarCombosForeignKeyEmpresaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EmpresaConstantesFunciones.SFINALQUERY;

				this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeySucursalListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=SucursalConstantesFunciones.SFINALQUERY;

				this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyBodegaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.bodegasForeignKey==null||this.bodegasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=BodegaConstantesFunciones.getArrayColumnasGlobalesBodega(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,BodegaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=BodegaConstantesFunciones.SFINALQUERY;

				this.cargarCombosBodegasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyProductoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if(cargarCombosDependencia && (this.productosForeignKey==null||this.productosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=ProductoConstantesFunciones.getArrayColumnasGlobalesProducto(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ProductoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=ProductoConstantesFunciones.SFINALQUERY;

				this.cargarCombosProductosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyUnidadListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if(cargarCombosDependencia && (this.unidadsForeignKey==null||this.unidadsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=UnidadConstantesFunciones.getArrayColumnasGlobalesUnidad(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,UnidadConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=UnidadConstantesFunciones.SFINALQUERY;

				this.cargarCombosUnidadsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCentroCostoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.centrocostosForeignKey==null||this.centrocostosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CentroCostoConstantesFunciones.getArrayColumnasGlobalesCentroCosto(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CentroCostoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CentroCostoConstantesFunciones.SFINALQUERY;

				this.cargarCombosCentroCostosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEstadoBodegaProductoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.estadobodegaproductosForeignKey==null||this.estadobodegaproductosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EstadoBodegaProductoConstantesFunciones.getArrayColumnasGlobalesEstadoBodegaProducto(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EstadoBodegaProductoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EstadoBodegaProductoConstantesFunciones.SFINALQUERY;

				this.cargarCombosEstadoBodegaProductosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableInventarioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.cuentacontableinventariosForeignKey==null||this.cuentacontableinventariosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CuentaContableConstantesFunciones.SFINALQUERY;

				this.cargarCombosCuentaContableInventariosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableCostoVentaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.cuentacontablecostoventasForeignKey==null||this.cuentacontablecostoventasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CuentaContableConstantesFunciones.SFINALQUERY;

				this.cargarCombosCuentaContableCostoVentasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableVentaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.cuentacontableventasForeignKey==null||this.cuentacontableventasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CuentaContableConstantesFunciones.SFINALQUERY;

				this.cargarCombosCuentaContableVentasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableDescuentoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.cuentacontabledescuentosForeignKey==null||this.cuentacontabledescuentosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CuentaContableConstantesFunciones.SFINALQUERY;

				this.cargarCombosCuentaContableDescuentosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableProduccionListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.cuentacontableproduccionsForeignKey==null||this.cuentacontableproduccionsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CuentaContableConstantesFunciones.SFINALQUERY;

				this.cargarCombosCuentaContableProduccionsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableDevolucionListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.cuentacontabledevolucionsForeignKey==null||this.cuentacontabledevolucionsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CuentaContableConstantesFunciones.SFINALQUERY;

				this.cargarCombosCuentaContableDevolucionsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableIngresoDebitoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.cuentacontableingresodebitosForeignKey==null||this.cuentacontableingresodebitosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CuentaContableConstantesFunciones.SFINALQUERY;

				this.cargarCombosCuentaContableIngresoDebitosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableIngresoCreditoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.cuentacontableingresocreditosForeignKey==null||this.cuentacontableingresocreditosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CuentaContableConstantesFunciones.SFINALQUERY;

				this.cargarCombosCuentaContableIngresoCreditosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableResultadoDebitoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.cuentacontableresultadodebitosForeignKey==null||this.cuentacontableresultadodebitosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CuentaContableConstantesFunciones.SFINALQUERY;

				this.cargarCombosCuentaContableResultadoDebitosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableResultadoCreditoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.cuentacontableresultadocreditosForeignKey==null||this.cuentacontableresultadocreditosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CuentaContableConstantesFunciones.SFINALQUERY;

				this.cargarCombosCuentaContableResultadoCreditosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarCombosLoteForeignKeyBodegaProductoListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			Modulo  moduloActualAux=new Modulo();
			
			
			BodegaProductoParameterReturnGeneral bodegaproductoReturnGeneral=new BodegaProductoParameterReturnGeneral();
						
			


				String finalQueryGlobalEmpresa="";

				if(((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0) && this.bodegaproductoConstantesFunciones.cargarid_empresaBodegaProducto)
					 || (this.esRecargarFks && this.bodegaproductoConstantesFunciones.cargarid_empresaBodegaProducto)) {

					if(!this.bodegaproductoSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEmpresa=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

						finalQueryGlobalEmpresa=Funciones.GetFinalQueryAppend(finalQueryGlobalEmpresa, "");
						finalQueryGlobalEmpresa+=EmpresaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEmpresa=" WHERE " + ConstantesSql.ID + "="+bodegaproductoSessionBean.getlidEmpresaActual();
					}
				} else {
					finalQueryGlobalEmpresa="NONE";
				}


				String finalQueryGlobalSucursal="";

				if(((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0) && this.bodegaproductoConstantesFunciones.cargarid_sucursalBodegaProducto)
					 || (this.esRecargarFks && this.bodegaproductoConstantesFunciones.cargarid_sucursalBodegaProducto)) {

					if(!this.bodegaproductoSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalSucursal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

						finalQueryGlobalSucursal=Funciones.GetFinalQueryAppend(finalQueryGlobalSucursal, "");
						finalQueryGlobalSucursal+=SucursalConstantesFunciones.SFINALQUERY;

						//this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalSucursal=" WHERE " + ConstantesSql.ID + "="+bodegaproductoSessionBean.getlidSucursalActual();
					}
				} else {
					finalQueryGlobalSucursal="NONE";
				}


				String finalQueryGlobalBodega="";

				if(((this.bodegasForeignKey==null||this.bodegasForeignKey.size()<=0) && this.bodegaproductoConstantesFunciones.cargarid_bodegaBodegaProducto)
					 || (this.esRecargarFks && this.bodegaproductoConstantesFunciones.cargarid_bodegaBodegaProducto)) {

					if(!this.bodegaproductoSessionBean.getisBusquedaDesdeForeignKeySesionBodega()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=BodegaConstantesFunciones.getArrayColumnasGlobalesBodega(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalBodega=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,BodegaConstantesFunciones.TABLENAME);

						finalQueryGlobalBodega=Funciones.GetFinalQueryAppend(finalQueryGlobalBodega, "");
						finalQueryGlobalBodega+=BodegaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosBodegasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalBodega=" WHERE " + ConstantesSql.ID + "="+bodegaproductoSessionBean.getlidBodegaActual();
					}
				} else {
					finalQueryGlobalBodega="NONE";
				}


				String finalQueryGlobalProducto="";

				if(cargarCombosDependencia && ((this.productosForeignKey==null||this.productosForeignKey.size()<=0) && this.bodegaproductoConstantesFunciones.cargarid_productoBodegaProducto)
					 || (this.esRecargarFks && this.bodegaproductoConstantesFunciones.cargarid_productoBodegaProducto)) {

					if(!this.bodegaproductoSessionBean.getisBusquedaDesdeForeignKeySesionProducto()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=ProductoConstantesFunciones.getArrayColumnasGlobalesProducto(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalProducto=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ProductoConstantesFunciones.TABLENAME);

						finalQueryGlobalProducto=Funciones.GetFinalQueryAppend(finalQueryGlobalProducto, "");
						finalQueryGlobalProducto+=ProductoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosProductosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalProducto=" WHERE " + ConstantesSql.ID + "="+bodegaproductoSessionBean.getlidProductoActual();
					}
				} else {
					finalQueryGlobalProducto="NONE";
				}


				String finalQueryGlobalUnidad="";

				if(cargarCombosDependencia && ((this.unidadsForeignKey==null||this.unidadsForeignKey.size()<=0) && this.bodegaproductoConstantesFunciones.cargarid_unidadBodegaProducto)
					 || (this.esRecargarFks && this.bodegaproductoConstantesFunciones.cargarid_unidadBodegaProducto)) {

					if(!this.bodegaproductoSessionBean.getisBusquedaDesdeForeignKeySesionUnidad()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=UnidadConstantesFunciones.getArrayColumnasGlobalesUnidad(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalUnidad=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,UnidadConstantesFunciones.TABLENAME);

						finalQueryGlobalUnidad=Funciones.GetFinalQueryAppend(finalQueryGlobalUnidad, "");
						finalQueryGlobalUnidad+=UnidadConstantesFunciones.SFINALQUERY;

						//this.cargarCombosUnidadsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalUnidad=" WHERE " + ConstantesSql.ID + "="+bodegaproductoSessionBean.getlidUnidadActual();
					}
				} else {
					finalQueryGlobalUnidad="NONE";
				}


				String finalQueryGlobalCentroCosto="";

				if(((this.centrocostosForeignKey==null||this.centrocostosForeignKey.size()<=0) && this.bodegaproductoConstantesFunciones.cargarid_centro_costoBodegaProducto)
					 || (this.esRecargarFks && this.bodegaproductoConstantesFunciones.cargarid_centro_costoBodegaProducto)) {

					if(!this.bodegaproductoSessionBean.getisBusquedaDesdeForeignKeySesionCentroCosto()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=CentroCostoConstantesFunciones.getArrayColumnasGlobalesCentroCosto(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCentroCosto=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CentroCostoConstantesFunciones.TABLENAME);

						finalQueryGlobalCentroCosto=Funciones.GetFinalQueryAppend(finalQueryGlobalCentroCosto, "");
						finalQueryGlobalCentroCosto+=CentroCostoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCentroCostosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCentroCosto=" WHERE " + ConstantesSql.ID + "="+bodegaproductoSessionBean.getlidCentroCostoActual();
					}
				} else {
					finalQueryGlobalCentroCosto="NONE";
				}


				String finalQueryGlobalEstadoBodegaProducto="";

				if(((this.estadobodegaproductosForeignKey==null||this.estadobodegaproductosForeignKey.size()<=0) && this.bodegaproductoConstantesFunciones.cargarid_estado_bodega_productoBodegaProducto)
					 || (this.esRecargarFks && this.bodegaproductoConstantesFunciones.cargarid_estado_bodega_productoBodegaProducto)) {

					if(!this.bodegaproductoSessionBean.getisBusquedaDesdeForeignKeySesionEstadoBodegaProducto()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EstadoBodegaProductoConstantesFunciones.getArrayColumnasGlobalesEstadoBodegaProducto(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEstadoBodegaProducto=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EstadoBodegaProductoConstantesFunciones.TABLENAME);

						finalQueryGlobalEstadoBodegaProducto=Funciones.GetFinalQueryAppend(finalQueryGlobalEstadoBodegaProducto, "");
						finalQueryGlobalEstadoBodegaProducto+=EstadoBodegaProductoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEstadoBodegaProductosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEstadoBodegaProducto=" WHERE " + ConstantesSql.ID + "="+bodegaproductoSessionBean.getlidEstadoBodegaProductoActual();
					}
				} else {
					finalQueryGlobalEstadoBodegaProducto="NONE";
				}


				String finalQueryGlobalCuentaContableInventario="";

				if(((this.cuentacontableinventariosForeignKey==null||this.cuentacontableinventariosForeignKey.size()<=0) && this.bodegaproductoConstantesFunciones.cargarid_cuenta_contable_inventarioBodegaProducto)
					 || (this.esRecargarFks && this.bodegaproductoConstantesFunciones.cargarid_cuenta_contable_inventarioBodegaProducto)) {

					if(!this.bodegaproductoSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableInventario()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();

						this.arrDatoGeneralNo.add("id_modulo");

						arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCuentaContableInventario=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

						finalQueryGlobalCuentaContableInventario=Funciones.GetFinalQueryAppend(finalQueryGlobalCuentaContableInventario, "");
						finalQueryGlobalCuentaContableInventario+=CuentaContableConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCuentaContableInventariosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCuentaContableInventario=" WHERE " + ConstantesSql.ID + "="+bodegaproductoSessionBean.getlidCuentaContableInventarioActual();
					}
				} else {
					finalQueryGlobalCuentaContableInventario="NONE";
				}


				String finalQueryGlobalCuentaContableCostoVenta="";

				if(((this.cuentacontablecostoventasForeignKey==null||this.cuentacontablecostoventasForeignKey.size()<=0) && this.bodegaproductoConstantesFunciones.cargarid_cuenta_contable_costo_ventaBodegaProducto)
					 || (this.esRecargarFks && this.bodegaproductoConstantesFunciones.cargarid_cuenta_contable_costo_ventaBodegaProducto)) {

					if(!this.bodegaproductoSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableCostoVenta()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();

						this.arrDatoGeneralNo.add("id_modulo");

						arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCuentaContableCostoVenta=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

						finalQueryGlobalCuentaContableCostoVenta=Funciones.GetFinalQueryAppend(finalQueryGlobalCuentaContableCostoVenta, "");
						finalQueryGlobalCuentaContableCostoVenta+=CuentaContableConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCuentaContableCostoVentasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCuentaContableCostoVenta=" WHERE " + ConstantesSql.ID + "="+bodegaproductoSessionBean.getlidCuentaContableCostoVentaActual();
					}
				} else {
					finalQueryGlobalCuentaContableCostoVenta="NONE";
				}


				String finalQueryGlobalCuentaContableVenta="";

				if(((this.cuentacontableventasForeignKey==null||this.cuentacontableventasForeignKey.size()<=0) && this.bodegaproductoConstantesFunciones.cargarid_cuenta_contable_ventaBodegaProducto)
					 || (this.esRecargarFks && this.bodegaproductoConstantesFunciones.cargarid_cuenta_contable_ventaBodegaProducto)) {

					if(!this.bodegaproductoSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableVenta()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();

						this.arrDatoGeneralNo.add("id_modulo");

						arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCuentaContableVenta=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

						finalQueryGlobalCuentaContableVenta=Funciones.GetFinalQueryAppend(finalQueryGlobalCuentaContableVenta, "");
						finalQueryGlobalCuentaContableVenta+=CuentaContableConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCuentaContableVentasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCuentaContableVenta=" WHERE " + ConstantesSql.ID + "="+bodegaproductoSessionBean.getlidCuentaContableVentaActual();
					}
				} else {
					finalQueryGlobalCuentaContableVenta="NONE";
				}


				String finalQueryGlobalCuentaContableDescuento="";

				if(((this.cuentacontabledescuentosForeignKey==null||this.cuentacontabledescuentosForeignKey.size()<=0) && this.bodegaproductoConstantesFunciones.cargarid_cuenta_contable_descuentoBodegaProducto)
					 || (this.esRecargarFks && this.bodegaproductoConstantesFunciones.cargarid_cuenta_contable_descuentoBodegaProducto)) {

					if(!this.bodegaproductoSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableDescuento()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();

						this.arrDatoGeneralNo.add("id_modulo");

						arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCuentaContableDescuento=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

						finalQueryGlobalCuentaContableDescuento=Funciones.GetFinalQueryAppend(finalQueryGlobalCuentaContableDescuento, "");
						finalQueryGlobalCuentaContableDescuento+=CuentaContableConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCuentaContableDescuentosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCuentaContableDescuento=" WHERE " + ConstantesSql.ID + "="+bodegaproductoSessionBean.getlidCuentaContableDescuentoActual();
					}
				} else {
					finalQueryGlobalCuentaContableDescuento="NONE";
				}


				String finalQueryGlobalCuentaContableProduccion="";

				if(((this.cuentacontableproduccionsForeignKey==null||this.cuentacontableproduccionsForeignKey.size()<=0) && this.bodegaproductoConstantesFunciones.cargarid_cuenta_contable_produccionBodegaProducto)
					 || (this.esRecargarFks && this.bodegaproductoConstantesFunciones.cargarid_cuenta_contable_produccionBodegaProducto)) {

					if(!this.bodegaproductoSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableProduccion()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();

						this.arrDatoGeneralNo.add("id_modulo");

						arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCuentaContableProduccion=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

						finalQueryGlobalCuentaContableProduccion=Funciones.GetFinalQueryAppend(finalQueryGlobalCuentaContableProduccion, "");
						finalQueryGlobalCuentaContableProduccion+=CuentaContableConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCuentaContableProduccionsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCuentaContableProduccion=" WHERE " + ConstantesSql.ID + "="+bodegaproductoSessionBean.getlidCuentaContableProduccionActual();
					}
				} else {
					finalQueryGlobalCuentaContableProduccion="NONE";
				}


				String finalQueryGlobalCuentaContableDevolucion="";

				if(((this.cuentacontabledevolucionsForeignKey==null||this.cuentacontabledevolucionsForeignKey.size()<=0) && this.bodegaproductoConstantesFunciones.cargarid_cuenta_contable_devolucionBodegaProducto)
					 || (this.esRecargarFks && this.bodegaproductoConstantesFunciones.cargarid_cuenta_contable_devolucionBodegaProducto)) {

					if(!this.bodegaproductoSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableDevolucion()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();

						this.arrDatoGeneralNo.add("id_modulo");

						arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCuentaContableDevolucion=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

						finalQueryGlobalCuentaContableDevolucion=Funciones.GetFinalQueryAppend(finalQueryGlobalCuentaContableDevolucion, "");
						finalQueryGlobalCuentaContableDevolucion+=CuentaContableConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCuentaContableDevolucionsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCuentaContableDevolucion=" WHERE " + ConstantesSql.ID + "="+bodegaproductoSessionBean.getlidCuentaContableDevolucionActual();
					}
				} else {
					finalQueryGlobalCuentaContableDevolucion="NONE";
				}


				String finalQueryGlobalCuentaContableIngresoDebito="";

				if(((this.cuentacontableingresodebitosForeignKey==null||this.cuentacontableingresodebitosForeignKey.size()<=0) && this.bodegaproductoConstantesFunciones.cargarid_cuenta_contable_ingreso_debitoBodegaProducto)
					 || (this.esRecargarFks && this.bodegaproductoConstantesFunciones.cargarid_cuenta_contable_ingreso_debitoBodegaProducto)) {

					if(!this.bodegaproductoSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableIngresoDebito()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();

						this.arrDatoGeneralNo.add("id_modulo");

						arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCuentaContableIngresoDebito=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

						finalQueryGlobalCuentaContableIngresoDebito=Funciones.GetFinalQueryAppend(finalQueryGlobalCuentaContableIngresoDebito, "");
						finalQueryGlobalCuentaContableIngresoDebito+=CuentaContableConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCuentaContableIngresoDebitosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCuentaContableIngresoDebito=" WHERE " + ConstantesSql.ID + "="+bodegaproductoSessionBean.getlidCuentaContableIngresoDebitoActual();
					}
				} else {
					finalQueryGlobalCuentaContableIngresoDebito="NONE";
				}


				String finalQueryGlobalCuentaContableIngresoCredito="";

				if(((this.cuentacontableingresocreditosForeignKey==null||this.cuentacontableingresocreditosForeignKey.size()<=0) && this.bodegaproductoConstantesFunciones.cargarid_cuenta_contable_ingreso_creditoBodegaProducto)
					 || (this.esRecargarFks && this.bodegaproductoConstantesFunciones.cargarid_cuenta_contable_ingreso_creditoBodegaProducto)) {

					if(!this.bodegaproductoSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableIngresoCredito()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();

						this.arrDatoGeneralNo.add("id_modulo");

						arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCuentaContableIngresoCredito=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

						finalQueryGlobalCuentaContableIngresoCredito=Funciones.GetFinalQueryAppend(finalQueryGlobalCuentaContableIngresoCredito, "");
						finalQueryGlobalCuentaContableIngresoCredito+=CuentaContableConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCuentaContableIngresoCreditosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCuentaContableIngresoCredito=" WHERE " + ConstantesSql.ID + "="+bodegaproductoSessionBean.getlidCuentaContableIngresoCreditoActual();
					}
				} else {
					finalQueryGlobalCuentaContableIngresoCredito="NONE";
				}


				String finalQueryGlobalCuentaContableResultadoDebito="";

				if(((this.cuentacontableresultadodebitosForeignKey==null||this.cuentacontableresultadodebitosForeignKey.size()<=0) && this.bodegaproductoConstantesFunciones.cargarid_cuenta_contable_resultado_debitoBodegaProducto)
					 || (this.esRecargarFks && this.bodegaproductoConstantesFunciones.cargarid_cuenta_contable_resultado_debitoBodegaProducto)) {

					if(!this.bodegaproductoSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableResultadoDebito()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();

						this.arrDatoGeneralNo.add("id_modulo");

						arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCuentaContableResultadoDebito=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

						finalQueryGlobalCuentaContableResultadoDebito=Funciones.GetFinalQueryAppend(finalQueryGlobalCuentaContableResultadoDebito, "");
						finalQueryGlobalCuentaContableResultadoDebito+=CuentaContableConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCuentaContableResultadoDebitosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCuentaContableResultadoDebito=" WHERE " + ConstantesSql.ID + "="+bodegaproductoSessionBean.getlidCuentaContableResultadoDebitoActual();
					}
				} else {
					finalQueryGlobalCuentaContableResultadoDebito="NONE";
				}


				String finalQueryGlobalCuentaContableResultadoCredito="";

				if(((this.cuentacontableresultadocreditosForeignKey==null||this.cuentacontableresultadocreditosForeignKey.size()<=0) && this.bodegaproductoConstantesFunciones.cargarid_cuenta_contable_resultado_creditoBodegaProducto)
					 || (this.esRecargarFks && this.bodegaproductoConstantesFunciones.cargarid_cuenta_contable_resultado_creditoBodegaProducto)) {

					if(!this.bodegaproductoSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableResultadoCredito()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();

						this.arrDatoGeneralNo.add("id_modulo");

						arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCuentaContableResultadoCredito=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

						finalQueryGlobalCuentaContableResultadoCredito=Funciones.GetFinalQueryAppend(finalQueryGlobalCuentaContableResultadoCredito, "");
						finalQueryGlobalCuentaContableResultadoCredito+=CuentaContableConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCuentaContableResultadoCreditosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCuentaContableResultadoCredito=" WHERE " + ConstantesSql.ID + "="+bodegaproductoSessionBean.getlidCuentaContableResultadoCreditoActual();
					}
				} else {
					finalQueryGlobalCuentaContableResultadoCredito="NONE";
				}
			
			//ARCHITECTURE			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				bodegaproductoReturnGeneral=bodegaproductoLogic.cargarCombosLoteForeignKeyBodegaProducto(finalQueryGlobalEmpresa,finalQueryGlobalSucursal,finalQueryGlobalBodega,finalQueryGlobalProducto,finalQueryGlobalUnidad,finalQueryGlobalCentroCosto,finalQueryGlobalEstadoBodegaProducto,finalQueryGlobalCuentaContableInventario,finalQueryGlobalCuentaContableCostoVenta,finalQueryGlobalCuentaContableVenta,finalQueryGlobalCuentaContableDescuento,finalQueryGlobalCuentaContableProduccion,finalQueryGlobalCuentaContableDevolucion,finalQueryGlobalCuentaContableIngresoDebito,finalQueryGlobalCuentaContableIngresoCredito,finalQueryGlobalCuentaContableResultadoDebito,finalQueryGlobalCuentaContableResultadoCredito);//WithConnection
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}			
			//ARCHITECTURE
			
			

			if(!finalQueryGlobalEmpresa.equals("NONE")) {
				this.empresasForeignKey=bodegaproductoReturnGeneral.getempresasForeignKey();
			}

			if(!finalQueryGlobalSucursal.equals("NONE")) {
				this.sucursalsForeignKey=bodegaproductoReturnGeneral.getsucursalsForeignKey();
			}

			if(!finalQueryGlobalBodega.equals("NONE")) {
				this.bodegasForeignKey=bodegaproductoReturnGeneral.getbodegasForeignKey();
			}

			if(!finalQueryGlobalProducto.equals("NONE")) {
				this.productosForeignKey=bodegaproductoReturnGeneral.getproductosForeignKey();
			}

			if(!finalQueryGlobalUnidad.equals("NONE")) {
				this.unidadsForeignKey=bodegaproductoReturnGeneral.getunidadsForeignKey();
			}

			if(!finalQueryGlobalCentroCosto.equals("NONE")) {
				this.centrocostosForeignKey=bodegaproductoReturnGeneral.getcentrocostosForeignKey();
			}

			if(!finalQueryGlobalEstadoBodegaProducto.equals("NONE")) {
				this.estadobodegaproductosForeignKey=bodegaproductoReturnGeneral.getestadobodegaproductosForeignKey();
			}

			if(!finalQueryGlobalCuentaContableInventario.equals("NONE")) {
				this.cuentacontableinventariosForeignKey=bodegaproductoReturnGeneral.getcuentacontableinventariosForeignKey();
			}

			if(!finalQueryGlobalCuentaContableCostoVenta.equals("NONE")) {
				this.cuentacontablecostoventasForeignKey=bodegaproductoReturnGeneral.getcuentacontablecostoventasForeignKey();
			}

			if(!finalQueryGlobalCuentaContableVenta.equals("NONE")) {
				this.cuentacontableventasForeignKey=bodegaproductoReturnGeneral.getcuentacontableventasForeignKey();
			}

			if(!finalQueryGlobalCuentaContableDescuento.equals("NONE")) {
				this.cuentacontabledescuentosForeignKey=bodegaproductoReturnGeneral.getcuentacontabledescuentosForeignKey();
			}

			if(!finalQueryGlobalCuentaContableProduccion.equals("NONE")) {
				this.cuentacontableproduccionsForeignKey=bodegaproductoReturnGeneral.getcuentacontableproduccionsForeignKey();
			}

			if(!finalQueryGlobalCuentaContableDevolucion.equals("NONE")) {
				this.cuentacontabledevolucionsForeignKey=bodegaproductoReturnGeneral.getcuentacontabledevolucionsForeignKey();
			}

			if(!finalQueryGlobalCuentaContableIngresoDebito.equals("NONE")) {
				this.cuentacontableingresodebitosForeignKey=bodegaproductoReturnGeneral.getcuentacontableingresodebitosForeignKey();
			}

			if(!finalQueryGlobalCuentaContableIngresoCredito.equals("NONE")) {
				this.cuentacontableingresocreditosForeignKey=bodegaproductoReturnGeneral.getcuentacontableingresocreditosForeignKey();
			}

			if(!finalQueryGlobalCuentaContableResultadoDebito.equals("NONE")) {
				this.cuentacontableresultadodebitosForeignKey=bodegaproductoReturnGeneral.getcuentacontableresultadodebitosForeignKey();
			}

			if(!finalQueryGlobalCuentaContableResultadoCredito.equals("NONE")) {
				this.cuentacontableresultadocreditosForeignKey=bodegaproductoReturnGeneral.getcuentacontableresultadocreditosForeignKey();
			}
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void addItemDefectoCombosTodosForeignKeyBodegaProducto()throws Exception {
		try {
			
			this.addItemDefectoCombosForeignKeyEmpresa();
			this.addItemDefectoCombosForeignKeySucursal();
			this.addItemDefectoCombosForeignKeyBodega();
			this.addItemDefectoCombosForeignKeyProducto();
			this.addItemDefectoCombosForeignKeyUnidad();
			this.addItemDefectoCombosForeignKeyCentroCosto();
			this.addItemDefectoCombosForeignKeyEstadoBodegaProducto();
			this.addItemDefectoCombosForeignKeyCuentaContableInventario();
			this.addItemDefectoCombosForeignKeyCuentaContableCostoVenta();
			this.addItemDefectoCombosForeignKeyCuentaContableVenta();
			this.addItemDefectoCombosForeignKeyCuentaContableDescuento();
			this.addItemDefectoCombosForeignKeyCuentaContableProduccion();
			this.addItemDefectoCombosForeignKeyCuentaContableDevolucion();
			this.addItemDefectoCombosForeignKeyCuentaContableIngresoDebito();
			this.addItemDefectoCombosForeignKeyCuentaContableIngresoCredito();
			this.addItemDefectoCombosForeignKeyCuentaContableResultadoDebito();
			this.addItemDefectoCombosForeignKeyCuentaContableResultadoCredito();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	



	public void addItemDefectoCombosForeignKeyEmpresa()throws Exception {
		try {
			if(this.bodegaproductoSessionBean==null) {
				this.bodegaproductoSessionBean=new BodegaProductoSessionBean();
			}

			if(!this.bodegaproductoSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				Empresa empresa=new Empresa();
				EmpresaConstantesFunciones.setEmpresaDescripcion(empresa,Constantes.SMENSAJE_ESCOJA_OPCION);
				empresa.setId(null);

				if(!EmpresaConstantesFunciones.ExisteEnLista(this.empresasForeignKey,empresa,true)) {

					this.empresasForeignKey.add(0,empresa);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeySucursal()throws Exception {
		try {

			if(!this.bodegaproductoSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				Sucursal sucursal=new Sucursal();
				SucursalConstantesFunciones.setSucursalDescripcion(sucursal,Constantes.SMENSAJE_ESCOJA_OPCION);
				sucursal.setId(null);

				if(!SucursalConstantesFunciones.ExisteEnLista(this.sucursalsForeignKey,sucursal,true)) {

					this.sucursalsForeignKey.add(0,sucursal);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyBodega()throws Exception {
		try {

			if(!this.bodegaproductoSessionBean.getisBusquedaDesdeForeignKeySesionBodega()) {
				Bodega bodega=new Bodega();
				BodegaConstantesFunciones.setBodegaDescripcion(bodega,Constantes.SMENSAJE_ESCOJA_OPCION);
				bodega.setId(null);

				if(!BodegaConstantesFunciones.ExisteEnLista(this.bodegasForeignKey,bodega,true)) {

					this.bodegasForeignKey.add(0,bodega);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyProducto()throws Exception {
		try {

			if(!this.bodegaproductoSessionBean.getisBusquedaDesdeForeignKeySesionProducto()) {
				Producto producto=new Producto();
				ProductoConstantesFunciones.setProductoDescripcion(producto,Constantes.SMENSAJE_ESCOJA_OPCION);
				producto.setId(null);

				if(!ProductoConstantesFunciones.ExisteEnLista(this.productosForeignKey,producto,true)) {

					this.productosForeignKey.add(0,producto);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyUnidad()throws Exception {
		try {

			if(!this.bodegaproductoSessionBean.getisBusquedaDesdeForeignKeySesionUnidad()) {
				Unidad unidad=new Unidad();
				UnidadConstantesFunciones.setUnidadDescripcion(unidad,Constantes.SMENSAJE_ESCOJA_OPCION);
				unidad.setId(null);

				if(!UnidadConstantesFunciones.ExisteEnLista(this.unidadsForeignKey,unidad,true)) {

					this.unidadsForeignKey.add(0,unidad);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCentroCosto()throws Exception {
		try {

			if(!this.bodegaproductoSessionBean.getisBusquedaDesdeForeignKeySesionCentroCosto()) {
				CentroCosto centrocosto=new CentroCosto();
				CentroCostoConstantesFunciones.setCentroCostoDescripcion(centrocosto,Constantes.SMENSAJE_ESCOJA_OPCION);
				centrocosto.setId(null);

				if(!CentroCostoConstantesFunciones.ExisteEnLista(this.centrocostosForeignKey,centrocosto,true)) {

					this.centrocostosForeignKey.add(0,centrocosto);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEstadoBodegaProducto()throws Exception {
		try {

			if(!this.bodegaproductoSessionBean.getisBusquedaDesdeForeignKeySesionEstadoBodegaProducto()) {
				EstadoBodegaProducto estadobodegaproducto=new EstadoBodegaProducto();
				EstadoBodegaProductoConstantesFunciones.setEstadoBodegaProductoDescripcion(estadobodegaproducto,Constantes.SMENSAJE_ESCOJA_OPCION);
				estadobodegaproducto.setId(null);

				if(!EstadoBodegaProductoConstantesFunciones.ExisteEnLista(this.estadobodegaproductosForeignKey,estadobodegaproducto,true)) {

					this.estadobodegaproductosForeignKey.add(0,estadobodegaproducto);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCuentaContableInventario()throws Exception {
		try {

			if(!this.bodegaproductoSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableInventario()) {
				CuentaContable cuentacontableinventario=new CuentaContable();
				CuentaContableConstantesFunciones.setCuentaContableDescripcion(cuentacontableinventario,Constantes.SMENSAJE_ESCOJA_OPCION);
				cuentacontableinventario.setId(null);

				if(!CuentaContableConstantesFunciones.ExisteEnLista(this.cuentacontableinventariosForeignKey,cuentacontableinventario,true)) {

					this.cuentacontableinventariosForeignKey.add(0,cuentacontableinventario);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCuentaContableCostoVenta()throws Exception {
		try {

			if(!this.bodegaproductoSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableCostoVenta()) {
				CuentaContable cuentacontablecostoventa=new CuentaContable();
				CuentaContableConstantesFunciones.setCuentaContableDescripcion(cuentacontablecostoventa,Constantes.SMENSAJE_ESCOJA_OPCION);
				cuentacontablecostoventa.setId(null);

				if(!CuentaContableConstantesFunciones.ExisteEnLista(this.cuentacontablecostoventasForeignKey,cuentacontablecostoventa,true)) {

					this.cuentacontablecostoventasForeignKey.add(0,cuentacontablecostoventa);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCuentaContableVenta()throws Exception {
		try {

			if(!this.bodegaproductoSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableVenta()) {
				CuentaContable cuentacontableventa=new CuentaContable();
				CuentaContableConstantesFunciones.setCuentaContableDescripcion(cuentacontableventa,Constantes.SMENSAJE_ESCOJA_OPCION);
				cuentacontableventa.setId(null);

				if(!CuentaContableConstantesFunciones.ExisteEnLista(this.cuentacontableventasForeignKey,cuentacontableventa,true)) {

					this.cuentacontableventasForeignKey.add(0,cuentacontableventa);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCuentaContableDescuento()throws Exception {
		try {

			if(!this.bodegaproductoSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableDescuento()) {
				CuentaContable cuentacontabledescuento=new CuentaContable();
				CuentaContableConstantesFunciones.setCuentaContableDescripcion(cuentacontabledescuento,Constantes.SMENSAJE_ESCOJA_OPCION);
				cuentacontabledescuento.setId(null);

				if(!CuentaContableConstantesFunciones.ExisteEnLista(this.cuentacontabledescuentosForeignKey,cuentacontabledescuento,true)) {

					this.cuentacontabledescuentosForeignKey.add(0,cuentacontabledescuento);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCuentaContableProduccion()throws Exception {
		try {

			if(!this.bodegaproductoSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableProduccion()) {
				CuentaContable cuentacontableproduccion=new CuentaContable();
				CuentaContableConstantesFunciones.setCuentaContableDescripcion(cuentacontableproduccion,Constantes.SMENSAJE_ESCOJA_OPCION);
				cuentacontableproduccion.setId(null);

				if(!CuentaContableConstantesFunciones.ExisteEnLista(this.cuentacontableproduccionsForeignKey,cuentacontableproduccion,true)) {

					this.cuentacontableproduccionsForeignKey.add(0,cuentacontableproduccion);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCuentaContableDevolucion()throws Exception {
		try {

			if(!this.bodegaproductoSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableDevolucion()) {
				CuentaContable cuentacontabledevolucion=new CuentaContable();
				CuentaContableConstantesFunciones.setCuentaContableDescripcion(cuentacontabledevolucion,Constantes.SMENSAJE_ESCOJA_OPCION);
				cuentacontabledevolucion.setId(null);

				if(!CuentaContableConstantesFunciones.ExisteEnLista(this.cuentacontabledevolucionsForeignKey,cuentacontabledevolucion,true)) {

					this.cuentacontabledevolucionsForeignKey.add(0,cuentacontabledevolucion);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCuentaContableIngresoDebito()throws Exception {
		try {

			if(!this.bodegaproductoSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableIngresoDebito()) {
				CuentaContable cuentacontableingresodebito=new CuentaContable();
				CuentaContableConstantesFunciones.setCuentaContableDescripcion(cuentacontableingresodebito,Constantes.SMENSAJE_ESCOJA_OPCION);
				cuentacontableingresodebito.setId(null);

				if(!CuentaContableConstantesFunciones.ExisteEnLista(this.cuentacontableingresodebitosForeignKey,cuentacontableingresodebito,true)) {

					this.cuentacontableingresodebitosForeignKey.add(0,cuentacontableingresodebito);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCuentaContableIngresoCredito()throws Exception {
		try {

			if(!this.bodegaproductoSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableIngresoCredito()) {
				CuentaContable cuentacontableingresocredito=new CuentaContable();
				CuentaContableConstantesFunciones.setCuentaContableDescripcion(cuentacontableingresocredito,Constantes.SMENSAJE_ESCOJA_OPCION);
				cuentacontableingresocredito.setId(null);

				if(!CuentaContableConstantesFunciones.ExisteEnLista(this.cuentacontableingresocreditosForeignKey,cuentacontableingresocredito,true)) {

					this.cuentacontableingresocreditosForeignKey.add(0,cuentacontableingresocredito);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCuentaContableResultadoDebito()throws Exception {
		try {

			if(!this.bodegaproductoSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableResultadoDebito()) {
				CuentaContable cuentacontableresultadodebito=new CuentaContable();
				CuentaContableConstantesFunciones.setCuentaContableDescripcion(cuentacontableresultadodebito,Constantes.SMENSAJE_ESCOJA_OPCION);
				cuentacontableresultadodebito.setId(null);

				if(!CuentaContableConstantesFunciones.ExisteEnLista(this.cuentacontableresultadodebitosForeignKey,cuentacontableresultadodebito,true)) {

					this.cuentacontableresultadodebitosForeignKey.add(0,cuentacontableresultadodebito);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCuentaContableResultadoCredito()throws Exception {
		try {

			if(!this.bodegaproductoSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableResultadoCredito()) {
				CuentaContable cuentacontableresultadocredito=new CuentaContable();
				CuentaContableConstantesFunciones.setCuentaContableDescripcion(cuentacontableresultadocredito,Constantes.SMENSAJE_ESCOJA_OPCION);
				cuentacontableresultadocredito.setId(null);

				if(!CuentaContableConstantesFunciones.ExisteEnLista(this.cuentacontableresultadocreditosForeignKey,cuentacontableresultadocredito,true)) {

					this.cuentacontableresultadocreditosForeignKey.add(0,cuentacontableresultadocredito);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void initActionsCombosTodosForeignKeyBodegaProducto()throws Exception {
		try {
			
			this.initActionsCombosForeignKeyBodega("Todos");
			this.initActionsCombosForeignKeyProducto("Todos");
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void initActionsCombosTodosForeignKeyBodegaProducto(String sFormularioTipoBusqueda)throws Exception {
		try {
			
			this.initActionsCombosForeignKeyBodega(sFormularioTipoBusqueda);
			this.initActionsCombosForeignKeyProducto(sFormularioTipoBusqueda);
		} catch(Exception e) {
			throw e;
		}		
	}
	
	



	@SuppressWarnings("rawtypes")
	public void procesarActionsCombosForeignKeyBodega(JComboBox jComboBoxBodegaGenerico,String sFormularioTipoBusqueda)throws Exception {
		try {
			String sFinalQueryCombo="";
			Bodega bodegaLocal=(Bodega)jComboBoxBodegaGenerico.getSelectedItem();

			if(bodegaLocal!=null  && bodegaLocal.getId()!=null  && bodegaLocal.getId()>0) {
				sFinalQueryCombo="  WHERE  id_bodega="+bodegaLocal.getId();
			}
			//REDEFINE
			sFinalQueryCombo=InventarioSql.GetQueryProductoFromBodega(bodegaLocal);

			//COPIA PARA VENTANA BUSQUEDA
			this.sFinalQueryComboProducto=sFinalQueryCombo;

			this.productosForeignKey=new ArrayList<Producto>();
			this.cargarCombosForeignKeyProducto(true,false,false,sFinalQueryCombo,sFormularioTipoBusqueda);
		} catch(Exception e) {
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void procesarActionsCombosForeignKeyProducto(JComboBox jComboBoxProductoGenerico,String sFormularioTipoBusqueda)throws Exception {
		try {
			String sFinalQueryCombo="";
			Producto productoLocal=(Producto)jComboBoxProductoGenerico.getSelectedItem();

			if(productoLocal!=null  && productoLocal.getId()!=null  && productoLocal.getId()>0) {
				sFinalQueryCombo="  WHERE  id_producto="+productoLocal.getId();
			}
			//REDEFINE
			sFinalQueryCombo=InventarioSql.GetQueryUnidadFromBodegaYProducto(productoLocal,this.bodegaproducto.getid_bodega());

			//COPIA PARA VENTANA BUSQUEDA
			this.sFinalQueryComboUnidad=sFinalQueryCombo;

			this.unidadsForeignKey=new ArrayList<Unidad>();
			this.cargarCombosForeignKeyUnidad(true,false,false,sFinalQueryCombo,sFormularioTipoBusqueda);
		} catch(Exception e) {
			throw e;
		}
	}
	
	



	public void initActionsCombosForeignKeyBodega(String sFormularioTipoBusqueda)throws Exception {
		try {
			if(sFormularioTipoBusqueda.equals("Todos") || sFormularioTipoBusqueda.equals("Formulario")) {
				if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
					if(this.jInternalFrameDetalleFormBodegaProducto!=null) {
						this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_bodegaBodegaProducto.addItemListener(new ComboBoxItemListener(this,"id_bodegaBodegaProducto"));
						this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_bodegaBodegaProducto.addFocusListener(new ComboBoxFocusListener(this,"id_bodegaBodegaProducto"));
					}
				} else {
					if(this.jInternalFrameDetalleFormBodegaProducto!=null) {
						this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_bodegaBodegaProducto.addActionListener(new ComboBoxActionListener(this,"id_bodegaBodegaProducto"));
						this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_bodegaBodegaProducto.addFocusListener(new ComboBoxFocusListener(this,"id_bodegaBodegaProducto"));
					}
				}
			}

			if(sFormularioTipoBusqueda.equals("Todos")) {

				if(!this.conCargarMinimo) {
				
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						this.jComboBoxid_bodegaFK_IdBodegaBodegaProducto.addItemListener(new ComboBoxItemListener(this,"jComboBoxid_bodegaFK_IdBodegaBodegaProducto"));

						this.jComboBoxid_bodegaFK_IdBodegaBodegaProducto.addFocusListener(new ComboBoxFocusListener(this,"jComboBoxid_bodegaFK_IdBodegaBodegaProducto"));

					} else {
						this.jComboBoxid_bodegaFK_IdBodegaBodegaProducto.addActionListener(new ComboBoxActionListener(this,"jComboBoxid_bodegaFK_IdBodegaBodegaProducto"));

						this.jComboBoxid_bodegaFK_IdBodegaBodegaProducto.addFocusListener(new ComboBoxFocusListener(this,"jComboBoxid_bodegaFK_IdBodegaBodegaProducto"));

					}
			
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void initActionsCombosForeignKeyProducto(String sFormularioTipoBusqueda)throws Exception {
		try {
			if(sFormularioTipoBusqueda.equals("Todos") || sFormularioTipoBusqueda.equals("Formulario")) {
				if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
					if(this.jInternalFrameDetalleFormBodegaProducto!=null) {
						this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_productoBodegaProducto.addItemListener(new ComboBoxItemListener(this,"id_productoBodegaProducto"));
						this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_productoBodegaProducto.addFocusListener(new ComboBoxFocusListener(this,"id_productoBodegaProducto"));
					}
				} else {
					if(this.jInternalFrameDetalleFormBodegaProducto!=null) {
						this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_productoBodegaProducto.addActionListener(new ComboBoxActionListener(this,"id_productoBodegaProducto"));
						this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_productoBodegaProducto.addFocusListener(new ComboBoxFocusListener(this,"id_productoBodegaProducto"));
					}
				}
			}

			if(sFormularioTipoBusqueda.equals("Todos")) {

				if(!this.conCargarMinimo) {
				
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						this.jComboBoxid_productoFK_IdProductoBodegaProducto.addItemListener(new ComboBoxItemListener(this,"jComboBoxid_productoFK_IdProductoBodegaProducto"));

						this.jComboBoxid_productoFK_IdProductoBodegaProducto.addFocusListener(new ComboBoxFocusListener(this,"jComboBoxid_productoFK_IdProductoBodegaProducto"));

					} else {
						this.jComboBoxid_productoFK_IdProductoBodegaProducto.addActionListener(new ComboBoxActionListener(this,"jComboBoxid_productoFK_IdProductoBodegaProducto"));

						this.jComboBoxid_productoFK_IdProductoBodegaProducto.addFocusListener(new ComboBoxFocusListener(this,"jComboBoxid_productoFK_IdProductoBodegaProducto"));

					}
			
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesGlobalesCombosForeignKeyBodegaProducto()throws Exception {	
		try {
			if(this.parametroGeneralUsuario!=null && this.parametroGeneralUsuario.getId()>0) {
			
				this.setActualEmpresaForeignKey(this.parametroGeneralUsuario.getid_empresa(),false,"Formulario");
				this.setActualSucursalForeignKey(this.parametroGeneralUsuario.getid_sucursal(),false,"Formulario");
			
			
				this.bodegaproducto.setfecha_ultimo_pedido(this.parametroGeneralUsuario.getfecha_sistema());
				this.bodegaproducto.setfecha_ingreso(this.parametroGeneralUsuario.getfecha_sistema());
				this.bodegaproducto.setfecha_egreso(this.parametroGeneralUsuario.getfecha_sistema());
				this.bodegaproducto.setfecha_ultima_compra(this.parametroGeneralUsuario.getfecha_sistema());
				this.bodegaproducto.setfecha_ultima_venta(this.parametroGeneralUsuario.getfecha_sistema());
				this.bodegaproducto.setfecha_ultima_devolucion(this.parametroGeneralUsuario.getfecha_sistema());
			}
			
			//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
			this.setVariablesGlobalesAuxiliaresCombosForeignKeyBodegaProducto();
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToFormularioForeignKeyBodegaProducto(BodegaProducto bodegaproducto)throws Exception {	
		try {
			
			this.setActualBodegaForeignKey(bodegaproducto.getid_bodega(),false,"Formulario");
			this.setActualProductoForeignKey(bodegaproducto.getid_producto(),false,"Formulario");
			this.setActualUnidadForeignKey(bodegaproducto.getid_unidad(),false,"Formulario");
			this.setActualCentroCostoForeignKey(bodegaproducto.getid_centro_costo(),false,"Formulario");
			this.setActualEstadoBodegaProductoForeignKey(bodegaproducto.getid_estado_bodega_producto(),false,"Formulario");
			this.setActualCuentaContableInventarioForeignKey(bodegaproducto.getid_cuenta_contable_inventario(),false,"Formulario");
			this.setActualCuentaContableCostoVentaForeignKey(bodegaproducto.getid_cuenta_contable_costo_venta(),false,"Formulario");
			this.setActualCuentaContableVentaForeignKey(bodegaproducto.getid_cuenta_contable_venta(),false,"Formulario");
			this.setActualCuentaContableDescuentoForeignKey(bodegaproducto.getid_cuenta_contable_descuento(),false,"Formulario");
			this.setActualCuentaContableProduccionForeignKey(bodegaproducto.getid_cuenta_contable_produccion(),false,"Formulario");
			this.setActualCuentaContableDevolucionForeignKey(bodegaproducto.getid_cuenta_contable_devolucion(),false,"Formulario");
			this.setActualCuentaContableIngresoDebitoForeignKey(bodegaproducto.getid_cuenta_contable_ingreso_debito(),false,"Formulario");
			this.setActualCuentaContableIngresoCreditoForeignKey(bodegaproducto.getid_cuenta_contable_ingreso_credito(),false,"Formulario");
			this.setActualCuentaContableResultadoDebitoForeignKey(bodegaproducto.getid_cuenta_contable_resultado_debito(),false,"Formulario");
			this.setActualCuentaContableResultadoCreditoForeignKey(bodegaproducto.getid_cuenta_contable_resultado_credito(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToListasForeignKeyBodegaProducto(BodegaProducto bodegaproducto,String sTipoEvento)throws Exception {	
		try {
			
			

				if(bodegaproducto.getProducto()!=null && !sTipoEvento.equals("id_productoBodegaProducto")) { //sTipoEvento Evita Bucle Infinito

					this.productosForeignKey=new ArrayList<Producto>();
					this.productosForeignKey.add(bodegaproducto.getProducto());

					this.addItemDefectoCombosForeignKeyProducto();
					this.cargarCombosFrameProductosForeignKey("Todos");
				}
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	/*
	public void setVariablesCombosFromBeanForeignKeyBodegaProducto()throws Exception {	
		try {
			
			this.setActualBodegaForeignKey(this.bodegaproductoConstantesFunciones.getid_bodega(),false,"Formulario");
			this.setActualProductoForeignKey(this.bodegaproductoConstantesFunciones.getid_producto(),false,"Formulario");
			this.setActualUnidadForeignKey(this.bodegaproductoConstantesFunciones.getid_unidad(),false,"Formulario");
			this.setActualCentroCostoForeignKey(this.bodegaproductoConstantesFunciones.getid_centro_costo(),false,"Formulario");
			this.setActualEstadoBodegaProductoForeignKey(this.bodegaproductoConstantesFunciones.getid_estado_bodega_producto(),false,"Formulario");
			this.setActualCuentaContableInventarioForeignKey(this.bodegaproductoConstantesFunciones.getid_cuenta_contable_inventario(),false,"Formulario");
			this.setActualCuentaContableCostoVentaForeignKey(this.bodegaproductoConstantesFunciones.getid_cuenta_contable_costo_venta(),false,"Formulario");
			this.setActualCuentaContableVentaForeignKey(this.bodegaproductoConstantesFunciones.getid_cuenta_contable_venta(),false,"Formulario");
			this.setActualCuentaContableDescuentoForeignKey(this.bodegaproductoConstantesFunciones.getid_cuenta_contable_descuento(),false,"Formulario");
			this.setActualCuentaContableProduccionForeignKey(this.bodegaproductoConstantesFunciones.getid_cuenta_contable_produccion(),false,"Formulario");
			this.setActualCuentaContableDevolucionForeignKey(this.bodegaproductoConstantesFunciones.getid_cuenta_contable_devolucion(),false,"Formulario");
			this.setActualCuentaContableIngresoDebitoForeignKey(this.bodegaproductoConstantesFunciones.getid_cuenta_contable_ingreso_debito(),false,"Formulario");
			this.setActualCuentaContableIngresoCreditoForeignKey(this.bodegaproductoConstantesFunciones.getid_cuenta_contable_ingreso_credito(),false,"Formulario");
			this.setActualCuentaContableResultadoDebitoForeignKey(this.bodegaproductoConstantesFunciones.getid_cuenta_contable_resultado_debito(),false,"Formulario");
			this.setActualCuentaContableResultadoCreditoForeignKey(this.bodegaproductoConstantesFunciones.getid_cuenta_contable_resultado_credito(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	*/
	
	public void setVariablesGlobalesAuxiliaresCombosForeignKeyBodegaProducto()throws Exception {	
		try {
			
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesDefaultCombosForeignKeyBodegaProducto()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesParametroCombosForeignKeyBodegaProducto()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void cargarCombosParametroBodegaProducto()throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			//this.cargarDatosCliente();
			
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
		
	public void cargarCombosFrameForeignKeyBodegaProducto()throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey("Todos");
			this.cargarCombosFrameSucursalsForeignKey("Todos");
			this.cargarCombosFrameBodegasForeignKey("Todos");
			this.cargarCombosFrameProductosForeignKey("Todos");
			this.cargarCombosFrameUnidadsForeignKey("Todos");
			this.cargarCombosFrameCentroCostosForeignKey("Todos");
			this.cargarCombosFrameEstadoBodegaProductosForeignKey("Todos");
			this.cargarCombosFrameCuentaContableInventariosForeignKey("Todos");
			this.cargarCombosFrameCuentaContableCostoVentasForeignKey("Todos");
			this.cargarCombosFrameCuentaContableVentasForeignKey("Todos");
			this.cargarCombosFrameCuentaContableDescuentosForeignKey("Todos");
			this.cargarCombosFrameCuentaContableProduccionsForeignKey("Todos");
			this.cargarCombosFrameCuentaContableDevolucionsForeignKey("Todos");
			this.cargarCombosFrameCuentaContableIngresoDebitosForeignKey("Todos");
			this.cargarCombosFrameCuentaContableIngresoCreditosForeignKey("Todos");
			this.cargarCombosFrameCuentaContableResultadoDebitosForeignKey("Todos");
			this.cargarCombosFrameCuentaContableResultadoCreditosForeignKey("Todos");

		} catch(Exception e) {
			throw e;
		}		
	}		
	
	public void cargarCombosFrameForeignKeyBodegaProducto(String sFormularioTipoBusqueda)throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameSucursalsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameBodegasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameProductosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameUnidadsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCentroCostosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEstadoBodegaProductosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCuentaContableInventariosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCuentaContableCostoVentasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCuentaContableVentasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCuentaContableDescuentosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCuentaContableProduccionsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCuentaContableDevolucionsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCuentaContableIngresoDebitosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCuentaContableIngresoCreditosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCuentaContableResultadoDebitosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCuentaContableResultadoCreditosForeignKey(sFormularioTipoBusqueda);

		} catch(Exception e) {
			throw e;
		}		
	}	
	
	public void setItemDefectoCombosForeignKeyBodegaProducto()throws Exception {
		try {
			



			if(this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_empresaBodegaProducto!=null && this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_empresaBodegaProducto.getItemCount()>0) {
				this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_empresaBodegaProducto.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_sucursalBodegaProducto!=null && this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_sucursalBodegaProducto.getItemCount()>0) {
				this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_sucursalBodegaProducto.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_bodegaBodegaProducto!=null && this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_bodegaBodegaProducto.getItemCount()>0) {
				this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_bodegaBodegaProducto.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_productoBodegaProducto!=null && this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_productoBodegaProducto.getItemCount()>0) {
				this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_productoBodegaProducto.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_unidadBodegaProducto!=null && this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_unidadBodegaProducto.getItemCount()>0) {
				this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_unidadBodegaProducto.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_centro_costoBodegaProducto!=null && this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_centro_costoBodegaProducto.getItemCount()>0) {
				this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_centro_costoBodegaProducto.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_estado_bodega_productoBodegaProducto!=null && this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_estado_bodega_productoBodegaProducto.getItemCount()>0) {
				this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_estado_bodega_productoBodegaProducto.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_inventarioBodegaProducto!=null && this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_inventarioBodegaProducto.getItemCount()>0) {
				this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_inventarioBodegaProducto.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_costo_ventaBodegaProducto!=null && this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_costo_ventaBodegaProducto.getItemCount()>0) {
				this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_costo_ventaBodegaProducto.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_ventaBodegaProducto!=null && this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_ventaBodegaProducto.getItemCount()>0) {
				this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_ventaBodegaProducto.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_descuentoBodegaProducto!=null && this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_descuentoBodegaProducto.getItemCount()>0) {
				this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_descuentoBodegaProducto.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_produccionBodegaProducto!=null && this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_produccionBodegaProducto.getItemCount()>0) {
				this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_produccionBodegaProducto.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_devolucionBodegaProducto!=null && this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_devolucionBodegaProducto.getItemCount()>0) {
				this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_devolucionBodegaProducto.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_ingreso_debitoBodegaProducto!=null && this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_ingreso_debitoBodegaProducto.getItemCount()>0) {
				this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_ingreso_debitoBodegaProducto.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_ingreso_creditoBodegaProducto!=null && this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_ingreso_creditoBodegaProducto.getItemCount()>0) {
				this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_ingreso_creditoBodegaProducto.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_resultado_debitoBodegaProducto!=null && this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_resultado_debitoBodegaProducto.getItemCount()>0) {
				this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_resultado_debitoBodegaProducto.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_resultado_creditoBodegaProducto!=null && this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_resultado_creditoBodegaProducto.getItemCount()>0) {
				this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_resultado_creditoBodegaProducto.setSelectedIndex(0);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	





	public void recargarFormBodegaProductoBodega(JComboBox<?> jComboBoxGenericoBodega,String sFormularioTipoBusqueda) throws Exception {

		this.recargarFormBodegaProductoid_producto(jComboBoxGenericoBodega,sFormularioTipoBusqueda,"Bodega",false);
	}

	public void recargarFormBodegaProductoProducto(JComboBox<?> jComboBoxGenericoProducto,String sFormularioTipoBusqueda) throws Exception {

		this.recargarFormBodegaProductoid_unidad(jComboBoxGenericoProducto,sFormularioTipoBusqueda,"Producto",false);
	}


























	
	



	public void recargarFormBodegaProductoid_producto(JComboBox<?> jComboBoxGenericoProducto,String sFormularioTipoBusqueda,String sTipoComboOrigen,Boolean conIrServidorAplicacion) throws Exception {
		try {

			String sFinalQuery="";

			if(sTipoComboOrigen.equals("Bodega")){
				this.setActualParaGuardarBodegaForeignKey(this.bodegaproducto,jComboBoxGenericoProducto);
			}

			if(this.bodegaproducto.getid_bodega()!=null && this.bodegaproducto.getid_bodega()!=0L) {
				sFinalQuery+="  WHERE  id_bodega="+this.bodegaproducto.getid_bodega();
			} else {
				sFinalQuery+="  WHERE  id_bodega=-1";
			}



			//BUCLE RECURSIVO
			this.setActualProductoForeignKey(this.bodegaproducto.getid_bodega(),true,sFormularioTipoBusqueda);

			this.cargarCombosProductosForeignKeyLista(sFinalQuery);

			this.cargarCombosFrameProductosForeignKey(sFormularioTipoBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}



	public void recargarFormBodegaProductoid_unidad(JComboBox<?> jComboBoxGenericoUnidad,String sFormularioTipoBusqueda,String sTipoComboOrigen,Boolean conIrServidorAplicacion) throws Exception {
		try {

			String sFinalQuery="";

			if(sTipoComboOrigen.equals("Producto")){
				this.setActualParaGuardarProductoForeignKey(this.bodegaproducto,jComboBoxGenericoUnidad);
			}

			if(this.bodegaproducto.getid_producto()!=null && this.bodegaproducto.getid_producto()!=0L) {
				sFinalQuery+="  WHERE  id_producto="+this.bodegaproducto.getid_producto();
			} else {
				sFinalQuery+="  WHERE  id_producto=-1";
			}



			//BUCLE RECURSIVO
			this.setActualUnidadForeignKey(this.bodegaproducto.getid_producto(),true,sFormularioTipoBusqueda);

			this.cargarCombosUnidadsForeignKeyLista(sFinalQuery);

			this.cargarCombosFrameUnidadsForeignKey(sFormularioTipoBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public BodegaProductoBeanSwingJInternalFrame() throws Exception {
		super(false,PaginaTipo.PRINCIPAL);
	}
	
	public BodegaProductoBeanSwingJInternalFrame(Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
	}
	
	public BodegaProductoBeanSwingJInternalFrame(Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
		
		this.bodegaproductoSessionBean=new BodegaProductoSessionBean(); 
		this.bodegaproductoConstantesFunciones=new BodegaProductoConstantesFunciones(); 
		this.bodegaproductoBean=new BodegaProducto();//(this.bodegaproductoConstantesFunciones); 		
		this.bodegaproductoReturnGeneral=new BodegaProductoParameterReturnGeneral(); 
		
		this.bodegaproductoSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
		this.bodegaproductoSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
				
	}
	
	public BodegaProductoBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,cargarTodosDatos);
	}
		
	public BodegaProductoBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,false,false,cargarRelaciones,cargarTodosDatos);
	}	
	
	public BodegaProductoBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,PaginaTipo paginaTipo,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos) throws Exception //Boolean esParaBusquedaForeignKey
    {
		super(jdesktopPane,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		try {
			
			this.permiteRecargarForm=false;
			
			this.startProcessBodegaProducto(true);
			
			Boolean esParaBusquedaForeignKey=false;//ANTES USADO COMO PARAMETRO DEL CONSTRUCTOR
			
			if(paginaTipo.equals(PaginaTipo.BUSQUEDA)) {
				esParaBusquedaForeignKey=true;
			}
			
			
			
			//SE ASIGNA EN CLASE PADRE
			/*
			this.parametroGeneralSg=parametroGeneralSg;		
			this.parametroGeneralUsuario=parametroGeneralUsuario;	
			this.usuarioActual=usuarioActual;
			this.moduloActual=moduloActual;
			*/						
			
			long start_time=0;
			long end_time=0;
			
			if(Constantes2.ISDEVELOPING2) {
				start_time = System.currentTimeMillis();
			}
			
			if(!cargarTodosDatos) {
				this.sAccionBusqueda="NINGUNO";
			}
			
			this.bodegaproductoConstantesFunciones=new BodegaProductoConstantesFunciones(); 
			this.bodegaproductoBean=new BodegaProducto();//this.bodegaproductoConstantesFunciones); 			
			this.bodegaproductoReturnGeneral=new BodegaProductoParameterReturnGeneral(); 
		
			BodegaProductoBeanSwingJInternalFrameAdditional.CargaInicialInicio(this, "NORMAL", null);
			
			this.setTitle(Funciones.GetTituloSistema(this.parametroGeneralSg,this.moduloActual,this.usuarioActual,"Bodega Producto Mantenimiento",paginaTipo));			
			
			this.conTotales=false;
			
			this.conTotales=true;
			
			
			this.bodegaproducto=new BodegaProducto();
			this.bodegaproductos = new ArrayList<BodegaProducto>();
			this.bodegaproductosAux = new ArrayList<BodegaProducto>();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic=new BodegaProductoLogic();
				this.bodegaproductoLogic.getNewConnexionToDeep("");
			}
			
			//this.bodegaproductoSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
			//this.bodegaproductoSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
			
			this.jDesktopPane=jdesktopPane;
			
			if(this.jDesktopPane.getClass().equals(JDesktopPaneMe.class)) {
				this.constantes2=((JDesktopPaneMe)this.jDesktopPane).constantes2;
			}
			
			if(!Constantes.CON_VARIAS_VENTANAS) {
    			MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameDetalleFormBodegaProducto);
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameReporteDinamicoBodegaProducto!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoBodegaProducto);	
					}
					
					if(this.jInternalFrameImportacionBodegaProducto!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionBodegaProducto);							
					}
					
				}
				
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameOrderByBodegaProducto!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameOrderByBodegaProducto);					
					}
					
				}
			}
			
			//DETALLE DATOS
			if(this.jInternalFrameDetalleFormBodegaProducto!=null) { //this.conCargarFormDetalle) {
				this.jDesktopPane.add(this.jInternalFrameDetalleFormBodegaProducto);
				this.jInternalFrameDetalleFormBodegaProducto.setVisible(false);
				this.jInternalFrameDetalleFormBodegaProducto.setSelected(false);						
			}
			
			if(!this.conCargarMinimo) {
				
				//REPORTE DINAMICO
				if(this.jInternalFrameReporteDinamicoBodegaProducto!=null) {
					this.jDesktopPane.add(this.jInternalFrameReporteDinamicoBodegaProducto);
					this.jInternalFrameReporteDinamicoBodegaProducto.setVisible(false);
					this.jInternalFrameReporteDinamicoBodegaProducto.setSelected(false);
				}
				
				//IMPORTACION
				if(this.jInternalFrameImportacionBodegaProducto!=null) {
					this.jDesktopPane.add(this.jInternalFrameImportacionBodegaProducto);
					this.jInternalFrameImportacionBodegaProducto.setVisible(false);
					this.jInternalFrameImportacionBodegaProducto.setSelected(false);
				}
				
				
			}
			
			
			if(!this.conCargarMinimo) {
				
				if(this.jInternalFrameOrderByBodegaProducto!=null) {
					this.jDesktopPane.add(this.jInternalFrameOrderByBodegaProducto);
					this.jInternalFrameOrderByBodegaProducto.setVisible(false);
					this.jInternalFrameOrderByBodegaProducto.setSelected(false);				
				}
				
			}
			
			
			//this.esParaBusquedaForeignKey=false;
			this.esParaBusquedaForeignKey=esParaBusquedaForeignKey;
			
			this.invalidValues=new InvalidValue[0];
			
			
			
			this.idBodegaProductoActual=0L;
			this.rowIndexActual=0;
			
			
			this.iNumeroPaginacionPagina=0;
			this.iNumeroPaginacion=BodegaProductoConstantesFunciones.INUMEROPAGINACION;
			this.pagination=new Pagination();
			this.datosCliente=new DatosCliente();
			this.lIdUsuarioSesion=0L;	
			this.sTipoArchivoReporte="";
			this.sTipoArchivoReporteDinamico="";
			this.sTipoReporte="";
			this.sTipoReporteDinamico="";
			this.sTipoPaginacion="";
			this.sTipoRelacion="";
			this.sTipoAccion="";
			this.sTipoAccionFormulario="";
			this.sTipoSeleccionar="";			
			this.sDetalleReporte="";
			this.sTipoReporteExtra="";
			this.sValorCampoGeneral="";
			this.sPathReporteDinamico="";			
			
			this.isMostrarNumeroPaginacion=false;
			this.isSeleccionarTodos=false;
			this.isSeleccionados=false;
			this.conGraficoReporte=false;
			this.isPostAccionNuevo=false;
			this.isPostAccionSinCerrar=false;
			this.isPostAccionSinMensaje=false;
			this.esReporteDinamico=false;
			this.esRecargarFks=false;
			this.esReporteAccionProceso=false;
			
			this.bodegaproductoReturnGeneral=new BodegaProductoParameterReturnGeneral();
			
			this.bodegaproductoParameterGeneral=new BodegaProductoParameterReturnGeneral();
			
			
			
			this.sistemaLogicAdditional=new SistemaLogicAdditional();
			
			this.sistemaLogicAdditional.setConnexion(this.bodegaproductoLogic.getConnexion());			
			
			
			
			
			
			
			
			//VERIFICAR GLOBAL
			this.cargarDatosCliente();			
			
			
			if(!this.bodegaproductoSessionBean.getEsGuardarRelacionado()) {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarLicenciaCliente(this.datosCliente,this.moduloActual,this.usuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_CONTROLGLOBAL);
					}
					
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}			
			
			//VERIFICAR GLOBAL
			
			//VERIFICAR SESSION ACTUAL
			//this.cargarDatosCliente();
			
			this.sistemaReturnGeneral=new SistemaParameterReturnGeneral();
			
			SistemaParameterReturnGeneralAdditional.inicializarSinSeguridad(this.sistemaReturnGeneral);
			
			if(BodegaProductoJInternalFrame.CON_LLAMADA_SIMPLE) {
				if(this.bodegaproductoSessionBean.getEsGuardarRelacionado()) {
					this.opcionActual.setId(0L);
					
					//idOpcion=0L;					
				}
				
				ArrayList<String> arrPaginas=new ArrayList<String>();		
				ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
				
		
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					//this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActualWithConnection(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,BodegaProductoConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.bodegaproductoSessionBean.getEsGuardarRelacionado(),this.bodegaproductoSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,BodegaProductoConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.bodegaproductoSessionBean.getEsGuardarRelacionado(),this.bodegaproductoSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					if(!this.sistemaReturnGeneral.getEsValidado()) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
					//FALTA
				}
			} else { 
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			} 
			//VERIFICAR SESSION ACTUAL
			
			
			this.sVisibilidadTablaBusquedas="table-row";
			this.sVisibilidadTablaElementos="none";
			this.sVisibilidadTablaAcciones="none";
			
			this.isVisibilidadCeldaNuevoBodegaProducto=false;
			this.isVisibilidadCeldaDuplicarBodegaProducto=true;
			this.isVisibilidadCeldaCopiarBodegaProducto=true;
			this.isVisibilidadCeldaVerFormBodegaProducto=true;
			this.isVisibilidadCeldaOrdenBodegaProducto=true;
			this.isVisibilidadCeldaNuevoRelacionesBodegaProducto=false;
			this.isVisibilidadCeldaModificarBodegaProducto=false;
			this.isVisibilidadCeldaActualizarBodegaProducto=false;
			this.isVisibilidadCeldaEliminarBodegaProducto=false;
			this.isVisibilidadCeldaCancelarBodegaProducto=false;
			this.isVisibilidadCeldaGuardarBodegaProducto=false;
			this.isVisibilidadCeldaGuardarCambiosBodegaProducto=false;
			
			
			this.isVisibilidadFK_IdBodega=true;
			this.isVisibilidadFK_IdBodegaProducto=true;
			this.isVisibilidadFK_IdCentroCosto=true;
			this.isVisibilidadFK_IdCuentaContableCostoVenta=true;
			this.isVisibilidadFK_IdCuentaContableDescuento=true;
			this.isVisibilidadFK_IdCuentaContableDevolucion=true;
			this.isVisibilidadFK_IdCuentaContableIngresoCredito=true;
			this.isVisibilidadFK_IdCuentaContableIngresoDebito=true;
			this.isVisibilidadFK_IdCuentaContableInventario=true;
			this.isVisibilidadFK_IdCuentaContableProduccion=true;
			this.isVisibilidadFK_IdCuentaContableResultadoCredito=true;
			this.isVisibilidadFK_IdCuentaContableResultadoDebito=true;
			this.isVisibilidadFK_IdCuentaContableVenta=true;
			this.isVisibilidadFK_IdEmpresa=true;
			this.isVisibilidadFK_IdProducto=true;
			this.isVisibilidadFK_IdSucursal=true;
			this.isVisibilidadFK_IdUnidad=true;
			
			//ELEMENTOS TABLAS PARAMETOS
			
			
			
			//ELEMENTOS TABLAS PARAMETOS_FIN
			
			//this.actualizarEstadoCeldasBotonesBodegaProducto("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
						
			
			
			this.inicializarPermisosBodegaProducto();
			
			//INICIALIZAR FALSE, TALVEZ COMENTAR
			this.setPermisosUsuarioBodegaProducto(false);
			
			this.setPermisosUsuarioBodegaProducto();
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.bodegaproductoSessionBean.getEsGuardarRelacionado() 
				|| (this.bodegaproductoSessionBean.getEsGuardarRelacionado() && this.bodegaproductoSessionBean.getConGuardarRelaciones())) {
				
				this.inicializarSetPermisosUsuarioBodegaProductoClasesRelacionadas();
			}
			
			if(this.bodegaproductoSessionBean.getConGuardarRelaciones()) {
				this.actualizarTabsSetPermisosUsuarioBodegaProductoClasesRelacionadas();
			}
			
			
			
			//SOLO SE EJECUTA LA PRIMERA VEZ, BINDINGS SI FUNCIONA
			if(!BodegaProductoJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingBotonesPermisosBodegaProducto();
			} else {
				this.inicializarActualizarBindingBotonesPermisosManualBodegaProducto();
			}
			
			if(!this.isPermisoBusquedaBodegaProducto) {
				//BYDAN_BUSQUEDAS
				
				this.jTabbedPaneBusquedasBodegaProducto.setVisible(false);				
				
			}
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.bodegaproductoSessionBean.getEsGuardarRelacionado()) {				
				this.tiposArchivosReportes=Funciones.getListTiposArchivosReportes();
				this.tiposArchivosReportesDinamico=Funciones.getListTiposArchivosReportes();
				this.tiposReportes=Funciones.getListTiposReportes(true);
				this.tiposReportesDinamico=Funciones.getListTiposReportesDinamico(true);
				
				
				
				this.tiposGraficosReportes=Funciones2.getListTiposGraficosReportes();
				this.tiposPaginacion=Funciones2.getListTiposPaginacion(this.isPermisoPaginacionMedioBodegaProducto,this.isPermisoPaginacionMedioBodegaProducto,this.isPermisoPaginacionTodoBodegaProducto);
				this.tiposSeleccionar=Funciones2.getListTiposSeleccionar();
				this.tiposSeleccionar.addAll(BodegaProductoConstantesFunciones.getTiposSeleccionarBodegaProducto());
				
				this.tiposColumnasSelect=BodegaProductoConstantesFunciones.getTiposSeleccionarBodegaProducto(true);
				
				this.tiposRelacionesSelect=new ArrayList<Reporte>();								
				
				
			} else {
				this.tiposArchivosReportes=new ArrayList<Reporte>();
				this.tiposArchivosReportesDinamico=new ArrayList<Reporte>();
				this.tiposReportes=new ArrayList<Reporte>();
				this.tiposReportesDinamico=new ArrayList<Reporte>();
				this.tiposGraficosReportes=new ArrayList<Reporte>();
				this.tiposPaginacion=new ArrayList<Reporte>();
				this.tiposSeleccionar=new ArrayList<Reporte>();			
				this.tiposColumnasSelect=new ArrayList<Reporte>();	
				this.tiposRelacionesSelect=new ArrayList<Reporte>();	
			}
						
			
			//FUNCIONALIDAD_RELACIONADO
			//if(!this.bodegaproductoSessionBean.getEsGuardarRelacionado()) {
				//SE ENCUENTRA MAS ADELANTE CON ACCIONES POR USUARIO
				//ACCIONES GENERALES Y POR USUARIO
				this.tiposRelaciones=Funciones2.getListTiposRelaciones();
				this.setRelacionesUsuarioBodegaProducto();
				
				this.tiposAcciones=Funciones2.getListTiposAcciones(true,false,true);
				this.setAccionesUsuarioBodegaProducto(false);	
				
				this.tiposAccionesFormulario=Funciones2.getListTiposAccionesFormulario(true,false,true);							
				this.setAccionesUsuarioBodegaProducto(true);	
				
				this.inicializarActualizarBindingtiposArchivosReportesAccionesBodegaProducto() ;
			
			/*
			} else {
				this.tiposAcciones=new ArrayList<Reporte>();
				this.tiposAccionesFormulario=new ArrayList<Reporte>();
			}
			*/						
			
			this.inicializarInvalidValues();
						
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			
			
			this.arrOrderBy= new  ArrayList<OrderBy>();
			
			
			this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
			
			
			this.traerValoresTablaOrderBy();			
			
			
			this.isGuardarCambiosEnLote=false;
			this.isCargarCombosDependencia=false;
			
			 
			jasperPrint = null;												
			
			//FK
			
			this.empresaLogic=new EmpresaLogic();
			this.sucursalLogic=new SucursalLogic();
			this.bodegaLogic=new BodegaLogic();
			this.productoLogic=new ProductoLogic();
			this.unidadLogic=new UnidadLogic();
			this.centrocostoLogic=new CentroCostoLogic();
			this.estadobodegaproductoLogic=new EstadoBodegaProductoLogic();
			this.cuentacontableinventarioLogic=new CuentaContableLogic();
			this.cuentacontablecostoventaLogic=new CuentaContableLogic();
			this.cuentacontableventaLogic=new CuentaContableLogic();
			this.cuentacontabledescuentoLogic=new CuentaContableLogic();
			this.cuentacontableproduccionLogic=new CuentaContableLogic();
			this.cuentacontabledevolucionLogic=new CuentaContableLogic();
			this.cuentacontableingresodebitoLogic=new CuentaContableLogic();
			this.cuentacontableingresocreditoLogic=new CuentaContableLogic();
			this.cuentacontableresultadodebitoLogic=new CuentaContableLogic();
			this.cuentacontableresultadocreditoLogic=new CuentaContableLogic();
			
			//PARAMETROS
			
			
			/*
			if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {		
				hashtableEnv =  Funciones.getHashtableEnv();		
				initialContext = new InitialContext(hashtableEnv);	
			}
			*/
			/*
			if(Constantes.ISUSAEJBREMOTE) {
				bodegaproductoImplementable= (BodegaProductoImplementable) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+BodegaProductoConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBREMOTE);
			} else if(Constantes.ISUSAEJBHOME) {
				bodegaproductoImplementableHome= (BodegaProductoImplementableHome) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+BodegaProductoConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBLOCAL);
			}			
			*/
			
			
			this.bodegaproductos= new ArrayList<BodegaProducto>();
			this.bodegaproductosEliminados= new ArrayList<BodegaProducto>();
						
			this.isEsNuevoBodegaProducto=false;
			this.esParaAccionDesdeFormularioBodegaProducto=false;
			this.isEsMantenimientoRelacionesRelacionadoUnico=false;
			this.isEsMantenimientoRelaciones=false;
			this.isEsMantenimientoRelacionado=false;
			this.isContieneImagenes=false;
			
			
			
			
			//BUSQUEDA INTERNA FK
			this.idProductoActual=0L;
			
			//INICIALIZAR LISTAS FK
			
			this.empresasForeignKey=new ArrayList<Empresa>() ;
			this.sucursalsForeignKey=new ArrayList<Sucursal>() ;
			this.bodegasForeignKey=new ArrayList<Bodega>() ;
			this.productosForeignKey=new ArrayList<Producto>() ;
			this.unidadsForeignKey=new ArrayList<Unidad>() ;
			this.centrocostosForeignKey=new ArrayList<CentroCosto>() ;
			this.estadobodegaproductosForeignKey=new ArrayList<EstadoBodegaProducto>() ;
			this.cuentacontableinventariosForeignKey=new ArrayList<CuentaContable>() ;
			this.cuentacontablecostoventasForeignKey=new ArrayList<CuentaContable>() ;
			this.cuentacontableventasForeignKey=new ArrayList<CuentaContable>() ;
			this.cuentacontabledescuentosForeignKey=new ArrayList<CuentaContable>() ;
			this.cuentacontableproduccionsForeignKey=new ArrayList<CuentaContable>() ;
			this.cuentacontabledevolucionsForeignKey=new ArrayList<CuentaContable>() ;
			this.cuentacontableingresodebitosForeignKey=new ArrayList<CuentaContable>() ;
			this.cuentacontableingresocreditosForeignKey=new ArrayList<CuentaContable>() ;
			this.cuentacontableresultadodebitosForeignKey=new ArrayList<CuentaContable>() ;
			this.cuentacontableresultadocreditosForeignKey=new ArrayList<CuentaContable>() ;
			
			
			
			
			if(blncargarCombostrForeignKey) {
				this.cargarCombosForeignKeyBodegaProducto(this.isCargarCombosDependencia);
			}
			
			this.cargarCombosParametroBodegaProducto();
			
			
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.bodegaproductoSessionBean.getEsGuardarRelacionado()) {
				this.onLoad();
			}
						
			BodegaProductoBeanSwingJInternalFrameAdditional.RecargarVentanaSegunOpcion(this,opcionActual);
			
			/*
			if(blnCargarInformacionInicial) {
				this.recargarInformacion();
			}
			*/
			//this.iNumeroPaginacionPagina=0;
			//this.iNumeroPaginacion=BodegaProductoConstantesFunciones.INUMEROPAGINACION;
			
			this.actualizarEstadoCeldasBotonesBodegaProducto("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			//SOLO LA PRIMERA VEZ HACE LOS BINDINGS, SOLO AHI FUNCIONA
			this.inicializarActualizarBindingBodegaProducto(true); 
			
			//SE REDIMENSIONA SINO NO SE ACTUALIZA
			this.redimensionarTablaDatos();
			
			
			this.initActions();
			
			;
						
			if(this.jInternalFrameDetalleFormBodegaProducto!=null) {//if(this.conCargarFormDetalle) {
				this.cargarMenuRelaciones();
			}
			
			//OBLIGA CARGAR DETALLE, MEJOR DESHABILITAR, FALTA TALVEZ PONER EN SELECCIONAR
			//MAYBE
			//this.updateControlesFormularioBodegaProducto();
			
			if(!this.conCargarMinimo) {
				this.updateBusquedasFormularioBodegaProducto();
			}
			
			BodegaProductoBeanSwingJInternalFrameAdditional.CargaInicial(this, "NORMAL", null);
			
			
			//SE REALIZA ESTO PARA QUE SE PUEDA RECORRER TAB SIN IMPORTAR ORDEN
			Boolean existeTabBusqueda=false;
			
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				
				for(int i=0; i<this.jTabbedPaneBusquedasBodegaProducto.getTabCount(); i++) {
					this.jTabbedPaneBusquedasBodegaProducto.setSelectedIndex(i);
						
					if(!existeTabBusqueda) {
						existeTabBusqueda=true;
					}
				}
					
				if(existeTabBusqueda) {
					this.jTabbedPaneBusquedasBodegaProducto.setSelectedIndex(0);
				}	
				
				
			}
			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.commitNewConnexionToDeep();
			}
			
			
			if(Constantes2.ISDEVELOPING2) {
				end_time = System.currentTimeMillis();			
				String sTipo="Load Ventana";
				Funciones2.getMensajeTiempoEjecucion(start_time, end_time, sTipo,false);
			}  
			
			this.finishProcessBodegaProducto(true);
			
			this.dEnd=(double)System.currentTimeMillis();
			
			this.dDif=this.dEnd - this.dStart;
			
			if(Constantes.ISDEVELOPING) {
				System.out.println("Tiempo(ms) Carga BodegaProducto: " + this.dDif); 
			}
			
			this.permiteRecargarForm=true;
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.closeNewConnexionToDeep();
			}
		}	 
    }
	
	public void cargarTiposRelacionesSelectBodegaProducto() {
		Reporte reporte=new Reporte();
		
	
	}
	
	
	
	public void jTabbedPaneChangeListenerGeneral(String sTipo,ChangeEvent evt) { 	  
		Boolean procesaCargarParteTab=false;
			
		try {
			int iIndex=0;		    			
			String sTitle="";
			
			//TABBED PANE RELACIONES
			if(sTipo.equals("RelacionesBodegaProducto")) {
				iIndex=this.jInternalFrameDetalleFormBodegaProducto.jTabbedPaneRelacionesBodegaProducto.getSelectedIndex();		    
			
				sTitle=this.jInternalFrameDetalleFormBodegaProducto.jTabbedPaneRelacionesBodegaProducto.getTitleAt(iIndex);
				
				Integer intSelectedRow = 0;	
			
				intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();	
				
				
				
			}
			
			//TABBED PANE RELACIONES FIN(EXTRA TAB)
			;
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		} finally {
			if(procesaCargarParteTab) {				
				this.finishProcessBodegaProducto();	
			}
		}
    }
	
	
	
	public void jButtonRelacionActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		}
    }
	
	public void cargarMenuRelaciones() {	
		JMenuItem jmenuItem= new JMenuItem("General");
		String sLabelMenu="";
		
	}		
	
	public void cargarCombosForeignKeyBodegaProducto(Boolean cargarCombosDependencia) throws Exception {   
		this.cargarCombosForeignKeyBodegaProducto(cargarCombosDependencia,true,true);
	}
	
	//CARGAR COMBOS EN LOTE
	public void cargarCombosForeignKeyBodegaProducto(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales) throws Exception {   
		this.cargarCombosTodosForeignKeyBodegaProductoListas(cargarCombosDependencia);
				
		this.addItemDefectoCombosTodosForeignKeyBodegaProducto();
		
		this.cargarCombosFrameForeignKeyBodegaProducto();						
		
		if(conInitActions) {
			this.initActionsCombosTodosForeignKeyBodegaProducto();
		}
		
		if(conSetVariablesGlobales) {
			this.setVariablesGlobalesCombosForeignKeyBodegaProducto();
		}
	}
	
	

	public void cargarCombosForeignKeyBodega(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyBodegaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyBodega();
				this.cargarCombosFrameBodegasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyBodega("Todos");
				}

			this.recargarComboTablaBodega(this.bodegasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyProducto(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyProductoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyProducto();
				this.cargarCombosFrameProductosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyProducto("Todos");
				}

			this.recargarComboTablaProducto(this.productosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyUnidad(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyUnidadListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyUnidad();
				this.cargarCombosFrameUnidadsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyProducto("Todos");
				}

			this.recargarComboTablaUnidad(this.unidadsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCentroCosto(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCentroCostoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCentroCosto();
				this.cargarCombosFrameCentroCostosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyProducto("Todos");
				}

			this.recargarComboTablaCentroCosto(this.centrocostosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEstadoBodegaProducto(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyEstadoBodegaProductoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyEstadoBodegaProducto();
				this.cargarCombosFrameEstadoBodegaProductosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyProducto("Todos");
				}

			this.recargarComboTablaEstadoBodegaProducto(this.estadobodegaproductosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableInventario(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCuentaContableInventarioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCuentaContableInventario();
				this.cargarCombosFrameCuentaContableInventariosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyProducto("Todos");
				}

			this.recargarComboTablaCuentaContableInventario(this.cuentacontableinventariosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableCostoVenta(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCuentaContableCostoVentaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCuentaContableCostoVenta();
				this.cargarCombosFrameCuentaContableCostoVentasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyProducto("Todos");
				}

			this.recargarComboTablaCuentaContableCostoVenta(this.cuentacontablecostoventasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableVenta(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCuentaContableVentaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCuentaContableVenta();
				this.cargarCombosFrameCuentaContableVentasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyProducto("Todos");
				}

			this.recargarComboTablaCuentaContableVenta(this.cuentacontableventasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableDescuento(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCuentaContableDescuentoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCuentaContableDescuento();
				this.cargarCombosFrameCuentaContableDescuentosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyProducto("Todos");
				}

			this.recargarComboTablaCuentaContableDescuento(this.cuentacontabledescuentosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableProduccion(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCuentaContableProduccionListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCuentaContableProduccion();
				this.cargarCombosFrameCuentaContableProduccionsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyProducto("Todos");
				}

			this.recargarComboTablaCuentaContableProduccion(this.cuentacontableproduccionsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableDevolucion(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCuentaContableDevolucionListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCuentaContableDevolucion();
				this.cargarCombosFrameCuentaContableDevolucionsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyProducto("Todos");
				}

			this.recargarComboTablaCuentaContableDevolucion(this.cuentacontabledevolucionsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableIngresoDebito(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCuentaContableIngresoDebitoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCuentaContableIngresoDebito();
				this.cargarCombosFrameCuentaContableIngresoDebitosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyProducto("Todos");
				}

			this.recargarComboTablaCuentaContableIngresoDebito(this.cuentacontableingresodebitosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableIngresoCredito(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCuentaContableIngresoCreditoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCuentaContableIngresoCredito();
				this.cargarCombosFrameCuentaContableIngresoCreditosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyProducto("Todos");
				}

			this.recargarComboTablaCuentaContableIngresoCredito(this.cuentacontableingresocreditosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableResultadoDebito(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCuentaContableResultadoDebitoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCuentaContableResultadoDebito();
				this.cargarCombosFrameCuentaContableResultadoDebitosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyProducto("Todos");
				}

			this.recargarComboTablaCuentaContableResultadoDebito(this.cuentacontableresultadodebitosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableResultadoCredito(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCuentaContableResultadoCreditoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCuentaContableResultadoCredito();
				this.cargarCombosFrameCuentaContableResultadoCreditosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyProducto("Todos");
				}

			this.recargarComboTablaCuentaContableResultadoCredito(this.cuentacontableresultadocreditosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void jButtonNuevoBodegaProductoActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.FORM_RECARGAR;
			String sTipo="NUEVO_NORMAL";
			
			this.estaModoNuevo=true;
			
			if(this.bodegaproductoSessionBean.getConGuardarRelaciones()) {
				this.dStart=(double)System.currentTimeMillis();
			}
				
			//if(this.esUsoDesdeHijo) {
			//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			//}
											
			if(this.jInternalFrameDetalleFormBodegaProducto==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}			
				
			BodegaProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.bodegaproducto,new Object(),this.bodegaproductoParameterGeneral,this.bodegaproductoReturnGeneral);
			
			
			if(jTableDatosBodegaProducto.getRowCount()>=1) {
				jTableDatosBodegaProducto.removeRowSelectionInterval(0, jTableDatosBodegaProducto.getRowCount()-1);						
			}
			
			this.isEsNuevoBodegaProducto=true;
			
			//ESTABLECE SI ES RELACIONADO O NO 
			this.habilitarDeshabilitarTipoMantenimientoBodegaProducto(esRelaciones);
			
			this.nuevoPreparar(false); 
			this.habilitarDeshabilitarControlesBodegaProducto(true);			
			//this.bodegaproducto=new BodegaProducto();
			//this.bodegaproducto.setIsChanged(true);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesBodegaProducto(false) ;						
			 
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualBodegaProducto() ;
			
			if(BodegaProductoJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleBodegaProducto(esRelaciones);
			}
					
			//Se Duplica, sin sentido
			//this.actualizarInformacion("EVENTO_NUEVO",false,this.bodegaproducto);	
			this.actualizarInformacion("INFO_PADRE",false,this.bodegaproducto);				
			
			BodegaProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.bodegaproducto,new Object(),this.bodegaproductoParameterGeneral,this.bodegaproductoReturnGeneral);
			
			if(this.bodegaproductoSessionBean.getConGuardarRelaciones()) {
				this.dEnd=(double)System.currentTimeMillis();					
				this.dDif=this.dEnd - this.dStart;
					
				if(Constantes.ISDEVELOPING) {
					System.out.println("Tiempo(ms) Nuevo Preparar BodegaProducto: " + this.dDif); 
				}
			}
			
			//false para que pueda generar eventos
			this.estaModoNuevo=false;
							
			//Con this.estaModoNuevo=false;, se permite actualizar y usar eventos control al mismo tiempo (FuncionTipo.LAST)			
			BodegaProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.LAST,ControlTipo.FORM,EventoTipo.CLIC,EventoSubTipo.NEW,sTipo,this.bodegaproducto,new Object(),this.bodegaproductoParameterGeneral,this.bodegaproductoReturnGeneral);
			
		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;			
		}
	}
	
	public void jButtonDuplicarBodegaProductoActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			Boolean soloDuplicarUno=false;
			Boolean conSeleccionarFilaTabla=false;
			
			this.estaModoNuevo=true;
			this.estaModoDuplicar=true;
			
			ArrayList<BodegaProducto> bodegaproductosSeleccionados=new ArrayList<BodegaProducto>();
			int intSelectedRow =-1;
			Integer iNumRowsSeleccionados=0;
			int[] arrNumRowsSeleccionados=null;
			
			//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
			if(conSeleccionarFilaTabla) {
				arrNumRowsSeleccionados=this.jTableDatosBodegaProducto.getSelectedRows();
				iNumRowsSeleccionados=this.jTableDatosBodegaProducto.getSelectedRows().length;			
			}
			
			bodegaproductosSeleccionados=this.getBodegaProductosSeleccionados(false);
				
			if((soloDuplicarUno && iNumRowsSeleccionados.equals(1)) || !soloDuplicarUno) {
				//LO HACE NUEVOPREPARAR
				//this.iIdNuevoBodegaProducto--;			
				//BodegaProducto bodegaproductoAux= new BodegaProducto();			
				//bodegaproductoAux.setId(this.iIdNuevoBodegaProducto);																
				
				//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
				//BodegaProducto bodegaproductoOrigen=new BodegaProducto();
				//for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {				
				
				for(BodegaProducto bodegaproductoOrigen : bodegaproductosSeleccionados) {
					if(conSeleccionarFilaTabla) {
						if(!soloDuplicarUno) {
							//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
							//intSelectedRow =iNumRowSeleccionado;
						} else {
							intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();
						}
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							bodegaproductoOrigen =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							bodegaproductoOrigen =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
						}
					}
					
					this.aumentarTamanioFilaNuevaTablaBodegaProducto();
					
					if(this.conTotales) {
						this.quitarFilaTotales();
					}
					
					this.nuevoPreparar(true);
					
					this.bodegaproducto.setsType("DUPLICADO");
					
					this.setCopiarVariablesObjetosBodegaProducto(bodegaproductoOrigen,this.bodegaproducto,true,true);
					
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
					
					//LO HACE NUEVOPREPARAR
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.bodegaproductoLogic.getBodegaProductos().add(this.bodegaproductoAux);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.bodegaproductos.add(this.bodegaproductoAux);				
					}
					*/
				}
				
				this.inicializarActualizarBindingTablaBodegaProducto(false);
				
				this.jTableDatosBodegaProducto.setRowSelectionInterval(this.getIndiceNuevoBodegaProducto(), this.getIndiceNuevoBodegaProducto());
				
				int iLastRow =  this.jTableDatosBodegaProducto.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosBodegaProducto.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosBodegaProducto.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaBodegaProducto(false);
				}
			} else {
				throw new Exception("DEBE ESTAR SELECCIONADO 1 REGISTRO");
			}
			
		} catch(Exception e) {			
			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
		
		} finally {
			this.estaModoNuevo=false;
			this.estaModoDuplicar=false;
		}
	}
	
	public void jButtonCopiarBodegaProductoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			Boolean conSeleccionarFilaTabla=false;
			Integer iNumRowsSeleccionados=0;
			int[] intSelectedRows =null;
			int intSelectedRow =0;
			
			this.estaModoCopiar=true;
			
			ArrayList<BodegaProducto> bodegaproductosSeleccionados=new ArrayList<BodegaProducto>();									
		
			BodegaProducto bodegaproductoOrigen=new BodegaProducto();
			BodegaProducto bodegaproductoDestino=new BodegaProducto();
				
			bodegaproductosSeleccionados=this.getBodegaProductosSeleccionados(false);
			
			if(conSeleccionarFilaTabla) {
				iNumRowsSeleccionados=this.jTableDatosBodegaProducto.getSelectedRows().length;	
			}
			
			if(iNumRowsSeleccionados.equals(2) || bodegaproductosSeleccionados.size()==2) {
				if(conSeleccionarFilaTabla) {
					intSelectedRows =this.jTableDatosBodegaProducto.getSelectedRows();
					intSelectedRow = intSelectedRows[0];	
									
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						bodegaproductoOrigen =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						bodegaproductoOrigen =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					intSelectedRow = intSelectedRows[1];
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						bodegaproductoDestino =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						bodegaproductoDestino =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				}
				
				bodegaproductoOrigen =bodegaproductosSeleccionados.get(0);
				bodegaproductoDestino =bodegaproductosSeleccionados.get(1);
				
				this.setCopiarVariablesObjetosBodegaProducto(bodegaproductoOrigen,bodegaproductoDestino,true,false);
				
				bodegaproductoDestino.setsType("DUPLICADO");
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(bodegaproductoDestino,bodegaproductoLogic.getBodegaProductos());					
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(bodegaproductoDestino,bodegaproductos);
				}
				//ARCHITECTURE
				
				this.inicializarActualizarBindingTablaBodegaProducto(false);
				
				//this.jTableDatosBodegaProducto.setRowSelectionInterval(this.getIndiceNuevoBodegaProducto(), this.getIndiceNuevoBodegaProducto());
				
				int iLastRow =  this.jTableDatosBodegaProducto.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosBodegaProducto.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosBodegaProducto.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					//this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaBodegaProducto(false);
				}
			} else {
				throw new Exception("DEBEN ESTAR SELECCIONADOS 2 REGISTROS");
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.estaModoCopiar=false;
		}
	}
	
	public void jButtonVerFormBodegaProductoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormBodegaProducto==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.jInternalFrameDetalleFormBodegaProducto.setSelected(true);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonMostrarOcultarBodegaProductoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			Boolean isVisible=this.jPanelParametrosReportesBodegaProducto.isVisible();
			
			//BYDAN_BUSQUEDAS
			
			this.jTabbedPaneBusquedasBodegaProducto.setVisible(!isVisible);			
			
			
			this.jPanelParametrosReportesBodegaProducto.setVisible(!isVisible);
			this.jPanelPaginacionBodegaProducto.setVisible(!isVisible);
			this.jPanelAccionesBodegaProducto.setVisible(!isVisible);
							
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarBodegaProductoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.closingInternalFrameBodegaProducto();
			
			//if(this.jInternalFrameParent==null) {
				//this.dispose();
			/*} else {
				this.setVisible(false);
	        	this.setSelected(false);	
			}*/			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarReporteDinamicoBodegaProductoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameReporteDinamicoBodegaProducto();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarImportacionBodegaProductoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameImportacionBodegaProducto();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonAbrirOrderByBodegaProductoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			
			this.abrirInicializarFrameOrderByBodegaProducto();
			
			this.abrirFrameOrderByBodegaProducto();
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarOrderByBodegaProductoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameOrderByBodegaProducto();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void abrirFrameDetalleBodegaProducto(Boolean esRelaciones) throws Exception {	    	        
	    try {
			//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
			//this.jDesktopPane.add(jInternalFrameDetalleFormBodegaProducto);
			
			if(!esRelaciones) {
				if(this.jInternalFrameDetalleFormBodegaProducto.isMaximum()) {
					this.jInternalFrameDetalleFormBodegaProducto.setMaximum(false);
				}								
				
	    		this.jInternalFrameDetalleFormBodegaProducto.setSize(this.jInternalFrameDetalleFormBodegaProducto.iWidthFormulario,this.jInternalFrameDetalleFormBodegaProducto.iHeightFormulario);
	    	} else {
				if(this.iWidthScroll<this.jInternalFrameDetalleFormBodegaProducto.iWidthFormularioMaximo) {
	    			this.jInternalFrameDetalleFormBodegaProducto.setSize(this.iWidthScroll,this.iHeightScroll);
				} else {
					if(!this.jInternalFrameDetalleFormBodegaProducto.isMaximum()) {
						this.jInternalFrameDetalleFormBodegaProducto.setMaximum(true);
					}
				}
				
				if(this.jInternalFrameDetalleFormBodegaProducto.jContentPaneDetalleBodegaProducto.getWidth() > this.getWidth()) {
					this.jInternalFrameDetalleFormBodegaProducto.jTabbedPaneRelacionesBodegaProducto.setMinimumSize(new Dimension(this.jInternalFrameDetalleFormBodegaProducto.jContentPaneDetalleBodegaProducto.getWidth(),BodegaProductoConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormBodegaProducto.jTabbedPaneRelacionesBodegaProducto.setMaximumSize(new Dimension(this.jInternalFrameDetalleFormBodegaProducto.jContentPaneDetalleBodegaProducto.getWidth(),BodegaProductoConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormBodegaProducto.jTabbedPaneRelacionesBodegaProducto.setPreferredSize(new Dimension(this.jInternalFrameDetalleFormBodegaProducto.jContentPaneDetalleBodegaProducto.getWidth(),BodegaProductoConstantesFunciones.ALTO_TABPANE_RELACIONES));
					
					Dimension dimension=new Dimension(); 
					
					
					
				}
	    	}
			
		
	       	this.jInternalFrameDetalleFormBodegaProducto.setVisible(true);
	        this.jInternalFrameDetalleFormBodegaProducto.setSelected(true);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirInicializarFrameOrderByBodegaProducto() throws Exception {	    	        
	    try {
			if(this.jInternalFrameOrderByBodegaProducto==null) {
				
				if(!this.conCargarMinimo) {
					this.jInternalFrameOrderByBodegaProducto=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByBodegaProducto,false,this);
				} else {
					this.jInternalFrameOrderByBodegaProducto=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByBodegaProducto,true,this);
				}
				
				this.jDesktopPane.add(this.jInternalFrameOrderByBodegaProducto);
				this.jInternalFrameOrderByBodegaProducto.setVisible(false);
				this.jInternalFrameOrderByBodegaProducto.setSelected(false);
				
				this.jInternalFrameOrderByBodegaProducto.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByBodegaProducto"));
				
				this.inicializarActualizarBindingTablaOrderByBodegaProducto();
			}
		} catch (final Exception e) {
			
		}
	}
	
	
	
	public void abrirInicializarFrameImportacionBodegaProducto() throws Exception {	    	        
	    try {
			if(this.jInternalFrameImportacionBodegaProducto==null) {
				
				this.jInternalFrameImportacionBodegaProducto=new ImportacionJInternalFrame(BodegaProductoConstantesFunciones.SCLASSWEBTITULO,this);			
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionBodegaProducto);							
				
				this.jDesktopPane.add(this.jInternalFrameImportacionBodegaProducto);
				this.jInternalFrameImportacionBodegaProducto.setVisible(false);
				this.jInternalFrameImportacionBodegaProducto.setSelected(false);


				this.jInternalFrameImportacionBodegaProducto.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionBodegaProducto"));
				this.jInternalFrameImportacionBodegaProducto.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionBodegaProducto"));
				this.jInternalFrameImportacionBodegaProducto.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionBodegaProducto"));


			}
		} catch (final Exception e) {
			
		}
	}		
	
	
	
	public void abrirInicializarFrameReporteDinamicoBodegaProducto() throws Exception {	    	        
	    try {
			
			if(this.jInternalFrameReporteDinamicoBodegaProducto==null) {
				this.jInternalFrameReporteDinamicoBodegaProducto=new ReporteDinamicoJInternalFrame(BodegaProductoConstantesFunciones.SCLASSWEBTITULO,this);	
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoBodegaProducto);	
	
	
				this.jDesktopPane.add(this.jInternalFrameReporteDinamicoBodegaProducto);
				this.jInternalFrameReporteDinamicoBodegaProducto.setVisible(false);
				this.jInternalFrameReporteDinamicoBodegaProducto.setSelected(false);
	
	
	
				this.jInternalFrameReporteDinamicoBodegaProducto.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoBodegaProducto"));
				this.jInternalFrameReporteDinamicoBodegaProducto.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoBodegaProducto"));
				this.jInternalFrameReporteDinamicoBodegaProducto.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoBodegaProducto"));
	
				this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualBodegaProducto();
			}

		} catch (final Exception e) {
			
		}
	}	
	
	
	
		
					
	public void cerrarFrameDetalleBodegaProducto() throws Exception {	    	        
	    try {
			//this.jDesktopPane.add(jInternalFrameDetalleFormBodegaProducto);
			
	       	this.jInternalFrameDetalleFormBodegaProducto.setVisible(false);
	        this.jInternalFrameDetalleFormBodegaProducto.setSelected(false);
			
			//this.jInternalFrameDetalleFormBodegaProducto.dispose();
			//this.jInternalFrameDetalleFormBodegaProducto=null;
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirFrameReporteDinamicoBodegaProducto() throws Exception {	    	        
	    try {
			
			this.jInternalFrameReporteDinamicoBodegaProducto.setVisible(true);
	        this.jInternalFrameReporteDinamicoBodegaProducto.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void abrirFrameImportacionBodegaProducto() throws Exception {	    	        		
	    try {			
			this.jInternalFrameImportacionBodegaProducto.setVisible(true);
	        this.jInternalFrameImportacionBodegaProducto.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
	    }		
	}	
	
	
	
	
	
	public void abrirFrameOrderByBodegaProducto() throws Exception {	    	        		
	    try {
			this.jInternalFrameOrderByBodegaProducto.setVisible(true);
	        this.jInternalFrameOrderByBodegaProducto.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameOrderByBodegaProducto() throws Exception {	    	        		
	    try {			
			this.jInternalFrameOrderByBodegaProducto.setVisible(false);
	        this.jInternalFrameOrderByBodegaProducto.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameReporteDinamicoBodegaProducto() throws Exception {			
	    try {
			this.jInternalFrameReporteDinamicoBodegaProducto.setVisible(false);
	        this.jInternalFrameReporteDinamicoBodegaProducto.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameImportacionBodegaProducto() throws Exception {	    	        		
	    try {
			this.jInternalFrameImportacionBodegaProducto.setVisible(false);
	        this.jInternalFrameImportacionBodegaProducto.setSelected(false);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	

				public void abrirFrameTreeCentroCosto(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeCentroCosto);
						CentroCostoBeanSwingJInternalFrame centrocostoBeanSwingJInternalFrame=new CentroCostoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						centrocostoBeanSwingJInternalFrame.setJInternalFrameParent(this);
						centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.sTipoBusqueda="CentroCosto";
						}

						centrocostoBeanSwingJInternalFrame.getTodosCentroCostoArbol();
						centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.setCentroCostos(centrocostoBeanSwingJInternalFrame.centrocostosArbol);
						centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.CargarTreeCentroCosto();
						centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.setVisible(true);
						centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.jInternalFrameParent=this;
						TitledBorder titledBorderBodegaProducto=(TitledBorder)this.jScrollPanelDatosBodegaProducto.getBorder();
						TitledBorder titledBorderCentroCosto=(TitledBorder)centrocostoBeanSwingJInternalFrame.jScrollPanelDatosCentroCosto.getBorder();

						titledBorderCentroCosto.setTitle(titledBorderBodegaProducto.getTitle() + " -> Centro Costo");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,centrocostoBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(centrocostoBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeCentroCosto(CentroCostoBeanSwingJInternalFrame jInternalFrameTreeCentroCosto) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeCentroCosto);
						jInternalFrameTreeCentroCosto.setVisible(false);
						jInternalFrameTreeCentroCosto.setSelected(false);
						//jInternalFrameTreeCentroCosto.dispose();
						//jInternalFrameTreeCentroCosto=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}

				public void abrirFrameTreeCuentaContableInventario(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeCuentaContable);
						CuentaContableBeanSwingJInternalFrame cuentacontableBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						cuentacontableBeanSwingJInternalFrame.setJInternalFrameParent(this);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.sTipoBusqueda="CuentaContableInventario";
						}

						cuentacontableBeanSwingJInternalFrame.getTodosCuentaContableArbol();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setCuentaContables(cuentacontableBeanSwingJInternalFrame.cuentacontablesArbol);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.CargarTreeCuentaContable();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setVisible(true);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.jInternalFrameParent=this;
						TitledBorder titledBorderBodegaProducto=(TitledBorder)this.jScrollPanelDatosBodegaProducto.getBorder();
						TitledBorder titledBorderCuentaContableInventario=(TitledBorder)cuentacontableBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

						titledBorderCuentaContableInventario.setTitle(titledBorderBodegaProducto.getTitle() + " -> Cuenta Contable");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,cuentacontableBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(cuentacontableBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeCuentaContableInventario(CuentaContableBeanSwingJInternalFrame jInternalFrameTreeCuentaContable) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeCuentaContable);
						jInternalFrameTreeCuentaContable.setVisible(false);
						jInternalFrameTreeCuentaContable.setSelected(false);
						//jInternalFrameTreeCuentaContable.dispose();
						//jInternalFrameTreeCuentaContable=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}

				public void abrirFrameTreeCuentaContableCostoVenta(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeCuentaContable);
						CuentaContableBeanSwingJInternalFrame cuentacontableBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						cuentacontableBeanSwingJInternalFrame.setJInternalFrameParent(this);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.sTipoBusqueda="CuentaContableCostoVenta";
						}

						cuentacontableBeanSwingJInternalFrame.getTodosCuentaContableArbol();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setCuentaContables(cuentacontableBeanSwingJInternalFrame.cuentacontablesArbol);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.CargarTreeCuentaContable();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setVisible(true);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.jInternalFrameParent=this;
						TitledBorder titledBorderBodegaProducto=(TitledBorder)this.jScrollPanelDatosBodegaProducto.getBorder();
						TitledBorder titledBorderCuentaContableCostoVenta=(TitledBorder)cuentacontableBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

						titledBorderCuentaContableCostoVenta.setTitle(titledBorderBodegaProducto.getTitle() + " -> Cuenta Contable");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,cuentacontableBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(cuentacontableBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeCuentaContableCostoVenta(CuentaContableBeanSwingJInternalFrame jInternalFrameTreeCuentaContable) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeCuentaContable);
						jInternalFrameTreeCuentaContable.setVisible(false);
						jInternalFrameTreeCuentaContable.setSelected(false);
						//jInternalFrameTreeCuentaContable.dispose();
						//jInternalFrameTreeCuentaContable=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}

				public void abrirFrameTreeCuentaContableVenta(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeCuentaContable);
						CuentaContableBeanSwingJInternalFrame cuentacontableBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						cuentacontableBeanSwingJInternalFrame.setJInternalFrameParent(this);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.sTipoBusqueda="CuentaContableVenta";
						}

						cuentacontableBeanSwingJInternalFrame.getTodosCuentaContableArbol();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setCuentaContables(cuentacontableBeanSwingJInternalFrame.cuentacontablesArbol);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.CargarTreeCuentaContable();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setVisible(true);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.jInternalFrameParent=this;
						TitledBorder titledBorderBodegaProducto=(TitledBorder)this.jScrollPanelDatosBodegaProducto.getBorder();
						TitledBorder titledBorderCuentaContableVenta=(TitledBorder)cuentacontableBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

						titledBorderCuentaContableVenta.setTitle(titledBorderBodegaProducto.getTitle() + " -> Cuenta Contable");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,cuentacontableBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(cuentacontableBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeCuentaContableVenta(CuentaContableBeanSwingJInternalFrame jInternalFrameTreeCuentaContable) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeCuentaContable);
						jInternalFrameTreeCuentaContable.setVisible(false);
						jInternalFrameTreeCuentaContable.setSelected(false);
						//jInternalFrameTreeCuentaContable.dispose();
						//jInternalFrameTreeCuentaContable=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}

				public void abrirFrameTreeCuentaContableDescuento(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeCuentaContable);
						CuentaContableBeanSwingJInternalFrame cuentacontableBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						cuentacontableBeanSwingJInternalFrame.setJInternalFrameParent(this);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.sTipoBusqueda="CuentaContableDescuento";
						}

						cuentacontableBeanSwingJInternalFrame.getTodosCuentaContableArbol();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setCuentaContables(cuentacontableBeanSwingJInternalFrame.cuentacontablesArbol);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.CargarTreeCuentaContable();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setVisible(true);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.jInternalFrameParent=this;
						TitledBorder titledBorderBodegaProducto=(TitledBorder)this.jScrollPanelDatosBodegaProducto.getBorder();
						TitledBorder titledBorderCuentaContableDescuento=(TitledBorder)cuentacontableBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

						titledBorderCuentaContableDescuento.setTitle(titledBorderBodegaProducto.getTitle() + " -> Cuenta Contable");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,cuentacontableBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(cuentacontableBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeCuentaContableDescuento(CuentaContableBeanSwingJInternalFrame jInternalFrameTreeCuentaContable) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeCuentaContable);
						jInternalFrameTreeCuentaContable.setVisible(false);
						jInternalFrameTreeCuentaContable.setSelected(false);
						//jInternalFrameTreeCuentaContable.dispose();
						//jInternalFrameTreeCuentaContable=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}

				public void abrirFrameTreeCuentaContableProduccion(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeCuentaContable);
						CuentaContableBeanSwingJInternalFrame cuentacontableBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						cuentacontableBeanSwingJInternalFrame.setJInternalFrameParent(this);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.sTipoBusqueda="CuentaContableProduccion";
						}

						cuentacontableBeanSwingJInternalFrame.getTodosCuentaContableArbol();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setCuentaContables(cuentacontableBeanSwingJInternalFrame.cuentacontablesArbol);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.CargarTreeCuentaContable();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setVisible(true);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.jInternalFrameParent=this;
						TitledBorder titledBorderBodegaProducto=(TitledBorder)this.jScrollPanelDatosBodegaProducto.getBorder();
						TitledBorder titledBorderCuentaContableProduccion=(TitledBorder)cuentacontableBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

						titledBorderCuentaContableProduccion.setTitle(titledBorderBodegaProducto.getTitle() + " -> Cuenta Contable");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,cuentacontableBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(cuentacontableBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeCuentaContableProduccion(CuentaContableBeanSwingJInternalFrame jInternalFrameTreeCuentaContable) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeCuentaContable);
						jInternalFrameTreeCuentaContable.setVisible(false);
						jInternalFrameTreeCuentaContable.setSelected(false);
						//jInternalFrameTreeCuentaContable.dispose();
						//jInternalFrameTreeCuentaContable=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}

				public void abrirFrameTreeCuentaContableDevolucion(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeCuentaContable);
						CuentaContableBeanSwingJInternalFrame cuentacontableBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						cuentacontableBeanSwingJInternalFrame.setJInternalFrameParent(this);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.sTipoBusqueda="CuentaContableDevolucion";
						}

						cuentacontableBeanSwingJInternalFrame.getTodosCuentaContableArbol();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setCuentaContables(cuentacontableBeanSwingJInternalFrame.cuentacontablesArbol);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.CargarTreeCuentaContable();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setVisible(true);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.jInternalFrameParent=this;
						TitledBorder titledBorderBodegaProducto=(TitledBorder)this.jScrollPanelDatosBodegaProducto.getBorder();
						TitledBorder titledBorderCuentaContableDevolucion=(TitledBorder)cuentacontableBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

						titledBorderCuentaContableDevolucion.setTitle(titledBorderBodegaProducto.getTitle() + " -> Cuenta Contable");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,cuentacontableBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(cuentacontableBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeCuentaContableDevolucion(CuentaContableBeanSwingJInternalFrame jInternalFrameTreeCuentaContable) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeCuentaContable);
						jInternalFrameTreeCuentaContable.setVisible(false);
						jInternalFrameTreeCuentaContable.setSelected(false);
						//jInternalFrameTreeCuentaContable.dispose();
						//jInternalFrameTreeCuentaContable=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}

				public void abrirFrameTreeCuentaContableIngresoDebito(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeCuentaContable);
						CuentaContableBeanSwingJInternalFrame cuentacontableBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						cuentacontableBeanSwingJInternalFrame.setJInternalFrameParent(this);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.sTipoBusqueda="CuentaContableIngresoDebito";
						}

						cuentacontableBeanSwingJInternalFrame.getTodosCuentaContableArbol();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setCuentaContables(cuentacontableBeanSwingJInternalFrame.cuentacontablesArbol);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.CargarTreeCuentaContable();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setVisible(true);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.jInternalFrameParent=this;
						TitledBorder titledBorderBodegaProducto=(TitledBorder)this.jScrollPanelDatosBodegaProducto.getBorder();
						TitledBorder titledBorderCuentaContableIngresoDebito=(TitledBorder)cuentacontableBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

						titledBorderCuentaContableIngresoDebito.setTitle(titledBorderBodegaProducto.getTitle() + " -> Cuenta Contable");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,cuentacontableBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(cuentacontableBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeCuentaContableIngresoDebito(CuentaContableBeanSwingJInternalFrame jInternalFrameTreeCuentaContable) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeCuentaContable);
						jInternalFrameTreeCuentaContable.setVisible(false);
						jInternalFrameTreeCuentaContable.setSelected(false);
						//jInternalFrameTreeCuentaContable.dispose();
						//jInternalFrameTreeCuentaContable=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}

				public void abrirFrameTreeCuentaContableIngresoCredito(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeCuentaContable);
						CuentaContableBeanSwingJInternalFrame cuentacontableBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						cuentacontableBeanSwingJInternalFrame.setJInternalFrameParent(this);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.sTipoBusqueda="CuentaContableIngresoCredito";
						}

						cuentacontableBeanSwingJInternalFrame.getTodosCuentaContableArbol();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setCuentaContables(cuentacontableBeanSwingJInternalFrame.cuentacontablesArbol);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.CargarTreeCuentaContable();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setVisible(true);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.jInternalFrameParent=this;
						TitledBorder titledBorderBodegaProducto=(TitledBorder)this.jScrollPanelDatosBodegaProducto.getBorder();
						TitledBorder titledBorderCuentaContableIngresoCredito=(TitledBorder)cuentacontableBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

						titledBorderCuentaContableIngresoCredito.setTitle(titledBorderBodegaProducto.getTitle() + " -> Cuenta Contable");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,cuentacontableBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(cuentacontableBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeCuentaContableIngresoCredito(CuentaContableBeanSwingJInternalFrame jInternalFrameTreeCuentaContable) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeCuentaContable);
						jInternalFrameTreeCuentaContable.setVisible(false);
						jInternalFrameTreeCuentaContable.setSelected(false);
						//jInternalFrameTreeCuentaContable.dispose();
						//jInternalFrameTreeCuentaContable=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}

				public void abrirFrameTreeCuentaContableResultadoDebito(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeCuentaContable);
						CuentaContableBeanSwingJInternalFrame cuentacontableBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						cuentacontableBeanSwingJInternalFrame.setJInternalFrameParent(this);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.sTipoBusqueda="CuentaContableResultadoDebito";
						}

						cuentacontableBeanSwingJInternalFrame.getTodosCuentaContableArbol();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setCuentaContables(cuentacontableBeanSwingJInternalFrame.cuentacontablesArbol);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.CargarTreeCuentaContable();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setVisible(true);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.jInternalFrameParent=this;
						TitledBorder titledBorderBodegaProducto=(TitledBorder)this.jScrollPanelDatosBodegaProducto.getBorder();
						TitledBorder titledBorderCuentaContableResultadoDebito=(TitledBorder)cuentacontableBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

						titledBorderCuentaContableResultadoDebito.setTitle(titledBorderBodegaProducto.getTitle() + " -> Cuenta Contable");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,cuentacontableBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(cuentacontableBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeCuentaContableResultadoDebito(CuentaContableBeanSwingJInternalFrame jInternalFrameTreeCuentaContable) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeCuentaContable);
						jInternalFrameTreeCuentaContable.setVisible(false);
						jInternalFrameTreeCuentaContable.setSelected(false);
						//jInternalFrameTreeCuentaContable.dispose();
						//jInternalFrameTreeCuentaContable=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}

				public void abrirFrameTreeCuentaContableResultadoCredito(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeCuentaContable);
						CuentaContableBeanSwingJInternalFrame cuentacontableBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						cuentacontableBeanSwingJInternalFrame.setJInternalFrameParent(this);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.sTipoBusqueda="CuentaContableResultadoCredito";
						}

						cuentacontableBeanSwingJInternalFrame.getTodosCuentaContableArbol();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setCuentaContables(cuentacontableBeanSwingJInternalFrame.cuentacontablesArbol);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.CargarTreeCuentaContable();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setVisible(true);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.jInternalFrameParent=this;
						TitledBorder titledBorderBodegaProducto=(TitledBorder)this.jScrollPanelDatosBodegaProducto.getBorder();
						TitledBorder titledBorderCuentaContableResultadoCredito=(TitledBorder)cuentacontableBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

						titledBorderCuentaContableResultadoCredito.setTitle(titledBorderBodegaProducto.getTitle() + " -> Cuenta Contable");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,cuentacontableBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(cuentacontableBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeCuentaContableResultadoCredito(CuentaContableBeanSwingJInternalFrame jInternalFrameTreeCuentaContable) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeCuentaContable);
						jInternalFrameTreeCuentaContable.setVisible(false);
						jInternalFrameTreeCuentaContable.setSelected(false);
						//jInternalFrameTreeCuentaContable.dispose();
						//jInternalFrameTreeCuentaContable=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}
	
	public void jButtonModificarBodegaProductoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.modificarBodegaProducto(evt,-1,false);
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void modificarBodegaProducto(ActionEvent evt,int rowIndex,Boolean esRelaciones) throws Exception {   
		try {
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();
			}
			
			this.habilitarDeshabilitarControlesBodegaProducto(true);
			//this.isEsNuevoBodegaProducto=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproducto =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.bodegaproducto =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.actualizarEstadoCeldasBotonesBodegaProducto("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesBodegaProducto(false) ;
			
			if(bodegaproductoSessionBean.getConGuardarRelaciones()) {
			
			}
			
			if(BodegaProductoJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleBodegaProducto(esRelaciones);
			}
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualBodegaProducto(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarFilaTablaBodegaProductoActual() { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL
			Integer intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproducto =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.bodegaproducto =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void seleccionarBodegaProducto(ActionEvent evt,int rowIndex) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormBodegaProducto==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();
			}
			
			//this.habilitarDeshabilitarControlesBodegaProducto(true);
			//this.isEsNuevoBodegaProducto=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproducto =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.bodegaproducto =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.jInternalFrameParent.setIdCombosCodigoDesdeBusquedaForeignKey(this.bodegaproducto.getId(),this.sTipoBusqueda);
			
			this.dispose();
			
			//this.actualizarEstadoCeldasBotonesBodegaProducto("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			/*
			this.inicializarActualizarBindingBotonesBodegaProducto(false) ;
			
			if(BodegaProductoJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleBodegaProducto(esRelaciones);
			}
			*/
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualBodegaProducto(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void setIdCombosCodigoDesdeBusquedaForeignKey(Long id,String sType)throws Exception{
		
		try {
			
			if(sType.equals("Producto")) {
				if(!this.bodegaproductoConstantesFunciones.cargarid_productoBodegaProducto) {
					this.cargarCombosProductosForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingBodegaProducto(false,false);
					this.cargarCombosFrameProductosForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_producto (id);

				this.recargarComboTablaProducto(this.productosForeignKey);

			}
		} catch(Exception e) {
			throw e;
		}
	}
	
			
	
	public void recargarComboTablaBodega(List<Bodega> bodegasForeignKey)throws Exception{
		TableColumn tableColumnBodega=this.jTableDatosBodegaProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosBodegaProducto,BodegaProductoConstantesFunciones.LABEL_IDBODEGA));
		TableCellEditor tableCellEditorBodega =tableColumnBodega.getCellEditor();

		BodegaTableCell bodegaTableCellFk=(BodegaTableCell)tableCellEditorBodega;

		if(bodegaTableCellFk!=null) {
			bodegaTableCellFk.setbodegasForeignKey(bodegasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosBodegaProducto.getSelectedRow();

		//if(intSelectedRow<=0) {
			//bodegaTableCellFk.setRowActual(intSelectedRow);
			//bodegaTableCellFk.setbodegasForeignKeyActual(bodegasForeignKey);
		//}


		if(bodegaTableCellFk!=null) {
			bodegaTableCellFk.RecargarBodegasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaProducto(List<Producto> productosForeignKey)throws Exception{
		TableColumn tableColumnProducto=this.jTableDatosBodegaProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosBodegaProducto,BodegaProductoConstantesFunciones.LABEL_IDPRODUCTO));
		TableCellEditor tableCellEditorProducto =tableColumnProducto.getCellEditor();

		ProductoTableCell productoTableCellFk=(ProductoTableCell)tableCellEditorProducto;

		if(productoTableCellFk!=null) {
			productoTableCellFk.setproductosForeignKey(productosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosBodegaProducto.getSelectedRow();

		//if(intSelectedRow<=0) {
			//productoTableCellFk.setRowActual(intSelectedRow);
			//productoTableCellFk.setproductosForeignKeyActual(productosForeignKey);
		//}


		if(productoTableCellFk!=null) {
			productoTableCellFk.RecargarProductosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaUnidad(List<Unidad> unidadsForeignKey)throws Exception{
		TableColumn tableColumnUnidad=this.jTableDatosBodegaProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosBodegaProducto,BodegaProductoConstantesFunciones.LABEL_IDUNIDAD));
		TableCellEditor tableCellEditorUnidad =tableColumnUnidad.getCellEditor();

		UnidadTableCell unidadTableCellFk=(UnidadTableCell)tableCellEditorUnidad;

		if(unidadTableCellFk!=null) {
			unidadTableCellFk.setunidadsForeignKey(unidadsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosBodegaProducto.getSelectedRow();

		//if(intSelectedRow<=0) {
			//unidadTableCellFk.setRowActual(intSelectedRow);
			//unidadTableCellFk.setunidadsForeignKeyActual(unidadsForeignKey);
		//}


		if(unidadTableCellFk!=null) {
			unidadTableCellFk.RecargarUnidadsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCentroCosto(List<CentroCosto> centrocostosForeignKey)throws Exception{
		TableColumn tableColumnCentroCosto=this.jTableDatosBodegaProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosBodegaProducto,BodegaProductoConstantesFunciones.LABEL_IDCENTROCOSTO));
		TableCellEditor tableCellEditorCentroCosto =tableColumnCentroCosto.getCellEditor();

		CentroCostoTableCell centrocostoTableCellFk=(CentroCostoTableCell)tableCellEditorCentroCosto;

		if(centrocostoTableCellFk!=null) {
			centrocostoTableCellFk.setcentrocostosForeignKey(centrocostosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosBodegaProducto.getSelectedRow();

		//if(intSelectedRow<=0) {
			//centrocostoTableCellFk.setRowActual(intSelectedRow);
			//centrocostoTableCellFk.setcentrocostosForeignKeyActual(centrocostosForeignKey);
		//}


		if(centrocostoTableCellFk!=null) {
			centrocostoTableCellFk.RecargarCentroCostosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaEstadoBodegaProducto(List<EstadoBodegaProducto> estadobodegaproductosForeignKey)throws Exception{
		TableColumn tableColumnEstadoBodegaProducto=this.jTableDatosBodegaProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosBodegaProducto,BodegaProductoConstantesFunciones.LABEL_IDESTADOBODEGAPRODUCTO));
		TableCellEditor tableCellEditorEstadoBodegaProducto =tableColumnEstadoBodegaProducto.getCellEditor();

		EstadoBodegaProductoTableCell estadobodegaproductoTableCellFk=(EstadoBodegaProductoTableCell)tableCellEditorEstadoBodegaProducto;

		if(estadobodegaproductoTableCellFk!=null) {
			estadobodegaproductoTableCellFk.setestadobodegaproductosForeignKey(estadobodegaproductosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosBodegaProducto.getSelectedRow();

		//if(intSelectedRow<=0) {
			//estadobodegaproductoTableCellFk.setRowActual(intSelectedRow);
			//estadobodegaproductoTableCellFk.setestadobodegaproductosForeignKeyActual(estadobodegaproductosForeignKey);
		//}


		if(estadobodegaproductoTableCellFk!=null) {
			estadobodegaproductoTableCellFk.RecargarEstadoBodegaProductosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCuentaContableInventario(List<CuentaContable> cuentacontableinventariosForeignKey)throws Exception{
		TableColumn tableColumnCuentaContableInventario=this.jTableDatosBodegaProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosBodegaProducto,BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEINVENTARIO));
		TableCellEditor tableCellEditorCuentaContableInventario =tableColumnCuentaContableInventario.getCellEditor();

		CuentaContableTableCell cuentacontableTableCellFk=(CuentaContableTableCell)tableCellEditorCuentaContableInventario;

		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.setcuentacontablesForeignKey(cuentacontableinventariosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosBodegaProducto.getSelectedRow();

		//if(intSelectedRow<=0) {
			//cuentacontableTableCellFk.setRowActual(intSelectedRow);
			//cuentacontableTableCellFk.setcuentacontablesForeignKeyActual(cuentacontableinventariosForeignKey);
		//}


		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.RecargarCuentaContablesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCuentaContableCostoVenta(List<CuentaContable> cuentacontablecostoventasForeignKey)throws Exception{
		TableColumn tableColumnCuentaContableCostoVenta=this.jTableDatosBodegaProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosBodegaProducto,BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLECOSTOVENTA));
		TableCellEditor tableCellEditorCuentaContableCostoVenta =tableColumnCuentaContableCostoVenta.getCellEditor();

		CuentaContableTableCell cuentacontableTableCellFk=(CuentaContableTableCell)tableCellEditorCuentaContableCostoVenta;

		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.setcuentacontablesForeignKey(cuentacontablecostoventasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosBodegaProducto.getSelectedRow();

		//if(intSelectedRow<=0) {
			//cuentacontableTableCellFk.setRowActual(intSelectedRow);
			//cuentacontableTableCellFk.setcuentacontablesForeignKeyActual(cuentacontablecostoventasForeignKey);
		//}


		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.RecargarCuentaContablesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCuentaContableVenta(List<CuentaContable> cuentacontableventasForeignKey)throws Exception{
		TableColumn tableColumnCuentaContableVenta=this.jTableDatosBodegaProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosBodegaProducto,BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEVENTA));
		TableCellEditor tableCellEditorCuentaContableVenta =tableColumnCuentaContableVenta.getCellEditor();

		CuentaContableTableCell cuentacontableTableCellFk=(CuentaContableTableCell)tableCellEditorCuentaContableVenta;

		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.setcuentacontablesForeignKey(cuentacontableventasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosBodegaProducto.getSelectedRow();

		//if(intSelectedRow<=0) {
			//cuentacontableTableCellFk.setRowActual(intSelectedRow);
			//cuentacontableTableCellFk.setcuentacontablesForeignKeyActual(cuentacontableventasForeignKey);
		//}


		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.RecargarCuentaContablesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCuentaContableDescuento(List<CuentaContable> cuentacontabledescuentosForeignKey)throws Exception{
		TableColumn tableColumnCuentaContableDescuento=this.jTableDatosBodegaProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosBodegaProducto,BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEDESCUENTO));
		TableCellEditor tableCellEditorCuentaContableDescuento =tableColumnCuentaContableDescuento.getCellEditor();

		CuentaContableTableCell cuentacontableTableCellFk=(CuentaContableTableCell)tableCellEditorCuentaContableDescuento;

		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.setcuentacontablesForeignKey(cuentacontabledescuentosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosBodegaProducto.getSelectedRow();

		//if(intSelectedRow<=0) {
			//cuentacontableTableCellFk.setRowActual(intSelectedRow);
			//cuentacontableTableCellFk.setcuentacontablesForeignKeyActual(cuentacontabledescuentosForeignKey);
		//}


		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.RecargarCuentaContablesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCuentaContableProduccion(List<CuentaContable> cuentacontableproduccionsForeignKey)throws Exception{
		TableColumn tableColumnCuentaContableProduccion=this.jTableDatosBodegaProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosBodegaProducto,BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEPRODUCCION));
		TableCellEditor tableCellEditorCuentaContableProduccion =tableColumnCuentaContableProduccion.getCellEditor();

		CuentaContableTableCell cuentacontableTableCellFk=(CuentaContableTableCell)tableCellEditorCuentaContableProduccion;

		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.setcuentacontablesForeignKey(cuentacontableproduccionsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosBodegaProducto.getSelectedRow();

		//if(intSelectedRow<=0) {
			//cuentacontableTableCellFk.setRowActual(intSelectedRow);
			//cuentacontableTableCellFk.setcuentacontablesForeignKeyActual(cuentacontableproduccionsForeignKey);
		//}


		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.RecargarCuentaContablesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCuentaContableDevolucion(List<CuentaContable> cuentacontabledevolucionsForeignKey)throws Exception{
		TableColumn tableColumnCuentaContableDevolucion=this.jTableDatosBodegaProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosBodegaProducto,BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEDEVOLUCION));
		TableCellEditor tableCellEditorCuentaContableDevolucion =tableColumnCuentaContableDevolucion.getCellEditor();

		CuentaContableTableCell cuentacontableTableCellFk=(CuentaContableTableCell)tableCellEditorCuentaContableDevolucion;

		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.setcuentacontablesForeignKey(cuentacontabledevolucionsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosBodegaProducto.getSelectedRow();

		//if(intSelectedRow<=0) {
			//cuentacontableTableCellFk.setRowActual(intSelectedRow);
			//cuentacontableTableCellFk.setcuentacontablesForeignKeyActual(cuentacontabledevolucionsForeignKey);
		//}


		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.RecargarCuentaContablesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCuentaContableIngresoDebito(List<CuentaContable> cuentacontableingresodebitosForeignKey)throws Exception{
		TableColumn tableColumnCuentaContableIngresoDebito=this.jTableDatosBodegaProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosBodegaProducto,BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEINGRESODEBITO));
		TableCellEditor tableCellEditorCuentaContableIngresoDebito =tableColumnCuentaContableIngresoDebito.getCellEditor();

		CuentaContableTableCell cuentacontableTableCellFk=(CuentaContableTableCell)tableCellEditorCuentaContableIngresoDebito;

		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.setcuentacontablesForeignKey(cuentacontableingresodebitosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosBodegaProducto.getSelectedRow();

		//if(intSelectedRow<=0) {
			//cuentacontableTableCellFk.setRowActual(intSelectedRow);
			//cuentacontableTableCellFk.setcuentacontablesForeignKeyActual(cuentacontableingresodebitosForeignKey);
		//}


		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.RecargarCuentaContablesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCuentaContableIngresoCredito(List<CuentaContable> cuentacontableingresocreditosForeignKey)throws Exception{
		TableColumn tableColumnCuentaContableIngresoCredito=this.jTableDatosBodegaProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosBodegaProducto,BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEINGRESOCREDITO));
		TableCellEditor tableCellEditorCuentaContableIngresoCredito =tableColumnCuentaContableIngresoCredito.getCellEditor();

		CuentaContableTableCell cuentacontableTableCellFk=(CuentaContableTableCell)tableCellEditorCuentaContableIngresoCredito;

		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.setcuentacontablesForeignKey(cuentacontableingresocreditosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosBodegaProducto.getSelectedRow();

		//if(intSelectedRow<=0) {
			//cuentacontableTableCellFk.setRowActual(intSelectedRow);
			//cuentacontableTableCellFk.setcuentacontablesForeignKeyActual(cuentacontableingresocreditosForeignKey);
		//}


		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.RecargarCuentaContablesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCuentaContableResultadoDebito(List<CuentaContable> cuentacontableresultadodebitosForeignKey)throws Exception{
		TableColumn tableColumnCuentaContableResultadoDebito=this.jTableDatosBodegaProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosBodegaProducto,BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLERESULTADODEBITO));
		TableCellEditor tableCellEditorCuentaContableResultadoDebito =tableColumnCuentaContableResultadoDebito.getCellEditor();

		CuentaContableTableCell cuentacontableTableCellFk=(CuentaContableTableCell)tableCellEditorCuentaContableResultadoDebito;

		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.setcuentacontablesForeignKey(cuentacontableresultadodebitosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosBodegaProducto.getSelectedRow();

		//if(intSelectedRow<=0) {
			//cuentacontableTableCellFk.setRowActual(intSelectedRow);
			//cuentacontableTableCellFk.setcuentacontablesForeignKeyActual(cuentacontableresultadodebitosForeignKey);
		//}


		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.RecargarCuentaContablesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCuentaContableResultadoCredito(List<CuentaContable> cuentacontableresultadocreditosForeignKey)throws Exception{
		TableColumn tableColumnCuentaContableResultadoCredito=this.jTableDatosBodegaProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosBodegaProducto,BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLERESULTADOCREDITO));
		TableCellEditor tableCellEditorCuentaContableResultadoCredito =tableColumnCuentaContableResultadoCredito.getCellEditor();

		CuentaContableTableCell cuentacontableTableCellFk=(CuentaContableTableCell)tableCellEditorCuentaContableResultadoCredito;

		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.setcuentacontablesForeignKey(cuentacontableresultadocreditosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosBodegaProducto.getSelectedRow();

		//if(intSelectedRow<=0) {
			//cuentacontableTableCellFk.setRowActual(intSelectedRow);
			//cuentacontableTableCellFk.setcuentacontablesForeignKeyActual(cuentacontableresultadocreditosForeignKey);
		//}


		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.RecargarCuentaContablesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	

	public void setCombosCodigoDesdeBusquedaid_producto (Long id) throws Exception {
		this.setActualProductoForeignKey(id,true,"Todos");

	};
	
	public void jButtonActualizarBodegaProductoActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingParametrosReportesBodegaProducto(false);
			
			//if(!this.isEsNuevoBodegaProducto) {								
				int intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();	
				
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproducto =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.bodegaproducto =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
			//}
				
			if(BodegaProductoJInternalFrame.ISBINDING_MANUAL_TABLA) {
				this.setVariablesFormularioToObjetoActualBodegaProducto(this.bodegaproducto,true);
				this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
				
			}
			
			if(this.permiteMantenimiento(this.bodegaproducto)) {	
				this.actualizar();
				
				if(!this.isGuardarCambiosEnLote && !this.bodegaproductoSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
					
					this.isEsNuevoBodegaProducto=true;
					this.inicializarActualizarBindingTablaBodegaProducto(false);
					this.isEsNuevoBodegaProducto=false;
				
				} else {					
					
					//PARA RELACIONADO ACTUALIZAR FILA TOTALES
					this.isEsNuevoBodegaProducto=true;
					this.procesoActualizarFilaTotales(false,"MANTENIMIENTO");
					this.isEsNuevoBodegaProducto=false;
				}
						
								
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesBodegaProducto(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualBodegaProducto(false);
				
				this.habilitarDeshabilitarControlesBodegaProducto(false);
			
												
				
				if(BodegaProductoJInternalFrame.CON_DATOS_FRAME) {
					if(!this.isPostAccionSinCerrar) {
						this.cerrarFrameDetalleBodegaProducto();
					}
				}
				
				if(this.isPostAccionNuevo) {
					this.jButtonNuevoBodegaProductoActionPerformed(evt,bodegaproductoSessionBean.getConGuardarRelaciones());
				} else {
					if(this.isPostAccionSinCerrar) {
						Integer intSelectedRowActual=this.getIndiceActualBodegaProducto(this.bodegaproducto,intSelectedRow);
						
						if(intSelectedRow>-1) {
							this.jTableDatosBodegaProducto.setRowSelectionInterval(intSelectedRowActual, intSelectedRowActual);
							this.jButtonIdActionPerformed(evt,intSelectedRowActual,bodegaproductoSessionBean.getConGuardarRelaciones(),false);
						}
					}
				}
				
				this.cancelar(false);
				
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.commitNewConnexionToDeep();
			}
			
			
			if(this.jInternalFrameParent!=null) { //&& this.isEsMantenimientoRelacionado) {
				Boolean esUsoDesdeHijoLocal=true;
				String sTipo="Formulario";
				Boolean conIrServidorAplicacionParent=false;
				Long id=this.bodegaproducto.getId();
				ArrayList<String> arrClasses=new ArrayList<String>();
				
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();
				
				generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
				generalEntityParameterGeneral.setsDominio("Formulario");
				generalEntityParameterGeneral.setsDominioTipo(BodegaProducto.class.getName());
				
				this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",BodegaProducto.class.getName(),sTipo,"FORMULARIO",esControlTabla,conIrServidorAplicacionParent,
					id,this, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.FORM,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
					evt,generalEntityParameterGeneral,this);
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonEliminarBodegaProductoActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.getNewConnexionToDeep("");
			}
			
			int intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();	       
							
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproducto =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
				this.bodegaproducto.setIsDeleted(true);
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.bodegaproducto =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
				this.bodegaproducto.setIsDeleted(true);
			}
			//ARCHITECTURE
			
			if(this.permiteMantenimiento(this.bodegaproducto)) {
				this.eliminar();
				
				if(!this.isGuardarCambiosEnLote && !this.bodegaproductoSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
				}
				
				((BodegaProductoModel) this.jTableDatosBodegaProducto.getModel()).fireTableRowsDeleted(intSelectedRow,intSelectedRow);
				
				this.isEsNuevoBodegaProducto=true;
				this.inicializarActualizarBindingTablaBodegaProducto(false);
				this.isEsNuevoBodegaProducto=false;									
					
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesBodegaProducto(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualBodegaProducto(false);
				
				this.habilitarDeshabilitarControlesBodegaProducto(false);
				
				
				
				if(BodegaProductoJInternalFrame.CON_DATOS_FRAME) {
					this.cerrarFrameDetalleBodegaProducto();
				}
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.closeNewConnexionToDeep();
			}
		}		
	}
		
	public void jButtonCancelarBodegaProductoActionPerformed(ActionEvent evt) throws Exception {                                         	   	       
	  	try {
			if(jTableDatosBodegaProducto.getRowCount()>=1) {
				jTableDatosBodegaProducto.removeRowSelectionInterval(0, jTableDatosBodegaProducto.getRowCount()-1);						
			}
						
			this.invalidValues=new InvalidValue[0];
			this.habilitarDeshabilitarControlesBodegaProducto(false);
			this.cancelar(true);			
			this.inicializarActualizarBindingTablaBodegaProducto(false);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesBodegaProducto(false) ;
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualBodegaProducto(false) ;
			
			this.isEsNuevoBodegaProducto=false;
			
			if(BodegaProductoJInternalFrame.CON_DATOS_FRAME) {
				this.cerrarFrameDetalleBodegaProducto();
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonGuardarCambiosBodegaProductoActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.getNewConnexionToDeep("");
			}
			
			//this.estaModoGuardarCambios=true;
			
	    	this.guardarCambios();
			
			if(!this.isErrorGuardar) {
				this.procesarBusqueda(this.sAccionBusqueda);
				
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBodegaProducto(false);
				
				//SI ES MANUAL
				if(BodegaProductoJInternalFrame.ISBINDING_MANUAL) {				
					//this.inicializarActualizarBindingManualBodegaProducto();				
				}
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.closeNewConnexionToDeep();
			}
			
			//this.estaModoGuardarCambios=false;
		}
	}
	
	public void jButtonNuevoGuardarCambiosBodegaProductoActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			this.estaModoNuevo=true;
			this.estaModoNuevoGuardarCambios=true;
			
			//LO HACE NUEVOPREPARAR
			//this.iIdNuevoBodegaProducto--;			
			//BodegaProducto bodegaproductoAux= new BodegaProducto();			
			//bodegaproductoAux.setId(this.iIdNuevoBodegaProducto);
			
			if(this.jInternalFrameDetalleFormBodegaProducto==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.aumentarTamanioFilaNuevaTablaBodegaProducto();
			
			if(this.conTotales) {
				this.quitarFilaTotales();
			}
			
			this.nuevoPreparar(true);
			
			this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
			
			this.bodegaproducto.setsType("NUEVO_GUARDAR_CAMBIOS");
			
			//LO HACE NUEVOPREPARAR
			/*
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				this.bodegaproductoLogic.getBodegaProductos().add(this.bodegaproductoAux);
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				this.bodegaproductos.add(this.bodegaproductoAux);				
			}
			*/
			
			this.inicializarActualizarBindingTablaBodegaProducto(false);
			
			this.jTableDatosBodegaProducto.setRowSelectionInterval(this.getIndiceNuevoBodegaProducto(), this.getIndiceNuevoBodegaProducto());
			
			int iLastRow =  this.jTableDatosBodegaProducto.getRowCount () - 1;
			Rectangle rectangle = this.jTableDatosBodegaProducto.getCellRect(iLastRow, 0, true);
			
			this.jTableDatosBodegaProducto.scrollRectToVisible(rectangle);
			
			//FILA TOTALES
			if(this.conTotales) {
				this.crearFilaTotales();
				
				this.inicializarActualizarBindingTablaBodegaProducto(false);
			}

		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;
			this.estaModoNuevoGuardarCambios=false;
		}
	}		
	
	public void jButtonRecargarInformacionBodegaProductoActionPerformed(ActionEvent evt) throws Exception {    		
		try {
			this.iNumeroPaginacionPagina=0;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingBodegaProducto(false,false);
			
	    	this.recargarInformacion();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBodegaProducto(false);
			
			//SI ES MANUAL
			if(BodegaProductoJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualBodegaProducto();
			}
			
			//this.abrirFrameTreeBodegaProducto();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.closeNewConnexionToDeep();
			}
		}	
	}
	
	
	public void jButtonGenerarImportacionBodegaProductoActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedReader bufferedReader = null;
		String sXmlStringFile="";
		String sPath="";
		this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
		DatoGeneralMinimo datoGeneralMinimo=new DatoGeneralMinimo();
		String sLine="";
		
		try {			
			if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR IMPORTACION DE Bodega ProductoS ?", "MANTENIMIENTO DE Bodega Producto", JOptionPane.OK_CANCEL_OPTION) == 0) {
				bufferedReader = new BufferedReader(new FileReader(this.jInternalFrameImportacionBodegaProducto.getFileImportacion().getAbsolutePath()));
								
				while ((sLine = bufferedReader.readLine()) != null) {
					datoGeneralMinimo=new DatoGeneralMinimo();
					datoGeneralMinimo.setsDescripcion(sLine);
					
					this.arrDatoGeneralMinimos.add(datoGeneralMinimo);
				}
				
				this.actualizarParametrosGeneralBodegaProducto();
						
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {						
					this.bodegaproductoReturnGeneral=bodegaproductoLogic.procesarImportacionBodegaProductosWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this.arrDatoGeneralMinimos,this.bodegaproductoParameterGeneral);
						
				} else if(Constantes.ISUSAEJBREMOTE) {
						
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
						
				this.procesarBodegaProductoReturnGeneral();
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedReader != null) {
				bufferedReader.close();
			}	
		}				
	}
	
	
	
	public void jButtonAbrirImportacionBodegaProductoActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {
			int iReturnArchivo = this.jInternalFrameImportacionBodegaProducto.getjFileChooserImportacion().showOpenDialog(this);
 
            if (iReturnArchivo == JFileChooser.APPROVE_OPTION) {
            	this.jInternalFrameImportacionBodegaProducto.setFileImportacion(this.jInternalFrameImportacionBodegaProducto.getjFileChooserImportacion().getSelectedFile());
            	
				this.jInternalFrameImportacionBodegaProducto.getjTextFieldPathArchivoImportacion().setText(this.jInternalFrameImportacionBodegaProducto.getFileImportacion().getName());
				
				//System.out.println("ARCHIVO ESCOGIDO: "+this.fileImportacionBodegaProducto.getName());
				
            } else {
                //System.out.println("CANCELAR SELECCION");
				this.jInternalFrameImportacionBodegaProducto.getjTextFieldPathArchivoImportacion().setText("SELECCION CANCELADA");
            }			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}		
	}
	
	
	public void jButtonGenerarReporteDinamicoBodegaProductoActionPerformed(ActionEvent evt) throws Exception {    		
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {	
		
		ArrayList<BodegaProducto> bodegaproductosSeleccionados=new ArrayList<BodegaProducto>();		

		bodegaproductosSeleccionados=this.getBodegaProductosSeleccionados(true);
		
		
		this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoBodegaProducto.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();
		
		this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoBodegaProducto.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
		
		
		this.sTipoArchivoReporte=this.sTipoArchivoReporteDinamico;
		
		//this.sTipoReporteExtra="Base";
		
			InputStream reportFile=null;
			InputStream imageFile=null;
			
			imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		
			reportFile = AuxiliarReportes.class.getResourceAsStream("BodegaProductoBaseDesign.jrxml");	
			
			sPath=this.parametroGeneralUsuario.getpath_exportar()+"BodegaProductoBaseDesign.jrxml";
			
			sXmlStringFile=Funciones2.getStringFromInputStream(reportFile);
						
			bufferedWriter = new BufferedWriter(new FileWriter(sPath));
			
			
			sXmlStringFile=this.actualizarReporteDinamico(sXmlStringFile);
			
			
			bufferedWriter.write(sXmlStringFile);
			
			bufferedWriter.close();
			
			try{JasperCompileManager.compileReportToFile(sPath);}catch(Exception e){e.printStackTrace();}
			
			this.actualizarVariablesTipoReporte(false,true,false,sPath);
			
			/*
			this.esReporteDinamico=true;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");
			this.sTipoReporteExtra="";
			*/
			
			this.generarReporteBodegaProductos("Todos",bodegaproductosSeleccionados );

			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.bodegaproductoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				//DEBE APARECER EL REPORTE DIRECTAMENTE
				//JOptionPane.showMessageDialog(this,"GENERADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Bodega Producto",JOptionPane.INFORMATION_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}
	}		
	
	
	public String actualizarReporteDinamico(String sXmlStringFile) {				
		Reporte reporte=new Reporte();
		Integer iAnchoMaximoVertical=535;//781,782
		Integer iAnchoMaximoHorizontal=782;
		Integer iAnchoSum=0;
		Integer iAnchoColumna=0;
		
		Integer iAnchoMargenes=60;
		String sWidthGrafico="535";
		
		for(int index:this.jInternalFrameReporteDinamicoBodegaProducto.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoBodegaProducto.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case BodegaProductoConstantesFunciones.LABEL_IDEMPRESA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Empresa_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Empresa_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Empresa_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Empresa_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case BodegaProductoConstantesFunciones.LABEL_IDSUCURSAL:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Sucursal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Sucursal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Sucursal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Sucursal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case BodegaProductoConstantesFunciones.LABEL_IDBODEGA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Bodega_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Bodega_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Bodega_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Bodega_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case BodegaProductoConstantesFunciones.LABEL_IDPRODUCTO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Producto_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Producto_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Producto_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Producto_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case BodegaProductoConstantesFunciones.LABEL_IDUNIDAD:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Unidad_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Unidad_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Unidad_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Unidad_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case BodegaProductoConstantesFunciones.LABEL_IDCENTROCOSTO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_CentroCosto_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_CentroCosto_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_CentroCosto_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_CentroCosto_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case BodegaProductoConstantesFunciones.LABEL_IDESTADOBODEGAPRODUCTO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_EstadoBodegaProducto_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_EstadoBodegaProducto_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_EstadoBodegaProducto_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_EstadoBodegaProducto_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case BodegaProductoConstantesFunciones.LABEL_DESCRIPCION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_scripcion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_scripcion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_scripcion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_scripcion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case BodegaProductoConstantesFunciones.LABEL_CANTIDADDISPONIBLE:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ntidadDisponible_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ntidadDisponible_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ntidadDisponible_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ntidadDisponible_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case BodegaProductoConstantesFunciones.LABEL_STOCKMAXIMO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ockMaximo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ockMaximo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ockMaximo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ockMaximo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case BodegaProductoConstantesFunciones.LABEL_STOCKMINIMO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ockMinimo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ockMinimo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ockMinimo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ockMinimo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case BodegaProductoConstantesFunciones.LABEL_IVA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_a_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_a_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_a_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_a_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case BodegaProductoConstantesFunciones.LABEL_IVAVALOR:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_aValor_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_aValor_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_aValor_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_aValor_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case BodegaProductoConstantesFunciones.LABEL_DESCUENTO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_scuento_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_scuento_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_scuento_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_scuento_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case BodegaProductoConstantesFunciones.LABEL_DESCUENTOVALOR:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_scuentoValor_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_scuentoValor_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_scuentoValor_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_scuentoValor_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case BodegaProductoConstantesFunciones.LABEL_ICE:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_e_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_e_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_e_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_e_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case BodegaProductoConstantesFunciones.LABEL_ICEVALOR:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_eValor_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_eValor_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_eValor_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_eValor_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case BodegaProductoConstantesFunciones.LABEL_COSTOPROMEDIO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_stoPromedio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_stoPromedio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_stoPromedio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_stoPromedio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case BodegaProductoConstantesFunciones.LABEL_PORCENTAJECOMISION:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_rcentajeComision_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_rcentajeComision_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_rcentajeComision_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_rcentajeComision_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case BodegaProductoConstantesFunciones.LABEL_PRECIO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ecio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ecio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ecio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ecio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case BodegaProductoConstantesFunciones.LABEL_ULTIMOCOSTO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_timoCosto_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_timoCosto_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_timoCosto_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_timoCosto_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case BodegaProductoConstantesFunciones.LABEL_COSTO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_sto_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_sto_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_sto_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_sto_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case BodegaProductoConstantesFunciones.LABEL_ARANCELPORCENTAJE:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ancelPorcentaje_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ancelPorcentaje_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ancelPorcentaje_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ancelPorcentaje_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case BodegaProductoConstantesFunciones.LABEL_ICEPORCENTAJE:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ePorcentaje_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ePorcentaje_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ePorcentaje_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ePorcentaje_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case BodegaProductoConstantesFunciones.LABEL_PESO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_so_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_so_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_so_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_so_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case BodegaProductoConstantesFunciones.LABEL_CONIVA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_nIva_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_nIva_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_nIva_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_nIva_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case BodegaProductoConstantesFunciones.LABEL_CONIMPUESTO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_nImpuesto_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_nImpuesto_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_nImpuesto_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_nImpuesto_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case BodegaProductoConstantesFunciones.LABEL_CONICE:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_nIce_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_nIce_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_nIce_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_nIce_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case BodegaProductoConstantesFunciones.LABEL_ESTAACTIVO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_taActivo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_taActivo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_taActivo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_taActivo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case BodegaProductoConstantesFunciones.LABEL_CONBALANZA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_nBalanza_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_nBalanza_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_nBalanza_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_nBalanza_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case BodegaProductoConstantesFunciones.LABEL_CANTIDADPEDIDA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ntidadPedida_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ntidadPedida_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ntidadPedida_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ntidadPedida_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case BodegaProductoConstantesFunciones.LABEL_CANTIDADFISICA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ntidadFisica_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ntidadFisica_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ntidadFisica_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ntidadFisica_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case BodegaProductoConstantesFunciones.LABEL_CANTIDADREQUERIDO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ntidadRequerido_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ntidadRequerido_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ntidadRequerido_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ntidadRequerido_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case BodegaProductoConstantesFunciones.LABEL_PRECIOCOSTO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ecioCosto_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ecioCosto_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ecioCosto_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ecioCosto_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case BodegaProductoConstantesFunciones.LABEL_PRECIOPROMEDIO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ecioPromedio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ecioPromedio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ecioPromedio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ecioPromedio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case BodegaProductoConstantesFunciones.LABEL_TOTALINGRESOS:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_talIngresos_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_talIngresos_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_talIngresos_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_talIngresos_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case BodegaProductoConstantesFunciones.LABEL_TOTALEGRESOS:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_talEgresos_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_talEgresos_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_talEgresos_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_talEgresos_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case BodegaProductoConstantesFunciones.LABEL_TOTALPROVISION:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_talProvision_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_talProvision_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_talProvision_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_talProvision_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case BodegaProductoConstantesFunciones.LABEL_TOTALPROCESO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_talProceso_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_talProceso_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_talProceso_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_talProceso_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case BodegaProductoConstantesFunciones.LABEL_COSTOCALCULADO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_stoCalculado_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_stoCalculado_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_stoCalculado_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_stoCalculado_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case BodegaProductoConstantesFunciones.LABEL_DIASPRODUCCION:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_asProduccion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_asProduccion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_asProduccion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_asProduccion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case BodegaProductoConstantesFunciones.LABEL_PRECIOREPOSICION:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ecioReposicion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ecioReposicion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ecioReposicion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ecioReposicion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case BodegaProductoConstantesFunciones.LABEL_FECHAULTIMOPEDIDO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_chaUltimoPedido_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_chaUltimoPedido_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_chaUltimoPedido_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_chaUltimoPedido_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case BodegaProductoConstantesFunciones.LABEL_FECHAINGRESO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_chaIngreso_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_chaIngreso_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_chaIngreso_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_chaIngreso_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case BodegaProductoConstantesFunciones.LABEL_FECHAEGRESO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_chaEgreso_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_chaEgreso_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_chaEgreso_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_chaEgreso_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case BodegaProductoConstantesFunciones.LABEL_FECHAULTIMACOMPRA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_chaUltimaCompra_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_chaUltimaCompra_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_chaUltimaCompra_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_chaUltimaCompra_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case BodegaProductoConstantesFunciones.LABEL_FECHAULTIMAVENTA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_chaUltimaVenta_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_chaUltimaVenta_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_chaUltimaVenta_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_chaUltimaVenta_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case BodegaProductoConstantesFunciones.LABEL_FECHAULTIMADEVOLUCION:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_chaUltimaDevolucion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_chaUltimaDevolucion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_chaUltimaDevolucion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_chaUltimaDevolucion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEINVENTARIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_CuentaContableInventario_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_CuentaContableInventario_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_CuentaContableInventario_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_CuentaContableInventario_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLECOSTOVENTA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_CuentaContableCostoVenta_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_CuentaContableCostoVenta_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_CuentaContableCostoVenta_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_CuentaContableCostoVenta_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEVENTA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_CuentaContableVenta_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_CuentaContableVenta_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_CuentaContableVenta_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_CuentaContableVenta_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEDESCUENTO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_CuentaContableDescuento_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_CuentaContableDescuento_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_CuentaContableDescuento_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_CuentaContableDescuento_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEPRODUCCION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_CuentaContableProduccion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_CuentaContableProduccion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_CuentaContableProduccion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_CuentaContableProduccion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEDEVOLUCION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_CuentaContableDevolucion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_CuentaContableDevolucion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_CuentaContableDevolucion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_CuentaContableDevolucion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEINGRESODEBITO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_CuentaContableIngresoDebito_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_CuentaContableIngresoDebito_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_CuentaContableIngresoDebito_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_CuentaContableIngresoDebito_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEINGRESOCREDITO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_CuentaContableIngresoCredito_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_CuentaContableIngresoCredito_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_CuentaContableIngresoCredito_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_CuentaContableIngresoCredito_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLERESULTADODEBITO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_CuentaContableResultadoDebito_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_CuentaContableResultadoDebito_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_CuentaContableResultadoDebito_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_CuentaContableResultadoDebito_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLERESULTADOCREDITO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_CuentaContableResultadoCredito_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_CuentaContableResultadoCredito_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_CuentaContableResultadoCredito_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_CuentaContableResultadoCredito_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;
					
				default :
					break;
			}
		}
		
		iAnchoSum+=iAnchoMargenes;
		
		if(iAnchoSum>iAnchoMaximoVertical) {
			sXmlStringFile=sXmlStringFile.replace("595", "842");
			//sXmlStringFile=sXmlStringFile.replace("842", "595");
			sXmlStringFile=sXmlStringFile.replace("535", "782");
			sXmlStringFile=sXmlStringFile.replace("Portrait", "Landscape");			
			sWidthGrafico="782";
		
		} else {
			sXmlStringFile=sXmlStringFile.replace("842", "595");
			//sXmlStringFile=sXmlStringFile.replace("595", "842");
			sXmlStringFile=sXmlStringFile.replace("782", "535");
			sXmlStringFile=sXmlStringFile.replace("Landscape", "Portrait");
			sWidthGrafico="535";
		}
		
		if(this.jInternalFrameReporteDinamicoBodegaProducto.getjCheckBoxConGraficoDinamico().isSelected()) {
			sXmlStringFile=this.actualizarGraficoReporteDinamico(sXmlStringFile,sWidthGrafico);
		} else {
			sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "30");
		}
		
		return sXmlStringFile;
	}
	
	
	
	public String actualizarGraficoReporteDinamico(String sXmlStringFile,String sWidthGrafico) {		
		String strGrafico="";		
		String sTipo="NORMAL";
		String strCategorySeries="";
		String sNombreCampoCategoria="";
		String sNombreCampoCategoriaValor="";
		Reporte reporte=new Reporte();
		Reporte reporteCategoriaValor=new Reporte();
		Reporte reporteTipoGraficoReporte=new Reporte();
		Boolean existe=false;
		
		sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "280");
		
		//CATEGORIA GRAFICO				
		reporte=((Reporte)this.jInternalFrameReporteDinamicoBodegaProducto.getjComboBoxColumnaCategoriaGrafico().getSelectedItem());
				
		//TIPO GRAFICO REPORTE
		reporteTipoGraficoReporte=((Reporte)this.jInternalFrameReporteDinamicoBodegaProducto.getjComboBoxTiposGraficosReportesDinamico().getSelectedItem());
		
		String sTipoGraficoReporte=reporteTipoGraficoReporte.getsCodigo();
		
		switch(reporte.getsCodigo()) {
			
				case BodegaProductoConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoria="id_empresa";
					break;

				case BodegaProductoConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoria="id_sucursal";
					break;

				case BodegaProductoConstantesFunciones.LABEL_IDBODEGA:
					sNombreCampoCategoria="id_bodega";
					break;

				case BodegaProductoConstantesFunciones.LABEL_IDPRODUCTO:
					sNombreCampoCategoria="id_producto";
					break;

				case BodegaProductoConstantesFunciones.LABEL_IDUNIDAD:
					sNombreCampoCategoria="id_unidad";
					break;

				case BodegaProductoConstantesFunciones.LABEL_IDCENTROCOSTO:
					sNombreCampoCategoria="id_centro_costo";
					break;

				case BodegaProductoConstantesFunciones.LABEL_IDESTADOBODEGAPRODUCTO:
					sNombreCampoCategoria="id_estado_bodega_producto";
					break;

				case BodegaProductoConstantesFunciones.LABEL_DESCRIPCION:
					sNombreCampoCategoria="descripcion";
					break;

				case BodegaProductoConstantesFunciones.LABEL_CANTIDADDISPONIBLE:
					sNombreCampoCategoria="cantidad_disponible";
					break;

				case BodegaProductoConstantesFunciones.LABEL_STOCKMAXIMO:
					sNombreCampoCategoria="stock_maximo";
					break;

				case BodegaProductoConstantesFunciones.LABEL_STOCKMINIMO:
					sNombreCampoCategoria="stock_minimo";
					break;

				case BodegaProductoConstantesFunciones.LABEL_IVA:
					sNombreCampoCategoria="iva";
					break;

				case BodegaProductoConstantesFunciones.LABEL_IVAVALOR:
					sNombreCampoCategoria="iva_valor";
					break;

				case BodegaProductoConstantesFunciones.LABEL_DESCUENTO:
					sNombreCampoCategoria="descuento";
					break;

				case BodegaProductoConstantesFunciones.LABEL_DESCUENTOVALOR:
					sNombreCampoCategoria="descuento_valor";
					break;

				case BodegaProductoConstantesFunciones.LABEL_ICE:
					sNombreCampoCategoria="ice";
					break;

				case BodegaProductoConstantesFunciones.LABEL_ICEVALOR:
					sNombreCampoCategoria="ice_valor";
					break;

				case BodegaProductoConstantesFunciones.LABEL_COSTOPROMEDIO:
					sNombreCampoCategoria="costo_promedio";
					break;

				case BodegaProductoConstantesFunciones.LABEL_PORCENTAJECOMISION:
					sNombreCampoCategoria="porcentaje_comision";
					break;

				case BodegaProductoConstantesFunciones.LABEL_PRECIO:
					sNombreCampoCategoria="precio";
					break;

				case BodegaProductoConstantesFunciones.LABEL_ULTIMOCOSTO:
					sNombreCampoCategoria="ultimo_costo";
					break;

				case BodegaProductoConstantesFunciones.LABEL_COSTO:
					sNombreCampoCategoria="costo";
					break;

				case BodegaProductoConstantesFunciones.LABEL_ARANCELPORCENTAJE:
					sNombreCampoCategoria="arancel_porcentaje";
					break;

				case BodegaProductoConstantesFunciones.LABEL_ICEPORCENTAJE:
					sNombreCampoCategoria="ice_porcentaje";
					break;

				case BodegaProductoConstantesFunciones.LABEL_PESO:
					sNombreCampoCategoria="peso";
					break;

				case BodegaProductoConstantesFunciones.LABEL_CONIVA:
					sNombreCampoCategoria="con_iva";
					break;

				case BodegaProductoConstantesFunciones.LABEL_CONIMPUESTO:
					sNombreCampoCategoria="con_impuesto";
					break;

				case BodegaProductoConstantesFunciones.LABEL_CONICE:
					sNombreCampoCategoria="con_ice";
					break;

				case BodegaProductoConstantesFunciones.LABEL_ESTAACTIVO:
					sNombreCampoCategoria="esta_activo";
					break;

				case BodegaProductoConstantesFunciones.LABEL_CONBALANZA:
					sNombreCampoCategoria="con_balanza";
					break;

				case BodegaProductoConstantesFunciones.LABEL_CANTIDADPEDIDA:
					sNombreCampoCategoria="cantidad_pedida";
					break;

				case BodegaProductoConstantesFunciones.LABEL_CANTIDADFISICA:
					sNombreCampoCategoria="cantidad_fisica";
					break;

				case BodegaProductoConstantesFunciones.LABEL_CANTIDADREQUERIDO:
					sNombreCampoCategoria="cantidad_requerido";
					break;

				case BodegaProductoConstantesFunciones.LABEL_PRECIOCOSTO:
					sNombreCampoCategoria="precio_costo";
					break;

				case BodegaProductoConstantesFunciones.LABEL_PRECIOPROMEDIO:
					sNombreCampoCategoria="precio_promedio";
					break;

				case BodegaProductoConstantesFunciones.LABEL_TOTALINGRESOS:
					sNombreCampoCategoria="total_ingresos";
					break;

				case BodegaProductoConstantesFunciones.LABEL_TOTALEGRESOS:
					sNombreCampoCategoria="total_egresos";
					break;

				case BodegaProductoConstantesFunciones.LABEL_TOTALPROVISION:
					sNombreCampoCategoria="total_provision";
					break;

				case BodegaProductoConstantesFunciones.LABEL_TOTALPROCESO:
					sNombreCampoCategoria="total_proceso";
					break;

				case BodegaProductoConstantesFunciones.LABEL_COSTOCALCULADO:
					sNombreCampoCategoria="costo_calculado";
					break;

				case BodegaProductoConstantesFunciones.LABEL_DIASPRODUCCION:
					sNombreCampoCategoria="dias_produccion";
					break;

				case BodegaProductoConstantesFunciones.LABEL_PRECIOREPOSICION:
					sNombreCampoCategoria="precio_reposicion";
					break;

				case BodegaProductoConstantesFunciones.LABEL_FECHAULTIMOPEDIDO:
					sNombreCampoCategoria="fecha_ultimo_pedido";
					break;

				case BodegaProductoConstantesFunciones.LABEL_FECHAINGRESO:
					sNombreCampoCategoria="fecha_ingreso";
					break;

				case BodegaProductoConstantesFunciones.LABEL_FECHAEGRESO:
					sNombreCampoCategoria="fecha_egreso";
					break;

				case BodegaProductoConstantesFunciones.LABEL_FECHAULTIMACOMPRA:
					sNombreCampoCategoria="fecha_ultima_compra";
					break;

				case BodegaProductoConstantesFunciones.LABEL_FECHAULTIMAVENTA:
					sNombreCampoCategoria="fecha_ultima_venta";
					break;

				case BodegaProductoConstantesFunciones.LABEL_FECHAULTIMADEVOLUCION:
					sNombreCampoCategoria="fecha_ultima_devolucion";
					break;

				case BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEINVENTARIO:
					sNombreCampoCategoria="id_cuenta_contable_inventario";
					break;

				case BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLECOSTOVENTA:
					sNombreCampoCategoria="id_cuenta_contable_costo_venta";
					break;

				case BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEVENTA:
					sNombreCampoCategoria="id_cuenta_contable_venta";
					break;

				case BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEDESCUENTO:
					sNombreCampoCategoria="id_cuenta_contable_descuento";
					break;

				case BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEPRODUCCION:
					sNombreCampoCategoria="id_cuenta_contable_produccion";
					break;

				case BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEDEVOLUCION:
					sNombreCampoCategoria="id_cuenta_contable_devolucion";
					break;

				case BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEINGRESODEBITO:
					sNombreCampoCategoria="id_cuenta_contable_ingreso_debito";
					break;

				case BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEINGRESOCREDITO:
					sNombreCampoCategoria="id_cuenta_contable_ingreso_credito";
					break;

				case BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLERESULTADODEBITO:
					sNombreCampoCategoria="id_cuenta_contable_resultado_debito";
					break;

				case BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLERESULTADOCREDITO:
					sNombreCampoCategoria="id_cuenta_contable_resultado_credito";
					break;
					
			default :
				break;
		}		
		//CATEGORIA GRAFICO
		
		//CATEGORIA VALOR				
		reporteCategoriaValor=((Reporte)this.jInternalFrameReporteDinamicoBodegaProducto.getjComboBoxColumnaCategoriaValor().getSelectedItem());
		
		switch(reporteCategoriaValor.getsCodigo()) {
			
				case BodegaProductoConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoriaValor="id_empresa";
					break;

				case BodegaProductoConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoriaValor="id_sucursal";
					break;

				case BodegaProductoConstantesFunciones.LABEL_IDBODEGA:
					sNombreCampoCategoriaValor="id_bodega";
					break;

				case BodegaProductoConstantesFunciones.LABEL_IDPRODUCTO:
					sNombreCampoCategoriaValor="id_producto";
					break;

				case BodegaProductoConstantesFunciones.LABEL_IDUNIDAD:
					sNombreCampoCategoriaValor="id_unidad";
					break;

				case BodegaProductoConstantesFunciones.LABEL_IDCENTROCOSTO:
					sNombreCampoCategoriaValor="id_centro_costo";
					break;

				case BodegaProductoConstantesFunciones.LABEL_IDESTADOBODEGAPRODUCTO:
					sNombreCampoCategoriaValor="id_estado_bodega_producto";
					break;

				case BodegaProductoConstantesFunciones.LABEL_DESCRIPCION:
					sNombreCampoCategoriaValor="descripcion";
					break;

				case BodegaProductoConstantesFunciones.LABEL_CANTIDADDISPONIBLE:
					sNombreCampoCategoriaValor="cantidad_disponible";
					break;

				case BodegaProductoConstantesFunciones.LABEL_STOCKMAXIMO:
					sNombreCampoCategoriaValor="stock_maximo";
					break;

				case BodegaProductoConstantesFunciones.LABEL_STOCKMINIMO:
					sNombreCampoCategoriaValor="stock_minimo";
					break;

				case BodegaProductoConstantesFunciones.LABEL_IVA:
					sNombreCampoCategoriaValor="iva";
					break;

				case BodegaProductoConstantesFunciones.LABEL_IVAVALOR:
					sNombreCampoCategoriaValor="iva_valor";
					break;

				case BodegaProductoConstantesFunciones.LABEL_DESCUENTO:
					sNombreCampoCategoriaValor="descuento";
					break;

				case BodegaProductoConstantesFunciones.LABEL_DESCUENTOVALOR:
					sNombreCampoCategoriaValor="descuento_valor";
					break;

				case BodegaProductoConstantesFunciones.LABEL_ICE:
					sNombreCampoCategoriaValor="ice";
					break;

				case BodegaProductoConstantesFunciones.LABEL_ICEVALOR:
					sNombreCampoCategoriaValor="ice_valor";
					break;

				case BodegaProductoConstantesFunciones.LABEL_COSTOPROMEDIO:
					sNombreCampoCategoriaValor="costo_promedio";
					break;

				case BodegaProductoConstantesFunciones.LABEL_PORCENTAJECOMISION:
					sNombreCampoCategoriaValor="porcentaje_comision";
					break;

				case BodegaProductoConstantesFunciones.LABEL_PRECIO:
					sNombreCampoCategoriaValor="precio";
					break;

				case BodegaProductoConstantesFunciones.LABEL_ULTIMOCOSTO:
					sNombreCampoCategoriaValor="ultimo_costo";
					break;

				case BodegaProductoConstantesFunciones.LABEL_COSTO:
					sNombreCampoCategoriaValor="costo";
					break;

				case BodegaProductoConstantesFunciones.LABEL_ARANCELPORCENTAJE:
					sNombreCampoCategoriaValor="arancel_porcentaje";
					break;

				case BodegaProductoConstantesFunciones.LABEL_ICEPORCENTAJE:
					sNombreCampoCategoriaValor="ice_porcentaje";
					break;

				case BodegaProductoConstantesFunciones.LABEL_PESO:
					sNombreCampoCategoriaValor="peso";
					break;

				case BodegaProductoConstantesFunciones.LABEL_CONIVA:
					sNombreCampoCategoriaValor="con_iva";
					break;

				case BodegaProductoConstantesFunciones.LABEL_CONIMPUESTO:
					sNombreCampoCategoriaValor="con_impuesto";
					break;

				case BodegaProductoConstantesFunciones.LABEL_CONICE:
					sNombreCampoCategoriaValor="con_ice";
					break;

				case BodegaProductoConstantesFunciones.LABEL_ESTAACTIVO:
					sNombreCampoCategoriaValor="esta_activo";
					break;

				case BodegaProductoConstantesFunciones.LABEL_CONBALANZA:
					sNombreCampoCategoriaValor="con_balanza";
					break;

				case BodegaProductoConstantesFunciones.LABEL_CANTIDADPEDIDA:
					sNombreCampoCategoriaValor="cantidad_pedida";
					break;

				case BodegaProductoConstantesFunciones.LABEL_CANTIDADFISICA:
					sNombreCampoCategoriaValor="cantidad_fisica";
					break;

				case BodegaProductoConstantesFunciones.LABEL_CANTIDADREQUERIDO:
					sNombreCampoCategoriaValor="cantidad_requerido";
					break;

				case BodegaProductoConstantesFunciones.LABEL_PRECIOCOSTO:
					sNombreCampoCategoriaValor="precio_costo";
					break;

				case BodegaProductoConstantesFunciones.LABEL_PRECIOPROMEDIO:
					sNombreCampoCategoriaValor="precio_promedio";
					break;

				case BodegaProductoConstantesFunciones.LABEL_TOTALINGRESOS:
					sNombreCampoCategoriaValor="total_ingresos";
					break;

				case BodegaProductoConstantesFunciones.LABEL_TOTALEGRESOS:
					sNombreCampoCategoriaValor="total_egresos";
					break;

				case BodegaProductoConstantesFunciones.LABEL_TOTALPROVISION:
					sNombreCampoCategoriaValor="total_provision";
					break;

				case BodegaProductoConstantesFunciones.LABEL_TOTALPROCESO:
					sNombreCampoCategoriaValor="total_proceso";
					break;

				case BodegaProductoConstantesFunciones.LABEL_COSTOCALCULADO:
					sNombreCampoCategoriaValor="costo_calculado";
					break;

				case BodegaProductoConstantesFunciones.LABEL_DIASPRODUCCION:
					sNombreCampoCategoriaValor="dias_produccion";
					break;

				case BodegaProductoConstantesFunciones.LABEL_PRECIOREPOSICION:
					sNombreCampoCategoriaValor="precio_reposicion";
					break;

				case BodegaProductoConstantesFunciones.LABEL_FECHAULTIMOPEDIDO:
					sNombreCampoCategoriaValor="fecha_ultimo_pedido";
					break;

				case BodegaProductoConstantesFunciones.LABEL_FECHAINGRESO:
					sNombreCampoCategoriaValor="fecha_ingreso";
					break;

				case BodegaProductoConstantesFunciones.LABEL_FECHAEGRESO:
					sNombreCampoCategoriaValor="fecha_egreso";
					break;

				case BodegaProductoConstantesFunciones.LABEL_FECHAULTIMACOMPRA:
					sNombreCampoCategoriaValor="fecha_ultima_compra";
					break;

				case BodegaProductoConstantesFunciones.LABEL_FECHAULTIMAVENTA:
					sNombreCampoCategoriaValor="fecha_ultima_venta";
					break;

				case BodegaProductoConstantesFunciones.LABEL_FECHAULTIMADEVOLUCION:
					sNombreCampoCategoriaValor="fecha_ultima_devolucion";
					break;

				case BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEINVENTARIO:
					sNombreCampoCategoriaValor="id_cuenta_contable_inventario";
					break;

				case BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLECOSTOVENTA:
					sNombreCampoCategoriaValor="id_cuenta_contable_costo_venta";
					break;

				case BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEVENTA:
					sNombreCampoCategoriaValor="id_cuenta_contable_venta";
					break;

				case BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEDESCUENTO:
					sNombreCampoCategoriaValor="id_cuenta_contable_descuento";
					break;

				case BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEPRODUCCION:
					sNombreCampoCategoriaValor="id_cuenta_contable_produccion";
					break;

				case BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEDEVOLUCION:
					sNombreCampoCategoriaValor="id_cuenta_contable_devolucion";
					break;

				case BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEINGRESODEBITO:
					sNombreCampoCategoriaValor="id_cuenta_contable_ingreso_debito";
					break;

				case BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEINGRESOCREDITO:
					sNombreCampoCategoriaValor="id_cuenta_contable_ingreso_credito";
					break;

				case BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLERESULTADODEBITO:
					sNombreCampoCategoriaValor="id_cuenta_contable_resultado_debito";
					break;

				case BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLERESULTADOCREDITO:
					sNombreCampoCategoriaValor="id_cuenta_contable_resultado_credito";
					break;
					
			default :
				break;
		}	
		//CATEGORIA VALOR
		
		//VALORES GRAFICO
		for(int index:this.jInternalFrameReporteDinamicoBodegaProducto.getjListColumnasValoresGrafico().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoBodegaProducto.getjListColumnasValoresGrafico().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case BodegaProductoConstantesFunciones.LABEL_IDEMPRESA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Empresa",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_empresa");
					break;

				case BodegaProductoConstantesFunciones.LABEL_IDSUCURSAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Sucursal",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_sucursal");
					break;

				case BodegaProductoConstantesFunciones.LABEL_IDBODEGA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Bodega",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_bodega");
					break;

				case BodegaProductoConstantesFunciones.LABEL_IDPRODUCTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Producto",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_producto");
					break;

				case BodegaProductoConstantesFunciones.LABEL_IDUNIDAD:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Unidad",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_unidad");
					break;

				case BodegaProductoConstantesFunciones.LABEL_IDCENTROCOSTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Centro Costo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_centro_costo");
					break;

				case BodegaProductoConstantesFunciones.LABEL_IDESTADOBODEGAPRODUCTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Estado Bodega Producto",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_estado_bodega_producto");
					break;

				case BodegaProductoConstantesFunciones.LABEL_DESCRIPCION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Descripcion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"descripcion");
					break;

				case BodegaProductoConstantesFunciones.LABEL_CANTIDADDISPONIBLE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cantidad Disponible",sNombreCampoCategoria,sNombreCampoCategoriaValor,"cantidad_disponible");
					break;

				case BodegaProductoConstantesFunciones.LABEL_STOCKMAXIMO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Stock Maximo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"stock_maximo");
					break;

				case BodegaProductoConstantesFunciones.LABEL_STOCKMINIMO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Stock Minimo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"stock_minimo");
					break;

				case BodegaProductoConstantesFunciones.LABEL_IVA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Iva",sNombreCampoCategoria,sNombreCampoCategoriaValor,"iva");
					break;

				case BodegaProductoConstantesFunciones.LABEL_IVAVALOR:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Iva Valor",sNombreCampoCategoria,sNombreCampoCategoriaValor,"iva_valor");
					break;

				case BodegaProductoConstantesFunciones.LABEL_DESCUENTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Descuento",sNombreCampoCategoria,sNombreCampoCategoriaValor,"descuento");
					break;

				case BodegaProductoConstantesFunciones.LABEL_DESCUENTOVALOR:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Descuento Valor",sNombreCampoCategoria,sNombreCampoCategoriaValor,"descuento_valor");
					break;

				case BodegaProductoConstantesFunciones.LABEL_ICE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Ice",sNombreCampoCategoria,sNombreCampoCategoriaValor,"ice");
					break;

				case BodegaProductoConstantesFunciones.LABEL_ICEVALOR:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Ice Valor",sNombreCampoCategoria,sNombreCampoCategoriaValor,"ice_valor");
					break;

				case BodegaProductoConstantesFunciones.LABEL_COSTOPROMEDIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Costo Promedio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"costo_promedio");
					break;

				case BodegaProductoConstantesFunciones.LABEL_PORCENTAJECOMISION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Porcentaje Comision",sNombreCampoCategoria,sNombreCampoCategoriaValor,"porcentaje_comision");
					break;

				case BodegaProductoConstantesFunciones.LABEL_PRECIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Precio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"precio");
					break;

				case BodegaProductoConstantesFunciones.LABEL_ULTIMOCOSTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Ultimo Costo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"ultimo_costo");
					break;

				case BodegaProductoConstantesFunciones.LABEL_COSTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Costo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"costo");
					break;

				case BodegaProductoConstantesFunciones.LABEL_ARANCELPORCENTAJE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Arancel Porcentaje",sNombreCampoCategoria,sNombreCampoCategoriaValor,"arancel_porcentaje");
					break;

				case BodegaProductoConstantesFunciones.LABEL_ICEPORCENTAJE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Ice Porcentaje",sNombreCampoCategoria,sNombreCampoCategoriaValor,"ice_porcentaje");
					break;

				case BodegaProductoConstantesFunciones.LABEL_PESO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Peso",sNombreCampoCategoria,sNombreCampoCategoriaValor,"peso");
					break;

				case BodegaProductoConstantesFunciones.LABEL_CONIVA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Con Iva",sNombreCampoCategoria,sNombreCampoCategoriaValor,"con_iva");
					break;

				case BodegaProductoConstantesFunciones.LABEL_CONIMPUESTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Con Impuesto",sNombreCampoCategoria,sNombreCampoCategoriaValor,"con_impuesto");
					break;

				case BodegaProductoConstantesFunciones.LABEL_CONICE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Con Ice",sNombreCampoCategoria,sNombreCampoCategoriaValor,"con_ice");
					break;

				case BodegaProductoConstantesFunciones.LABEL_ESTAACTIVO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Esta Activo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"esta_activo");
					break;

				case BodegaProductoConstantesFunciones.LABEL_CONBALANZA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Con Balanza",sNombreCampoCategoria,sNombreCampoCategoriaValor,"con_balanza");
					break;

				case BodegaProductoConstantesFunciones.LABEL_CANTIDADPEDIDA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cantidad Pedida",sNombreCampoCategoria,sNombreCampoCategoriaValor,"cantidad_pedida");
					break;

				case BodegaProductoConstantesFunciones.LABEL_CANTIDADFISICA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cantidad Fisica",sNombreCampoCategoria,sNombreCampoCategoriaValor,"cantidad_fisica");
					break;

				case BodegaProductoConstantesFunciones.LABEL_CANTIDADREQUERIDO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cantidad Requerido",sNombreCampoCategoria,sNombreCampoCategoriaValor,"cantidad_requerido");
					break;

				case BodegaProductoConstantesFunciones.LABEL_PRECIOCOSTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Precio Costo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"precio_costo");
					break;

				case BodegaProductoConstantesFunciones.LABEL_PRECIOPROMEDIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Precio Promedio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"precio_promedio");
					break;

				case BodegaProductoConstantesFunciones.LABEL_TOTALINGRESOS:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Total Ingresos",sNombreCampoCategoria,sNombreCampoCategoriaValor,"total_ingresos");
					break;

				case BodegaProductoConstantesFunciones.LABEL_TOTALEGRESOS:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Total Egresos",sNombreCampoCategoria,sNombreCampoCategoriaValor,"total_egresos");
					break;

				case BodegaProductoConstantesFunciones.LABEL_TOTALPROVISION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Total Provision",sNombreCampoCategoria,sNombreCampoCategoriaValor,"total_provision");
					break;

				case BodegaProductoConstantesFunciones.LABEL_TOTALPROCESO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Total Proceso",sNombreCampoCategoria,sNombreCampoCategoriaValor,"total_proceso");
					break;

				case BodegaProductoConstantesFunciones.LABEL_COSTOCALCULADO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Costo Calculado",sNombreCampoCategoria,sNombreCampoCategoriaValor,"costo_calculado");
					break;

				case BodegaProductoConstantesFunciones.LABEL_DIASPRODUCCION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Dias Produccion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"dias_produccion");
					break;

				case BodegaProductoConstantesFunciones.LABEL_PRECIOREPOSICION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Precio Reposicion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"precio_reposicion");
					break;

				case BodegaProductoConstantesFunciones.LABEL_FECHAULTIMOPEDIDO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fecha Ultimo Pedido",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha_ultimo_pedido");
					break;

				case BodegaProductoConstantesFunciones.LABEL_FECHAINGRESO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fecha Ingreso",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha_ingreso");
					break;

				case BodegaProductoConstantesFunciones.LABEL_FECHAEGRESO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fecha Egreso",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha_egreso");
					break;

				case BodegaProductoConstantesFunciones.LABEL_FECHAULTIMACOMPRA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fecha Ultima Compra",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha_ultima_compra");
					break;

				case BodegaProductoConstantesFunciones.LABEL_FECHAULTIMAVENTA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fecha Ultima Venta",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha_ultima_venta");
					break;

				case BodegaProductoConstantesFunciones.LABEL_FECHAULTIMADEVOLUCION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fecha Ultima Devolucion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha_ultima_devolucion");
					break;

				case BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEINVENTARIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cuenta C. Inventario",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cuenta_contable_inventario");
					break;

				case BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLECOSTOVENTA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cuenta C. Costo Venta",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cuenta_contable_costo_venta");
					break;

				case BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEVENTA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cuenta C. Venta",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cuenta_contable_venta");
					break;

				case BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEDESCUENTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cuenta C. Descuento",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cuenta_contable_descuento");
					break;

				case BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEPRODUCCION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cuenta C. Produccion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cuenta_contable_produccion");
					break;

				case BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEDEVOLUCION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cuenta C. Devolucion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cuenta_contable_devolucion");
					break;

				case BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEINGRESODEBITO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cuenta C. Ingreso Debito",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cuenta_contable_ingreso_debito");
					break;

				case BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEINGRESOCREDITO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cuenta C. Ingreso Credito",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cuenta_contable_ingreso_credito");
					break;

				case BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLERESULTADODEBITO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cuenta C. Resultado Debito",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cuenta_contable_resultado_debito");
					break;

				case BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLERESULTADOCREDITO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cuenta C. Resultado Credito",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cuenta_contable_resultado_credito");
					break;
					
				default :
					break;
			}
		}
		//VALORES GRAFICO
		//if(sTipoGraficoReporte.equals("BARRAS") || sTipoGraficoReporte.equals("BARRAS_3D") || sTipoGraficoReporte.equals("BARRAS_XY") ||
		//   sTipoGraficoReporte.equals("PASTEL") || sTipoGraficoReporte.equals("PASTEL_3D") || sTipoGraficoReporte.equals("APILADO")) {
			
			existe=true;
			strGrafico=FuncionesReporte.getStringGraficoReporte(sTipoGraficoReporte,sWidthGrafico,strCategorySeries);			
		//}
		
		if(existe) {
			sXmlStringFile=sXmlStringFile.replace("<!--GRAFICO-->", strGrafico);
		}												
		
		return sXmlStringFile;
	}
	
	
	//@SuppressWarnings("deprecation")
	
	public void jButtonGenerarExcelReporteDinamicoBodegaProductoActionPerformed(ActionEvent evt) throws Exception {		
		ArrayList<BodegaProducto> bodegaproductosSeleccionados=new ArrayList<BodegaProducto>();		
		
		bodegaproductosSeleccionados=this.getBodegaProductosSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"bodegaproducto";//.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		Boolean existeFilas=false;
		
		Workbook workbook = null;
		FileOutputStream fileOutputStream=null;
		Reporte reporte=new Reporte();
		
		try {
			
			if(sTipoArchivoReporte=="EXCEL2") {
				workbook = new HSSFWorkbook();
				sPath+=".xls";
			
			} else if(sTipoArchivoReporte=="EXCEL2_2") {
				workbook = new XSSFWorkbook();
				sPath+=".xlsx";			
			}
		
			Sheet sheet = workbook.createSheet("BodegaProductos");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			Row row = sheet.createRow(iRow);
			Cell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");
			
			for(int index:this.jInternalFrameReporteDinamicoBodegaProducto.getjListColumnasSelectReporte().getSelectedIndices()) {
				reporte=(Reporte)this.jInternalFrameReporteDinamicoBodegaProducto.getjListColumnasSelectReporte().getModel().getElementAt(index);
				
				switch(reporte.getsCodigo()) {
					
				case BodegaProductoConstantesFunciones.LABEL_IDEMPRESA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_IDEMPRESA);
					iRow++;

					for(BodegaProducto bodegaproducto:bodegaproductosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(bodegaproducto.getempresa_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case BodegaProductoConstantesFunciones.LABEL_IDSUCURSAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_IDSUCURSAL);
					iRow++;

					for(BodegaProducto bodegaproducto:bodegaproductosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(bodegaproducto.getsucursal_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case BodegaProductoConstantesFunciones.LABEL_IDBODEGA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_IDBODEGA);
					iRow++;

					for(BodegaProducto bodegaproducto:bodegaproductosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(bodegaproducto.getbodega_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case BodegaProductoConstantesFunciones.LABEL_IDPRODUCTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_IDPRODUCTO);
					iRow++;

					for(BodegaProducto bodegaproducto:bodegaproductosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(bodegaproducto.getproducto_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case BodegaProductoConstantesFunciones.LABEL_IDUNIDAD:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_IDUNIDAD);
					iRow++;

					for(BodegaProducto bodegaproducto:bodegaproductosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(bodegaproducto.getunidad_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case BodegaProductoConstantesFunciones.LABEL_IDCENTROCOSTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_IDCENTROCOSTO);
					iRow++;

					for(BodegaProducto bodegaproducto:bodegaproductosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(bodegaproducto.getcentrocosto_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case BodegaProductoConstantesFunciones.LABEL_IDESTADOBODEGAPRODUCTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_IDESTADOBODEGAPRODUCTO);
					iRow++;

					for(BodegaProducto bodegaproducto:bodegaproductosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(bodegaproducto.getestadobodegaproducto_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case BodegaProductoConstantesFunciones.LABEL_DESCRIPCION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_DESCRIPCION);
					iRow++;

					for(BodegaProducto bodegaproducto:bodegaproductosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(bodegaproducto.getdescripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case BodegaProductoConstantesFunciones.LABEL_CANTIDADDISPONIBLE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_CANTIDADDISPONIBLE);
					iRow++;

					for(BodegaProducto bodegaproducto:bodegaproductosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(bodegaproducto.getcantidad_disponible());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case BodegaProductoConstantesFunciones.LABEL_STOCKMAXIMO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_STOCKMAXIMO);
					iRow++;

					for(BodegaProducto bodegaproducto:bodegaproductosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(bodegaproducto.getstock_maximo());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case BodegaProductoConstantesFunciones.LABEL_STOCKMINIMO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_STOCKMINIMO);
					iRow++;

					for(BodegaProducto bodegaproducto:bodegaproductosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(bodegaproducto.getstock_minimo());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case BodegaProductoConstantesFunciones.LABEL_IVA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_IVA);
					iRow++;

					for(BodegaProducto bodegaproducto:bodegaproductosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(bodegaproducto.getiva());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case BodegaProductoConstantesFunciones.LABEL_IVAVALOR:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_IVAVALOR);
					iRow++;

					for(BodegaProducto bodegaproducto:bodegaproductosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(bodegaproducto.getiva_valor());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case BodegaProductoConstantesFunciones.LABEL_DESCUENTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_DESCUENTO);
					iRow++;

					for(BodegaProducto bodegaproducto:bodegaproductosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(bodegaproducto.getdescuento());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case BodegaProductoConstantesFunciones.LABEL_DESCUENTOVALOR:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_DESCUENTOVALOR);
					iRow++;

					for(BodegaProducto bodegaproducto:bodegaproductosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(bodegaproducto.getdescuento_valor());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case BodegaProductoConstantesFunciones.LABEL_ICE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_ICE);
					iRow++;

					for(BodegaProducto bodegaproducto:bodegaproductosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(bodegaproducto.getice());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case BodegaProductoConstantesFunciones.LABEL_ICEVALOR:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_ICEVALOR);
					iRow++;

					for(BodegaProducto bodegaproducto:bodegaproductosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(bodegaproducto.getice_valor());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case BodegaProductoConstantesFunciones.LABEL_COSTOPROMEDIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_COSTOPROMEDIO);
					iRow++;

					for(BodegaProducto bodegaproducto:bodegaproductosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(bodegaproducto.getcosto_promedio());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case BodegaProductoConstantesFunciones.LABEL_PORCENTAJECOMISION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_PORCENTAJECOMISION);
					iRow++;

					for(BodegaProducto bodegaproducto:bodegaproductosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(bodegaproducto.getporcentaje_comision());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case BodegaProductoConstantesFunciones.LABEL_PRECIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_PRECIO);
					iRow++;

					for(BodegaProducto bodegaproducto:bodegaproductosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(bodegaproducto.getprecio());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case BodegaProductoConstantesFunciones.LABEL_ULTIMOCOSTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_ULTIMOCOSTO);
					iRow++;

					for(BodegaProducto bodegaproducto:bodegaproductosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(bodegaproducto.getultimo_costo());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case BodegaProductoConstantesFunciones.LABEL_COSTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_COSTO);
					iRow++;

					for(BodegaProducto bodegaproducto:bodegaproductosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(bodegaproducto.getcosto());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case BodegaProductoConstantesFunciones.LABEL_ARANCELPORCENTAJE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_ARANCELPORCENTAJE);
					iRow++;

					for(BodegaProducto bodegaproducto:bodegaproductosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(bodegaproducto.getarancel_porcentaje());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case BodegaProductoConstantesFunciones.LABEL_ICEPORCENTAJE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_ICEPORCENTAJE);
					iRow++;

					for(BodegaProducto bodegaproducto:bodegaproductosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(bodegaproducto.getice_porcentaje());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case BodegaProductoConstantesFunciones.LABEL_PESO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_PESO);
					iRow++;

					for(BodegaProducto bodegaproducto:bodegaproductosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(bodegaproducto.getpeso());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case BodegaProductoConstantesFunciones.LABEL_CONIVA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_CONIVA);
					iRow++;

					for(BodegaProducto bodegaproducto:bodegaproductosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(bodegaproducto.getcon_iva());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case BodegaProductoConstantesFunciones.LABEL_CONIMPUESTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_CONIMPUESTO);
					iRow++;

					for(BodegaProducto bodegaproducto:bodegaproductosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(bodegaproducto.getcon_impuesto());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case BodegaProductoConstantesFunciones.LABEL_CONICE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_CONICE);
					iRow++;

					for(BodegaProducto bodegaproducto:bodegaproductosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(bodegaproducto.getcon_ice());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case BodegaProductoConstantesFunciones.LABEL_ESTAACTIVO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_ESTAACTIVO);
					iRow++;

					for(BodegaProducto bodegaproducto:bodegaproductosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(bodegaproducto.getesta_activo());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case BodegaProductoConstantesFunciones.LABEL_CONBALANZA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_CONBALANZA);
					iRow++;

					for(BodegaProducto bodegaproducto:bodegaproductosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(bodegaproducto.getcon_balanza());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case BodegaProductoConstantesFunciones.LABEL_CANTIDADPEDIDA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_CANTIDADPEDIDA);
					iRow++;

					for(BodegaProducto bodegaproducto:bodegaproductosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(bodegaproducto.getcantidad_pedida());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case BodegaProductoConstantesFunciones.LABEL_CANTIDADFISICA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_CANTIDADFISICA);
					iRow++;

					for(BodegaProducto bodegaproducto:bodegaproductosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(bodegaproducto.getcantidad_fisica());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case BodegaProductoConstantesFunciones.LABEL_CANTIDADREQUERIDO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_CANTIDADREQUERIDO);
					iRow++;

					for(BodegaProducto bodegaproducto:bodegaproductosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(bodegaproducto.getcantidad_requerido());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case BodegaProductoConstantesFunciones.LABEL_PRECIOCOSTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_PRECIOCOSTO);
					iRow++;

					for(BodegaProducto bodegaproducto:bodegaproductosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(bodegaproducto.getprecio_costo());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case BodegaProductoConstantesFunciones.LABEL_PRECIOPROMEDIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_PRECIOPROMEDIO);
					iRow++;

					for(BodegaProducto bodegaproducto:bodegaproductosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(bodegaproducto.getprecio_promedio());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case BodegaProductoConstantesFunciones.LABEL_TOTALINGRESOS:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_TOTALINGRESOS);
					iRow++;

					for(BodegaProducto bodegaproducto:bodegaproductosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(bodegaproducto.gettotal_ingresos());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case BodegaProductoConstantesFunciones.LABEL_TOTALEGRESOS:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_TOTALEGRESOS);
					iRow++;

					for(BodegaProducto bodegaproducto:bodegaproductosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(bodegaproducto.gettotal_egresos());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case BodegaProductoConstantesFunciones.LABEL_TOTALPROVISION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_TOTALPROVISION);
					iRow++;

					for(BodegaProducto bodegaproducto:bodegaproductosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(bodegaproducto.gettotal_provision());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case BodegaProductoConstantesFunciones.LABEL_TOTALPROCESO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_TOTALPROCESO);
					iRow++;

					for(BodegaProducto bodegaproducto:bodegaproductosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(bodegaproducto.gettotal_proceso());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case BodegaProductoConstantesFunciones.LABEL_COSTOCALCULADO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_COSTOCALCULADO);
					iRow++;

					for(BodegaProducto bodegaproducto:bodegaproductosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(bodegaproducto.getcosto_calculado());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case BodegaProductoConstantesFunciones.LABEL_DIASPRODUCCION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_DIASPRODUCCION);
					iRow++;

					for(BodegaProducto bodegaproducto:bodegaproductosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(bodegaproducto.getdias_produccion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case BodegaProductoConstantesFunciones.LABEL_PRECIOREPOSICION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_PRECIOREPOSICION);
					iRow++;

					for(BodegaProducto bodegaproducto:bodegaproductosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(bodegaproducto.getprecio_reposicion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case BodegaProductoConstantesFunciones.LABEL_FECHAULTIMOPEDIDO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_FECHAULTIMOPEDIDO);
					iRow++;

					for(BodegaProducto bodegaproducto:bodegaproductosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(bodegaproducto.getfecha_ultimo_pedido());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case BodegaProductoConstantesFunciones.LABEL_FECHAINGRESO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_FECHAINGRESO);
					iRow++;

					for(BodegaProducto bodegaproducto:bodegaproductosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(bodegaproducto.getfecha_ingreso());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case BodegaProductoConstantesFunciones.LABEL_FECHAEGRESO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_FECHAEGRESO);
					iRow++;

					for(BodegaProducto bodegaproducto:bodegaproductosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(bodegaproducto.getfecha_egreso());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case BodegaProductoConstantesFunciones.LABEL_FECHAULTIMACOMPRA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_FECHAULTIMACOMPRA);
					iRow++;

					for(BodegaProducto bodegaproducto:bodegaproductosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(bodegaproducto.getfecha_ultima_compra());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case BodegaProductoConstantesFunciones.LABEL_FECHAULTIMAVENTA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_FECHAULTIMAVENTA);
					iRow++;

					for(BodegaProducto bodegaproducto:bodegaproductosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(bodegaproducto.getfecha_ultima_venta());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case BodegaProductoConstantesFunciones.LABEL_FECHAULTIMADEVOLUCION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_FECHAULTIMADEVOLUCION);
					iRow++;

					for(BodegaProducto bodegaproducto:bodegaproductosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(bodegaproducto.getfecha_ultima_devolucion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEINVENTARIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEINVENTARIO);
					iRow++;

					for(BodegaProducto bodegaproducto:bodegaproductosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(bodegaproducto.getcuentacontableinventario_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLECOSTOVENTA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLECOSTOVENTA);
					iRow++;

					for(BodegaProducto bodegaproducto:bodegaproductosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(bodegaproducto.getcuentacontablecostoventa_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEVENTA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEVENTA);
					iRow++;

					for(BodegaProducto bodegaproducto:bodegaproductosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(bodegaproducto.getcuentacontableventa_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEDESCUENTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEDESCUENTO);
					iRow++;

					for(BodegaProducto bodegaproducto:bodegaproductosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(bodegaproducto.getcuentacontabledescuento_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEPRODUCCION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEPRODUCCION);
					iRow++;

					for(BodegaProducto bodegaproducto:bodegaproductosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(bodegaproducto.getcuentacontableproduccion_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEDEVOLUCION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEDEVOLUCION);
					iRow++;

					for(BodegaProducto bodegaproducto:bodegaproductosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(bodegaproducto.getcuentacontabledevolucion_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEINGRESODEBITO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEINGRESODEBITO);
					iRow++;

					for(BodegaProducto bodegaproducto:bodegaproductosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(bodegaproducto.getcuentacontableingresodebito_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEINGRESOCREDITO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEINGRESOCREDITO);
					iRow++;

					for(BodegaProducto bodegaproducto:bodegaproductosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(bodegaproducto.getcuentacontableingresocredito_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLERESULTADODEBITO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLERESULTADODEBITO);
					iRow++;

					for(BodegaProducto bodegaproducto:bodegaproductosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(bodegaproducto.getcuentacontableresultadodebito_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLERESULTADOCREDITO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLERESULTADOCREDITO);
					iRow++;

					for(BodegaProducto bodegaproducto:bodegaproductosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(bodegaproducto.getcuentacontableresultadocredito_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;
					
					default :
						break;
				}
			}
			
			
			//if(conCabecera) {
			//	this.getFilaCabeceraExportarExcelBodegaProducto(row);				
			//	iRow++;
			//}				
			
			//for(BodegaProducto bodegaproductoAux:bodegaproductosSeleccionados) {
			//	row = sheet.createRow(iRow);
				
			//	this.getFilaDatosExportarExcelBodegaProducto(bodegaproductoAux,row);
				
			//	iRow++;
			//}
			
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.bodegaproductoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Bodega Producto",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}				
	}	
	
	
	
	
	public void buscarPorId(Long idActual) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.getNewConnexionToDeep("");
			}
			
			this.idActual=idActual;
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda("PorId");
				    	
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBodegaProducto(false);
			
			//SI ES MANUAL
			if(BodegaProductoJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualBodegaProducto();
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger);
			
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonAnterioresBodegaProductoActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion-=this.iNumeroPaginacion;
			/*
			if(this.iNumeroPaginacion<0) {
				this.iNumeroPaginacion=0;
			}
			*/
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.getNewConnexionToDeep("");
			}
			
			this.anteriores();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBodegaProducto(false);
			
			//SI ES MANUAL
			if(BodegaProductoJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualBodegaProducto();
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonSiguientesBodegaProductoActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion+=this.iNumeroPaginacion;
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.getNewConnexionToDeep("");
			}
			
			this.siguientes();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBodegaProducto(false);
			
			//SI ES MANUAL
			if(BodegaProductoJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualBodegaProducto();
			}		
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void aumentarTamanioFilaNuevaTablaBodegaProducto() throws Exception {		
		Dimension dimensionMinimum=this.jTableDatosBodegaProducto.getMinimumSize();
		Dimension dimensionMaximum=this.jTableDatosBodegaProducto.getMaximumSize();
		Dimension dimensionPreferred=this.jTableDatosBodegaProducto.getPreferredSize();
	
		double iHeightConFilaNueva=dimensionPreferred.getHeight();
		
		iHeightConFilaNueva+=this.jTableDatosBodegaProducto.getRowHeight();
		
		dimensionMinimum.setSize(dimensionMinimum.getWidth(),iHeightConFilaNueva);
		dimensionMaximum.setSize(dimensionMaximum.getWidth(),iHeightConFilaNueva);
		dimensionPreferred.setSize(dimensionPreferred.getWidth(),iHeightConFilaNueva);
		
		this.jTableDatosBodegaProducto.setMinimumSize(dimensionMinimum);
		this.jTableDatosBodegaProducto.setMaximumSize(dimensionMaximum);
		this.jTableDatosBodegaProducto.setPreferredSize(dimensionPreferred);	
	}
	
	public void inicializarActualizarBindingBodegaProducto(Boolean esInicializar) throws Exception {
		this.inicializarActualizarBindingBodegaProducto(esInicializar,true);
	}
	
	public void inicializarActualizarBindingBodegaProducto(Boolean esInicializar,Boolean conTabla) throws Exception {		
		if(conTabla) {
			this.inicializarActualizarBindingTablaBodegaProducto(esInicializar);
		}
		
		this.inicializarActualizarBindingBotonesBodegaProducto(esInicializar);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.bodegaproductoSessionBean.getEsGuardarRelacionado()) {
			try{this.inicializarActualizarBindingBusquedasBodegaProducto(esInicializar);}catch(Exception e){e.printStackTrace();}
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesBodegaProducto(esInicializar) ;
			
			this.inicializarActualizarBindingParametrosReportesBodegaProducto(esInicializar) ;
		}
		
		if(esInicializar) {
			if( !BodegaProductoJInternalFrame.ISBINDING_MANUAL_TABLA ||
			   	!BodegaProductoJInternalFrame.ISBINDING_MANUAL) {
			   	
			}
		}
	}
	
	public void inicializarActualizarBindingManualBodegaProducto() throws Exception {		
		//NO SE NECESITA HACER BINDING OTRA VEZ
		//this.inicializarActualizarBindingTablaBodegaProducto();
		
		this.inicializarActualizarBindingBotonesManualBodegaProducto(true);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.bodegaproductoSessionBean.getEsGuardarRelacionado()) {
			
			this.inicializarActualizarBindingBusquedasManualBodegaProducto();			
			
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesBodegaProducto() ;
			
			this.inicializarActualizarBindingParametrosReportesPostAccionesManualBodegaProducto(false) ;			
			
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesPostAccionesManualBodegaProducto(Boolean esSetControles) throws Exception {
		try	{					
			if(!esSetControles) {
				this.isSeleccionarTodos=this.jCheckBoxSeleccionarTodosBodegaProducto.isSelected();
				this.isSeleccionados=this.jCheckBoxSeleccionadosBodegaProducto.isSelected();
				
				
				this.conGraficoReporte=this.jCheckBoxConGraficoReporteBodegaProducto.isSelected();															
				
				
				if(this.jInternalFrameDetalleFormBodegaProducto!=null) {
				this.isPostAccionNuevo=this.jInternalFrameDetalleFormBodegaProducto.jCheckBoxPostAccionNuevoBodegaProducto.isSelected();
				this.isPostAccionSinCerrar=this.jInternalFrameDetalleFormBodegaProducto.jCheckBoxPostAccionSinCerrarBodegaProducto.isSelected();
				this.isPostAccionSinMensaje=this.jInternalFrameDetalleFormBodegaProducto.jCheckBoxPostAccionSinMensajeBodegaProducto.isSelected();
				}
			
			} else {
				this.jCheckBoxSeleccionarTodosBodegaProducto.setSelected(this.isSeleccionarTodos);
				this.jCheckBoxSeleccionadosBodegaProducto.setSelected(this.isSeleccionados);
				
				
				this.jCheckBoxConGraficoReporteBodegaProducto.setSelected(this.conGraficoReporte);				
				
				
				if(this.jInternalFrameDetalleFormBodegaProducto!=null) {
				this.jInternalFrameDetalleFormBodegaProducto.jCheckBoxPostAccionNuevoBodegaProducto.setSelected(this.isPostAccionNuevo);
				this.jInternalFrameDetalleFormBodegaProducto.jCheckBoxPostAccionSinCerrarBodegaProducto.setSelected(this.isPostAccionSinCerrar);
				this.jInternalFrameDetalleFormBodegaProducto.jCheckBoxPostAccionSinMensajeBodegaProducto.setSelected(this.isPostAccionSinMensaje);
				}
			}
			
			
			if(this.jComboBoxTiposPaginacionBodegaProducto.getSelectedItem()!=null) {
				this.sTipoPaginacion=((Reporte)this.jComboBoxTiposPaginacionBodegaProducto.getSelectedItem()).getsCodigo();			
			}
			
			
			
			if(this.jInternalFrameDetalleFormBodegaProducto!=null) {
			this.sTipoAccionFormulario=((Reporte)this.jInternalFrameDetalleFormBodegaProducto.jComboBoxTiposAccionesFormularioBodegaProducto.getSelectedItem()).getsCodigo();
			}
			
			
			
			if(!this.conCargarMinimo) {
				this.sTipoArchivoReporte=((Reporte)this.jComboBoxTiposArchivosReportesBodegaProducto.getSelectedItem()).getsCodigo();			
				
				if(this.jInternalFrameReporteDinamicoBodegaProducto!=null) {
					this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoBodegaProducto.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
				}
				
				this.sTipoRelacion=((Reporte)this.jComboBoxTiposRelacionesBodegaProducto.getSelectedItem()).getsCodigo();
									
				this.sTipoAccion=((Reporte)this.jComboBoxTiposAccionesBodegaProducto.getSelectedItem()).getsCodigo();
													
				this.sTipoSeleccionar=((Reporte)this.jComboBoxTiposSeleccionarBodegaProducto.getSelectedItem()).getsCodigo();
									
				this.sTipoReporte=((Reporte)this.jComboBoxTiposReportesBodegaProducto.getSelectedItem()).getsCodigo();							
					
				if(this.jInternalFrameReporteDinamicoBodegaProducto!=null) {
					this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoBodegaProducto.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();							
				}
				
				this.sTipoGraficoReporte=((Reporte)this.jComboBoxTiposGraficosReportesBodegaProducto.getSelectedItem()).getsCodigo();											
			}			
			
			this.sValorCampoGeneral=this.jTextFieldValorCampoGeneralBodegaProducto.getText();						
			
			
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesBodegaProducto(Boolean esInicializar) throws Exception {
		try	{	
			if(BodegaProductoJInternalFrame.ISBINDING_MANUAL) {
				this. inicializarActualizarBindingParametrosReportesPostAccionesManualBodegaProducto(false);
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public void inicializarActualizarBindingtiposArchivosReportesAccionesBodegaProducto() throws Exception {
		try	{
			if(BodegaProductoJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingtiposArchivosReportesAccionesManualBodegaProducto();
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleBodegaProducto() throws Exception {
		//TIPOS ACCIONES FORMULARIO	
		this.jInternalFrameDetalleFormBodegaProducto.jComboBoxTiposAccionesFormularioBodegaProducto.removeAllItems();
				
		for(Reporte reporte:this.tiposAccionesFormulario) {
			this.jInternalFrameDetalleFormBodegaProducto.jComboBoxTiposAccionesFormularioBodegaProducto.addItem(reporte);
		}
		
		//TIPOS ACCIONES FORMULARIO
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualBodegaProducto() throws Exception {
		try	{
			
			//TIPOS ARCHIVOS REPORTES
			this.jComboBoxTiposArchivosReportesBodegaProducto.removeAllItems();
				
			for(Reporte reporte:this.tiposArchivosReportes) {
				this.jComboBoxTiposArchivosReportesBodegaProducto.addItem(reporte);
			}
			
			
				
			//TIPOS REPORTES
			this.jComboBoxTiposReportesBodegaProducto.removeAllItems();
				
			for(Reporte reporte:this.tiposReportes) {
				this.jComboBoxTiposReportesBodegaProducto.addItem(reporte);
			}
			
			
			//TIPOS GRAFICOS REPORTES
			this.jComboBoxTiposGraficosReportesBodegaProducto.removeAllItems();
				
			for(Reporte reporte:this.tiposGraficosReportes) {
				this.jComboBoxTiposGraficosReportesBodegaProducto.addItem(reporte);
			}
			
			
			//TIPOS PAGINACION
			this.jComboBoxTiposPaginacionBodegaProducto.removeAllItems();
				
			for(Reporte reporte:this.tiposPaginacion) {
				this.jComboBoxTiposPaginacionBodegaProducto.addItem(reporte);
			}
			
			
			if(!this.bodegaproductoSessionBean.getEsGuardarRelacionado()) {
				this.jComboBoxTiposPaginacionBodegaProducto.setSelectedItem(Funciones2.getTipoPaginacionDefecto("NORMAL",this.tiposPaginacion));
			} else {
				this.jComboBoxTiposPaginacionBodegaProducto.setSelectedItem(Funciones2.getTipoPaginacionDefecto("RELACIONADO",this.tiposPaginacion));
			}
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposRelacionesBodegaProducto.removeAllItems();
				
			for(Reporte reporte:this.tiposRelaciones) {
				this.jComboBoxTiposRelacionesBodegaProducto.addItem(reporte);
			}
			
			//TIPOS ACCIONES
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposAccionesBodegaProducto.removeAllItems();
				
			for(Reporte reporte:this.tiposAcciones) {
				this.jComboBoxTiposAccionesBodegaProducto.addItem(reporte);
			}
			
			//TIPOS ACCIONES			
			
			
			
			//TIPOS ACCIONES FORMULARIO	
			if(this.jInternalFrameDetalleFormBodegaProducto!=null) { //if(this.conCargarFormDetalle) {
				this.jInternalFrameDetalleFormBodegaProducto.jComboBoxTiposAccionesFormularioBodegaProducto.removeAllItems();
				
				for(Reporte reporte:this.tiposAccionesFormulario) {
					this.jInternalFrameDetalleFormBodegaProducto.jComboBoxTiposAccionesFormularioBodegaProducto.addItem(reporte);
				}
				
			}
			//TIPOS ACCIONES FORMULARIO
			
			
			
			//TIPOS SELECCIONAR
			this.jComboBoxTiposSeleccionarBodegaProducto.removeAllItems();
				
			for(Reporte reporte:this.tiposSeleccionar) {
				this.jComboBoxTiposSeleccionarBodegaProducto.addItem(reporte);
			}
			
			
			if(this.tiposSeleccionar!=null && this.tiposSeleccionar.size()>1) {
				this.jComboBoxTiposSeleccionarBodegaProducto.setSelectedIndex(1);
			}
				
			//REPORTE DINAMICO
			this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualBodegaProducto();
							
			//TIPOS COLUMNAS SELECT
			//TIPOS SELECCIONAR
			
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualBodegaProducto() throws Exception {
		try	{
			DefaultListModel<Reporte> defaultListModel=new DefaultListModel<Reporte>();
			
			
			//TIPOS ARCHIVOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoBodegaProducto!=null) {
				this.jInternalFrameReporteDinamicoBodegaProducto.getjComboBoxTiposArchivosReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposArchivosReportesDinamico) {
					this.jInternalFrameReporteDinamicoBodegaProducto.getjComboBoxTiposArchivosReportesDinamico().addItem(reporte);
				}
				
			}
			
			//TIPOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoBodegaProducto!=null) {
				this.jInternalFrameReporteDinamicoBodegaProducto.getjComboBoxTiposReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposReportesDinamico) {
					this.jInternalFrameReporteDinamicoBodegaProducto.getjComboBoxTiposReportesDinamico().addItem(reporte);
				}
				
			}
			
			defaultListModel=new DefaultListModel<Reporte>();
			
			if(this.jInternalFrameReporteDinamicoBodegaProducto!=null) {
				
				if(this.jInternalFrameReporteDinamicoBodegaProducto.getjListColumnasSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoBodegaProducto.getjListColumnasSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposColumnasSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoBodegaProducto.getjListColumnasSelectReporte().setModel(defaultListModel);									
						
				}	
					
				//TIPOS RELACIONES SELECT
				//TIPOS SELECCIONAR
				defaultListModel=new DefaultListModel<Reporte>();
				if(this.jInternalFrameReporteDinamicoBodegaProducto.getjListRelacionesSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoBodegaProducto.getjListRelacionesSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposRelacionesSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoBodegaProducto.getjListRelacionesSelectReporte().setModel(defaultListModel);									
						
				}	
				
				
				//TIPOS COLUMNAS CATEGORIA DINAMICO
				if(this.jInternalFrameReporteDinamicoBodegaProducto.getjComboBoxColumnaCategoriaGrafico()!=null) {
					this.jInternalFrameReporteDinamicoBodegaProducto.getjComboBoxColumnaCategoriaGrafico().removeAllItems();
						
					ArrayList<Reporte> tiposColumnasCategoria=BodegaProductoConstantesFunciones.getTiposSeleccionarBodegaProducto(true,true,false,true,true);
						
					for(Reporte reporte:tiposColumnasCategoria) {//this.tiposSeleccionar
						this.jInternalFrameReporteDinamicoBodegaProducto.getjComboBoxColumnaCategoriaGrafico().addItem(reporte);
					}
					
				}
					
				//TIPOS COLUMNAS CATEGORIA VALOR DINAMICO
				if(this.jInternalFrameReporteDinamicoBodegaProducto.getjComboBoxColumnaCategoriaValor()!=null) {
					this.jInternalFrameReporteDinamicoBodegaProducto.getjComboBoxColumnaCategoriaValor().removeAllItems();
						
					ArrayList<Reporte> tiposColumnasCategoriaValor=BodegaProductoConstantesFunciones.getTiposSeleccionarBodegaProducto(false,false,true,false,false);
						
					for(Reporte reporte:tiposColumnasCategoriaValor) {//this.tiposSeleccionar
						this.jInternalFrameReporteDinamicoBodegaProducto.getjComboBoxColumnaCategoriaValor().addItem(reporte);
					}
					
				}
					
				//TIPOS COLUMNAS VALOR
				defaultListModel=new DefaultListModel<Reporte>();
					
				if(this.jInternalFrameReporteDinamicoBodegaProducto.getjListColumnasValoresGrafico()!=null) {
					this.jInternalFrameReporteDinamicoBodegaProducto.getjListColumnasValoresGrafico().removeAll();
						
					ArrayList<Reporte> tiposColumnasValor=BodegaProductoConstantesFunciones.getTiposSeleccionarBodegaProducto(false,false,true,false,false);
						
					for(Reporte reporte:tiposColumnasValor) {//this.tiposSeleccionar
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoBodegaProducto.getjListColumnasValoresGrafico().setModel(defaultListModel);									
						
				}
					
				//TIPOS GRAFICOS REPORTES DINAMICOS
				if(this.jInternalFrameReporteDinamicoBodegaProducto.getjComboBoxTiposGraficosReportesDinamico()!=null) {
					this.jInternalFrameReporteDinamicoBodegaProducto.getjComboBoxTiposGraficosReportesDinamico().removeAllItems();
						
					for(Reporte reporte:this.tiposGraficosReportes) {
						this.jInternalFrameReporteDinamicoBodegaProducto.getjComboBoxTiposGraficosReportesDinamico().addItem(reporte);
					}
					
				}
			
			
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	
	
	public void inicializarActualizarBindingBusquedasManualBodegaProducto()  throws Exception {				
		//BYDAN_BUSQUEDAS		
		
		if(this.jComboBoxid_bodegaFK_IdBodegaBodegaProducto.getSelectedItem()!=null){this.id_bodegaFK_IdBodega=((Bodega)this.jComboBoxid_bodegaFK_IdBodegaBodegaProducto.getSelectedItem()).getId();}
		if(this.jComboBoxid_centro_costoFK_IdCentroCostoBodegaProducto.getSelectedItem()!=null){this.id_centro_costoFK_IdCentroCosto=((CentroCosto)this.jComboBoxid_centro_costoFK_IdCentroCostoBodegaProducto.getSelectedItem()).getId();}
		if(this.jComboBoxid_cuenta_contable_costo_ventaFK_IdCuentaContableCostoVentaBodegaProducto.getSelectedItem()!=null){this.id_cuenta_contable_costo_ventaFK_IdCuentaContableCostoVenta=((CuentaContable)this.jComboBoxid_cuenta_contable_costo_ventaFK_IdCuentaContableCostoVentaBodegaProducto.getSelectedItem()).getId();}
		if(this.jComboBoxid_cuenta_contable_ingreso_creditoFK_IdCuentaContableIngresoCreditoBodegaProducto.getSelectedItem()!=null){this.id_cuenta_contable_ingreso_creditoFK_IdCuentaContableIngresoCredito=((CuentaContable)this.jComboBoxid_cuenta_contable_ingreso_creditoFK_IdCuentaContableIngresoCreditoBodegaProducto.getSelectedItem()).getId();}
		if(this.jComboBoxid_cuenta_contable_ingreso_debitoFK_IdCuentaContableIngresoDebitoBodegaProducto.getSelectedItem()!=null){this.id_cuenta_contable_ingreso_debitoFK_IdCuentaContableIngresoDebito=((CuentaContable)this.jComboBoxid_cuenta_contable_ingreso_debitoFK_IdCuentaContableIngresoDebitoBodegaProducto.getSelectedItem()).getId();}
		if(this.jComboBoxid_cuenta_contable_produccionFK_IdCuentaContableProduccionBodegaProducto.getSelectedItem()!=null){this.id_cuenta_contable_produccionFK_IdCuentaContableProduccion=((CuentaContable)this.jComboBoxid_cuenta_contable_produccionFK_IdCuentaContableProduccionBodegaProducto.getSelectedItem()).getId();}
		if(this.jComboBoxid_cuenta_contable_resultado_creditoFK_IdCuentaContableResultadoCreditoBodegaProducto.getSelectedItem()!=null){this.id_cuenta_contable_resultado_creditoFK_IdCuentaContableResultadoCredito=((CuentaContable)this.jComboBoxid_cuenta_contable_resultado_creditoFK_IdCuentaContableResultadoCreditoBodegaProducto.getSelectedItem()).getId();}
		if(this.jComboBoxid_cuenta_contable_resultado_debitoFK_IdCuentaContableResultadoDebitoBodegaProducto.getSelectedItem()!=null){this.id_cuenta_contable_resultado_debitoFK_IdCuentaContableResultadoDebito=((CuentaContable)this.jComboBoxid_cuenta_contable_resultado_debitoFK_IdCuentaContableResultadoDebitoBodegaProducto.getSelectedItem()).getId();}
		if(this.jComboBoxid_cuenta_contable_ventaFK_IdCuentaContableVentaBodegaProducto.getSelectedItem()!=null){this.id_cuenta_contable_ventaFK_IdCuentaContableVenta=((CuentaContable)this.jComboBoxid_cuenta_contable_ventaFK_IdCuentaContableVentaBodegaProducto.getSelectedItem()).getId();}
		if(this.jComboBoxid_productoFK_IdProductoBodegaProducto.getSelectedItem()!=null){this.id_productoFK_IdProducto=((Producto)this.jComboBoxid_productoFK_IdProductoBodegaProducto.getSelectedItem()).getId();}
		if(this.jComboBoxid_unidadFK_IdUnidadBodegaProducto.getSelectedItem()!=null){this.id_unidadFK_IdUnidad=((Unidad)this.jComboBoxid_unidadFK_IdUnidadBodegaProducto.getSelectedItem()).getId();}
		
	}
	
	
	
	
	public void inicializarActualizarBindingBusquedasBodegaProducto(Boolean esInicializar) throws Exception {				
		if(BodegaProductoJInternalFrame.ISBINDING_MANUAL) {
			
			this.inicializarActualizarBindingBusquedasManualBodegaProducto();			
			
		} else {
		}
	}		
		
	public void inicializarActualizarBindingTablaBodegaProducto() throws Exception {
		this.inicializarActualizarBindingTablaBodegaProducto(false);
	}
	
	
	public void inicializarActualizarBindingTablaOrderByBodegaProducto() {
		//TABLA OrderBy	
		TableColumn tableColumn=new TableColumn();
		Integer iWidthTableDefinicionOrderBy=0;			
			
		this.jInternalFrameOrderByBodegaProducto.getjTableDatosOrderBy().setModel(new TablaGeneralOrderByModel(this.arrOrderBy));
					
		//DEFINIR RENDERERS OrderBy
		tableColumn=this.jInternalFrameOrderByBodegaProducto.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByBodegaProducto.getjTableDatosOrderBy(),OrderBy.ISSELECTED));			
		//tableColumn.addPropertyChangeListener(new BodegaProductoPropertyChangeListener());
					
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		iWidthTableDefinicionOrderBy+=50;
					
		tableColumn=this.jInternalFrameOrderByBodegaProducto.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByBodegaProducto.getjTableDatosOrderBy(),OrderBy.NOMBRE));
		//tableColumn.addPropertyChangeListener(new BodegaProductoPropertyChangeListener());
					
		tableColumn.setPreferredWidth(150); 	 
		tableColumn.setWidth(150); 	 
		tableColumn.setMinWidth(150);
		tableColumn.setMaxWidth(150);
				
		iWidthTableDefinicionOrderBy+=150;
					
		//tableColumn=this.jTableDatosBodegaProductoOrderBy.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosBodegaProductoOrderBy,OrderBy.NOMBREDB));			
		////tableColumn.addPropertyChangeListener(new BodegaProductoPropertyChangeListener());
								
		tableColumn=this.jInternalFrameOrderByBodegaProducto.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByBodegaProducto.getjTableDatosOrderBy(),OrderBy.ESDESC));
		//tableColumn.addPropertyChangeListener(new BodegaProductoPropertyChangeListener());
												
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		((AbstractTableModel) this.jInternalFrameOrderByBodegaProducto.getjTableDatosOrderBy().getModel()).fireTableDataChanged();
				
		iWidthTableDefinicionOrderBy+=50;
	}
	
	
	
	public void inicializarActualizarBindingTablaBodegaProducto(Boolean esInicializar) throws Exception {
		Boolean isNoExiste=false;
		Integer iCountNumeroColumnasNormal=0;
		Integer iCountNumeroColumnasFk=0;
		
		this.iWidthTableDefinicion=0;
		
		int iSizeTabla=0;
		
		iSizeTabla=this.getSizeTablaDatos();
		
	if(esInicializar || ConstantesSwing.FORZAR_INICIALIZAR_TABLA) {//esInicializar
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			isNoExiste=bodegaproductoLogic.getBodegaProductos().size()==0;
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			isNoExiste=bodegaproductos.size()==0;
		}
		//ARCHITECTURE
			
		if(isNoExiste) {
			if(this.iNumeroPaginacion-this.iNumeroPaginacion>0) {
				this.iNumeroPaginacion-=this.iNumeroPaginacion;
			}
		}
		
		TableColumn tableColumn=new TableColumn();
		
		if(BodegaProductoJInternalFrame.ISBINDING_MANUAL_TABLA) {
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.jTableDatosBodegaProducto.setModel(new BodegaProductoModel(this.bodegaproductoLogic.getBodegaProductos(),this));
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.jTableDatosBodegaProducto.setModel(new BodegaProductoModel(this.bodegaproductos,this));
			}
			//ARCHITECTURE
			
							
			
			
			if(this.jInternalFrameOrderByBodegaProducto!=null && this.jInternalFrameOrderByBodegaProducto.getjTableDatosOrderBy()!=null) {
				this.inicializarActualizarBindingTablaOrderByBodegaProducto();
			}
			
								
			//DEFINIR RENDERERS
			tableColumn=this.jTableDatosBodegaProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosBodegaProducto,Constantes2.S_SELECCIONAR));
			//tableColumn.addPropertyChangeListener(new BodegaProductoPropertyChangeListener());
			tableColumn.setCellRenderer(new BooleanRenderer(true,"Seleccionar "+BodegaProductoConstantesFunciones.SCLASSWEBTITULO,bodegaproductoConstantesFunciones.resaltarSeleccionarBodegaProducto,iSizeTabla,true,false,"","",this));
			tableColumn.setCellEditor(new BooleanEditorRenderer(true,"Seleccionar "+BodegaProductoConstantesFunciones.SCLASSWEBTITULO,bodegaproductoConstantesFunciones.resaltarSeleccionarBodegaProducto,false,"","",this));			
			
			tableColumn.setPreferredWidth(50); 	 
			tableColumn.setWidth(50); 	 
			tableColumn.setMinWidth(50); 
			tableColumn.setMaxWidth(50); 
			
			this.iWidthTableDefinicion+=50;
			
			


			tableColumn=this.jTableDatosBodegaProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosBodegaProducto,BodegaProductoConstantesFunciones.LABEL_ID));

		if(this.bodegaproductoConstantesFunciones.mostraridBodegaProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,BodegaProductoConstantesFunciones.LABEL_ID,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.bodegaproductoConstantesFunciones.resaltaridBodegaProducto,this.bodegaproductoConstantesFunciones.activaridBodegaProducto,iSizeTabla,this,true,"idBodegaProducto","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.bodegaproductoConstantesFunciones.resaltaridBodegaProducto,this.bodegaproductoConstantesFunciones.activaridBodegaProducto,this,true,"idBodegaProducto","BASICO",false));

			tableColumn.setPreferredWidth(50);
			tableColumn.setWidth(50);
			tableColumn.setMinWidth(50);
			tableColumn.setMaxWidth(50);

			this.iWidthTableDefinicion+=50;
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosBodegaProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosBodegaProducto,BodegaProductoConstantesFunciones.LABEL_IDEMPRESA));

		if(this.bodegaproductoConstantesFunciones.mostrarid_empresaBodegaProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,BodegaProductoConstantesFunciones.LABEL_IDEMPRESA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new EmpresaTableCell(this.empresasForeignKey,this.bodegaproductoConstantesFunciones.resaltarid_empresaBodegaProducto,this,this.bodegaproductoConstantesFunciones.activarid_empresaBodegaProducto,iSizeTabla));
			tableColumn.setCellEditor(new EmpresaTableCell(this.empresasForeignKey,this.bodegaproductoConstantesFunciones.resaltarid_empresaBodegaProducto,this,this.bodegaproductoConstantesFunciones.activarid_empresaBodegaProducto,false,"id_empresaBodegaProducto","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new BodegaProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosBodegaProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosBodegaProducto,BodegaProductoConstantesFunciones.LABEL_IDSUCURSAL));

		if(this.bodegaproductoConstantesFunciones.mostrarid_sucursalBodegaProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,BodegaProductoConstantesFunciones.LABEL_IDSUCURSAL,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new SucursalTableCell(this.sucursalsForeignKey,this.bodegaproductoConstantesFunciones.resaltarid_sucursalBodegaProducto,this,this.bodegaproductoConstantesFunciones.activarid_sucursalBodegaProducto,iSizeTabla));
			tableColumn.setCellEditor(new SucursalTableCell(this.sucursalsForeignKey,this.bodegaproductoConstantesFunciones.resaltarid_sucursalBodegaProducto,this,this.bodegaproductoConstantesFunciones.activarid_sucursalBodegaProducto,false,"id_sucursalBodegaProducto","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new BodegaProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosBodegaProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosBodegaProducto,BodegaProductoConstantesFunciones.LABEL_IDBODEGA));

		if(this.bodegaproductoConstantesFunciones.mostrarid_bodegaBodegaProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,BodegaProductoConstantesFunciones.LABEL_IDBODEGA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new BodegaTableCell(this.bodegasForeignKey,this.bodegaproductoConstantesFunciones.resaltarid_bodegaBodegaProducto,this,this.bodegaproductoConstantesFunciones.activarid_bodegaBodegaProducto,iSizeTabla));
			tableColumn.setCellEditor(new BodegaTableCell(this.bodegasForeignKey,this.bodegaproductoConstantesFunciones.resaltarid_bodegaBodegaProducto,this,this.bodegaproductoConstantesFunciones.activarid_bodegaBodegaProducto,true,"id_bodegaBodegaProducto","BASICO-CON_EVENT_CHANGE"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75);
			//tableColumn.addPropertyChangeListener(new BodegaProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosBodegaProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosBodegaProducto,BodegaProductoConstantesFunciones.LABEL_IDPRODUCTO));

		if(this.bodegaproductoConstantesFunciones.mostrarid_productoBodegaProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,BodegaProductoConstantesFunciones.LABEL_IDPRODUCTO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new ProductoTableCell(this.productosForeignKey,this.bodegaproductoConstantesFunciones.resaltarid_productoBodegaProducto,this,this.bodegaproductoConstantesFunciones.activarid_productoBodegaProducto,iSizeTabla));
			tableColumn.setCellEditor(new ProductoTableCell(this.productosForeignKey,this.bodegaproductoConstantesFunciones.resaltarid_productoBodegaProducto,this,this.bodegaproductoConstantesFunciones.activarid_productoBodegaProducto,true,"id_productoBodegaProducto","CON_BUSQUEDA-CON_EVENT_CHANGE"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100);
			//tableColumn.addPropertyChangeListener(new BodegaProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosBodegaProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosBodegaProducto,BodegaProductoConstantesFunciones.LABEL_IDUNIDAD));

		if(this.bodegaproductoConstantesFunciones.mostrarid_unidadBodegaProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,BodegaProductoConstantesFunciones.LABEL_IDUNIDAD,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new UnidadTableCell(this.unidadsForeignKey,this.bodegaproductoConstantesFunciones.resaltarid_unidadBodegaProducto,this,this.bodegaproductoConstantesFunciones.activarid_unidadBodegaProducto,iSizeTabla));
			tableColumn.setCellEditor(new UnidadTableCell(this.unidadsForeignKey,this.bodegaproductoConstantesFunciones.resaltarid_unidadBodegaProducto,this,this.bodegaproductoConstantesFunciones.activarid_unidadBodegaProducto,true,"id_unidadBodegaProducto","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new BodegaProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosBodegaProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosBodegaProducto,BodegaProductoConstantesFunciones.LABEL_IDCENTROCOSTO));

		if(this.bodegaproductoConstantesFunciones.mostrarid_centro_costoBodegaProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,BodegaProductoConstantesFunciones.LABEL_IDCENTROCOSTO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new CentroCostoTableCell(this.centrocostosForeignKey,this.bodegaproductoConstantesFunciones.resaltarid_centro_costoBodegaProducto,this,this.bodegaproductoConstantesFunciones.activarid_centro_costoBodegaProducto,iSizeTabla));
			tableColumn.setCellEditor(new CentroCostoTableCell(this.centrocostosForeignKey,this.bodegaproductoConstantesFunciones.resaltarid_centro_costoBodegaProducto,this,this.bodegaproductoConstantesFunciones.activarid_centro_costoBodegaProducto,true,"id_centro_costoBodegaProducto","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new BodegaProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosBodegaProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosBodegaProducto,BodegaProductoConstantesFunciones.LABEL_IDESTADOBODEGAPRODUCTO));

		if(this.bodegaproductoConstantesFunciones.mostrarid_estado_bodega_productoBodegaProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,BodegaProductoConstantesFunciones.LABEL_IDESTADOBODEGAPRODUCTO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new EstadoBodegaProductoTableCell(this.estadobodegaproductosForeignKey,this.bodegaproductoConstantesFunciones.resaltarid_estado_bodega_productoBodegaProducto,this,this.bodegaproductoConstantesFunciones.activarid_estado_bodega_productoBodegaProducto,iSizeTabla));
			tableColumn.setCellEditor(new EstadoBodegaProductoTableCell(this.estadobodegaproductosForeignKey,this.bodegaproductoConstantesFunciones.resaltarid_estado_bodega_productoBodegaProducto,this,this.bodegaproductoConstantesFunciones.activarid_estado_bodega_productoBodegaProducto,true,"id_estado_bodega_productoBodegaProducto","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new BodegaProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosBodegaProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosBodegaProducto,BodegaProductoConstantesFunciones.LABEL_DESCRIPCION));

		if(this.bodegaproductoConstantesFunciones.mostrardescripcionBodegaProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,BodegaProductoConstantesFunciones.LABEL_DESCRIPCION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.bodegaproductoConstantesFunciones.resaltardescripcionBodegaProducto,this.bodegaproductoConstantesFunciones.activardescripcionBodegaProducto,iSizeTabla,this,true,"descripcionBodegaProducto","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.bodegaproductoConstantesFunciones.resaltardescripcionBodegaProducto,this.bodegaproductoConstantesFunciones.activardescripcionBodegaProducto,this,true,"descripcionBodegaProducto","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new BodegaProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosBodegaProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosBodegaProducto,BodegaProductoConstantesFunciones.LABEL_CANTIDADDISPONIBLE));

		if(this.bodegaproductoConstantesFunciones.mostrarcantidad_disponibleBodegaProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,BodegaProductoConstantesFunciones.LABEL_CANTIDADDISPONIBLE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.bodegaproductoConstantesFunciones.resaltarcantidad_disponibleBodegaProducto,this.bodegaproductoConstantesFunciones.activarcantidad_disponibleBodegaProducto,iSizeTabla,this,true,"cantidad_disponibleBodegaProducto","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.bodegaproductoConstantesFunciones.resaltarcantidad_disponibleBodegaProducto,this.bodegaproductoConstantesFunciones.activarcantidad_disponibleBodegaProducto,this,true,"cantidad_disponibleBodegaProducto","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new BodegaProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosBodegaProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosBodegaProducto,BodegaProductoConstantesFunciones.LABEL_STOCKMAXIMO));

		if(this.bodegaproductoConstantesFunciones.mostrarstock_maximoBodegaProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,BodegaProductoConstantesFunciones.LABEL_STOCKMAXIMO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.bodegaproductoConstantesFunciones.resaltarstock_maximoBodegaProducto,this.bodegaproductoConstantesFunciones.activarstock_maximoBodegaProducto,iSizeTabla,this,true,"stock_maximoBodegaProducto","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.bodegaproductoConstantesFunciones.resaltarstock_maximoBodegaProducto,this.bodegaproductoConstantesFunciones.activarstock_maximoBodegaProducto,this,true,"stock_maximoBodegaProducto","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new BodegaProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosBodegaProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosBodegaProducto,BodegaProductoConstantesFunciones.LABEL_STOCKMINIMO));

		if(this.bodegaproductoConstantesFunciones.mostrarstock_minimoBodegaProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,BodegaProductoConstantesFunciones.LABEL_STOCKMINIMO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.bodegaproductoConstantesFunciones.resaltarstock_minimoBodegaProducto,this.bodegaproductoConstantesFunciones.activarstock_minimoBodegaProducto,iSizeTabla,this,true,"stock_minimoBodegaProducto","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.bodegaproductoConstantesFunciones.resaltarstock_minimoBodegaProducto,this.bodegaproductoConstantesFunciones.activarstock_minimoBodegaProducto,this,true,"stock_minimoBodegaProducto","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new BodegaProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosBodegaProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosBodegaProducto,BodegaProductoConstantesFunciones.LABEL_IVA));

		if(this.bodegaproductoConstantesFunciones.mostrarivaBodegaProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,BodegaProductoConstantesFunciones.LABEL_IVA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.bodegaproductoConstantesFunciones.resaltarivaBodegaProducto,this.bodegaproductoConstantesFunciones.activarivaBodegaProducto,iSizeTabla,this,true,"ivaBodegaProducto","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.bodegaproductoConstantesFunciones.resaltarivaBodegaProducto,this.bodegaproductoConstantesFunciones.activarivaBodegaProducto,this,true,"ivaBodegaProducto","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new BodegaProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosBodegaProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosBodegaProducto,BodegaProductoConstantesFunciones.LABEL_IVAVALOR));

		if(this.bodegaproductoConstantesFunciones.mostrariva_valorBodegaProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,BodegaProductoConstantesFunciones.LABEL_IVAVALOR,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.bodegaproductoConstantesFunciones.resaltariva_valorBodegaProducto,this.bodegaproductoConstantesFunciones.activariva_valorBodegaProducto,iSizeTabla,this,true,"iva_valorBodegaProducto","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.bodegaproductoConstantesFunciones.resaltariva_valorBodegaProducto,this.bodegaproductoConstantesFunciones.activariva_valorBodegaProducto,this,true,"iva_valorBodegaProducto","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new BodegaProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosBodegaProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosBodegaProducto,BodegaProductoConstantesFunciones.LABEL_DESCUENTO));

		if(this.bodegaproductoConstantesFunciones.mostrardescuentoBodegaProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,BodegaProductoConstantesFunciones.LABEL_DESCUENTO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.bodegaproductoConstantesFunciones.resaltardescuentoBodegaProducto,this.bodegaproductoConstantesFunciones.activardescuentoBodegaProducto,iSizeTabla,this,true,"descuentoBodegaProducto","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.bodegaproductoConstantesFunciones.resaltardescuentoBodegaProducto,this.bodegaproductoConstantesFunciones.activardescuentoBodegaProducto,this,true,"descuentoBodegaProducto","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new BodegaProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosBodegaProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosBodegaProducto,BodegaProductoConstantesFunciones.LABEL_DESCUENTOVALOR));

		if(this.bodegaproductoConstantesFunciones.mostrardescuento_valorBodegaProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,BodegaProductoConstantesFunciones.LABEL_DESCUENTOVALOR,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.bodegaproductoConstantesFunciones.resaltardescuento_valorBodegaProducto,this.bodegaproductoConstantesFunciones.activardescuento_valorBodegaProducto,iSizeTabla,this,true,"descuento_valorBodegaProducto","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.bodegaproductoConstantesFunciones.resaltardescuento_valorBodegaProducto,this.bodegaproductoConstantesFunciones.activardescuento_valorBodegaProducto,this,true,"descuento_valorBodegaProducto","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new BodegaProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosBodegaProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosBodegaProducto,BodegaProductoConstantesFunciones.LABEL_ICE));

		if(this.bodegaproductoConstantesFunciones.mostrariceBodegaProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,BodegaProductoConstantesFunciones.LABEL_ICE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.bodegaproductoConstantesFunciones.resaltariceBodegaProducto,this.bodegaproductoConstantesFunciones.activariceBodegaProducto,iSizeTabla,this,true,"iceBodegaProducto","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.bodegaproductoConstantesFunciones.resaltariceBodegaProducto,this.bodegaproductoConstantesFunciones.activariceBodegaProducto,this,true,"iceBodegaProducto","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new BodegaProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosBodegaProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosBodegaProducto,BodegaProductoConstantesFunciones.LABEL_ICEVALOR));

		if(this.bodegaproductoConstantesFunciones.mostrarice_valorBodegaProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,BodegaProductoConstantesFunciones.LABEL_ICEVALOR,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.bodegaproductoConstantesFunciones.resaltarice_valorBodegaProducto,this.bodegaproductoConstantesFunciones.activarice_valorBodegaProducto,iSizeTabla,this,true,"ice_valorBodegaProducto","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.bodegaproductoConstantesFunciones.resaltarice_valorBodegaProducto,this.bodegaproductoConstantesFunciones.activarice_valorBodegaProducto,this,true,"ice_valorBodegaProducto","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new BodegaProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosBodegaProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosBodegaProducto,BodegaProductoConstantesFunciones.LABEL_COSTOPROMEDIO));

		if(this.bodegaproductoConstantesFunciones.mostrarcosto_promedioBodegaProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,BodegaProductoConstantesFunciones.LABEL_COSTOPROMEDIO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.bodegaproductoConstantesFunciones.resaltarcosto_promedioBodegaProducto,this.bodegaproductoConstantesFunciones.activarcosto_promedioBodegaProducto,iSizeTabla,this,true,"costo_promedioBodegaProducto","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.bodegaproductoConstantesFunciones.resaltarcosto_promedioBodegaProducto,this.bodegaproductoConstantesFunciones.activarcosto_promedioBodegaProducto,this,true,"costo_promedioBodegaProducto","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new BodegaProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosBodegaProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosBodegaProducto,BodegaProductoConstantesFunciones.LABEL_PORCENTAJECOMISION));

		if(this.bodegaproductoConstantesFunciones.mostrarporcentaje_comisionBodegaProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,BodegaProductoConstantesFunciones.LABEL_PORCENTAJECOMISION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.bodegaproductoConstantesFunciones.resaltarporcentaje_comisionBodegaProducto,this.bodegaproductoConstantesFunciones.activarporcentaje_comisionBodegaProducto,iSizeTabla,this,true,"porcentaje_comisionBodegaProducto","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.bodegaproductoConstantesFunciones.resaltarporcentaje_comisionBodegaProducto,this.bodegaproductoConstantesFunciones.activarporcentaje_comisionBodegaProducto,this,true,"porcentaje_comisionBodegaProducto","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new BodegaProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosBodegaProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosBodegaProducto,BodegaProductoConstantesFunciones.LABEL_PRECIO));

		if(this.bodegaproductoConstantesFunciones.mostrarprecioBodegaProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,BodegaProductoConstantesFunciones.LABEL_PRECIO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.bodegaproductoConstantesFunciones.resaltarprecioBodegaProducto,this.bodegaproductoConstantesFunciones.activarprecioBodegaProducto,iSizeTabla,this,true,"precioBodegaProducto","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.bodegaproductoConstantesFunciones.resaltarprecioBodegaProducto,this.bodegaproductoConstantesFunciones.activarprecioBodegaProducto,this,true,"precioBodegaProducto","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new BodegaProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosBodegaProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosBodegaProducto,BodegaProductoConstantesFunciones.LABEL_ULTIMOCOSTO));

		if(this.bodegaproductoConstantesFunciones.mostrarultimo_costoBodegaProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,BodegaProductoConstantesFunciones.LABEL_ULTIMOCOSTO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.bodegaproductoConstantesFunciones.resaltarultimo_costoBodegaProducto,this.bodegaproductoConstantesFunciones.activarultimo_costoBodegaProducto,iSizeTabla,this,true,"ultimo_costoBodegaProducto","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.bodegaproductoConstantesFunciones.resaltarultimo_costoBodegaProducto,this.bodegaproductoConstantesFunciones.activarultimo_costoBodegaProducto,this,true,"ultimo_costoBodegaProducto","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new BodegaProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosBodegaProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosBodegaProducto,BodegaProductoConstantesFunciones.LABEL_COSTO));

		if(this.bodegaproductoConstantesFunciones.mostrarcostoBodegaProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,BodegaProductoConstantesFunciones.LABEL_COSTO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.bodegaproductoConstantesFunciones.resaltarcostoBodegaProducto,this.bodegaproductoConstantesFunciones.activarcostoBodegaProducto,iSizeTabla,this,true,"costoBodegaProducto","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.bodegaproductoConstantesFunciones.resaltarcostoBodegaProducto,this.bodegaproductoConstantesFunciones.activarcostoBodegaProducto,this,true,"costoBodegaProducto","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new BodegaProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosBodegaProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosBodegaProducto,BodegaProductoConstantesFunciones.LABEL_ARANCELPORCENTAJE));

		if(this.bodegaproductoConstantesFunciones.mostrararancel_porcentajeBodegaProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,BodegaProductoConstantesFunciones.LABEL_ARANCELPORCENTAJE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.bodegaproductoConstantesFunciones.resaltararancel_porcentajeBodegaProducto,this.bodegaproductoConstantesFunciones.activararancel_porcentajeBodegaProducto,iSizeTabla,this,true,"arancel_porcentajeBodegaProducto","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.bodegaproductoConstantesFunciones.resaltararancel_porcentajeBodegaProducto,this.bodegaproductoConstantesFunciones.activararancel_porcentajeBodegaProducto,this,true,"arancel_porcentajeBodegaProducto","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new BodegaProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosBodegaProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosBodegaProducto,BodegaProductoConstantesFunciones.LABEL_ICEPORCENTAJE));

		if(this.bodegaproductoConstantesFunciones.mostrarice_porcentajeBodegaProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,BodegaProductoConstantesFunciones.LABEL_ICEPORCENTAJE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.bodegaproductoConstantesFunciones.resaltarice_porcentajeBodegaProducto,this.bodegaproductoConstantesFunciones.activarice_porcentajeBodegaProducto,iSizeTabla,this,true,"ice_porcentajeBodegaProducto","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.bodegaproductoConstantesFunciones.resaltarice_porcentajeBodegaProducto,this.bodegaproductoConstantesFunciones.activarice_porcentajeBodegaProducto,this,true,"ice_porcentajeBodegaProducto","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new BodegaProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosBodegaProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosBodegaProducto,BodegaProductoConstantesFunciones.LABEL_PESO));

		if(this.bodegaproductoConstantesFunciones.mostrarpesoBodegaProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,BodegaProductoConstantesFunciones.LABEL_PESO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.bodegaproductoConstantesFunciones.resaltarpesoBodegaProducto,this.bodegaproductoConstantesFunciones.activarpesoBodegaProducto,iSizeTabla,this,true,"pesoBodegaProducto","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.bodegaproductoConstantesFunciones.resaltarpesoBodegaProducto,this.bodegaproductoConstantesFunciones.activarpesoBodegaProducto,this,true,"pesoBodegaProducto","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new BodegaProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosBodegaProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosBodegaProducto,BodegaProductoConstantesFunciones.LABEL_CONIVA));

		if(this.bodegaproductoConstantesFunciones.mostrarcon_ivaBodegaProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,BodegaProductoConstantesFunciones.LABEL_CONIVA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.bodegaproductoConstantesFunciones.resaltarcon_ivaBodegaProducto,this.bodegaproductoConstantesFunciones.activarcon_ivaBodegaProducto,iSizeTabla));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.bodegaproductoConstantesFunciones.resaltarcon_ivaBodegaProducto,this.bodegaproductoConstantesFunciones.activarcon_ivaBodegaProducto,this,true,"con_ivaBodegaProducto","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new BodegaProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosBodegaProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosBodegaProducto,BodegaProductoConstantesFunciones.LABEL_CONIMPUESTO));

		if(this.bodegaproductoConstantesFunciones.mostrarcon_impuestoBodegaProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,BodegaProductoConstantesFunciones.LABEL_CONIMPUESTO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.bodegaproductoConstantesFunciones.resaltarcon_impuestoBodegaProducto,this.bodegaproductoConstantesFunciones.activarcon_impuestoBodegaProducto,iSizeTabla));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.bodegaproductoConstantesFunciones.resaltarcon_impuestoBodegaProducto,this.bodegaproductoConstantesFunciones.activarcon_impuestoBodegaProducto,this,true,"con_impuestoBodegaProducto","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new BodegaProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosBodegaProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosBodegaProducto,BodegaProductoConstantesFunciones.LABEL_CONICE));

		if(this.bodegaproductoConstantesFunciones.mostrarcon_iceBodegaProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,BodegaProductoConstantesFunciones.LABEL_CONICE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.bodegaproductoConstantesFunciones.resaltarcon_iceBodegaProducto,this.bodegaproductoConstantesFunciones.activarcon_iceBodegaProducto,iSizeTabla));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.bodegaproductoConstantesFunciones.resaltarcon_iceBodegaProducto,this.bodegaproductoConstantesFunciones.activarcon_iceBodegaProducto,this,true,"con_iceBodegaProducto","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new BodegaProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosBodegaProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosBodegaProducto,BodegaProductoConstantesFunciones.LABEL_ESTAACTIVO));

		if(this.bodegaproductoConstantesFunciones.mostraresta_activoBodegaProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,BodegaProductoConstantesFunciones.LABEL_ESTAACTIVO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.bodegaproductoConstantesFunciones.resaltaresta_activoBodegaProducto,this.bodegaproductoConstantesFunciones.activaresta_activoBodegaProducto,iSizeTabla));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.bodegaproductoConstantesFunciones.resaltaresta_activoBodegaProducto,this.bodegaproductoConstantesFunciones.activaresta_activoBodegaProducto,this,true,"esta_activoBodegaProducto","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new BodegaProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosBodegaProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosBodegaProducto,BodegaProductoConstantesFunciones.LABEL_CONBALANZA));

		if(this.bodegaproductoConstantesFunciones.mostrarcon_balanzaBodegaProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,BodegaProductoConstantesFunciones.LABEL_CONBALANZA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.bodegaproductoConstantesFunciones.resaltarcon_balanzaBodegaProducto,this.bodegaproductoConstantesFunciones.activarcon_balanzaBodegaProducto,iSizeTabla));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.bodegaproductoConstantesFunciones.resaltarcon_balanzaBodegaProducto,this.bodegaproductoConstantesFunciones.activarcon_balanzaBodegaProducto,this,true,"con_balanzaBodegaProducto","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new BodegaProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosBodegaProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosBodegaProducto,BodegaProductoConstantesFunciones.LABEL_CANTIDADPEDIDA));

		if(this.bodegaproductoConstantesFunciones.mostrarcantidad_pedidaBodegaProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,BodegaProductoConstantesFunciones.LABEL_CANTIDADPEDIDA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.bodegaproductoConstantesFunciones.resaltarcantidad_pedidaBodegaProducto,this.bodegaproductoConstantesFunciones.activarcantidad_pedidaBodegaProducto,iSizeTabla,this,true,"cantidad_pedidaBodegaProducto","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.bodegaproductoConstantesFunciones.resaltarcantidad_pedidaBodegaProducto,this.bodegaproductoConstantesFunciones.activarcantidad_pedidaBodegaProducto,this,true,"cantidad_pedidaBodegaProducto","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new BodegaProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosBodegaProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosBodegaProducto,BodegaProductoConstantesFunciones.LABEL_CANTIDADFISICA));

		if(this.bodegaproductoConstantesFunciones.mostrarcantidad_fisicaBodegaProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,BodegaProductoConstantesFunciones.LABEL_CANTIDADFISICA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.bodegaproductoConstantesFunciones.resaltarcantidad_fisicaBodegaProducto,this.bodegaproductoConstantesFunciones.activarcantidad_fisicaBodegaProducto,iSizeTabla,this,true,"cantidad_fisicaBodegaProducto","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.bodegaproductoConstantesFunciones.resaltarcantidad_fisicaBodegaProducto,this.bodegaproductoConstantesFunciones.activarcantidad_fisicaBodegaProducto,this,true,"cantidad_fisicaBodegaProducto","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new BodegaProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosBodegaProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosBodegaProducto,BodegaProductoConstantesFunciones.LABEL_CANTIDADREQUERIDO));

		if(this.bodegaproductoConstantesFunciones.mostrarcantidad_requeridoBodegaProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,BodegaProductoConstantesFunciones.LABEL_CANTIDADREQUERIDO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.bodegaproductoConstantesFunciones.resaltarcantidad_requeridoBodegaProducto,this.bodegaproductoConstantesFunciones.activarcantidad_requeridoBodegaProducto,iSizeTabla,this,true,"cantidad_requeridoBodegaProducto","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.bodegaproductoConstantesFunciones.resaltarcantidad_requeridoBodegaProducto,this.bodegaproductoConstantesFunciones.activarcantidad_requeridoBodegaProducto,this,true,"cantidad_requeridoBodegaProducto","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new BodegaProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosBodegaProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosBodegaProducto,BodegaProductoConstantesFunciones.LABEL_PRECIOCOSTO));

		if(this.bodegaproductoConstantesFunciones.mostrarprecio_costoBodegaProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,BodegaProductoConstantesFunciones.LABEL_PRECIOCOSTO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.bodegaproductoConstantesFunciones.resaltarprecio_costoBodegaProducto,this.bodegaproductoConstantesFunciones.activarprecio_costoBodegaProducto,iSizeTabla,this,true,"precio_costoBodegaProducto","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.bodegaproductoConstantesFunciones.resaltarprecio_costoBodegaProducto,this.bodegaproductoConstantesFunciones.activarprecio_costoBodegaProducto,this,true,"precio_costoBodegaProducto","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new BodegaProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosBodegaProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosBodegaProducto,BodegaProductoConstantesFunciones.LABEL_PRECIOPROMEDIO));

		if(this.bodegaproductoConstantesFunciones.mostrarprecio_promedioBodegaProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,BodegaProductoConstantesFunciones.LABEL_PRECIOPROMEDIO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.bodegaproductoConstantesFunciones.resaltarprecio_promedioBodegaProducto,this.bodegaproductoConstantesFunciones.activarprecio_promedioBodegaProducto,iSizeTabla,this,true,"precio_promedioBodegaProducto","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.bodegaproductoConstantesFunciones.resaltarprecio_promedioBodegaProducto,this.bodegaproductoConstantesFunciones.activarprecio_promedioBodegaProducto,this,true,"precio_promedioBodegaProducto","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new BodegaProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosBodegaProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosBodegaProducto,BodegaProductoConstantesFunciones.LABEL_TOTALINGRESOS));

		if(this.bodegaproductoConstantesFunciones.mostrartotal_ingresosBodegaProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,BodegaProductoConstantesFunciones.LABEL_TOTALINGRESOS,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.bodegaproductoConstantesFunciones.resaltartotal_ingresosBodegaProducto,this.bodegaproductoConstantesFunciones.activartotal_ingresosBodegaProducto,iSizeTabla,this,true,"total_ingresosBodegaProducto","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.bodegaproductoConstantesFunciones.resaltartotal_ingresosBodegaProducto,this.bodegaproductoConstantesFunciones.activartotal_ingresosBodegaProducto,this,true,"total_ingresosBodegaProducto","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new BodegaProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosBodegaProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosBodegaProducto,BodegaProductoConstantesFunciones.LABEL_TOTALEGRESOS));

		if(this.bodegaproductoConstantesFunciones.mostrartotal_egresosBodegaProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,BodegaProductoConstantesFunciones.LABEL_TOTALEGRESOS,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.bodegaproductoConstantesFunciones.resaltartotal_egresosBodegaProducto,this.bodegaproductoConstantesFunciones.activartotal_egresosBodegaProducto,iSizeTabla,this,true,"total_egresosBodegaProducto","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.bodegaproductoConstantesFunciones.resaltartotal_egresosBodegaProducto,this.bodegaproductoConstantesFunciones.activartotal_egresosBodegaProducto,this,true,"total_egresosBodegaProducto","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new BodegaProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosBodegaProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosBodegaProducto,BodegaProductoConstantesFunciones.LABEL_TOTALPROVISION));

		if(this.bodegaproductoConstantesFunciones.mostrartotal_provisionBodegaProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,BodegaProductoConstantesFunciones.LABEL_TOTALPROVISION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.bodegaproductoConstantesFunciones.resaltartotal_provisionBodegaProducto,this.bodegaproductoConstantesFunciones.activartotal_provisionBodegaProducto,iSizeTabla,this,true,"total_provisionBodegaProducto","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.bodegaproductoConstantesFunciones.resaltartotal_provisionBodegaProducto,this.bodegaproductoConstantesFunciones.activartotal_provisionBodegaProducto,this,true,"total_provisionBodegaProducto","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new BodegaProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosBodegaProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosBodegaProducto,BodegaProductoConstantesFunciones.LABEL_TOTALPROCESO));

		if(this.bodegaproductoConstantesFunciones.mostrartotal_procesoBodegaProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,BodegaProductoConstantesFunciones.LABEL_TOTALPROCESO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.bodegaproductoConstantesFunciones.resaltartotal_procesoBodegaProducto,this.bodegaproductoConstantesFunciones.activartotal_procesoBodegaProducto,iSizeTabla,this,true,"total_procesoBodegaProducto","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.bodegaproductoConstantesFunciones.resaltartotal_procesoBodegaProducto,this.bodegaproductoConstantesFunciones.activartotal_procesoBodegaProducto,this,true,"total_procesoBodegaProducto","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new BodegaProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosBodegaProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosBodegaProducto,BodegaProductoConstantesFunciones.LABEL_COSTOCALCULADO));

		if(this.bodegaproductoConstantesFunciones.mostrarcosto_calculadoBodegaProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,BodegaProductoConstantesFunciones.LABEL_COSTOCALCULADO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.bodegaproductoConstantesFunciones.resaltarcosto_calculadoBodegaProducto,this.bodegaproductoConstantesFunciones.activarcosto_calculadoBodegaProducto,iSizeTabla,this,true,"costo_calculadoBodegaProducto","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.bodegaproductoConstantesFunciones.resaltarcosto_calculadoBodegaProducto,this.bodegaproductoConstantesFunciones.activarcosto_calculadoBodegaProducto,this,true,"costo_calculadoBodegaProducto","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new BodegaProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosBodegaProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosBodegaProducto,BodegaProductoConstantesFunciones.LABEL_DIASPRODUCCION));

		if(this.bodegaproductoConstantesFunciones.mostrardias_produccionBodegaProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,BodegaProductoConstantesFunciones.LABEL_DIASPRODUCCION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.bodegaproductoConstantesFunciones.resaltardias_produccionBodegaProducto,this.bodegaproductoConstantesFunciones.activardias_produccionBodegaProducto,iSizeTabla,this,true,"dias_produccionBodegaProducto","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.bodegaproductoConstantesFunciones.resaltardias_produccionBodegaProducto,this.bodegaproductoConstantesFunciones.activardias_produccionBodegaProducto,this,true,"dias_produccionBodegaProducto","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new BodegaProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosBodegaProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosBodegaProducto,BodegaProductoConstantesFunciones.LABEL_PRECIOREPOSICION));

		if(this.bodegaproductoConstantesFunciones.mostrarprecio_reposicionBodegaProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,BodegaProductoConstantesFunciones.LABEL_PRECIOREPOSICION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.bodegaproductoConstantesFunciones.resaltarprecio_reposicionBodegaProducto,this.bodegaproductoConstantesFunciones.activarprecio_reposicionBodegaProducto,iSizeTabla,this,true,"precio_reposicionBodegaProducto","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.bodegaproductoConstantesFunciones.resaltarprecio_reposicionBodegaProducto,this.bodegaproductoConstantesFunciones.activarprecio_reposicionBodegaProducto,this,true,"precio_reposicionBodegaProducto","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new BodegaProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosBodegaProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosBodegaProducto,BodegaProductoConstantesFunciones.LABEL_FECHAULTIMOPEDIDO));

		if(this.bodegaproductoConstantesFunciones.mostrarfecha_ultimo_pedidoBodegaProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,BodegaProductoConstantesFunciones.LABEL_FECHAULTIMOPEDIDO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new DateRenderer(this.bodegaproductoConstantesFunciones.resaltarfecha_ultimo_pedidoBodegaProducto,this.bodegaproductoConstantesFunciones.activarfecha_ultimo_pedidoBodegaProducto,iSizeTabla,this,true,"fecha_ultimo_pedidoBodegaProducto","BASICO"));
			tableColumn.setCellEditor(new DateEditorRenderer(this.bodegaproductoConstantesFunciones.resaltarfecha_ultimo_pedidoBodegaProducto,this.bodegaproductoConstantesFunciones.activarfecha_ultimo_pedidoBodegaProducto,this,true,"fecha_ultimo_pedidoBodegaProducto","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30);
			//tableColumn.addPropertyChangeListener(new BodegaProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosBodegaProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosBodegaProducto,BodegaProductoConstantesFunciones.LABEL_FECHAINGRESO));

		if(this.bodegaproductoConstantesFunciones.mostrarfecha_ingresoBodegaProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,BodegaProductoConstantesFunciones.LABEL_FECHAINGRESO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new DateRenderer(this.bodegaproductoConstantesFunciones.resaltarfecha_ingresoBodegaProducto,this.bodegaproductoConstantesFunciones.activarfecha_ingresoBodegaProducto,iSizeTabla,this,true,"fecha_ingresoBodegaProducto","BASICO"));
			tableColumn.setCellEditor(new DateEditorRenderer(this.bodegaproductoConstantesFunciones.resaltarfecha_ingresoBodegaProducto,this.bodegaproductoConstantesFunciones.activarfecha_ingresoBodegaProducto,this,true,"fecha_ingresoBodegaProducto","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30);
			//tableColumn.addPropertyChangeListener(new BodegaProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosBodegaProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosBodegaProducto,BodegaProductoConstantesFunciones.LABEL_FECHAEGRESO));

		if(this.bodegaproductoConstantesFunciones.mostrarfecha_egresoBodegaProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,BodegaProductoConstantesFunciones.LABEL_FECHAEGRESO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new DateRenderer(this.bodegaproductoConstantesFunciones.resaltarfecha_egresoBodegaProducto,this.bodegaproductoConstantesFunciones.activarfecha_egresoBodegaProducto,iSizeTabla,this,true,"fecha_egresoBodegaProducto","BASICO"));
			tableColumn.setCellEditor(new DateEditorRenderer(this.bodegaproductoConstantesFunciones.resaltarfecha_egresoBodegaProducto,this.bodegaproductoConstantesFunciones.activarfecha_egresoBodegaProducto,this,true,"fecha_egresoBodegaProducto","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30);
			//tableColumn.addPropertyChangeListener(new BodegaProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosBodegaProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosBodegaProducto,BodegaProductoConstantesFunciones.LABEL_FECHAULTIMACOMPRA));

		if(this.bodegaproductoConstantesFunciones.mostrarfecha_ultima_compraBodegaProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,BodegaProductoConstantesFunciones.LABEL_FECHAULTIMACOMPRA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new DateRenderer(this.bodegaproductoConstantesFunciones.resaltarfecha_ultima_compraBodegaProducto,this.bodegaproductoConstantesFunciones.activarfecha_ultima_compraBodegaProducto,iSizeTabla,this,true,"fecha_ultima_compraBodegaProducto","BASICO"));
			tableColumn.setCellEditor(new DateEditorRenderer(this.bodegaproductoConstantesFunciones.resaltarfecha_ultima_compraBodegaProducto,this.bodegaproductoConstantesFunciones.activarfecha_ultima_compraBodegaProducto,this,true,"fecha_ultima_compraBodegaProducto","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30);
			//tableColumn.addPropertyChangeListener(new BodegaProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosBodegaProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosBodegaProducto,BodegaProductoConstantesFunciones.LABEL_FECHAULTIMAVENTA));

		if(this.bodegaproductoConstantesFunciones.mostrarfecha_ultima_ventaBodegaProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,BodegaProductoConstantesFunciones.LABEL_FECHAULTIMAVENTA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new DateRenderer(this.bodegaproductoConstantesFunciones.resaltarfecha_ultima_ventaBodegaProducto,this.bodegaproductoConstantesFunciones.activarfecha_ultima_ventaBodegaProducto,iSizeTabla,this,true,"fecha_ultima_ventaBodegaProducto","BASICO"));
			tableColumn.setCellEditor(new DateEditorRenderer(this.bodegaproductoConstantesFunciones.resaltarfecha_ultima_ventaBodegaProducto,this.bodegaproductoConstantesFunciones.activarfecha_ultima_ventaBodegaProducto,this,true,"fecha_ultima_ventaBodegaProducto","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30);
			//tableColumn.addPropertyChangeListener(new BodegaProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosBodegaProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosBodegaProducto,BodegaProductoConstantesFunciones.LABEL_FECHAULTIMADEVOLUCION));

		if(this.bodegaproductoConstantesFunciones.mostrarfecha_ultima_devolucionBodegaProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,BodegaProductoConstantesFunciones.LABEL_FECHAULTIMADEVOLUCION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new DateRenderer(this.bodegaproductoConstantesFunciones.resaltarfecha_ultima_devolucionBodegaProducto,this.bodegaproductoConstantesFunciones.activarfecha_ultima_devolucionBodegaProducto,iSizeTabla,this,true,"fecha_ultima_devolucionBodegaProducto","BASICO"));
			tableColumn.setCellEditor(new DateEditorRenderer(this.bodegaproductoConstantesFunciones.resaltarfecha_ultima_devolucionBodegaProducto,this.bodegaproductoConstantesFunciones.activarfecha_ultima_devolucionBodegaProducto,this,true,"fecha_ultima_devolucionBodegaProducto","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30);
			//tableColumn.addPropertyChangeListener(new BodegaProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosBodegaProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosBodegaProducto,BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEINVENTARIO));

		if(this.bodegaproductoConstantesFunciones.mostrarid_cuenta_contable_inventarioBodegaProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEINVENTARIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new CuentaContableTableCell(this.cuentacontableinventariosForeignKey,this.bodegaproductoConstantesFunciones.resaltarid_cuenta_contable_inventarioBodegaProducto,this,this.bodegaproductoConstantesFunciones.activarid_cuenta_contable_inventarioBodegaProducto,iSizeTabla));
			tableColumn.setCellEditor(new CuentaContableTableCell(this.cuentacontableinventariosForeignKey,this.bodegaproductoConstantesFunciones.resaltarid_cuenta_contable_inventarioBodegaProducto,this,this.bodegaproductoConstantesFunciones.activarid_cuenta_contable_inventarioBodegaProducto,true,"id_cuenta_contable_inventarioBodegaProducto","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70);
			//tableColumn.addPropertyChangeListener(new BodegaProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosBodegaProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosBodegaProducto,BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLECOSTOVENTA));

		if(this.bodegaproductoConstantesFunciones.mostrarid_cuenta_contable_costo_ventaBodegaProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLECOSTOVENTA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new CuentaContableTableCell(this.cuentacontablecostoventasForeignKey,this.bodegaproductoConstantesFunciones.resaltarid_cuenta_contable_costo_ventaBodegaProducto,this,this.bodegaproductoConstantesFunciones.activarid_cuenta_contable_costo_ventaBodegaProducto,iSizeTabla));
			tableColumn.setCellEditor(new CuentaContableTableCell(this.cuentacontablecostoventasForeignKey,this.bodegaproductoConstantesFunciones.resaltarid_cuenta_contable_costo_ventaBodegaProducto,this,this.bodegaproductoConstantesFunciones.activarid_cuenta_contable_costo_ventaBodegaProducto,true,"id_cuenta_contable_costo_ventaBodegaProducto","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70);
			//tableColumn.addPropertyChangeListener(new BodegaProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosBodegaProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosBodegaProducto,BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEVENTA));

		if(this.bodegaproductoConstantesFunciones.mostrarid_cuenta_contable_ventaBodegaProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEVENTA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new CuentaContableTableCell(this.cuentacontableventasForeignKey,this.bodegaproductoConstantesFunciones.resaltarid_cuenta_contable_ventaBodegaProducto,this,this.bodegaproductoConstantesFunciones.activarid_cuenta_contable_ventaBodegaProducto,iSizeTabla));
			tableColumn.setCellEditor(new CuentaContableTableCell(this.cuentacontableventasForeignKey,this.bodegaproductoConstantesFunciones.resaltarid_cuenta_contable_ventaBodegaProducto,this,this.bodegaproductoConstantesFunciones.activarid_cuenta_contable_ventaBodegaProducto,true,"id_cuenta_contable_ventaBodegaProducto","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70);
			//tableColumn.addPropertyChangeListener(new BodegaProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosBodegaProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosBodegaProducto,BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEDESCUENTO));

		if(this.bodegaproductoConstantesFunciones.mostrarid_cuenta_contable_descuentoBodegaProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEDESCUENTO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new CuentaContableTableCell(this.cuentacontabledescuentosForeignKey,this.bodegaproductoConstantesFunciones.resaltarid_cuenta_contable_descuentoBodegaProducto,this,this.bodegaproductoConstantesFunciones.activarid_cuenta_contable_descuentoBodegaProducto,iSizeTabla));
			tableColumn.setCellEditor(new CuentaContableTableCell(this.cuentacontabledescuentosForeignKey,this.bodegaproductoConstantesFunciones.resaltarid_cuenta_contable_descuentoBodegaProducto,this,this.bodegaproductoConstantesFunciones.activarid_cuenta_contable_descuentoBodegaProducto,true,"id_cuenta_contable_descuentoBodegaProducto","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70);
			//tableColumn.addPropertyChangeListener(new BodegaProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosBodegaProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosBodegaProducto,BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEPRODUCCION));

		if(this.bodegaproductoConstantesFunciones.mostrarid_cuenta_contable_produccionBodegaProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEPRODUCCION,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new CuentaContableTableCell(this.cuentacontableproduccionsForeignKey,this.bodegaproductoConstantesFunciones.resaltarid_cuenta_contable_produccionBodegaProducto,this,this.bodegaproductoConstantesFunciones.activarid_cuenta_contable_produccionBodegaProducto,iSizeTabla));
			tableColumn.setCellEditor(new CuentaContableTableCell(this.cuentacontableproduccionsForeignKey,this.bodegaproductoConstantesFunciones.resaltarid_cuenta_contable_produccionBodegaProducto,this,this.bodegaproductoConstantesFunciones.activarid_cuenta_contable_produccionBodegaProducto,true,"id_cuenta_contable_produccionBodegaProducto","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70);
			//tableColumn.addPropertyChangeListener(new BodegaProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosBodegaProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosBodegaProducto,BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEDEVOLUCION));

		if(this.bodegaproductoConstantesFunciones.mostrarid_cuenta_contable_devolucionBodegaProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEDEVOLUCION,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new CuentaContableTableCell(this.cuentacontabledevolucionsForeignKey,this.bodegaproductoConstantesFunciones.resaltarid_cuenta_contable_devolucionBodegaProducto,this,this.bodegaproductoConstantesFunciones.activarid_cuenta_contable_devolucionBodegaProducto,iSizeTabla));
			tableColumn.setCellEditor(new CuentaContableTableCell(this.cuentacontabledevolucionsForeignKey,this.bodegaproductoConstantesFunciones.resaltarid_cuenta_contable_devolucionBodegaProducto,this,this.bodegaproductoConstantesFunciones.activarid_cuenta_contable_devolucionBodegaProducto,true,"id_cuenta_contable_devolucionBodegaProducto","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70);
			//tableColumn.addPropertyChangeListener(new BodegaProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosBodegaProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosBodegaProducto,BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEINGRESODEBITO));

		if(this.bodegaproductoConstantesFunciones.mostrarid_cuenta_contable_ingreso_debitoBodegaProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEINGRESODEBITO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new CuentaContableTableCell(this.cuentacontableingresodebitosForeignKey,this.bodegaproductoConstantesFunciones.resaltarid_cuenta_contable_ingreso_debitoBodegaProducto,this,this.bodegaproductoConstantesFunciones.activarid_cuenta_contable_ingreso_debitoBodegaProducto,iSizeTabla));
			tableColumn.setCellEditor(new CuentaContableTableCell(this.cuentacontableingresodebitosForeignKey,this.bodegaproductoConstantesFunciones.resaltarid_cuenta_contable_ingreso_debitoBodegaProducto,this,this.bodegaproductoConstantesFunciones.activarid_cuenta_contable_ingreso_debitoBodegaProducto,true,"id_cuenta_contable_ingreso_debitoBodegaProducto","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70);
			//tableColumn.addPropertyChangeListener(new BodegaProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosBodegaProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosBodegaProducto,BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEINGRESOCREDITO));

		if(this.bodegaproductoConstantesFunciones.mostrarid_cuenta_contable_ingreso_creditoBodegaProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEINGRESOCREDITO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new CuentaContableTableCell(this.cuentacontableingresocreditosForeignKey,this.bodegaproductoConstantesFunciones.resaltarid_cuenta_contable_ingreso_creditoBodegaProducto,this,this.bodegaproductoConstantesFunciones.activarid_cuenta_contable_ingreso_creditoBodegaProducto,iSizeTabla));
			tableColumn.setCellEditor(new CuentaContableTableCell(this.cuentacontableingresocreditosForeignKey,this.bodegaproductoConstantesFunciones.resaltarid_cuenta_contable_ingreso_creditoBodegaProducto,this,this.bodegaproductoConstantesFunciones.activarid_cuenta_contable_ingreso_creditoBodegaProducto,true,"id_cuenta_contable_ingreso_creditoBodegaProducto","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70);
			//tableColumn.addPropertyChangeListener(new BodegaProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosBodegaProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosBodegaProducto,BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLERESULTADODEBITO));

		if(this.bodegaproductoConstantesFunciones.mostrarid_cuenta_contable_resultado_debitoBodegaProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLERESULTADODEBITO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new CuentaContableTableCell(this.cuentacontableresultadodebitosForeignKey,this.bodegaproductoConstantesFunciones.resaltarid_cuenta_contable_resultado_debitoBodegaProducto,this,this.bodegaproductoConstantesFunciones.activarid_cuenta_contable_resultado_debitoBodegaProducto,iSizeTabla));
			tableColumn.setCellEditor(new CuentaContableTableCell(this.cuentacontableresultadodebitosForeignKey,this.bodegaproductoConstantesFunciones.resaltarid_cuenta_contable_resultado_debitoBodegaProducto,this,this.bodegaproductoConstantesFunciones.activarid_cuenta_contable_resultado_debitoBodegaProducto,true,"id_cuenta_contable_resultado_debitoBodegaProducto","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70);
			//tableColumn.addPropertyChangeListener(new BodegaProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosBodegaProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosBodegaProducto,BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLERESULTADOCREDITO));

		if(this.bodegaproductoConstantesFunciones.mostrarid_cuenta_contable_resultado_creditoBodegaProducto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLERESULTADOCREDITO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new CuentaContableTableCell(this.cuentacontableresultadocreditosForeignKey,this.bodegaproductoConstantesFunciones.resaltarid_cuenta_contable_resultado_creditoBodegaProducto,this,this.bodegaproductoConstantesFunciones.activarid_cuenta_contable_resultado_creditoBodegaProducto,iSizeTabla));
			tableColumn.setCellEditor(new CuentaContableTableCell(this.cuentacontableresultadocreditosForeignKey,this.bodegaproductoConstantesFunciones.resaltarid_cuenta_contable_resultado_creditoBodegaProducto,this,this.bodegaproductoConstantesFunciones.activarid_cuenta_contable_resultado_creditoBodegaProducto,true,"id_cuenta_contable_resultado_creditoBodegaProducto","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70);
			//tableColumn.addPropertyChangeListener(new BodegaProductoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}
			
		} else {
		}			
					
		if(!this.bodegaproductoSessionBean.getEsGuardarRelacionado()
			&& !this.esParaBusquedaForeignKey) {
			
		}
		
		if(true) {
			String sLabelColumnAccion="Editar";
			String sLabelColumnAccionEli="Eli";
			
			if(this.esParaBusquedaForeignKey)  {
				sLabelColumnAccion="Seleccionar";
				
				//LO MISMO QUE ELSE
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.bodegaproductoSessionBean.getEsGuardarRelacionado(),iSizeTabla));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.bodegaproductoSessionBean.getEsGuardarRelacionado(),iSizeTabla));
	
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosBodegaProducto.addColumn(tableColumn);
			
			} else {				
				
				//LO MISMO QUE IF
				
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.bodegaproductoSessionBean.getEsGuardarRelacionado(),iSizeTabla));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.bodegaproductoSessionBean.getEsGuardarRelacionado(),iSizeTabla));
		
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosBodegaProducto.addColumn(tableColumn);				
					
				//ELIMINAR
				if(this.isPermisoEliminarBodegaProducto && this.isPermisoGuardarCambiosBodegaProducto) {
					tableColumn= new TableColumn();
					tableColumn.setIdentifier(Constantes2.S_ELI);
					tableColumn.setHeaderValue(sLabelColumnAccionEli);
					tableColumn.setCellRenderer(new IdTableCell(this,false,true,this.bodegaproductoSessionBean.getEsGuardarRelacionado(),iSizeTabla));
					tableColumn.setCellEditor(new IdTableCell(this,false,true,this.bodegaproductoSessionBean.getEsGuardarRelacionado(),iSizeTabla));
			
					tableColumn.setPreferredWidth(65); 	 
					tableColumn.setWidth(65); 	 
					tableColumn.setMinWidth(65); 
					tableColumn.setMaxWidth(65);
					
					this.iWidthTableDefinicion+=65;
						
					this.jTableDatosBodegaProducto.addColumn(tableColumn);
				}
			}			
						
			
			/*
			tableColumn= new TableColumn();
			tableColumn.setIdentifier(Constantes2.S_SELECCIONAR);
			tableColumn.setHeaderValue(Constantes2.S_SELECCIONAR);
			tableColumn.setCellRenderer(new IdSeleccionarTableCell(this));
			tableColumn.setCellEditor(new IdSeleccionarTableCell(this));
			
			tableColumn.setPreferredWidth(30); 	 
			tableColumn.setWidth(30); 	 
			tableColumn.setMinWidth(30); 
			
			this.iWidthTableDefinicion+=30;
			
			this.jTableDatosBodegaProducto.addColumn(tableColumn);
			*/
		}
		
		Integer iUltimaColumna=0;//1
		Integer iNuevaPosicionColumna=0;
		
		
		//PERMITE ELIMINAR SIMPLE
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarBodegaProducto && this.isPermisoGuardarCambiosBodegaProducto) {
				iUltimaColumna++;
			}	
		}
		
		//PERMITE EDITAR SIMPLE
		iUltimaColumna++;	
		
				
		
		//MOVIA SELECCIONAR
		//iUltimaColumna++;
		
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarBodegaProducto && this.isPermisoGuardarCambiosBodegaProducto) {
				//REUBICA ELIMINAR SIMPLE
				jTableDatosBodegaProducto.moveColumn(this.jTableDatosBodegaProducto.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3
					
				iUltimaColumna--;
			}
		}
		//REUBICA EDITAR SIMPLE
		jTableDatosBodegaProducto.moveColumn(this.jTableDatosBodegaProducto.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3				
		
		
		
		
		//REUBICABA SELECCIONAR
		/*
		if(iUltimaColumna>1) {
			iUltimaColumna--;
		}
		
		//iNuevaPosicionColumna++;
			
		//REUBICA SELECCIONAR FILA CHECK
		jTableDatosBodegaProducto.moveColumn(this.jTableDatosBodegaProducto.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1		
		*/
		
		//DEFINEN HEADERS
		final TableCellRenderer tableHeaderDefaultCellRenderer = this.jTableDatosBodegaProducto.getTableHeader().getDefaultRenderer();
		
		this.jTableDatosBodegaProducto.getTableHeader().setDefaultRenderer(new TableCellRendererHeader(this.jTableDatosBodegaProducto,tableHeaderDefaultCellRenderer));
	    
		TableColumn column=null;
		
		if(!BodegaProductoJInternalFrame.ISBINDING_MANUAL_TABLA) {
			for(int i = 0; i < this.jTableDatosBodegaProducto.getColumnModel().getColumnCount(); i++) { 
				column = this.jTableDatosBodegaProducto.getColumnModel().getColumn(i); 
				
				if(column.getIdentifier()!=null) {
					//SI SE UTILIZA UN HEADER ES GENERICO
					//column.setHeaderRenderer(new HeaderRenderer(column.getIdentifier().toString()));
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_ELI)) {
					continue;
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_SELECCIONAR)) {
					if(!BodegaProductoJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(50); 	 
						column.setWidth(50); 	 
						column.setMinWidth(50); 	
						column.setMaxWidth(50); 
						
						this.iWidthTableDefinicion+=50;
					}
					
				} else {
					if(!BodegaProductoJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						column.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						
						this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
					}
				}
			}
		}
		
		this.jTableDatosBodegaProducto.setSelectionBackground(FuncionesSwing.getColorSelectedBackground());
		this.jTableDatosBodegaProducto.setSelectionForeground(FuncionesSwing.getColorSelectedForeground());
		
		/*
		this.jTableDatosBodegaProducto.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
			private static final long serialVersionUID = 1L;
			
		    @Override
		    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
		        final Component component= super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
		        //POR DEFECTO ES MEJOR, SE PIERDE DATOS AL SELECCIONAR BLANCO LETRAS BLANCAS
				component.setBackground(row % 2 == 0 ? FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR) : Funciones2.getColorFilaTabla2()); //FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR)
				component.setForeground(Funciones2.getColorTextoFilaTabla1());
				
				try {
		        	int iSize=-999;
		        	
		        	if(conTotales) {
						//FILA TOTALES OTRO COLOR, SI TABLA NO ES UNO A UNO
			        	if(Constantes.ISUSAEJBLOGICLAYER) {
							iSize=bodegaproductoLogic.getBodegaProductos().size()-1;
								
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							iSize=bodegaproductos.size()-1;
						}
						
						if(iSize==row) {
							component.setBackground(Funciones2.getColorFilaTablaTotales());
						}
		        	}
					
					//POR EFICIENCIA NO UTILIZAR					
					//if (component instanceof JComponent) {
		            //    JComponent jcomponent = (JComponent) component;		                 		                
		        	//}				
					
				} catch (Exception e) {
					e.printStackTrace();
				}
				
		        return component;
		    }
		});
		*/
		
		//ESTA EN LA DEFINICION DE LA TABLA
		//this.jTableDatosBodegaProducto.setRowHeight(Constantes.ISWING_ALTO_FILA_TABLA);
		
		/*
		column=this.jTableDatosBodegaProducto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSistema,Constantes2.S_SELECCIONAR));
		
		if(column!=null) {
			column.setPreferredWidth(25); 	 
			column.setWidth(25); 	 
			column.setMinWidth(25); 	
		}
		*/
			
			//CopyTableToTableTotal();
		} else {
			
			this.actualizarVisualTableDatosBodegaProducto();
			
		}
	}
	
	/*
	//COPY_TABLES
	/* FALTARIA RESOLVER:
	   1 SOLO SCROLL PARA 2 TABLAS
	   COPIA EXACTA DE COLUMNAS DE UNA TABLA A OTRA, SI SE MODIFICA TAMANIO TAMBIEN LA OTRA
	*/
	
	public void jButtonIdActionPerformed(ActionEvent evt,int rowIndex,Boolean esRelaciones,Boolean esEliminar) { 
		try {
			if(!esEliminar) {
				this.estaModoSeleccionar=true;
				
				//this.isEsNuevoBodegaProducto=false;
					
				BodegaProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.bodegaproducto,new Object(),this.bodegaproductoParameterGeneral,this.bodegaproductoReturnGeneral);
			
				if(this.bodegaproductoSessionBean.getConGuardarRelaciones()) {
					this.dStart=(double)System.currentTimeMillis();
				}
				
				if(this.jInternalFrameDetalleFormBodegaProducto==null) {
					this.inicializarFormDetalle();
				}
				
				this.inicializarInvalidValues();
				
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosBodegaProducto.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosBodegaProducto.getSelectedRow();	       
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproducto =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.bodegaproducto =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//PUEDE SER PARA DUPLICADO O NUEVO TABLA
				
				if(this.bodegaproducto.getsType().equals("DUPLICADO")
				   || this.bodegaproducto.getsType().equals("NUEVO_GUARDAR_CAMBIOS")) {
					
					this.isEsNuevoBodegaProducto=true;
				
				} else {
					this.isEsNuevoBodegaProducto=false;	
				}
				
				//CONTROL VERSION ANTERIOR
				/*
				if(!this.bodegaproductoSessionBean.getEsGuardarRelacionado()) {
					if(this.bodegaproducto.getId()>=0 && !this.bodegaproducto.getIsNew()) {						
						this.isEsNuevoBodegaProducto=false;
						
					} else {
						this.isEsNuevoBodegaProducto=true;
					}
					
				} else {
					//CONTROLAR PARA RELACIONADO
				}
				*/
				
				//ESTABLECE SI ES RELACIONADO O NO 
				this.habilitarDeshabilitarTipoMantenimientoBodegaProducto(esRelaciones);						
				
				this.seleccionarBodegaProducto(evt,null,rowIndex);
				
				//SELECCIONA ACTUAL PERO AUN NO SE HA INGRESADO AL SISTEMA
				//SE DESHABILITA POR GUARDAR CAMBIOS
				/*
				if(this.bodegaproducto.getId()<0) {
					this.isEsNuevoBodegaProducto=true;
				}
				*/
				
				if(!this.esParaBusquedaForeignKey) {
					this.modificarBodegaProducto(evt,rowIndex,esRelaciones);
				} else {
					this.seleccionarBodegaProducto(evt,rowIndex);
				}	
				
				if(this.bodegaproductoSessionBean.getConGuardarRelaciones()) {
					this.dEnd=(double)System.currentTimeMillis();					
					this.dDif=this.dEnd - this.dStart;
					
					if(Constantes.ISDEVELOPING) {
						System.out.println("Tiempo(ms) Seleccion BodegaProducto: " + this.dDif); 
					}
				}								
				
				BodegaProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.bodegaproducto,new Object(),this.bodegaproductoParameterGeneral,this.bodegaproductoReturnGeneral);
				
			} else {
				this.estaModoEliminarGuardarCambios=true;
				
				this.seleccionarBodegaProducto(evt,null,rowIndex);
				
				if(this.permiteMantenimiento(this.bodegaproducto)) {
					if(this.bodegaproducto.getId()>0) {
						this.bodegaproducto.setIsDeleted(true);
						
						this.bodegaproductosEliminados.add(this.bodegaproducto);
					}
					
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.bodegaproductoLogic.getBodegaProductos().remove(this.bodegaproducto);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.bodegaproductos.remove(this.bodegaproducto);				
					}
					
					
					((BodegaProductoModel) this.jTableDatosBodegaProducto.getModel()).fireTableRowsDeleted(rowIndex,rowIndex);
					
					this.actualizarFilaTotales();
					
					this.inicializarActualizarBindingTablaBodegaProducto(false);					
				}								
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException2(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoSeleccionar=false;				
			this.estaModoEliminarGuardarCambios=false;
		}
	}
	
	
	public void seleccionarBodegaProducto(ActionEvent evt,javax.swing.event.ListSelectionEvent evt2,int rowIndex) throws Exception { 
		try {
			//SI PUEDE SER NUEVO Y SELECCIONAR (PARA DUPLICAR Y NUEVO TABLA)
			//if(!this.isEsNuevoBodegaProducto) {
			
			if(this.jInternalFrameDetalleFormBodegaProducto==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosBodegaProducto.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosBodegaProducto.getSelectedRow();	       
				}
				
				//CUANDO SE RECARGA TABLA TAMBIEN SE SELECCIONA PERO CON -1 POR LO QUE SE NECESITA VALIDAR ANTES
				if(intSelectedRow<0) {
					return;
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproducto =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.bodegaproducto =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
				}
				
				if(BodegaProductoJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesObjetoActualToFormularioBodegaProducto(this.bodegaproducto);
				}
				
				//ARCHITECTURE
				try {
					

					//Empresa
					if(!this.bodegaproductoConstantesFunciones.cargarid_empresaBodegaProducto || this.bodegaproductoConstantesFunciones.event_dependid_empresaBodegaProducto) {
						//this.cargarCombosEmpresasForeignKeyLista(" where id="+this.bodegaproducto.getid_empresa());
									//this.inicializarActualizarBindingBodegaProducto(false,false);
						this.empresasForeignKey=new ArrayList<Empresa>();

						if(bodegaproducto.getEmpresa()!=null) {
							this.empresasForeignKey.add(bodegaproducto.getEmpresa());
						}

						this.addItemDefectoCombosForeignKeyEmpresa();
						this.cargarCombosFrameEmpresasForeignKey("Todos");
					}
					this.setActualEmpresaForeignKey(this.bodegaproducto.getid_empresa(),false,"Formulario");

					//Sucursal
					if(!this.bodegaproductoConstantesFunciones.cargarid_sucursalBodegaProducto || this.bodegaproductoConstantesFunciones.event_dependid_sucursalBodegaProducto) {
						//this.cargarCombosSucursalsForeignKeyLista(" where id="+this.bodegaproducto.getid_sucursal());
									//this.inicializarActualizarBindingBodegaProducto(false,false);
						this.sucursalsForeignKey=new ArrayList<Sucursal>();

						if(bodegaproducto.getSucursal()!=null) {
							this.sucursalsForeignKey.add(bodegaproducto.getSucursal());
						}

						this.addItemDefectoCombosForeignKeySucursal();
						this.cargarCombosFrameSucursalsForeignKey("Todos");
					}
					this.setActualSucursalForeignKey(this.bodegaproducto.getid_sucursal(),false,"Formulario");

					//Bodega
					if(!this.bodegaproductoConstantesFunciones.cargarid_bodegaBodegaProducto || this.bodegaproductoConstantesFunciones.event_dependid_bodegaBodegaProducto) {
						//this.cargarCombosBodegasForeignKeyLista(" where id="+this.bodegaproducto.getid_bodega());
									//this.inicializarActualizarBindingBodegaProducto(false,false);
						this.bodegasForeignKey=new ArrayList<Bodega>();

						if(bodegaproducto.getBodega()!=null) {
							this.bodegasForeignKey.add(bodegaproducto.getBodega());
						}

						this.addItemDefectoCombosForeignKeyBodega();
						this.cargarCombosFrameBodegasForeignKey("Todos");
					}
					this.setActualBodegaForeignKey(this.bodegaproducto.getid_bodega(),false,"Formulario");

					//Producto
					if(!this.bodegaproductoConstantesFunciones.cargarid_productoBodegaProducto || this.bodegaproductoConstantesFunciones.event_dependid_productoBodegaProducto) {
						//this.cargarCombosProductosForeignKeyLista(" where id="+this.bodegaproducto.getid_producto());
									//this.inicializarActualizarBindingBodegaProducto(false,false);
						this.productosForeignKey=new ArrayList<Producto>();

						if(bodegaproducto.getProducto()!=null) {
							this.productosForeignKey.add(bodegaproducto.getProducto());
						}

						this.addItemDefectoCombosForeignKeyProducto();
						this.cargarCombosFrameProductosForeignKey("Todos");
					}
					this.setActualProductoForeignKey(this.bodegaproducto.getid_producto(),false,"Formulario");

					//Unidad
					if(!this.bodegaproductoConstantesFunciones.cargarid_unidadBodegaProducto || this.bodegaproductoConstantesFunciones.event_dependid_unidadBodegaProducto) {
						//this.cargarCombosUnidadsForeignKeyLista(" where id="+this.bodegaproducto.getid_unidad());
									//this.inicializarActualizarBindingBodegaProducto(false,false);
						this.unidadsForeignKey=new ArrayList<Unidad>();

						if(bodegaproducto.getUnidad()!=null) {
							this.unidadsForeignKey.add(bodegaproducto.getUnidad());
						}

						this.addItemDefectoCombosForeignKeyUnidad();
						this.cargarCombosFrameUnidadsForeignKey("Todos");
					}
					this.setActualUnidadForeignKey(this.bodegaproducto.getid_unidad(),false,"Formulario");

					//CentroCosto
					if(!this.bodegaproductoConstantesFunciones.cargarid_centro_costoBodegaProducto || this.bodegaproductoConstantesFunciones.event_dependid_centro_costoBodegaProducto) {
						//this.cargarCombosCentroCostosForeignKeyLista(" where id="+this.bodegaproducto.getid_centro_costo());
									//this.inicializarActualizarBindingBodegaProducto(false,false);
						this.centrocostosForeignKey=new ArrayList<CentroCosto>();

						if(bodegaproducto.getCentroCosto()!=null) {
							this.centrocostosForeignKey.add(bodegaproducto.getCentroCosto());
						}

						this.addItemDefectoCombosForeignKeyCentroCosto();
						this.cargarCombosFrameCentroCostosForeignKey("Todos");
					}
					this.setActualCentroCostoForeignKey(this.bodegaproducto.getid_centro_costo(),false,"Formulario");

					//EstadoBodegaProducto
					if(!this.bodegaproductoConstantesFunciones.cargarid_estado_bodega_productoBodegaProducto || this.bodegaproductoConstantesFunciones.event_dependid_estado_bodega_productoBodegaProducto) {
						//this.cargarCombosEstadoBodegaProductosForeignKeyLista(" where id="+this.bodegaproducto.getid_estado_bodega_producto());
									//this.inicializarActualizarBindingBodegaProducto(false,false);
						this.estadobodegaproductosForeignKey=new ArrayList<EstadoBodegaProducto>();

						if(bodegaproducto.getEstadoBodegaProducto()!=null) {
							this.estadobodegaproductosForeignKey.add(bodegaproducto.getEstadoBodegaProducto());
						}

						this.addItemDefectoCombosForeignKeyEstadoBodegaProducto();
						this.cargarCombosFrameEstadoBodegaProductosForeignKey("Todos");
					}
					this.setActualEstadoBodegaProductoForeignKey(this.bodegaproducto.getid_estado_bodega_producto(),false,"Formulario");

					//CuentaContableInventario
					if(!this.bodegaproductoConstantesFunciones.cargarid_cuenta_contable_inventarioBodegaProducto || this.bodegaproductoConstantesFunciones.event_dependid_cuenta_contable_inventarioBodegaProducto) {
						//this.cargarCombosCuentaContableInventariosForeignKeyLista(" where id="+this.bodegaproducto.getid_cuenta_contable_inventario());
									//this.inicializarActualizarBindingBodegaProducto(false,false);
						this.cuentacontableinventariosForeignKey=new ArrayList<CuentaContable>();

						if(bodegaproducto.getCuentaContableInventario()!=null) {
							this.cuentacontableinventariosForeignKey.add(bodegaproducto.getCuentaContableInventario());
						}

						this.addItemDefectoCombosForeignKeyCuentaContableInventario();
						this.cargarCombosFrameCuentaContableInventariosForeignKey("Todos");
					}
					this.setActualCuentaContableInventarioForeignKey(this.bodegaproducto.getid_cuenta_contable_inventario(),false,"Formulario");

					//CuentaContableCostoVenta
					if(!this.bodegaproductoConstantesFunciones.cargarid_cuenta_contable_costo_ventaBodegaProducto || this.bodegaproductoConstantesFunciones.event_dependid_cuenta_contable_costo_ventaBodegaProducto) {
						//this.cargarCombosCuentaContableCostoVentasForeignKeyLista(" where id="+this.bodegaproducto.getid_cuenta_contable_costo_venta());
									//this.inicializarActualizarBindingBodegaProducto(false,false);
						this.cuentacontablecostoventasForeignKey=new ArrayList<CuentaContable>();

						if(bodegaproducto.getCuentaContableCostoVenta()!=null) {
							this.cuentacontablecostoventasForeignKey.add(bodegaproducto.getCuentaContableCostoVenta());
						}

						this.addItemDefectoCombosForeignKeyCuentaContableCostoVenta();
						this.cargarCombosFrameCuentaContableCostoVentasForeignKey("Todos");
					}
					this.setActualCuentaContableCostoVentaForeignKey(this.bodegaproducto.getid_cuenta_contable_costo_venta(),false,"Formulario");

					//CuentaContableVenta
					if(!this.bodegaproductoConstantesFunciones.cargarid_cuenta_contable_ventaBodegaProducto || this.bodegaproductoConstantesFunciones.event_dependid_cuenta_contable_ventaBodegaProducto) {
						//this.cargarCombosCuentaContableVentasForeignKeyLista(" where id="+this.bodegaproducto.getid_cuenta_contable_venta());
									//this.inicializarActualizarBindingBodegaProducto(false,false);
						this.cuentacontableventasForeignKey=new ArrayList<CuentaContable>();

						if(bodegaproducto.getCuentaContableVenta()!=null) {
							this.cuentacontableventasForeignKey.add(bodegaproducto.getCuentaContableVenta());
						}

						this.addItemDefectoCombosForeignKeyCuentaContableVenta();
						this.cargarCombosFrameCuentaContableVentasForeignKey("Todos");
					}
					this.setActualCuentaContableVentaForeignKey(this.bodegaproducto.getid_cuenta_contable_venta(),false,"Formulario");

					//CuentaContableDescuento
					if(!this.bodegaproductoConstantesFunciones.cargarid_cuenta_contable_descuentoBodegaProducto || this.bodegaproductoConstantesFunciones.event_dependid_cuenta_contable_descuentoBodegaProducto) {
						//this.cargarCombosCuentaContableDescuentosForeignKeyLista(" where id="+this.bodegaproducto.getid_cuenta_contable_descuento());
									//this.inicializarActualizarBindingBodegaProducto(false,false);
						this.cuentacontabledescuentosForeignKey=new ArrayList<CuentaContable>();

						if(bodegaproducto.getCuentaContableDescuento()!=null) {
							this.cuentacontabledescuentosForeignKey.add(bodegaproducto.getCuentaContableDescuento());
						}

						this.addItemDefectoCombosForeignKeyCuentaContableDescuento();
						this.cargarCombosFrameCuentaContableDescuentosForeignKey("Todos");
					}
					this.setActualCuentaContableDescuentoForeignKey(this.bodegaproducto.getid_cuenta_contable_descuento(),false,"Formulario");

					//CuentaContableProduccion
					if(!this.bodegaproductoConstantesFunciones.cargarid_cuenta_contable_produccionBodegaProducto || this.bodegaproductoConstantesFunciones.event_dependid_cuenta_contable_produccionBodegaProducto) {
						//this.cargarCombosCuentaContableProduccionsForeignKeyLista(" where id="+this.bodegaproducto.getid_cuenta_contable_produccion());
									//this.inicializarActualizarBindingBodegaProducto(false,false);
						this.cuentacontableproduccionsForeignKey=new ArrayList<CuentaContable>();

						if(bodegaproducto.getCuentaContableProduccion()!=null) {
							this.cuentacontableproduccionsForeignKey.add(bodegaproducto.getCuentaContableProduccion());
						}

						this.addItemDefectoCombosForeignKeyCuentaContableProduccion();
						this.cargarCombosFrameCuentaContableProduccionsForeignKey("Todos");
					}
					this.setActualCuentaContableProduccionForeignKey(this.bodegaproducto.getid_cuenta_contable_produccion(),false,"Formulario");

					//CuentaContableDevolucion
					if(!this.bodegaproductoConstantesFunciones.cargarid_cuenta_contable_devolucionBodegaProducto || this.bodegaproductoConstantesFunciones.event_dependid_cuenta_contable_devolucionBodegaProducto) {
						//this.cargarCombosCuentaContableDevolucionsForeignKeyLista(" where id="+this.bodegaproducto.getid_cuenta_contable_devolucion());
									//this.inicializarActualizarBindingBodegaProducto(false,false);
						this.cuentacontabledevolucionsForeignKey=new ArrayList<CuentaContable>();

						if(bodegaproducto.getCuentaContableDevolucion()!=null) {
							this.cuentacontabledevolucionsForeignKey.add(bodegaproducto.getCuentaContableDevolucion());
						}

						this.addItemDefectoCombosForeignKeyCuentaContableDevolucion();
						this.cargarCombosFrameCuentaContableDevolucionsForeignKey("Todos");
					}
					this.setActualCuentaContableDevolucionForeignKey(this.bodegaproducto.getid_cuenta_contable_devolucion(),false,"Formulario");

					//CuentaContableIngresoDebito
					if(!this.bodegaproductoConstantesFunciones.cargarid_cuenta_contable_ingreso_debitoBodegaProducto || this.bodegaproductoConstantesFunciones.event_dependid_cuenta_contable_ingreso_debitoBodegaProducto) {
						//this.cargarCombosCuentaContableIngresoDebitosForeignKeyLista(" where id="+this.bodegaproducto.getid_cuenta_contable_ingreso_debito());
									//this.inicializarActualizarBindingBodegaProducto(false,false);
						this.cuentacontableingresodebitosForeignKey=new ArrayList<CuentaContable>();

						if(bodegaproducto.getCuentaContableIngresoDebito()!=null) {
							this.cuentacontableingresodebitosForeignKey.add(bodegaproducto.getCuentaContableIngresoDebito());
						}

						this.addItemDefectoCombosForeignKeyCuentaContableIngresoDebito();
						this.cargarCombosFrameCuentaContableIngresoDebitosForeignKey("Todos");
					}
					this.setActualCuentaContableIngresoDebitoForeignKey(this.bodegaproducto.getid_cuenta_contable_ingreso_debito(),false,"Formulario");

					//CuentaContableIngresoCredito
					if(!this.bodegaproductoConstantesFunciones.cargarid_cuenta_contable_ingreso_creditoBodegaProducto || this.bodegaproductoConstantesFunciones.event_dependid_cuenta_contable_ingreso_creditoBodegaProducto) {
						//this.cargarCombosCuentaContableIngresoCreditosForeignKeyLista(" where id="+this.bodegaproducto.getid_cuenta_contable_ingreso_credito());
									//this.inicializarActualizarBindingBodegaProducto(false,false);
						this.cuentacontableingresocreditosForeignKey=new ArrayList<CuentaContable>();

						if(bodegaproducto.getCuentaContableIngresoCredito()!=null) {
							this.cuentacontableingresocreditosForeignKey.add(bodegaproducto.getCuentaContableIngresoCredito());
						}

						this.addItemDefectoCombosForeignKeyCuentaContableIngresoCredito();
						this.cargarCombosFrameCuentaContableIngresoCreditosForeignKey("Todos");
					}
					this.setActualCuentaContableIngresoCreditoForeignKey(this.bodegaproducto.getid_cuenta_contable_ingreso_credito(),false,"Formulario");

					//CuentaContableResultadoDebito
					if(!this.bodegaproductoConstantesFunciones.cargarid_cuenta_contable_resultado_debitoBodegaProducto || this.bodegaproductoConstantesFunciones.event_dependid_cuenta_contable_resultado_debitoBodegaProducto) {
						//this.cargarCombosCuentaContableResultadoDebitosForeignKeyLista(" where id="+this.bodegaproducto.getid_cuenta_contable_resultado_debito());
									//this.inicializarActualizarBindingBodegaProducto(false,false);
						this.cuentacontableresultadodebitosForeignKey=new ArrayList<CuentaContable>();

						if(bodegaproducto.getCuentaContableResultadoDebito()!=null) {
							this.cuentacontableresultadodebitosForeignKey.add(bodegaproducto.getCuentaContableResultadoDebito());
						}

						this.addItemDefectoCombosForeignKeyCuentaContableResultadoDebito();
						this.cargarCombosFrameCuentaContableResultadoDebitosForeignKey("Todos");
					}
					this.setActualCuentaContableResultadoDebitoForeignKey(this.bodegaproducto.getid_cuenta_contable_resultado_debito(),false,"Formulario");

					//CuentaContableResultadoCredito
					if(!this.bodegaproductoConstantesFunciones.cargarid_cuenta_contable_resultado_creditoBodegaProducto || this.bodegaproductoConstantesFunciones.event_dependid_cuenta_contable_resultado_creditoBodegaProducto) {
						//this.cargarCombosCuentaContableResultadoCreditosForeignKeyLista(" where id="+this.bodegaproducto.getid_cuenta_contable_resultado_credito());
									//this.inicializarActualizarBindingBodegaProducto(false,false);
						this.cuentacontableresultadocreditosForeignKey=new ArrayList<CuentaContable>();

						if(bodegaproducto.getCuentaContableResultadoCredito()!=null) {
							this.cuentacontableresultadocreditosForeignKey.add(bodegaproducto.getCuentaContableResultadoCredito());
						}

						this.addItemDefectoCombosForeignKeyCuentaContableResultadoCredito();
						this.cargarCombosFrameCuentaContableResultadoCreditosForeignKey("Todos");
					}
					this.setActualCuentaContableResultadoCreditoForeignKey(this.bodegaproducto.getid_cuenta_contable_resultado_credito(),false,"Formulario");
				} catch(Exception e) {
					throw e;
				}
				
				this.actualizarEstadoCeldasBotonesBodegaProducto("s", this.isGuardarCambiosEnLote, this.isEsMantenimientoRelacionado);
				
				//NO FUNCIONA BINDING PERO SE MANTIENE
				this.inicializarActualizarBindingBotonesBodegaProducto(false) ;
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualBodegaProducto() ;
			//}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesObjetoActualToFormularioTodoBodegaProducto(BodegaProducto bodegaproducto) throws Exception { 
		this.setVariablesObjetoActualToFormularioTodoBodegaProducto(bodegaproducto,false,"NINGUNO");
	}
	
	public void setVariablesObjetoActualToFormularioTodoBodegaProducto(BodegaProducto bodegaproducto,Boolean conCargarListasDesdeObjetoActual,String sTipoEvento) throws Exception { 
		this.setVariablesObjetoActualToFormularioBodegaProducto(bodegaproducto);
		
		if(conCargarListasDesdeObjetoActual) {
			this.setVariablesObjetoActualToListasForeignKeyBodegaProducto(bodegaproducto,sTipoEvento);
		}
		
		this.setVariablesObjetoActualToFormularioForeignKeyBodegaProducto(bodegaproducto);
	}
	
	public void setVariablesObjetoActualToFormularioBodegaProducto(BodegaProducto bodegaproducto) throws Exception { 
		try {			
			Image imageActual=null;
			ImageIcon imageIcon = null;
			
			if(this.jInternalFrameDetalleFormBodegaProducto==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			
			this.jInternalFrameDetalleFormBodegaProducto.jLabelidBodegaProducto.setText(bodegaproducto.getId().toString());
			this.jInternalFrameDetalleFormBodegaProducto.jTextAreadescripcionBodegaProducto.setText(bodegaproducto.getdescripcion());
			this.jInternalFrameDetalleFormBodegaProducto.jTextFieldcantidad_disponibleBodegaProducto.setText(bodegaproducto.getcantidad_disponible().toString());
			this.jInternalFrameDetalleFormBodegaProducto.jTextFieldstock_maximoBodegaProducto.setText(bodegaproducto.getstock_maximo().toString());
			this.jInternalFrameDetalleFormBodegaProducto.jTextFieldstock_minimoBodegaProducto.setText(bodegaproducto.getstock_minimo().toString());
			this.jInternalFrameDetalleFormBodegaProducto.jTextFieldivaBodegaProducto.setText(bodegaproducto.getiva().toString());
			this.jInternalFrameDetalleFormBodegaProducto.jTextFieldiva_valorBodegaProducto.setText(bodegaproducto.getiva_valor().toString());
			this.jInternalFrameDetalleFormBodegaProducto.jTextFielddescuentoBodegaProducto.setText(bodegaproducto.getdescuento().toString());
			this.jInternalFrameDetalleFormBodegaProducto.jTextFielddescuento_valorBodegaProducto.setText(bodegaproducto.getdescuento_valor().toString());
			this.jInternalFrameDetalleFormBodegaProducto.jTextFieldiceBodegaProducto.setText(bodegaproducto.getice().toString());
			this.jInternalFrameDetalleFormBodegaProducto.jTextFieldice_valorBodegaProducto.setText(bodegaproducto.getice_valor().toString());
			this.jInternalFrameDetalleFormBodegaProducto.jTextFieldcosto_promedioBodegaProducto.setText(bodegaproducto.getcosto_promedio().toString());
			this.jInternalFrameDetalleFormBodegaProducto.jTextFieldporcentaje_comisionBodegaProducto.setText(bodegaproducto.getporcentaje_comision().toString());
			this.jInternalFrameDetalleFormBodegaProducto.jTextFieldprecioBodegaProducto.setText(bodegaproducto.getprecio().toString());
			this.jInternalFrameDetalleFormBodegaProducto.jTextFieldultimo_costoBodegaProducto.setText(bodegaproducto.getultimo_costo().toString());
			this.jInternalFrameDetalleFormBodegaProducto.jTextFieldcostoBodegaProducto.setText(bodegaproducto.getcosto().toString());
			this.jInternalFrameDetalleFormBodegaProducto.jTextFieldarancel_porcentajeBodegaProducto.setText(bodegaproducto.getarancel_porcentaje().toString());
			this.jInternalFrameDetalleFormBodegaProducto.jTextFieldice_porcentajeBodegaProducto.setText(bodegaproducto.getice_porcentaje().toString());
			this.jInternalFrameDetalleFormBodegaProducto.jTextFieldpesoBodegaProducto.setText(bodegaproducto.getpeso().toString());
			this.jInternalFrameDetalleFormBodegaProducto.jCheckBoxcon_ivaBodegaProducto.setSelected(bodegaproducto.getcon_iva());
			this.jInternalFrameDetalleFormBodegaProducto.jCheckBoxcon_impuestoBodegaProducto.setSelected(bodegaproducto.getcon_impuesto());
			this.jInternalFrameDetalleFormBodegaProducto.jCheckBoxcon_iceBodegaProducto.setSelected(bodegaproducto.getcon_ice());
			this.jInternalFrameDetalleFormBodegaProducto.jCheckBoxesta_activoBodegaProducto.setSelected(bodegaproducto.getesta_activo());
			this.jInternalFrameDetalleFormBodegaProducto.jCheckBoxcon_balanzaBodegaProducto.setSelected(bodegaproducto.getcon_balanza());
			this.jInternalFrameDetalleFormBodegaProducto.jTextFieldcantidad_pedidaBodegaProducto.setText(bodegaproducto.getcantidad_pedida().toString());
			this.jInternalFrameDetalleFormBodegaProducto.jTextFieldcantidad_fisicaBodegaProducto.setText(bodegaproducto.getcantidad_fisica().toString());
			this.jInternalFrameDetalleFormBodegaProducto.jTextFieldcantidad_requeridoBodegaProducto.setText(bodegaproducto.getcantidad_requerido().toString());
			this.jInternalFrameDetalleFormBodegaProducto.jTextFieldprecio_costoBodegaProducto.setText(bodegaproducto.getprecio_costo().toString());
			this.jInternalFrameDetalleFormBodegaProducto.jTextFieldprecio_promedioBodegaProducto.setText(bodegaproducto.getprecio_promedio().toString());
			this.jInternalFrameDetalleFormBodegaProducto.jTextFieldtotal_ingresosBodegaProducto.setText(bodegaproducto.gettotal_ingresos().toString());
			this.jInternalFrameDetalleFormBodegaProducto.jTextFieldtotal_egresosBodegaProducto.setText(bodegaproducto.gettotal_egresos().toString());
			this.jInternalFrameDetalleFormBodegaProducto.jTextFieldtotal_provisionBodegaProducto.setText(bodegaproducto.gettotal_provision().toString());
			this.jInternalFrameDetalleFormBodegaProducto.jTextFieldtotal_procesoBodegaProducto.setText(bodegaproducto.gettotal_proceso().toString());
			this.jInternalFrameDetalleFormBodegaProducto.jTextFieldcosto_calculadoBodegaProducto.setText(bodegaproducto.getcosto_calculado().toString());
			this.jInternalFrameDetalleFormBodegaProducto.jTextFielddias_produccionBodegaProducto.setText(bodegaproducto.getdias_produccion().toString());
			this.jInternalFrameDetalleFormBodegaProducto.jTextFieldprecio_reposicionBodegaProducto.setText(bodegaproducto.getprecio_reposicion().toString());
			this.jInternalFrameDetalleFormBodegaProducto.jDateChooserfecha_ultimo_pedidoBodegaProducto.setDate(bodegaproducto.getfecha_ultimo_pedido());
			this.jInternalFrameDetalleFormBodegaProducto.jDateChooserfecha_ingresoBodegaProducto.setDate(bodegaproducto.getfecha_ingreso());
			this.jInternalFrameDetalleFormBodegaProducto.jDateChooserfecha_egresoBodegaProducto.setDate(bodegaproducto.getfecha_egreso());
			this.jInternalFrameDetalleFormBodegaProducto.jDateChooserfecha_ultima_compraBodegaProducto.setDate(bodegaproducto.getfecha_ultima_compra());
			this.jInternalFrameDetalleFormBodegaProducto.jDateChooserfecha_ultima_ventaBodegaProducto.setDate(bodegaproducto.getfecha_ultima_venta());
			this.jInternalFrameDetalleFormBodegaProducto.jDateChooserfecha_ultima_devolucionBodegaProducto.setDate(bodegaproducto.getfecha_ultima_devolucion());
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
		}
	}
		
	public void actualizarInformacion(String sTipo,BodegaProducto bodegaproductoLocal) throws Exception {
		this.actualizarInformacion(sTipo,false,bodegaproductoLocal);
	}	
	
	public void actualizarInformacion(String sTipo,Boolean conParametroObjeto,BodegaProducto bodegaproductoLocal) throws Exception {
		
		if(!conParametroObjeto) {
			if(!this.getEsControlTabla()) {
				bodegaproductoLocal=this.bodegaproducto;
			} else {
				bodegaproductoLocal=this.bodegaproductoAnterior;
			}
		}
		
		if(this.permiteMantenimiento(bodegaproductoLocal)) {
			if(sTipo.equals("EVENTO_CONTROL")) { // || sTipo.equals("EVENTO_NUEVO")
				if(!this.esControlTabla) {
					this.setVariablesFormularioToObjetoActualTodoBodegaProducto(bodegaproductoLocal,true);
					
					if(bodegaproductoSessionBean.getConGuardarRelaciones()) {
						this.actualizarRelaciones(bodegaproductoLocal);
					}
				}
			
			} else if(sTipo.equals("INFO_PADRE")) {
				
				if(this.bodegaproductoSessionBean.getEsGuardarRelacionado()) {
					this.actualizarRelacionFkPadreActual(bodegaproductoLocal);
				}
			}
		}
	}
	
	public void setVariablesFormularioToObjetoActualTodoBodegaProducto(BodegaProducto bodegaproducto,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualBodegaProducto(bodegaproducto,conColumnasBase);
		this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(bodegaproducto);
	}
	
	public void setVariablesFormularioToObjetoActualBodegaProducto(BodegaProducto bodegaproducto,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualBodegaProducto(bodegaproducto,conColumnasBase,true);
	}
	
	public void setVariablesFormularioToObjetoActualBodegaProducto(BodegaProducto bodegaproducto,Boolean conColumnasBase,Boolean conInicializarInvalidValues) throws Exception { 
		String sMensajeCampoActual="";
		Boolean estaValidado=true;
		try {
			
			if(this.jInternalFrameDetalleFormBodegaProducto==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			if(conInicializarInvalidValues) {
				this.inicializarInvalidValues();
			}
			
			

		try {
			if(this.jInternalFrameDetalleFormBodegaProducto.jLabelidBodegaProducto.getText()==null || this.jInternalFrameDetalleFormBodegaProducto.jLabelidBodegaProducto.getText()=="" || this.jInternalFrameDetalleFormBodegaProducto.jLabelidBodegaProducto.getText()=="Id") {
				this.jInternalFrameDetalleFormBodegaProducto.jLabelidBodegaProducto.setText("0");
			}

			if(conColumnasBase) {bodegaproducto.setId(Long.parseLong(this.jInternalFrameDetalleFormBodegaProducto.jLabelidBodegaProducto.getText()));}
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+BodegaProductoConstantesFunciones.LABEL_ID+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabelIdBodegaProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			bodegaproducto.setdescripcion(this.jInternalFrameDetalleFormBodegaProducto.jTextAreadescripcionBodegaProducto.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+BodegaProductoConstantesFunciones.LABEL_DESCRIPCION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabeldescripcionBodegaProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			bodegaproducto.setcantidad_disponible(Integer.parseInt(this.jInternalFrameDetalleFormBodegaProducto.jTextFieldcantidad_disponibleBodegaProducto.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+BodegaProductoConstantesFunciones.LABEL_CANTIDADDISPONIBLE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabelcantidad_disponibleBodegaProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			bodegaproducto.setstock_maximo(Integer.parseInt(this.jInternalFrameDetalleFormBodegaProducto.jTextFieldstock_maximoBodegaProducto.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+BodegaProductoConstantesFunciones.LABEL_STOCKMAXIMO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabelstock_maximoBodegaProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			bodegaproducto.setstock_minimo(Integer.parseInt(this.jInternalFrameDetalleFormBodegaProducto.jTextFieldstock_minimoBodegaProducto.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+BodegaProductoConstantesFunciones.LABEL_STOCKMINIMO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabelstock_minimoBodegaProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			bodegaproducto.setiva(Double.parseDouble(this.jInternalFrameDetalleFormBodegaProducto.jTextFieldivaBodegaProducto.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+BodegaProductoConstantesFunciones.LABEL_IVA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabelivaBodegaProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			bodegaproducto.setiva_valor(Double.parseDouble(this.jInternalFrameDetalleFormBodegaProducto.jTextFieldiva_valorBodegaProducto.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+BodegaProductoConstantesFunciones.LABEL_IVAVALOR+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabeliva_valorBodegaProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			bodegaproducto.setdescuento(Double.parseDouble(this.jInternalFrameDetalleFormBodegaProducto.jTextFielddescuentoBodegaProducto.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+BodegaProductoConstantesFunciones.LABEL_DESCUENTO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabeldescuentoBodegaProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			bodegaproducto.setdescuento_valor(Double.parseDouble(this.jInternalFrameDetalleFormBodegaProducto.jTextFielddescuento_valorBodegaProducto.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+BodegaProductoConstantesFunciones.LABEL_DESCUENTOVALOR+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabeldescuento_valorBodegaProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			bodegaproducto.setice(Double.parseDouble(this.jInternalFrameDetalleFormBodegaProducto.jTextFieldiceBodegaProducto.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+BodegaProductoConstantesFunciones.LABEL_ICE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabeliceBodegaProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			bodegaproducto.setice_valor(Double.parseDouble(this.jInternalFrameDetalleFormBodegaProducto.jTextFieldice_valorBodegaProducto.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+BodegaProductoConstantesFunciones.LABEL_ICEVALOR+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabelice_valorBodegaProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			bodegaproducto.setcosto_promedio(Double.parseDouble(this.jInternalFrameDetalleFormBodegaProducto.jTextFieldcosto_promedioBodegaProducto.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+BodegaProductoConstantesFunciones.LABEL_COSTOPROMEDIO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabelcosto_promedioBodegaProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			bodegaproducto.setporcentaje_comision(Double.parseDouble(this.jInternalFrameDetalleFormBodegaProducto.jTextFieldporcentaje_comisionBodegaProducto.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+BodegaProductoConstantesFunciones.LABEL_PORCENTAJECOMISION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabelporcentaje_comisionBodegaProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			bodegaproducto.setprecio(Double.parseDouble(this.jInternalFrameDetalleFormBodegaProducto.jTextFieldprecioBodegaProducto.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+BodegaProductoConstantesFunciones.LABEL_PRECIO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabelprecioBodegaProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			bodegaproducto.setultimo_costo(Double.parseDouble(this.jInternalFrameDetalleFormBodegaProducto.jTextFieldultimo_costoBodegaProducto.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+BodegaProductoConstantesFunciones.LABEL_ULTIMOCOSTO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabelultimo_costoBodegaProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			bodegaproducto.setcosto(Double.parseDouble(this.jInternalFrameDetalleFormBodegaProducto.jTextFieldcostoBodegaProducto.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+BodegaProductoConstantesFunciones.LABEL_COSTO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabelcostoBodegaProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			bodegaproducto.setarancel_porcentaje(Double.parseDouble(this.jInternalFrameDetalleFormBodegaProducto.jTextFieldarancel_porcentajeBodegaProducto.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+BodegaProductoConstantesFunciones.LABEL_ARANCELPORCENTAJE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabelarancel_porcentajeBodegaProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			bodegaproducto.setice_porcentaje(Double.parseDouble(this.jInternalFrameDetalleFormBodegaProducto.jTextFieldice_porcentajeBodegaProducto.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+BodegaProductoConstantesFunciones.LABEL_ICEPORCENTAJE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabelice_porcentajeBodegaProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			bodegaproducto.setpeso(Double.parseDouble(this.jInternalFrameDetalleFormBodegaProducto.jTextFieldpesoBodegaProducto.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+BodegaProductoConstantesFunciones.LABEL_PESO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabelpesoBodegaProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			bodegaproducto.setcon_iva(this.jInternalFrameDetalleFormBodegaProducto.jCheckBoxcon_ivaBodegaProducto.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+BodegaProductoConstantesFunciones.LABEL_CONIVA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabelcon_ivaBodegaProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			bodegaproducto.setcon_impuesto(this.jInternalFrameDetalleFormBodegaProducto.jCheckBoxcon_impuestoBodegaProducto.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+BodegaProductoConstantesFunciones.LABEL_CONIMPUESTO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabelcon_impuestoBodegaProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			bodegaproducto.setcon_ice(this.jInternalFrameDetalleFormBodegaProducto.jCheckBoxcon_iceBodegaProducto.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+BodegaProductoConstantesFunciones.LABEL_CONICE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabelcon_iceBodegaProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			bodegaproducto.setesta_activo(this.jInternalFrameDetalleFormBodegaProducto.jCheckBoxesta_activoBodegaProducto.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+BodegaProductoConstantesFunciones.LABEL_ESTAACTIVO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabelesta_activoBodegaProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			bodegaproducto.setcon_balanza(this.jInternalFrameDetalleFormBodegaProducto.jCheckBoxcon_balanzaBodegaProducto.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+BodegaProductoConstantesFunciones.LABEL_CONBALANZA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabelcon_balanzaBodegaProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			bodegaproducto.setcantidad_pedida(Integer.parseInt(this.jInternalFrameDetalleFormBodegaProducto.jTextFieldcantidad_pedidaBodegaProducto.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+BodegaProductoConstantesFunciones.LABEL_CANTIDADPEDIDA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabelcantidad_pedidaBodegaProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			bodegaproducto.setcantidad_fisica(Integer.parseInt(this.jInternalFrameDetalleFormBodegaProducto.jTextFieldcantidad_fisicaBodegaProducto.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+BodegaProductoConstantesFunciones.LABEL_CANTIDADFISICA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabelcantidad_fisicaBodegaProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			bodegaproducto.setcantidad_requerido(Integer.parseInt(this.jInternalFrameDetalleFormBodegaProducto.jTextFieldcantidad_requeridoBodegaProducto.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+BodegaProductoConstantesFunciones.LABEL_CANTIDADREQUERIDO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabelcantidad_requeridoBodegaProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			bodegaproducto.setprecio_costo(Double.parseDouble(this.jInternalFrameDetalleFormBodegaProducto.jTextFieldprecio_costoBodegaProducto.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+BodegaProductoConstantesFunciones.LABEL_PRECIOCOSTO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabelprecio_costoBodegaProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			bodegaproducto.setprecio_promedio(Double.parseDouble(this.jInternalFrameDetalleFormBodegaProducto.jTextFieldprecio_promedioBodegaProducto.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+BodegaProductoConstantesFunciones.LABEL_PRECIOPROMEDIO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabelprecio_promedioBodegaProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			bodegaproducto.settotal_ingresos(Integer.parseInt(this.jInternalFrameDetalleFormBodegaProducto.jTextFieldtotal_ingresosBodegaProducto.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+BodegaProductoConstantesFunciones.LABEL_TOTALINGRESOS+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabeltotal_ingresosBodegaProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			bodegaproducto.settotal_egresos(Integer.parseInt(this.jInternalFrameDetalleFormBodegaProducto.jTextFieldtotal_egresosBodegaProducto.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+BodegaProductoConstantesFunciones.LABEL_TOTALEGRESOS+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabeltotal_egresosBodegaProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			bodegaproducto.settotal_provision(Double.parseDouble(this.jInternalFrameDetalleFormBodegaProducto.jTextFieldtotal_provisionBodegaProducto.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+BodegaProductoConstantesFunciones.LABEL_TOTALPROVISION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabeltotal_provisionBodegaProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			bodegaproducto.settotal_proceso(Double.parseDouble(this.jInternalFrameDetalleFormBodegaProducto.jTextFieldtotal_procesoBodegaProducto.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+BodegaProductoConstantesFunciones.LABEL_TOTALPROCESO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabeltotal_procesoBodegaProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			bodegaproducto.setcosto_calculado(Double.parseDouble(this.jInternalFrameDetalleFormBodegaProducto.jTextFieldcosto_calculadoBodegaProducto.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+BodegaProductoConstantesFunciones.LABEL_COSTOCALCULADO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabelcosto_calculadoBodegaProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			bodegaproducto.setdias_produccion(Double.parseDouble(this.jInternalFrameDetalleFormBodegaProducto.jTextFielddias_produccionBodegaProducto.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+BodegaProductoConstantesFunciones.LABEL_DIASPRODUCCION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabeldias_produccionBodegaProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			bodegaproducto.setprecio_reposicion(Double.parseDouble(this.jInternalFrameDetalleFormBodegaProducto.jTextFieldprecio_reposicionBodegaProducto.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+BodegaProductoConstantesFunciones.LABEL_PRECIOREPOSICION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabelprecio_reposicionBodegaProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			bodegaproducto.setfecha_ultimo_pedido(this.jInternalFrameDetalleFormBodegaProducto.jDateChooserfecha_ultimo_pedidoBodegaProducto.getDate());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+BodegaProductoConstantesFunciones.LABEL_FECHAULTIMOPEDIDO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabelfecha_ultimo_pedidoBodegaProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			bodegaproducto.setfecha_ingreso(this.jInternalFrameDetalleFormBodegaProducto.jDateChooserfecha_ingresoBodegaProducto.getDate());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+BodegaProductoConstantesFunciones.LABEL_FECHAINGRESO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabelfecha_ingresoBodegaProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			bodegaproducto.setfecha_egreso(this.jInternalFrameDetalleFormBodegaProducto.jDateChooserfecha_egresoBodegaProducto.getDate());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+BodegaProductoConstantesFunciones.LABEL_FECHAEGRESO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabelfecha_egresoBodegaProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			bodegaproducto.setfecha_ultima_compra(this.jInternalFrameDetalleFormBodegaProducto.jDateChooserfecha_ultima_compraBodegaProducto.getDate());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+BodegaProductoConstantesFunciones.LABEL_FECHAULTIMACOMPRA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabelfecha_ultima_compraBodegaProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			bodegaproducto.setfecha_ultima_venta(this.jInternalFrameDetalleFormBodegaProducto.jDateChooserfecha_ultima_ventaBodegaProducto.getDate());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+BodegaProductoConstantesFunciones.LABEL_FECHAULTIMAVENTA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabelfecha_ultima_ventaBodegaProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			bodegaproducto.setfecha_ultima_devolucion(this.jInternalFrameDetalleFormBodegaProducto.jDateChooserfecha_ultima_devolucionBodegaProducto.getDate());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+BodegaProductoConstantesFunciones.LABEL_FECHAULTIMADEVOLUCION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormBodegaProducto.jLabelfecha_ultima_devolucionBodegaProducto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}
			
			if(!estaValidado) {
				throw new Exception(sMensajeCampoActual);
			}
		} catch(NumberFormatException e) {
			throw new Exception(sMensajeCampoActual);
			//FuncionesSwing.manageException(this, e,logger,MovimientoInventarioConstantesFunciones.CLASSNAME);
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualBodegaProducto(BodegaProducto bodegaproductoBean,BodegaProducto bodegaproducto,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			if(conDefault || (!conDefault && bodegaproductoBean.getid_bodega()!=null && !bodegaproductoBean.getid_bodega().equals(-1L))) {bodegaproducto.setid_bodega(bodegaproductoBean.getid_bodega());}
			if(conDefault || (!conDefault && bodegaproductoBean.getid_producto()!=null && !bodegaproductoBean.getid_producto().equals(-1L))) {bodegaproducto.setid_producto(bodegaproductoBean.getid_producto());}
			if(conDefault || (!conDefault && bodegaproductoBean.getid_unidad()!=null && !bodegaproductoBean.getid_unidad().equals(-1L))) {bodegaproducto.setid_unidad(bodegaproductoBean.getid_unidad());}
			if(conDefault || (!conDefault && bodegaproductoBean.getid_centro_costo()!=null && !bodegaproductoBean.getid_centro_costo().equals(null))) {bodegaproducto.setid_centro_costo(bodegaproductoBean.getid_centro_costo());}
			if(conDefault || (!conDefault && bodegaproductoBean.getid_estado_bodega_producto()!=null && !bodegaproductoBean.getid_estado_bodega_producto().equals(-1L))) {bodegaproducto.setid_estado_bodega_producto(bodegaproductoBean.getid_estado_bodega_producto());}
			if(conDefault || (!conDefault && bodegaproductoBean.getid_cuenta_contable_inventario()!=null && !bodegaproductoBean.getid_cuenta_contable_inventario().equals(-1L))) {bodegaproducto.setid_cuenta_contable_inventario(bodegaproductoBean.getid_cuenta_contable_inventario());}
			if(conDefault || (!conDefault && bodegaproductoBean.getid_cuenta_contable_costo_venta()!=null && !bodegaproductoBean.getid_cuenta_contable_costo_venta().equals(-1L))) {bodegaproducto.setid_cuenta_contable_costo_venta(bodegaproductoBean.getid_cuenta_contable_costo_venta());}
			if(conDefault || (!conDefault && bodegaproductoBean.getid_cuenta_contable_venta()!=null && !bodegaproductoBean.getid_cuenta_contable_venta().equals(-1L))) {bodegaproducto.setid_cuenta_contable_venta(bodegaproductoBean.getid_cuenta_contable_venta());}
			if(conDefault || (!conDefault && bodegaproductoBean.getid_cuenta_contable_descuento()!=null && !bodegaproductoBean.getid_cuenta_contable_descuento().equals(-1L))) {bodegaproducto.setid_cuenta_contable_descuento(bodegaproductoBean.getid_cuenta_contable_descuento());}
			if(conDefault || (!conDefault && bodegaproductoBean.getid_cuenta_contable_produccion()!=null && !bodegaproductoBean.getid_cuenta_contable_produccion().equals(-1L))) {bodegaproducto.setid_cuenta_contable_produccion(bodegaproductoBean.getid_cuenta_contable_produccion());}
			if(conDefault || (!conDefault && bodegaproductoBean.getid_cuenta_contable_devolucion()!=null && !bodegaproductoBean.getid_cuenta_contable_devolucion().equals(-1L))) {bodegaproducto.setid_cuenta_contable_devolucion(bodegaproductoBean.getid_cuenta_contable_devolucion());}
			if(conDefault || (!conDefault && bodegaproductoBean.getid_cuenta_contable_ingreso_debito()!=null && !bodegaproductoBean.getid_cuenta_contable_ingreso_debito().equals(-1L))) {bodegaproducto.setid_cuenta_contable_ingreso_debito(bodegaproductoBean.getid_cuenta_contable_ingreso_debito());}
			if(conDefault || (!conDefault && bodegaproductoBean.getid_cuenta_contable_ingreso_credito()!=null && !bodegaproductoBean.getid_cuenta_contable_ingreso_credito().equals(-1L))) {bodegaproducto.setid_cuenta_contable_ingreso_credito(bodegaproductoBean.getid_cuenta_contable_ingreso_credito());}
			if(conDefault || (!conDefault && bodegaproductoBean.getid_cuenta_contable_resultado_debito()!=null && !bodegaproductoBean.getid_cuenta_contable_resultado_debito().equals(-1L))) {bodegaproducto.setid_cuenta_contable_resultado_debito(bodegaproductoBean.getid_cuenta_contable_resultado_debito());}
			if(conDefault || (!conDefault && bodegaproductoBean.getid_cuenta_contable_resultado_credito()!=null && !bodegaproductoBean.getid_cuenta_contable_resultado_credito().equals(-1L))) {bodegaproducto.setid_cuenta_contable_resultado_credito(bodegaproductoBean.getid_cuenta_contable_resultado_credito());}
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setCopiarVariablesObjetosBodegaProducto(BodegaProducto bodegaproductoOrigen,BodegaProducto bodegaproducto,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			if(conColumnasBase) {if(conDefault || (!conDefault && bodegaproductoOrigen.getId()!=null && !bodegaproductoOrigen.getId().equals(0L))) {bodegaproducto.setId(bodegaproductoOrigen.getId());}}
			if(conDefault || (!conDefault && bodegaproductoOrigen.getid_bodega()!=null && !bodegaproductoOrigen.getid_bodega().equals(-1L))) {bodegaproducto.setid_bodega(bodegaproductoOrigen.getid_bodega());}
			if(conDefault || (!conDefault && bodegaproductoOrigen.getid_producto()!=null && !bodegaproductoOrigen.getid_producto().equals(-1L))) {bodegaproducto.setid_producto(bodegaproductoOrigen.getid_producto());}
			if(conDefault || (!conDefault && bodegaproductoOrigen.getid_unidad()!=null && !bodegaproductoOrigen.getid_unidad().equals(-1L))) {bodegaproducto.setid_unidad(bodegaproductoOrigen.getid_unidad());}
			if(conDefault || (!conDefault && bodegaproductoOrigen.getid_centro_costo()!=null && !bodegaproductoOrigen.getid_centro_costo().equals(null))) {bodegaproducto.setid_centro_costo(bodegaproductoOrigen.getid_centro_costo());}
			if(conDefault || (!conDefault && bodegaproductoOrigen.getid_estado_bodega_producto()!=null && !bodegaproductoOrigen.getid_estado_bodega_producto().equals(-1L))) {bodegaproducto.setid_estado_bodega_producto(bodegaproductoOrigen.getid_estado_bodega_producto());}
			if(conDefault || (!conDefault && bodegaproductoOrigen.getdescripcion()!=null && !bodegaproductoOrigen.getdescripcion().equals(""))) {bodegaproducto.setdescripcion(bodegaproductoOrigen.getdescripcion());}
			if(conDefault || (!conDefault && bodegaproductoOrigen.getcantidad_disponible()!=null && !bodegaproductoOrigen.getcantidad_disponible().equals(0))) {bodegaproducto.setcantidad_disponible(bodegaproductoOrigen.getcantidad_disponible());}
			if(conDefault || (!conDefault && bodegaproductoOrigen.getstock_maximo()!=null && !bodegaproductoOrigen.getstock_maximo().equals(0))) {bodegaproducto.setstock_maximo(bodegaproductoOrigen.getstock_maximo());}
			if(conDefault || (!conDefault && bodegaproductoOrigen.getstock_minimo()!=null && !bodegaproductoOrigen.getstock_minimo().equals(0))) {bodegaproducto.setstock_minimo(bodegaproductoOrigen.getstock_minimo());}
			if(conDefault || (!conDefault && bodegaproductoOrigen.getiva()!=null && !bodegaproductoOrigen.getiva().equals(0.0))) {bodegaproducto.setiva(bodegaproductoOrigen.getiva());}
			if(conDefault || (!conDefault && bodegaproductoOrigen.getiva_valor()!=null && !bodegaproductoOrigen.getiva_valor().equals(0.0))) {bodegaproducto.setiva_valor(bodegaproductoOrigen.getiva_valor());}
			if(conDefault || (!conDefault && bodegaproductoOrigen.getdescuento()!=null && !bodegaproductoOrigen.getdescuento().equals(0.0))) {bodegaproducto.setdescuento(bodegaproductoOrigen.getdescuento());}
			if(conDefault || (!conDefault && bodegaproductoOrigen.getdescuento_valor()!=null && !bodegaproductoOrigen.getdescuento_valor().equals(0.0))) {bodegaproducto.setdescuento_valor(bodegaproductoOrigen.getdescuento_valor());}
			if(conDefault || (!conDefault && bodegaproductoOrigen.getice()!=null && !bodegaproductoOrigen.getice().equals(0.0))) {bodegaproducto.setice(bodegaproductoOrigen.getice());}
			if(conDefault || (!conDefault && bodegaproductoOrigen.getice_valor()!=null && !bodegaproductoOrigen.getice_valor().equals(0.0))) {bodegaproducto.setice_valor(bodegaproductoOrigen.getice_valor());}
			if(conDefault || (!conDefault && bodegaproductoOrigen.getcosto_promedio()!=null && !bodegaproductoOrigen.getcosto_promedio().equals(0.0))) {bodegaproducto.setcosto_promedio(bodegaproductoOrigen.getcosto_promedio());}
			if(conDefault || (!conDefault && bodegaproductoOrigen.getporcentaje_comision()!=null && !bodegaproductoOrigen.getporcentaje_comision().equals(0.0))) {bodegaproducto.setporcentaje_comision(bodegaproductoOrigen.getporcentaje_comision());}
			if(conDefault || (!conDefault && bodegaproductoOrigen.getprecio()!=null && !bodegaproductoOrigen.getprecio().equals(0.0))) {bodegaproducto.setprecio(bodegaproductoOrigen.getprecio());}
			if(conDefault || (!conDefault && bodegaproductoOrigen.getultimo_costo()!=null && !bodegaproductoOrigen.getultimo_costo().equals(0.0))) {bodegaproducto.setultimo_costo(bodegaproductoOrigen.getultimo_costo());}
			if(conDefault || (!conDefault && bodegaproductoOrigen.getcosto()!=null && !bodegaproductoOrigen.getcosto().equals(0.0))) {bodegaproducto.setcosto(bodegaproductoOrigen.getcosto());}
			if(conDefault || (!conDefault && bodegaproductoOrigen.getarancel_porcentaje()!=null && !bodegaproductoOrigen.getarancel_porcentaje().equals(0.0))) {bodegaproducto.setarancel_porcentaje(bodegaproductoOrigen.getarancel_porcentaje());}
			if(conDefault || (!conDefault && bodegaproductoOrigen.getice_porcentaje()!=null && !bodegaproductoOrigen.getice_porcentaje().equals(0.0))) {bodegaproducto.setice_porcentaje(bodegaproductoOrigen.getice_porcentaje());}
			if(conDefault || (!conDefault && bodegaproductoOrigen.getpeso()!=null && !bodegaproductoOrigen.getpeso().equals(0.0))) {bodegaproducto.setpeso(bodegaproductoOrigen.getpeso());}
			if(conDefault || (!conDefault && bodegaproductoOrigen.getcon_iva()!=null && !bodegaproductoOrigen.getcon_iva().equals(false))) {bodegaproducto.setcon_iva(bodegaproductoOrigen.getcon_iva());}
			if(conDefault || (!conDefault && bodegaproductoOrigen.getcon_impuesto()!=null && !bodegaproductoOrigen.getcon_impuesto().equals(false))) {bodegaproducto.setcon_impuesto(bodegaproductoOrigen.getcon_impuesto());}
			if(conDefault || (!conDefault && bodegaproductoOrigen.getcon_ice()!=null && !bodegaproductoOrigen.getcon_ice().equals(false))) {bodegaproducto.setcon_ice(bodegaproductoOrigen.getcon_ice());}
			if(conDefault || (!conDefault && bodegaproductoOrigen.getesta_activo()!=null && !bodegaproductoOrigen.getesta_activo().equals(false))) {bodegaproducto.setesta_activo(bodegaproductoOrigen.getesta_activo());}
			if(conDefault || (!conDefault && bodegaproductoOrigen.getcon_balanza()!=null && !bodegaproductoOrigen.getcon_balanza().equals(false))) {bodegaproducto.setcon_balanza(bodegaproductoOrigen.getcon_balanza());}
			if(conDefault || (!conDefault && bodegaproductoOrigen.getcantidad_pedida()!=null && !bodegaproductoOrigen.getcantidad_pedida().equals(0))) {bodegaproducto.setcantidad_pedida(bodegaproductoOrigen.getcantidad_pedida());}
			if(conDefault || (!conDefault && bodegaproductoOrigen.getcantidad_fisica()!=null && !bodegaproductoOrigen.getcantidad_fisica().equals(0))) {bodegaproducto.setcantidad_fisica(bodegaproductoOrigen.getcantidad_fisica());}
			if(conDefault || (!conDefault && bodegaproductoOrigen.getcantidad_requerido()!=null && !bodegaproductoOrigen.getcantidad_requerido().equals(0))) {bodegaproducto.setcantidad_requerido(bodegaproductoOrigen.getcantidad_requerido());}
			if(conDefault || (!conDefault && bodegaproductoOrigen.getprecio_costo()!=null && !bodegaproductoOrigen.getprecio_costo().equals(0.0))) {bodegaproducto.setprecio_costo(bodegaproductoOrigen.getprecio_costo());}
			if(conDefault || (!conDefault && bodegaproductoOrigen.getprecio_promedio()!=null && !bodegaproductoOrigen.getprecio_promedio().equals(0.0))) {bodegaproducto.setprecio_promedio(bodegaproductoOrigen.getprecio_promedio());}
			if(conDefault || (!conDefault && bodegaproductoOrigen.gettotal_ingresos()!=null && !bodegaproductoOrigen.gettotal_ingresos().equals(0))) {bodegaproducto.settotal_ingresos(bodegaproductoOrigen.gettotal_ingresos());}
			if(conDefault || (!conDefault && bodegaproductoOrigen.gettotal_egresos()!=null && !bodegaproductoOrigen.gettotal_egresos().equals(0))) {bodegaproducto.settotal_egresos(bodegaproductoOrigen.gettotal_egresos());}
			if(conDefault || (!conDefault && bodegaproductoOrigen.gettotal_provision()!=null && !bodegaproductoOrigen.gettotal_provision().equals(0.0))) {bodegaproducto.settotal_provision(bodegaproductoOrigen.gettotal_provision());}
			if(conDefault || (!conDefault && bodegaproductoOrigen.gettotal_proceso()!=null && !bodegaproductoOrigen.gettotal_proceso().equals(0.0))) {bodegaproducto.settotal_proceso(bodegaproductoOrigen.gettotal_proceso());}
			if(conDefault || (!conDefault && bodegaproductoOrigen.getcosto_calculado()!=null && !bodegaproductoOrigen.getcosto_calculado().equals(0.0))) {bodegaproducto.setcosto_calculado(bodegaproductoOrigen.getcosto_calculado());}
			if(conDefault || (!conDefault && bodegaproductoOrigen.getdias_produccion()!=null && !bodegaproductoOrigen.getdias_produccion().equals(0.0))) {bodegaproducto.setdias_produccion(bodegaproductoOrigen.getdias_produccion());}
			if(conDefault || (!conDefault && bodegaproductoOrigen.getprecio_reposicion()!=null && !bodegaproductoOrigen.getprecio_reposicion().equals(0.0))) {bodegaproducto.setprecio_reposicion(bodegaproductoOrigen.getprecio_reposicion());}
			if(conDefault || (!conDefault && bodegaproductoOrigen.getfecha_ultimo_pedido()!=null && !bodegaproductoOrigen.getfecha_ultimo_pedido().equals(new Date()))) {bodegaproducto.setfecha_ultimo_pedido(bodegaproductoOrigen.getfecha_ultimo_pedido());}
			if(conDefault || (!conDefault && bodegaproductoOrigen.getfecha_ingreso()!=null && !bodegaproductoOrigen.getfecha_ingreso().equals(new Date()))) {bodegaproducto.setfecha_ingreso(bodegaproductoOrigen.getfecha_ingreso());}
			if(conDefault || (!conDefault && bodegaproductoOrigen.getfecha_egreso()!=null && !bodegaproductoOrigen.getfecha_egreso().equals(new Date()))) {bodegaproducto.setfecha_egreso(bodegaproductoOrigen.getfecha_egreso());}
			if(conDefault || (!conDefault && bodegaproductoOrigen.getfecha_ultima_compra()!=null && !bodegaproductoOrigen.getfecha_ultima_compra().equals(new Date()))) {bodegaproducto.setfecha_ultima_compra(bodegaproductoOrigen.getfecha_ultima_compra());}
			if(conDefault || (!conDefault && bodegaproductoOrigen.getfecha_ultima_venta()!=null && !bodegaproductoOrigen.getfecha_ultima_venta().equals(new Date()))) {bodegaproducto.setfecha_ultima_venta(bodegaproductoOrigen.getfecha_ultima_venta());}
			if(conDefault || (!conDefault && bodegaproductoOrigen.getfecha_ultima_devolucion()!=null && !bodegaproductoOrigen.getfecha_ultima_devolucion().equals(new Date()))) {bodegaproducto.setfecha_ultima_devolucion(bodegaproductoOrigen.getfecha_ultima_devolucion());}
			if(conDefault || (!conDefault && bodegaproductoOrigen.getid_cuenta_contable_inventario()!=null && !bodegaproductoOrigen.getid_cuenta_contable_inventario().equals(-1L))) {bodegaproducto.setid_cuenta_contable_inventario(bodegaproductoOrigen.getid_cuenta_contable_inventario());}
			if(conDefault || (!conDefault && bodegaproductoOrigen.getid_cuenta_contable_costo_venta()!=null && !bodegaproductoOrigen.getid_cuenta_contable_costo_venta().equals(-1L))) {bodegaproducto.setid_cuenta_contable_costo_venta(bodegaproductoOrigen.getid_cuenta_contable_costo_venta());}
			if(conDefault || (!conDefault && bodegaproductoOrigen.getid_cuenta_contable_venta()!=null && !bodegaproductoOrigen.getid_cuenta_contable_venta().equals(-1L))) {bodegaproducto.setid_cuenta_contable_venta(bodegaproductoOrigen.getid_cuenta_contable_venta());}
			if(conDefault || (!conDefault && bodegaproductoOrigen.getid_cuenta_contable_descuento()!=null && !bodegaproductoOrigen.getid_cuenta_contable_descuento().equals(-1L))) {bodegaproducto.setid_cuenta_contable_descuento(bodegaproductoOrigen.getid_cuenta_contable_descuento());}
			if(conDefault || (!conDefault && bodegaproductoOrigen.getid_cuenta_contable_produccion()!=null && !bodegaproductoOrigen.getid_cuenta_contable_produccion().equals(-1L))) {bodegaproducto.setid_cuenta_contable_produccion(bodegaproductoOrigen.getid_cuenta_contable_produccion());}
			if(conDefault || (!conDefault && bodegaproductoOrigen.getid_cuenta_contable_devolucion()!=null && !bodegaproductoOrigen.getid_cuenta_contable_devolucion().equals(-1L))) {bodegaproducto.setid_cuenta_contable_devolucion(bodegaproductoOrigen.getid_cuenta_contable_devolucion());}
			if(conDefault || (!conDefault && bodegaproductoOrigen.getid_cuenta_contable_ingreso_debito()!=null && !bodegaproductoOrigen.getid_cuenta_contable_ingreso_debito().equals(-1L))) {bodegaproducto.setid_cuenta_contable_ingreso_debito(bodegaproductoOrigen.getid_cuenta_contable_ingreso_debito());}
			if(conDefault || (!conDefault && bodegaproductoOrigen.getid_cuenta_contable_ingreso_credito()!=null && !bodegaproductoOrigen.getid_cuenta_contable_ingreso_credito().equals(-1L))) {bodegaproducto.setid_cuenta_contable_ingreso_credito(bodegaproductoOrigen.getid_cuenta_contable_ingreso_credito());}
			if(conDefault || (!conDefault && bodegaproductoOrigen.getid_cuenta_contable_resultado_debito()!=null && !bodegaproductoOrigen.getid_cuenta_contable_resultado_debito().equals(-1L))) {bodegaproducto.setid_cuenta_contable_resultado_debito(bodegaproductoOrigen.getid_cuenta_contable_resultado_debito());}
			if(conDefault || (!conDefault && bodegaproductoOrigen.getid_cuenta_contable_resultado_credito()!=null && !bodegaproductoOrigen.getid_cuenta_contable_resultado_credito().equals(-1L))) {bodegaproducto.setid_cuenta_contable_resultado_credito(bodegaproductoOrigen.getid_cuenta_contable_resultado_credito());}
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	/*
	public void setVariablesObjetoBeanActualToFormularioBodegaProducto(BodegaProducto bodegaproducto) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormBodegaProducto.jLabelidBodegaProducto.setText(bodegaproducto.getId().toString());
			this.jInternalFrameDetalleFormBodegaProducto.jTextAreadescripcionBodegaProducto.setText(bodegaproducto.getdescripcion());
			this.jInternalFrameDetalleFormBodegaProducto.jTextFieldcantidad_disponibleBodegaProducto.setText(bodegaproducto.getcantidad_disponible().toString());
			this.jInternalFrameDetalleFormBodegaProducto.jTextFieldstock_maximoBodegaProducto.setText(bodegaproducto.getstock_maximo().toString());
			this.jInternalFrameDetalleFormBodegaProducto.jTextFieldstock_minimoBodegaProducto.setText(bodegaproducto.getstock_minimo().toString());
			this.jInternalFrameDetalleFormBodegaProducto.jTextFieldivaBodegaProducto.setText(bodegaproducto.getiva().toString());
			this.jInternalFrameDetalleFormBodegaProducto.jTextFieldiva_valorBodegaProducto.setText(bodegaproducto.getiva_valor().toString());
			this.jInternalFrameDetalleFormBodegaProducto.jTextFielddescuentoBodegaProducto.setText(bodegaproducto.getdescuento().toString());
			this.jInternalFrameDetalleFormBodegaProducto.jTextFielddescuento_valorBodegaProducto.setText(bodegaproducto.getdescuento_valor().toString());
			this.jInternalFrameDetalleFormBodegaProducto.jTextFieldiceBodegaProducto.setText(bodegaproducto.getice().toString());
			this.jInternalFrameDetalleFormBodegaProducto.jTextFieldice_valorBodegaProducto.setText(bodegaproducto.getice_valor().toString());
			this.jInternalFrameDetalleFormBodegaProducto.jTextFieldcosto_promedioBodegaProducto.setText(bodegaproducto.getcosto_promedio().toString());
			this.jInternalFrameDetalleFormBodegaProducto.jTextFieldporcentaje_comisionBodegaProducto.setText(bodegaproducto.getporcentaje_comision().toString());
			this.jInternalFrameDetalleFormBodegaProducto.jTextFieldprecioBodegaProducto.setText(bodegaproducto.getprecio().toString());
			this.jInternalFrameDetalleFormBodegaProducto.jTextFieldultimo_costoBodegaProducto.setText(bodegaproducto.getultimo_costo().toString());
			this.jInternalFrameDetalleFormBodegaProducto.jTextFieldcostoBodegaProducto.setText(bodegaproducto.getcosto().toString());
			this.jInternalFrameDetalleFormBodegaProducto.jTextFieldarancel_porcentajeBodegaProducto.setText(bodegaproducto.getarancel_porcentaje().toString());
			this.jInternalFrameDetalleFormBodegaProducto.jTextFieldice_porcentajeBodegaProducto.setText(bodegaproducto.getice_porcentaje().toString());
			this.jInternalFrameDetalleFormBodegaProducto.jTextFieldpesoBodegaProducto.setText(bodegaproducto.getpeso().toString());
			this.jInternalFrameDetalleFormBodegaProducto.jCheckBoxcon_ivaBodegaProducto.setSelected(bodegaproducto.getcon_iva());
			this.jInternalFrameDetalleFormBodegaProducto.jCheckBoxcon_impuestoBodegaProducto.setSelected(bodegaproducto.getcon_impuesto());
			this.jInternalFrameDetalleFormBodegaProducto.jCheckBoxcon_iceBodegaProducto.setSelected(bodegaproducto.getcon_ice());
			this.jInternalFrameDetalleFormBodegaProducto.jCheckBoxesta_activoBodegaProducto.setSelected(bodegaproducto.getesta_activo());
			this.jInternalFrameDetalleFormBodegaProducto.jCheckBoxcon_balanzaBodegaProducto.setSelected(bodegaproducto.getcon_balanza());
			this.jInternalFrameDetalleFormBodegaProducto.jTextFieldcantidad_pedidaBodegaProducto.setText(bodegaproducto.getcantidad_pedida().toString());
			this.jInternalFrameDetalleFormBodegaProducto.jTextFieldcantidad_fisicaBodegaProducto.setText(bodegaproducto.getcantidad_fisica().toString());
			this.jInternalFrameDetalleFormBodegaProducto.jTextFieldcantidad_requeridoBodegaProducto.setText(bodegaproducto.getcantidad_requerido().toString());
			this.jInternalFrameDetalleFormBodegaProducto.jTextFieldprecio_costoBodegaProducto.setText(bodegaproducto.getprecio_costo().toString());
			this.jInternalFrameDetalleFormBodegaProducto.jTextFieldprecio_promedioBodegaProducto.setText(bodegaproducto.getprecio_promedio().toString());
			this.jInternalFrameDetalleFormBodegaProducto.jTextFieldtotal_ingresosBodegaProducto.setText(bodegaproducto.gettotal_ingresos().toString());
			this.jInternalFrameDetalleFormBodegaProducto.jTextFieldtotal_egresosBodegaProducto.setText(bodegaproducto.gettotal_egresos().toString());
			this.jInternalFrameDetalleFormBodegaProducto.jTextFieldtotal_provisionBodegaProducto.setText(bodegaproducto.gettotal_provision().toString());
			this.jInternalFrameDetalleFormBodegaProducto.jTextFieldtotal_procesoBodegaProducto.setText(bodegaproducto.gettotal_proceso().toString());
			this.jInternalFrameDetalleFormBodegaProducto.jTextFieldcosto_calculadoBodegaProducto.setText(bodegaproducto.getcosto_calculado().toString());
			this.jInternalFrameDetalleFormBodegaProducto.jTextFielddias_produccionBodegaProducto.setText(bodegaproducto.getdias_produccion().toString());
			this.jInternalFrameDetalleFormBodegaProducto.jTextFieldprecio_reposicionBodegaProducto.setText(bodegaproducto.getprecio_reposicion().toString());
			this.jInternalFrameDetalleFormBodegaProducto.jDateChooserfecha_ultimo_pedidoBodegaProducto.setDate(bodegaproducto.getfecha_ultimo_pedido());
			this.jInternalFrameDetalleFormBodegaProducto.jDateChooserfecha_ingresoBodegaProducto.setDate(bodegaproducto.getfecha_ingreso());
			this.jInternalFrameDetalleFormBodegaProducto.jDateChooserfecha_egresoBodegaProducto.setDate(bodegaproducto.getfecha_egreso());
			this.jInternalFrameDetalleFormBodegaProducto.jDateChooserfecha_ultima_compraBodegaProducto.setDate(bodegaproducto.getfecha_ultima_compra());
			this.jInternalFrameDetalleFormBodegaProducto.jDateChooserfecha_ultima_ventaBodegaProducto.setDate(bodegaproducto.getfecha_ultima_venta());
			this.jInternalFrameDetalleFormBodegaProducto.jDateChooserfecha_ultima_devolucionBodegaProducto.setDate(bodegaproducto.getfecha_ultima_devolucion());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoBeanActualToFormularioBodegaProducto(BodegaProductoBean bodegaproductoBean) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormBodegaProducto.jLabelidBodegaProducto.setText(bodegaproductoBean.getId().toString());
			this.jInternalFrameDetalleFormBodegaProducto.jTextAreadescripcionBodegaProducto.setText(bodegaproductoBean.getdescripcion());
			this.jInternalFrameDetalleFormBodegaProducto.jTextFieldcantidad_disponibleBodegaProducto.setText(bodegaproductoBean.getcantidad_disponible().toString());
			this.jInternalFrameDetalleFormBodegaProducto.jTextFieldstock_maximoBodegaProducto.setText(bodegaproductoBean.getstock_maximo().toString());
			this.jInternalFrameDetalleFormBodegaProducto.jTextFieldstock_minimoBodegaProducto.setText(bodegaproductoBean.getstock_minimo().toString());
			this.jInternalFrameDetalleFormBodegaProducto.jTextFieldivaBodegaProducto.setText(bodegaproductoBean.getiva().toString());
			this.jInternalFrameDetalleFormBodegaProducto.jTextFieldiva_valorBodegaProducto.setText(bodegaproductoBean.getiva_valor().toString());
			this.jInternalFrameDetalleFormBodegaProducto.jTextFielddescuentoBodegaProducto.setText(bodegaproductoBean.getdescuento().toString());
			this.jInternalFrameDetalleFormBodegaProducto.jTextFielddescuento_valorBodegaProducto.setText(bodegaproductoBean.getdescuento_valor().toString());
			this.jInternalFrameDetalleFormBodegaProducto.jTextFieldiceBodegaProducto.setText(bodegaproductoBean.getice().toString());
			this.jInternalFrameDetalleFormBodegaProducto.jTextFieldice_valorBodegaProducto.setText(bodegaproductoBean.getice_valor().toString());
			this.jInternalFrameDetalleFormBodegaProducto.jTextFieldcosto_promedioBodegaProducto.setText(bodegaproductoBean.getcosto_promedio().toString());
			this.jInternalFrameDetalleFormBodegaProducto.jTextFieldporcentaje_comisionBodegaProducto.setText(bodegaproductoBean.getporcentaje_comision().toString());
			this.jInternalFrameDetalleFormBodegaProducto.jTextFieldprecioBodegaProducto.setText(bodegaproductoBean.getprecio().toString());
			this.jInternalFrameDetalleFormBodegaProducto.jTextFieldultimo_costoBodegaProducto.setText(bodegaproductoBean.getultimo_costo().toString());
			this.jInternalFrameDetalleFormBodegaProducto.jTextFieldcostoBodegaProducto.setText(bodegaproductoBean.getcosto().toString());
			this.jInternalFrameDetalleFormBodegaProducto.jTextFieldarancel_porcentajeBodegaProducto.setText(bodegaproductoBean.getarancel_porcentaje().toString());
			this.jInternalFrameDetalleFormBodegaProducto.jTextFieldice_porcentajeBodegaProducto.setText(bodegaproductoBean.getice_porcentaje().toString());
			this.jInternalFrameDetalleFormBodegaProducto.jTextFieldpesoBodegaProducto.setText(bodegaproductoBean.getpeso().toString());
			this.jInternalFrameDetalleFormBodegaProducto.jCheckBoxcon_ivaBodegaProducto.setSelected(bodegaproductoBean.getcon_iva());
			this.jInternalFrameDetalleFormBodegaProducto.jCheckBoxcon_impuestoBodegaProducto.setSelected(bodegaproductoBean.getcon_impuesto());
			this.jInternalFrameDetalleFormBodegaProducto.jCheckBoxcon_iceBodegaProducto.setSelected(bodegaproductoBean.getcon_ice());
			this.jInternalFrameDetalleFormBodegaProducto.jCheckBoxesta_activoBodegaProducto.setSelected(bodegaproductoBean.getesta_activo());
			this.jInternalFrameDetalleFormBodegaProducto.jCheckBoxcon_balanzaBodegaProducto.setSelected(bodegaproductoBean.getcon_balanza());
			this.jInternalFrameDetalleFormBodegaProducto.jTextFieldcantidad_pedidaBodegaProducto.setText(bodegaproductoBean.getcantidad_pedida().toString());
			this.jInternalFrameDetalleFormBodegaProducto.jTextFieldcantidad_fisicaBodegaProducto.setText(bodegaproductoBean.getcantidad_fisica().toString());
			this.jInternalFrameDetalleFormBodegaProducto.jTextFieldcantidad_requeridoBodegaProducto.setText(bodegaproductoBean.getcantidad_requerido().toString());
			this.jInternalFrameDetalleFormBodegaProducto.jTextFieldprecio_costoBodegaProducto.setText(bodegaproductoBean.getprecio_costo().toString());
			this.jInternalFrameDetalleFormBodegaProducto.jTextFieldprecio_promedioBodegaProducto.setText(bodegaproductoBean.getprecio_promedio().toString());
			this.jInternalFrameDetalleFormBodegaProducto.jTextFieldtotal_ingresosBodegaProducto.setText(bodegaproductoBean.gettotal_ingresos().toString());
			this.jInternalFrameDetalleFormBodegaProducto.jTextFieldtotal_egresosBodegaProducto.setText(bodegaproductoBean.gettotal_egresos().toString());
			this.jInternalFrameDetalleFormBodegaProducto.jTextFieldtotal_provisionBodegaProducto.setText(bodegaproductoBean.gettotal_provision().toString());
			this.jInternalFrameDetalleFormBodegaProducto.jTextFieldtotal_procesoBodegaProducto.setText(bodegaproductoBean.gettotal_proceso().toString());
			this.jInternalFrameDetalleFormBodegaProducto.jTextFieldcosto_calculadoBodegaProducto.setText(bodegaproductoBean.getcosto_calculado().toString());
			this.jInternalFrameDetalleFormBodegaProducto.jTextFielddias_produccionBodegaProducto.setText(bodegaproductoBean.getdias_produccion().toString());
			this.jInternalFrameDetalleFormBodegaProducto.jTextFieldprecio_reposicionBodegaProducto.setText(bodegaproductoBean.getprecio_reposicion().toString());
			this.jInternalFrameDetalleFormBodegaProducto.jDateChooserfecha_ultimo_pedidoBodegaProducto.setDate(bodegaproductoBean.getfecha_ultimo_pedido());
			this.jInternalFrameDetalleFormBodegaProducto.jDateChooserfecha_ingresoBodegaProducto.setDate(bodegaproductoBean.getfecha_ingreso());
			this.jInternalFrameDetalleFormBodegaProducto.jDateChooserfecha_egresoBodegaProducto.setDate(bodegaproductoBean.getfecha_egreso());
			this.jInternalFrameDetalleFormBodegaProducto.jDateChooserfecha_ultima_compraBodegaProducto.setDate(bodegaproductoBean.getfecha_ultima_compra());
			this.jInternalFrameDetalleFormBodegaProducto.jDateChooserfecha_ultima_ventaBodegaProducto.setDate(bodegaproductoBean.getfecha_ultima_venta());
			this.jInternalFrameDetalleFormBodegaProducto.jDateChooserfecha_ultima_devolucionBodegaProducto.setDate(bodegaproductoBean.getfecha_ultima_devolucion());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoReturnGeneralToBeanBodegaProducto(BodegaProductoParameterReturnGeneral bodegaproductoReturnGeneral,BodegaProductoBean bodegaproductoBean,Boolean conDefault) throws Exception { 
		try {
			BodegaProducto bodegaproductoLocal=new BodegaProducto();
			
			bodegaproductoLocal=bodegaproductoReturnGeneral.getBodegaProducto();
			
			
			if(conColumnasBase) {if(conDefault || (!conDefault && bodegaproductoLocal.getId()!=null && !bodegaproductoLocal.getId().equals(0L))) {bodegaproductoBean.setId(bodegaproductoLocal.getId());}}
			if(conDefault || (!conDefault && bodegaproductoLocal.getid_bodega()!=null && !bodegaproductoLocal.getid_bodega().equals(-1L))) {bodegaproductoBean.setid_bodega(bodegaproductoLocal.getid_bodega());}
			if(conDefault || (!conDefault && bodegaproductoLocal.getid_producto()!=null && !bodegaproductoLocal.getid_producto().equals(-1L))) {bodegaproductoBean.setid_producto(bodegaproductoLocal.getid_producto());}
			if(conDefault || (!conDefault && bodegaproductoLocal.getid_unidad()!=null && !bodegaproductoLocal.getid_unidad().equals(-1L))) {bodegaproductoBean.setid_unidad(bodegaproductoLocal.getid_unidad());}
			if(conDefault || (!conDefault && bodegaproductoLocal.getid_centro_costo()!=null && !bodegaproductoLocal.getid_centro_costo().equals(null))) {bodegaproductoBean.setid_centro_costo(bodegaproductoLocal.getid_centro_costo());}
			if(conDefault || (!conDefault && bodegaproductoLocal.getid_estado_bodega_producto()!=null && !bodegaproductoLocal.getid_estado_bodega_producto().equals(-1L))) {bodegaproductoBean.setid_estado_bodega_producto(bodegaproductoLocal.getid_estado_bodega_producto());}
			if(conDefault || (!conDefault && bodegaproductoLocal.getdescripcion()!=null && !bodegaproductoLocal.getdescripcion().equals(""))) {bodegaproductoBean.setdescripcion(bodegaproductoLocal.getdescripcion());}
			if(conDefault || (!conDefault && bodegaproductoLocal.getcantidad_disponible()!=null && !bodegaproductoLocal.getcantidad_disponible().equals(0))) {bodegaproductoBean.setcantidad_disponible(bodegaproductoLocal.getcantidad_disponible());}
			if(conDefault || (!conDefault && bodegaproductoLocal.getstock_maximo()!=null && !bodegaproductoLocal.getstock_maximo().equals(0))) {bodegaproductoBean.setstock_maximo(bodegaproductoLocal.getstock_maximo());}
			if(conDefault || (!conDefault && bodegaproductoLocal.getstock_minimo()!=null && !bodegaproductoLocal.getstock_minimo().equals(0))) {bodegaproductoBean.setstock_minimo(bodegaproductoLocal.getstock_minimo());}
			if(conDefault || (!conDefault && bodegaproductoLocal.getiva()!=null && !bodegaproductoLocal.getiva().equals(0.0))) {bodegaproductoBean.setiva(bodegaproductoLocal.getiva());}
			if(conDefault || (!conDefault && bodegaproductoLocal.getiva_valor()!=null && !bodegaproductoLocal.getiva_valor().equals(0.0))) {bodegaproductoBean.setiva_valor(bodegaproductoLocal.getiva_valor());}
			if(conDefault || (!conDefault && bodegaproductoLocal.getdescuento()!=null && !bodegaproductoLocal.getdescuento().equals(0.0))) {bodegaproductoBean.setdescuento(bodegaproductoLocal.getdescuento());}
			if(conDefault || (!conDefault && bodegaproductoLocal.getdescuento_valor()!=null && !bodegaproductoLocal.getdescuento_valor().equals(0.0))) {bodegaproductoBean.setdescuento_valor(bodegaproductoLocal.getdescuento_valor());}
			if(conDefault || (!conDefault && bodegaproductoLocal.getice()!=null && !bodegaproductoLocal.getice().equals(0.0))) {bodegaproductoBean.setice(bodegaproductoLocal.getice());}
			if(conDefault || (!conDefault && bodegaproductoLocal.getice_valor()!=null && !bodegaproductoLocal.getice_valor().equals(0.0))) {bodegaproductoBean.setice_valor(bodegaproductoLocal.getice_valor());}
			if(conDefault || (!conDefault && bodegaproductoLocal.getcosto_promedio()!=null && !bodegaproductoLocal.getcosto_promedio().equals(0.0))) {bodegaproductoBean.setcosto_promedio(bodegaproductoLocal.getcosto_promedio());}
			if(conDefault || (!conDefault && bodegaproductoLocal.getporcentaje_comision()!=null && !bodegaproductoLocal.getporcentaje_comision().equals(0.0))) {bodegaproductoBean.setporcentaje_comision(bodegaproductoLocal.getporcentaje_comision());}
			if(conDefault || (!conDefault && bodegaproductoLocal.getprecio()!=null && !bodegaproductoLocal.getprecio().equals(0.0))) {bodegaproductoBean.setprecio(bodegaproductoLocal.getprecio());}
			if(conDefault || (!conDefault && bodegaproductoLocal.getultimo_costo()!=null && !bodegaproductoLocal.getultimo_costo().equals(0.0))) {bodegaproductoBean.setultimo_costo(bodegaproductoLocal.getultimo_costo());}
			if(conDefault || (!conDefault && bodegaproductoLocal.getcosto()!=null && !bodegaproductoLocal.getcosto().equals(0.0))) {bodegaproductoBean.setcosto(bodegaproductoLocal.getcosto());}
			if(conDefault || (!conDefault && bodegaproductoLocal.getarancel_porcentaje()!=null && !bodegaproductoLocal.getarancel_porcentaje().equals(0.0))) {bodegaproductoBean.setarancel_porcentaje(bodegaproductoLocal.getarancel_porcentaje());}
			if(conDefault || (!conDefault && bodegaproductoLocal.getice_porcentaje()!=null && !bodegaproductoLocal.getice_porcentaje().equals(0.0))) {bodegaproductoBean.setice_porcentaje(bodegaproductoLocal.getice_porcentaje());}
			if(conDefault || (!conDefault && bodegaproductoLocal.getpeso()!=null && !bodegaproductoLocal.getpeso().equals(0.0))) {bodegaproductoBean.setpeso(bodegaproductoLocal.getpeso());}
			if(conDefault || (!conDefault && bodegaproductoLocal.getcon_iva()!=null && !bodegaproductoLocal.getcon_iva().equals(false))) {bodegaproductoBean.setcon_iva(bodegaproductoLocal.getcon_iva());}
			if(conDefault || (!conDefault && bodegaproductoLocal.getcon_impuesto()!=null && !bodegaproductoLocal.getcon_impuesto().equals(false))) {bodegaproductoBean.setcon_impuesto(bodegaproductoLocal.getcon_impuesto());}
			if(conDefault || (!conDefault && bodegaproductoLocal.getcon_ice()!=null && !bodegaproductoLocal.getcon_ice().equals(false))) {bodegaproductoBean.setcon_ice(bodegaproductoLocal.getcon_ice());}
			if(conDefault || (!conDefault && bodegaproductoLocal.getesta_activo()!=null && !bodegaproductoLocal.getesta_activo().equals(false))) {bodegaproductoBean.setesta_activo(bodegaproductoLocal.getesta_activo());}
			if(conDefault || (!conDefault && bodegaproductoLocal.getcon_balanza()!=null && !bodegaproductoLocal.getcon_balanza().equals(false))) {bodegaproductoBean.setcon_balanza(bodegaproductoLocal.getcon_balanza());}
			if(conDefault || (!conDefault && bodegaproductoLocal.getcantidad_pedida()!=null && !bodegaproductoLocal.getcantidad_pedida().equals(0))) {bodegaproductoBean.setcantidad_pedida(bodegaproductoLocal.getcantidad_pedida());}
			if(conDefault || (!conDefault && bodegaproductoLocal.getcantidad_fisica()!=null && !bodegaproductoLocal.getcantidad_fisica().equals(0))) {bodegaproductoBean.setcantidad_fisica(bodegaproductoLocal.getcantidad_fisica());}
			if(conDefault || (!conDefault && bodegaproductoLocal.getcantidad_requerido()!=null && !bodegaproductoLocal.getcantidad_requerido().equals(0))) {bodegaproductoBean.setcantidad_requerido(bodegaproductoLocal.getcantidad_requerido());}
			if(conDefault || (!conDefault && bodegaproductoLocal.getprecio_costo()!=null && !bodegaproductoLocal.getprecio_costo().equals(0.0))) {bodegaproductoBean.setprecio_costo(bodegaproductoLocal.getprecio_costo());}
			if(conDefault || (!conDefault && bodegaproductoLocal.getprecio_promedio()!=null && !bodegaproductoLocal.getprecio_promedio().equals(0.0))) {bodegaproductoBean.setprecio_promedio(bodegaproductoLocal.getprecio_promedio());}
			if(conDefault || (!conDefault && bodegaproductoLocal.gettotal_ingresos()!=null && !bodegaproductoLocal.gettotal_ingresos().equals(0))) {bodegaproductoBean.settotal_ingresos(bodegaproductoLocal.gettotal_ingresos());}
			if(conDefault || (!conDefault && bodegaproductoLocal.gettotal_egresos()!=null && !bodegaproductoLocal.gettotal_egresos().equals(0))) {bodegaproductoBean.settotal_egresos(bodegaproductoLocal.gettotal_egresos());}
			if(conDefault || (!conDefault && bodegaproductoLocal.gettotal_provision()!=null && !bodegaproductoLocal.gettotal_provision().equals(0.0))) {bodegaproductoBean.settotal_provision(bodegaproductoLocal.gettotal_provision());}
			if(conDefault || (!conDefault && bodegaproductoLocal.gettotal_proceso()!=null && !bodegaproductoLocal.gettotal_proceso().equals(0.0))) {bodegaproductoBean.settotal_proceso(bodegaproductoLocal.gettotal_proceso());}
			if(conDefault || (!conDefault && bodegaproductoLocal.getcosto_calculado()!=null && !bodegaproductoLocal.getcosto_calculado().equals(0.0))) {bodegaproductoBean.setcosto_calculado(bodegaproductoLocal.getcosto_calculado());}
			if(conDefault || (!conDefault && bodegaproductoLocal.getdias_produccion()!=null && !bodegaproductoLocal.getdias_produccion().equals(0.0))) {bodegaproductoBean.setdias_produccion(bodegaproductoLocal.getdias_produccion());}
			if(conDefault || (!conDefault && bodegaproductoLocal.getprecio_reposicion()!=null && !bodegaproductoLocal.getprecio_reposicion().equals(0.0))) {bodegaproductoBean.setprecio_reposicion(bodegaproductoLocal.getprecio_reposicion());}
			if(conDefault || (!conDefault && bodegaproductoLocal.getfecha_ultimo_pedido()!=null && !bodegaproductoLocal.getfecha_ultimo_pedido().equals(new Date()))) {bodegaproductoBean.setfecha_ultimo_pedido(bodegaproductoLocal.getfecha_ultimo_pedido());}
			if(conDefault || (!conDefault && bodegaproductoLocal.getfecha_ingreso()!=null && !bodegaproductoLocal.getfecha_ingreso().equals(new Date()))) {bodegaproductoBean.setfecha_ingreso(bodegaproductoLocal.getfecha_ingreso());}
			if(conDefault || (!conDefault && bodegaproductoLocal.getfecha_egreso()!=null && !bodegaproductoLocal.getfecha_egreso().equals(new Date()))) {bodegaproductoBean.setfecha_egreso(bodegaproductoLocal.getfecha_egreso());}
			if(conDefault || (!conDefault && bodegaproductoLocal.getfecha_ultima_compra()!=null && !bodegaproductoLocal.getfecha_ultima_compra().equals(new Date()))) {bodegaproductoBean.setfecha_ultima_compra(bodegaproductoLocal.getfecha_ultima_compra());}
			if(conDefault || (!conDefault && bodegaproductoLocal.getfecha_ultima_venta()!=null && !bodegaproductoLocal.getfecha_ultima_venta().equals(new Date()))) {bodegaproductoBean.setfecha_ultima_venta(bodegaproductoLocal.getfecha_ultima_venta());}
			if(conDefault || (!conDefault && bodegaproductoLocal.getfecha_ultima_devolucion()!=null && !bodegaproductoLocal.getfecha_ultima_devolucion().equals(new Date()))) {bodegaproductoBean.setfecha_ultima_devolucion(bodegaproductoLocal.getfecha_ultima_devolucion());}
			if(conDefault || (!conDefault && bodegaproductoLocal.getid_cuenta_contable_inventario()!=null && !bodegaproductoLocal.getid_cuenta_contable_inventario().equals(-1L))) {bodegaproductoBean.setid_cuenta_contable_inventario(bodegaproductoLocal.getid_cuenta_contable_inventario());}
			if(conDefault || (!conDefault && bodegaproductoLocal.getid_cuenta_contable_costo_venta()!=null && !bodegaproductoLocal.getid_cuenta_contable_costo_venta().equals(-1L))) {bodegaproductoBean.setid_cuenta_contable_costo_venta(bodegaproductoLocal.getid_cuenta_contable_costo_venta());}
			if(conDefault || (!conDefault && bodegaproductoLocal.getid_cuenta_contable_venta()!=null && !bodegaproductoLocal.getid_cuenta_contable_venta().equals(-1L))) {bodegaproductoBean.setid_cuenta_contable_venta(bodegaproductoLocal.getid_cuenta_contable_venta());}
			if(conDefault || (!conDefault && bodegaproductoLocal.getid_cuenta_contable_descuento()!=null && !bodegaproductoLocal.getid_cuenta_contable_descuento().equals(-1L))) {bodegaproductoBean.setid_cuenta_contable_descuento(bodegaproductoLocal.getid_cuenta_contable_descuento());}
			if(conDefault || (!conDefault && bodegaproductoLocal.getid_cuenta_contable_produccion()!=null && !bodegaproductoLocal.getid_cuenta_contable_produccion().equals(-1L))) {bodegaproductoBean.setid_cuenta_contable_produccion(bodegaproductoLocal.getid_cuenta_contable_produccion());}
			if(conDefault || (!conDefault && bodegaproductoLocal.getid_cuenta_contable_devolucion()!=null && !bodegaproductoLocal.getid_cuenta_contable_devolucion().equals(-1L))) {bodegaproductoBean.setid_cuenta_contable_devolucion(bodegaproductoLocal.getid_cuenta_contable_devolucion());}
			if(conDefault || (!conDefault && bodegaproductoLocal.getid_cuenta_contable_ingreso_debito()!=null && !bodegaproductoLocal.getid_cuenta_contable_ingreso_debito().equals(-1L))) {bodegaproductoBean.setid_cuenta_contable_ingreso_debito(bodegaproductoLocal.getid_cuenta_contable_ingreso_debito());}
			if(conDefault || (!conDefault && bodegaproductoLocal.getid_cuenta_contable_ingreso_credito()!=null && !bodegaproductoLocal.getid_cuenta_contable_ingreso_credito().equals(-1L))) {bodegaproductoBean.setid_cuenta_contable_ingreso_credito(bodegaproductoLocal.getid_cuenta_contable_ingreso_credito());}
			if(conDefault || (!conDefault && bodegaproductoLocal.getid_cuenta_contable_resultado_debito()!=null && !bodegaproductoLocal.getid_cuenta_contable_resultado_debito().equals(-1L))) {bodegaproductoBean.setid_cuenta_contable_resultado_debito(bodegaproductoLocal.getid_cuenta_contable_resultado_debito());}
			if(conDefault || (!conDefault && bodegaproductoLocal.getid_cuenta_contable_resultado_credito()!=null && !bodegaproductoLocal.getid_cuenta_contable_resultado_credito().equals(-1L))) {bodegaproductoBean.setid_cuenta_contable_resultado_credito(bodegaproductoLocal.getid_cuenta_contable_resultado_credito());}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	@SuppressWarnings("rawtypes")
	public static void setActualComboBoxBodegaProductoGenerico(Long idBodegaProductoSeleccionado,JComboBox jComboBoxBodegaProducto,List<BodegaProducto> bodegaproductosLocal)throws Exception {
		try {
			BodegaProducto  bodegaproductoTemp=null;

			for(BodegaProducto bodegaproductoAux:bodegaproductosLocal) {
				if(bodegaproductoAux.getId()!=null && bodegaproductoAux.getId().equals(idBodegaProductoSeleccionado)) {
					bodegaproductoTemp=bodegaproductoAux;
					break;
				}
			}

			jComboBoxBodegaProducto.setSelectedItem(bodegaproductoTemp);

		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("rawtypes")
	public static void setHotKeysComboBoxBodegaProductoGenerico(JComboBox jComboBoxBodegaProducto,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda)throws Exception {
		try {
			//GLOBAL(id_empresa,id_sucursal,id_ejercicio)
			//BASICO(normal)
			//CON_BUSQUEDA(Permite buscar Fk)
			
			String sKeyStrokeName="";
			KeyStroke keyStrokeControl=null;
			
			if(!sTipoBusqueda.equals("GLOBAL")) {
				
				//BUSCAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSCAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSCAR");
				
				jComboBoxBodegaProducto.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxBodegaProducto.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Busqueda"));
				//BUSCAR
				
				
				//ACTUALIZAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_ACTUALIZAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_ACTUALIZAR");
				
				jComboBoxBodegaProducto.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxBodegaProducto.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Update"));
				//ACTUALIZAR
				
				if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxBodegaProducto.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
						jComboBoxBodegaProducto.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));						
					}
					
					/*
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxBodegaProducto.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					} else {
						jComboBoxBodegaProducto.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					}
					*/
				}								
				
				//CON_BUSQUEDA								
				if(sTipoBusqueda.contains("CON_BUSQUEDA")) {
					sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSQUEDA");
					keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSQUEDA");
							
					jComboBoxBodegaProducto.getInputMap().put(keyStrokeControl, sKeyStrokeName);
					jComboBoxBodegaProducto.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction));
				}
				//CON_BUSQUEDA
				
				
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	@SuppressWarnings("rawtypes")
	public void setHotKeysComboBoxGenerico(JComboBox jComboBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
			if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
				jComboBox.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			} else {
				jComboBox.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			}
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextFieldGenerico(JTextField jTextField,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextField.addFocusListener(new TextFieldFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		jTextField.addActionListener(new TextFieldActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextAreaGenerico(JTextArea jTextArea,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextArea.addFocusListener(new TextAreaFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jTextArea.addActionListener(new TextAreaActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJLabelGenerico(JLabel jLabel,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jLabel.addFocusListener(new LabelFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jLabel.addActionListener(new LabelActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJCheckBoxGenerico(JCheckBox jCheckBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jCheckBox.addFocusListener(new CheckBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//SI SE DEFINE AL CAMBIAR VALOR, ESTE NUEVO VALOR NO SE ENVIA AL EVENTO
		//jCheckBox.addItemListener(new CheckBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJDateChooserGenerico(JDateChooser jDateChooser,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		FuncionesSwing.addDateListener(jDateChooser, jInternalFrameBase, sNombreHotKeyAbstractAction);
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJButtonGenerico(JButton jButton,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jButton.addActionListener(new ButtonActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	public void jButtonRelacionActionPerformed(String sTipo,ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado) {
		//ABRIR RELACIONES
		try {
			
		} catch (Exception e) {
			FuncionesSwing.manageException2(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	public String getDescripcionFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		String sDescripcion="";
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			bodegaproducto=(BodegaProducto) bodegaproductoLogic.getBodegaProductos().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			bodegaproducto =(BodegaProducto) bodegaproductos.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		if(sTipo.equals("Empresa")) {
			//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
			if(!bodegaproducto.getIsNew() && !bodegaproducto.getIsChanged() && !bodegaproducto.getIsDeleted()) {
				sDescripcion=bodegaproducto.getempresa_descripcion();
			} else {
				//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
				sDescripcion=bodegaproducto.getempresa_descripcion();
			}
		}

		if(sTipo.equals("Sucursal")) {
			//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
			if(!bodegaproducto.getIsNew() && !bodegaproducto.getIsChanged() && !bodegaproducto.getIsDeleted()) {
				sDescripcion=bodegaproducto.getsucursal_descripcion();
			} else {
				//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
				sDescripcion=bodegaproducto.getsucursal_descripcion();
			}
		}

		if(sTipo.equals("Bodega")) {
			//sDescripcion=this.getActualBodegaForeignKeyDescripcion((Long)value);
			if(!bodegaproducto.getIsNew() && !bodegaproducto.getIsChanged() && !bodegaproducto.getIsDeleted()) {
				sDescripcion=bodegaproducto.getbodega_descripcion();
			} else {
				//sDescripcion=this.getActualBodegaForeignKeyDescripcion((Long)value);
				sDescripcion=bodegaproducto.getbodega_descripcion();
			}
		}

		if(sTipo.equals("Producto")) {
			//sDescripcion=this.getActualProductoForeignKeyDescripcion((Long)value);
			if(!bodegaproducto.getIsNew() && !bodegaproducto.getIsChanged() && !bodegaproducto.getIsDeleted()) {
				sDescripcion=bodegaproducto.getproducto_descripcion();
			} else {
				//ES DEPENDIENTE, SE FORZA DESDE DESCRIPCION
				sDescripcion=bodegaproducto.getproducto_descripcion();
			}
		}

		if(sTipo.equals("Unidad")) {
			//sDescripcion=this.getActualUnidadForeignKeyDescripcion((Long)value);
			if(!bodegaproducto.getIsNew() && !bodegaproducto.getIsChanged() && !bodegaproducto.getIsDeleted()) {
				sDescripcion=bodegaproducto.getunidad_descripcion();
			} else {
				//ES DEPENDIENTE, SE FORZA DESDE DESCRIPCION
				sDescripcion=bodegaproducto.getunidad_descripcion();
			}
		}

		if(sTipo.equals("CentroCosto")) {
			//sDescripcion=this.getActualCentroCostoForeignKeyDescripcion((Long)value);
			if(!bodegaproducto.getIsNew() && !bodegaproducto.getIsChanged() && !bodegaproducto.getIsDeleted()) {
				sDescripcion=bodegaproducto.getcentrocosto_descripcion();
			} else {
				//sDescripcion=this.getActualCentroCostoForeignKeyDescripcion((Long)value);
				sDescripcion=bodegaproducto.getcentrocosto_descripcion();
			}
		}

		if(sTipo.equals("EstadoBodegaProducto")) {
			//sDescripcion=this.getActualEstadoBodegaProductoForeignKeyDescripcion((Long)value);
			if(!bodegaproducto.getIsNew() && !bodegaproducto.getIsChanged() && !bodegaproducto.getIsDeleted()) {
				sDescripcion=bodegaproducto.getestadobodegaproducto_descripcion();
			} else {
				//sDescripcion=this.getActualEstadoBodegaProductoForeignKeyDescripcion((Long)value);
				sDescripcion=bodegaproducto.getestadobodegaproducto_descripcion();
			}
		}

		if(sTipo.equals("CuentaContableInventario")) {
			//sDescripcion=this.getActualCuentaContableInventarioForeignKeyDescripcion((Long)value);
			if(!bodegaproducto.getIsNew() && !bodegaproducto.getIsChanged() && !bodegaproducto.getIsDeleted()) {
				sDescripcion=bodegaproducto.getcuentacontableinventario_descripcion();
			} else {
				//sDescripcion=this.getActualCuentaContableInventarioForeignKeyDescripcion((Long)value);
				sDescripcion=bodegaproducto.getcuentacontableinventario_descripcion();
			}
		}

		if(sTipo.equals("CuentaContableCostoVenta")) {
			//sDescripcion=this.getActualCuentaContableCostoVentaForeignKeyDescripcion((Long)value);
			if(!bodegaproducto.getIsNew() && !bodegaproducto.getIsChanged() && !bodegaproducto.getIsDeleted()) {
				sDescripcion=bodegaproducto.getcuentacontablecostoventa_descripcion();
			} else {
				//sDescripcion=this.getActualCuentaContableCostoVentaForeignKeyDescripcion((Long)value);
				sDescripcion=bodegaproducto.getcuentacontablecostoventa_descripcion();
			}
		}

		if(sTipo.equals("CuentaContableVenta")) {
			//sDescripcion=this.getActualCuentaContableVentaForeignKeyDescripcion((Long)value);
			if(!bodegaproducto.getIsNew() && !bodegaproducto.getIsChanged() && !bodegaproducto.getIsDeleted()) {
				sDescripcion=bodegaproducto.getcuentacontableventa_descripcion();
			} else {
				//sDescripcion=this.getActualCuentaContableVentaForeignKeyDescripcion((Long)value);
				sDescripcion=bodegaproducto.getcuentacontableventa_descripcion();
			}
		}

		if(sTipo.equals("CuentaContableDescuento")) {
			//sDescripcion=this.getActualCuentaContableDescuentoForeignKeyDescripcion((Long)value);
			if(!bodegaproducto.getIsNew() && !bodegaproducto.getIsChanged() && !bodegaproducto.getIsDeleted()) {
				sDescripcion=bodegaproducto.getcuentacontabledescuento_descripcion();
			} else {
				//sDescripcion=this.getActualCuentaContableDescuentoForeignKeyDescripcion((Long)value);
				sDescripcion=bodegaproducto.getcuentacontabledescuento_descripcion();
			}
		}

		if(sTipo.equals("CuentaContableProduccion")) {
			//sDescripcion=this.getActualCuentaContableProduccionForeignKeyDescripcion((Long)value);
			if(!bodegaproducto.getIsNew() && !bodegaproducto.getIsChanged() && !bodegaproducto.getIsDeleted()) {
				sDescripcion=bodegaproducto.getcuentacontableproduccion_descripcion();
			} else {
				//sDescripcion=this.getActualCuentaContableProduccionForeignKeyDescripcion((Long)value);
				sDescripcion=bodegaproducto.getcuentacontableproduccion_descripcion();
			}
		}

		if(sTipo.equals("CuentaContableDevolucion")) {
			//sDescripcion=this.getActualCuentaContableDevolucionForeignKeyDescripcion((Long)value);
			if(!bodegaproducto.getIsNew() && !bodegaproducto.getIsChanged() && !bodegaproducto.getIsDeleted()) {
				sDescripcion=bodegaproducto.getcuentacontabledevolucion_descripcion();
			} else {
				//sDescripcion=this.getActualCuentaContableDevolucionForeignKeyDescripcion((Long)value);
				sDescripcion=bodegaproducto.getcuentacontabledevolucion_descripcion();
			}
		}

		if(sTipo.equals("CuentaContableIngresoDebito")) {
			//sDescripcion=this.getActualCuentaContableIngresoDebitoForeignKeyDescripcion((Long)value);
			if(!bodegaproducto.getIsNew() && !bodegaproducto.getIsChanged() && !bodegaproducto.getIsDeleted()) {
				sDescripcion=bodegaproducto.getcuentacontableingresodebito_descripcion();
			} else {
				//sDescripcion=this.getActualCuentaContableIngresoDebitoForeignKeyDescripcion((Long)value);
				sDescripcion=bodegaproducto.getcuentacontableingresodebito_descripcion();
			}
		}

		if(sTipo.equals("CuentaContableIngresoCredito")) {
			//sDescripcion=this.getActualCuentaContableIngresoCreditoForeignKeyDescripcion((Long)value);
			if(!bodegaproducto.getIsNew() && !bodegaproducto.getIsChanged() && !bodegaproducto.getIsDeleted()) {
				sDescripcion=bodegaproducto.getcuentacontableingresocredito_descripcion();
			} else {
				//sDescripcion=this.getActualCuentaContableIngresoCreditoForeignKeyDescripcion((Long)value);
				sDescripcion=bodegaproducto.getcuentacontableingresocredito_descripcion();
			}
		}

		if(sTipo.equals("CuentaContableResultadoDebito")) {
			//sDescripcion=this.getActualCuentaContableResultadoDebitoForeignKeyDescripcion((Long)value);
			if(!bodegaproducto.getIsNew() && !bodegaproducto.getIsChanged() && !bodegaproducto.getIsDeleted()) {
				sDescripcion=bodegaproducto.getcuentacontableresultadodebito_descripcion();
			} else {
				//sDescripcion=this.getActualCuentaContableResultadoDebitoForeignKeyDescripcion((Long)value);
				sDescripcion=bodegaproducto.getcuentacontableresultadodebito_descripcion();
			}
		}

		if(sTipo.equals("CuentaContableResultadoCredito")) {
			//sDescripcion=this.getActualCuentaContableResultadoCreditoForeignKeyDescripcion((Long)value);
			if(!bodegaproducto.getIsNew() && !bodegaproducto.getIsChanged() && !bodegaproducto.getIsDeleted()) {
				sDescripcion=bodegaproducto.getcuentacontableresultadocredito_descripcion();
			} else {
				//sDescripcion=this.getActualCuentaContableResultadoCreditoForeignKeyDescripcion((Long)value);
				sDescripcion=bodegaproducto.getcuentacontableresultadocredito_descripcion();
			}
		}

		
		return sDescripcion;
	}
	
	public Color getColorFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		Color color=Color.WHITE;
		
		BodegaProducto bodegaproductoRow=new BodegaProducto();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			bodegaproductoRow=(BodegaProducto) bodegaproductoLogic.getBodegaProductos().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			bodegaproductoRow=(BodegaProducto) bodegaproductos.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		
		return color;
	}
	
	
	
	
	
	
	
	public void refrescarBindingTabla(Boolean blnSoloTabla) {
	}
	
	public void inicializarActualizarBindingBotonesManualBodegaProducto(Boolean esSetControles) {						
		if(esSetControles) {
			this.jButtonNuevoBodegaProducto.setVisible((this.isVisibilidadCeldaNuevoBodegaProducto && this.isPermisoNuevoBodegaProducto));			
			this.jButtonDuplicarBodegaProducto.setVisible((this.isVisibilidadCeldaDuplicarBodegaProducto && this.isPermisoDuplicarBodegaProducto));			
			this.jButtonCopiarBodegaProducto.setVisible((this.isVisibilidadCeldaCopiarBodegaProducto && this.isPermisoCopiarBodegaProducto));
			this.jButtonVerFormBodegaProducto.setVisible((this.isVisibilidadCeldaVerFormBodegaProducto && this.isPermisoVerFormBodegaProducto));
			
			this.jButtonAbrirOrderByBodegaProducto.setVisible((this.isVisibilidadCeldaOrdenBodegaProducto && this.isPermisoOrdenBodegaProducto));			
			
			this.jButtonNuevoRelacionesBodegaProducto.setVisible((this.isVisibilidadCeldaNuevoRelacionesBodegaProducto && this.isPermisoNuevoBodegaProducto));			
			this.jButtonNuevoGuardarCambiosBodegaProducto.setVisible((this.isVisibilidadCeldaNuevoBodegaProducto && this.isPermisoNuevoBodegaProducto && this.isPermisoGuardarCambiosBodegaProducto));
			
			if(this.jInternalFrameDetalleFormBodegaProducto!=null) {
			this.jInternalFrameDetalleFormBodegaProducto.jButtonModificarBodegaProducto.setVisible((this.isVisibilidadCeldaModificarBodegaProducto && this.isPermisoActualizarBodegaProducto));	
			this.jInternalFrameDetalleFormBodegaProducto.jButtonActualizarBodegaProducto.setVisible((this.isVisibilidadCeldaActualizarBodegaProducto && this.isPermisoActualizarBodegaProducto));	
			this.jInternalFrameDetalleFormBodegaProducto.jButtonEliminarBodegaProducto.setVisible((this.isVisibilidadCeldaEliminarBodegaProducto && this.isPermisoEliminarBodegaProducto));
			this.jInternalFrameDetalleFormBodegaProducto.jButtonCancelarBodegaProducto.setVisible(this.isVisibilidadCeldaCancelarBodegaProducto);							
			this.jInternalFrameDetalleFormBodegaProducto.jButtonGuardarCambiosBodegaProducto.setVisible((this.isVisibilidadCeldaGuardarBodegaProducto && this.isPermisoGuardarCambiosBodegaProducto));			
			
			}
						
			this.jButtonGuardarCambiosTablaBodegaProducto.setVisible((this.isVisibilidadCeldaGuardarCambiosBodegaProducto && this.isPermisoGuardarCambiosBodegaProducto));							
			
			//TOOLBAR
			
			this.jButtonNuevoToolBarBodegaProducto.setVisible((this.isVisibilidadCeldaNuevoBodegaProducto && this.isPermisoNuevoBodegaProducto));						
			this.jButtonDuplicarToolBarBodegaProducto.setVisible((this.isVisibilidadCeldaDuplicarBodegaProducto && this.isPermisoDuplicarBodegaProducto));						
			this.jButtonCopiarToolBarBodegaProducto.setVisible((this.isVisibilidadCeldaCopiarBodegaProducto && this.isPermisoCopiarBodegaProducto));			
			this.jButtonVerFormToolBarBodegaProducto.setVisible((this.isVisibilidadCeldaVerFormBodegaProducto && this.isPermisoVerFormBodegaProducto));			
			this.jButtonAbrirOrderByToolBarBodegaProducto.setVisible((this.isVisibilidadCeldaOrdenBodegaProducto && this.isPermisoOrdenBodegaProducto));
			this.jButtonNuevoRelacionesToolBarBodegaProducto.setVisible((this.isVisibilidadCeldaNuevoRelacionesBodegaProducto && this.isPermisoNuevoBodegaProducto));			
			this.jButtonNuevoGuardarCambiosToolBarBodegaProducto.setVisible((this.isVisibilidadCeldaNuevoBodegaProducto && this.isPermisoNuevoBodegaProducto && this.isPermisoGuardarCambiosBodegaProducto));			
			
			if(this.jInternalFrameDetalleFormBodegaProducto!=null) {
			this.jInternalFrameDetalleFormBodegaProducto.jButtonModificarToolBarBodegaProducto.setVisible((this.isVisibilidadCeldaModificarBodegaProducto && this.isPermisoActualizarBodegaProducto));	
			this.jInternalFrameDetalleFormBodegaProducto.jButtonActualizarToolBarBodegaProducto.setVisible((this.isVisibilidadCeldaActualizarBodegaProducto  && this.isPermisoActualizarBodegaProducto));	
			this.jInternalFrameDetalleFormBodegaProducto.jButtonEliminarToolBarBodegaProducto.setVisible((this.isVisibilidadCeldaEliminarBodegaProducto && this.isPermisoEliminarBodegaProducto));
			this.jInternalFrameDetalleFormBodegaProducto.jButtonCancelarToolBarBodegaProducto.setVisible(this.isVisibilidadCeldaCancelarBodegaProducto);				
			this.jInternalFrameDetalleFormBodegaProducto.jButtonGuardarCambiosToolBarBodegaProducto.setVisible((this.isVisibilidadCeldaGuardarBodegaProducto && this.isPermisoGuardarCambiosBodegaProducto));									
			}
			
			this.jButtonGuardarCambiosTablaToolBarBodegaProducto.setVisible((this.isVisibilidadCeldaGuardarCambiosBodegaProducto && this.isPermisoGuardarCambiosBodegaProducto));									
			
			//TOOLBAR
			
			//MENUS
			
			this.jMenuItemNuevoBodegaProducto.setVisible((this.isVisibilidadCeldaNuevoBodegaProducto && this.isPermisoNuevoBodegaProducto));			
			this.jMenuItemDuplicarBodegaProducto.setVisible((this.isVisibilidadCeldaDuplicarBodegaProducto && this.isPermisoDuplicarBodegaProducto));			
			this.jMenuItemCopiarBodegaProducto.setVisible((this.isVisibilidadCeldaCopiarBodegaProducto && this.isPermisoCopiarBodegaProducto));			
			this.jMenuItemVerFormBodegaProducto.setVisible((this.isVisibilidadCeldaVerFormBodegaProducto && this.isPermisoVerFormBodegaProducto));			
			this.jMenuItemAbrirOrderByBodegaProducto.setVisible((this.isVisibilidadCeldaOrdenBodegaProducto && this.isPermisoOrdenBodegaProducto));			
			//this.jMenuItemMostrarOcultarBodegaProducto.setVisible((this.isVisibilidadCeldaOrdenBodegaProducto && this.isPermisoOrdenBodegaProducto));
			this.jMenuItemDetalleAbrirOrderByBodegaProducto.setVisible((this.isVisibilidadCeldaOrdenBodegaProducto && this.isPermisoOrdenBodegaProducto));			
			//this.jMenuItemDetalleMostrarOcultarBodegaProducto.setVisible((this.isVisibilidadCeldaOrdenBodegaProducto && this.isPermisoOrdenBodegaProducto));			
			this.jMenuItemNuevoRelacionesBodegaProducto.setVisible((this.isVisibilidadCeldaNuevoRelacionesBodegaProducto && this.isPermisoNuevoBodegaProducto));			
			this.jMenuItemNuevoGuardarCambiosBodegaProducto.setVisible((this.isVisibilidadCeldaNuevoBodegaProducto && this.isPermisoNuevoBodegaProducto && this.isPermisoGuardarCambiosBodegaProducto));									
			
			if(this.jInternalFrameDetalleFormBodegaProducto!=null) {
			this.jInternalFrameDetalleFormBodegaProducto.jMenuItemModificarBodegaProducto.setVisible((this.isVisibilidadCeldaModificarBodegaProducto && this.isPermisoActualizarBodegaProducto));	
			this.jInternalFrameDetalleFormBodegaProducto.jMenuItemActualizarBodegaProducto.setVisible((this.isVisibilidadCeldaActualizarBodegaProducto && this.isPermisoActualizarBodegaProducto));	
			this.jInternalFrameDetalleFormBodegaProducto.jMenuItemEliminarBodegaProducto.setVisible((this.isVisibilidadCeldaEliminarBodegaProducto && this.isPermisoEliminarBodegaProducto));
			this.jInternalFrameDetalleFormBodegaProducto.jMenuItemCancelarBodegaProducto.setVisible(this.isVisibilidadCeldaCancelarBodegaProducto);				
			}
			
			this.jMenuItemGuardarCambiosBodegaProducto.setVisible((this.isVisibilidadCeldaGuardarBodegaProducto && this.isPermisoGuardarCambiosBodegaProducto));						
			this.jMenuItemGuardarCambiosTablaBodegaProducto.setVisible((this.isVisibilidadCeldaGuardarCambiosBodegaProducto && this.isPermisoGuardarCambiosBodegaProducto));						
			
			//MENUS
			
		} else {
			this.isVisibilidadCeldaNuevoBodegaProducto=this.jButtonNuevoBodegaProducto.isVisible();
			this.isVisibilidadCeldaDuplicarBodegaProducto=this.jButtonDuplicarBodegaProducto.isVisible();
			this.isVisibilidadCeldaCopiarBodegaProducto=this.jButtonCopiarBodegaProducto.isVisible();
			this.isVisibilidadCeldaVerFormBodegaProducto=this.jButtonVerFormBodegaProducto.isVisible();
			
			this.isVisibilidadCeldaOrdenBodegaProducto=this.jButtonAbrirOrderByBodegaProducto.isVisible();			
			
			this.isVisibilidadCeldaNuevoRelacionesBodegaProducto=this.jButtonNuevoRelacionesBodegaProducto.isVisible();
			this.isVisibilidadCeldaModificarBodegaProducto=this.jButtonModificarBodegaProducto.isVisible();
			
			if(this.jInternalFrameDetalleFormBodegaProducto!=null) {
			this.isVisibilidadCeldaActualizarBodegaProducto=this.jInternalFrameDetalleFormBodegaProducto.jButtonActualizarBodegaProducto.isVisible();
			this.isVisibilidadCeldaEliminarBodegaProducto=this.jInternalFrameDetalleFormBodegaProducto.jButtonEliminarBodegaProducto.isVisible();
			this.isVisibilidadCeldaCancelarBodegaProducto=this.jInternalFrameDetalleFormBodegaProducto.jButtonCancelarBodegaProducto.isVisible();
			this.isVisibilidadCeldaGuardarBodegaProducto=this.jInternalFrameDetalleFormBodegaProducto.jButtonGuardarCambiosBodegaProducto.isVisible();			
			}
			
			this.isVisibilidadCeldaGuardarCambiosBodegaProducto=this.jButtonGuardarCambiosTablaBodegaProducto.isVisible();
			
			//TOOLBAR
			
			this.isVisibilidadCeldaNuevoBodegaProducto=this.jButtonNuevoToolBarBodegaProducto.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesBodegaProducto=this.jButtonNuevoRelacionesToolBarBodegaProducto.isVisible();
			
			if(this.jInternalFrameDetalleFormBodegaProducto!=null) {
			this.isVisibilidadCeldaModificarBodegaProducto=this.jInternalFrameDetalleFormBodegaProducto.jButtonModificarToolBarBodegaProducto.isVisible();
			this.isVisibilidadCeldaActualizarBodegaProducto=this.jInternalFrameDetalleFormBodegaProducto.jButtonActualizarToolBarBodegaProducto.isVisible();
			this.isVisibilidadCeldaEliminarBodegaProducto=this.jInternalFrameDetalleFormBodegaProducto.jButtonEliminarToolBarBodegaProducto.isVisible();
			this.isVisibilidadCeldaCancelarBodegaProducto=this.jInternalFrameDetalleFormBodegaProducto.jButtonCancelarToolBarBodegaProducto.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarBodegaProducto=this.jButtonGuardarCambiosToolBarBodegaProducto.isVisible();
			this.isVisibilidadCeldaGuardarCambiosBodegaProducto=this.jButtonGuardarCambiosTablaToolBarBodegaProducto.isVisible();						
			
			//TOOLBAR
			
			//MENUS
			
			this.isVisibilidadCeldaNuevoBodegaProducto=this.jMenuItemNuevoBodegaProducto.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesBodegaProducto=this.jMenuItemNuevoRelacionesBodegaProducto.isVisible();
			
			if(this.jInternalFrameDetalleFormBodegaProducto!=null) {
			this.isVisibilidadCeldaModificarBodegaProducto=this.jInternalFrameDetalleFormBodegaProducto.jMenuItemModificarBodegaProducto.isVisible();
			this.isVisibilidadCeldaActualizarBodegaProducto=this.jInternalFrameDetalleFormBodegaProducto.jMenuItemActualizarBodegaProducto.isVisible();
			this.isVisibilidadCeldaEliminarBodegaProducto=this.jInternalFrameDetalleFormBodegaProducto.jMenuItemEliminarBodegaProducto.isVisible();
			this.isVisibilidadCeldaCancelarBodegaProducto=this.jInternalFrameDetalleFormBodegaProducto.jMenuItemCancelarBodegaProducto.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarBodegaProducto=this.jMenuItemGuardarCambiosBodegaProducto.isVisible();
			this.isVisibilidadCeldaGuardarCambiosBodegaProducto=this.jMenuItemGuardarCambiosTablaBodegaProducto.isVisible();						
			
			//MENUS
		}
	}
	
	public void inicializarActualizarBindingBotonesBodegaProducto(Boolean esInicializar) {
		if(BodegaProductoJInternalFrame.ISBINDING_MANUAL) {			
			if(this.bodegaproductoSessionBean.getConGuardarRelaciones()) {
				//if(this.bodegaproductoSessionBean.getEsGuardarRelacionado()) {
				
				this.actualizarEstadoCeldasBotonesConGuardarRelacionesBodegaProducto();
			}
			
			this.inicializarActualizarBindingBotonesManualBodegaProducto(true);
			
		} else {	
		}
	}		
	
	public void inicializarActualizarBindingBotonesPermisosManualBodegaProducto() {
		this.jButtonNuevoBodegaProducto.setVisible(this.isPermisoNuevoBodegaProducto);			
		this.jButtonDuplicarBodegaProducto.setVisible(this.isPermisoDuplicarBodegaProducto);			
		this.jButtonCopiarBodegaProducto.setVisible(this.isPermisoCopiarBodegaProducto);			
		this.jButtonVerFormBodegaProducto.setVisible(this.isPermisoVerFormBodegaProducto);			
		
		this.jButtonAbrirOrderByBodegaProducto.setVisible(this.isPermisoOrdenBodegaProducto);					
		
		this.jButtonNuevoRelacionesBodegaProducto.setVisible(this.isPermisoNuevoBodegaProducto);			
		
		if(this.jInternalFrameDetalleFormBodegaProducto!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormBodegaProducto.jButtonModificarBodegaProducto.setVisible(this.isPermisoActualizarBodegaProducto);	
			this.jInternalFrameDetalleFormBodegaProducto.jButtonActualizarBodegaProducto.setVisible(this.isPermisoActualizarBodegaProducto);	
			this.jInternalFrameDetalleFormBodegaProducto.jButtonEliminarBodegaProducto.setVisible(this.isPermisoEliminarBodegaProducto);
			this.jInternalFrameDetalleFormBodegaProducto.jButtonCancelarBodegaProducto.setVisible(this.isVisibilidadCeldaCancelarBodegaProducto);						
			this.jInternalFrameDetalleFormBodegaProducto.jButtonGuardarCambiosBodegaProducto.setVisible(this.isPermisoGuardarCambiosBodegaProducto);							
		}
		
		this.jButtonGuardarCambiosTablaBodegaProducto.setVisible(this.isPermisoActualizarBodegaProducto);
	}
	
	public void inicializarActualizarBindingBotonesPermisosManualFormDetalleBodegaProducto() {
		this.jInternalFrameDetalleFormBodegaProducto.jButtonModificarBodegaProducto.setVisible(this.isPermisoActualizarBodegaProducto);	
		this.jInternalFrameDetalleFormBodegaProducto.jButtonActualizarBodegaProducto.setVisible(this.isPermisoActualizarBodegaProducto);	
		this.jInternalFrameDetalleFormBodegaProducto.jButtonEliminarBodegaProducto.setVisible(this.isPermisoEliminarBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jButtonCancelarBodegaProducto.setVisible(this.isVisibilidadCeldaCancelarBodegaProducto);							
		this.jInternalFrameDetalleFormBodegaProducto.jButtonGuardarCambiosBodegaProducto.setVisible((this.isVisibilidadCeldaGuardarBodegaProducto && this.isPermisoGuardarCambiosBodegaProducto));			
	}
	
	public void inicializarActualizarBindingBotonesPermisosBodegaProducto() {
		if(BodegaProductoJInternalFrame.ISBINDING_MANUAL) {
			this.inicializarActualizarBindingBotonesPermisosManualBodegaProducto();
		} else {
		}
	}
	
	
	public void refrescarBindingBotonesBodegaProducto() {
	}
	
	public void jTableDatosBodegaProductoListSelectionListener(javax.swing.event.ListSelectionEvent evt) throws Exception { 
		try {
			this.seleccionarBodegaProducto(null,evt,-1);
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonidBodegaProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualBodegaProducto(this.getbodegaproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.bodegaproducto==null) {
						this.bodegaproducto = new BodegaProducto();
					}

					this.setVariablesFormularioToObjetoActualBodegaProducto(this.bodegaproducto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
				}

				if(this.bodegaproducto.getId()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id = "+this.bodegaproducto.getId().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingBodegaProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_empresaBodegaProductoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoempresa=true;

			idTienePermisoempresa=this.tienePermisosUsuarioEnPaginaWebBodegaProducto(EmpresaConstantesFunciones.CLASSNAME);

			if(idTienePermisoempresa) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosBodegaProducto.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosBodegaProducto.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproducto =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.bodegaproducto =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualBodegaProducto(this.getbodegaproducto(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);

				this.empresaBeanSwingJInternalFrame=new EmpresaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.empresaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.empresaBeanSwingJInternalFrame.getEmpresaLogic().setConnexion(this.bodegaproductoLogic.getConnexion());

				if(this.bodegaproducto.getid_empresa()!=null) {
					this.empresaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.empresaBeanSwingJInternalFrame.setIdActual(this.bodegaproducto.getid_empresa());
					this.empresaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpresa();
				}

				JInternalFrameBase jinternalFrame =this.empresaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderBodegaProducto=(TitledBorder)this.jScrollPanelDatosBodegaProducto.getBorder();
				TitledBorder titledBorderempresa=(TitledBorder)this.empresaBeanSwingJInternalFrame.jScrollPanelDatosEmpresa.getBorder();

				titledBorderempresa.setTitle(titledBorderBodegaProducto.getTitle() + " -> Empresa");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_empresaBodegaProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualBodegaProducto(this.getbodegaproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.bodegaproducto==null) {
						this.bodegaproducto = new BodegaProducto();
					}

					this.setVariablesFormularioToObjetoActualBodegaProducto(this.bodegaproducto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
				}

				if(this.bodegaproducto.getid_empresa()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_empresa = "+this.bodegaproducto.getid_empresa().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingBodegaProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_sucursalBodegaProductoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisosucursal=true;

			idTienePermisosucursal=this.tienePermisosUsuarioEnPaginaWebBodegaProducto(SucursalConstantesFunciones.CLASSNAME);

			if(idTienePermisosucursal) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosBodegaProducto.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosBodegaProducto.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproducto =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.bodegaproducto =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualBodegaProducto(this.getbodegaproducto(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);

				this.sucursalBeanSwingJInternalFrame=new SucursalBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.sucursalBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.sucursalBeanSwingJInternalFrame.getSucursalLogic().setConnexion(this.bodegaproductoLogic.getConnexion());

				if(this.bodegaproducto.getid_sucursal()!=null) {
					this.sucursalBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.sucursalBeanSwingJInternalFrame.setIdActual(this.bodegaproducto.getid_sucursal());
					this.sucursalBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.inicializarActualizarBindingTablaSucursal();
				}

				JInternalFrameBase jinternalFrame =this.sucursalBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderBodegaProducto=(TitledBorder)this.jScrollPanelDatosBodegaProducto.getBorder();
				TitledBorder titledBordersucursal=(TitledBorder)this.sucursalBeanSwingJInternalFrame.jScrollPanelDatosSucursal.getBorder();

				titledBordersucursal.setTitle(titledBorderBodegaProducto.getTitle() + " -> Sucursal");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_sucursalBodegaProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualBodegaProducto(this.getbodegaproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.bodegaproducto==null) {
						this.bodegaproducto = new BodegaProducto();
					}

					this.setVariablesFormularioToObjetoActualBodegaProducto(this.bodegaproducto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
				}

				if(this.bodegaproducto.getid_sucursal()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_sucursal = "+this.bodegaproducto.getid_sucursal().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingBodegaProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_bodegaBodegaProductoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisobodega=true;

			idTienePermisobodega=this.tienePermisosUsuarioEnPaginaWebBodegaProducto(BodegaConstantesFunciones.CLASSNAME);

			if(idTienePermisobodega) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosBodegaProducto.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosBodegaProducto.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproducto =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.bodegaproducto =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualBodegaProducto(this.getbodegaproducto(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);

				this.bodegaBeanSwingJInternalFrame=new BodegaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.bodegaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.bodegaBeanSwingJInternalFrame.getBodegaLogic().setConnexion(this.bodegaproductoLogic.getConnexion());

				if(this.bodegaproducto.getid_bodega()!=null) {
					this.bodegaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.bodegaBeanSwingJInternalFrame.setIdActual(this.bodegaproducto.getid_bodega());
					this.bodegaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.bodegaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.bodegaBeanSwingJInternalFrame.inicializarActualizarBindingTablaBodega();
				}

				JInternalFrameBase jinternalFrame =this.bodegaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderBodegaProducto=(TitledBorder)this.jScrollPanelDatosBodegaProducto.getBorder();
				TitledBorder titledBorderbodega=(TitledBorder)this.bodegaBeanSwingJInternalFrame.jScrollPanelDatosBodega.getBorder();

				titledBorderbodega.setTitle(titledBorderBodegaProducto.getTitle() + " -> Bodega");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_bodegaBodegaProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualBodegaProducto(this.getbodegaproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.bodegaproducto==null) {
						this.bodegaproducto = new BodegaProducto();
					}

					this.setVariablesFormularioToObjetoActualBodegaProducto(this.bodegaproducto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
				}

				if(this.bodegaproducto.getid_bodega()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_bodega = "+this.bodegaproducto.getid_bodega().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingBodegaProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_productoBodegaProductoActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.productoBeanSwingJInternalFrame=new ProductoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.productoBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.productoBeanSwingJInternalFrame.sTipoBusqueda="Producto";

			if(!this.sFinalQueryGeneral_producto.equals("")) {
				this.productoBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_producto);
				this.productoBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.productoBeanSwingJInternalFrame.procesarBusqueda(this.productoBeanSwingJInternalFrame.sAccionBusqueda);
				this.productoBeanSwingJInternalFrame.inicializarActualizarBindingProducto(false);
			}

			if(!this.sFinalQueryComboProducto.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.productoBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderBodegaProducto=null;
			TitledBorder titledBorderproducto=null;

			if(!this.jScrollPanelDatosBodegaProducto.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderBodegaProducto=(TitledBorder)this.jScrollPanelDatosBodegaProducto.getBorder();
				titledBorderproducto=(TitledBorder)this.productoBeanSwingJInternalFrame.jScrollPanelDatosProducto.getBorder();

				titledBorderproducto.setTitle(titledBorderBodegaProducto.getTitle() + " -> Producto");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_productoBodegaProductoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoproducto=true;

			idTienePermisoproducto=this.tienePermisosUsuarioEnPaginaWebBodegaProducto(ProductoConstantesFunciones.CLASSNAME);

			if(idTienePermisoproducto) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosBodegaProducto.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosBodegaProducto.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproducto =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.bodegaproducto =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualBodegaProducto(this.getbodegaproducto(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);

				this.productoBeanSwingJInternalFrame=new ProductoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.productoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.productoBeanSwingJInternalFrame.getProductoLogic().setConnexion(this.bodegaproductoLogic.getConnexion());

				if(this.bodegaproducto.getid_producto()!=null) {
					this.productoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.productoBeanSwingJInternalFrame.setIdActual(this.bodegaproducto.getid_producto());
					this.productoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.productoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.productoBeanSwingJInternalFrame.inicializarActualizarBindingTablaProducto();
				}

				JInternalFrameBase jinternalFrame =this.productoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderBodegaProducto=(TitledBorder)this.jScrollPanelDatosBodegaProducto.getBorder();
				TitledBorder titledBorderproducto=(TitledBorder)this.productoBeanSwingJInternalFrame.jScrollPanelDatosProducto.getBorder();

				titledBorderproducto.setTitle(titledBorderBodegaProducto.getTitle() + " -> Producto");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_productoBodegaProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualBodegaProducto(this.getbodegaproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.bodegaproducto==null) {
						this.bodegaproducto = new BodegaProducto();
					}

					this.setVariablesFormularioToObjetoActualBodegaProducto(this.bodegaproducto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
				}

				if(this.bodegaproducto.getid_producto()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_producto = "+this.bodegaproducto.getid_producto().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingBodegaProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_unidadBodegaProductoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisounidad=true;

			idTienePermisounidad=this.tienePermisosUsuarioEnPaginaWebBodegaProducto(UnidadConstantesFunciones.CLASSNAME);

			if(idTienePermisounidad) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosBodegaProducto.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosBodegaProducto.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproducto =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.bodegaproducto =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualBodegaProducto(this.getbodegaproducto(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);

				this.unidadBeanSwingJInternalFrame=new UnidadBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.unidadBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.unidadBeanSwingJInternalFrame.getUnidadLogic().setConnexion(this.bodegaproductoLogic.getConnexion());

				if(this.bodegaproducto.getid_unidad()!=null) {
					this.unidadBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.unidadBeanSwingJInternalFrame.setIdActual(this.bodegaproducto.getid_unidad());
					this.unidadBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.unidadBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.unidadBeanSwingJInternalFrame.inicializarActualizarBindingTablaUnidad();
				}

				JInternalFrameBase jinternalFrame =this.unidadBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderBodegaProducto=(TitledBorder)this.jScrollPanelDatosBodegaProducto.getBorder();
				TitledBorder titledBorderunidad=(TitledBorder)this.unidadBeanSwingJInternalFrame.jScrollPanelDatosUnidad.getBorder();

				titledBorderunidad.setTitle(titledBorderBodegaProducto.getTitle() + " -> Unidad");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_unidadBodegaProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualBodegaProducto(this.getbodegaproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.bodegaproducto==null) {
						this.bodegaproducto = new BodegaProducto();
					}

					this.setVariablesFormularioToObjetoActualBodegaProducto(this.bodegaproducto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
				}

				if(this.bodegaproducto.getid_unidad()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_unidad = "+this.bodegaproducto.getid_unidad().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingBodegaProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_centro_costoBodegaProductoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocentrocosto=true;

			idTienePermisocentrocosto=this.tienePermisosUsuarioEnPaginaWebBodegaProducto(CentroCostoConstantesFunciones.CLASSNAME);

			if(idTienePermisocentrocosto) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosBodegaProducto.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosBodegaProducto.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproducto =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.bodegaproducto =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualBodegaProducto(this.getbodegaproducto(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);

				this.centrocostoBeanSwingJInternalFrame=new CentroCostoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.centrocostoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.centrocostoBeanSwingJInternalFrame.getCentroCostoLogic().setConnexion(this.bodegaproductoLogic.getConnexion());

				if(this.bodegaproducto.getid_centro_costo()!=null) {
					this.centrocostoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.centrocostoBeanSwingJInternalFrame.setIdActual(this.bodegaproducto.getid_centro_costo());
					this.centrocostoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.centrocostoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.centrocostoBeanSwingJInternalFrame.inicializarActualizarBindingTablaCentroCosto();
				}

				JInternalFrameBase jinternalFrame =this.centrocostoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderBodegaProducto=(TitledBorder)this.jScrollPanelDatosBodegaProducto.getBorder();
				TitledBorder titledBordercentrocosto=(TitledBorder)this.centrocostoBeanSwingJInternalFrame.jScrollPanelDatosCentroCosto.getBorder();

				titledBordercentrocosto.setTitle(titledBorderBodegaProducto.getTitle() + " -> Centro Costo");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_centro_costoBodegaProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualBodegaProducto(this.getbodegaproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.bodegaproducto==null) {
						this.bodegaproducto = new BodegaProducto();
					}

					this.setVariablesFormularioToObjetoActualBodegaProducto(this.bodegaproducto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
				}

				if(this.bodegaproducto.getid_centro_costo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_centro_costo = "+this.bodegaproducto.getid_centro_costo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingBodegaProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_estado_bodega_productoBodegaProductoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoestadobodegaproducto=true;

			idTienePermisoestadobodegaproducto=this.tienePermisosUsuarioEnPaginaWebBodegaProducto(EstadoBodegaProductoConstantesFunciones.CLASSNAME);

			if(idTienePermisoestadobodegaproducto) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosBodegaProducto.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosBodegaProducto.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproducto =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.bodegaproducto =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualBodegaProducto(this.getbodegaproducto(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);

				this.estadobodegaproductoBeanSwingJInternalFrame=new EstadoBodegaProductoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.estadobodegaproductoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.estadobodegaproductoBeanSwingJInternalFrame.getEstadoBodegaProductoLogic().setConnexion(this.bodegaproductoLogic.getConnexion());

				if(this.bodegaproducto.getid_estado_bodega_producto()!=null) {
					this.estadobodegaproductoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.estadobodegaproductoBeanSwingJInternalFrame.setIdActual(this.bodegaproducto.getid_estado_bodega_producto());
					this.estadobodegaproductoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.estadobodegaproductoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.estadobodegaproductoBeanSwingJInternalFrame.inicializarActualizarBindingTablaEstadoBodegaProducto();
				}

				JInternalFrameBase jinternalFrame =this.estadobodegaproductoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderBodegaProducto=(TitledBorder)this.jScrollPanelDatosBodegaProducto.getBorder();
				TitledBorder titledBorderestadobodegaproducto=(TitledBorder)this.estadobodegaproductoBeanSwingJInternalFrame.jScrollPanelDatosEstadoBodegaProducto.getBorder();

				titledBorderestadobodegaproducto.setTitle(titledBorderBodegaProducto.getTitle() + " -> Estado Bodega Producto");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_estado_bodega_productoBodegaProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualBodegaProducto(this.getbodegaproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.bodegaproducto==null) {
						this.bodegaproducto = new BodegaProducto();
					}

					this.setVariablesFormularioToObjetoActualBodegaProducto(this.bodegaproducto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
				}

				if(this.bodegaproducto.getid_estado_bodega_producto()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_estado_bodega_producto = "+this.bodegaproducto.getid_estado_bodega_producto().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingBodegaProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtondescripcionBodegaProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualBodegaProducto(this.getbodegaproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.bodegaproducto==null) {
						this.bodegaproducto = new BodegaProducto();
					}

					this.setVariablesFormularioToObjetoActualBodegaProducto(this.bodegaproducto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
				}

				if(this.bodegaproducto.getdescripcion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where descripcion like '%"+this.bodegaproducto.getdescripcion()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingBodegaProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncantidad_disponibleBodegaProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualBodegaProducto(this.getbodegaproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.bodegaproducto==null) {
						this.bodegaproducto = new BodegaProducto();
					}

					this.setVariablesFormularioToObjetoActualBodegaProducto(this.bodegaproducto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
				}

				if(this.bodegaproducto.getcantidad_disponible()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where cantidad_disponible = "+this.bodegaproducto.getcantidad_disponible().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingBodegaProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonstock_maximoBodegaProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualBodegaProducto(this.getbodegaproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.bodegaproducto==null) {
						this.bodegaproducto = new BodegaProducto();
					}

					this.setVariablesFormularioToObjetoActualBodegaProducto(this.bodegaproducto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
				}

				if(this.bodegaproducto.getstock_maximo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where stock_maximo = "+this.bodegaproducto.getstock_maximo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingBodegaProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonstock_minimoBodegaProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualBodegaProducto(this.getbodegaproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.bodegaproducto==null) {
						this.bodegaproducto = new BodegaProducto();
					}

					this.setVariablesFormularioToObjetoActualBodegaProducto(this.bodegaproducto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
				}

				if(this.bodegaproducto.getstock_minimo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where stock_minimo = "+this.bodegaproducto.getstock_minimo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingBodegaProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonivaBodegaProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualBodegaProducto(this.getbodegaproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.bodegaproducto==null) {
						this.bodegaproducto = new BodegaProducto();
					}

					this.setVariablesFormularioToObjetoActualBodegaProducto(this.bodegaproducto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
				}

				if(this.bodegaproducto.getiva()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where iva = "+this.bodegaproducto.getiva().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingBodegaProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoniva_valorBodegaProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualBodegaProducto(this.getbodegaproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.bodegaproducto==null) {
						this.bodegaproducto = new BodegaProducto();
					}

					this.setVariablesFormularioToObjetoActualBodegaProducto(this.bodegaproducto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
				}

				if(this.bodegaproducto.getiva_valor()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where iva_valor = "+this.bodegaproducto.getiva_valor().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingBodegaProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtondescuentoBodegaProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualBodegaProducto(this.getbodegaproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.bodegaproducto==null) {
						this.bodegaproducto = new BodegaProducto();
					}

					this.setVariablesFormularioToObjetoActualBodegaProducto(this.bodegaproducto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
				}

				if(this.bodegaproducto.getdescuento()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where descuento = "+this.bodegaproducto.getdescuento().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingBodegaProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtondescuento_valorBodegaProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualBodegaProducto(this.getbodegaproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.bodegaproducto==null) {
						this.bodegaproducto = new BodegaProducto();
					}

					this.setVariablesFormularioToObjetoActualBodegaProducto(this.bodegaproducto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
				}

				if(this.bodegaproducto.getdescuento_valor()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where descuento_valor = "+this.bodegaproducto.getdescuento_valor().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingBodegaProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoniceBodegaProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualBodegaProducto(this.getbodegaproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.bodegaproducto==null) {
						this.bodegaproducto = new BodegaProducto();
					}

					this.setVariablesFormularioToObjetoActualBodegaProducto(this.bodegaproducto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
				}

				if(this.bodegaproducto.getice()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where ice = "+this.bodegaproducto.getice().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingBodegaProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonice_valorBodegaProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualBodegaProducto(this.getbodegaproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.bodegaproducto==null) {
						this.bodegaproducto = new BodegaProducto();
					}

					this.setVariablesFormularioToObjetoActualBodegaProducto(this.bodegaproducto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
				}

				if(this.bodegaproducto.getice_valor()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where ice_valor = "+this.bodegaproducto.getice_valor().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingBodegaProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncosto_promedioBodegaProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualBodegaProducto(this.getbodegaproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.bodegaproducto==null) {
						this.bodegaproducto = new BodegaProducto();
					}

					this.setVariablesFormularioToObjetoActualBodegaProducto(this.bodegaproducto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
				}

				if(this.bodegaproducto.getcosto_promedio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where costo_promedio = "+this.bodegaproducto.getcosto_promedio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingBodegaProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonporcentaje_comisionBodegaProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualBodegaProducto(this.getbodegaproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.bodegaproducto==null) {
						this.bodegaproducto = new BodegaProducto();
					}

					this.setVariablesFormularioToObjetoActualBodegaProducto(this.bodegaproducto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
				}

				if(this.bodegaproducto.getporcentaje_comision()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where porcentaje_comision = "+this.bodegaproducto.getporcentaje_comision().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingBodegaProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonprecioBodegaProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualBodegaProducto(this.getbodegaproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.bodegaproducto==null) {
						this.bodegaproducto = new BodegaProducto();
					}

					this.setVariablesFormularioToObjetoActualBodegaProducto(this.bodegaproducto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
				}

				if(this.bodegaproducto.getprecio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where precio = "+this.bodegaproducto.getprecio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingBodegaProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonultimo_costoBodegaProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualBodegaProducto(this.getbodegaproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.bodegaproducto==null) {
						this.bodegaproducto = new BodegaProducto();
					}

					this.setVariablesFormularioToObjetoActualBodegaProducto(this.bodegaproducto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
				}

				if(this.bodegaproducto.getultimo_costo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where ultimo_costo = "+this.bodegaproducto.getultimo_costo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingBodegaProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncostoBodegaProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualBodegaProducto(this.getbodegaproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.bodegaproducto==null) {
						this.bodegaproducto = new BodegaProducto();
					}

					this.setVariablesFormularioToObjetoActualBodegaProducto(this.bodegaproducto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
				}

				if(this.bodegaproducto.getcosto()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where costo = "+this.bodegaproducto.getcosto().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingBodegaProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonarancel_porcentajeBodegaProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualBodegaProducto(this.getbodegaproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.bodegaproducto==null) {
						this.bodegaproducto = new BodegaProducto();
					}

					this.setVariablesFormularioToObjetoActualBodegaProducto(this.bodegaproducto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
				}

				if(this.bodegaproducto.getarancel_porcentaje()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where arancel_porcentaje = "+this.bodegaproducto.getarancel_porcentaje().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingBodegaProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonice_porcentajeBodegaProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualBodegaProducto(this.getbodegaproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.bodegaproducto==null) {
						this.bodegaproducto = new BodegaProducto();
					}

					this.setVariablesFormularioToObjetoActualBodegaProducto(this.bodegaproducto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
				}

				if(this.bodegaproducto.getice_porcentaje()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where ice_porcentaje = "+this.bodegaproducto.getice_porcentaje().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingBodegaProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonpesoBodegaProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualBodegaProducto(this.getbodegaproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.bodegaproducto==null) {
						this.bodegaproducto = new BodegaProducto();
					}

					this.setVariablesFormularioToObjetoActualBodegaProducto(this.bodegaproducto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
				}

				if(this.bodegaproducto.getpeso()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where peso = "+this.bodegaproducto.getpeso().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingBodegaProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncon_ivaBodegaProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualBodegaProducto(this.getbodegaproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.bodegaproducto==null) {
						this.bodegaproducto = new BodegaProducto();
					}

					this.setVariablesFormularioToObjetoActualBodegaProducto(this.bodegaproducto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
				}

				if(this.bodegaproducto.getcon_iva()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where con_iva = "+this.bodegaproducto.getcon_iva().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingBodegaProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncon_impuestoBodegaProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualBodegaProducto(this.getbodegaproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.bodegaproducto==null) {
						this.bodegaproducto = new BodegaProducto();
					}

					this.setVariablesFormularioToObjetoActualBodegaProducto(this.bodegaproducto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
				}

				if(this.bodegaproducto.getcon_impuesto()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where con_impuesto = "+this.bodegaproducto.getcon_impuesto().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingBodegaProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncon_iceBodegaProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualBodegaProducto(this.getbodegaproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.bodegaproducto==null) {
						this.bodegaproducto = new BodegaProducto();
					}

					this.setVariablesFormularioToObjetoActualBodegaProducto(this.bodegaproducto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
				}

				if(this.bodegaproducto.getcon_ice()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where con_ice = "+this.bodegaproducto.getcon_ice().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingBodegaProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonesta_activoBodegaProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualBodegaProducto(this.getbodegaproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.bodegaproducto==null) {
						this.bodegaproducto = new BodegaProducto();
					}

					this.setVariablesFormularioToObjetoActualBodegaProducto(this.bodegaproducto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
				}

				if(this.bodegaproducto.getesta_activo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where esta_activo = "+this.bodegaproducto.getesta_activo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingBodegaProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncon_balanzaBodegaProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualBodegaProducto(this.getbodegaproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.bodegaproducto==null) {
						this.bodegaproducto = new BodegaProducto();
					}

					this.setVariablesFormularioToObjetoActualBodegaProducto(this.bodegaproducto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
				}

				if(this.bodegaproducto.getcon_balanza()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where con_balanza = "+this.bodegaproducto.getcon_balanza().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingBodegaProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncantidad_pedidaBodegaProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualBodegaProducto(this.getbodegaproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.bodegaproducto==null) {
						this.bodegaproducto = new BodegaProducto();
					}

					this.setVariablesFormularioToObjetoActualBodegaProducto(this.bodegaproducto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
				}

				if(this.bodegaproducto.getcantidad_pedida()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where cantidad_pedida = "+this.bodegaproducto.getcantidad_pedida().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingBodegaProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncantidad_fisicaBodegaProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualBodegaProducto(this.getbodegaproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.bodegaproducto==null) {
						this.bodegaproducto = new BodegaProducto();
					}

					this.setVariablesFormularioToObjetoActualBodegaProducto(this.bodegaproducto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
				}

				if(this.bodegaproducto.getcantidad_fisica()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where cantidad_fisica = "+this.bodegaproducto.getcantidad_fisica().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingBodegaProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncantidad_requeridoBodegaProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualBodegaProducto(this.getbodegaproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.bodegaproducto==null) {
						this.bodegaproducto = new BodegaProducto();
					}

					this.setVariablesFormularioToObjetoActualBodegaProducto(this.bodegaproducto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
				}

				if(this.bodegaproducto.getcantidad_requerido()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where cantidad_requerido = "+this.bodegaproducto.getcantidad_requerido().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingBodegaProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonprecio_costoBodegaProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualBodegaProducto(this.getbodegaproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.bodegaproducto==null) {
						this.bodegaproducto = new BodegaProducto();
					}

					this.setVariablesFormularioToObjetoActualBodegaProducto(this.bodegaproducto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
				}

				if(this.bodegaproducto.getprecio_costo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where precio_costo = "+this.bodegaproducto.getprecio_costo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingBodegaProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonprecio_promedioBodegaProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualBodegaProducto(this.getbodegaproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.bodegaproducto==null) {
						this.bodegaproducto = new BodegaProducto();
					}

					this.setVariablesFormularioToObjetoActualBodegaProducto(this.bodegaproducto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
				}

				if(this.bodegaproducto.getprecio_promedio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where precio_promedio = "+this.bodegaproducto.getprecio_promedio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingBodegaProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtontotal_ingresosBodegaProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualBodegaProducto(this.getbodegaproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.bodegaproducto==null) {
						this.bodegaproducto = new BodegaProducto();
					}

					this.setVariablesFormularioToObjetoActualBodegaProducto(this.bodegaproducto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
				}

				if(this.bodegaproducto.gettotal_ingresos()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where total_ingresos = "+this.bodegaproducto.gettotal_ingresos().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingBodegaProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtontotal_egresosBodegaProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualBodegaProducto(this.getbodegaproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.bodegaproducto==null) {
						this.bodegaproducto = new BodegaProducto();
					}

					this.setVariablesFormularioToObjetoActualBodegaProducto(this.bodegaproducto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
				}

				if(this.bodegaproducto.gettotal_egresos()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where total_egresos = "+this.bodegaproducto.gettotal_egresos().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingBodegaProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtontotal_provisionBodegaProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualBodegaProducto(this.getbodegaproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.bodegaproducto==null) {
						this.bodegaproducto = new BodegaProducto();
					}

					this.setVariablesFormularioToObjetoActualBodegaProducto(this.bodegaproducto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
				}

				if(this.bodegaproducto.gettotal_provision()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where total_provision = "+this.bodegaproducto.gettotal_provision().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingBodegaProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtontotal_procesoBodegaProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualBodegaProducto(this.getbodegaproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.bodegaproducto==null) {
						this.bodegaproducto = new BodegaProducto();
					}

					this.setVariablesFormularioToObjetoActualBodegaProducto(this.bodegaproducto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
				}

				if(this.bodegaproducto.gettotal_proceso()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where total_proceso = "+this.bodegaproducto.gettotal_proceso().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingBodegaProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncosto_calculadoBodegaProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualBodegaProducto(this.getbodegaproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.bodegaproducto==null) {
						this.bodegaproducto = new BodegaProducto();
					}

					this.setVariablesFormularioToObjetoActualBodegaProducto(this.bodegaproducto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
				}

				if(this.bodegaproducto.getcosto_calculado()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where costo_calculado = "+this.bodegaproducto.getcosto_calculado().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingBodegaProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtondias_produccionBodegaProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualBodegaProducto(this.getbodegaproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.bodegaproducto==null) {
						this.bodegaproducto = new BodegaProducto();
					}

					this.setVariablesFormularioToObjetoActualBodegaProducto(this.bodegaproducto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
				}

				if(this.bodegaproducto.getdias_produccion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where dias_produccion = "+this.bodegaproducto.getdias_produccion().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingBodegaProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonprecio_reposicionBodegaProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualBodegaProducto(this.getbodegaproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.bodegaproducto==null) {
						this.bodegaproducto = new BodegaProducto();
					}

					this.setVariablesFormularioToObjetoActualBodegaProducto(this.bodegaproducto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
				}

				if(this.bodegaproducto.getprecio_reposicion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where precio_reposicion = "+this.bodegaproducto.getprecio_reposicion().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingBodegaProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfecha_ultimo_pedidoBodegaProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualBodegaProducto(this.getbodegaproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.bodegaproducto==null) {
						this.bodegaproducto = new BodegaProducto();
					}

					this.setVariablesFormularioToObjetoActualBodegaProducto(this.bodegaproducto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
				}

				if(this.bodegaproducto.getfecha_ultimo_pedido()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha_ultimo_pedido = '"+Funciones2.getStringPostgresDate(this.bodegaproducto.getfecha_ultimo_pedido())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingBodegaProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfecha_ingresoBodegaProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualBodegaProducto(this.getbodegaproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.bodegaproducto==null) {
						this.bodegaproducto = new BodegaProducto();
					}

					this.setVariablesFormularioToObjetoActualBodegaProducto(this.bodegaproducto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
				}

				if(this.bodegaproducto.getfecha_ingreso()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha_ingreso = '"+Funciones2.getStringPostgresDate(this.bodegaproducto.getfecha_ingreso())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingBodegaProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfecha_egresoBodegaProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualBodegaProducto(this.getbodegaproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.bodegaproducto==null) {
						this.bodegaproducto = new BodegaProducto();
					}

					this.setVariablesFormularioToObjetoActualBodegaProducto(this.bodegaproducto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
				}

				if(this.bodegaproducto.getfecha_egreso()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha_egreso = '"+Funciones2.getStringPostgresDate(this.bodegaproducto.getfecha_egreso())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingBodegaProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfecha_ultima_compraBodegaProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualBodegaProducto(this.getbodegaproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.bodegaproducto==null) {
						this.bodegaproducto = new BodegaProducto();
					}

					this.setVariablesFormularioToObjetoActualBodegaProducto(this.bodegaproducto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
				}

				if(this.bodegaproducto.getfecha_ultima_compra()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha_ultima_compra = '"+Funciones2.getStringPostgresDate(this.bodegaproducto.getfecha_ultima_compra())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingBodegaProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfecha_ultima_ventaBodegaProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualBodegaProducto(this.getbodegaproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.bodegaproducto==null) {
						this.bodegaproducto = new BodegaProducto();
					}

					this.setVariablesFormularioToObjetoActualBodegaProducto(this.bodegaproducto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
				}

				if(this.bodegaproducto.getfecha_ultima_venta()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha_ultima_venta = '"+Funciones2.getStringPostgresDate(this.bodegaproducto.getfecha_ultima_venta())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingBodegaProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfecha_ultima_devolucionBodegaProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualBodegaProducto(this.getbodegaproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.bodegaproducto==null) {
						this.bodegaproducto = new BodegaProducto();
					}

					this.setVariablesFormularioToObjetoActualBodegaProducto(this.bodegaproducto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
				}

				if(this.bodegaproducto.getfecha_ultima_devolucion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha_ultima_devolucion = '"+Funciones2.getStringPostgresDate(this.bodegaproducto.getfecha_ultima_devolucion())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingBodegaProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_cuenta_contable_inventarioBodegaProductoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocuentacontableinventario=true;

			idTienePermisocuentacontableinventario=this.tienePermisosUsuarioEnPaginaWebBodegaProducto(CuentaContableConstantesFunciones.CLASSNAME);

			if(idTienePermisocuentacontableinventario) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosBodegaProducto.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosBodegaProducto.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproducto =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.bodegaproducto =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualBodegaProducto(this.getbodegaproducto(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);

				this.cuentacontableinventarioBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.cuentacontableinventarioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.cuentacontableinventarioBeanSwingJInternalFrame.getCuentaContableLogic().setConnexion(this.bodegaproductoLogic.getConnexion());

				if(this.bodegaproducto.getid_cuenta_contable_inventario()!=null) {
					this.cuentacontableinventarioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.cuentacontableinventarioBeanSwingJInternalFrame.setIdActual(this.bodegaproducto.getid_cuenta_contable_inventario());
					this.cuentacontableinventarioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.cuentacontableinventarioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.cuentacontableinventarioBeanSwingJInternalFrame.inicializarActualizarBindingTablaCuentaContable();
				}

				JInternalFrameBase jinternalFrame =this.cuentacontableinventarioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderBodegaProducto=(TitledBorder)this.jScrollPanelDatosBodegaProducto.getBorder();
				TitledBorder titledBordercuentacontableinventario=(TitledBorder)this.cuentacontableinventarioBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontableinventario.setTitle(titledBorderBodegaProducto.getTitle() + " -> Cuenta Contable");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_cuenta_contable_inventarioBodegaProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualBodegaProducto(this.getbodegaproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.bodegaproducto==null) {
						this.bodegaproducto = new BodegaProducto();
					}

					this.setVariablesFormularioToObjetoActualBodegaProducto(this.bodegaproducto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
				}

				if(this.bodegaproducto.getid_cuenta_contable_inventario()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cuenta_contable_inventario = "+this.bodegaproducto.getid_cuenta_contable_inventario().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingBodegaProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_cuenta_contable_costo_ventaBodegaProductoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocuentacontablecostoventa=true;

			idTienePermisocuentacontablecostoventa=this.tienePermisosUsuarioEnPaginaWebBodegaProducto(CuentaContableConstantesFunciones.CLASSNAME);

			if(idTienePermisocuentacontablecostoventa) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosBodegaProducto.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosBodegaProducto.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproducto =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.bodegaproducto =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualBodegaProducto(this.getbodegaproducto(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);

				this.cuentacontablecostoventaBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.cuentacontablecostoventaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.cuentacontablecostoventaBeanSwingJInternalFrame.getCuentaContableLogic().setConnexion(this.bodegaproductoLogic.getConnexion());

				if(this.bodegaproducto.getid_cuenta_contable_costo_venta()!=null) {
					this.cuentacontablecostoventaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.cuentacontablecostoventaBeanSwingJInternalFrame.setIdActual(this.bodegaproducto.getid_cuenta_contable_costo_venta());
					this.cuentacontablecostoventaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.cuentacontablecostoventaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.cuentacontablecostoventaBeanSwingJInternalFrame.inicializarActualizarBindingTablaCuentaContable();
				}

				JInternalFrameBase jinternalFrame =this.cuentacontablecostoventaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderBodegaProducto=(TitledBorder)this.jScrollPanelDatosBodegaProducto.getBorder();
				TitledBorder titledBordercuentacontablecostoventa=(TitledBorder)this.cuentacontablecostoventaBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontablecostoventa.setTitle(titledBorderBodegaProducto.getTitle() + " -> Cuenta Contable");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_cuenta_contable_costo_ventaBodegaProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualBodegaProducto(this.getbodegaproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.bodegaproducto==null) {
						this.bodegaproducto = new BodegaProducto();
					}

					this.setVariablesFormularioToObjetoActualBodegaProducto(this.bodegaproducto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
				}

				if(this.bodegaproducto.getid_cuenta_contable_costo_venta()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cuenta_contable_costo_venta = "+this.bodegaproducto.getid_cuenta_contable_costo_venta().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingBodegaProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_cuenta_contable_ventaBodegaProductoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocuentacontableventa=true;

			idTienePermisocuentacontableventa=this.tienePermisosUsuarioEnPaginaWebBodegaProducto(CuentaContableConstantesFunciones.CLASSNAME);

			if(idTienePermisocuentacontableventa) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosBodegaProducto.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosBodegaProducto.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproducto =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.bodegaproducto =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualBodegaProducto(this.getbodegaproducto(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);

				this.cuentacontableventaBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.cuentacontableventaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.cuentacontableventaBeanSwingJInternalFrame.getCuentaContableLogic().setConnexion(this.bodegaproductoLogic.getConnexion());

				if(this.bodegaproducto.getid_cuenta_contable_venta()!=null) {
					this.cuentacontableventaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.cuentacontableventaBeanSwingJInternalFrame.setIdActual(this.bodegaproducto.getid_cuenta_contable_venta());
					this.cuentacontableventaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.cuentacontableventaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.cuentacontableventaBeanSwingJInternalFrame.inicializarActualizarBindingTablaCuentaContable();
				}

				JInternalFrameBase jinternalFrame =this.cuentacontableventaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderBodegaProducto=(TitledBorder)this.jScrollPanelDatosBodegaProducto.getBorder();
				TitledBorder titledBordercuentacontableventa=(TitledBorder)this.cuentacontableventaBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontableventa.setTitle(titledBorderBodegaProducto.getTitle() + " -> Cuenta Contable");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_cuenta_contable_ventaBodegaProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualBodegaProducto(this.getbodegaproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.bodegaproducto==null) {
						this.bodegaproducto = new BodegaProducto();
					}

					this.setVariablesFormularioToObjetoActualBodegaProducto(this.bodegaproducto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
				}

				if(this.bodegaproducto.getid_cuenta_contable_venta()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cuenta_contable_venta = "+this.bodegaproducto.getid_cuenta_contable_venta().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingBodegaProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_cuenta_contable_descuentoBodegaProductoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocuentacontabledescuento=true;

			idTienePermisocuentacontabledescuento=this.tienePermisosUsuarioEnPaginaWebBodegaProducto(CuentaContableConstantesFunciones.CLASSNAME);

			if(idTienePermisocuentacontabledescuento) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosBodegaProducto.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosBodegaProducto.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproducto =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.bodegaproducto =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualBodegaProducto(this.getbodegaproducto(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);

				this.cuentacontabledescuentoBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.cuentacontabledescuentoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.cuentacontabledescuentoBeanSwingJInternalFrame.getCuentaContableLogic().setConnexion(this.bodegaproductoLogic.getConnexion());

				if(this.bodegaproducto.getid_cuenta_contable_descuento()!=null) {
					this.cuentacontabledescuentoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.cuentacontabledescuentoBeanSwingJInternalFrame.setIdActual(this.bodegaproducto.getid_cuenta_contable_descuento());
					this.cuentacontabledescuentoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.cuentacontabledescuentoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.cuentacontabledescuentoBeanSwingJInternalFrame.inicializarActualizarBindingTablaCuentaContable();
				}

				JInternalFrameBase jinternalFrame =this.cuentacontabledescuentoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderBodegaProducto=(TitledBorder)this.jScrollPanelDatosBodegaProducto.getBorder();
				TitledBorder titledBordercuentacontabledescuento=(TitledBorder)this.cuentacontabledescuentoBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontabledescuento.setTitle(titledBorderBodegaProducto.getTitle() + " -> Cuenta Contable");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_cuenta_contable_descuentoBodegaProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualBodegaProducto(this.getbodegaproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.bodegaproducto==null) {
						this.bodegaproducto = new BodegaProducto();
					}

					this.setVariablesFormularioToObjetoActualBodegaProducto(this.bodegaproducto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
				}

				if(this.bodegaproducto.getid_cuenta_contable_descuento()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cuenta_contable_descuento = "+this.bodegaproducto.getid_cuenta_contable_descuento().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingBodegaProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_cuenta_contable_produccionBodegaProductoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocuentacontableproduccion=true;

			idTienePermisocuentacontableproduccion=this.tienePermisosUsuarioEnPaginaWebBodegaProducto(CuentaContableConstantesFunciones.CLASSNAME);

			if(idTienePermisocuentacontableproduccion) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosBodegaProducto.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosBodegaProducto.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproducto =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.bodegaproducto =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualBodegaProducto(this.getbodegaproducto(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);

				this.cuentacontableproduccionBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.cuentacontableproduccionBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.cuentacontableproduccionBeanSwingJInternalFrame.getCuentaContableLogic().setConnexion(this.bodegaproductoLogic.getConnexion());

				if(this.bodegaproducto.getid_cuenta_contable_produccion()!=null) {
					this.cuentacontableproduccionBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.cuentacontableproduccionBeanSwingJInternalFrame.setIdActual(this.bodegaproducto.getid_cuenta_contable_produccion());
					this.cuentacontableproduccionBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.cuentacontableproduccionBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.cuentacontableproduccionBeanSwingJInternalFrame.inicializarActualizarBindingTablaCuentaContable();
				}

				JInternalFrameBase jinternalFrame =this.cuentacontableproduccionBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderBodegaProducto=(TitledBorder)this.jScrollPanelDatosBodegaProducto.getBorder();
				TitledBorder titledBordercuentacontableproduccion=(TitledBorder)this.cuentacontableproduccionBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontableproduccion.setTitle(titledBorderBodegaProducto.getTitle() + " -> Cuenta Contable");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_cuenta_contable_produccionBodegaProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualBodegaProducto(this.getbodegaproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.bodegaproducto==null) {
						this.bodegaproducto = new BodegaProducto();
					}

					this.setVariablesFormularioToObjetoActualBodegaProducto(this.bodegaproducto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
				}

				if(this.bodegaproducto.getid_cuenta_contable_produccion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cuenta_contable_produccion = "+this.bodegaproducto.getid_cuenta_contable_produccion().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingBodegaProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_cuenta_contable_devolucionBodegaProductoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocuentacontabledevolucion=true;

			idTienePermisocuentacontabledevolucion=this.tienePermisosUsuarioEnPaginaWebBodegaProducto(CuentaContableConstantesFunciones.CLASSNAME);

			if(idTienePermisocuentacontabledevolucion) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosBodegaProducto.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosBodegaProducto.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproducto =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.bodegaproducto =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualBodegaProducto(this.getbodegaproducto(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);

				this.cuentacontabledevolucionBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.cuentacontabledevolucionBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.cuentacontabledevolucionBeanSwingJInternalFrame.getCuentaContableLogic().setConnexion(this.bodegaproductoLogic.getConnexion());

				if(this.bodegaproducto.getid_cuenta_contable_devolucion()!=null) {
					this.cuentacontabledevolucionBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.cuentacontabledevolucionBeanSwingJInternalFrame.setIdActual(this.bodegaproducto.getid_cuenta_contable_devolucion());
					this.cuentacontabledevolucionBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.cuentacontabledevolucionBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.cuentacontabledevolucionBeanSwingJInternalFrame.inicializarActualizarBindingTablaCuentaContable();
				}

				JInternalFrameBase jinternalFrame =this.cuentacontabledevolucionBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderBodegaProducto=(TitledBorder)this.jScrollPanelDatosBodegaProducto.getBorder();
				TitledBorder titledBordercuentacontabledevolucion=(TitledBorder)this.cuentacontabledevolucionBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontabledevolucion.setTitle(titledBorderBodegaProducto.getTitle() + " -> Cuenta Contable");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_cuenta_contable_devolucionBodegaProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualBodegaProducto(this.getbodegaproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.bodegaproducto==null) {
						this.bodegaproducto = new BodegaProducto();
					}

					this.setVariablesFormularioToObjetoActualBodegaProducto(this.bodegaproducto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
				}

				if(this.bodegaproducto.getid_cuenta_contable_devolucion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cuenta_contable_devolucion = "+this.bodegaproducto.getid_cuenta_contable_devolucion().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingBodegaProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_cuenta_contable_ingreso_debitoBodegaProductoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocuentacontableingresodebito=true;

			idTienePermisocuentacontableingresodebito=this.tienePermisosUsuarioEnPaginaWebBodegaProducto(CuentaContableConstantesFunciones.CLASSNAME);

			if(idTienePermisocuentacontableingresodebito) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosBodegaProducto.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosBodegaProducto.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproducto =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.bodegaproducto =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualBodegaProducto(this.getbodegaproducto(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);

				this.cuentacontableingresodebitoBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.cuentacontableingresodebitoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.cuentacontableingresodebitoBeanSwingJInternalFrame.getCuentaContableLogic().setConnexion(this.bodegaproductoLogic.getConnexion());

				if(this.bodegaproducto.getid_cuenta_contable_ingreso_debito()!=null) {
					this.cuentacontableingresodebitoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.cuentacontableingresodebitoBeanSwingJInternalFrame.setIdActual(this.bodegaproducto.getid_cuenta_contable_ingreso_debito());
					this.cuentacontableingresodebitoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.cuentacontableingresodebitoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.cuentacontableingresodebitoBeanSwingJInternalFrame.inicializarActualizarBindingTablaCuentaContable();
				}

				JInternalFrameBase jinternalFrame =this.cuentacontableingresodebitoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderBodegaProducto=(TitledBorder)this.jScrollPanelDatosBodegaProducto.getBorder();
				TitledBorder titledBordercuentacontableingresodebito=(TitledBorder)this.cuentacontableingresodebitoBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontableingresodebito.setTitle(titledBorderBodegaProducto.getTitle() + " -> Cuenta Contable");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_cuenta_contable_ingreso_debitoBodegaProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualBodegaProducto(this.getbodegaproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.bodegaproducto==null) {
						this.bodegaproducto = new BodegaProducto();
					}

					this.setVariablesFormularioToObjetoActualBodegaProducto(this.bodegaproducto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
				}

				if(this.bodegaproducto.getid_cuenta_contable_ingreso_debito()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cuenta_contable_ingreso_debito = "+this.bodegaproducto.getid_cuenta_contable_ingreso_debito().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingBodegaProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_cuenta_contable_ingreso_creditoBodegaProductoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocuentacontableingresocredito=true;

			idTienePermisocuentacontableingresocredito=this.tienePermisosUsuarioEnPaginaWebBodegaProducto(CuentaContableConstantesFunciones.CLASSNAME);

			if(idTienePermisocuentacontableingresocredito) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosBodegaProducto.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosBodegaProducto.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproducto =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.bodegaproducto =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualBodegaProducto(this.getbodegaproducto(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);

				this.cuentacontableingresocreditoBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.cuentacontableingresocreditoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.cuentacontableingresocreditoBeanSwingJInternalFrame.getCuentaContableLogic().setConnexion(this.bodegaproductoLogic.getConnexion());

				if(this.bodegaproducto.getid_cuenta_contable_ingreso_credito()!=null) {
					this.cuentacontableingresocreditoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.cuentacontableingresocreditoBeanSwingJInternalFrame.setIdActual(this.bodegaproducto.getid_cuenta_contable_ingreso_credito());
					this.cuentacontableingresocreditoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.cuentacontableingresocreditoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.cuentacontableingresocreditoBeanSwingJInternalFrame.inicializarActualizarBindingTablaCuentaContable();
				}

				JInternalFrameBase jinternalFrame =this.cuentacontableingresocreditoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderBodegaProducto=(TitledBorder)this.jScrollPanelDatosBodegaProducto.getBorder();
				TitledBorder titledBordercuentacontableingresocredito=(TitledBorder)this.cuentacontableingresocreditoBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontableingresocredito.setTitle(titledBorderBodegaProducto.getTitle() + " -> Cuenta Contable");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_cuenta_contable_ingreso_creditoBodegaProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualBodegaProducto(this.getbodegaproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.bodegaproducto==null) {
						this.bodegaproducto = new BodegaProducto();
					}

					this.setVariablesFormularioToObjetoActualBodegaProducto(this.bodegaproducto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
				}

				if(this.bodegaproducto.getid_cuenta_contable_ingreso_credito()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cuenta_contable_ingreso_credito = "+this.bodegaproducto.getid_cuenta_contable_ingreso_credito().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingBodegaProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_cuenta_contable_resultado_debitoBodegaProductoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocuentacontableresultadodebito=true;

			idTienePermisocuentacontableresultadodebito=this.tienePermisosUsuarioEnPaginaWebBodegaProducto(CuentaContableConstantesFunciones.CLASSNAME);

			if(idTienePermisocuentacontableresultadodebito) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosBodegaProducto.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosBodegaProducto.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproducto =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.bodegaproducto =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualBodegaProducto(this.getbodegaproducto(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);

				this.cuentacontableresultadodebitoBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.cuentacontableresultadodebitoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.cuentacontableresultadodebitoBeanSwingJInternalFrame.getCuentaContableLogic().setConnexion(this.bodegaproductoLogic.getConnexion());

				if(this.bodegaproducto.getid_cuenta_contable_resultado_debito()!=null) {
					this.cuentacontableresultadodebitoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.cuentacontableresultadodebitoBeanSwingJInternalFrame.setIdActual(this.bodegaproducto.getid_cuenta_contable_resultado_debito());
					this.cuentacontableresultadodebitoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.cuentacontableresultadodebitoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.cuentacontableresultadodebitoBeanSwingJInternalFrame.inicializarActualizarBindingTablaCuentaContable();
				}

				JInternalFrameBase jinternalFrame =this.cuentacontableresultadodebitoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderBodegaProducto=(TitledBorder)this.jScrollPanelDatosBodegaProducto.getBorder();
				TitledBorder titledBordercuentacontableresultadodebito=(TitledBorder)this.cuentacontableresultadodebitoBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontableresultadodebito.setTitle(titledBorderBodegaProducto.getTitle() + " -> Cuenta Contable");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_cuenta_contable_resultado_debitoBodegaProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualBodegaProducto(this.getbodegaproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.bodegaproducto==null) {
						this.bodegaproducto = new BodegaProducto();
					}

					this.setVariablesFormularioToObjetoActualBodegaProducto(this.bodegaproducto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
				}

				if(this.bodegaproducto.getid_cuenta_contable_resultado_debito()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cuenta_contable_resultado_debito = "+this.bodegaproducto.getid_cuenta_contable_resultado_debito().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingBodegaProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_cuenta_contable_resultado_creditoBodegaProductoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocuentacontableresultadocredito=true;

			idTienePermisocuentacontableresultadocredito=this.tienePermisosUsuarioEnPaginaWebBodegaProducto(CuentaContableConstantesFunciones.CLASSNAME);

			if(idTienePermisocuentacontableresultadocredito) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosBodegaProducto.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosBodegaProducto.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproducto =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.bodegaproducto =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualBodegaProducto(this.getbodegaproducto(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);

				this.cuentacontableresultadocreditoBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.cuentacontableresultadocreditoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.cuentacontableresultadocreditoBeanSwingJInternalFrame.getCuentaContableLogic().setConnexion(this.bodegaproductoLogic.getConnexion());

				if(this.bodegaproducto.getid_cuenta_contable_resultado_credito()!=null) {
					this.cuentacontableresultadocreditoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.cuentacontableresultadocreditoBeanSwingJInternalFrame.setIdActual(this.bodegaproducto.getid_cuenta_contable_resultado_credito());
					this.cuentacontableresultadocreditoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.cuentacontableresultadocreditoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.cuentacontableresultadocreditoBeanSwingJInternalFrame.inicializarActualizarBindingTablaCuentaContable();
				}

				JInternalFrameBase jinternalFrame =this.cuentacontableresultadocreditoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderBodegaProducto=(TitledBorder)this.jScrollPanelDatosBodegaProducto.getBorder();
				TitledBorder titledBordercuentacontableresultadocredito=(TitledBorder)this.cuentacontableresultadocreditoBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontableresultadocredito.setTitle(titledBorderBodegaProducto.getTitle() + " -> Cuenta Contable");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_cuenta_contable_resultado_creditoBodegaProductoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualBodegaProducto(this.getbodegaproducto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.bodegaproducto =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.bodegaproducto==null) {
						this.bodegaproducto = new BodegaProducto();
					}

					this.setVariablesFormularioToObjetoActualBodegaProducto(this.bodegaproducto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);
				}

				if(this.bodegaproducto.getid_cuenta_contable_resultado_credito()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cuenta_contable_resultado_credito = "+this.bodegaproducto.getid_cuenta_contable_resultado_credito().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingBodegaProducto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoLogic.closeNewConnexionToDeep();
				}

			}
		}

	
	
	public void jButtonFK_IdBodegaBodegaProductoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingBodegaProducto(false,false);

			this.getBodegaProductosFK_IdBodega();

			this.inicializarActualizarBindingBodegaProducto(false);

			//if(BodegaProductoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingBodegaProducto(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdBodegaProductoBodegaProductoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingBodegaProducto(false,false);

			this.getBodegaProductosFK_IdBodegaProducto();

			this.inicializarActualizarBindingBodegaProducto(false);

			//if(BodegaProductoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingBodegaProducto(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdCentroCostoBodegaProductoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingBodegaProducto(false,false);

			this.getBodegaProductosFK_IdCentroCosto();

			this.inicializarActualizarBindingBodegaProducto(false);

			//if(BodegaProductoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingBodegaProducto(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdCuentaContableCostoVentaBodegaProductoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingBodegaProducto(false,false);

			this.getBodegaProductosFK_IdCuentaContableCostoVenta();

			this.inicializarActualizarBindingBodegaProducto(false);

			//if(BodegaProductoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingBodegaProducto(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdCuentaContableDescuentoBodegaProductoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingBodegaProducto(false,false);

			this.getBodegaProductosFK_IdCuentaContableDescuento();

			this.inicializarActualizarBindingBodegaProducto(false);

			//if(BodegaProductoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingBodegaProducto(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdCuentaContableDevolucionBodegaProductoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingBodegaProducto(false,false);

			this.getBodegaProductosFK_IdCuentaContableDevolucion();

			this.inicializarActualizarBindingBodegaProducto(false);

			//if(BodegaProductoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingBodegaProducto(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdCuentaContableIngresoCreditoBodegaProductoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingBodegaProducto(false,false);

			this.getBodegaProductosFK_IdCuentaContableIngresoCredito();

			this.inicializarActualizarBindingBodegaProducto(false);

			//if(BodegaProductoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingBodegaProducto(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdCuentaContableIngresoDebitoBodegaProductoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingBodegaProducto(false,false);

			this.getBodegaProductosFK_IdCuentaContableIngresoDebito();

			this.inicializarActualizarBindingBodegaProducto(false);

			//if(BodegaProductoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingBodegaProducto(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdCuentaContableInventarioBodegaProductoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingBodegaProducto(false,false);

			this.getBodegaProductosFK_IdCuentaContableInventario();

			this.inicializarActualizarBindingBodegaProducto(false);

			//if(BodegaProductoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingBodegaProducto(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdCuentaContableProduccionBodegaProductoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingBodegaProducto(false,false);

			this.getBodegaProductosFK_IdCuentaContableProduccion();

			this.inicializarActualizarBindingBodegaProducto(false);

			//if(BodegaProductoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingBodegaProducto(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdCuentaContableResultadoCreditoBodegaProductoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingBodegaProducto(false,false);

			this.getBodegaProductosFK_IdCuentaContableResultadoCredito();

			this.inicializarActualizarBindingBodegaProducto(false);

			//if(BodegaProductoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingBodegaProducto(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdCuentaContableResultadoDebitoBodegaProductoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingBodegaProducto(false,false);

			this.getBodegaProductosFK_IdCuentaContableResultadoDebito();

			this.inicializarActualizarBindingBodegaProducto(false);

			//if(BodegaProductoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingBodegaProducto(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdCuentaContableVentaBodegaProductoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingBodegaProducto(false,false);

			this.getBodegaProductosFK_IdCuentaContableVenta();

			this.inicializarActualizarBindingBodegaProducto(false);

			//if(BodegaProductoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingBodegaProducto(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEmpresaBodegaProductoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingBodegaProducto(false,false);

			this.getBodegaProductosFK_IdEmpresa();

			this.inicializarActualizarBindingBodegaProducto(false);

			//if(BodegaProductoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingBodegaProducto(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdProductoBodegaProductoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingBodegaProducto(false,false);

			this.getBodegaProductosFK_IdProducto();

			this.inicializarActualizarBindingBodegaProducto(false);

			//if(BodegaProductoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingBodegaProducto(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdSucursalBodegaProductoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingBodegaProducto(false,false);

			this.getBodegaProductosFK_IdSucursal();

			this.inicializarActualizarBindingBodegaProducto(false);

			//if(BodegaProductoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingBodegaProducto(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdUnidadBodegaProductoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingBodegaProducto(false,false);

			this.getBodegaProductosFK_IdUnidad();

			this.inicializarActualizarBindingBodegaProducto(false);

			//if(BodegaProductoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingBodegaProducto(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.bodegaproductoLogic.closeNewConnexionToDeep();
			}
		}
	}

	
	public void closingInternalFrameBodegaProducto() {
		if(this.jInternalFrameDetalleFormBodegaProducto!=null) {
			
		
		
		}
		
		if(this.jInternalFrameDetalleFormBodegaProducto!=null) {
			this.jInternalFrameDetalleFormBodegaProducto.setVisible(false);	    			
			this.jInternalFrameDetalleFormBodegaProducto.dispose();
			this.jInternalFrameDetalleFormBodegaProducto=null;
		}
		
		
		if(this.jInternalFrameReporteDinamicoBodegaProducto!=null) {
			this.jInternalFrameReporteDinamicoBodegaProducto.setVisible(false);	    			
			this.jInternalFrameReporteDinamicoBodegaProducto.dispose();
			this.jInternalFrameReporteDinamicoBodegaProducto=null;
		}
		
		if(this.jInternalFrameImportacionBodegaProducto!=null) {
			this.jInternalFrameImportacionBodegaProducto.setVisible(false);	    			
			this.jInternalFrameImportacionBodegaProducto.dispose();
			this.jInternalFrameImportacionBodegaProducto=null;
		}		
		
		
		this.setVisible(false);
		this.dispose();
		//this=null;
	}
	
	
	
	public void jButtonActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {			
			this.startProcessBodegaProducto();
			
			BodegaProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.bodegaproducto,new Object(),this.bodegaproductoParameterGeneral,this.bodegaproductoReturnGeneral);
			
			
			if(sTipo.equals("NuevoBodegaProducto")) {
				jButtonNuevoBodegaProductoActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarBodegaProducto")) {
				jButtonDuplicarBodegaProductoActionPerformed(evt,false);
			} else if(sTipo.equals("CopiarBodegaProducto")) {
				jButtonCopiarBodegaProductoActionPerformed(evt);
			} else if(sTipo.equals("VerFormBodegaProducto")) {
				jButtonVerFormBodegaProductoActionPerformed(evt);
			} else if(sTipo.equals("NuevoToolBarBodegaProducto")) {
				jButtonNuevoBodegaProductoActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarToolBarBodegaProducto")) {
				jButtonDuplicarBodegaProductoActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemNuevoBodegaProducto")) {
				jButtonNuevoBodegaProductoActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemDuplicarBodegaProducto")) {
				jButtonDuplicarBodegaProductoActionPerformed(evt,false);
			} else if(sTipo.equals("NuevoRelacionesBodegaProducto")) {
				jButtonNuevoBodegaProductoActionPerformed(evt,true);
			} else if(sTipo.equals("NuevoRelacionesToolBarBodegaProducto")) {
				jButtonNuevoBodegaProductoActionPerformed(evt,true);
			} else if(sTipo.equals("MenuItemNuevoRelacionesBodegaProducto")) {
				jButtonNuevoBodegaProductoActionPerformed(evt,true);
			} else if(sTipo.equals("ModificarBodegaProducto")) {
				jButtonModificarBodegaProductoActionPerformed(evt);
			} else if(sTipo.equals("ModificarToolBarBodegaProducto")) {
				jButtonModificarBodegaProductoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemModificarBodegaProducto")) {
				jButtonModificarBodegaProductoActionPerformed(evt);
			} else if(sTipo.equals("ActualizarBodegaProducto")) {
				jButtonActualizarBodegaProductoActionPerformed(evt);
			} else if(sTipo.equals("ActualizarToolBarBodegaProducto")) {
				jButtonActualizarBodegaProductoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemActualizarBodegaProducto")) {
				jButtonActualizarBodegaProductoActionPerformed(evt);
			} else if(sTipo.equals("EliminarBodegaProducto")) {
				jButtonEliminarBodegaProductoActionPerformed(evt);
			} else if(sTipo.equals("EliminarToolBarBodegaProducto")) {
				jButtonEliminarBodegaProductoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemEliminarBodegaProducto")) {
				jButtonEliminarBodegaProductoActionPerformed(evt);
			} else if(sTipo.equals("CancelarBodegaProducto")) {
				jButtonCancelarBodegaProductoActionPerformed(evt);
			} else if(sTipo.equals("CancelarToolBarBodegaProducto")) {
				jButtonCancelarBodegaProductoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCancelarBodegaProducto")) {
				jButtonCancelarBodegaProductoActionPerformed(evt);
			} else if(sTipo.equals("CerrarBodegaProducto")) {
				jButtonCerrarBodegaProductoActionPerformed(evt);
			} else if(sTipo.equals("CerrarToolBarBodegaProducto")) {
				jButtonCerrarBodegaProductoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCerrarBodegaProducto")) {
				jButtonCerrarBodegaProductoActionPerformed(evt);
			} else if(sTipo.equals("MostrarOcultarToolBarBodegaProducto")) {
				jButtonMostrarOcultarBodegaProductoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemDetalleCerrarBodegaProducto")) {
				jButtonCancelarBodegaProductoActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosBodegaProducto")) {
				jButtonGuardarCambiosBodegaProductoActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosToolBarBodegaProducto")) {
				jButtonGuardarCambiosBodegaProductoActionPerformed(evt);
			} else if(sTipo.equals("CopiarToolBarBodegaProducto")) {
				jButtonCopiarBodegaProductoActionPerformed(evt);
			} else if(sTipo.equals("VerFormToolBarBodegaProducto")) {
				jButtonVerFormBodegaProductoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosBodegaProducto")) {
				jButtonGuardarCambiosBodegaProductoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCopiarBodegaProducto")) {
				jButtonCopiarBodegaProductoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemVerFormBodegaProducto")) {
				jButtonVerFormBodegaProductoActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaBodegaProducto")) {
				jButtonGuardarCambiosBodegaProductoActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaToolBarBodegaProducto")) {
				jButtonGuardarCambiosBodegaProductoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosTablaBodegaProducto")) {
				jButtonGuardarCambiosBodegaProductoActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionBodegaProducto")) {
				jButtonRecargarInformacionBodegaProductoActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionToolBarBodegaProducto")) {
				jButtonRecargarInformacionBodegaProductoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemRecargarInformacionBodegaProducto")) {
				jButtonRecargarInformacionBodegaProductoActionPerformed(evt);
			}
			else if(sTipo.equals("AnterioresBodegaProducto")) {
				jButtonAnterioresBodegaProductoActionPerformed(evt);
			} else if(sTipo.equals("AnterioresToolBarBodegaProducto")) {
				jButtonAnterioresBodegaProductoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAnterioreBodegaProducto")) {
				jButtonAnterioresBodegaProductoActionPerformed(evt);
			} else if(sTipo.equals("SiguientesBodegaProducto")) {
				jButtonSiguientesBodegaProductoActionPerformed(evt);
			} else if(sTipo.equals("SiguientesToolBarBodegaProducto")) {
				jButtonSiguientesBodegaProductoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemSiguientesBodegaProducto")) {
				jButtonSiguientesBodegaProductoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAbrirOrderByBodegaProducto") || sTipo.equals("MenuItemDetalleAbrirOrderByBodegaProducto")) {
				jButtonAbrirOrderByBodegaProductoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemMostrarOcultarBodegaProducto") || sTipo.equals("MenuItemDetalleMostrarOcultarBodegaProducto")) {
				jButtonMostrarOcultarBodegaProductoActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosBodegaProducto")) {
				jButtonNuevoGuardarCambiosBodegaProductoActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosToolBarBodegaProducto")) {
				jButtonNuevoGuardarCambiosBodegaProductoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemNuevoGuardarCambiosBodegaProducto")) {
				jButtonNuevoGuardarCambiosBodegaProductoActionPerformed(evt);
			} 
			else if(sTipo.equals("CerrarReporteDinamicoBodegaProducto")) {
				jButtonCerrarReporteDinamicoBodegaProductoActionPerformed(evt);
			} else if(sTipo.equals("GenerarReporteDinamicoBodegaProducto")) {
				jButtonGenerarReporteDinamicoBodegaProductoActionPerformed(evt);
			} else if(sTipo.equals("GenerarExcelReporteDinamicoBodegaProducto")) {
				
				jButtonGenerarExcelReporteDinamicoBodegaProductoActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarImportacionBodegaProducto")) {
				jButtonCerrarImportacionBodegaProductoActionPerformed(evt);
			} else if(sTipo.equals("GenerarImportacionBodegaProducto")) {
				
				jButtonGenerarImportacionBodegaProductoActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirImportacionBodegaProducto")) {
				
				jButtonAbrirImportacionBodegaProductoActionPerformed(evt);
				
			} else if(sTipo.equals("TiposAccionesBodegaProducto")) {
				jComboBoxTiposAccionesBodegaProductoActionListener(evt,false);
			} else if(sTipo.equals("TiposRelacionesBodegaProducto")) {
				jComboBoxTiposRelacionesBodegaProductoActionListener(evt);
			} else if(sTipo.equals("TiposAccionesFormularioBodegaProducto")) {
				jComboBoxTiposAccionesBodegaProductoActionListener(evt,true);
			} else if(sTipo.equals("TiposSeleccionarBodegaProducto")) {
				
				jComboBoxTiposSeleccionarBodegaProductoActionListener(evt);
				
			} else if(sTipo.equals("ValorCampoGeneralBodegaProducto")) {
				jTextFieldValorCampoGeneralBodegaProductoActionListener(evt);
			}
			
			
			else if(sTipo.equals("AbrirOrderByBodegaProducto")) {
				jButtonAbrirOrderByBodegaProductoActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirOrderByToolBarBodegaProducto")) {
				jButtonAbrirOrderByBodegaProductoActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarOrderByBodegaProducto")) {
				jButtonCerrarOrderByBodegaProductoActionPerformed(evt);
			} 
						
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idBodegaProductoBusqueda")) {
				this.jButtonidBodegaProductoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaBodegaProductoUpdate")) {
				this.jButtonid_empresaBodegaProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaBodegaProductoBusqueda")) {
				this.jButtonid_empresaBodegaProductoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalBodegaProductoUpdate")) {
				this.jButtonid_sucursalBodegaProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalBodegaProductoBusqueda")) {
				this.jButtonid_sucursalBodegaProductoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_bodegaBodegaProductoUpdate")) {
				this.jButtonid_bodegaBodegaProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_bodegaBodegaProductoBusqueda")) {
				this.jButtonid_bodegaBodegaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_productoBodegaProducto")) {
				this.jButtonid_productoBodegaProductoActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_productoBodegaProductoUpdate")) {
				this.jButtonid_productoBodegaProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_productoBodegaProductoBusqueda")) {
				this.jButtonid_productoBodegaProductoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_unidadBodegaProductoUpdate")) {
				this.jButtonid_unidadBodegaProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_unidadBodegaProductoBusqueda")) {
				this.jButtonid_unidadBodegaProductoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_centro_costoBodegaProductoUpdate")) {
				this.jButtonid_centro_costoBodegaProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_centro_costoBodegaProductoBusqueda")) {
				this.jButtonid_centro_costoBodegaProductoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_estado_bodega_productoBodegaProductoUpdate")) {
				this.jButtonid_estado_bodega_productoBodegaProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_estado_bodega_productoBodegaProductoBusqueda")) {
				this.jButtonid_estado_bodega_productoBodegaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descripcionBodegaProductoBusqueda")) {
				this.jButtondescripcionBodegaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("cantidad_disponibleBodegaProductoBusqueda")) {
				this.jButtoncantidad_disponibleBodegaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("stock_maximoBodegaProductoBusqueda")) {
				this.jButtonstock_maximoBodegaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("stock_minimoBodegaProductoBusqueda")) {
				this.jButtonstock_minimoBodegaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("ivaBodegaProductoBusqueda")) {
				this.jButtonivaBodegaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("iva_valorBodegaProductoBusqueda")) {
				this.jButtoniva_valorBodegaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descuentoBodegaProductoBusqueda")) {
				this.jButtondescuentoBodegaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descuento_valorBodegaProductoBusqueda")) {
				this.jButtondescuento_valorBodegaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("iceBodegaProductoBusqueda")) {
				this.jButtoniceBodegaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("ice_valorBodegaProductoBusqueda")) {
				this.jButtonice_valorBodegaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("costo_promedioBodegaProductoBusqueda")) {
				this.jButtoncosto_promedioBodegaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("porcentaje_comisionBodegaProductoBusqueda")) {
				this.jButtonporcentaje_comisionBodegaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("precioBodegaProductoBusqueda")) {
				this.jButtonprecioBodegaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("ultimo_costoBodegaProductoBusqueda")) {
				this.jButtonultimo_costoBodegaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("costoBodegaProductoBusqueda")) {
				this.jButtoncostoBodegaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("arancel_porcentajeBodegaProductoBusqueda")) {
				this.jButtonarancel_porcentajeBodegaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("ice_porcentajeBodegaProductoBusqueda")) {
				this.jButtonice_porcentajeBodegaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("pesoBodegaProductoBusqueda")) {
				this.jButtonpesoBodegaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_ivaBodegaProductoBusqueda")) {
				this.jButtoncon_ivaBodegaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_impuestoBodegaProductoBusqueda")) {
				this.jButtoncon_impuestoBodegaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_iceBodegaProductoBusqueda")) {
				this.jButtoncon_iceBodegaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("esta_activoBodegaProductoBusqueda")) {
				this.jButtonesta_activoBodegaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_balanzaBodegaProductoBusqueda")) {
				this.jButtoncon_balanzaBodegaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("cantidad_pedidaBodegaProductoBusqueda")) {
				this.jButtoncantidad_pedidaBodegaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("cantidad_fisicaBodegaProductoBusqueda")) {
				this.jButtoncantidad_fisicaBodegaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("cantidad_requeridoBodegaProductoBusqueda")) {
				this.jButtoncantidad_requeridoBodegaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("precio_costoBodegaProductoBusqueda")) {
				this.jButtonprecio_costoBodegaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("precio_promedioBodegaProductoBusqueda")) {
				this.jButtonprecio_promedioBodegaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("total_ingresosBodegaProductoBusqueda")) {
				this.jButtontotal_ingresosBodegaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("total_egresosBodegaProductoBusqueda")) {
				this.jButtontotal_egresosBodegaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("total_provisionBodegaProductoBusqueda")) {
				this.jButtontotal_provisionBodegaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("total_procesoBodegaProductoBusqueda")) {
				this.jButtontotal_procesoBodegaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("costo_calculadoBodegaProductoBusqueda")) {
				this.jButtoncosto_calculadoBodegaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("dias_produccionBodegaProductoBusqueda")) {
				this.jButtondias_produccionBodegaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("precio_reposicionBodegaProductoBusqueda")) {
				this.jButtonprecio_reposicionBodegaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_ultimo_pedidoBodegaProductoBusqueda")) {
				this.jButtonfecha_ultimo_pedidoBodegaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_ingresoBodegaProductoBusqueda")) {
				this.jButtonfecha_ingresoBodegaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_egresoBodegaProductoBusqueda")) {
				this.jButtonfecha_egresoBodegaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_ultima_compraBodegaProductoBusqueda")) {
				this.jButtonfecha_ultima_compraBodegaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_ultima_ventaBodegaProductoBusqueda")) {
				this.jButtonfecha_ultima_ventaBodegaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_ultima_devolucionBodegaProductoBusqueda")) {
				this.jButtonfecha_ultima_devolucionBodegaProductoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_inventarioBodegaProductoUpdate")) {
				this.jButtonid_cuenta_contable_inventarioBodegaProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_inventarioBodegaProductoBusqueda")) {
				this.jButtonid_cuenta_contable_inventarioBodegaProductoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_costo_ventaBodegaProductoUpdate")) {
				this.jButtonid_cuenta_contable_costo_ventaBodegaProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_costo_ventaBodegaProductoBusqueda")) {
				this.jButtonid_cuenta_contable_costo_ventaBodegaProductoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_ventaBodegaProductoUpdate")) {
				this.jButtonid_cuenta_contable_ventaBodegaProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_ventaBodegaProductoBusqueda")) {
				this.jButtonid_cuenta_contable_ventaBodegaProductoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_descuentoBodegaProductoUpdate")) {
				this.jButtonid_cuenta_contable_descuentoBodegaProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_descuentoBodegaProductoBusqueda")) {
				this.jButtonid_cuenta_contable_descuentoBodegaProductoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_produccionBodegaProductoUpdate")) {
				this.jButtonid_cuenta_contable_produccionBodegaProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_produccionBodegaProductoBusqueda")) {
				this.jButtonid_cuenta_contable_produccionBodegaProductoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_devolucionBodegaProductoUpdate")) {
				this.jButtonid_cuenta_contable_devolucionBodegaProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_devolucionBodegaProductoBusqueda")) {
				this.jButtonid_cuenta_contable_devolucionBodegaProductoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_ingreso_debitoBodegaProductoUpdate")) {
				this.jButtonid_cuenta_contable_ingreso_debitoBodegaProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_ingreso_debitoBodegaProductoBusqueda")) {
				this.jButtonid_cuenta_contable_ingreso_debitoBodegaProductoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_ingreso_creditoBodegaProductoUpdate")) {
				this.jButtonid_cuenta_contable_ingreso_creditoBodegaProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_ingreso_creditoBodegaProductoBusqueda")) {
				this.jButtonid_cuenta_contable_ingreso_creditoBodegaProductoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_resultado_debitoBodegaProductoUpdate")) {
				this.jButtonid_cuenta_contable_resultado_debitoBodegaProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_resultado_debitoBodegaProductoBusqueda")) {
				this.jButtonid_cuenta_contable_resultado_debitoBodegaProductoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_resultado_creditoBodegaProductoUpdate")) {
				this.jButtonid_cuenta_contable_resultado_creditoBodegaProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_resultado_creditoBodegaProductoBusqueda")) {
				this.jButtonid_cuenta_contable_resultado_creditoBodegaProductoBusquedaActionPerformed(evt);
			}
			
			
			else if(sTipo.equals("id_productoBodegaProducto")) {
				this.jButtonid_productoBodegaProductoActionPerformed(evt);
			}
			
			
			else if(sTipo.equals("FK_IdBodegaBodegaProducto")) {
				this.jButtonFK_IdBodegaBodegaProductoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdCentroCostoBodegaProducto")) {
				this.jButtonFK_IdCentroCostoBodegaProductoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdCuentaContableCostoVentaBodegaProducto")) {
				this.jButtonFK_IdCuentaContableCostoVentaBodegaProductoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdCuentaContableIngresoCreditoBodegaProducto")) {
				this.jButtonFK_IdCuentaContableIngresoCreditoBodegaProductoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdCuentaContableIngresoDebitoBodegaProducto")) {
				this.jButtonFK_IdCuentaContableIngresoDebitoBodegaProductoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdCuentaContableProduccionBodegaProducto")) {
				this.jButtonFK_IdCuentaContableProduccionBodegaProductoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdCuentaContableResultadoCreditoBodegaProducto")) {
				this.jButtonFK_IdCuentaContableResultadoCreditoBodegaProductoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdCuentaContableResultadoDebitoBodegaProducto")) {
				this.jButtonFK_IdCuentaContableResultadoDebitoBodegaProductoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdCuentaContableVentaBodegaProducto")) {
				this.jButtonFK_IdCuentaContableVentaBodegaProductoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdProductoBodegaProducto")) {
				this.jButtonFK_IdProductoBodegaProductoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdUnidadBodegaProducto")) {
				this.jButtonFK_IdUnidadBodegaProductoActionPerformed(evt);
			}
			
			;
			
			
			BodegaProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.bodegaproducto,new Object(),this.bodegaproductoParameterGeneral,this.bodegaproductoReturnGeneral);
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
			
  		} finally {
      		this.finishProcessBodegaProducto();
      	}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaBodegaProductoActual();
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				JTextField jTextField=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				if(containerParent!=null && containerParent.getClass().equals(JTableMe.class)) {
					esControlTabla=true;
				}
						
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.bodegaproducto);
				
				this.actualizarInformacion("INFO_PADRE",false,this.bodegaproducto);
				
				BodegaProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.bodegaproducto,new Object(),this.bodegaproductoParameterGeneral,this.bodegaproductoReturnGeneral);
				
				


				
				BodegaProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.bodegaproducto,new Object(),this.bodegaproductoParameterGeneral,this.bodegaproductoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(BodegaProducto.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",BodegaProducto.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
				}
				
			} catch(Exception e) {
  				FuncionesSwing.manageException2(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
  			}
    }
	
	public Boolean existeCambioValor(ControlTipo controlTipo,String sTipo) throws Exception {
		Boolean existeCambio=true;
		
		try {
			BodegaProducto bodegaproductoLocal=null;
			
			if(!this.getEsControlTabla()) {
				bodegaproductoLocal=this.bodegaproducto;
			} else {
				bodegaproductoLocal=this.bodegaproductoAnterior;
			}
			
			if(controlTipo.equals(ControlTipo.TEXTBOX)) {
				


			}
		
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
  		}
		
		return existeCambio;
	}
	
	public void jTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.bodegaproducto);
				
				this.actualizarInformacion("INFO_PADRE",false,this.bodegaproducto);
				
				BodegaProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.bodegaproducto,new Object(),this.bodegaproductoParameterGeneral,this.bodegaproductoReturnGeneral);
							
				
				


				
				BodegaProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.bodegaproducto,new Object(),this.bodegaproductoParameterGeneral,this.bodegaproductoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(BodegaProducto.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",BodegaProducto.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaBodegaProductoActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoAnterior =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.bodegaproductoAnterior =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
  		}
    }	
	
	//CUANDO SE CAMBIA ALGUN FORMATO(TIPO DE LETRA,NEGRILLA,ETC)
	public void jTextFieldChangedUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextField jTextField=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			BodegaProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.bodegaproducto,new Object(),this.bodegaproductoParameterGeneral,this.bodegaproductoReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextField=(JTextField)evt.getSource();
			
			containerParent=jTextField.getParent();
					
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {					
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			BodegaProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.bodegaproducto,new Object(),this.bodegaproductoParameterGeneral,this.bodegaproductoReturnGeneral);
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE QUITA ALGUN CARACTER
	public void jTextFieldRemoveUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE INGRESA ALGUN CARACTER
	public void jTextFieldInsertUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
  		}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jFormattedTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaBodegaProductoActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				Container containerParentAux=null;
				JFormattedTextField JFormattedTextField=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JFormattedTextField=(JFormattedTextField)evt.getSource();
				
				containerParentAux=JFormattedTextField.getParent();
				
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.bodegaproducto);
				
				this.actualizarInformacion("INFO_PADRE",false,this.bodegaproducto);
				
				BodegaProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.bodegaproducto,new Object(),this.bodegaproductoParameterGeneral,this.bodegaproductoReturnGeneral);
								
						
				


				
				BodegaProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.bodegaproducto,new Object(),this.bodegaproductoParameterGeneral,this.bodegaproductoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(BodegaProducto.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",BodegaProducto.class.getName(),sTipo,"DATE",esControlTabla,conIrServidorAplicacionParent,
							id,JFormattedTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Container containerParentAux=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParentAux=jTextField.getParent();
						
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.bodegaproducto);
				
				this.actualizarInformacion("INFO_PADRE",false,this.bodegaproducto);
				
				BodegaProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.bodegaproducto,new Object(),this.bodegaproductoParameterGeneral,this.bodegaproductoReturnGeneral);
								
				
				


				
				BodegaProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.bodegaproducto,new Object(),this.bodegaproductoParameterGeneral,this.bodegaproductoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(BodegaProducto.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",BodegaProducto.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaBodegaProductoActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoAnterior =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.bodegaproductoAnterior =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.DATE,sTipo)) {
				this.actualizarInformacion("EVENTO_CONTROL",false,this.bodegaproducto);
				
				this.actualizarInformacion("INFO_PADRE",false,this.bodegaproducto);
			}	
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaBodegaProductoActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoAnterior =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.bodegaproductoAnterior =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaBodegaProductoActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.bodegaproducto);
			
			this.actualizarInformacion("INFO_PADRE",false,this.bodegaproducto);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jTextAreaFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTAREA,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextArea jTextArea=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextArea=(JTextArea)evt.getSource();
				
				containerParent=jTextArea.getParent();
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.bodegaproducto);
				
				this.actualizarInformacion("INFO_PADRE",false,this.bodegaproducto);
				
				BodegaProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.bodegaproducto,new Object(),this.bodegaproductoParameterGeneral,this.bodegaproductoReturnGeneral);
							
				
				


				
				BodegaProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.bodegaproducto,new Object(),this.bodegaproductoParameterGeneral,this.bodegaproductoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(BodegaProducto.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",BodegaProducto.class.getName(),sTipo,"TEXTAREA",esControlTabla,conIrServidorAplicacionParent,
							id,jTextArea, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaBodegaProductoActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.bodegaproductoAnterior =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.bodegaproductoAnterior =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaChangedUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextArea jTextArea=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			BodegaProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.bodegaproducto,new Object(),this.bodegaproductoParameterGeneral,this.bodegaproductoReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextArea=(JTextArea)evt.getSource();
			
			containerParent=jTextArea.getParent();
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			BodegaProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.bodegaproducto,new Object(),this.bodegaproductoParameterGeneral,this.bodegaproductoReturnGeneral);
			
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaRemoveUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaInsertUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jTextAreaActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaBodegaProductoActual();
			
			this.actualizarInformacion("EVENTO_CONTROL",false,this.bodegaproducto);
			
			this.actualizarInformacion("INFO_PADRE",false,this.bodegaproducto);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JLabel jLabel=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jLabel=(JLabel)evt.getSource();
				
				containerParent=jLabel.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.bodegaproducto);
				
				this.actualizarInformacion("INFO_PADRE",false,this.bodegaproducto);
				
				BodegaProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.bodegaproducto,new Object(),this.bodegaproductoParameterGeneral,this.bodegaproductoReturnGeneral);
								
				
				


				
				BodegaProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.bodegaproducto,new Object(),this.bodegaproductoParameterGeneral,this.bodegaproductoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(BodegaProducto.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",BodegaProducto.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jLabel, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaBodegaProductoActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoAnterior =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.bodegaproductoAnterior =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jLabelActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaBodegaProductoActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.bodegaproducto);
			
			this.actualizarInformacion("INFO_PADRE",false,this.bodegaproducto);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxItemListenerGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaBodegaProductoActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
							
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.bodegaproducto);
				
				this.actualizarInformacion("INFO_PADRE",false,this.bodegaproducto);
				
				BodegaProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.bodegaproducto,new Object(),this.bodegaproductoParameterGeneral,this.bodegaproductoReturnGeneral);
												
				
				if(sTipo.equals("SeleccionarTodosBodegaProducto")) {
					jCheckBoxSeleccionarTodosBodegaProductoItemListener(evt);
				
				} else if(sTipo.equals("SeleccionadosBodegaProducto")) {
					jCheckBoxSeleccionadosBodegaProductoItemListener(evt);
				
				} else if(sTipo.equals("NuevoToolBarBodegaProducto")) {
					
				}
				
				


				
				
				BodegaProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.bodegaproducto,new Object(),this.bodegaproductoParameterGeneral,this.bodegaproductoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(BodegaProducto.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",BodegaProducto.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.CHECKBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				//this.actualizarInformacion("EVENTO_CONTROL",false,this.bodegaproducto);
				
				//this.actualizarInformacion("INFO_PADRE",false,this.bodegaproducto);
				
				BodegaProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.bodegaproducto,new Object(),this.bodegaproductoParameterGeneral,this.bodegaproductoReturnGeneral);
												
				
				


				
				
				BodegaProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.bodegaproducto,new Object(),this.bodegaproductoParameterGeneral,this.bodegaproductoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(BodegaProducto.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",BodegaProducto.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaBodegaProductoActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.bodegaproductoAnterior =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.bodegaproductoAnterior =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaBodegaProductoActual();
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.bodegaproducto);
				
				this.actualizarInformacion("INFO_PADRE",false,this.bodegaproducto);
				
				BodegaProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.bodegaproducto,new Object(),this.bodegaproductoParameterGeneral,this.bodegaproductoReturnGeneral);
				
				
				BodegaProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.bodegaproducto,new Object(),this.bodegaproductoParameterGeneral,this.bodegaproductoReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO SE UTILIZA, SE USA EL DE ABAJO, IGUAL SE DEJA EL CODIGO COMO RESPALDO Y ES CASI IGUAL
	//ERROR:SI SE USA,AL HACER CLIC EN EL MISMO ELEMENTO O EJECUTAR SELECTEDITEM, SIEMPRE SE EJECUTA COMO SI ESCOGIERA OTRO ELEMENTO(NO DEBERIA)
	//@SuppressWarnings("rawtypes")
	public void jComboBoxActionPerformedGeneral(String sTipo,ActionEvent evt) {		
		try {
			/*		
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			Container containerParent=null;
			Component componentOpposite=null;
			Boolean esControlTabla=false;
				
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			BodegaProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.bodegaproducto,new Object(),this.bodegaproductoParameterGeneral,this.bodegaproductoReturnGeneral);
			JComboBox jComboBoxGenerico=null;						
			
			if(evt.getSource().getClass().equals(JComboBox.class)
				|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
					
				jComboBoxGenerico=(JComboBox)evt.getSource();
				
				containerParent=jComboBoxGenerico.getParent();
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
			}
			
			String sFinalQueryCombo="";
			
			


			if(sTipo.equals("id_bodegaBodegaProducto")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_bodegaBodegaProducto;
				}

				if(this.bodegaproductoSessionBean.getConGuardarRelaciones()) {
					//classes=BodegaProductoConstantesFunciones.getClassesRelationshipsOfBodegaProducto(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyBodega(jComboBoxGenerico,"Formulario");

				this.recargarFormBodegaProducto(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_bodegaFK_IdBodegaBodegaProducto")) {
				this.procesarActionsCombosForeignKeyBodega(jComboBoxid_bodegaFK_IdBodegaBodegaProducto,"FK_IdBodega");
				//recargarFormBodegaProductoBodega(jComboBoxid_bodegaFK_IdBodegaBodegaProducto,"FK_IdBodega");
			}
			 else if(sTipo.equals("id_productoBodegaProducto")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_productoBodegaProducto;
				}

				if(this.bodegaproductoSessionBean.getConGuardarRelaciones()) {
					//classes=BodegaProductoConstantesFunciones.getClassesRelationshipsOfBodegaProducto(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyProducto(jComboBoxGenerico,"Formulario");

				this.recargarFormBodegaProducto(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_productoFK_IdProductoBodegaProducto")) {
				this.procesarActionsCombosForeignKeyProducto(jComboBoxid_productoFK_IdProductoBodegaProducto,"FK_IdProducto");
				//recargarFormBodegaProductoProducto(jComboBoxid_productoFK_IdProductoBodegaProducto,"FK_IdProducto");
			}
			
			BodegaProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.bodegaproducto,new Object(),this.bodegaproductoParameterGeneral,this.bodegaproductoReturnGeneral);
			*/						
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
  		}		
    }
	
	@SuppressWarnings("rawtypes")
	public void jComboBoxItemStateChangedGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if (evt.getStateChange() == ItemEvent.SELECTED && this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaBodegaProductoActual();
			
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=null;//evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}		
					
					this.esControlTabla=esControlTabla;
				}
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.bodegaproducto);
				
				this.actualizarInformacion("INFO_PADRE",false,this.bodegaproducto);
				
				BodegaProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.bodegaproducto,new Object(),this.bodegaproductoParameterGeneral,this.bodegaproductoReturnGeneral);
				
				
				String sFinalQueryCombo="";
				
				


			if(sTipo.equals("id_bodegaBodegaProducto")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_bodegaBodegaProducto;
				}

				if(this.bodegaproductoSessionBean.getConGuardarRelaciones()) {
					//classes=BodegaProductoConstantesFunciones.getClassesRelationshipsOfBodegaProducto(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyBodega(jComboBoxGenerico,"Formulario");

				this.recargarFormBodegaProducto(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_bodegaFK_IdBodegaBodegaProducto")) {
				this.procesarActionsCombosForeignKeyBodega(jComboBoxid_bodegaFK_IdBodegaBodegaProducto,"FK_IdBodega");
				//recargarFormBodegaProductoBodega(jComboBoxid_bodegaFK_IdBodegaBodegaProducto,"FK_IdBodega");
			}
			 else if(sTipo.equals("id_productoBodegaProducto")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_productoBodegaProducto;
				}

				if(this.bodegaproductoSessionBean.getConGuardarRelaciones()) {
					//classes=BodegaProductoConstantesFunciones.getClassesRelationshipsOfBodegaProducto(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyProducto(jComboBoxGenerico,"Formulario");

				this.recargarFormBodegaProducto(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_productoFK_IdProductoBodegaProducto")) {
				this.procesarActionsCombosForeignKeyProducto(jComboBoxid_productoFK_IdProductoBodegaProducto,"FK_IdProducto");
				//recargarFormBodegaProductoProducto(jComboBoxid_productoFK_IdProductoBodegaProducto,"FK_IdProducto");
			}
				
				BodegaProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.bodegaproducto,new Object(),this.bodegaproductoParameterGeneral,this.bodegaproductoReturnGeneral);
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(BodegaProducto.class.getName());
								
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",BodegaProducto.class.getName(),sTipo,"COMBOBOX",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
  		}
    }
	
	//@SuppressWarnings("rawtypes")
	public void jComboBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		//MANEJADO EN ITEMLISTENER
		/*
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				
				//if(this.esUsoDesdeHijo) {
				//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				//}
				
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
				this.actualizarInformacion("EVENTO_CONTROL",false,this.bodegaproducto);
				
				this.actualizarInformacion("INFO_PADRE",false,this.bodegaproducto);
				
				BodegaProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.bodegaproducto,new Object(),this.bodegaproductoParameterGeneral,this.bodegaproductoReturnGeneral);
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}
					
					this.esControlTabla=esControlTabla;
				}
				
				String sFinalQueryCombo="";
				
				


			if(sTipo.equals("id_bodegaBodegaProducto")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_bodegaBodegaProducto;
				}

				if(this.bodegaproductoSessionBean.getConGuardarRelaciones()) {
					//classes=BodegaProductoConstantesFunciones.getClassesRelationshipsOfBodegaProducto(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyBodega(jComboBoxGenerico,"Formulario");

				this.recargarFormBodegaProducto(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_bodegaFK_IdBodegaBodegaProducto")) {
				this.procesarActionsCombosForeignKeyBodega(jComboBoxid_bodegaFK_IdBodegaBodegaProducto,"FK_IdBodega");
				//recargarFormBodegaProductoBodega(jComboBoxid_bodegaFK_IdBodegaBodegaProducto,"FK_IdBodega");
			}
			 else if(sTipo.equals("id_productoBodegaProducto")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_productoBodegaProducto;
				}

				if(this.bodegaproductoSessionBean.getConGuardarRelaciones()) {
					//classes=BodegaProductoConstantesFunciones.getClassesRelationshipsOfBodegaProducto(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyProducto(jComboBoxGenerico,"Formulario");

				this.recargarFormBodegaProducto(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_productoFK_IdProductoBodegaProducto")) {
				this.procesarActionsCombosForeignKeyProducto(jComboBoxid_productoFK_IdProductoBodegaProducto,"FK_IdProducto");
				//recargarFormBodegaProductoProducto(jComboBoxid_productoFK_IdProductoBodegaProducto,"FK_IdProducto");
			}
				
				BodegaProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.bodegaproducto,new Object(),this.bodegaproductoParameterGeneral,this.bodegaproductoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(BodegaProducto.class.getName());
				
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",BodegaProducto.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
  		}
		
		*/
    }
	
	public void jComboBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaBodegaProductoActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.bodegaproductoAnterior =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.bodegaproductoAnterior =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
  		}
    }		
	
	public void tableValueChangedGeneral(String sTipo,ListSelectionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				BodegaProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.bodegaproducto,new Object(),this.bodegaproductoParameterGeneral,this.bodegaproductoReturnGeneral);
				
				if(sTipo.equals("TableDatosSeleccionarBodegaProducto")) {
					//BYDAN_DESHABILITADO
					//try {jTableDatosBodegaProductoListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
					
					//SOLO CUANDO MOUSE ES SOLTADO
					if (!evt.getValueIsAdjusting()) {
						//SELECCIONA FILA A OBJETO ACTUAL
						Integer intSelectedRow = this.jTableDatosBodegaProducto.getSelectedRow();
						
						if(intSelectedRow!=null && intSelectedRow>-1) {
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								this.bodegaproducto =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
							} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
								this.bodegaproducto =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(intSelectedRow)];
							}
							//ARCHITECTURE
							
							//System.out.println(this.bodegaproducto);
						}
					}
					
				} else if(sTipo.equals("jButtonCancelarBodegaProducto")) {
				
				}
				
				BodegaProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.bodegaproducto,new Object(),this.bodegaproductoParameterGeneral,this.bodegaproductoReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void tableMouseAdapterGeneral(String sTipo,MouseEvent evt) { 	  
		try {
			BodegaProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.bodegaproducto,new Object(),this.bodegaproductoParameterGeneral,this.bodegaproductoReturnGeneral);
			
			if(sTipo.equals("DatosSeleccionarBodegaProducto")) {
				if (evt.getClickCount() == 2) {
					jButtonIdActionPerformed(null,jTableDatosBodegaProducto.getSelectedRow(),false,false);
				}	
			} else if(sTipo.equals("jButtonCancelarBodegaProducto")) {
			
			}
			
			BodegaProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.bodegaproducto,new Object(),this.bodegaproductoParameterGeneral,this.bodegaproductoReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
  		}
    }
	
	;
	
	public void jButtonActionPerformedTecladoGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			this.startProcessBodegaProducto();
			
			BodegaProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.bodegaproducto,new Object(),this.bodegaproductoParameterGeneral,this.bodegaproductoReturnGeneral);
			
			if(sTipo.equals("NuevoBodegaProducto")) {
				jButtonNuevoBodegaProductoActionPerformed(evt,false);
				
			} else if(sTipo.equals("DuplicarBodegaProducto")) {
				jButtonDuplicarBodegaProductoActionPerformed(evt,false);
				
			} else if(sTipo.equals("CopiarBodegaProducto")) {
				jButtonCopiarBodegaProductoActionPerformed(evt);
				
			} else if(sTipo.equals("VerFormBodegaProducto")) {
				jButtonVerFormBodegaProductoActionPerformed(evt);
				
			} else if(sTipo.equals("NuevoRelacionesBodegaProducto")) {
				jButtonNuevoBodegaProductoActionPerformed(evt,true);
				
			} else if(sTipo.equals("ModificarBodegaProducto")) {
				jButtonModificarBodegaProductoActionPerformed(evt);
				
			} else if(sTipo.equals("ActualizarBodegaProducto")) {
				jButtonActualizarBodegaProductoActionPerformed(evt);
				
			} else if(sTipo.equals("EliminarBodegaProducto")) {
				jButtonEliminarBodegaProductoActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosTablaBodegaProducto")) {
				jButtonGuardarCambiosBodegaProductoActionPerformed(evt);
				
			} else if(sTipo.equals("CancelarBodegaProducto")) {
				jButtonCancelarBodegaProductoActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarBodegaProducto")) {
				jButtonCerrarBodegaProductoActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosBodegaProducto")) {
				jButtonGuardarCambiosBodegaProductoActionPerformed(evt);
			
			} else if(sTipo.equals("NuevoGuardarCambiosBodegaProducto")) {
				jButtonNuevoGuardarCambiosBodegaProductoActionPerformed(evt);
			
			} else if(sTipo.equals("AbrirOrderByBodegaProducto")) {
				jButtonAbrirOrderByBodegaProductoActionPerformed(evt);
			
			} else if(sTipo.equals("RecargarInformacionBodegaProducto")) {
				jButtonRecargarInformacionBodegaProductoActionPerformed(evt);
			
			} else if(sTipo.equals("AnterioresBodegaProducto")) {
				jButtonAnterioresBodegaProductoActionPerformed(evt);			
			
			}  else if(sTipo.equals("SiguientesBodegaProducto")) {
				jButtonSiguientesBodegaProductoActionPerformed(evt);			
			} 
			
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idBodegaProductoBusqueda")) {
				this.jButtonidBodegaProductoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaBodegaProductoUpdate")) {
				this.jButtonid_empresaBodegaProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaBodegaProductoBusqueda")) {
				this.jButtonid_empresaBodegaProductoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalBodegaProductoUpdate")) {
				this.jButtonid_sucursalBodegaProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalBodegaProductoBusqueda")) {
				this.jButtonid_sucursalBodegaProductoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_bodegaBodegaProductoUpdate")) {
				this.jButtonid_bodegaBodegaProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_bodegaBodegaProductoBusqueda")) {
				this.jButtonid_bodegaBodegaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_productoBodegaProducto")) {
				this.jButtonid_productoBodegaProductoActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_productoBodegaProductoUpdate")) {
				this.jButtonid_productoBodegaProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_productoBodegaProductoBusqueda")) {
				this.jButtonid_productoBodegaProductoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_unidadBodegaProductoUpdate")) {
				this.jButtonid_unidadBodegaProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_unidadBodegaProductoBusqueda")) {
				this.jButtonid_unidadBodegaProductoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_centro_costoBodegaProductoUpdate")) {
				this.jButtonid_centro_costoBodegaProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_centro_costoBodegaProductoBusqueda")) {
				this.jButtonid_centro_costoBodegaProductoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_estado_bodega_productoBodegaProductoUpdate")) {
				this.jButtonid_estado_bodega_productoBodegaProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_estado_bodega_productoBodegaProductoBusqueda")) {
				this.jButtonid_estado_bodega_productoBodegaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descripcionBodegaProductoBusqueda")) {
				this.jButtondescripcionBodegaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("cantidad_disponibleBodegaProductoBusqueda")) {
				this.jButtoncantidad_disponibleBodegaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("stock_maximoBodegaProductoBusqueda")) {
				this.jButtonstock_maximoBodegaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("stock_minimoBodegaProductoBusqueda")) {
				this.jButtonstock_minimoBodegaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("ivaBodegaProductoBusqueda")) {
				this.jButtonivaBodegaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("iva_valorBodegaProductoBusqueda")) {
				this.jButtoniva_valorBodegaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descuentoBodegaProductoBusqueda")) {
				this.jButtondescuentoBodegaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descuento_valorBodegaProductoBusqueda")) {
				this.jButtondescuento_valorBodegaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("iceBodegaProductoBusqueda")) {
				this.jButtoniceBodegaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("ice_valorBodegaProductoBusqueda")) {
				this.jButtonice_valorBodegaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("costo_promedioBodegaProductoBusqueda")) {
				this.jButtoncosto_promedioBodegaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("porcentaje_comisionBodegaProductoBusqueda")) {
				this.jButtonporcentaje_comisionBodegaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("precioBodegaProductoBusqueda")) {
				this.jButtonprecioBodegaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("ultimo_costoBodegaProductoBusqueda")) {
				this.jButtonultimo_costoBodegaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("costoBodegaProductoBusqueda")) {
				this.jButtoncostoBodegaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("arancel_porcentajeBodegaProductoBusqueda")) {
				this.jButtonarancel_porcentajeBodegaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("ice_porcentajeBodegaProductoBusqueda")) {
				this.jButtonice_porcentajeBodegaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("pesoBodegaProductoBusqueda")) {
				this.jButtonpesoBodegaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_ivaBodegaProductoBusqueda")) {
				this.jButtoncon_ivaBodegaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_impuestoBodegaProductoBusqueda")) {
				this.jButtoncon_impuestoBodegaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_iceBodegaProductoBusqueda")) {
				this.jButtoncon_iceBodegaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("esta_activoBodegaProductoBusqueda")) {
				this.jButtonesta_activoBodegaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_balanzaBodegaProductoBusqueda")) {
				this.jButtoncon_balanzaBodegaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("cantidad_pedidaBodegaProductoBusqueda")) {
				this.jButtoncantidad_pedidaBodegaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("cantidad_fisicaBodegaProductoBusqueda")) {
				this.jButtoncantidad_fisicaBodegaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("cantidad_requeridoBodegaProductoBusqueda")) {
				this.jButtoncantidad_requeridoBodegaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("precio_costoBodegaProductoBusqueda")) {
				this.jButtonprecio_costoBodegaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("precio_promedioBodegaProductoBusqueda")) {
				this.jButtonprecio_promedioBodegaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("total_ingresosBodegaProductoBusqueda")) {
				this.jButtontotal_ingresosBodegaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("total_egresosBodegaProductoBusqueda")) {
				this.jButtontotal_egresosBodegaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("total_provisionBodegaProductoBusqueda")) {
				this.jButtontotal_provisionBodegaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("total_procesoBodegaProductoBusqueda")) {
				this.jButtontotal_procesoBodegaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("costo_calculadoBodegaProductoBusqueda")) {
				this.jButtoncosto_calculadoBodegaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("dias_produccionBodegaProductoBusqueda")) {
				this.jButtondias_produccionBodegaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("precio_reposicionBodegaProductoBusqueda")) {
				this.jButtonprecio_reposicionBodegaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_ultimo_pedidoBodegaProductoBusqueda")) {
				this.jButtonfecha_ultimo_pedidoBodegaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_ingresoBodegaProductoBusqueda")) {
				this.jButtonfecha_ingresoBodegaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_egresoBodegaProductoBusqueda")) {
				this.jButtonfecha_egresoBodegaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_ultima_compraBodegaProductoBusqueda")) {
				this.jButtonfecha_ultima_compraBodegaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_ultima_ventaBodegaProductoBusqueda")) {
				this.jButtonfecha_ultima_ventaBodegaProductoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_ultima_devolucionBodegaProductoBusqueda")) {
				this.jButtonfecha_ultima_devolucionBodegaProductoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_inventarioBodegaProductoUpdate")) {
				this.jButtonid_cuenta_contable_inventarioBodegaProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_inventarioBodegaProductoBusqueda")) {
				this.jButtonid_cuenta_contable_inventarioBodegaProductoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_costo_ventaBodegaProductoUpdate")) {
				this.jButtonid_cuenta_contable_costo_ventaBodegaProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_costo_ventaBodegaProductoBusqueda")) {
				this.jButtonid_cuenta_contable_costo_ventaBodegaProductoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_ventaBodegaProductoUpdate")) {
				this.jButtonid_cuenta_contable_ventaBodegaProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_ventaBodegaProductoBusqueda")) {
				this.jButtonid_cuenta_contable_ventaBodegaProductoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_descuentoBodegaProductoUpdate")) {
				this.jButtonid_cuenta_contable_descuentoBodegaProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_descuentoBodegaProductoBusqueda")) {
				this.jButtonid_cuenta_contable_descuentoBodegaProductoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_produccionBodegaProductoUpdate")) {
				this.jButtonid_cuenta_contable_produccionBodegaProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_produccionBodegaProductoBusqueda")) {
				this.jButtonid_cuenta_contable_produccionBodegaProductoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_devolucionBodegaProductoUpdate")) {
				this.jButtonid_cuenta_contable_devolucionBodegaProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_devolucionBodegaProductoBusqueda")) {
				this.jButtonid_cuenta_contable_devolucionBodegaProductoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_ingreso_debitoBodegaProductoUpdate")) {
				this.jButtonid_cuenta_contable_ingreso_debitoBodegaProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_ingreso_debitoBodegaProductoBusqueda")) {
				this.jButtonid_cuenta_contable_ingreso_debitoBodegaProductoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_ingreso_creditoBodegaProductoUpdate")) {
				this.jButtonid_cuenta_contable_ingreso_creditoBodegaProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_ingreso_creditoBodegaProductoBusqueda")) {
				this.jButtonid_cuenta_contable_ingreso_creditoBodegaProductoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_resultado_debitoBodegaProductoUpdate")) {
				this.jButtonid_cuenta_contable_resultado_debitoBodegaProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_resultado_debitoBodegaProductoBusqueda")) {
				this.jButtonid_cuenta_contable_resultado_debitoBodegaProductoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_resultado_creditoBodegaProductoUpdate")) {
				this.jButtonid_cuenta_contable_resultado_creditoBodegaProductoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_resultado_creditoBodegaProductoBusqueda")) {
				this.jButtonid_cuenta_contable_resultado_creditoBodegaProductoBusquedaActionPerformed(evt);
			}
			
			BodegaProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.bodegaproducto,new Object(),this.bodegaproductoParameterGeneral,this.bodegaproductoReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
			
  		}  finally {
      		this.finishProcessBodegaProducto();
      	}
    }
	
	public void internalFrameClosingInternalFrameGeneral(String sTipo,InternalFrameEvent evt) { 	  
		try {
			BodegaProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.bodegaproducto,new Object(),this.bodegaproductoParameterGeneral,this.bodegaproductoReturnGeneral);
			
			if(sTipo.equals("CloseInternalFrameBodegaProducto")) {
				closingInternalFrameBodegaProducto();
				
			} else if(sTipo.equals("jButtonCancelarBodegaProducto")) {
				JInternalFrameBase jInternalFrameDetalleFormBodegaProducto = (JInternalFrameBase)evt.getSource();
	            	
	            BodegaProductoBeanSwingJInternalFrame jInternalFrameParent=(BodegaProductoBeanSwingJInternalFrame)jInternalFrameDetalleFormBodegaProducto.getjInternalFrameParent();
	            
				jInternalFrameParent.jButtonCancelarBodegaProductoActionPerformed(null);
			}
			
			BodegaProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.bodegaproducto,new Object(),this.bodegaproductoParameterGeneral,this.bodegaproductoReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void recargarFormBodegaProducto(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion) throws Exception {
		this.recargarFormBodegaProducto(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,false);
	}
	
	public void recargarFormBodegaProducto(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion,Boolean esControlTabla) throws Exception {
		if(this.permiteRecargarForm && this.permiteMantenimiento(this.bodegaproducto)) {
			if(!esControlTabla) {
				if(BodegaProductoJInternalFrame.ISBINDING_MANUAL_TABLA) {			
					this.setVariablesFormularioToObjetoActualBodegaProducto(this.bodegaproducto,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);			
				}
				
				if(this.bodegaproductoSessionBean.getEstaModoGuardarRelaciones()) {
					this.setVariablesFormularioRelacionesToObjetoActualBodegaProducto(this.bodegaproducto,classes);				
				}
			
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.bodegaproductoReturnGeneral=bodegaproductoLogic.procesarEventosBodegaProductosWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.bodegaproductoLogic.getBodegaProductos(),this.bodegaproducto,this.bodegaproductoParameterGeneral,this.isEsNuevoBodegaProducto,classes);//this.bodegaproductoLogic.getBodegaProducto()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
					
					//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					//this.setVariablesObjetoReturnGeneralToBeanBodegaProducto(this.bodegaproductoReturnGeneral,this.bodegaproductoBean,false);
						
					//ACTUALIZA VARIABLES RELACIONES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					if(this.bodegaproductoSessionBean.getEstaModoGuardarRelaciones()) {
						//this.setVariablesRelacionesObjetoReturnGeneralToBeanBodegaProducto(classes,this.bodegaproductoReturnGeneral,this.bodegaproductoBean,false);
					}
						
					if(this.bodegaproductoReturnGeneral.getConRecargarPropiedades()) {
						//INICIALIZA VARIABLES COMBOS NORMALES (FK)
						this.setVariablesObjetoActualToFormularioForeignKeyBodegaProducto(this.bodegaproductoReturnGeneral.getBodegaProducto());
							
						//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
						this.setVariablesObjetoActualToFormularioBodegaProducto(this.bodegaproductoReturnGeneral.getBodegaProducto());	
					}
						
					if(this.bodegaproductoReturnGeneral.getConRecargarRelaciones()) {
						//INICIALIZA VARIABLES RELACIONES A FORMULARIO
						this.setVariablesRelacionesObjetoActualToFormularioBodegaProducto(this.bodegaproductoReturnGeneral.getBodegaProducto(),classes);//this.bodegaproductoBean);	
					}									
					
				} else {				
					//INICIALIZA VARIABLES RELACIONES A FORMULARIO
					this.setVariablesRelacionesObjetoActualToFormularioBodegaProducto(this.bodegaproducto,classes);//this.bodegaproductoBean);									
				}
			
				if(BodegaProductoJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesFormularioToObjetoActualBodegaProducto(this.bodegaproducto,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysBodegaProducto(this.bodegaproducto);				
				}
				
			} else {
				
				if(((controlTipo.equals(ControlTipo.TEXTBOX) || controlTipo.equals(ControlTipo.DATE)
					|| controlTipo.equals(ControlTipo.TEXTAREA) || controlTipo.equals(ControlTipo.COMBOBOX)
					)				
					&& eventoTipo.equals(EventoTipo.CHANGE)
					)
					
					|| (controlTipo.equals(ControlTipo.CHECKBOX) && eventoTipo.equals(EventoTipo.CLIC))
					
				) { // && sTipoGeneral.equals("TEXTBOX")
					
					if(this.bodegaproductoAnterior!=null) {
						this.bodegaproducto=this.bodegaproductoAnterior;
					}
				}
				
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.bodegaproductoReturnGeneral=bodegaproductoLogic.procesarEventosBodegaProductosWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.bodegaproductoLogic.getBodegaProductos(),this.bodegaproducto,this.bodegaproductoParameterGeneral,this.isEsNuevoBodegaProducto,classes);//this.bodegaproductoLogic.getBodegaProducto()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.bodegaproductoSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.bodegaproductoSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(this.bodegaproductoReturnGeneral.getBodegaProducto(),bodegaproductoLogic.getBodegaProductos());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(this.bodegaproductoReturnGeneral.getBodegaProducto(),this.bodegaproductos);
				}
				//ARCHITECTURE
				
				//this.jTableDatosBodegaProducto.repaint();
				
				//((AbstractTableModel) this.jTableDatosBodegaProducto.getModel()).fireTableDataChanged();
				
				this.actualizarVisualTableDatosBodegaProducto();
			}
		}
	}
	
	public void actualizarVisualTableDatosBodegaProducto() throws Exception {
		
		BodegaProductoModel bodegaproductoModel=(BodegaProductoModel)this.jTableDatosBodegaProducto.getModel();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			bodegaproductoModel.bodegaproductos=this.bodegaproductoLogic.getBodegaProductos();
		
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
			bodegaproductoModel.bodegaproductos=this.bodegaproductos;
		}
		
		
		((BodegaProductoModel) this.jTableDatosBodegaProducto.getModel()).fireTableDataChanged();
	}
	
	public void actualizarVisualTableDatosEventosVistaBodegaProducto() throws Exception {
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.actualizarLista(this.getbodegaproductoAnterior(),this.bodegaproductoLogic.getBodegaProductos());
					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			this.actualizarLista(this.getbodegaproductoAnterior(),this.bodegaproductos);
		}
		//ARCHITECTURE
						
		this.actualizarFilaTotales();
						
		this.actualizarVisualTableDatosBodegaProducto();	
	}
	
	public void setVariablesRelacionesObjetoActualToFormularioBodegaProducto(BodegaProducto bodegaproducto,ArrayList<Classe> classes) throws Exception { 
		try {
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setEventoParentGeneral(Boolean esUsoDesdeHijo,String sDominio,String sDominioTipo,String sTipo,String sTipoGeneral,Boolean esControlTabla,Boolean conIrServidorAplicacion,
						Long id,Component control, EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,ArrayList<String> arrClasses,
						Object evt,GeneralEntityParameterReturnGeneral generalEntityParameterGeneral,Object otro) { 	  
		try {
			
			if(this.permiteManejarEventosControl()) {
				
				//BASE COPIADO DESDE TEXTFIELLOSTFOCUS
				
				//EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				Boolean conTodasRelaciones=false;
				
				this.esUsoDesdeHijo=esUsoDesdeHijo;
										
				BodegaProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.bodegaproducto,new Object(),generalEntityParameterGeneral,this.bodegaproductoReturnGeneral);
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				for(String sClasse:arrClasses) {
					if(sClasse.equals("TODOS")) {
						conTodasRelaciones=true;
						break;
					}
				}
				
				if(this.bodegaproductoSessionBean.getConGuardarRelaciones()) {
					if(conTodasRelaciones) {
						classes=BodegaProductoConstantesFunciones.getClassesRelationshipsOfBodegaProducto(new ArrayList<Classe>(),DeepLoadType.NONE);
					} else {
						classes=BodegaProductoConstantesFunciones.getClassesRelationshipsFromStringsOfBodegaProducto(arrClasses,DeepLoadType.NONE);
					}
				}
	
				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);
	
				this.recargarFormBodegaProducto(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,esControlTabla);
										
				BodegaProductoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.bodegaproducto,new Object(),generalEntityParameterGeneral,this.bodegaproductoReturnGeneral);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
  		}
    }
	
	/*
	public void setVariablesRelacionesObjetoBeanActualToFormularioBodegaProducto(BodegaProductoBean bodegaproductoBean) throws Exception { 
		try {
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesRelacionesObjetoReturnGeneralToBeanBodegaProducto(ArrayList<Classe> classes,BodegaProductoReturnGeneral bodegaproductoReturnGeneral,BodegaProductoBean bodegaproductoBean,Boolean conDefault) throws Exception {
		
	}
	*/
	
	public void setVariablesFormularioRelacionesToObjetoActualBodegaProducto(BodegaProducto bodegaproducto,ArrayList<Classe> classes) throws Exception {
		
	}
	
	public Boolean permiteManejarEventosControl() {
		Boolean permite=true;				
		
		if(this.estaModoNuevo || this.estaModoSeleccionar || this.estaModoEliminarGuardarCambios) {
			permite=false;
			
		} 
		
		//NO DEBE MEZCLARSE CONCEPTOS
		/*	
		if(!paraTabla && !this.permiteMantenimiento(this.bodegaproducto)) {
			System.out.println("ERROR:EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES");
				
			//JOptionPane.showMessageDialog(this,"EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES","EVENTO",JOptionPane.ERROR_MESSAGE);			
		}
		*/
		
		return permite;
	}
	
	public void inicializarFormDetalle() throws Exception {
		
		this.jInternalFrameDetalleFormBodegaProducto = new BodegaProductoDetalleFormJInternalFrame(jDesktopPane,this.bodegaproductoSessionBean.getConGuardarRelaciones(),this.bodegaproductoSessionBean.getEsGuardarRelacionado(),this.cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		this.jDesktopPane.add(this.jInternalFrameDetalleFormBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.setVisible(false);
		this.jInternalFrameDetalleFormBodegaProducto.setSelected(false);						
		
		this.jInternalFrameDetalleFormBodegaProducto.setJInternalFrameParent(this);
		
		this.jInternalFrameDetalleFormBodegaProducto.bodegaproductoLogic=this.bodegaproductoLogic;
		
		this.cargarCombosFrameForeignKeyBodegaProducto("Formulario");
		
		this.inicializarActualizarBindingBotonesPermisosManualFormDetalleBodegaProducto();
		this.inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleBodegaProducto();
		
		this.initActionsFormDetalle();		
		
		this.initActionsCombosTodosForeignKeyBodegaProducto("Formulario");
		
		//TALVEZ conSetVariablesGlobales COMO if() 
		this.setVariablesGlobalesCombosForeignKeyBodegaProducto();
		
		this.cargarMenuRelaciones();
		
	}
	
	public void initActionsFormDetalle() {	
		
		this.jInternalFrameDetalleFormBodegaProducto.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarBodegaProducto"));
		
		this.jInternalFrameDetalleFormBodegaProducto.jButtonModificarBodegaProducto.addActionListener(new ButtonActionListener(this,"ModificarBodegaProducto"));

		
		this.jInternalFrameDetalleFormBodegaProducto.jButtonModificarToolBarBodegaProducto.addActionListener(new ButtonActionListener(this,"ModificarToolBarBodegaProducto"));
					
		this.jInternalFrameDetalleFormBodegaProducto.jMenuItemModificarBodegaProducto.addActionListener(new ButtonActionListener(this,"MenuItemModificarBodegaProducto"));		
		
		
		
		this.jInternalFrameDetalleFormBodegaProducto.jButtonActualizarBodegaProducto.addActionListener (new ButtonActionListener(this,"ActualizarBodegaProducto"));
		
		
		this.jInternalFrameDetalleFormBodegaProducto.jButtonActualizarToolBarBodegaProducto.addActionListener(new ButtonActionListener(this,"ActualizarToolBarBodegaProducto"));
						
		this.jInternalFrameDetalleFormBodegaProducto.jMenuItemActualizarBodegaProducto.addActionListener (new ButtonActionListener(this,"MenuItemActualizarBodegaProducto"));		
		
		
		
		this.jInternalFrameDetalleFormBodegaProducto.jButtonEliminarBodegaProducto.addActionListener (new ButtonActionListener(this,"EliminarBodegaProducto"));
		
		
		this.jInternalFrameDetalleFormBodegaProducto.jButtonEliminarToolBarBodegaProducto.addActionListener (new ButtonActionListener(this,"EliminarToolBarBodegaProducto"));
								
		this.jInternalFrameDetalleFormBodegaProducto.jMenuItemEliminarBodegaProducto.addActionListener (new ButtonActionListener(this,"MenuItemEliminarBodegaProducto"));		
		
		
		
		this.jInternalFrameDetalleFormBodegaProducto.jButtonCancelarBodegaProducto.addActionListener (new ButtonActionListener(this,"CancelarBodegaProducto"));
		
		
		this.jInternalFrameDetalleFormBodegaProducto.jButtonCancelarToolBarBodegaProducto.addActionListener (new ButtonActionListener(this,"CancelarToolBarBodegaProducto"));
					
		this.jInternalFrameDetalleFormBodegaProducto.jMenuItemCancelarBodegaProducto.addActionListener (new ButtonActionListener(this,"MenuItemCancelarBodegaProducto"));		
		
		
		
		
		
		this.jInternalFrameDetalleFormBodegaProducto.jMenuItemDetalleCerrarBodegaProducto.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarBodegaProducto"));		
		
		
		
		this.jInternalFrameDetalleFormBodegaProducto.jButtonGuardarCambiosToolBarBodegaProducto.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarBodegaProducto"));
		
		
		
		this.jInternalFrameDetalleFormBodegaProducto.jButtonGuardarCambiosToolBarBodegaProducto.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarBodegaProducto"));
		
		
		
		this.jInternalFrameDetalleFormBodegaProducto.jComboBoxTiposAccionesFormularioBodegaProducto.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioBodegaProducto"));
		
		
				
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonidBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"idBodegaProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_empresaBodegaProductoUpdate.addActionListener(new ButtonActionListener(this,"id_empresaBodegaProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_empresaBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaBodegaProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_sucursalBodegaProductoUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalBodegaProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_sucursalBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalBodegaProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_bodegaBodegaProductoUpdate.addActionListener(new ButtonActionListener(this,"id_bodegaBodegaProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_bodegaBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_bodegaBodegaProductoBusqueda"));
		//jButtonid_productoBodegaProducto.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_productoBodegaProductoActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_productoBodegaProducto.addActionListener(new ButtonActionListener(this,"id_productoBodegaProducto"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_productoBodegaProductoUpdate.addActionListener(new ButtonActionListener(this,"id_productoBodegaProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_productoBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_productoBodegaProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_unidadBodegaProductoUpdate.addActionListener(new ButtonActionListener(this,"id_unidadBodegaProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_unidadBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_unidadBodegaProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_centro_costoBodegaProductoUpdate.addActionListener(new ButtonActionListener(this,"id_centro_costoBodegaProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_centro_costoBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_centro_costoBodegaProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_estado_bodega_productoBodegaProductoUpdate.addActionListener(new ButtonActionListener(this,"id_estado_bodega_productoBodegaProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_estado_bodega_productoBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_bodega_productoBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtondescripcionBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"descripcionBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtoncantidad_disponibleBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"cantidad_disponibleBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonstock_maximoBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"stock_maximoBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonstock_minimoBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"stock_minimoBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonivaBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"ivaBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtoniva_valorBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"iva_valorBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtondescuentoBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"descuentoBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtondescuento_valorBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"descuento_valorBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtoniceBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"iceBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonice_valorBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"ice_valorBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtoncosto_promedioBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"costo_promedioBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonporcentaje_comisionBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"porcentaje_comisionBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonprecioBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"precioBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonultimo_costoBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"ultimo_costoBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtoncostoBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"costoBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonarancel_porcentajeBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"arancel_porcentajeBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonice_porcentajeBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"ice_porcentajeBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonpesoBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"pesoBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtoncon_ivaBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"con_ivaBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtoncon_impuestoBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"con_impuestoBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtoncon_iceBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"con_iceBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonesta_activoBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"esta_activoBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtoncon_balanzaBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"con_balanzaBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtoncantidad_pedidaBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"cantidad_pedidaBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtoncantidad_fisicaBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"cantidad_fisicaBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtoncantidad_requeridoBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"cantidad_requeridoBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonprecio_costoBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"precio_costoBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonprecio_promedioBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"precio_promedioBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtontotal_ingresosBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"total_ingresosBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtontotal_egresosBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"total_egresosBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtontotal_provisionBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"total_provisionBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtontotal_procesoBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"total_procesoBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtoncosto_calculadoBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"costo_calculadoBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtondias_produccionBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"dias_produccionBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonprecio_reposicionBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"precio_reposicionBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonfecha_ultimo_pedidoBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"fecha_ultimo_pedidoBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonfecha_ingresoBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"fecha_ingresoBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonfecha_egresoBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"fecha_egresoBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonfecha_ultima_compraBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"fecha_ultima_compraBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonfecha_ultima_ventaBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"fecha_ultima_ventaBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonfecha_ultima_devolucionBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"fecha_ultima_devolucionBodegaProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_cuenta_contable_inventarioBodegaProductoUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_inventarioBodegaProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_cuenta_contable_inventarioBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_inventarioBodegaProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_cuenta_contable_costo_ventaBodegaProductoUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_costo_ventaBodegaProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_cuenta_contable_costo_ventaBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_costo_ventaBodegaProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_cuenta_contable_ventaBodegaProductoUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_ventaBodegaProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_cuenta_contable_ventaBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_ventaBodegaProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_cuenta_contable_descuentoBodegaProductoUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_descuentoBodegaProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_cuenta_contable_descuentoBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_descuentoBodegaProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_cuenta_contable_produccionBodegaProductoUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_produccionBodegaProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_cuenta_contable_produccionBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_produccionBodegaProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_cuenta_contable_devolucionBodegaProductoUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_devolucionBodegaProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_cuenta_contable_devolucionBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_devolucionBodegaProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_cuenta_contable_ingreso_debitoBodegaProductoUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_ingreso_debitoBodegaProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_cuenta_contable_ingreso_debitoBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_ingreso_debitoBodegaProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_cuenta_contable_ingreso_creditoBodegaProductoUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_ingreso_creditoBodegaProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_cuenta_contable_ingreso_creditoBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_ingreso_creditoBodegaProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_cuenta_contable_resultado_debitoBodegaProductoUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_resultado_debitoBodegaProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_cuenta_contable_resultado_debitoBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_resultado_debitoBodegaProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_cuenta_contable_resultado_creditoBodegaProductoUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_resultado_creditoBodegaProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_cuenta_contable_resultado_creditoBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_resultado_creditoBodegaProductoBusqueda"));
		
		
		;

		//TABBED PANE RELACIONES
		this.jInternalFrameDetalleFormBodegaProducto.jTabbedPaneRelacionesBodegaProducto.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesBodegaProducto"));
		
		;		
		//TABBED PANE RELACIONES FIN(EXTRA TAB)	
	}
	
	public void initActions() {				
		this.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"CloseInternalFrameBodegaProducto"));
		
		if(this.jInternalFrameDetalleFormBodegaProducto!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormBodegaProducto.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarBodegaProducto"));
		}
		
		this.jTableDatosBodegaProducto.getSelectionModel().addListSelectionListener(new TableListSelectionListener(this,"TableDatosSeleccionarBodegaProducto"));
		
		this.jTableDatosBodegaProducto.addMouseListener(new TableMouseAdapter(this,"DatosSeleccionarBodegaProducto"));
		
		this.jButtonNuevoBodegaProducto.addActionListener(new ButtonActionListener(this,"NuevoBodegaProducto"));
		
		this.jButtonDuplicarBodegaProducto.addActionListener(new ButtonActionListener(this,"DuplicarBodegaProducto"));
		
		this.jButtonCopiarBodegaProducto.addActionListener(new ButtonActionListener(this,"CopiarBodegaProducto"));
		
		this.jButtonVerFormBodegaProducto.addActionListener(new ButtonActionListener(this,"VerFormBodegaProducto"));
		
		
		this.jButtonNuevoToolBarBodegaProducto.addActionListener(new ButtonActionListener(this,"NuevoToolBarBodegaProducto"));
			
		this.jButtonDuplicarToolBarBodegaProducto.addActionListener(new ButtonActionListener(this,"DuplicarToolBarBodegaProducto"));
			
		this.jMenuItemNuevoBodegaProducto.addActionListener (new ButtonActionListener(this,"MenuItemNuevoBodegaProducto"));
			
		this.jMenuItemDuplicarBodegaProducto.addActionListener (new ButtonActionListener(this,"MenuItemDuplicarBodegaProducto"));		
		
		
		this.jButtonNuevoRelacionesBodegaProducto.addActionListener (new ButtonActionListener(this,"NuevoRelacionesBodegaProducto"));
		
		
		this.jButtonNuevoRelacionesToolBarBodegaProducto.addActionListener(new ButtonActionListener(this,"NuevoRelacionesToolBarBodegaProducto"));
			
		this.jMenuItemNuevoRelacionesBodegaProducto.addActionListener(new ButtonActionListener(this,"MenuItemNuevoRelacionesBodegaProducto"));		
		
		
		if(this.jInternalFrameDetalleFormBodegaProducto!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormBodegaProducto.jButtonModificarBodegaProducto.addActionListener(new ButtonActionListener(this,"ModificarBodegaProducto"));
		}
		
		
		if(this.jInternalFrameDetalleFormBodegaProducto!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormBodegaProducto.jButtonModificarToolBarBodegaProducto.addActionListener(new ButtonActionListener(this,"ModificarToolBarBodegaProducto"));
			
			this.jInternalFrameDetalleFormBodegaProducto.jMenuItemModificarBodegaProducto.addActionListener(new ButtonActionListener(this,"MenuItemModificarBodegaProducto"));		
		}
		
		
		if(this.jInternalFrameDetalleFormBodegaProducto!=null) { //if(this.conCargarFormDetalle) {			
			this.jInternalFrameDetalleFormBodegaProducto.jButtonActualizarBodegaProducto.addActionListener (new ButtonActionListener(this,"ActualizarBodegaProducto"));
		}
		
		
		if(this.jInternalFrameDetalleFormBodegaProducto!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormBodegaProducto.jButtonActualizarToolBarBodegaProducto.addActionListener(new ButtonActionListener(this,"ActualizarToolBarBodegaProducto"));
				
			this.jInternalFrameDetalleFormBodegaProducto.jMenuItemActualizarBodegaProducto.addActionListener (new ButtonActionListener(this,"MenuItemActualizarBodegaProducto"));		
		}
		
		
		if(this.jInternalFrameDetalleFormBodegaProducto!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormBodegaProducto.jButtonEliminarBodegaProducto.addActionListener (new ButtonActionListener(this,"EliminarBodegaProducto"));
		}
		
		
		if(this.jInternalFrameDetalleFormBodegaProducto!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormBodegaProducto.jButtonEliminarToolBarBodegaProducto.addActionListener (new ButtonActionListener(this,"EliminarToolBarBodegaProducto"));
						
			this.jInternalFrameDetalleFormBodegaProducto.jMenuItemEliminarBodegaProducto.addActionListener (new ButtonActionListener(this,"MenuItemEliminarBodegaProducto"));		
		}
		
		
		if(this.jInternalFrameDetalleFormBodegaProducto!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormBodegaProducto.jButtonCancelarBodegaProducto.addActionListener (new ButtonActionListener(this,"CancelarBodegaProducto"));
		}
		
		
		if(this.jInternalFrameDetalleFormBodegaProducto!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormBodegaProducto.jButtonCancelarToolBarBodegaProducto.addActionListener (new ButtonActionListener(this,"CancelarToolBarBodegaProducto"));
			
			this.jInternalFrameDetalleFormBodegaProducto.jMenuItemCancelarBodegaProducto.addActionListener (new ButtonActionListener(this,"MenuItemCancelarBodegaProducto"));		
		}
		
		this.jButtonMostrarOcultarTablaToolBarBodegaProducto.addActionListener (new ButtonActionListener(this,"MostrarOcultarToolBarBodegaProducto"));		
		
		
		this.jButtonCerrarBodegaProducto.addActionListener (new ButtonActionListener(this,"CerrarBodegaProducto"));
		
		
		this.jButtonCerrarToolBarBodegaProducto.addActionListener (new ButtonActionListener(this,"CerrarToolBarBodegaProducto"));
			
		this.jMenuItemCerrarBodegaProducto.addActionListener (new ButtonActionListener(this,"MenuItemCerrarBodegaProducto"));
			
		if(this.jInternalFrameDetalleFormBodegaProducto!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormBodegaProducto.jMenuItemDetalleCerrarBodegaProducto.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarBodegaProducto"));		
		}
		
		
		if(this.jInternalFrameDetalleFormBodegaProducto!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormBodegaProducto.jButtonGuardarCambiosBodegaProducto.addActionListener (new ButtonActionListener(this,"GuardarCambiosBodegaProducto"));
		}
		
		
		if(this.jInternalFrameDetalleFormBodegaProducto!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormBodegaProducto.jButtonGuardarCambiosToolBarBodegaProducto.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarBodegaProducto"));
		}
		
		this.jButtonCopiarToolBarBodegaProducto.addActionListener (new ButtonActionListener(this,"CopiarToolBarBodegaProducto"));
			
		this.jButtonVerFormToolBarBodegaProducto.addActionListener (new ButtonActionListener(this,"VerFormToolBarBodegaProducto"));
		
		this.jMenuItemGuardarCambiosBodegaProducto.addActionListener (new ButtonActionListener(this,"MenuItemGuardarCambiosBodegaProducto"));
			
		this.jMenuItemCopiarBodegaProducto.addActionListener (new ButtonActionListener(this,"MenuItemCopiarBodegaProducto"));		
		
		this.jMenuItemVerFormBodegaProducto.addActionListener (new ButtonActionListener(this,"MenuItemVerFormBodegaProducto"));		
		
		
		this.jButtonGuardarCambiosTablaBodegaProducto.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaBodegaProducto"));
		
		
		this.jButtonGuardarCambiosTablaToolBarBodegaProducto.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaToolBarBodegaProducto"));
			
		this.jMenuItemGuardarCambiosTablaBodegaProducto.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaBodegaProducto"));		
		
		
		
		this.jButtonRecargarInformacionBodegaProducto.addActionListener (new ButtonActionListener(this,"RecargarInformacionBodegaProducto"));
					
		this.jButtonRecargarInformacionToolBarBodegaProducto.addActionListener (new ButtonActionListener(this,"RecargarInformacionToolBarBodegaProducto"));
		
		this.jMenuItemRecargarInformacionBodegaProducto.addActionListener (new ButtonActionListener(this,"MenuItemRecargarInformacionBodegaProducto"));		
		
		
		
		this.jButtonAnterioresBodegaProducto.addActionListener (new ButtonActionListener(this,"AnterioresBodegaProducto"));
		
		
		this.jButtonAnterioresToolBarBodegaProducto.addActionListener (new ButtonActionListener(this,"AnterioresToolBarBodegaProducto"));
		
		this.jMenuItemAnterioresBodegaProducto.addActionListener (new ButtonActionListener(this,"MenuItemAnterioresBodegaProducto"));		
		
		
		this.jButtonSiguientesBodegaProducto.addActionListener (new ButtonActionListener(this,"SiguientesBodegaProducto"));
		
		
		this.jButtonSiguientesToolBarBodegaProducto.addActionListener (new ButtonActionListener(this,"SiguientesToolBarBodegaProducto"));
			
		this.jMenuItemSiguientesBodegaProducto.addActionListener (new ButtonActionListener(this,"MenuItemSiguientesBodegaProducto"));
			
		this.jMenuItemAbrirOrderByBodegaProducto.addActionListener (new ButtonActionListener(this,"MenuItemAbrirOrderByBodegaProducto"));
			
		this.jMenuItemMostrarOcultarBodegaProducto.addActionListener (new ButtonActionListener(this,"MenuItemMostrarOcultarBodegaProducto"));
			
		this.jMenuItemDetalleAbrirOrderByBodegaProducto.addActionListener (new ButtonActionListener(this,"MenuItemDetalleAbrirOrderByBodegaProducto"));
			
		this.jMenuItemDetalleMostarOcultarBodegaProducto.addActionListener (new ButtonActionListener(this,"MenuItemDetalleMostrarOcultarBodegaProducto"));		
		
		
		this.jButtonNuevoGuardarCambiosBodegaProducto.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosBodegaProducto"));
		
		
		this.jButtonNuevoGuardarCambiosToolBarBodegaProducto.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosToolBarBodegaProducto"));
			
		this.jMenuItemNuevoGuardarCambiosBodegaProducto.addActionListener (new ButtonActionListener(this,"MenuItemNuevoGuardarCambiosBodegaProducto"));		
		
		
		
		//SELECCIONAR TODOS
		
		this.jCheckBoxSeleccionarTodosBodegaProducto.addItemListener(new CheckBoxItemListener(this,"SeleccionarTodosBodegaProducto"));

		this.jCheckBoxSeleccionadosBodegaProducto.addItemListener(new CheckBoxItemListener(this,"SeleccionadosBodegaProducto"));
		
		if(this.jInternalFrameDetalleFormBodegaProducto!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormBodegaProducto.jComboBoxTiposAccionesFormularioBodegaProducto.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioBodegaProducto"));
		}
		
		
		this.jComboBoxTiposRelacionesBodegaProducto.addActionListener (new ButtonActionListener(this,"TiposRelacionesBodegaProducto"));
			
		this.jComboBoxTiposAccionesBodegaProducto.addActionListener (new ButtonActionListener(this,"TiposAccionesBodegaProducto"));
					
		this.jComboBoxTiposSeleccionarBodegaProducto.addActionListener (new ButtonActionListener(this,"TiposSeleccionarBodegaProducto"));
			
		this.jTextFieldValorCampoGeneralBodegaProducto.addActionListener (new ButtonActionListener(this,"ValorCampoGeneralBodegaProducto"));		
		
		
		if(this.jInternalFrameDetalleFormBodegaProducto!=null) { //if(this.conCargarFormDetalle) {
		
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonidBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"idBodegaProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_empresaBodegaProductoUpdate.addActionListener(new ButtonActionListener(this,"id_empresaBodegaProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_empresaBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaBodegaProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_sucursalBodegaProductoUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalBodegaProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_sucursalBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalBodegaProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_bodegaBodegaProductoUpdate.addActionListener(new ButtonActionListener(this,"id_bodegaBodegaProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_bodegaBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_bodegaBodegaProductoBusqueda"));
		//jButtonid_productoBodegaProducto.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_productoBodegaProductoActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_productoBodegaProducto.addActionListener(new ButtonActionListener(this,"id_productoBodegaProducto"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_productoBodegaProductoUpdate.addActionListener(new ButtonActionListener(this,"id_productoBodegaProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_productoBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_productoBodegaProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_unidadBodegaProductoUpdate.addActionListener(new ButtonActionListener(this,"id_unidadBodegaProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_unidadBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_unidadBodegaProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_centro_costoBodegaProductoUpdate.addActionListener(new ButtonActionListener(this,"id_centro_costoBodegaProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_centro_costoBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_centro_costoBodegaProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_estado_bodega_productoBodegaProductoUpdate.addActionListener(new ButtonActionListener(this,"id_estado_bodega_productoBodegaProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_estado_bodega_productoBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_bodega_productoBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtondescripcionBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"descripcionBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtoncantidad_disponibleBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"cantidad_disponibleBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonstock_maximoBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"stock_maximoBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonstock_minimoBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"stock_minimoBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonivaBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"ivaBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtoniva_valorBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"iva_valorBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtondescuentoBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"descuentoBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtondescuento_valorBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"descuento_valorBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtoniceBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"iceBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonice_valorBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"ice_valorBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtoncosto_promedioBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"costo_promedioBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonporcentaje_comisionBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"porcentaje_comisionBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonprecioBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"precioBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonultimo_costoBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"ultimo_costoBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtoncostoBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"costoBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonarancel_porcentajeBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"arancel_porcentajeBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonice_porcentajeBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"ice_porcentajeBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonpesoBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"pesoBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtoncon_ivaBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"con_ivaBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtoncon_impuestoBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"con_impuestoBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtoncon_iceBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"con_iceBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonesta_activoBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"esta_activoBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtoncon_balanzaBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"con_balanzaBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtoncantidad_pedidaBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"cantidad_pedidaBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtoncantidad_fisicaBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"cantidad_fisicaBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtoncantidad_requeridoBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"cantidad_requeridoBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonprecio_costoBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"precio_costoBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonprecio_promedioBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"precio_promedioBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtontotal_ingresosBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"total_ingresosBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtontotal_egresosBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"total_egresosBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtontotal_provisionBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"total_provisionBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtontotal_procesoBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"total_procesoBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtoncosto_calculadoBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"costo_calculadoBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtondias_produccionBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"dias_produccionBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonprecio_reposicionBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"precio_reposicionBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonfecha_ultimo_pedidoBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"fecha_ultimo_pedidoBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonfecha_ingresoBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"fecha_ingresoBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonfecha_egresoBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"fecha_egresoBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonfecha_ultima_compraBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"fecha_ultima_compraBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonfecha_ultima_ventaBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"fecha_ultima_ventaBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonfecha_ultima_devolucionBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"fecha_ultima_devolucionBodegaProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_cuenta_contable_inventarioBodegaProductoUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_inventarioBodegaProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_cuenta_contable_inventarioBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_inventarioBodegaProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_cuenta_contable_costo_ventaBodegaProductoUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_costo_ventaBodegaProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_cuenta_contable_costo_ventaBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_costo_ventaBodegaProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_cuenta_contable_ventaBodegaProductoUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_ventaBodegaProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_cuenta_contable_ventaBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_ventaBodegaProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_cuenta_contable_descuentoBodegaProductoUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_descuentoBodegaProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_cuenta_contable_descuentoBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_descuentoBodegaProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_cuenta_contable_produccionBodegaProductoUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_produccionBodegaProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_cuenta_contable_produccionBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_produccionBodegaProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_cuenta_contable_devolucionBodegaProductoUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_devolucionBodegaProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_cuenta_contable_devolucionBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_devolucionBodegaProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_cuenta_contable_ingreso_debitoBodegaProductoUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_ingreso_debitoBodegaProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_cuenta_contable_ingreso_debitoBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_ingreso_debitoBodegaProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_cuenta_contable_ingreso_creditoBodegaProductoUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_ingreso_creditoBodegaProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_cuenta_contable_ingreso_creditoBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_ingreso_creditoBodegaProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_cuenta_contable_resultado_debitoBodegaProductoUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_resultado_debitoBodegaProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_cuenta_contable_resultado_debitoBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_resultado_debitoBodegaProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_cuenta_contable_resultado_creditoBodegaProductoUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_resultado_creditoBodegaProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_cuenta_contable_resultado_creditoBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_resultado_creditoBodegaProductoBusqueda"));
		}
		
		if(!this.conCargarMinimo) {
		//BYDAN_BUSQUEDAS
		
		
			this.jButtonFK_IdBodegaBodegaProducto.addActionListener(new ButtonActionListener(this,"FK_IdBodegaBodegaProducto"));

			this.jButtonFK_IdCentroCostoBodegaProducto.addActionListener(new ButtonActionListener(this,"FK_IdCentroCostoBodegaProducto"));

			this.jButtonFK_IdCuentaContableCostoVentaBodegaProducto.addActionListener(new ButtonActionListener(this,"FK_IdCuentaContableCostoVentaBodegaProducto"));

			this.jButtonFK_IdCuentaContableIngresoCreditoBodegaProducto.addActionListener(new ButtonActionListener(this,"FK_IdCuentaContableIngresoCreditoBodegaProducto"));

			this.jButtonFK_IdCuentaContableIngresoDebitoBodegaProducto.addActionListener(new ButtonActionListener(this,"FK_IdCuentaContableIngresoDebitoBodegaProducto"));

			this.jButtonFK_IdCuentaContableProduccionBodegaProducto.addActionListener(new ButtonActionListener(this,"FK_IdCuentaContableProduccionBodegaProducto"));

			this.jButtonFK_IdCuentaContableResultadoCreditoBodegaProducto.addActionListener(new ButtonActionListener(this,"FK_IdCuentaContableResultadoCreditoBodegaProducto"));

			this.jButtonFK_IdCuentaContableResultadoDebitoBodegaProducto.addActionListener(new ButtonActionListener(this,"FK_IdCuentaContableResultadoDebitoBodegaProducto"));

			this.jButtonFK_IdCuentaContableVentaBodegaProducto.addActionListener(new ButtonActionListener(this,"FK_IdCuentaContableVentaBodegaProducto"));

			this.jButtonFK_IdProductoBodegaProducto.addActionListener(new ButtonActionListener(this,"FK_IdProductoBodegaProducto"));

			this.jButtonBuscarFK_IdProductoid_productoBodegaProducto.addActionListener(new ButtonActionListener(this,"id_productoBodegaProducto"));

			this.jButtonFK_IdUnidadBodegaProducto.addActionListener(new ButtonActionListener(this,"FK_IdUnidadBodegaProducto"));
		
		
		
			//REPORTE DINAMICO
			
			if(this.jInternalFrameReporteDinamicoBodegaProducto!=null) {
				this.jInternalFrameReporteDinamicoBodegaProducto.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoBodegaProducto"));
				this.jInternalFrameReporteDinamicoBodegaProducto.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoBodegaProducto"));
				this.jInternalFrameReporteDinamicoBodegaProducto.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoBodegaProducto"));
			}
			
			//this.jButtonCerrarReporteDinamicoBodegaProducto.addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoBodegaProducto"));				
			//this.jButtonGenerarReporteDinamicoBodegaProducto.addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoBodegaProducto"));
			//this.jButtonGenerarExcelReporteDinamicoBodegaProducto.addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoBodegaProducto"));
				
				
			//IMPORTACION			
			if(this.jInternalFrameImportacionBodegaProducto!=null) {
				this.jInternalFrameImportacionBodegaProducto.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionBodegaProducto"));
				this.jInternalFrameImportacionBodegaProducto.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionBodegaProducto"));
				this.jInternalFrameImportacionBodegaProducto.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionBodegaProducto"));
			}
			
			//ORDER BY
			this.jButtonAbrirOrderByBodegaProducto.addActionListener (new ButtonActionListener(this,"AbrirOrderByBodegaProducto"));
			
			this.jButtonAbrirOrderByToolBarBodegaProducto.addActionListener (new ButtonActionListener(this,"AbrirOrderByToolBarBodegaProducto"));			
			
			if(this.jInternalFrameOrderByBodegaProducto!=null) {
				this.jInternalFrameOrderByBodegaProducto.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByBodegaProducto"));				
			}
			
			
		}
		
		
		
		if(!this.conCargarMinimo) {
			if(this.jInternalFrameDetalleFormBodegaProducto!=null) { //if(this.conCargarFormDetalle) {
			;
			}
		}
		
		
		//TABBED PANE RELACIONES
		if(this.jInternalFrameDetalleFormBodegaProducto!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormBodegaProducto.jTabbedPaneRelacionesBodegaProducto.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesBodegaProducto"));
		
		;
		}
		//TABBED PANE RELACIONES FIN(EXTRA TAB)		
	}
	
	/*
	public void initActions() {
		String sMapKey = "";
		InputMap inputMap =null;
		
		this.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
            public void internalFrameClosing(InternalFrameEvent event) {          	
            	try {
            		closingInternalFrameBodegaProducto();
				} catch (Exception e) {
					e.printStackTrace();
				}
            }
        });
		
		this.jInternalFrameDetalleFormBodegaProducto.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
	        public void internalFrameClosing(InternalFrameEvent event) {
	            JInternalFrameBase jInternalFrameDetalleFormBodegaProducto = (JInternalFrameBase)event.getSource();
	            	
	            BodegaProductoBeanSwingJInternalFrame jInternalFrameParent=(BodegaProductoBeanSwingJInternalFrame)jInternalFrameDetalleFormBodegaProducto.getjInternalFrameParent();
	                
	            try {
					jInternalFrameParent.jButtonCancelarBodegaProductoActionPerformed(null);
					
					//jInternalFrameParent.dispose();
					//jInternalFrameParent=null;
					
				} catch (Exception e) {
					e.printStackTrace();
				}
	        }
	    });
			
		this.jTableDatosBodegaProducto.getSelectionModel().addListSelectionListener (
	                new ListSelectionListener() {
	                    public void valueChanged(ListSelectionEvent e) {
							//BYDAN_DESHABILITADO
	                    	//try {jTableDatosBodegaProductoListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
	                    }
	                }
	     );
		
		this.jTableDatosBodegaProducto.addMouseListener(new MouseAdapter() {
			   public void mouseClicked(MouseEvent evt) {
				      if (evt.getClickCount() == 2) {
				    	  jButtonIdActionPerformed(null,jTableDatosBodegaProducto.getSelectedRow(),false,false);
				      }
				   }
		});
		
		this.jButtonNuevoBodegaProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoBodegaProductoActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoToolBarBodegaProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoBodegaProductoActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoBodegaProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoBodegaProductoActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoBodegaProducto";
		inputMap = this.jButtonNuevoBodegaProducto.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_N , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoBodegaProducto.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoBodegaProductoActionPerformed(evt,false);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonNuevoRelacionesBodegaProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoBodegaProductoActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoRelacionesToolBarBodegaProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoBodegaProductoActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoRelacionesBodegaProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoBodegaProductoActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoRelacionesBodegaProducto";
		inputMap = this.jButtonNuevoRelacionesBodegaProducto.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_R , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoRelacionesBodegaProducto.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoBodegaProductoActionPerformed(evt,true);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonModificarBodegaProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarBodegaProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonModificarToolBarBodegaProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarBodegaProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemModificarBodegaProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarBodegaProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ModificarBodegaProducto";
		inputMap = this.jButtonModificarBodegaProducto.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_M , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonModificarBodegaProducto.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonModificarBodegaProductoActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonActualizarBodegaProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarBodegaProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonActualizarToolBarBodegaProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarBodegaProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemActualizarBodegaProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarBodegaProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ActualizarBodegaProducto";
		inputMap = this.jButtonActualizarBodegaProducto.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonActualizarBodegaProducto.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonActualizarBodegaProductoActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonEliminarBodegaProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarBodegaProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonEliminarToolBarBodegaProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarBodegaProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
				
		this.jMenuItemEliminarBodegaProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarBodegaProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "EliminarBodegaProducto";
		inputMap = this.jButtonEliminarBodegaProducto.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_E , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonEliminarBodegaProducto.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonEliminarBodegaProductoActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCancelarBodegaProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarBodegaProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCancelarToolBarBodegaProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarBodegaProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCancelarBodegaProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarBodegaProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CancelarBodegaProducto";
		inputMap = this.jButtonCancelarBodegaProducto.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_Q , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonCancelarBodegaProducto.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCancelarBodegaProductoActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCerrarBodegaProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarBodegaProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCerrarToolBarBodegaProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarBodegaProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCerrarBodegaProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarBodegaProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemDetalleCerrarBodegaProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  //try {jButtonCerrarBodegaProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
					try {jButtonCancelarBodegaProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CerrarBodegaProducto";
		inputMap = this.jButtonCerrarBodegaProducto.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_C , KeyEvent.ALT_MASK), sMapKey);
			
		this.jButtonCerrarBodegaProducto.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCerrarBodegaProductoActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jInternalFrameDetalleFormBodegaProducto.jButtonGuardarCambiosBodegaProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosBodegaProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosToolBarBodegaProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosBodegaProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosBodegaProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosBodegaProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaBodegaProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosBodegaProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaToolBarBodegaProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosBodegaProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosTablaBodegaProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosBodegaProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "GuardarCambiosBodegaProducto";
		inputMap = this.jInternalFrameDetalleFormBodegaProducto.jButtonGuardarCambiosBodegaProducto.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jInternalFrameDetalleFormBodegaProducto.jButtonGuardarCambiosBodegaProducto.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonGuardarCambiosBodegaProductoActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonRecargarInformacionBodegaProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionBodegaProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonRecargarInformacionToolBarBodegaProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionBodegaProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemRecargarInformacionBodegaProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionBodegaProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		this.jButtonAnterioresBodegaProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresBodegaProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAnterioresToolBarBodegaProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresBodegaProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemAnterioresBodegaProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresBodegaProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesBodegaProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesBodegaProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesToolBarBodegaProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesBodegaProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemSiguientesBodegaProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesBodegaProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosBodegaProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosBodegaProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosToolBarBodegaProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosBodegaProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoGuardarCambiosBodegaProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosBodegaProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		//SELECCIONAR TODOS
		this.jCheckBoxSeleccionarTodosBodegaProducto.addItemListener(new ItemListener() {		
			public void itemStateChanged(ItemEvent evt) {
				try {jCheckBoxSeleccionarTodosBodegaProductoItemListener(evt);}catch(Exception e){e.printStackTrace();}
			}
		});

		this.jComboBoxTiposAccionesBodegaProducto.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposAccionesBodegaProductoActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jComboBoxTiposSeleccionarBodegaProducto.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposSeleccionarBodegaProductoActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jTextFieldValorCampoGeneralBodegaProducto.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jTextFieldValorCampoGeneralBodegaProductoActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonidBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"idBodegaProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_empresaBodegaProductoUpdate.addActionListener(new ButtonActionListener(this,"id_empresaBodegaProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_empresaBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaBodegaProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_sucursalBodegaProductoUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalBodegaProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_sucursalBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalBodegaProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_bodegaBodegaProductoUpdate.addActionListener(new ButtonActionListener(this,"id_bodegaBodegaProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_bodegaBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_bodegaBodegaProductoBusqueda"));
		//jButtonid_productoBodegaProducto.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_productoBodegaProductoActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_productoBodegaProducto.addActionListener(new ButtonActionListener(this,"id_productoBodegaProducto"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_productoBodegaProductoUpdate.addActionListener(new ButtonActionListener(this,"id_productoBodegaProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_productoBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_productoBodegaProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_unidadBodegaProductoUpdate.addActionListener(new ButtonActionListener(this,"id_unidadBodegaProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_unidadBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_unidadBodegaProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_centro_costoBodegaProductoUpdate.addActionListener(new ButtonActionListener(this,"id_centro_costoBodegaProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_centro_costoBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_centro_costoBodegaProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_estado_bodega_productoBodegaProductoUpdate.addActionListener(new ButtonActionListener(this,"id_estado_bodega_productoBodegaProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_estado_bodega_productoBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_bodega_productoBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtondescripcionBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"descripcionBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtoncantidad_disponibleBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"cantidad_disponibleBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonstock_maximoBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"stock_maximoBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonstock_minimoBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"stock_minimoBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonivaBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"ivaBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtoniva_valorBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"iva_valorBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtondescuentoBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"descuentoBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtondescuento_valorBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"descuento_valorBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtoniceBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"iceBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonice_valorBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"ice_valorBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtoncosto_promedioBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"costo_promedioBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonporcentaje_comisionBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"porcentaje_comisionBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonprecioBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"precioBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonultimo_costoBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"ultimo_costoBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtoncostoBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"costoBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonarancel_porcentajeBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"arancel_porcentajeBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonice_porcentajeBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"ice_porcentajeBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonpesoBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"pesoBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtoncon_ivaBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"con_ivaBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtoncon_impuestoBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"con_impuestoBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtoncon_iceBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"con_iceBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonesta_activoBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"esta_activoBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtoncon_balanzaBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"con_balanzaBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtoncantidad_pedidaBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"cantidad_pedidaBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtoncantidad_fisicaBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"cantidad_fisicaBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtoncantidad_requeridoBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"cantidad_requeridoBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonprecio_costoBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"precio_costoBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonprecio_promedioBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"precio_promedioBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtontotal_ingresosBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"total_ingresosBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtontotal_egresosBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"total_egresosBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtontotal_provisionBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"total_provisionBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtontotal_procesoBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"total_procesoBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtoncosto_calculadoBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"costo_calculadoBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtondias_produccionBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"dias_produccionBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonprecio_reposicionBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"precio_reposicionBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonfecha_ultimo_pedidoBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"fecha_ultimo_pedidoBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonfecha_ingresoBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"fecha_ingresoBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonfecha_egresoBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"fecha_egresoBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonfecha_ultima_compraBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"fecha_ultima_compraBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonfecha_ultima_ventaBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"fecha_ultima_ventaBodegaProductoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonfecha_ultima_devolucionBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"fecha_ultima_devolucionBodegaProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_cuenta_contable_inventarioBodegaProductoUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_inventarioBodegaProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_cuenta_contable_inventarioBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_inventarioBodegaProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_cuenta_contable_costo_ventaBodegaProductoUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_costo_ventaBodegaProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_cuenta_contable_costo_ventaBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_costo_ventaBodegaProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_cuenta_contable_ventaBodegaProductoUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_ventaBodegaProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_cuenta_contable_ventaBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_ventaBodegaProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_cuenta_contable_descuentoBodegaProductoUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_descuentoBodegaProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_cuenta_contable_descuentoBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_descuentoBodegaProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_cuenta_contable_produccionBodegaProductoUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_produccionBodegaProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_cuenta_contable_produccionBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_produccionBodegaProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_cuenta_contable_devolucionBodegaProductoUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_devolucionBodegaProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_cuenta_contable_devolucionBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_devolucionBodegaProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_cuenta_contable_ingreso_debitoBodegaProductoUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_ingreso_debitoBodegaProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_cuenta_contable_ingreso_debitoBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_ingreso_debitoBodegaProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_cuenta_contable_ingreso_creditoBodegaProductoUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_ingreso_creditoBodegaProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_cuenta_contable_ingreso_creditoBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_ingreso_creditoBodegaProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_cuenta_contable_resultado_debitoBodegaProductoUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_resultado_debitoBodegaProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_cuenta_contable_resultado_debitoBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_resultado_debitoBodegaProductoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_cuenta_contable_resultado_creditoBodegaProductoUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_resultado_creditoBodegaProductoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormBodegaProducto.jButtonid_cuenta_contable_resultado_creditoBodegaProductoBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_resultado_creditoBodegaProductoBusqueda"));
		
		
		this.jButtonFK_IdBodegaBodegaProducto.addActionListener(new ButtonActionListener(this,"FK_IdBodegaBodegaProducto"));

		this.jButtonFK_IdCentroCostoBodegaProducto.addActionListener(new ButtonActionListener(this,"FK_IdCentroCostoBodegaProducto"));

		this.jButtonFK_IdCuentaContableCostoVentaBodegaProducto.addActionListener(new ButtonActionListener(this,"FK_IdCuentaContableCostoVentaBodegaProducto"));

		this.jButtonFK_IdCuentaContableIngresoCreditoBodegaProducto.addActionListener(new ButtonActionListener(this,"FK_IdCuentaContableIngresoCreditoBodegaProducto"));

		this.jButtonFK_IdCuentaContableIngresoDebitoBodegaProducto.addActionListener(new ButtonActionListener(this,"FK_IdCuentaContableIngresoDebitoBodegaProducto"));

		this.jButtonFK_IdCuentaContableProduccionBodegaProducto.addActionListener(new ButtonActionListener(this,"FK_IdCuentaContableProduccionBodegaProducto"));

		this.jButtonFK_IdCuentaContableResultadoCreditoBodegaProducto.addActionListener(new ButtonActionListener(this,"FK_IdCuentaContableResultadoCreditoBodegaProducto"));

		this.jButtonFK_IdCuentaContableResultadoDebitoBodegaProducto.addActionListener(new ButtonActionListener(this,"FK_IdCuentaContableResultadoDebitoBodegaProducto"));

		this.jButtonFK_IdCuentaContableVentaBodegaProducto.addActionListener(new ButtonActionListener(this,"FK_IdCuentaContableVentaBodegaProducto"));

		this.jButtonFK_IdProductoBodegaProducto.addActionListener(new ButtonActionListener(this,"FK_IdProductoBodegaProducto"));

		this.jButtonBuscarFK_IdProductoid_productoBodegaProducto.addActionListener(new ButtonActionListener(this,"id_productoBodegaProducto"));

		this.jButtonFK_IdUnidadBodegaProducto.addActionListener(new ButtonActionListener(this,"FK_IdUnidadBodegaProducto"));

		
		//REPORTE DINAMICO
		this.jButtonCerrarReporteDinamicoBodegaProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarReporteDinamicoBodegaProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarReporteDinamicoBodegaProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarReporteDinamicoBodegaProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarExcelReporteDinamicoBodegaProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarExcelReporteDinamicoBodegaProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		//IMPORTACION
		this.jButtonCerrarImportacionBodegaProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarImportacionBodegaProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarImportacionBodegaProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarImportacionBodegaProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAbrirImportacionBodegaProducto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAbrirImportacionBodegaProductoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
	}
	*/
	
	
	public void jComboBoxTiposSeleccionarBodegaProductoActionListener(ActionEvent evt) throws Exception {    		
		try {			
			Reporte reporte=(Reporte)this.jComboBoxTiposSeleccionarBodegaProducto.getSelectedItem();
			
			//if(reporte.getsCodigo().equals("SELECCIONAR")) {
			//}					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
		}
	}	
	
	
	
	public void seleccionarTodosBodegaProducto(Boolean conSeleccionarTodos) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				for(BodegaProducto bodegaproductoAux:this.bodegaproductoLogic.getBodegaProductos()) {
					bodegaproductoAux.setIsSelected(conSeleccionarTodos);
				}			
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(BodegaProducto bodegaproductoAux:bodegaproductos) {
					bodegaproductoAux.setIsSelected(conSeleccionarTodos);
				}
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarTodosBodegaProductoItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingBodegaProducto(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			
			if(sTipoSeleccionar.equals("COLUMNAS")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(BodegaProducto bodegaproductoAux:this.bodegaproductoLogic.getBodegaProductos()) {
						bodegaproductoAux.setIsSelected(this.isSeleccionarTodos);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(BodegaProducto bodegaproductoAux:bodegaproductos) {
						bodegaproductoAux.setIsSelected(this.isSeleccionarTodos);
					}
				}
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					for(BodegaProducto bodegaproductoAux:this.bodegaproductoLogic.getBodegaProductos()) {
					
						if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_CONIVA)) {
							existe=true;
							bodegaproductoAux.setcon_iva(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_CONIMPUESTO)) {
							existe=true;
							bodegaproductoAux.setcon_impuesto(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_CONICE)) {
							existe=true;
							bodegaproductoAux.setcon_ice(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_ESTAACTIVO)) {
							existe=true;
							bodegaproductoAux.setesta_activo(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_CONBALANZA)) {
							existe=true;
							bodegaproductoAux.setcon_balanza(this.isSeleccionarTodos);
						}
					}	
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(BodegaProducto bodegaproductoAux:bodegaproductos) {
						
						if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_CONIVA)) {
							existe=true;
							bodegaproductoAux.setcon_iva(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_CONIMPUESTO)) {
							existe=true;
							bodegaproductoAux.setcon_impuesto(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_CONICE)) {
							existe=true;
							bodegaproductoAux.setcon_ice(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_ESTAACTIVO)) {
							existe=true;
							bodegaproductoAux.setesta_activo(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_CONBALANZA)) {
							existe=true;
							bodegaproductoAux.setcon_balanza(this.isSeleccionarTodos);
						}
					}
				}
			}
					
			if(existe) {
				this.inicializarActualizarBindingTablaBodegaProducto(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosBodegaProducto.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosBodegaProducto.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosBodegaProducto,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionadosBodegaProductoItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingBodegaProducto(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			int[] arrNumRowsSeleccionados=null;
			
			arrNumRowsSeleccionados=this.jTableDatosBodegaProducto.getSelectedRows();
			
			BodegaProducto bodegaproductoLocal=new BodegaProducto();
			
			//this.seleccionarTodosBodegaProducto(false);
			
			for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					bodegaproductoLocal =(BodegaProducto) this.bodegaproductoLogic.getBodegaProductos().toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(iNumRowSeleccionado)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					bodegaproductoLocal =(BodegaProducto) this.bodegaproductos.toArray()[this.jTableDatosBodegaProducto.convertRowIndexToModel(iNumRowSeleccionado)];
				}
				
				bodegaproductoLocal.setIsSelected(this.isSeleccionados);
			}
			
			/*
			if(sTipoSeleccionar.equals("SELECCIONAR")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(BodegaProducto bodegaproductoAux:this.bodegaproductoLogic.getBodegaProductos()) {
						bodegaproductoAux.setIsSelected(this.isSeleccionados);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(BodegaProducto bodegaproductoAux:bodegaproductos) {
						bodegaproductoAux.setIsSelected(this.isSeleccionados);
					}
				}
			}
			*/
			
			//if(existe) {
				this.inicializarActualizarBindingTablaBodegaProducto(false);
			/*
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			*/
			
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosBodegaProducto.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosBodegaProducto.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosBodegaProducto,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarActualBodegaProductoItemListener(ItemEvent evt,Long idActual) throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void ejecutarAuxiliarBodegaProductoParaAjaxPostBack() throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jTextFieldValorCampoGeneralBodegaProductoActionListener(ActionEvent evt) throws Exception {    		
		try {
			this.inicializarActualizarBindingBodegaProducto(false,false);
			
			//System.out.println(this.jTextFieldValorCampoGeneralBodegaProducto.getText());		
			
			Boolean existe=false;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(BodegaProducto bodegaproductoAux:this.bodegaproductoLogic.getBodegaProductos()) {
				
						if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_DESCRIPCION)) {
							existe=true;
							bodegaproductoAux.setdescripcion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_CANTIDADDISPONIBLE)) {
							existe=true;
							bodegaproductoAux.setcantidad_disponible(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_STOCKMAXIMO)) {
							existe=true;
							bodegaproductoAux.setstock_maximo(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_STOCKMINIMO)) {
							existe=true;
							bodegaproductoAux.setstock_minimo(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_IVA)) {
							existe=true;
							bodegaproductoAux.setiva(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_IVAVALOR)) {
							existe=true;
							bodegaproductoAux.setiva_valor(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_DESCUENTO)) {
							existe=true;
							bodegaproductoAux.setdescuento(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_DESCUENTOVALOR)) {
							existe=true;
							bodegaproductoAux.setdescuento_valor(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_ICE)) {
							existe=true;
							bodegaproductoAux.setice(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_ICEVALOR)) {
							existe=true;
							bodegaproductoAux.setice_valor(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_COSTOPROMEDIO)) {
							existe=true;
							bodegaproductoAux.setcosto_promedio(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_PORCENTAJECOMISION)) {
							existe=true;
							bodegaproductoAux.setporcentaje_comision(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_PRECIO)) {
							existe=true;
							bodegaproductoAux.setprecio(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_ULTIMOCOSTO)) {
							existe=true;
							bodegaproductoAux.setultimo_costo(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_COSTO)) {
							existe=true;
							bodegaproductoAux.setcosto(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_ARANCELPORCENTAJE)) {
							existe=true;
							bodegaproductoAux.setarancel_porcentaje(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_ICEPORCENTAJE)) {
							existe=true;
							bodegaproductoAux.setice_porcentaje(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_PESO)) {
							existe=true;
							bodegaproductoAux.setpeso(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_CANTIDADPEDIDA)) {
							existe=true;
							bodegaproductoAux.setcantidad_pedida(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_CANTIDADFISICA)) {
							existe=true;
							bodegaproductoAux.setcantidad_fisica(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_CANTIDADREQUERIDO)) {
							existe=true;
							bodegaproductoAux.setcantidad_requerido(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_PRECIOCOSTO)) {
							existe=true;
							bodegaproductoAux.setprecio_costo(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_PRECIOPROMEDIO)) {
							existe=true;
							bodegaproductoAux.setprecio_promedio(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_TOTALINGRESOS)) {
							existe=true;
							bodegaproductoAux.settotal_ingresos(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_TOTALEGRESOS)) {
							existe=true;
							bodegaproductoAux.settotal_egresos(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_TOTALPROVISION)) {
							existe=true;
							bodegaproductoAux.settotal_provision(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_TOTALPROCESO)) {
							existe=true;
							bodegaproductoAux.settotal_proceso(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_COSTOCALCULADO)) {
							existe=true;
							bodegaproductoAux.setcosto_calculado(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_DIASPRODUCCION)) {
							existe=true;
							bodegaproductoAux.setdias_produccion(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_PRECIOREPOSICION)) {
							existe=true;
							bodegaproductoAux.setprecio_reposicion(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_FECHAULTIMOPEDIDO)) {
							existe=true;
							bodegaproductoAux.setfecha_ultimo_pedido(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_FECHAINGRESO)) {
							existe=true;
							bodegaproductoAux.setfecha_ingreso(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_FECHAEGRESO)) {
							existe=true;
							bodegaproductoAux.setfecha_egreso(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_FECHAULTIMACOMPRA)) {
							existe=true;
							bodegaproductoAux.setfecha_ultima_compra(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_FECHAULTIMAVENTA)) {
							existe=true;
							bodegaproductoAux.setfecha_ultima_venta(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_FECHAULTIMADEVOLUCION)) {
							existe=true;
							bodegaproductoAux.setfecha_ultima_devolucion(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
				}	
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(BodegaProducto bodegaproductoAux:bodegaproductos) {
					
						if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_DESCRIPCION)) {
							existe=true;
							bodegaproductoAux.setdescripcion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_CANTIDADDISPONIBLE)) {
							existe=true;
							bodegaproductoAux.setcantidad_disponible(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_STOCKMAXIMO)) {
							existe=true;
							bodegaproductoAux.setstock_maximo(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_STOCKMINIMO)) {
							existe=true;
							bodegaproductoAux.setstock_minimo(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_IVA)) {
							existe=true;
							bodegaproductoAux.setiva(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_IVAVALOR)) {
							existe=true;
							bodegaproductoAux.setiva_valor(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_DESCUENTO)) {
							existe=true;
							bodegaproductoAux.setdescuento(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_DESCUENTOVALOR)) {
							existe=true;
							bodegaproductoAux.setdescuento_valor(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_ICE)) {
							existe=true;
							bodegaproductoAux.setice(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_ICEVALOR)) {
							existe=true;
							bodegaproductoAux.setice_valor(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_COSTOPROMEDIO)) {
							existe=true;
							bodegaproductoAux.setcosto_promedio(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_PORCENTAJECOMISION)) {
							existe=true;
							bodegaproductoAux.setporcentaje_comision(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_PRECIO)) {
							existe=true;
							bodegaproductoAux.setprecio(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_ULTIMOCOSTO)) {
							existe=true;
							bodegaproductoAux.setultimo_costo(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_COSTO)) {
							existe=true;
							bodegaproductoAux.setcosto(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_ARANCELPORCENTAJE)) {
							existe=true;
							bodegaproductoAux.setarancel_porcentaje(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_ICEPORCENTAJE)) {
							existe=true;
							bodegaproductoAux.setice_porcentaje(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_PESO)) {
							existe=true;
							bodegaproductoAux.setpeso(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_CANTIDADPEDIDA)) {
							existe=true;
							bodegaproductoAux.setcantidad_pedida(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_CANTIDADFISICA)) {
							existe=true;
							bodegaproductoAux.setcantidad_fisica(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_CANTIDADREQUERIDO)) {
							existe=true;
							bodegaproductoAux.setcantidad_requerido(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_PRECIOCOSTO)) {
							existe=true;
							bodegaproductoAux.setprecio_costo(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_PRECIOPROMEDIO)) {
							existe=true;
							bodegaproductoAux.setprecio_promedio(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_TOTALINGRESOS)) {
							existe=true;
							bodegaproductoAux.settotal_ingresos(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_TOTALEGRESOS)) {
							existe=true;
							bodegaproductoAux.settotal_egresos(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_TOTALPROVISION)) {
							existe=true;
							bodegaproductoAux.settotal_provision(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_TOTALPROCESO)) {
							existe=true;
							bodegaproductoAux.settotal_proceso(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_COSTOCALCULADO)) {
							existe=true;
							bodegaproductoAux.setcosto_calculado(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_DIASPRODUCCION)) {
							existe=true;
							bodegaproductoAux.setdias_produccion(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_PRECIOREPOSICION)) {
							existe=true;
							bodegaproductoAux.setprecio_reposicion(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_FECHAULTIMOPEDIDO)) {
							existe=true;
							bodegaproductoAux.setfecha_ultimo_pedido(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_FECHAINGRESO)) {
							existe=true;
							bodegaproductoAux.setfecha_ingreso(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_FECHAEGRESO)) {
							existe=true;
							bodegaproductoAux.setfecha_egreso(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_FECHAULTIMACOMPRA)) {
							existe=true;
							bodegaproductoAux.setfecha_ultima_compra(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_FECHAULTIMAVENTA)) {
							existe=true;
							bodegaproductoAux.setfecha_ultima_venta(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_FECHAULTIMADEVOLUCION)) {
							existe=true;
							bodegaproductoAux.setfecha_ultima_devolucion(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
				}
			}
								
			if(existe) {
				this.inicializarActualizarBindingTablaBodegaProducto(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jComboBoxTiposAccionesBodegaProductoActionListener(ActionEvent evt,Boolean esParaAccionDesdeFormulario) throws Exception {    				
		Boolean conSplash=true;
		
		try {							
		
			this.inicializarActualizarBindingBodegaProducto(false,false);
			
			Reporte reporte=new Reporte();
			
			this.esParaAccionDesdeFormularioBodegaProducto=esParaAccionDesdeFormulario;
			
			if(!esParaAccionDesdeFormulario) {
				
				reporte=(Reporte)this.jComboBoxTiposAccionesBodegaProducto.getSelectedItem();
				
			} else {
				reporte=(Reporte)this.jInternalFrameDetalleFormBodegaProducto.jComboBoxTiposAccionesFormularioBodegaProducto.getSelectedItem();
			}
			String sTipoAccionLocal=this.sTipoAccion;
			
			if(!esParaAccionDesdeFormulario) {
				sTipoAccionLocal=this.sTipoAccion;
			} else {
				sTipoAccionLocal=this.sTipoAccionFormulario;
			}
			
			if(sTipoAccionLocal.equals("GENERAR REPORTE")) {//reporte.getsCodigo().equals("GENERAR REPORTE")) {
				if(this.isPermisoReporteBodegaProducto) {				
					conSplash=true;//false;										
					
					//this.startProcessBodegaProducto(conSplash);
				
					this.generarReporteBodegaProductosSeleccionados();
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesBodegaProducto.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormBodegaProducto.jComboBoxTiposAccionesFormularioBodegaProducto.setSelectedIndex(0);					
				}
			} else if(sTipoAccionLocal.equals("GENERAR REPORTE DINAMICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.mostrarReporteDinamicoBodegaProductosSeleccionados();
				//this.jComboBoxTiposAccionesBodegaProducto.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("GENERAR_REPORTE_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoBodegaProductosSeleccionados(false);
				//this.jComboBoxTiposAccionesBodegaProducto.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("GENERAR_REPORTE_TOTALES_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoBodegaProductosSeleccionados(true);
				//this.jComboBoxTiposAccionesBodegaProducto.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessBodegaProducto();
				
				this.exportarBodegaProductosSeleccionados();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesBodegaProducto.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormBodegaProducto.jComboBoxTiposAccionesFormularioBodegaProducto.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("IMPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				this.mostrarImportacionBodegaProductos();
				//this.importarBodegaProductos();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesBodegaProducto.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormBodegaProducto.jComboBoxTiposAccionesFormularioBodegaProducto.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS_EXCEL")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessBodegaProducto();
				//SE EXPORTA SEGUN TIPO ARCHIVO SELECCIONADO
				//this.exportarExcelBodegaProductosSeleccionados();
				//this.jComboBoxTiposAccionesBodegaProducto.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("RECARGAR_FK")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {								
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE RECARGAR REFERENCIAS ?", "MANTENIMIENTO DE Bodega Producto", JOptionPane.OK_CANCEL_OPTION) == 0) {
				
				//this.startProcessBodegaProducto();
				
					if(!esParaAccionDesdeFormulario || (esParaAccionDesdeFormulario && this.isEsNuevoBodegaProducto)) {
						this.esRecargarFks=true;
						this.cargarCombosForeignKeyBodegaProducto(false,false,false);
						this.esRecargarFks=false;
						
						JOptionPane.showMessageDialog(this,"PROCESO EJECUTADO CORRECTAMENTE","MANTENIMIENTO DE Bodega Producto",JOptionPane.INFORMATION_MESSAGE);
					} else {
						JOptionPane.showMessageDialog(this,"ESTE PROCESO SOLO FUNCIONA AL INGRESAR UN NUEVO ELEMENTO","MANTENIMIENTO",JOptionPane.ERROR_MESSAGE);	
					}
					
					
				}
				
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesBodegaProducto.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormBodegaProducto.jComboBoxTiposAccionesFormularioBodegaProducto.setSelectedIndex(0);					
				}	
			} 			
			else if(BodegaProductoBeanSwingJInternalFrame.EsProcesoReporte(reporte.getsCodigo())){
				if(this.isPermisoReporteBodegaProducto) {				
					if(this.tieneElementosSeleccionados()) {
						this.quitarFilaTotales();
						
						conSplash=false;
						
						//this.startProcessBodegaProducto(conSplash);
					
						//this.actualizarParametrosGeneralBodegaProducto();
						
						this.generarReporteProcesoAccionBodegaProductosSeleccionados(reporte.getsCodigo());
						
						if(!esParaAccionDesdeFormulario) {
							
							this.jComboBoxTiposAccionesBodegaProducto.setSelectedIndex(0);					
							
						} else {
							this.jInternalFrameDetalleFormBodegaProducto.jComboBoxTiposAccionesFormularioBodegaProducto.setSelectedIndex(0);					
						}
					} else {
						JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
			} 
			else if(BodegaProductoBeanSwingJInternalFrameAdditional.EsProcesoAccionNormal(reporte.getsCodigo())){
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR "+reporte.getsDescripcion()+" EN PROCESO Bodega ProductoS SELECCIONADOS?", "MANTENIMIENTO DE Bodega Producto", JOptionPane.OK_CANCEL_OPTION) == 0) {
						//this.startProcessBodegaProducto();
				
						this.actualizarParametrosGeneralBodegaProducto();
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {						
							this.bodegaproductoReturnGeneral=bodegaproductoLogic.procesarAccionBodegaProductosWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,sTipoAccionLocal,this.bodegaproductoLogic.getBodegaProductos(),this.bodegaproductoParameterGeneral);
						
						} else if(Constantes.ISUSAEJBREMOTE) {
						
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
						this.procesarBodegaProductoReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesBodegaProducto.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormBodegaProducto.jComboBoxTiposAccionesFormularioBodegaProducto.setSelectedIndex(0);					
					}
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}				
			} 
			else {
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					this.actualizarParametrosGeneralBodegaProducto();
					
					BodegaProductoBeanSwingJInternalFrameAdditional.ProcesarAccion(reporte.getsCodigo(),reporte.getsDescripcion(),this);
					
					this.procesarBodegaProductoReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesBodegaProducto.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormBodegaProducto.jComboBoxTiposAccionesFormularioBodegaProducto.setSelectedIndex(0);					
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}
			}
		} catch(Exception e) {
			this.esRecargarFks=false;
			
			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
		
		}  finally {
      		//this.finishProcessBodegaProducto(conSplash);
      	}
	}
	
	public void jComboBoxTiposRelacionesBodegaProductoActionListener(ActionEvent evt) throws Exception {    				
		Boolean conSplash=true;
		
		try {			
			this.startProcessBodegaProducto();
			
			if(this.jInternalFrameDetalleFormBodegaProducto==null) { //if(!this.conCargarFormDetalle) {			
				this.inicializarFormDetalle();
			}
			
			ArrayList<BodegaProducto> bodegaproductosSeleccionados=new ArrayList<BodegaProducto>();		
			BodegaProducto bodegaproducto=new BodegaProducto();
			
			int rowIndex=-1;//CON ESTO SE DESHABILITA SELECCION POR INDICE
			
			this.inicializarActualizarBindingBodegaProducto(false,false);
			
			Reporte reporte=new Reporte();
			
			
			reporte=(Reporte)this.jComboBoxTiposRelacionesBodegaProducto.getSelectedItem();
			
			
			
			
			bodegaproductosSeleccionados=this.getBodegaProductosSeleccionados(true);
			//this.sTipoAccion;
			
			if(bodegaproductosSeleccionados.size()==1) {
				for(BodegaProducto bodegaproductoAux:bodegaproductosSeleccionados) {
					bodegaproducto=bodegaproductoAux;
				}
				
				if(this.sTipoAccion.equals("NONE")) {
				
				}
				
			} else {
				JOptionPane.showMessageDialog(this,"SELECCIONE SOLO UN REGISTRO","RELACIONES",JOptionPane.ERROR_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.finishProcessBodegaProducto();
			
      		//this.finishProcessBodegaProducto(conSplash);
      	}
	}
			
	public static Boolean EsProcesoReporte(String sTipoProceso) throws Exception {
		Boolean esProcesoAccionRepoorte=false;

		if(sTipoProceso.contains("REPORTE_")) {
			 esProcesoAccionRepoorte=true;
		}

		return esProcesoAccionRepoorte;
	}
	
	public void procesarBodegaProductoReturnGeneral() throws Exception {
		if(this.bodegaproductoReturnGeneral.getConRetornoEstaProcesado()) {
			JOptionPane.showMessageDialog(this,this.bodegaproductoReturnGeneral.getsMensajeProceso(),"PROCESO",JOptionPane.INFORMATION_MESSAGE);
		}
		
		if(this.bodegaproductoReturnGeneral.getConMostrarMensaje()) {
			JOptionPane.showMessageDialog(this,this.bodegaproductoReturnGeneral.getsMensajeProceso(),"PROCESO",FuncionesSwing.getColorSelectedBackground(this.bodegaproductoReturnGeneral.getsTipoMensaje()));
		}
		
		if(this.bodegaproductoReturnGeneral.getConRecargarInformacion()) {
			this.procesarBusqueda(this.sAccionBusqueda);
			
			this.inicializarActualizarBindingBodegaProducto(false);
		}
		
		if(this.bodegaproductoReturnGeneral.getConRetornoLista() || this.bodegaproductoReturnGeneral.getConRetornoObjeto()) {
			if(this.bodegaproductoReturnGeneral.getConRetornoLista()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.bodegaproductoLogic.setBodegaProductos(this.bodegaproductoReturnGeneral.getBodegaProductos());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			if(this.bodegaproductoReturnGeneral.getConRetornoObjeto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.bodegaproductoLogic.setBodegaProducto(this.bodegaproductoReturnGeneral.getBodegaProducto());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			this.inicializarActualizarBindingBodegaProducto(false);
		}
	}
	
	public void actualizarParametrosGeneralBodegaProducto() throws Exception {
		
		
	}
	
	public ArrayList<BodegaProducto> getBodegaProductosSeleccionados(Boolean conSeleccionarTodosAutomatico) throws Exception {
		ArrayList<BodegaProducto> bodegaproductosSeleccionados=new ArrayList<BodegaProducto>();
		Boolean existe=false;
		
		if(!this.esParaAccionDesdeFormularioBodegaProducto) {
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				
				for(BodegaProducto bodegaproductoAux:bodegaproductoLogic.getBodegaProductos()) {
					if(bodegaproductoAux.getIsSelected()) {
						bodegaproductosSeleccionados.add(bodegaproductoAux);				
					}
				}
				
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(BodegaProducto bodegaproductoAux:this.bodegaproductos) {
					if(bodegaproductoAux.getIsSelected()) {
						bodegaproductosSeleccionados.add(bodegaproductoAux);				
					}
				}
			}
			
			if(bodegaproductosSeleccionados.size()>0) {
				existe=true;
			}
			
			//SI NO ESTA NINGUNO SELECCIONADO SE SELECCIONA TODOS
			if(!existe) {
				if(conSeleccionarTodosAutomatico) {
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						bodegaproductosSeleccionados.addAll(this.bodegaproductoLogic.getBodegaProductos());
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						bodegaproductosSeleccionados.addAll(this.bodegaproductos);				
					}
				}
			}
		} else {
			bodegaproductosSeleccionados.add(this.bodegaproducto);
		}
		
		return bodegaproductosSeleccionados;
	}
	
	public void actualizarVariablesTipoReporte(Boolean esReporteNormal,Boolean esReporteDinamico,Boolean esReporteAccionProceso,String sPath) {
		if(esReporteNormal) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=false;
			
		} else if(esReporteAccionProceso) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=true;
			
		} else if(esReporteDinamico) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=true;
			this.esReporteAccionProceso=false;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");			
		}
	}
	
	public void generarReporteBodegaProductosSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoReporte.equals("NORMAL") || this.sTipoReporte.equals("FORMULARIO")) {
			existe=true;								
			this.generarReporteNormalBodegaProductosSeleccionados();
			
		} else if(this.sTipoReporte.equals("DINAMICO")) {
			existe=true;
			this.mostrarReporteDinamicoBodegaProductosSeleccionados();
			
		} else if(this.sTipoReporte.equals("GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoBodegaProductosSeleccionados(false);
			
		} else if(this.sTipoReporte.equals("TOTALES_GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoBodegaProductosSeleccionados(true);
		}
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE REPORTE VALIDO","REPORTE DE Bodega Producto",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void generarReporteRelacionesBodegaProductosSeleccionados() throws Exception {
		ArrayList<BodegaProducto> bodegaproductosSeleccionados=new ArrayList<BodegaProducto>();		
		
		bodegaproductosSeleccionados=this.getBodegaProductosSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
					
		//this.sTipoReporteExtra="MasterRelaciones";
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		
		this.generarReporteBodegaProductos("Todos",bodegaproductosSeleccionados);
		
	}	
	
	public void generarReporteNormalBodegaProductosSeleccionados() throws Exception {
		ArrayList<BodegaProducto> bodegaproductosSeleccionados=new ArrayList<BodegaProducto>();		
		
		bodegaproductosSeleccionados=this.getBodegaProductosSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
								
		if(this.sTipoReporte.equals("FORMULARIO")) {
			this.sTipoReporteExtra="Vertical";					
		}
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.generarReporteBodegaProductos("Todos",bodegaproductosSeleccionados);
	}		
	
	public void generarReporteProcesoAccionBodegaProductosSeleccionados(String sProcesoReporte) throws Exception {
		ArrayList<BodegaProducto> bodegaproductosSeleccionados=new ArrayList<BodegaProducto>();
		
		bodegaproductosSeleccionados=this.getBodegaProductosSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(false,false,true,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.sTipoReporteExtra=sProcesoReporte.toLowerCase();
		
		this.esReporteAccionProceso=true;
		this.generarReporteBodegaProductos("Todos",bodegaproductosSeleccionados);
		this.esReporteAccionProceso=false;
	}
	
	
	public void mostrarReporteDinamicoBodegaProductosSeleccionados() throws Exception {
		ArrayList<BodegaProducto> bodegaproductosSeleccionados=new ArrayList<BodegaProducto>();		
		
		
		this.abrirInicializarFrameReporteDinamicoBodegaProducto();
		
		
		bodegaproductosSeleccionados=this.getBodegaProductosSeleccionados(true);
		
		this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirFrameReporteDinamicoBodegaProducto();
		
		
		//this.generarReporteBodegaProductos("Todos",bodegaproductosSeleccionados ,bodegaproductoImplementable,bodegaproductoImplementableHome);
	}
	
	public void mostrarImportacionBodegaProductos() throws Exception {
		//this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirInicializarFrameImportacionBodegaProducto();
		
		this.abrirFrameImportacionBodegaProducto();		
		
			
		//this.generarReporteBodegaProductos("Todos",bodegaproductosSeleccionados ,bodegaproductoImplementable,bodegaproductoImplementableHome);
	}
	
	public void importarBodegaProductos() throws Exception {		
	
	}
	
	public void exportarBodegaProductosSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoArchivoReporte.equals("EXCEL")) {
			existe=true;
			this.exportarExcelBodegaProductosSeleccionados();
			
		} else if(this.sTipoArchivoReporte.equals("TEXTO")) {
			existe=true;
			this.exportarTextoBodegaProductosSeleccionados();
		
		} else if(this.sTipoArchivoReporte.equals("XML")) {
			existe=true;
			this.exportarXmlBodegaProductosSeleccionados();
		} 
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE ARCHIVO VALIDO","EXPORTACION DE Bodega Producto",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void exportarTextoBodegaProductosSeleccionados() throws Exception {
		ArrayList<BodegaProducto> bodegaproductosSeleccionados=new ArrayList<BodegaProducto>();		
		
		bodegaproductosSeleccionados=this.getBodegaProductosSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"bodegaproducto."+"txt";//Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario);
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		BufferedWriter bufferedWriter = null;
		FileWriter fileWriter=null;
		
		fileWriter=new FileWriter(sPath);
		
		bufferedWriter = new BufferedWriter(fileWriter);
		
		try {
			if(conCabecera) {
				sFilaCabecera=this.getFilaCabeceraExportarBodegaProducto(sDelimiter);
				
				bufferedWriter.write(sFilaCabecera);
			}				
			
			for(BodegaProducto bodegaproductoAux:bodegaproductosSeleccionados) {
				sFilaDatos=this.getFilaDatosExportarBodegaProducto(bodegaproductoAux,sDelimiter);
				
				bufferedWriter.write(sFilaDatos);
				
				//bodegaproductoAux.setsDetalleGeneralEntityReporte(bodegaproductoAux.toString());			
			}
			
			bufferedWriter.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.bodegaproductoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Bodega Producto",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {
       		if (bufferedWriter != null) {
				bufferedWriter.close();
			}
		}
	}
	
	public String getFilaCabeceraExportarBodegaProducto(String sDelimiter) {
		String sFilaCabecera="";
		
		
		sFilaCabecera+=BodegaProductoConstantesFunciones.LABEL_ID;

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaCabecera+=sDelimiter;
		sFilaCabecera+=BodegaProductoConstantesFunciones.LABEL_VERSIONROW;
		}

		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=BodegaProductoConstantesFunciones.LABEL_IDEMPRESA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=BodegaProductoConstantesFunciones.LABEL_IDSUCURSAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=BodegaProductoConstantesFunciones.LABEL_IDBODEGA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=BodegaProductoConstantesFunciones.LABEL_IDPRODUCTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=BodegaProductoConstantesFunciones.LABEL_IDUNIDAD;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=BodegaProductoConstantesFunciones.LABEL_IDCENTROCOSTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=BodegaProductoConstantesFunciones.LABEL_IDESTADOBODEGAPRODUCTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=BodegaProductoConstantesFunciones.LABEL_DESCRIPCION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=BodegaProductoConstantesFunciones.LABEL_CANTIDADDISPONIBLE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=BodegaProductoConstantesFunciones.LABEL_STOCKMAXIMO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=BodegaProductoConstantesFunciones.LABEL_STOCKMINIMO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=BodegaProductoConstantesFunciones.LABEL_IVA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=BodegaProductoConstantesFunciones.LABEL_IVAVALOR;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=BodegaProductoConstantesFunciones.LABEL_DESCUENTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=BodegaProductoConstantesFunciones.LABEL_DESCUENTOVALOR;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=BodegaProductoConstantesFunciones.LABEL_ICE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=BodegaProductoConstantesFunciones.LABEL_ICEVALOR;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=BodegaProductoConstantesFunciones.LABEL_COSTOPROMEDIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=BodegaProductoConstantesFunciones.LABEL_PORCENTAJECOMISION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=BodegaProductoConstantesFunciones.LABEL_PRECIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=BodegaProductoConstantesFunciones.LABEL_ULTIMOCOSTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=BodegaProductoConstantesFunciones.LABEL_COSTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=BodegaProductoConstantesFunciones.LABEL_ARANCELPORCENTAJE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=BodegaProductoConstantesFunciones.LABEL_ICEPORCENTAJE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=BodegaProductoConstantesFunciones.LABEL_PESO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=BodegaProductoConstantesFunciones.LABEL_CONIVA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=BodegaProductoConstantesFunciones.LABEL_CONIMPUESTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=BodegaProductoConstantesFunciones.LABEL_CONICE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=BodegaProductoConstantesFunciones.LABEL_ESTAACTIVO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=BodegaProductoConstantesFunciones.LABEL_CONBALANZA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=BodegaProductoConstantesFunciones.LABEL_CANTIDADPEDIDA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=BodegaProductoConstantesFunciones.LABEL_CANTIDADFISICA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=BodegaProductoConstantesFunciones.LABEL_CANTIDADREQUERIDO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=BodegaProductoConstantesFunciones.LABEL_PRECIOCOSTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=BodegaProductoConstantesFunciones.LABEL_PRECIOPROMEDIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=BodegaProductoConstantesFunciones.LABEL_TOTALINGRESOS;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=BodegaProductoConstantesFunciones.LABEL_TOTALEGRESOS;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=BodegaProductoConstantesFunciones.LABEL_TOTALPROVISION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=BodegaProductoConstantesFunciones.LABEL_TOTALPROCESO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=BodegaProductoConstantesFunciones.LABEL_COSTOCALCULADO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=BodegaProductoConstantesFunciones.LABEL_DIASPRODUCCION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=BodegaProductoConstantesFunciones.LABEL_PRECIOREPOSICION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=BodegaProductoConstantesFunciones.LABEL_FECHAULTIMOPEDIDO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=BodegaProductoConstantesFunciones.LABEL_FECHAINGRESO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=BodegaProductoConstantesFunciones.LABEL_FECHAEGRESO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=BodegaProductoConstantesFunciones.LABEL_FECHAULTIMACOMPRA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=BodegaProductoConstantesFunciones.LABEL_FECHAULTIMAVENTA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=BodegaProductoConstantesFunciones.LABEL_FECHAULTIMADEVOLUCION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEINVENTARIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLECOSTOVENTA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEVENTA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEDESCUENTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEPRODUCCION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEDEVOLUCION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEINGRESODEBITO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEINGRESOCREDITO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLERESULTADODEBITO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLERESULTADOCREDITO;
		
		return sFilaCabecera;
	}
	
	public String getFilaDatosExportarBodegaProducto(BodegaProducto bodegaproducto,String sDelimiter) {
		String sFilaDatos="";
		
		sFilaDatos+="\r\n";
		
		
		sFilaDatos+=bodegaproducto.getId().toString();

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaDatos+=sDelimiter;
		sFilaDatos+=bodegaproducto.getVersionRow().toString();
		}

		sFilaDatos+=sDelimiter;
		sFilaDatos+=bodegaproducto.getempresa_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=bodegaproducto.getsucursal_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=bodegaproducto.getbodega_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=bodegaproducto.getproducto_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=bodegaproducto.getunidad_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=bodegaproducto.getcentrocosto_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=bodegaproducto.getestadobodegaproducto_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=bodegaproducto.getdescripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=bodegaproducto.getcantidad_disponible().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=bodegaproducto.getstock_maximo().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=bodegaproducto.getstock_minimo().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=bodegaproducto.getiva().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=bodegaproducto.getiva_valor().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=bodegaproducto.getdescuento().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=bodegaproducto.getdescuento_valor().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=bodegaproducto.getice().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=bodegaproducto.getice_valor().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=bodegaproducto.getcosto_promedio().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=bodegaproducto.getporcentaje_comision().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=bodegaproducto.getprecio().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=bodegaproducto.getultimo_costo().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=bodegaproducto.getcosto().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=bodegaproducto.getarancel_porcentaje().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=bodegaproducto.getice_porcentaje().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=bodegaproducto.getpeso().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=bodegaproducto.getcon_iva().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=bodegaproducto.getcon_impuesto().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=bodegaproducto.getcon_ice().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=bodegaproducto.getesta_activo().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=bodegaproducto.getcon_balanza().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=bodegaproducto.getcantidad_pedida().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=bodegaproducto.getcantidad_fisica().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=bodegaproducto.getcantidad_requerido().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=bodegaproducto.getprecio_costo().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=bodegaproducto.getprecio_promedio().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=bodegaproducto.gettotal_ingresos().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=bodegaproducto.gettotal_egresos().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=bodegaproducto.gettotal_provision().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=bodegaproducto.gettotal_proceso().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=bodegaproducto.getcosto_calculado().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=bodegaproducto.getdias_produccion().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=bodegaproducto.getprecio_reposicion().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=bodegaproducto.getfecha_ultimo_pedido().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=bodegaproducto.getfecha_ingreso().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=bodegaproducto.getfecha_egreso().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=bodegaproducto.getfecha_ultima_compra().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=bodegaproducto.getfecha_ultima_venta().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=bodegaproducto.getfecha_ultima_devolucion().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=bodegaproducto.getcuentacontableinventario_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=bodegaproducto.getcuentacontablecostoventa_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=bodegaproducto.getcuentacontableventa_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=bodegaproducto.getcuentacontabledescuento_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=bodegaproducto.getcuentacontableproduccion_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=bodegaproducto.getcuentacontabledevolucion_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=bodegaproducto.getcuentacontableingresodebito_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=bodegaproducto.getcuentacontableingresocredito_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=bodegaproducto.getcuentacontableresultadodebito_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=bodegaproducto.getcuentacontableresultadocredito_descripcion();
		
		return sFilaDatos;
	}
	
	//@SuppressWarnings("deprecation")
	public void exportarExcelBodegaProductosSeleccionados() throws Exception {
		ArrayList<BodegaProducto> bodegaproductosSeleccionados=new ArrayList<BodegaProducto>();		
		
		bodegaproductosSeleccionados=this.getBodegaProductosSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"bodegaproducto.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		FileOutputStream fileOutputStream=null;
		
		try {
			HSSFWorkbook workbook = new HSSFWorkbook();
			HSSFSheet sheet = workbook.createSheet("BodegaProductos");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			HSSFRow row = sheet.createRow(iRow);
			HSSFCell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");

			if(conCabecera) {
				this.getFilaCabeceraExportarExcelBodegaProducto(row);				
				iRow++;
			}				
			
			for(BodegaProducto bodegaproductoAux:bodegaproductosSeleccionados) {
				row = sheet.createRow(iRow);
				
				this.getFilaDatosExportarExcelBodegaProducto(bodegaproductoAux,row);
				
				iRow++;
			}
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.bodegaproductoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Bodega Producto",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}
	}		
	
	public void exportarXmlBodegaProductosSeleccionados() throws Exception {
		ArrayList<BodegaProducto> bodegaproductosSeleccionados=new ArrayList<BodegaProducto>();		
		
		bodegaproductosSeleccionados=this.getBodegaProductosSeleccionados(true);
		
		//String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		//Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		//String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"bodegaproducto.xml";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		DocumentBuilderFactory documentBuilderFactory=null;
		DocumentBuilder documentBuilder =null;
		
		try {
			documentBuilderFactory = DocumentBuilderFactory.newInstance();
			documentBuilder = documentBuilderFactory.newDocumentBuilder();
	
			Document document = documentBuilder.newDocument();
			Element elementRoot = document.createElement("bodegaproductos");
			
			document.appendChild(elementRoot);
		    			
												
			Element element = null;//document.createElement("bodegaproducto");
			//elementRoot.appendChild(element);
		
			for(BodegaProducto bodegaproductoAux:bodegaproductosSeleccionados) {
				element = document.createElement("bodegaproducto");
				elementRoot.appendChild(element);
			
				this.setFilaDatosExportarXmlBodegaProducto(bodegaproductoAux,document,element);
			}
			
			TransformerFactory transformerFactory = TransformerFactory.newInstance();
			Transformer transformer = transformerFactory.newTransformer();
			DOMSource domSource = new DOMSource(document);
			
			StreamResult streamResult = new StreamResult(new File(sPath));
	
			transformer.transform(domSource, streamResult);
						
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.bodegaproductoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Bodega Producto",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			       				
		}
	}	
	
	//@SuppressWarnings("deprecation")
	public void getFilaCabeceraExportarExcelBodegaProducto(HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_ID);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
		cell = row.createCell(iColumn++);cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_VERSIONROW);
		}

		cell = row.createCell(iColumn++);cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_IDEMPRESA);
		cell = row.createCell(iColumn++);cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_IDSUCURSAL);
		cell = row.createCell(iColumn++);cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_IDBODEGA);
		cell = row.createCell(iColumn++);cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_IDPRODUCTO);
		cell = row.createCell(iColumn++);cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_IDUNIDAD);
		cell = row.createCell(iColumn++);cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_IDCENTROCOSTO);
		cell = row.createCell(iColumn++);cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_IDESTADOBODEGAPRODUCTO);
		cell = row.createCell(iColumn++);cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_DESCRIPCION);
		cell = row.createCell(iColumn++);cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_CANTIDADDISPONIBLE);
		cell = row.createCell(iColumn++);cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_STOCKMAXIMO);
		cell = row.createCell(iColumn++);cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_STOCKMINIMO);
		cell = row.createCell(iColumn++);cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_IVA);
		cell = row.createCell(iColumn++);cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_IVAVALOR);
		cell = row.createCell(iColumn++);cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_DESCUENTO);
		cell = row.createCell(iColumn++);cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_DESCUENTOVALOR);
		cell = row.createCell(iColumn++);cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_ICE);
		cell = row.createCell(iColumn++);cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_ICEVALOR);
		cell = row.createCell(iColumn++);cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_COSTOPROMEDIO);
		cell = row.createCell(iColumn++);cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_PORCENTAJECOMISION);
		cell = row.createCell(iColumn++);cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_PRECIO);
		cell = row.createCell(iColumn++);cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_ULTIMOCOSTO);
		cell = row.createCell(iColumn++);cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_COSTO);
		cell = row.createCell(iColumn++);cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_ARANCELPORCENTAJE);
		cell = row.createCell(iColumn++);cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_ICEPORCENTAJE);
		cell = row.createCell(iColumn++);cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_PESO);
		cell = row.createCell(iColumn++);cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_CONIVA);
		cell = row.createCell(iColumn++);cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_CONIMPUESTO);
		cell = row.createCell(iColumn++);cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_CONICE);
		cell = row.createCell(iColumn++);cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_ESTAACTIVO);
		cell = row.createCell(iColumn++);cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_CONBALANZA);
		cell = row.createCell(iColumn++);cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_CANTIDADPEDIDA);
		cell = row.createCell(iColumn++);cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_CANTIDADFISICA);
		cell = row.createCell(iColumn++);cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_CANTIDADREQUERIDO);
		cell = row.createCell(iColumn++);cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_PRECIOCOSTO);
		cell = row.createCell(iColumn++);cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_PRECIOPROMEDIO);
		cell = row.createCell(iColumn++);cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_TOTALINGRESOS);
		cell = row.createCell(iColumn++);cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_TOTALEGRESOS);
		cell = row.createCell(iColumn++);cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_TOTALPROVISION);
		cell = row.createCell(iColumn++);cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_TOTALPROCESO);
		cell = row.createCell(iColumn++);cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_COSTOCALCULADO);
		cell = row.createCell(iColumn++);cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_DIASPRODUCCION);
		cell = row.createCell(iColumn++);cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_PRECIOREPOSICION);
		cell = row.createCell(iColumn++);cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_FECHAULTIMOPEDIDO);
		cell = row.createCell(iColumn++);cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_FECHAINGRESO);
		cell = row.createCell(iColumn++);cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_FECHAEGRESO);
		cell = row.createCell(iColumn++);cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_FECHAULTIMACOMPRA);
		cell = row.createCell(iColumn++);cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_FECHAULTIMAVENTA);
		cell = row.createCell(iColumn++);cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_FECHAULTIMADEVOLUCION);
		cell = row.createCell(iColumn++);cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEINVENTARIO);
		cell = row.createCell(iColumn++);cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLECOSTOVENTA);
		cell = row.createCell(iColumn++);cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEVENTA);
		cell = row.createCell(iColumn++);cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEDESCUENTO);
		cell = row.createCell(iColumn++);cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEPRODUCCION);
		cell = row.createCell(iColumn++);cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEDEVOLUCION);
		cell = row.createCell(iColumn++);cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEINGRESODEBITO);
		cell = row.createCell(iColumn++);cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEINGRESOCREDITO);
		cell = row.createCell(iColumn++);cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLERESULTADODEBITO);
		cell = row.createCell(iColumn++);cell.setCellValue(BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLERESULTADOCREDITO);
	}
	
	//@SuppressWarnings("deprecation")
	public void getFilaDatosExportarExcelBodegaProducto(BodegaProducto bodegaproducto,HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(bodegaproducto.getId());
		cell = row.createCell(iColumn++);cell.setCellValue(bodegaproducto.getempresa_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(bodegaproducto.getsucursal_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(bodegaproducto.getbodega_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(bodegaproducto.getproducto_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(bodegaproducto.getunidad_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(bodegaproducto.getcentrocosto_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(bodegaproducto.getestadobodegaproducto_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(bodegaproducto.getdescripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(bodegaproducto.getcantidad_disponible());
		cell = row.createCell(iColumn++);cell.setCellValue(bodegaproducto.getstock_maximo());
		cell = row.createCell(iColumn++);cell.setCellValue(bodegaproducto.getstock_minimo());
		cell = row.createCell(iColumn++);cell.setCellValue(bodegaproducto.getiva());
		cell = row.createCell(iColumn++);cell.setCellValue(bodegaproducto.getiva_valor());
		cell = row.createCell(iColumn++);cell.setCellValue(bodegaproducto.getdescuento());
		cell = row.createCell(iColumn++);cell.setCellValue(bodegaproducto.getdescuento_valor());
		cell = row.createCell(iColumn++);cell.setCellValue(bodegaproducto.getice());
		cell = row.createCell(iColumn++);cell.setCellValue(bodegaproducto.getice_valor());
		cell = row.createCell(iColumn++);cell.setCellValue(bodegaproducto.getcosto_promedio());
		cell = row.createCell(iColumn++);cell.setCellValue(bodegaproducto.getporcentaje_comision());
		cell = row.createCell(iColumn++);cell.setCellValue(bodegaproducto.getprecio());
		cell = row.createCell(iColumn++);cell.setCellValue(bodegaproducto.getultimo_costo());
		cell = row.createCell(iColumn++);cell.setCellValue(bodegaproducto.getcosto());
		cell = row.createCell(iColumn++);cell.setCellValue(bodegaproducto.getarancel_porcentaje());
		cell = row.createCell(iColumn++);cell.setCellValue(bodegaproducto.getice_porcentaje());
		cell = row.createCell(iColumn++);cell.setCellValue(bodegaproducto.getpeso());
		cell = row.createCell(iColumn++);cell.setCellValue(bodegaproducto.getcon_iva());
		cell = row.createCell(iColumn++);cell.setCellValue(bodegaproducto.getcon_impuesto());
		cell = row.createCell(iColumn++);cell.setCellValue(bodegaproducto.getcon_ice());
		cell = row.createCell(iColumn++);cell.setCellValue(bodegaproducto.getesta_activo());
		cell = row.createCell(iColumn++);cell.setCellValue(bodegaproducto.getcon_balanza());
		cell = row.createCell(iColumn++);cell.setCellValue(bodegaproducto.getcantidad_pedida());
		cell = row.createCell(iColumn++);cell.setCellValue(bodegaproducto.getcantidad_fisica());
		cell = row.createCell(iColumn++);cell.setCellValue(bodegaproducto.getcantidad_requerido());
		cell = row.createCell(iColumn++);cell.setCellValue(bodegaproducto.getprecio_costo());
		cell = row.createCell(iColumn++);cell.setCellValue(bodegaproducto.getprecio_promedio());
		cell = row.createCell(iColumn++);cell.setCellValue(bodegaproducto.gettotal_ingresos());
		cell = row.createCell(iColumn++);cell.setCellValue(bodegaproducto.gettotal_egresos());
		cell = row.createCell(iColumn++);cell.setCellValue(bodegaproducto.gettotal_provision());
		cell = row.createCell(iColumn++);cell.setCellValue(bodegaproducto.gettotal_proceso());
		cell = row.createCell(iColumn++);cell.setCellValue(bodegaproducto.getcosto_calculado());
		cell = row.createCell(iColumn++);cell.setCellValue(bodegaproducto.getdias_produccion());
		cell = row.createCell(iColumn++);cell.setCellValue(bodegaproducto.getprecio_reposicion());
		cell = row.createCell(iColumn++);cell.setCellValue(bodegaproducto.getfecha_ultimo_pedido());
		cell = row.createCell(iColumn++);cell.setCellValue(bodegaproducto.getfecha_ingreso());
		cell = row.createCell(iColumn++);cell.setCellValue(bodegaproducto.getfecha_egreso());
		cell = row.createCell(iColumn++);cell.setCellValue(bodegaproducto.getfecha_ultima_compra());
		cell = row.createCell(iColumn++);cell.setCellValue(bodegaproducto.getfecha_ultima_venta());
		cell = row.createCell(iColumn++);cell.setCellValue(bodegaproducto.getfecha_ultima_devolucion());
		cell = row.createCell(iColumn++);cell.setCellValue(bodegaproducto.getcuentacontableinventario_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(bodegaproducto.getcuentacontablecostoventa_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(bodegaproducto.getcuentacontableventa_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(bodegaproducto.getcuentacontabledescuento_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(bodegaproducto.getcuentacontableproduccion_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(bodegaproducto.getcuentacontabledevolucion_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(bodegaproducto.getcuentacontableingresodebito_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(bodegaproducto.getcuentacontableingresocredito_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(bodegaproducto.getcuentacontableresultadodebito_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(bodegaproducto.getcuentacontableresultadocredito_descripcion());				
	}
	
	public void setFilaDatosExportarXmlBodegaProducto(BodegaProducto bodegaproducto,Document document,Element element) {
		/*
		Element lastname = document.createElement("lastname");
		lastname.appendChild(document.createTextNode("mook kim"));
		element.appendChild(lastname);
		*/
		

		Element elementId = document.createElement(BodegaProductoConstantesFunciones.ID);
		elementId.appendChild(document.createTextNode(bodegaproducto.getId().toString().trim()));
		element.appendChild(elementId);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){

		Element elementVersionRow = document.createElement(BodegaProductoConstantesFunciones.VERSIONROW);
		elementVersionRow.appendChild(document.createTextNode(bodegaproducto.getVersionRow().toString().trim()));
		element.appendChild(elementVersionRow);
		}


		Element elementempresa_descripcion = document.createElement(BodegaProductoConstantesFunciones.IDEMPRESA);
		elementempresa_descripcion.appendChild(document.createTextNode(bodegaproducto.getempresa_descripcion()));
		element.appendChild(elementempresa_descripcion);

		Element elementsucursal_descripcion = document.createElement(BodegaProductoConstantesFunciones.IDSUCURSAL);
		elementsucursal_descripcion.appendChild(document.createTextNode(bodegaproducto.getsucursal_descripcion()));
		element.appendChild(elementsucursal_descripcion);

		Element elementbodega_descripcion = document.createElement(BodegaProductoConstantesFunciones.IDBODEGA);
		elementbodega_descripcion.appendChild(document.createTextNode(bodegaproducto.getbodega_descripcion()));
		element.appendChild(elementbodega_descripcion);

		Element elementproducto_descripcion = document.createElement(BodegaProductoConstantesFunciones.IDPRODUCTO);
		elementproducto_descripcion.appendChild(document.createTextNode(bodegaproducto.getproducto_descripcion()));
		element.appendChild(elementproducto_descripcion);

		Element elementunidad_descripcion = document.createElement(BodegaProductoConstantesFunciones.IDUNIDAD);
		elementunidad_descripcion.appendChild(document.createTextNode(bodegaproducto.getunidad_descripcion()));
		element.appendChild(elementunidad_descripcion);

		Element elementcentrocosto_descripcion = document.createElement(BodegaProductoConstantesFunciones.IDCENTROCOSTO);
		elementcentrocosto_descripcion.appendChild(document.createTextNode(bodegaproducto.getcentrocosto_descripcion()));
		element.appendChild(elementcentrocosto_descripcion);

		Element elementestadobodegaproducto_descripcion = document.createElement(BodegaProductoConstantesFunciones.IDESTADOBODEGAPRODUCTO);
		elementestadobodegaproducto_descripcion.appendChild(document.createTextNode(bodegaproducto.getestadobodegaproducto_descripcion()));
		element.appendChild(elementestadobodegaproducto_descripcion);

		Element elementdescripcion = document.createElement(BodegaProductoConstantesFunciones.DESCRIPCION);
		elementdescripcion.appendChild(document.createTextNode(bodegaproducto.getdescripcion().trim()));
		element.appendChild(elementdescripcion);

		Element elementcantidad_disponible = document.createElement(BodegaProductoConstantesFunciones.CANTIDADDISPONIBLE);
		elementcantidad_disponible.appendChild(document.createTextNode(bodegaproducto.getcantidad_disponible().toString().trim()));
		element.appendChild(elementcantidad_disponible);

		Element elementstock_maximo = document.createElement(BodegaProductoConstantesFunciones.STOCKMAXIMO);
		elementstock_maximo.appendChild(document.createTextNode(bodegaproducto.getstock_maximo().toString().trim()));
		element.appendChild(elementstock_maximo);

		Element elementstock_minimo = document.createElement(BodegaProductoConstantesFunciones.STOCKMINIMO);
		elementstock_minimo.appendChild(document.createTextNode(bodegaproducto.getstock_minimo().toString().trim()));
		element.appendChild(elementstock_minimo);

		Element elementiva = document.createElement(BodegaProductoConstantesFunciones.IVA);
		elementiva.appendChild(document.createTextNode(bodegaproducto.getiva().toString().trim()));
		element.appendChild(elementiva);

		Element elementiva_valor = document.createElement(BodegaProductoConstantesFunciones.IVAVALOR);
		elementiva_valor.appendChild(document.createTextNode(bodegaproducto.getiva_valor().toString().trim()));
		element.appendChild(elementiva_valor);

		Element elementdescuento = document.createElement(BodegaProductoConstantesFunciones.DESCUENTO);
		elementdescuento.appendChild(document.createTextNode(bodegaproducto.getdescuento().toString().trim()));
		element.appendChild(elementdescuento);

		Element elementdescuento_valor = document.createElement(BodegaProductoConstantesFunciones.DESCUENTOVALOR);
		elementdescuento_valor.appendChild(document.createTextNode(bodegaproducto.getdescuento_valor().toString().trim()));
		element.appendChild(elementdescuento_valor);

		Element elementice = document.createElement(BodegaProductoConstantesFunciones.ICE);
		elementice.appendChild(document.createTextNode(bodegaproducto.getice().toString().trim()));
		element.appendChild(elementice);

		Element elementice_valor = document.createElement(BodegaProductoConstantesFunciones.ICEVALOR);
		elementice_valor.appendChild(document.createTextNode(bodegaproducto.getice_valor().toString().trim()));
		element.appendChild(elementice_valor);

		Element elementcosto_promedio = document.createElement(BodegaProductoConstantesFunciones.COSTOPROMEDIO);
		elementcosto_promedio.appendChild(document.createTextNode(bodegaproducto.getcosto_promedio().toString().trim()));
		element.appendChild(elementcosto_promedio);

		Element elementporcentaje_comision = document.createElement(BodegaProductoConstantesFunciones.PORCENTAJECOMISION);
		elementporcentaje_comision.appendChild(document.createTextNode(bodegaproducto.getporcentaje_comision().toString().trim()));
		element.appendChild(elementporcentaje_comision);

		Element elementprecio = document.createElement(BodegaProductoConstantesFunciones.PRECIO);
		elementprecio.appendChild(document.createTextNode(bodegaproducto.getprecio().toString().trim()));
		element.appendChild(elementprecio);

		Element elementultimo_costo = document.createElement(BodegaProductoConstantesFunciones.ULTIMOCOSTO);
		elementultimo_costo.appendChild(document.createTextNode(bodegaproducto.getultimo_costo().toString().trim()));
		element.appendChild(elementultimo_costo);

		Element elementcosto = document.createElement(BodegaProductoConstantesFunciones.COSTO);
		elementcosto.appendChild(document.createTextNode(bodegaproducto.getcosto().toString().trim()));
		element.appendChild(elementcosto);

		Element elementarancel_porcentaje = document.createElement(BodegaProductoConstantesFunciones.ARANCELPORCENTAJE);
		elementarancel_porcentaje.appendChild(document.createTextNode(bodegaproducto.getarancel_porcentaje().toString().trim()));
		element.appendChild(elementarancel_porcentaje);

		Element elementice_porcentaje = document.createElement(BodegaProductoConstantesFunciones.ICEPORCENTAJE);
		elementice_porcentaje.appendChild(document.createTextNode(bodegaproducto.getice_porcentaje().toString().trim()));
		element.appendChild(elementice_porcentaje);

		Element elementpeso = document.createElement(BodegaProductoConstantesFunciones.PESO);
		elementpeso.appendChild(document.createTextNode(bodegaproducto.getpeso().toString().trim()));
		element.appendChild(elementpeso);

		Element elementcon_iva = document.createElement(BodegaProductoConstantesFunciones.CONIVA);
		elementcon_iva.appendChild(document.createTextNode(bodegaproducto.getcon_iva().toString().trim()));
		element.appendChild(elementcon_iva);

		Element elementcon_impuesto = document.createElement(BodegaProductoConstantesFunciones.CONIMPUESTO);
		elementcon_impuesto.appendChild(document.createTextNode(bodegaproducto.getcon_impuesto().toString().trim()));
		element.appendChild(elementcon_impuesto);

		Element elementcon_ice = document.createElement(BodegaProductoConstantesFunciones.CONICE);
		elementcon_ice.appendChild(document.createTextNode(bodegaproducto.getcon_ice().toString().trim()));
		element.appendChild(elementcon_ice);

		Element elementesta_activo = document.createElement(BodegaProductoConstantesFunciones.ESTAACTIVO);
		elementesta_activo.appendChild(document.createTextNode(bodegaproducto.getesta_activo().toString().trim()));
		element.appendChild(elementesta_activo);

		Element elementcon_balanza = document.createElement(BodegaProductoConstantesFunciones.CONBALANZA);
		elementcon_balanza.appendChild(document.createTextNode(bodegaproducto.getcon_balanza().toString().trim()));
		element.appendChild(elementcon_balanza);

		Element elementcantidad_pedida = document.createElement(BodegaProductoConstantesFunciones.CANTIDADPEDIDA);
		elementcantidad_pedida.appendChild(document.createTextNode(bodegaproducto.getcantidad_pedida().toString().trim()));
		element.appendChild(elementcantidad_pedida);

		Element elementcantidad_fisica = document.createElement(BodegaProductoConstantesFunciones.CANTIDADFISICA);
		elementcantidad_fisica.appendChild(document.createTextNode(bodegaproducto.getcantidad_fisica().toString().trim()));
		element.appendChild(elementcantidad_fisica);

		Element elementcantidad_requerido = document.createElement(BodegaProductoConstantesFunciones.CANTIDADREQUERIDO);
		elementcantidad_requerido.appendChild(document.createTextNode(bodegaproducto.getcantidad_requerido().toString().trim()));
		element.appendChild(elementcantidad_requerido);

		Element elementprecio_costo = document.createElement(BodegaProductoConstantesFunciones.PRECIOCOSTO);
		elementprecio_costo.appendChild(document.createTextNode(bodegaproducto.getprecio_costo().toString().trim()));
		element.appendChild(elementprecio_costo);

		Element elementprecio_promedio = document.createElement(BodegaProductoConstantesFunciones.PRECIOPROMEDIO);
		elementprecio_promedio.appendChild(document.createTextNode(bodegaproducto.getprecio_promedio().toString().trim()));
		element.appendChild(elementprecio_promedio);

		Element elementtotal_ingresos = document.createElement(BodegaProductoConstantesFunciones.TOTALINGRESOS);
		elementtotal_ingresos.appendChild(document.createTextNode(bodegaproducto.gettotal_ingresos().toString().trim()));
		element.appendChild(elementtotal_ingresos);

		Element elementtotal_egresos = document.createElement(BodegaProductoConstantesFunciones.TOTALEGRESOS);
		elementtotal_egresos.appendChild(document.createTextNode(bodegaproducto.gettotal_egresos().toString().trim()));
		element.appendChild(elementtotal_egresos);

		Element elementtotal_provision = document.createElement(BodegaProductoConstantesFunciones.TOTALPROVISION);
		elementtotal_provision.appendChild(document.createTextNode(bodegaproducto.gettotal_provision().toString().trim()));
		element.appendChild(elementtotal_provision);

		Element elementtotal_proceso = document.createElement(BodegaProductoConstantesFunciones.TOTALPROCESO);
		elementtotal_proceso.appendChild(document.createTextNode(bodegaproducto.gettotal_proceso().toString().trim()));
		element.appendChild(elementtotal_proceso);

		Element elementcosto_calculado = document.createElement(BodegaProductoConstantesFunciones.COSTOCALCULADO);
		elementcosto_calculado.appendChild(document.createTextNode(bodegaproducto.getcosto_calculado().toString().trim()));
		element.appendChild(elementcosto_calculado);

		Element elementdias_produccion = document.createElement(BodegaProductoConstantesFunciones.DIASPRODUCCION);
		elementdias_produccion.appendChild(document.createTextNode(bodegaproducto.getdias_produccion().toString().trim()));
		element.appendChild(elementdias_produccion);

		Element elementprecio_reposicion = document.createElement(BodegaProductoConstantesFunciones.PRECIOREPOSICION);
		elementprecio_reposicion.appendChild(document.createTextNode(bodegaproducto.getprecio_reposicion().toString().trim()));
		element.appendChild(elementprecio_reposicion);

		Element elementfecha_ultimo_pedido = document.createElement(BodegaProductoConstantesFunciones.FECHAULTIMOPEDIDO);
		elementfecha_ultimo_pedido.appendChild(document.createTextNode(bodegaproducto.getfecha_ultimo_pedido().toString().trim()));
		element.appendChild(elementfecha_ultimo_pedido);

		Element elementfecha_ingreso = document.createElement(BodegaProductoConstantesFunciones.FECHAINGRESO);
		elementfecha_ingreso.appendChild(document.createTextNode(bodegaproducto.getfecha_ingreso().toString().trim()));
		element.appendChild(elementfecha_ingreso);

		Element elementfecha_egreso = document.createElement(BodegaProductoConstantesFunciones.FECHAEGRESO);
		elementfecha_egreso.appendChild(document.createTextNode(bodegaproducto.getfecha_egreso().toString().trim()));
		element.appendChild(elementfecha_egreso);

		Element elementfecha_ultima_compra = document.createElement(BodegaProductoConstantesFunciones.FECHAULTIMACOMPRA);
		elementfecha_ultima_compra.appendChild(document.createTextNode(bodegaproducto.getfecha_ultima_compra().toString().trim()));
		element.appendChild(elementfecha_ultima_compra);

		Element elementfecha_ultima_venta = document.createElement(BodegaProductoConstantesFunciones.FECHAULTIMAVENTA);
		elementfecha_ultima_venta.appendChild(document.createTextNode(bodegaproducto.getfecha_ultima_venta().toString().trim()));
		element.appendChild(elementfecha_ultima_venta);

		Element elementfecha_ultima_devolucion = document.createElement(BodegaProductoConstantesFunciones.FECHAULTIMADEVOLUCION);
		elementfecha_ultima_devolucion.appendChild(document.createTextNode(bodegaproducto.getfecha_ultima_devolucion().toString().trim()));
		element.appendChild(elementfecha_ultima_devolucion);

		Element elementcuentacontableinventario_descripcion = document.createElement(BodegaProductoConstantesFunciones.IDCUENTACONTABLEINVENTARIO);
		elementcuentacontableinventario_descripcion.appendChild(document.createTextNode(bodegaproducto.getcuentacontableinventario_descripcion()));
		element.appendChild(elementcuentacontableinventario_descripcion);

		Element elementcuentacontablecostoventa_descripcion = document.createElement(BodegaProductoConstantesFunciones.IDCUENTACONTABLECOSTOVENTA);
		elementcuentacontablecostoventa_descripcion.appendChild(document.createTextNode(bodegaproducto.getcuentacontablecostoventa_descripcion()));
		element.appendChild(elementcuentacontablecostoventa_descripcion);

		Element elementcuentacontableventa_descripcion = document.createElement(BodegaProductoConstantesFunciones.IDCUENTACONTABLEVENTA);
		elementcuentacontableventa_descripcion.appendChild(document.createTextNode(bodegaproducto.getcuentacontableventa_descripcion()));
		element.appendChild(elementcuentacontableventa_descripcion);

		Element elementcuentacontabledescuento_descripcion = document.createElement(BodegaProductoConstantesFunciones.IDCUENTACONTABLEDESCUENTO);
		elementcuentacontabledescuento_descripcion.appendChild(document.createTextNode(bodegaproducto.getcuentacontabledescuento_descripcion()));
		element.appendChild(elementcuentacontabledescuento_descripcion);

		Element elementcuentacontableproduccion_descripcion = document.createElement(BodegaProductoConstantesFunciones.IDCUENTACONTABLEPRODUCCION);
		elementcuentacontableproduccion_descripcion.appendChild(document.createTextNode(bodegaproducto.getcuentacontableproduccion_descripcion()));
		element.appendChild(elementcuentacontableproduccion_descripcion);

		Element elementcuentacontabledevolucion_descripcion = document.createElement(BodegaProductoConstantesFunciones.IDCUENTACONTABLEDEVOLUCION);
		elementcuentacontabledevolucion_descripcion.appendChild(document.createTextNode(bodegaproducto.getcuentacontabledevolucion_descripcion()));
		element.appendChild(elementcuentacontabledevolucion_descripcion);

		Element elementcuentacontableingresodebito_descripcion = document.createElement(BodegaProductoConstantesFunciones.IDCUENTACONTABLEINGRESODEBITO);
		elementcuentacontableingresodebito_descripcion.appendChild(document.createTextNode(bodegaproducto.getcuentacontableingresodebito_descripcion()));
		element.appendChild(elementcuentacontableingresodebito_descripcion);

		Element elementcuentacontableingresocredito_descripcion = document.createElement(BodegaProductoConstantesFunciones.IDCUENTACONTABLEINGRESOCREDITO);
		elementcuentacontableingresocredito_descripcion.appendChild(document.createTextNode(bodegaproducto.getcuentacontableingresocredito_descripcion()));
		element.appendChild(elementcuentacontableingresocredito_descripcion);

		Element elementcuentacontableresultadodebito_descripcion = document.createElement(BodegaProductoConstantesFunciones.IDCUENTACONTABLERESULTADODEBITO);
		elementcuentacontableresultadodebito_descripcion.appendChild(document.createTextNode(bodegaproducto.getcuentacontableresultadodebito_descripcion()));
		element.appendChild(elementcuentacontableresultadodebito_descripcion);

		Element elementcuentacontableresultadocredito_descripcion = document.createElement(BodegaProductoConstantesFunciones.IDCUENTACONTABLERESULTADOCREDITO);
		elementcuentacontableresultadocredito_descripcion.appendChild(document.createTextNode(bodegaproducto.getcuentacontableresultadocredito_descripcion()));
		element.appendChild(elementcuentacontableresultadocredito_descripcion);
	}
	
	public void generarReporteGroupGenericoBodegaProductosSeleccionados(Boolean soloTotales) throws Exception {
		ArrayList<BodegaProducto> bodegaproductosSeleccionados=new ArrayList<BodegaProducto>();
		
		bodegaproductosSeleccionados=this.getBodegaProductosSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!soloTotales) {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_GENERICO;
		} else {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_TOTALES_GENERICO;
		}
		
		this.setColumnaDescripcionReporteGroupGenericoBodegaProducto(bodegaproductosSeleccionados);
		
		this.generarReporteBodegaProductos("Todos",bodegaproductosSeleccionados);
	}
	
	public void setColumnaDescripcionReporteGroupGenericoBodegaProducto(ArrayList<BodegaProducto> bodegaproductosSeleccionados) throws Exception {    		
		try {
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			
			Boolean existe=false;
			
			for(BodegaProducto bodegaproductoAux:bodegaproductosSeleccionados) {
				bodegaproductoAux.setsDetalleGeneralEntityReporte(bodegaproductoAux.toString());
			
				if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_IDEMPRESA)) {
					existe=true;
					bodegaproductoAux.setsDescripcionGeneralEntityReporte1(bodegaproductoAux.getempresa_descripcion());
				}
				 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_IDSUCURSAL)) {
					existe=true;
					bodegaproductoAux.setsDescripcionGeneralEntityReporte1(bodegaproductoAux.getsucursal_descripcion());
				}
				 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_IDBODEGA)) {
					existe=true;
					bodegaproductoAux.setsDescripcionGeneralEntityReporte1(bodegaproductoAux.getbodega_descripcion());
				}
				 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_IDPRODUCTO)) {
					existe=true;
					bodegaproductoAux.setsDescripcionGeneralEntityReporte1(bodegaproductoAux.getproducto_descripcion());
				}
				 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_IDUNIDAD)) {
					existe=true;
					bodegaproductoAux.setsDescripcionGeneralEntityReporte1(bodegaproductoAux.getunidad_descripcion());
				}
				 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_IDCENTROCOSTO)) {
					existe=true;
					bodegaproductoAux.setsDescripcionGeneralEntityReporte1(bodegaproductoAux.getcentrocosto_descripcion());
				}
				 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_IDESTADOBODEGAPRODUCTO)) {
					existe=true;
					bodegaproductoAux.setsDescripcionGeneralEntityReporte1(bodegaproductoAux.getestadobodegaproducto_descripcion());
				}
				 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_DESCRIPCION)) {
					existe=true;
					bodegaproductoAux.setsDescripcionGeneralEntityReporte1(bodegaproductoAux.getdescripcion());
				}
				 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_CANTIDADDISPONIBLE)) {
					existe=true;
					bodegaproductoAux.setsDescripcionGeneralEntityReporte1(bodegaproductoAux.getcantidad_disponible().toString());
				}
				 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_STOCKMAXIMO)) {
					existe=true;
					bodegaproductoAux.setsDescripcionGeneralEntityReporte1(bodegaproductoAux.getstock_maximo().toString());
				}
				 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_STOCKMINIMO)) {
					existe=true;
					bodegaproductoAux.setsDescripcionGeneralEntityReporte1(bodegaproductoAux.getstock_minimo().toString());
				}
				 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_CONIVA)) {
					existe=true;
					bodegaproductoAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(bodegaproductoAux.getcon_iva()));
				}
				 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_CONIMPUESTO)) {
					existe=true;
					bodegaproductoAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(bodegaproductoAux.getcon_impuesto()));
				}
				 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_CONICE)) {
					existe=true;
					bodegaproductoAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(bodegaproductoAux.getcon_ice()));
				}
				 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_ESTAACTIVO)) {
					existe=true;
					bodegaproductoAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(bodegaproductoAux.getesta_activo()));
				}
				 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_CONBALANZA)) {
					existe=true;
					bodegaproductoAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(bodegaproductoAux.getcon_balanza()));
				}
				 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_CANTIDADPEDIDA)) {
					existe=true;
					bodegaproductoAux.setsDescripcionGeneralEntityReporte1(bodegaproductoAux.getcantidad_pedida().toString());
				}
				 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_CANTIDADFISICA)) {
					existe=true;
					bodegaproductoAux.setsDescripcionGeneralEntityReporte1(bodegaproductoAux.getcantidad_fisica().toString());
				}
				 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_CANTIDADREQUERIDO)) {
					existe=true;
					bodegaproductoAux.setsDescripcionGeneralEntityReporte1(bodegaproductoAux.getcantidad_requerido().toString());
				}
				 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_TOTALINGRESOS)) {
					existe=true;
					bodegaproductoAux.setsDescripcionGeneralEntityReporte1(bodegaproductoAux.gettotal_ingresos().toString());
				}
				 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_TOTALEGRESOS)) {
					existe=true;
					bodegaproductoAux.setsDescripcionGeneralEntityReporte1(bodegaproductoAux.gettotal_egresos().toString());
				}
				 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_FECHAULTIMOPEDIDO)) {
					existe=true;
					bodegaproductoAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(bodegaproductoAux.getfecha_ultimo_pedido()));
				}
				 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_FECHAINGRESO)) {
					existe=true;
					bodegaproductoAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(bodegaproductoAux.getfecha_ingreso()));
				}
				 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_FECHAEGRESO)) {
					existe=true;
					bodegaproductoAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(bodegaproductoAux.getfecha_egreso()));
				}
				 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_FECHAULTIMACOMPRA)) {
					existe=true;
					bodegaproductoAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(bodegaproductoAux.getfecha_ultima_compra()));
				}
				 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_FECHAULTIMAVENTA)) {
					existe=true;
					bodegaproductoAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(bodegaproductoAux.getfecha_ultima_venta()));
				}
				 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_FECHAULTIMADEVOLUCION)) {
					existe=true;
					bodegaproductoAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(bodegaproductoAux.getfecha_ultima_devolucion()));
				}
				 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEINVENTARIO)) {
					existe=true;
					bodegaproductoAux.setsDescripcionGeneralEntityReporte1(bodegaproductoAux.getcuentacontableinventario_descripcion());
				}
				 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLECOSTOVENTA)) {
					existe=true;
					bodegaproductoAux.setsDescripcionGeneralEntityReporte1(bodegaproductoAux.getcuentacontablecostoventa_descripcion());
				}
				 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEVENTA)) {
					existe=true;
					bodegaproductoAux.setsDescripcionGeneralEntityReporte1(bodegaproductoAux.getcuentacontableventa_descripcion());
				}
				 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEDESCUENTO)) {
					existe=true;
					bodegaproductoAux.setsDescripcionGeneralEntityReporte1(bodegaproductoAux.getcuentacontabledescuento_descripcion());
				}
				 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEPRODUCCION)) {
					existe=true;
					bodegaproductoAux.setsDescripcionGeneralEntityReporte1(bodegaproductoAux.getcuentacontableproduccion_descripcion());
				}
				 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEDEVOLUCION)) {
					existe=true;
					bodegaproductoAux.setsDescripcionGeneralEntityReporte1(bodegaproductoAux.getcuentacontabledevolucion_descripcion());
				}
				 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEINGRESODEBITO)) {
					existe=true;
					bodegaproductoAux.setsDescripcionGeneralEntityReporte1(bodegaproductoAux.getcuentacontableingresodebito_descripcion());
				}
				 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLEINGRESOCREDITO)) {
					existe=true;
					bodegaproductoAux.setsDescripcionGeneralEntityReporte1(bodegaproductoAux.getcuentacontableingresocredito_descripcion());
				}
				 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLERESULTADODEBITO)) {
					existe=true;
					bodegaproductoAux.setsDescripcionGeneralEntityReporte1(bodegaproductoAux.getcuentacontableresultadodebito_descripcion());
				}
				 else if(sTipoSeleccionar.equals(BodegaProductoConstantesFunciones.LABEL_IDCUENTACONTABLERESULTADOCREDITO)) {
					existe=true;
					bodegaproductoAux.setsDescripcionGeneralEntityReporte1(bodegaproductoAux.getcuentacontableresultadocredito_descripcion());
				}
			}	
											
			if(!existe) {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}										
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,BodegaProductoConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void actualizarEstadoCeldasBotonesBodegaProducto(String sAccion,Boolean isGuardarCambiosEnLote,Boolean isEsMantenimientoRelacionado) throws Exception {
		if(sAccion=="n") {
			if(!this.esParaBusquedaForeignKey) {
				this.isVisibilidadCeldaNuevoBodegaProducto=true;
				this.isVisibilidadCeldaNuevoRelacionesBodegaProducto=true;
				this.isVisibilidadCeldaGuardarCambiosBodegaProducto=true;
			}
			
			this.isVisibilidadCeldaModificarBodegaProducto=false;
			this.isVisibilidadCeldaActualizarBodegaProducto=false;
			this.isVisibilidadCeldaEliminarBodegaProducto=false;
			this.isVisibilidadCeldaCancelarBodegaProducto=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarBodegaProducto=true;
				} else {
					this.isVisibilidadCeldaGuardarBodegaProducto=false;
				}
			}
		} else if(sAccion=="a") {
			this.isVisibilidadCeldaNuevoBodegaProducto=false;
			this.isVisibilidadCeldaNuevoRelacionesBodegaProducto=false;
			this.isVisibilidadCeldaGuardarCambiosBodegaProducto=false;
			this.isVisibilidadCeldaModificarBodegaProducto=false;
			this.isVisibilidadCeldaActualizarBodegaProducto=true;
			this.isVisibilidadCeldaEliminarBodegaProducto=false;
			this.isVisibilidadCeldaCancelarBodegaProducto=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarBodegaProducto=true;
				} else {
					this.isVisibilidadCeldaGuardarBodegaProducto=false;
				}
			}
		} else if(sAccion=="ae") {
			this.isVisibilidadCeldaNuevoBodegaProducto=false;
			this.isVisibilidadCeldaNuevoRelacionesBodegaProducto=false;
			this.isVisibilidadCeldaGuardarCambiosBodegaProducto=false;
			this.isVisibilidadCeldaModificarBodegaProducto=false;
			this.isVisibilidadCeldaActualizarBodegaProducto=true;
			this.isVisibilidadCeldaEliminarBodegaProducto=true;
			this.isVisibilidadCeldaCancelarBodegaProducto=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarBodegaProducto=true;
				} else {
					this.isVisibilidadCeldaGuardarBodegaProducto=false;
				}
			}
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {
			this.isVisibilidadCeldaNuevoBodegaProducto=false;
			this.isVisibilidadCeldaNuevoRelacionesBodegaProducto=false;
			this.isVisibilidadCeldaGuardarCambiosBodegaProducto=false;
			this.isVisibilidadCeldaModificarBodegaProducto=false;
			this.isVisibilidadCeldaActualizarBodegaProducto=true;
			this.isVisibilidadCeldaEliminarBodegaProducto=false;
			this.isVisibilidadCeldaCancelarBodegaProducto=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarBodegaProducto=false;
				} else {
					this.isVisibilidadCeldaGuardarBodegaProducto=false;
				}
			}
		} else if(sAccion=="c") {
			this.isVisibilidadCeldaNuevoBodegaProducto=true;
			this.isVisibilidadCeldaNuevoRelacionesBodegaProducto=true;
			this.isVisibilidadCeldaGuardarCambiosBodegaProducto=true;
			this.isVisibilidadCeldaModificarBodegaProducto=false;
			this.isVisibilidadCeldaActualizarBodegaProducto=false;
			this.isVisibilidadCeldaEliminarBodegaProducto=false;
			this.isVisibilidadCeldaCancelarBodegaProducto=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarBodegaProducto=true;
				} else {
					this.isVisibilidadCeldaGuardarBodegaProducto=false;
				}
			}
		} else if(sAccion=="t") {
			this.isVisibilidadCeldaNuevoBodegaProducto=false;
			this.isVisibilidadCeldaNuevoRelacionesBodegaProducto=false;
			this.isVisibilidadCeldaGuardarCambiosBodegaProducto=false;
			this.isVisibilidadCeldaActualizarBodegaProducto=false;
			this.isVisibilidadCeldaEliminarBodegaProducto=false;
			this.isVisibilidadCeldaCancelarBodegaProducto=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarBodegaProducto=false;
				} else {
					this.isVisibilidadCeldaGuardarBodegaProducto=false;
				}
			}
		}  else if(sAccion=="s"||sAccion=="s2") {
			this.isVisibilidadCeldaNuevoBodegaProducto=false;
			this.isVisibilidadCeldaNuevoRelacionesBodegaProducto=false;
			this.isVisibilidadCeldaGuardarCambiosBodegaProducto=false;
			this.isVisibilidadCeldaModificarBodegaProducto=true;
			this.isVisibilidadCeldaActualizarBodegaProducto=false;
			this.isVisibilidadCeldaEliminarBodegaProducto=false;
			this.isVisibilidadCeldaCancelarBodegaProducto=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarBodegaProducto=false;
				} else {
					this.isVisibilidadCeldaGuardarBodegaProducto=false;
				}
			}
		}
		
		//ACTUALIZA VISIBILIDAD PANELES
		if(BodegaProductoJInternalFrame.CON_DATOS_FRAME && !this.esParaBusquedaForeignKey) {
			//SIEMPRE VISIBLE
			this.isVisibilidadCeldaNuevoBodegaProducto=true;
			this.isVisibilidadCeldaNuevoRelacionesBodegaProducto=true;
			this.isVisibilidadCeldaGuardarCambiosBodegaProducto=true;
		} else {
			this.actualizarEstadoPanelsBodegaProducto(sAccion);						
		}
		
		if(this.esParaBusquedaForeignKey) {
			this.isVisibilidadCeldaCopiarBodegaProducto=false;
			//this.isVisibilidadCeldaVerFormBodegaProducto=false;
			this.isVisibilidadCeldaDuplicarBodegaProducto=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONES
		if(!bodegaproductoSessionBean.getConGuardarRelaciones()) {
			this.isVisibilidadCeldaNuevoRelacionesBodegaProducto=false;
		} else {
			this.isVisibilidadCeldaNuevoBodegaProducto=false;
			this.isVisibilidadCeldaGuardarCambiosBodegaProducto=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONADO
		if(bodegaproductoSessionBean.getEsGuardarRelacionado()) {
			if(!bodegaproductoSessionBean.getConGuardarRelaciones()) {	
				this.isVisibilidadCeldaNuevoRelacionesBodegaProducto=false;												
			}
			
			this.jButtonCerrarBodegaProducto.setVisible(false);
		}
		
		//SI NO TIENE MAXIMO DE RELACIONES PERMITIDAS
		if(!this.conMaximoRelaciones) {
			this.isVisibilidadCeldaNuevoRelacionesBodegaProducto=false;
		}
		
		if(!this.permiteMantenimiento(this.bodegaproducto)) {
			this.isVisibilidadCeldaActualizarBodegaProducto=false;
			this.isVisibilidadCeldaEliminarBodegaProducto=false;
		}
		
		
		
	}
	
	public void actualizarEstadoCeldasBotonesConGuardarRelacionesBodegaProducto() {
	}
	
	public void actualizarEstadoPanelsBodegaProducto(String sAccion) {
		if(sAccion=="n") {
			if(this.jScrollPanelDatosEdicionBodegaProducto!=null) {
				this.jScrollPanelDatosEdicionBodegaProducto.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasBodegaProducto!=null) {
				this.jTabbedPaneBusquedasBodegaProducto.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosBodegaProducto!=null) {
				this.jScrollPanelDatosBodegaProducto.setVisible(true);
			}
			
			if(this.jPanelPaginacionBodegaProducto!=null) {
				this.jPanelPaginacionBodegaProducto.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesBodegaProducto!=null) {
				this.jPanelParametrosReportesBodegaProducto.setVisible(true);		    
			}
			
		} else if(sAccion=="a") {				
			if(this.jScrollPanelDatosEdicionBodegaProducto!=null) {
				this.jScrollPanelDatosEdicionBodegaProducto.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasBodegaProducto!=null) {
				this.jTabbedPaneBusquedasBodegaProducto.setVisible(false);			
			}
			
			
			
			if(this.jScrollPanelDatosBodegaProducto!=null) {
				this.jScrollPanelDatosBodegaProducto.setVisible(false);
			}
			
			if(this.jPanelPaginacionBodegaProducto!=null) {
				this.jPanelPaginacionBodegaProducto.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesBodegaProducto!=null) {
				this.jPanelParametrosReportesBodegaProducto.setVisible(false);
			}
						
		} else if(sAccion=="ae") {		
			if(this.jScrollPanelDatosEdicionBodegaProducto!=null) {
				this.jScrollPanelDatosEdicionBodegaProducto.setVisible(true);		
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasBodegaProducto!=null) {
				this.jTabbedPaneBusquedasBodegaProducto.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosBodegaProducto!=null) {
				this.jScrollPanelDatosBodegaProducto.setVisible(false);
			}
			
			if(this.jPanelPaginacionBodegaProducto!=null) {
				this.jPanelPaginacionBodegaProducto.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesBodegaProducto!=null) {
				this.jPanelParametrosReportesBodegaProducto.setVisible(false);
			}
						
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {	
			if(this.jScrollPanelDatosEdicionBodegaProducto!=null) {
				this.jScrollPanelDatosEdicionBodegaProducto.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasBodegaProducto!=null) {
				this.jTabbedPaneBusquedasBodegaProducto.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosBodegaProducto!=null) {
				this.jScrollPanelDatosBodegaProducto.setVisible(false);
			}
			
			if(this.jPanelPaginacionBodegaProducto!=null) {
				this.jPanelPaginacionBodegaProducto.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesBodegaProducto!=null) {
				this.jPanelParametrosReportesBodegaProducto.setVisible(false);
			}
						
		} else if(sAccion=="c") {	
			if(this.jScrollPanelDatosEdicionBodegaProducto!=null) {
				this.jScrollPanelDatosEdicionBodegaProducto.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasBodegaProducto!=null) {
				this.jTabbedPaneBusquedasBodegaProducto.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosBodegaProducto!=null) {
				this.jScrollPanelDatosBodegaProducto.setVisible(true);
			}
			
			if(this.jPanelPaginacionBodegaProducto!=null) {
				this.jPanelPaginacionBodegaProducto.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesBodegaProducto!=null) {
				this.jPanelParametrosReportesBodegaProducto.setVisible(true);
			}
						
		} else if(sAccion=="t") {
			
			if(this.jScrollPanelDatosEdicionBodegaProducto!=null) {
				this.jScrollPanelDatosEdicionBodegaProducto.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasBodegaProducto!=null) {
				this.jTabbedPaneBusquedasBodegaProducto.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosBodegaProducto!=null) {
				this.jScrollPanelDatosBodegaProducto.setVisible(true);
			}
			
			if(this.jPanelPaginacionBodegaProducto!=null) {
				this.jPanelPaginacionBodegaProducto.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesBodegaProducto!=null) {
				this.jPanelParametrosReportesBodegaProducto.setVisible(true);
			}
						
		}  else if(sAccion=="s"||sAccion=="s2") {
			if(this.jScrollPanelDatosEdicionBodegaProducto!=null) {
				this.jScrollPanelDatosEdicionBodegaProducto.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasBodegaProducto!=null) {
				this.jTabbedPaneBusquedasBodegaProducto.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosBodegaProducto!=null) {
				this.jScrollPanelDatosBodegaProducto.setVisible(true);
			}
			
			if(this.jPanelPaginacionBodegaProducto!=null) {
				this.jPanelPaginacionBodegaProducto.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesBodegaProducto!=null) {
				this.jPanelParametrosReportesBodegaProducto.setVisible(true);
			}
			
		} 
		
		if(sAccion.equals("relacionado") || this.bodegaproductoSessionBean.getEsGuardarRelacionado()) {
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				if(this.jTabbedPaneBusquedasBodegaProducto!=null) {
					this.jTabbedPaneBusquedasBodegaProducto.setVisible(false);				
				}
				
			}
			
			if(this.jPanelParametrosReportesBodegaProducto!=null) {
				this.jPanelParametrosReportesBodegaProducto.setVisible(false);
			}
		
		} else if(sAccion.equals("no_relacionado") && !this.bodegaproductoSessionBean.getEsGuardarRelacionado()) {
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasBodegaProducto!=null) {
				this.jTabbedPaneBusquedasBodegaProducto.setVisible(true);			
			}
			
			if(this.jPanelParametrosReportesBodegaProducto!=null) {
				this.jPanelParametrosReportesBodegaProducto.setVisible(true);
			}
		}
	}	
	
	

	public void setVisibilidadBusquedasParaEmpresa(Boolean isParaEmpresa){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEmpresaNegation=!isParaEmpresa;

			this.isVisibilidadFK_IdBodega=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdBodegaBodegaProducto);}

			this.isVisibilidadFK_IdCentroCosto=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCentroCostoBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableCostoVenta=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableCostoVenta) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableCostoVentaBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableIngresoCredito=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIngresoCredito) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableIngresoCreditoBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableIngresoDebito=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIngresoDebito) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableIngresoDebitoBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableProduccion=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableProduccion) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableProduccionBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableResultadoCredito=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableResultadoCredito) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableResultadoCreditoBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableResultadoDebito=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableResultadoDebito) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableResultadoDebitoBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableVenta=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableVenta) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableVentaBodegaProducto);}

			this.isVisibilidadFK_IdProducto=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdProductoBodegaProducto);}

			this.isVisibilidadFK_IdUnidad=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdUnidadBodegaProducto);}
		}
		
	}

	public void setVisibilidadBusquedasParaSucursal(Boolean isParaSucursal){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaSucursalNegation=!isParaSucursal;

			this.isVisibilidadFK_IdBodega=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdBodegaBodegaProducto);}

			this.isVisibilidadFK_IdCentroCosto=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCentroCostoBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableCostoVenta=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdCuentaContableCostoVenta) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableCostoVentaBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableIngresoCredito=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIngresoCredito) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableIngresoCreditoBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableIngresoDebito=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIngresoDebito) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableIngresoDebitoBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableProduccion=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdCuentaContableProduccion) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableProduccionBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableResultadoCredito=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdCuentaContableResultadoCredito) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableResultadoCreditoBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableResultadoDebito=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdCuentaContableResultadoDebito) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableResultadoDebitoBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableVenta=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdCuentaContableVenta) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableVentaBodegaProducto);}

			this.isVisibilidadFK_IdProducto=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdProductoBodegaProducto);}

			this.isVisibilidadFK_IdUnidad=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdUnidadBodegaProducto);}
		}
		
	}

	public void setVisibilidadBusquedasParaBodega(Boolean isParaBodega){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaBodegaNegation=!isParaBodega;

			this.isVisibilidadFK_IdBodega=isParaBodega;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdBodegaBodegaProducto);}

			this.isVisibilidadFK_IdCentroCosto=isParaBodegaNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCentroCostoBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableCostoVenta=isParaBodegaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableCostoVenta) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableCostoVentaBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableIngresoCredito=isParaBodegaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIngresoCredito) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableIngresoCreditoBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableIngresoDebito=isParaBodegaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIngresoDebito) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableIngresoDebitoBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableProduccion=isParaBodegaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableProduccion) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableProduccionBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableResultadoCredito=isParaBodegaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableResultadoCredito) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableResultadoCreditoBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableResultadoDebito=isParaBodegaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableResultadoDebito) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableResultadoDebitoBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableVenta=isParaBodegaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableVenta) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableVentaBodegaProducto);}

			this.isVisibilidadFK_IdProducto=isParaBodegaNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdProductoBodegaProducto);}

			this.isVisibilidadFK_IdUnidad=isParaBodegaNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdUnidadBodegaProducto);}
		}
		
	}

	public void setVisibilidadBusquedasParaProducto(Boolean isParaProducto){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaProductoNegation=!isParaProducto;

			this.isVisibilidadFK_IdBodega=isParaProductoNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdBodegaBodegaProducto);}

			this.isVisibilidadFK_IdCentroCosto=isParaProductoNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCentroCostoBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableCostoVenta=isParaProductoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableCostoVenta) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableCostoVentaBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableIngresoCredito=isParaProductoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIngresoCredito) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableIngresoCreditoBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableIngresoDebito=isParaProductoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIngresoDebito) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableIngresoDebitoBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableProduccion=isParaProductoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableProduccion) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableProduccionBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableResultadoCredito=isParaProductoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableResultadoCredito) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableResultadoCreditoBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableResultadoDebito=isParaProductoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableResultadoDebito) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableResultadoDebitoBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableVenta=isParaProductoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableVenta) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableVentaBodegaProducto);}

			this.isVisibilidadFK_IdProducto=isParaProducto;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdProductoBodegaProducto);}

			this.isVisibilidadFK_IdUnidad=isParaProductoNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdUnidadBodegaProducto);}
		}
		
	}

	public void setVisibilidadBusquedasParaUnidad(Boolean isParaUnidad){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaUnidadNegation=!isParaUnidad;

			this.isVisibilidadFK_IdBodega=isParaUnidadNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdBodegaBodegaProducto);}

			this.isVisibilidadFK_IdCentroCosto=isParaUnidadNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCentroCostoBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableCostoVenta=isParaUnidadNegation;
			if(!this.isVisibilidadFK_IdCuentaContableCostoVenta) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableCostoVentaBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableIngresoCredito=isParaUnidadNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIngresoCredito) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableIngresoCreditoBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableIngresoDebito=isParaUnidadNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIngresoDebito) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableIngresoDebitoBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableProduccion=isParaUnidadNegation;
			if(!this.isVisibilidadFK_IdCuentaContableProduccion) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableProduccionBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableResultadoCredito=isParaUnidadNegation;
			if(!this.isVisibilidadFK_IdCuentaContableResultadoCredito) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableResultadoCreditoBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableResultadoDebito=isParaUnidadNegation;
			if(!this.isVisibilidadFK_IdCuentaContableResultadoDebito) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableResultadoDebitoBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableVenta=isParaUnidadNegation;
			if(!this.isVisibilidadFK_IdCuentaContableVenta) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableVentaBodegaProducto);}

			this.isVisibilidadFK_IdProducto=isParaUnidadNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdProductoBodegaProducto);}

			this.isVisibilidadFK_IdUnidad=isParaUnidad;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdUnidadBodegaProducto);}
		}
		
	}

	public void setVisibilidadBusquedasParaCentroCosto(Boolean isParaCentroCosto){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCentroCostoNegation=!isParaCentroCosto;

			this.isVisibilidadFK_IdBodega=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdBodegaBodegaProducto);}

			this.isVisibilidadFK_IdCentroCosto=isParaCentroCosto;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCentroCostoBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableCostoVenta=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableCostoVenta) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableCostoVentaBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableIngresoCredito=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIngresoCredito) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableIngresoCreditoBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableIngresoDebito=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIngresoDebito) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableIngresoDebitoBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableProduccion=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableProduccion) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableProduccionBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableResultadoCredito=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableResultadoCredito) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableResultadoCreditoBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableResultadoDebito=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableResultadoDebito) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableResultadoDebitoBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableVenta=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableVenta) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableVentaBodegaProducto);}

			this.isVisibilidadFK_IdProducto=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdProductoBodegaProducto);}

			this.isVisibilidadFK_IdUnidad=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdUnidadBodegaProducto);}
		}
		
	}

	public void setVisibilidadBusquedasParaEstadoBodegaProducto(Boolean isParaEstadoBodegaProducto){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEstadoBodegaProductoNegation=!isParaEstadoBodegaProducto;

			this.isVisibilidadFK_IdBodega=isParaEstadoBodegaProductoNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdBodegaBodegaProducto);}

			this.isVisibilidadFK_IdCentroCosto=isParaEstadoBodegaProductoNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCentroCostoBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableCostoVenta=isParaEstadoBodegaProductoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableCostoVenta) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableCostoVentaBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableIngresoCredito=isParaEstadoBodegaProductoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIngresoCredito) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableIngresoCreditoBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableIngresoDebito=isParaEstadoBodegaProductoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIngresoDebito) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableIngresoDebitoBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableProduccion=isParaEstadoBodegaProductoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableProduccion) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableProduccionBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableResultadoCredito=isParaEstadoBodegaProductoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableResultadoCredito) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableResultadoCreditoBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableResultadoDebito=isParaEstadoBodegaProductoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableResultadoDebito) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableResultadoDebitoBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableVenta=isParaEstadoBodegaProductoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableVenta) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableVentaBodegaProducto);}

			this.isVisibilidadFK_IdProducto=isParaEstadoBodegaProductoNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdProductoBodegaProducto);}

			this.isVisibilidadFK_IdUnidad=isParaEstadoBodegaProductoNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdUnidadBodegaProducto);}
		}
		
	}

	public void setVisibilidadBusquedasParaCuentaContableInventario(Boolean isParaCuentaContableInventario){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCuentaContableInventarioNegation=!isParaCuentaContableInventario;

			this.isVisibilidadFK_IdBodega=isParaCuentaContableInventarioNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdBodegaBodegaProducto);}

			this.isVisibilidadFK_IdCentroCosto=isParaCuentaContableInventarioNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCentroCostoBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableCostoVenta=isParaCuentaContableInventarioNegation;
			if(!this.isVisibilidadFK_IdCuentaContableCostoVenta) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableCostoVentaBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableIngresoCredito=isParaCuentaContableInventarioNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIngresoCredito) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableIngresoCreditoBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableIngresoDebito=isParaCuentaContableInventarioNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIngresoDebito) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableIngresoDebitoBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableProduccion=isParaCuentaContableInventarioNegation;
			if(!this.isVisibilidadFK_IdCuentaContableProduccion) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableProduccionBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableResultadoCredito=isParaCuentaContableInventarioNegation;
			if(!this.isVisibilidadFK_IdCuentaContableResultadoCredito) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableResultadoCreditoBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableResultadoDebito=isParaCuentaContableInventarioNegation;
			if(!this.isVisibilidadFK_IdCuentaContableResultadoDebito) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableResultadoDebitoBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableVenta=isParaCuentaContableInventarioNegation;
			if(!this.isVisibilidadFK_IdCuentaContableVenta) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableVentaBodegaProducto);}

			this.isVisibilidadFK_IdProducto=isParaCuentaContableInventarioNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdProductoBodegaProducto);}

			this.isVisibilidadFK_IdUnidad=isParaCuentaContableInventarioNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdUnidadBodegaProducto);}
		}
		
	}

	public void setVisibilidadBusquedasParaCuentaContableCostoVenta(Boolean isParaCuentaContableCostoVenta){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCuentaContableCostoVentaNegation=!isParaCuentaContableCostoVenta;

			this.isVisibilidadFK_IdBodega=isParaCuentaContableCostoVentaNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdBodegaBodegaProducto);}

			this.isVisibilidadFK_IdCentroCosto=isParaCuentaContableCostoVentaNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCentroCostoBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableCostoVenta=isParaCuentaContableCostoVenta;
			if(!this.isVisibilidadFK_IdCuentaContableCostoVenta) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableCostoVentaBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableIngresoCredito=isParaCuentaContableCostoVentaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIngresoCredito) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableIngresoCreditoBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableIngresoDebito=isParaCuentaContableCostoVentaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIngresoDebito) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableIngresoDebitoBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableProduccion=isParaCuentaContableCostoVentaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableProduccion) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableProduccionBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableResultadoCredito=isParaCuentaContableCostoVentaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableResultadoCredito) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableResultadoCreditoBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableResultadoDebito=isParaCuentaContableCostoVentaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableResultadoDebito) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableResultadoDebitoBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableVenta=isParaCuentaContableCostoVentaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableVenta) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableVentaBodegaProducto);}

			this.isVisibilidadFK_IdProducto=isParaCuentaContableCostoVentaNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdProductoBodegaProducto);}

			this.isVisibilidadFK_IdUnidad=isParaCuentaContableCostoVentaNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdUnidadBodegaProducto);}
		}
		
	}

	public void setVisibilidadBusquedasParaCuentaContableVenta(Boolean isParaCuentaContableVenta){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCuentaContableVentaNegation=!isParaCuentaContableVenta;

			this.isVisibilidadFK_IdBodega=isParaCuentaContableVentaNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdBodegaBodegaProducto);}

			this.isVisibilidadFK_IdCentroCosto=isParaCuentaContableVentaNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCentroCostoBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableCostoVenta=isParaCuentaContableVentaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableCostoVenta) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableCostoVentaBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableIngresoCredito=isParaCuentaContableVentaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIngresoCredito) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableIngresoCreditoBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableIngresoDebito=isParaCuentaContableVentaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIngresoDebito) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableIngresoDebitoBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableProduccion=isParaCuentaContableVentaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableProduccion) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableProduccionBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableResultadoCredito=isParaCuentaContableVentaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableResultadoCredito) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableResultadoCreditoBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableResultadoDebito=isParaCuentaContableVentaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableResultadoDebito) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableResultadoDebitoBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableVenta=isParaCuentaContableVenta;
			if(!this.isVisibilidadFK_IdCuentaContableVenta) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableVentaBodegaProducto);}

			this.isVisibilidadFK_IdProducto=isParaCuentaContableVentaNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdProductoBodegaProducto);}

			this.isVisibilidadFK_IdUnidad=isParaCuentaContableVentaNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdUnidadBodegaProducto);}
		}
		
	}

	public void setVisibilidadBusquedasParaCuentaContableDescuento(Boolean isParaCuentaContableDescuento){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCuentaContableDescuentoNegation=!isParaCuentaContableDescuento;

			this.isVisibilidadFK_IdBodega=isParaCuentaContableDescuentoNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdBodegaBodegaProducto);}

			this.isVisibilidadFK_IdCentroCosto=isParaCuentaContableDescuentoNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCentroCostoBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableCostoVenta=isParaCuentaContableDescuentoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableCostoVenta) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableCostoVentaBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableIngresoCredito=isParaCuentaContableDescuentoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIngresoCredito) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableIngresoCreditoBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableIngresoDebito=isParaCuentaContableDescuentoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIngresoDebito) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableIngresoDebitoBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableProduccion=isParaCuentaContableDescuentoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableProduccion) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableProduccionBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableResultadoCredito=isParaCuentaContableDescuentoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableResultadoCredito) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableResultadoCreditoBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableResultadoDebito=isParaCuentaContableDescuentoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableResultadoDebito) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableResultadoDebitoBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableVenta=isParaCuentaContableDescuentoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableVenta) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableVentaBodegaProducto);}

			this.isVisibilidadFK_IdProducto=isParaCuentaContableDescuentoNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdProductoBodegaProducto);}

			this.isVisibilidadFK_IdUnidad=isParaCuentaContableDescuentoNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdUnidadBodegaProducto);}
		}
		
	}

	public void setVisibilidadBusquedasParaCuentaContableProduccion(Boolean isParaCuentaContableProduccion){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCuentaContableProduccionNegation=!isParaCuentaContableProduccion;

			this.isVisibilidadFK_IdBodega=isParaCuentaContableProduccionNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdBodegaBodegaProducto);}

			this.isVisibilidadFK_IdCentroCosto=isParaCuentaContableProduccionNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCentroCostoBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableCostoVenta=isParaCuentaContableProduccionNegation;
			if(!this.isVisibilidadFK_IdCuentaContableCostoVenta) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableCostoVentaBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableIngresoCredito=isParaCuentaContableProduccionNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIngresoCredito) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableIngresoCreditoBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableIngresoDebito=isParaCuentaContableProduccionNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIngresoDebito) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableIngresoDebitoBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableProduccion=isParaCuentaContableProduccion;
			if(!this.isVisibilidadFK_IdCuentaContableProduccion) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableProduccionBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableResultadoCredito=isParaCuentaContableProduccionNegation;
			if(!this.isVisibilidadFK_IdCuentaContableResultadoCredito) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableResultadoCreditoBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableResultadoDebito=isParaCuentaContableProduccionNegation;
			if(!this.isVisibilidadFK_IdCuentaContableResultadoDebito) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableResultadoDebitoBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableVenta=isParaCuentaContableProduccionNegation;
			if(!this.isVisibilidadFK_IdCuentaContableVenta) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableVentaBodegaProducto);}

			this.isVisibilidadFK_IdProducto=isParaCuentaContableProduccionNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdProductoBodegaProducto);}

			this.isVisibilidadFK_IdUnidad=isParaCuentaContableProduccionNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdUnidadBodegaProducto);}
		}
		
	}

	public void setVisibilidadBusquedasParaCuentaContableDevolucion(Boolean isParaCuentaContableDevolucion){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCuentaContableDevolucionNegation=!isParaCuentaContableDevolucion;

			this.isVisibilidadFK_IdBodega=isParaCuentaContableDevolucionNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdBodegaBodegaProducto);}

			this.isVisibilidadFK_IdCentroCosto=isParaCuentaContableDevolucionNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCentroCostoBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableCostoVenta=isParaCuentaContableDevolucionNegation;
			if(!this.isVisibilidadFK_IdCuentaContableCostoVenta) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableCostoVentaBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableIngresoCredito=isParaCuentaContableDevolucionNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIngresoCredito) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableIngresoCreditoBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableIngresoDebito=isParaCuentaContableDevolucionNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIngresoDebito) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableIngresoDebitoBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableProduccion=isParaCuentaContableDevolucionNegation;
			if(!this.isVisibilidadFK_IdCuentaContableProduccion) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableProduccionBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableResultadoCredito=isParaCuentaContableDevolucionNegation;
			if(!this.isVisibilidadFK_IdCuentaContableResultadoCredito) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableResultadoCreditoBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableResultadoDebito=isParaCuentaContableDevolucionNegation;
			if(!this.isVisibilidadFK_IdCuentaContableResultadoDebito) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableResultadoDebitoBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableVenta=isParaCuentaContableDevolucionNegation;
			if(!this.isVisibilidadFK_IdCuentaContableVenta) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableVentaBodegaProducto);}

			this.isVisibilidadFK_IdProducto=isParaCuentaContableDevolucionNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdProductoBodegaProducto);}

			this.isVisibilidadFK_IdUnidad=isParaCuentaContableDevolucionNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdUnidadBodegaProducto);}
		}
		
	}

	public void setVisibilidadBusquedasParaCuentaContableIngresoDebito(Boolean isParaCuentaContableIngresoDebito){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCuentaContableIngresoDebitoNegation=!isParaCuentaContableIngresoDebito;

			this.isVisibilidadFK_IdBodega=isParaCuentaContableIngresoDebitoNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdBodegaBodegaProducto);}

			this.isVisibilidadFK_IdCentroCosto=isParaCuentaContableIngresoDebitoNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCentroCostoBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableCostoVenta=isParaCuentaContableIngresoDebitoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableCostoVenta) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableCostoVentaBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableIngresoCredito=isParaCuentaContableIngresoDebitoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIngresoCredito) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableIngresoCreditoBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableIngresoDebito=isParaCuentaContableIngresoDebito;
			if(!this.isVisibilidadFK_IdCuentaContableIngresoDebito) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableIngresoDebitoBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableProduccion=isParaCuentaContableIngresoDebitoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableProduccion) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableProduccionBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableResultadoCredito=isParaCuentaContableIngresoDebitoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableResultadoCredito) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableResultadoCreditoBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableResultadoDebito=isParaCuentaContableIngresoDebitoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableResultadoDebito) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableResultadoDebitoBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableVenta=isParaCuentaContableIngresoDebitoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableVenta) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableVentaBodegaProducto);}

			this.isVisibilidadFK_IdProducto=isParaCuentaContableIngresoDebitoNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdProductoBodegaProducto);}

			this.isVisibilidadFK_IdUnidad=isParaCuentaContableIngresoDebitoNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdUnidadBodegaProducto);}
		}
		
	}

	public void setVisibilidadBusquedasParaCuentaContableIngresoCredito(Boolean isParaCuentaContableIngresoCredito){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCuentaContableIngresoCreditoNegation=!isParaCuentaContableIngresoCredito;

			this.isVisibilidadFK_IdBodega=isParaCuentaContableIngresoCreditoNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdBodegaBodegaProducto);}

			this.isVisibilidadFK_IdCentroCosto=isParaCuentaContableIngresoCreditoNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCentroCostoBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableCostoVenta=isParaCuentaContableIngresoCreditoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableCostoVenta) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableCostoVentaBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableIngresoCredito=isParaCuentaContableIngresoCredito;
			if(!this.isVisibilidadFK_IdCuentaContableIngresoCredito) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableIngresoCreditoBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableIngresoDebito=isParaCuentaContableIngresoCreditoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIngresoDebito) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableIngresoDebitoBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableProduccion=isParaCuentaContableIngresoCreditoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableProduccion) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableProduccionBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableResultadoCredito=isParaCuentaContableIngresoCreditoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableResultadoCredito) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableResultadoCreditoBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableResultadoDebito=isParaCuentaContableIngresoCreditoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableResultadoDebito) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableResultadoDebitoBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableVenta=isParaCuentaContableIngresoCreditoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableVenta) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableVentaBodegaProducto);}

			this.isVisibilidadFK_IdProducto=isParaCuentaContableIngresoCreditoNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdProductoBodegaProducto);}

			this.isVisibilidadFK_IdUnidad=isParaCuentaContableIngresoCreditoNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdUnidadBodegaProducto);}
		}
		
	}

	public void setVisibilidadBusquedasParaCuentaContableResultadoDebito(Boolean isParaCuentaContableResultadoDebito){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCuentaContableResultadoDebitoNegation=!isParaCuentaContableResultadoDebito;

			this.isVisibilidadFK_IdBodega=isParaCuentaContableResultadoDebitoNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdBodegaBodegaProducto);}

			this.isVisibilidadFK_IdCentroCosto=isParaCuentaContableResultadoDebitoNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCentroCostoBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableCostoVenta=isParaCuentaContableResultadoDebitoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableCostoVenta) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableCostoVentaBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableIngresoCredito=isParaCuentaContableResultadoDebitoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIngresoCredito) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableIngresoCreditoBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableIngresoDebito=isParaCuentaContableResultadoDebitoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIngresoDebito) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableIngresoDebitoBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableProduccion=isParaCuentaContableResultadoDebitoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableProduccion) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableProduccionBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableResultadoCredito=isParaCuentaContableResultadoDebitoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableResultadoCredito) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableResultadoCreditoBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableResultadoDebito=isParaCuentaContableResultadoDebito;
			if(!this.isVisibilidadFK_IdCuentaContableResultadoDebito) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableResultadoDebitoBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableVenta=isParaCuentaContableResultadoDebitoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableVenta) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableVentaBodegaProducto);}

			this.isVisibilidadFK_IdProducto=isParaCuentaContableResultadoDebitoNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdProductoBodegaProducto);}

			this.isVisibilidadFK_IdUnidad=isParaCuentaContableResultadoDebitoNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdUnidadBodegaProducto);}
		}
		
	}

	public void setVisibilidadBusquedasParaCuentaContableResultadoCredito(Boolean isParaCuentaContableResultadoCredito){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCuentaContableResultadoCreditoNegation=!isParaCuentaContableResultadoCredito;

			this.isVisibilidadFK_IdBodega=isParaCuentaContableResultadoCreditoNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdBodegaBodegaProducto);}

			this.isVisibilidadFK_IdCentroCosto=isParaCuentaContableResultadoCreditoNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCentroCostoBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableCostoVenta=isParaCuentaContableResultadoCreditoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableCostoVenta) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableCostoVentaBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableIngresoCredito=isParaCuentaContableResultadoCreditoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIngresoCredito) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableIngresoCreditoBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableIngresoDebito=isParaCuentaContableResultadoCreditoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIngresoDebito) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableIngresoDebitoBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableProduccion=isParaCuentaContableResultadoCreditoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableProduccion) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableProduccionBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableResultadoCredito=isParaCuentaContableResultadoCredito;
			if(!this.isVisibilidadFK_IdCuentaContableResultadoCredito) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableResultadoCreditoBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableResultadoDebito=isParaCuentaContableResultadoCreditoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableResultadoDebito) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableResultadoDebitoBodegaProducto);}

			this.isVisibilidadFK_IdCuentaContableVenta=isParaCuentaContableResultadoCreditoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableVenta) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdCuentaContableVentaBodegaProducto);}

			this.isVisibilidadFK_IdProducto=isParaCuentaContableResultadoCreditoNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdProductoBodegaProducto);}

			this.isVisibilidadFK_IdUnidad=isParaCuentaContableResultadoCreditoNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasBodegaProducto.remove(jPanelFK_IdUnidadBodegaProducto);}
		}
		
	}
	
	
	
	

	public String registrarSesionBodegaProductoParaBusquedaProductos() throws Exception {
		Boolean isPaginaPopupProducto=false;

		try {

			if(bodegaproductoSessionBean==null) {
				bodegaproductoSessionBean=new BodegaProductoSessionBean();
			}

			if(productoSessionBean==null) {
				productoSessionBean=new ProductoSessionBean();
			}

			productoSessionBean.setsPathNavegacionActual(bodegaproductoSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+ProductoConstantesFunciones.SCLASSWEBTITULO);
			productoSessionBean.setisPermiteRecargarInformacion(false);
			productoSessionBean.setisPaginaPopup(true);
			isPaginaPopupProducto=productoSessionBean.getisPaginaPopup();
			productoSessionBean.setisPaginaPopup(false);
			productoSessionBean.setEstaModoBusqueda(true);
			productoSessionBean.setsFuncionBusquedaRapida("window.opener.bodegaproductoFuncionGeneral.setCombosCodigoDesdeBusquedaid_producto(TO_REPLACE);");
			productoSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeProducto(true);
			productoSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeProducto(BodegaProductoConstantesFunciones.SNOMBREOPCION);
			//productoSessionBean.setisBusquedaDesdeForeignKeySesionBodegaProducto(true);
			//productoSessionBean.setlidBodegaProductoActual(this.idBodegaProductoActual);

			bodegaproductoSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyBodegaProducto(true);
			bodegaproductoSessionBean.setlIdBodegaProductoActualForeignKey(this.idBodegaProductoActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}
	
	
	public void guardarDatosBusquedaSession() throws Exception {
		
		//BodegaProductoSessionBean bodegaproductoSessionBean=new BodegaProductoSessionBean();
		
		if(this.bodegaproductoSessionBean==null) {
			this.bodegaproductoSessionBean=new BodegaProductoSessionBean();
		}
		
		this.bodegaproductoSessionBean.setsUltimaBusquedaBodegaProducto(this.getsAccionBusqueda());
		this.bodegaproductoSessionBean.setiNumeroPaginacion(this.getiNumeroPaginacion());
		this.bodegaproductoSessionBean.setiNumeroPaginacionPagina(this.getiNumeroPaginacionPagina());
		
		if(this.getsAccionBusqueda().equals("Todos")) {
			;
		}
		

		else if(this.getsAccionBusqueda().equals("FK_IdBodega")) {
			bodegaproductoSessionBean.setid_bodega(this.getid_bodegaFK_IdBodega());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdCentroCosto")) {
			bodegaproductoSessionBean.setid_centro_costo(this.getid_centro_costoFK_IdCentroCosto());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdCuentaContableCostoVenta")) {
			bodegaproductoSessionBean.setid_cuenta_contable_costo_venta(this.getid_cuenta_contable_costo_ventaFK_IdCuentaContableCostoVenta());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdCuentaContableIngresoCredito")) {
			bodegaproductoSessionBean.setid_cuenta_contable_ingreso_credito(this.getid_cuenta_contable_ingreso_creditoFK_IdCuentaContableIngresoCredito());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdCuentaContableIngresoDebito")) {
			bodegaproductoSessionBean.setid_cuenta_contable_ingreso_debito(this.getid_cuenta_contable_ingreso_debitoFK_IdCuentaContableIngresoDebito());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdCuentaContableProduccion")) {
			bodegaproductoSessionBean.setid_cuenta_contable_produccion(this.getid_cuenta_contable_produccionFK_IdCuentaContableProduccion());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdCuentaContableResultadoCredito")) {
			bodegaproductoSessionBean.setid_cuenta_contable_resultado_credito(this.getid_cuenta_contable_resultado_creditoFK_IdCuentaContableResultadoCredito());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdCuentaContableResultadoDebito")) {
			bodegaproductoSessionBean.setid_cuenta_contable_resultado_debito(this.getid_cuenta_contable_resultado_debitoFK_IdCuentaContableResultadoDebito());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdCuentaContableVenta")) {
			bodegaproductoSessionBean.setid_cuenta_contable_venta(this.getid_cuenta_contable_ventaFK_IdCuentaContableVenta());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
			bodegaproductoSessionBean.setid_empresa(this.getid_empresaFK_IdEmpresa());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdProducto")) {
			bodegaproductoSessionBean.setid_producto(this.getid_productoFK_IdProducto());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
			bodegaproductoSessionBean.setid_sucursal(this.getid_sucursalFK_IdSucursal());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdUnidad")) {
			bodegaproductoSessionBean.setid_unidad(this.getid_unidadFK_IdUnidad());	
		}
		
	}
	
	public void traerDatosBusquedaDesdeSession() throws Exception {
		//BodegaProductoSessionBean bodegaproductoSessionBean=new BodegaProductoSessionBean();
		
		if(this.bodegaproductoSessionBean==null) {
			this.bodegaproductoSessionBean=new BodegaProductoSessionBean();
		}
		
		if(this.bodegaproductoSessionBean.getsUltimaBusquedaBodegaProducto()!=null&&!this.bodegaproductoSessionBean.getsUltimaBusquedaBodegaProducto().equals("")) {
			this.setsAccionBusqueda(bodegaproductoSessionBean.getsUltimaBusquedaBodegaProducto());
			this.setiNumeroPaginacion(bodegaproductoSessionBean.getiNumeroPaginacion());
			this.setiNumeroPaginacionPagina(bodegaproductoSessionBean.getiNumeroPaginacionPagina());		
				
			if(this.getsAccionBusqueda().equals("Todos")) {
				;
			}
			

			 else if(this.getsAccionBusqueda().equals("FK_IdBodega")) {
				this.setid_bodegaFK_IdBodega(bodegaproductoSessionBean.getid_bodega());
				bodegaproductoSessionBean.setid_bodega(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdCentroCosto")) {
				this.setid_centro_costoFK_IdCentroCosto(bodegaproductoSessionBean.getid_centro_costo());
				bodegaproductoSessionBean.setid_centro_costo(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdCuentaContableCostoVenta")) {
				this.setid_cuenta_contable_costo_ventaFK_IdCuentaContableCostoVenta(bodegaproductoSessionBean.getid_cuenta_contable_costo_venta());
				bodegaproductoSessionBean.setid_cuenta_contable_costo_venta(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdCuentaContableIngresoCredito")) {
				this.setid_cuenta_contable_ingreso_creditoFK_IdCuentaContableIngresoCredito(bodegaproductoSessionBean.getid_cuenta_contable_ingreso_credito());
				bodegaproductoSessionBean.setid_cuenta_contable_ingreso_credito(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdCuentaContableIngresoDebito")) {
				this.setid_cuenta_contable_ingreso_debitoFK_IdCuentaContableIngresoDebito(bodegaproductoSessionBean.getid_cuenta_contable_ingreso_debito());
				bodegaproductoSessionBean.setid_cuenta_contable_ingreso_debito(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdCuentaContableProduccion")) {
				this.setid_cuenta_contable_produccionFK_IdCuentaContableProduccion(bodegaproductoSessionBean.getid_cuenta_contable_produccion());
				bodegaproductoSessionBean.setid_cuenta_contable_produccion(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdCuentaContableResultadoCredito")) {
				this.setid_cuenta_contable_resultado_creditoFK_IdCuentaContableResultadoCredito(bodegaproductoSessionBean.getid_cuenta_contable_resultado_credito());
				bodegaproductoSessionBean.setid_cuenta_contable_resultado_credito(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdCuentaContableResultadoDebito")) {
				this.setid_cuenta_contable_resultado_debitoFK_IdCuentaContableResultadoDebito(bodegaproductoSessionBean.getid_cuenta_contable_resultado_debito());
				bodegaproductoSessionBean.setid_cuenta_contable_resultado_debito(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdCuentaContableVenta")) {
				this.setid_cuenta_contable_ventaFK_IdCuentaContableVenta(bodegaproductoSessionBean.getid_cuenta_contable_venta());
				bodegaproductoSessionBean.setid_cuenta_contable_venta(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
				this.setid_empresaFK_IdEmpresa(bodegaproductoSessionBean.getid_empresa());
				bodegaproductoSessionBean.setid_empresa(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdProducto")) {
				this.setid_productoFK_IdProducto(bodegaproductoSessionBean.getid_producto());
				bodegaproductoSessionBean.setid_producto(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
				this.setid_sucursalFK_IdSucursal(bodegaproductoSessionBean.getid_sucursal());
				bodegaproductoSessionBean.setid_sucursal(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdUnidad")) {
				this.setid_unidadFK_IdUnidad(bodegaproductoSessionBean.getid_unidad());
				bodegaproductoSessionBean.setid_unidad(-1L);
			}
		}
		
		this.bodegaproductoSessionBean.setsUltimaBusquedaBodegaProducto("");
		this.bodegaproductoSessionBean.setiNumeroPaginacion(BodegaProductoConstantesFunciones.INUMEROPAGINACION);
		this.bodegaproductoSessionBean.setiNumeroPaginacionPagina(0);
		
	}
	
	public void procesoActualizarFilaTotales(Boolean esCampoValor,String sTipo) {
		try {
			this.actualizarFilaTotales();
				
			this.traerValoresTablaTotales();
			
			this.inicializarActualizarBindingTablaBodegaProducto(false);
			
			
			
			
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	
	public void updateBusquedasFormularioBodegaProducto() {
		this.updateBorderResaltarBusquedasFormularioBodegaProducto();
		this.updateVisibilidadBusquedasFormularioBodegaProducto();
		this.updateHabilitarBusquedasFormularioBodegaProducto();
	}
	
	public void updateBorderResaltarBusquedasFormularioBodegaProducto() {					
	//BYDAN_BUSQUEDAS
		
	int index=0;
		
	if(this.jTabbedPaneBusquedasBodegaProducto.getComponents().length>0) {
	

		if(this.bodegaproductoConstantesFunciones.resaltarFK_IdBodegaBodegaProducto!=null) {
			index= this.jTabbedPaneBusquedasBodegaProducto.indexOfComponent(this.jPanelFK_IdBodegaBodegaProducto);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasBodegaProducto.getComponent(index);
				jPanel.setBorder(this.bodegaproductoConstantesFunciones.resaltarFK_IdBodegaBodegaProducto);
			}
		}

		if(this.bodegaproductoConstantesFunciones.resaltarFK_IdCentroCostoBodegaProducto!=null) {
			index= this.jTabbedPaneBusquedasBodegaProducto.indexOfComponent(this.jPanelFK_IdCentroCostoBodegaProducto);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasBodegaProducto.getComponent(index);
				jPanel.setBorder(this.bodegaproductoConstantesFunciones.resaltarFK_IdCentroCostoBodegaProducto);
			}
		}

		if(this.bodegaproductoConstantesFunciones.resaltarFK_IdCuentaContableCostoVentaBodegaProducto!=null) {
			index= this.jTabbedPaneBusquedasBodegaProducto.indexOfComponent(this.jPanelFK_IdCuentaContableCostoVentaBodegaProducto);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasBodegaProducto.getComponent(index);
				jPanel.setBorder(this.bodegaproductoConstantesFunciones.resaltarFK_IdCuentaContableCostoVentaBodegaProducto);
			}
		}

		if(this.bodegaproductoConstantesFunciones.resaltarFK_IdCuentaContableIngresoCreditoBodegaProducto!=null) {
			index= this.jTabbedPaneBusquedasBodegaProducto.indexOfComponent(this.jPanelFK_IdCuentaContableIngresoCreditoBodegaProducto);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasBodegaProducto.getComponent(index);
				jPanel.setBorder(this.bodegaproductoConstantesFunciones.resaltarFK_IdCuentaContableIngresoCreditoBodegaProducto);
			}
		}

		if(this.bodegaproductoConstantesFunciones.resaltarFK_IdCuentaContableIngresoDebitoBodegaProducto!=null) {
			index= this.jTabbedPaneBusquedasBodegaProducto.indexOfComponent(this.jPanelFK_IdCuentaContableIngresoDebitoBodegaProducto);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasBodegaProducto.getComponent(index);
				jPanel.setBorder(this.bodegaproductoConstantesFunciones.resaltarFK_IdCuentaContableIngresoDebitoBodegaProducto);
			}
		}

		if(this.bodegaproductoConstantesFunciones.resaltarFK_IdCuentaContableProduccionBodegaProducto!=null) {
			index= this.jTabbedPaneBusquedasBodegaProducto.indexOfComponent(this.jPanelFK_IdCuentaContableProduccionBodegaProducto);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasBodegaProducto.getComponent(index);
				jPanel.setBorder(this.bodegaproductoConstantesFunciones.resaltarFK_IdCuentaContableProduccionBodegaProducto);
			}
		}

		if(this.bodegaproductoConstantesFunciones.resaltarFK_IdCuentaContableResultadoCreditoBodegaProducto!=null) {
			index= this.jTabbedPaneBusquedasBodegaProducto.indexOfComponent(this.jPanelFK_IdCuentaContableResultadoCreditoBodegaProducto);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasBodegaProducto.getComponent(index);
				jPanel.setBorder(this.bodegaproductoConstantesFunciones.resaltarFK_IdCuentaContableResultadoCreditoBodegaProducto);
			}
		}

		if(this.bodegaproductoConstantesFunciones.resaltarFK_IdCuentaContableResultadoDebitoBodegaProducto!=null) {
			index= this.jTabbedPaneBusquedasBodegaProducto.indexOfComponent(this.jPanelFK_IdCuentaContableResultadoDebitoBodegaProducto);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasBodegaProducto.getComponent(index);
				jPanel.setBorder(this.bodegaproductoConstantesFunciones.resaltarFK_IdCuentaContableResultadoDebitoBodegaProducto);
			}
		}

		if(this.bodegaproductoConstantesFunciones.resaltarFK_IdCuentaContableVentaBodegaProducto!=null) {
			index= this.jTabbedPaneBusquedasBodegaProducto.indexOfComponent(this.jPanelFK_IdCuentaContableVentaBodegaProducto);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasBodegaProducto.getComponent(index);
				jPanel.setBorder(this.bodegaproductoConstantesFunciones.resaltarFK_IdCuentaContableVentaBodegaProducto);
			}
		}

		if(this.bodegaproductoConstantesFunciones.resaltarFK_IdProductoBodegaProducto!=null) {
			index= this.jTabbedPaneBusquedasBodegaProducto.indexOfComponent(this.jPanelFK_IdProductoBodegaProducto);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasBodegaProducto.getComponent(index);
				jPanel.setBorder(this.bodegaproductoConstantesFunciones.resaltarFK_IdProductoBodegaProducto);
			}
		}

		if(this.bodegaproductoConstantesFunciones.resaltarFK_IdUnidadBodegaProducto!=null) {
			index= this.jTabbedPaneBusquedasBodegaProducto.indexOfComponent(this.jPanelFK_IdUnidadBodegaProducto);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasBodegaProducto.getComponent(index);
				jPanel.setBorder(this.bodegaproductoConstantesFunciones.resaltarFK_IdUnidadBodegaProducto);
			}
		}
	}	
	
	}
	
	public void updateVisibilidadBusquedasFormularioBodegaProducto() {
	//BYDAN_BUSQUEDAS
	
	int index=0;
	JPanel jPanel=null;
		
	if(this.jTabbedPaneBusquedasBodegaProducto.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasBodegaProducto.indexOfComponent(this.jPanelFK_IdBodegaBodegaProducto);
			jPanel=(JPanel)this.jTabbedPaneBusquedasBodegaProducto.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.bodegaproductoConstantesFunciones.mostrarFK_IdBodegaBodegaProducto);
			if(!this.bodegaproductoConstantesFunciones.mostrarFK_IdBodegaBodegaProducto && index>-1) {
				this.jTabbedPaneBusquedasBodegaProducto.remove(index);
			}

			index= this.jTabbedPaneBusquedasBodegaProducto.indexOfComponent(this.jPanelFK_IdCentroCostoBodegaProducto);
			jPanel=(JPanel)this.jTabbedPaneBusquedasBodegaProducto.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.bodegaproductoConstantesFunciones.mostrarFK_IdCentroCostoBodegaProducto);
			if(!this.bodegaproductoConstantesFunciones.mostrarFK_IdCentroCostoBodegaProducto && index>-1) {
				this.jTabbedPaneBusquedasBodegaProducto.remove(index);
			}

			index= this.jTabbedPaneBusquedasBodegaProducto.indexOfComponent(this.jPanelFK_IdCuentaContableCostoVentaBodegaProducto);
			jPanel=(JPanel)this.jTabbedPaneBusquedasBodegaProducto.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.bodegaproductoConstantesFunciones.mostrarFK_IdCuentaContableCostoVentaBodegaProducto);
			if(!this.bodegaproductoConstantesFunciones.mostrarFK_IdCuentaContableCostoVentaBodegaProducto && index>-1) {
				this.jTabbedPaneBusquedasBodegaProducto.remove(index);
			}

			index= this.jTabbedPaneBusquedasBodegaProducto.indexOfComponent(this.jPanelFK_IdCuentaContableIngresoCreditoBodegaProducto);
			jPanel=(JPanel)this.jTabbedPaneBusquedasBodegaProducto.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.bodegaproductoConstantesFunciones.mostrarFK_IdCuentaContableIngresoCreditoBodegaProducto);
			if(!this.bodegaproductoConstantesFunciones.mostrarFK_IdCuentaContableIngresoCreditoBodegaProducto && index>-1) {
				this.jTabbedPaneBusquedasBodegaProducto.remove(index);
			}

			index= this.jTabbedPaneBusquedasBodegaProducto.indexOfComponent(this.jPanelFK_IdCuentaContableIngresoDebitoBodegaProducto);
			jPanel=(JPanel)this.jTabbedPaneBusquedasBodegaProducto.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.bodegaproductoConstantesFunciones.mostrarFK_IdCuentaContableIngresoDebitoBodegaProducto);
			if(!this.bodegaproductoConstantesFunciones.mostrarFK_IdCuentaContableIngresoDebitoBodegaProducto && index>-1) {
				this.jTabbedPaneBusquedasBodegaProducto.remove(index);
			}

			index= this.jTabbedPaneBusquedasBodegaProducto.indexOfComponent(this.jPanelFK_IdCuentaContableProduccionBodegaProducto);
			jPanel=(JPanel)this.jTabbedPaneBusquedasBodegaProducto.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.bodegaproductoConstantesFunciones.mostrarFK_IdCuentaContableProduccionBodegaProducto);
			if(!this.bodegaproductoConstantesFunciones.mostrarFK_IdCuentaContableProduccionBodegaProducto && index>-1) {
				this.jTabbedPaneBusquedasBodegaProducto.remove(index);
			}

			index= this.jTabbedPaneBusquedasBodegaProducto.indexOfComponent(this.jPanelFK_IdCuentaContableResultadoCreditoBodegaProducto);
			jPanel=(JPanel)this.jTabbedPaneBusquedasBodegaProducto.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.bodegaproductoConstantesFunciones.mostrarFK_IdCuentaContableResultadoCreditoBodegaProducto);
			if(!this.bodegaproductoConstantesFunciones.mostrarFK_IdCuentaContableResultadoCreditoBodegaProducto && index>-1) {
				this.jTabbedPaneBusquedasBodegaProducto.remove(index);
			}

			index= this.jTabbedPaneBusquedasBodegaProducto.indexOfComponent(this.jPanelFK_IdCuentaContableResultadoDebitoBodegaProducto);
			jPanel=(JPanel)this.jTabbedPaneBusquedasBodegaProducto.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.bodegaproductoConstantesFunciones.mostrarFK_IdCuentaContableResultadoDebitoBodegaProducto);
			if(!this.bodegaproductoConstantesFunciones.mostrarFK_IdCuentaContableResultadoDebitoBodegaProducto && index>-1) {
				this.jTabbedPaneBusquedasBodegaProducto.remove(index);
			}

			index= this.jTabbedPaneBusquedasBodegaProducto.indexOfComponent(this.jPanelFK_IdCuentaContableVentaBodegaProducto);
			jPanel=(JPanel)this.jTabbedPaneBusquedasBodegaProducto.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.bodegaproductoConstantesFunciones.mostrarFK_IdCuentaContableVentaBodegaProducto);
			if(!this.bodegaproductoConstantesFunciones.mostrarFK_IdCuentaContableVentaBodegaProducto && index>-1) {
				this.jTabbedPaneBusquedasBodegaProducto.remove(index);
			}

			index= this.jTabbedPaneBusquedasBodegaProducto.indexOfComponent(this.jPanelFK_IdProductoBodegaProducto);
			jPanel=(JPanel)this.jTabbedPaneBusquedasBodegaProducto.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.bodegaproductoConstantesFunciones.mostrarFK_IdProductoBodegaProducto);
			if(!this.bodegaproductoConstantesFunciones.mostrarFK_IdProductoBodegaProducto && index>-1) {
				this.jTabbedPaneBusquedasBodegaProducto.remove(index);
			}

			index= this.jTabbedPaneBusquedasBodegaProducto.indexOfComponent(this.jPanelFK_IdUnidadBodegaProducto);
			jPanel=(JPanel)this.jTabbedPaneBusquedasBodegaProducto.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.bodegaproductoConstantesFunciones.mostrarFK_IdUnidadBodegaProducto);
			if(!this.bodegaproductoConstantesFunciones.mostrarFK_IdUnidadBodegaProducto && index>-1) {
				this.jTabbedPaneBusquedasBodegaProducto.remove(index);
			}
	}	
	
	}
	
	public void updateHabilitarBusquedasFormularioBodegaProducto() {
	
	//BYDAN_BUSQUEDAS		
		int index=0;
		JPanel jPanel=null;
			
		if(this.jTabbedPaneBusquedasBodegaProducto.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasBodegaProducto.indexOfComponent(this.jPanelFK_IdBodegaBodegaProducto);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasBodegaProducto.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.bodegaproductoConstantesFunciones.activarFK_IdBodegaBodegaProducto);
				this.jTabbedPaneBusquedasBodegaProducto.setEnabledAt(index,this.bodegaproductoConstantesFunciones.activarFK_IdBodegaBodegaProducto);
			}

			index= this.jTabbedPaneBusquedasBodegaProducto.indexOfComponent(this.jPanelFK_IdCentroCostoBodegaProducto);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasBodegaProducto.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.bodegaproductoConstantesFunciones.activarFK_IdCentroCostoBodegaProducto);
				this.jTabbedPaneBusquedasBodegaProducto.setEnabledAt(index,this.bodegaproductoConstantesFunciones.activarFK_IdCentroCostoBodegaProducto);
			}

			index= this.jTabbedPaneBusquedasBodegaProducto.indexOfComponent(this.jPanelFK_IdCuentaContableCostoVentaBodegaProducto);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasBodegaProducto.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.bodegaproductoConstantesFunciones.activarFK_IdCuentaContableCostoVentaBodegaProducto);
				this.jTabbedPaneBusquedasBodegaProducto.setEnabledAt(index,this.bodegaproductoConstantesFunciones.activarFK_IdCuentaContableCostoVentaBodegaProducto);
			}

			index= this.jTabbedPaneBusquedasBodegaProducto.indexOfComponent(this.jPanelFK_IdCuentaContableIngresoCreditoBodegaProducto);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasBodegaProducto.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.bodegaproductoConstantesFunciones.activarFK_IdCuentaContableIngresoCreditoBodegaProducto);
				this.jTabbedPaneBusquedasBodegaProducto.setEnabledAt(index,this.bodegaproductoConstantesFunciones.activarFK_IdCuentaContableIngresoCreditoBodegaProducto);
			}

			index= this.jTabbedPaneBusquedasBodegaProducto.indexOfComponent(this.jPanelFK_IdCuentaContableIngresoDebitoBodegaProducto);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasBodegaProducto.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.bodegaproductoConstantesFunciones.activarFK_IdCuentaContableIngresoDebitoBodegaProducto);
				this.jTabbedPaneBusquedasBodegaProducto.setEnabledAt(index,this.bodegaproductoConstantesFunciones.activarFK_IdCuentaContableIngresoDebitoBodegaProducto);
			}

			index= this.jTabbedPaneBusquedasBodegaProducto.indexOfComponent(this.jPanelFK_IdCuentaContableProduccionBodegaProducto);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasBodegaProducto.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.bodegaproductoConstantesFunciones.activarFK_IdCuentaContableProduccionBodegaProducto);
				this.jTabbedPaneBusquedasBodegaProducto.setEnabledAt(index,this.bodegaproductoConstantesFunciones.activarFK_IdCuentaContableProduccionBodegaProducto);
			}

			index= this.jTabbedPaneBusquedasBodegaProducto.indexOfComponent(this.jPanelFK_IdCuentaContableResultadoCreditoBodegaProducto);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasBodegaProducto.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.bodegaproductoConstantesFunciones.activarFK_IdCuentaContableResultadoCreditoBodegaProducto);
				this.jTabbedPaneBusquedasBodegaProducto.setEnabledAt(index,this.bodegaproductoConstantesFunciones.activarFK_IdCuentaContableResultadoCreditoBodegaProducto);
			}

			index= this.jTabbedPaneBusquedasBodegaProducto.indexOfComponent(this.jPanelFK_IdCuentaContableResultadoDebitoBodegaProducto);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasBodegaProducto.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.bodegaproductoConstantesFunciones.activarFK_IdCuentaContableResultadoDebitoBodegaProducto);
				this.jTabbedPaneBusquedasBodegaProducto.setEnabledAt(index,this.bodegaproductoConstantesFunciones.activarFK_IdCuentaContableResultadoDebitoBodegaProducto);
			}

			index= this.jTabbedPaneBusquedasBodegaProducto.indexOfComponent(this.jPanelFK_IdCuentaContableVentaBodegaProducto);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasBodegaProducto.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.bodegaproductoConstantesFunciones.activarFK_IdCuentaContableVentaBodegaProducto);
				this.jTabbedPaneBusquedasBodegaProducto.setEnabledAt(index,this.bodegaproductoConstantesFunciones.activarFK_IdCuentaContableVentaBodegaProducto);
			}

			index= this.jTabbedPaneBusquedasBodegaProducto.indexOfComponent(this.jPanelFK_IdProductoBodegaProducto);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasBodegaProducto.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.bodegaproductoConstantesFunciones.activarFK_IdProductoBodegaProducto);
				this.jTabbedPaneBusquedasBodegaProducto.setEnabledAt(index,this.bodegaproductoConstantesFunciones.activarFK_IdProductoBodegaProducto);
			}

			index= this.jTabbedPaneBusquedasBodegaProducto.indexOfComponent(this.jPanelFK_IdUnidadBodegaProducto);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasBodegaProducto.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.bodegaproductoConstantesFunciones.activarFK_IdUnidadBodegaProducto);
				this.jTabbedPaneBusquedasBodegaProducto.setEnabledAt(index,this.bodegaproductoConstantesFunciones.activarFK_IdUnidadBodegaProducto);
			}
		}	
	
	}
	
	
	public void resaltarPanelBusquedaBodegaProducto(String sTipoBusqueda) {
		Boolean existe=false;
		//BYDAN_BUSQUEDAS
		
		int index=0;
		Border resaltar = Funciones2.getBorderResaltar(this.parametroGeneralUsuario,"TAB");

		if(sTipoBusqueda.equals("FK_IdBodega")) {
			index= this.jTabbedPaneBusquedasBodegaProducto.indexOfComponent(this.jPanelFK_IdBodegaBodegaProducto);

			this.jTabbedPaneBusquedasBodegaProducto.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasBodegaProducto.getComponent(index);

			this.bodegaproductoConstantesFunciones.setResaltarFK_IdBodegaBodegaProducto(resaltar);

			jPanel.setBorder(this.bodegaproductoConstantesFunciones.resaltarFK_IdBodegaBodegaProducto);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdCentroCosto")) {
			index= this.jTabbedPaneBusquedasBodegaProducto.indexOfComponent(this.jPanelFK_IdCentroCostoBodegaProducto);

			this.jTabbedPaneBusquedasBodegaProducto.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasBodegaProducto.getComponent(index);

			this.bodegaproductoConstantesFunciones.setResaltarFK_IdCentroCostoBodegaProducto(resaltar);

			jPanel.setBorder(this.bodegaproductoConstantesFunciones.resaltarFK_IdCentroCostoBodegaProducto);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdCuentaContableCostoVenta")) {
			index= this.jTabbedPaneBusquedasBodegaProducto.indexOfComponent(this.jPanelFK_IdCuentaContableCostoVentaBodegaProducto);

			this.jTabbedPaneBusquedasBodegaProducto.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasBodegaProducto.getComponent(index);

			this.bodegaproductoConstantesFunciones.setResaltarFK_IdCuentaContableCostoVentaBodegaProducto(resaltar);

			jPanel.setBorder(this.bodegaproductoConstantesFunciones.resaltarFK_IdCuentaContableCostoVentaBodegaProducto);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdCuentaContableIngresoCredito")) {
			index= this.jTabbedPaneBusquedasBodegaProducto.indexOfComponent(this.jPanelFK_IdCuentaContableIngresoCreditoBodegaProducto);

			this.jTabbedPaneBusquedasBodegaProducto.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasBodegaProducto.getComponent(index);

			this.bodegaproductoConstantesFunciones.setResaltarFK_IdCuentaContableIngresoCreditoBodegaProducto(resaltar);

			jPanel.setBorder(this.bodegaproductoConstantesFunciones.resaltarFK_IdCuentaContableIngresoCreditoBodegaProducto);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdCuentaContableIngresoDebito")) {
			index= this.jTabbedPaneBusquedasBodegaProducto.indexOfComponent(this.jPanelFK_IdCuentaContableIngresoDebitoBodegaProducto);

			this.jTabbedPaneBusquedasBodegaProducto.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasBodegaProducto.getComponent(index);

			this.bodegaproductoConstantesFunciones.setResaltarFK_IdCuentaContableIngresoDebitoBodegaProducto(resaltar);

			jPanel.setBorder(this.bodegaproductoConstantesFunciones.resaltarFK_IdCuentaContableIngresoDebitoBodegaProducto);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdCuentaContableProduccion")) {
			index= this.jTabbedPaneBusquedasBodegaProducto.indexOfComponent(this.jPanelFK_IdCuentaContableProduccionBodegaProducto);

			this.jTabbedPaneBusquedasBodegaProducto.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasBodegaProducto.getComponent(index);

			this.bodegaproductoConstantesFunciones.setResaltarFK_IdCuentaContableProduccionBodegaProducto(resaltar);

			jPanel.setBorder(this.bodegaproductoConstantesFunciones.resaltarFK_IdCuentaContableProduccionBodegaProducto);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdCuentaContableResultadoCredito")) {
			index= this.jTabbedPaneBusquedasBodegaProducto.indexOfComponent(this.jPanelFK_IdCuentaContableResultadoCreditoBodegaProducto);

			this.jTabbedPaneBusquedasBodegaProducto.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasBodegaProducto.getComponent(index);

			this.bodegaproductoConstantesFunciones.setResaltarFK_IdCuentaContableResultadoCreditoBodegaProducto(resaltar);

			jPanel.setBorder(this.bodegaproductoConstantesFunciones.resaltarFK_IdCuentaContableResultadoCreditoBodegaProducto);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdCuentaContableResultadoDebito")) {
			index= this.jTabbedPaneBusquedasBodegaProducto.indexOfComponent(this.jPanelFK_IdCuentaContableResultadoDebitoBodegaProducto);

			this.jTabbedPaneBusquedasBodegaProducto.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasBodegaProducto.getComponent(index);

			this.bodegaproductoConstantesFunciones.setResaltarFK_IdCuentaContableResultadoDebitoBodegaProducto(resaltar);

			jPanel.setBorder(this.bodegaproductoConstantesFunciones.resaltarFK_IdCuentaContableResultadoDebitoBodegaProducto);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdCuentaContableVenta")) {
			index= this.jTabbedPaneBusquedasBodegaProducto.indexOfComponent(this.jPanelFK_IdCuentaContableVentaBodegaProducto);

			this.jTabbedPaneBusquedasBodegaProducto.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasBodegaProducto.getComponent(index);

			this.bodegaproductoConstantesFunciones.setResaltarFK_IdCuentaContableVentaBodegaProducto(resaltar);

			jPanel.setBorder(this.bodegaproductoConstantesFunciones.resaltarFK_IdCuentaContableVentaBodegaProducto);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdProducto")) {
			index= this.jTabbedPaneBusquedasBodegaProducto.indexOfComponent(this.jPanelFK_IdProductoBodegaProducto);

			this.jTabbedPaneBusquedasBodegaProducto.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasBodegaProducto.getComponent(index);

			this.bodegaproductoConstantesFunciones.setResaltarFK_IdProductoBodegaProducto(resaltar);

			jPanel.setBorder(this.bodegaproductoConstantesFunciones.resaltarFK_IdProductoBodegaProducto);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdUnidad")) {
			index= this.jTabbedPaneBusquedasBodegaProducto.indexOfComponent(this.jPanelFK_IdUnidadBodegaProducto);

			this.jTabbedPaneBusquedasBodegaProducto.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasBodegaProducto.getComponent(index);

			this.bodegaproductoConstantesFunciones.setResaltarFK_IdUnidadBodegaProducto(resaltar);

			jPanel.setBorder(this.bodegaproductoConstantesFunciones.resaltarFK_IdUnidadBodegaProducto);
			existe=true;
		}
		

		if(existe) {
			
			this.jTtoolBarBodegaProducto.setBorder(resaltar);
			
		}
	}	
	
	//NO FUNCIONA
	public void windowClosed(WindowEvent e) {	
	}
		
	public void windowClosing(WindowEvent e) {	    	    
	}

	public void windowOpened(WindowEvent e) {	    
	}

	public void windowIconified(WindowEvent e) {	    
	}

	public void windowDeiconified(WindowEvent e) {	    
	}

	public void windowActivated(WindowEvent e) {	    
	}

	public void windowDeactivated(WindowEvent e) {	    
	}

	public void windowGainedFocus(WindowEvent e) {	    
	}

	public void windowLostFocus(WindowEvent e) {	    
	}
	
	public void updateControlesFormularioBodegaProducto() throws Exception {

		if(this.jInternalFrameDetalleFormBodegaProducto==null) { //if(!this.conCargarFormDetalle) {			
			this.inicializarFormDetalle();
		}
		
		this.updateBorderResaltarControlesFormularioBodegaProducto();
		this.updateVisibilidadResaltarControlesFormularioBodegaProducto();
		this.updateHabilitarResaltarControlesFormularioBodegaProducto();
		
	}
	
	public void updateBorderResaltarControlesFormularioBodegaProducto() throws Exception {
		if(this.jInternalFrameDetalleFormBodegaProducto==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
	
		if(this.bodegaproductoConstantesFunciones.resaltaridBodegaProducto!=null && this.jInternalFrameDetalleFormBodegaProducto!=null) {this.jInternalFrameDetalleFormBodegaProducto.jLabelidBodegaProducto.setBorder(this.bodegaproductoConstantesFunciones.resaltaridBodegaProducto);}
		if(this.bodegaproductoConstantesFunciones.resaltarid_empresaBodegaProducto!=null && this.jInternalFrameDetalleFormBodegaProducto!=null) {this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_empresaBodegaProducto.setBorder(this.bodegaproductoConstantesFunciones.resaltarid_empresaBodegaProducto);}
		if(this.bodegaproductoConstantesFunciones.resaltarid_sucursalBodegaProducto!=null && this.jInternalFrameDetalleFormBodegaProducto!=null) {this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_sucursalBodegaProducto.setBorder(this.bodegaproductoConstantesFunciones.resaltarid_sucursalBodegaProducto);}
		if(this.bodegaproductoConstantesFunciones.resaltarid_bodegaBodegaProducto!=null && this.jInternalFrameDetalleFormBodegaProducto!=null) {this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_bodegaBodegaProducto.setBorder(this.bodegaproductoConstantesFunciones.resaltarid_bodegaBodegaProducto);}
		if(this.bodegaproductoConstantesFunciones.resaltarid_productoBodegaProducto!=null && this.jInternalFrameDetalleFormBodegaProducto!=null) {this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_productoBodegaProducto.setBorder(this.bodegaproductoConstantesFunciones.resaltarid_productoBodegaProducto);}
		if(this.bodegaproductoConstantesFunciones.resaltarid_unidadBodegaProducto!=null && this.jInternalFrameDetalleFormBodegaProducto!=null) {this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_unidadBodegaProducto.setBorder(this.bodegaproductoConstantesFunciones.resaltarid_unidadBodegaProducto);}
		if(this.bodegaproductoConstantesFunciones.resaltarid_centro_costoBodegaProducto!=null && this.jInternalFrameDetalleFormBodegaProducto!=null) {this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_centro_costoBodegaProducto.setBorder(this.bodegaproductoConstantesFunciones.resaltarid_centro_costoBodegaProducto);}
		if(this.bodegaproductoConstantesFunciones.resaltarid_estado_bodega_productoBodegaProducto!=null && this.jInternalFrameDetalleFormBodegaProducto!=null) {this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_estado_bodega_productoBodegaProducto.setBorder(this.bodegaproductoConstantesFunciones.resaltarid_estado_bodega_productoBodegaProducto);}
		if(this.bodegaproductoConstantesFunciones.resaltardescripcionBodegaProducto!=null && this.jInternalFrameDetalleFormBodegaProducto!=null) {this.jInternalFrameDetalleFormBodegaProducto.jTextAreadescripcionBodegaProducto.setBorder(this.bodegaproductoConstantesFunciones.resaltardescripcionBodegaProducto);}
		if(this.bodegaproductoConstantesFunciones.resaltarcantidad_disponibleBodegaProducto!=null && this.jInternalFrameDetalleFormBodegaProducto!=null) {this.jInternalFrameDetalleFormBodegaProducto.jTextFieldcantidad_disponibleBodegaProducto.setBorder(this.bodegaproductoConstantesFunciones.resaltarcantidad_disponibleBodegaProducto);}
		if(this.bodegaproductoConstantesFunciones.resaltarstock_maximoBodegaProducto!=null && this.jInternalFrameDetalleFormBodegaProducto!=null) {this.jInternalFrameDetalleFormBodegaProducto.jTextFieldstock_maximoBodegaProducto.setBorder(this.bodegaproductoConstantesFunciones.resaltarstock_maximoBodegaProducto);}
		if(this.bodegaproductoConstantesFunciones.resaltarstock_minimoBodegaProducto!=null && this.jInternalFrameDetalleFormBodegaProducto!=null) {this.jInternalFrameDetalleFormBodegaProducto.jTextFieldstock_minimoBodegaProducto.setBorder(this.bodegaproductoConstantesFunciones.resaltarstock_minimoBodegaProducto);}
		if(this.bodegaproductoConstantesFunciones.resaltarivaBodegaProducto!=null && this.jInternalFrameDetalleFormBodegaProducto!=null) {this.jInternalFrameDetalleFormBodegaProducto.jTextFieldivaBodegaProducto.setBorder(this.bodegaproductoConstantesFunciones.resaltarivaBodegaProducto);}
		if(this.bodegaproductoConstantesFunciones.resaltariva_valorBodegaProducto!=null && this.jInternalFrameDetalleFormBodegaProducto!=null) {this.jInternalFrameDetalleFormBodegaProducto.jTextFieldiva_valorBodegaProducto.setBorder(this.bodegaproductoConstantesFunciones.resaltariva_valorBodegaProducto);}
		if(this.bodegaproductoConstantesFunciones.resaltardescuentoBodegaProducto!=null && this.jInternalFrameDetalleFormBodegaProducto!=null) {this.jInternalFrameDetalleFormBodegaProducto.jTextFielddescuentoBodegaProducto.setBorder(this.bodegaproductoConstantesFunciones.resaltardescuentoBodegaProducto);}
		if(this.bodegaproductoConstantesFunciones.resaltardescuento_valorBodegaProducto!=null && this.jInternalFrameDetalleFormBodegaProducto!=null) {this.jInternalFrameDetalleFormBodegaProducto.jTextFielddescuento_valorBodegaProducto.setBorder(this.bodegaproductoConstantesFunciones.resaltardescuento_valorBodegaProducto);}
		if(this.bodegaproductoConstantesFunciones.resaltariceBodegaProducto!=null && this.jInternalFrameDetalleFormBodegaProducto!=null) {this.jInternalFrameDetalleFormBodegaProducto.jTextFieldiceBodegaProducto.setBorder(this.bodegaproductoConstantesFunciones.resaltariceBodegaProducto);}
		if(this.bodegaproductoConstantesFunciones.resaltarice_valorBodegaProducto!=null && this.jInternalFrameDetalleFormBodegaProducto!=null) {this.jInternalFrameDetalleFormBodegaProducto.jTextFieldice_valorBodegaProducto.setBorder(this.bodegaproductoConstantesFunciones.resaltarice_valorBodegaProducto);}
		if(this.bodegaproductoConstantesFunciones.resaltarcosto_promedioBodegaProducto!=null && this.jInternalFrameDetalleFormBodegaProducto!=null) {this.jInternalFrameDetalleFormBodegaProducto.jTextFieldcosto_promedioBodegaProducto.setBorder(this.bodegaproductoConstantesFunciones.resaltarcosto_promedioBodegaProducto);}
		if(this.bodegaproductoConstantesFunciones.resaltarporcentaje_comisionBodegaProducto!=null && this.jInternalFrameDetalleFormBodegaProducto!=null) {this.jInternalFrameDetalleFormBodegaProducto.jTextFieldporcentaje_comisionBodegaProducto.setBorder(this.bodegaproductoConstantesFunciones.resaltarporcentaje_comisionBodegaProducto);}
		if(this.bodegaproductoConstantesFunciones.resaltarprecioBodegaProducto!=null && this.jInternalFrameDetalleFormBodegaProducto!=null) {this.jInternalFrameDetalleFormBodegaProducto.jTextFieldprecioBodegaProducto.setBorder(this.bodegaproductoConstantesFunciones.resaltarprecioBodegaProducto);}
		if(this.bodegaproductoConstantesFunciones.resaltarultimo_costoBodegaProducto!=null && this.jInternalFrameDetalleFormBodegaProducto!=null) {this.jInternalFrameDetalleFormBodegaProducto.jTextFieldultimo_costoBodegaProducto.setBorder(this.bodegaproductoConstantesFunciones.resaltarultimo_costoBodegaProducto);}
		if(this.bodegaproductoConstantesFunciones.resaltarcostoBodegaProducto!=null && this.jInternalFrameDetalleFormBodegaProducto!=null) {this.jInternalFrameDetalleFormBodegaProducto.jTextFieldcostoBodegaProducto.setBorder(this.bodegaproductoConstantesFunciones.resaltarcostoBodegaProducto);}
		if(this.bodegaproductoConstantesFunciones.resaltararancel_porcentajeBodegaProducto!=null && this.jInternalFrameDetalleFormBodegaProducto!=null) {this.jInternalFrameDetalleFormBodegaProducto.jTextFieldarancel_porcentajeBodegaProducto.setBorder(this.bodegaproductoConstantesFunciones.resaltararancel_porcentajeBodegaProducto);}
		if(this.bodegaproductoConstantesFunciones.resaltarice_porcentajeBodegaProducto!=null && this.jInternalFrameDetalleFormBodegaProducto!=null) {this.jInternalFrameDetalleFormBodegaProducto.jTextFieldice_porcentajeBodegaProducto.setBorder(this.bodegaproductoConstantesFunciones.resaltarice_porcentajeBodegaProducto);}
		if(this.bodegaproductoConstantesFunciones.resaltarpesoBodegaProducto!=null && this.jInternalFrameDetalleFormBodegaProducto!=null) {this.jInternalFrameDetalleFormBodegaProducto.jTextFieldpesoBodegaProducto.setBorder(this.bodegaproductoConstantesFunciones.resaltarpesoBodegaProducto);}
		if(this.bodegaproductoConstantesFunciones.resaltarcon_ivaBodegaProducto!=null && this.jInternalFrameDetalleFormBodegaProducto!=null) {this.jInternalFrameDetalleFormBodegaProducto.jCheckBoxcon_ivaBodegaProducto.setBorderPainted(true);this.jInternalFrameDetalleFormBodegaProducto.jCheckBoxcon_ivaBodegaProducto.setBorder(this.bodegaproductoConstantesFunciones.resaltarcon_ivaBodegaProducto);}
		if(this.bodegaproductoConstantesFunciones.resaltarcon_impuestoBodegaProducto!=null && this.jInternalFrameDetalleFormBodegaProducto!=null) {this.jInternalFrameDetalleFormBodegaProducto.jCheckBoxcon_impuestoBodegaProducto.setBorderPainted(true);this.jInternalFrameDetalleFormBodegaProducto.jCheckBoxcon_impuestoBodegaProducto.setBorder(this.bodegaproductoConstantesFunciones.resaltarcon_impuestoBodegaProducto);}
		if(this.bodegaproductoConstantesFunciones.resaltarcon_iceBodegaProducto!=null && this.jInternalFrameDetalleFormBodegaProducto!=null) {this.jInternalFrameDetalleFormBodegaProducto.jCheckBoxcon_iceBodegaProducto.setBorderPainted(true);this.jInternalFrameDetalleFormBodegaProducto.jCheckBoxcon_iceBodegaProducto.setBorder(this.bodegaproductoConstantesFunciones.resaltarcon_iceBodegaProducto);}
		if(this.bodegaproductoConstantesFunciones.resaltaresta_activoBodegaProducto!=null && this.jInternalFrameDetalleFormBodegaProducto!=null) {this.jInternalFrameDetalleFormBodegaProducto.jCheckBoxesta_activoBodegaProducto.setBorderPainted(true);this.jInternalFrameDetalleFormBodegaProducto.jCheckBoxesta_activoBodegaProducto.setBorder(this.bodegaproductoConstantesFunciones.resaltaresta_activoBodegaProducto);}
		if(this.bodegaproductoConstantesFunciones.resaltarcon_balanzaBodegaProducto!=null && this.jInternalFrameDetalleFormBodegaProducto!=null) {this.jInternalFrameDetalleFormBodegaProducto.jCheckBoxcon_balanzaBodegaProducto.setBorderPainted(true);this.jInternalFrameDetalleFormBodegaProducto.jCheckBoxcon_balanzaBodegaProducto.setBorder(this.bodegaproductoConstantesFunciones.resaltarcon_balanzaBodegaProducto);}
		if(this.bodegaproductoConstantesFunciones.resaltarcantidad_pedidaBodegaProducto!=null && this.jInternalFrameDetalleFormBodegaProducto!=null) {this.jInternalFrameDetalleFormBodegaProducto.jTextFieldcantidad_pedidaBodegaProducto.setBorder(this.bodegaproductoConstantesFunciones.resaltarcantidad_pedidaBodegaProducto);}
		if(this.bodegaproductoConstantesFunciones.resaltarcantidad_fisicaBodegaProducto!=null && this.jInternalFrameDetalleFormBodegaProducto!=null) {this.jInternalFrameDetalleFormBodegaProducto.jTextFieldcantidad_fisicaBodegaProducto.setBorder(this.bodegaproductoConstantesFunciones.resaltarcantidad_fisicaBodegaProducto);}
		if(this.bodegaproductoConstantesFunciones.resaltarcantidad_requeridoBodegaProducto!=null && this.jInternalFrameDetalleFormBodegaProducto!=null) {this.jInternalFrameDetalleFormBodegaProducto.jTextFieldcantidad_requeridoBodegaProducto.setBorder(this.bodegaproductoConstantesFunciones.resaltarcantidad_requeridoBodegaProducto);}
		if(this.bodegaproductoConstantesFunciones.resaltarprecio_costoBodegaProducto!=null && this.jInternalFrameDetalleFormBodegaProducto!=null) {this.jInternalFrameDetalleFormBodegaProducto.jTextFieldprecio_costoBodegaProducto.setBorder(this.bodegaproductoConstantesFunciones.resaltarprecio_costoBodegaProducto);}
		if(this.bodegaproductoConstantesFunciones.resaltarprecio_promedioBodegaProducto!=null && this.jInternalFrameDetalleFormBodegaProducto!=null) {this.jInternalFrameDetalleFormBodegaProducto.jTextFieldprecio_promedioBodegaProducto.setBorder(this.bodegaproductoConstantesFunciones.resaltarprecio_promedioBodegaProducto);}
		if(this.bodegaproductoConstantesFunciones.resaltartotal_ingresosBodegaProducto!=null && this.jInternalFrameDetalleFormBodegaProducto!=null) {this.jInternalFrameDetalleFormBodegaProducto.jTextFieldtotal_ingresosBodegaProducto.setBorder(this.bodegaproductoConstantesFunciones.resaltartotal_ingresosBodegaProducto);}
		if(this.bodegaproductoConstantesFunciones.resaltartotal_egresosBodegaProducto!=null && this.jInternalFrameDetalleFormBodegaProducto!=null) {this.jInternalFrameDetalleFormBodegaProducto.jTextFieldtotal_egresosBodegaProducto.setBorder(this.bodegaproductoConstantesFunciones.resaltartotal_egresosBodegaProducto);}
		if(this.bodegaproductoConstantesFunciones.resaltartotal_provisionBodegaProducto!=null && this.jInternalFrameDetalleFormBodegaProducto!=null) {this.jInternalFrameDetalleFormBodegaProducto.jTextFieldtotal_provisionBodegaProducto.setBorder(this.bodegaproductoConstantesFunciones.resaltartotal_provisionBodegaProducto);}
		if(this.bodegaproductoConstantesFunciones.resaltartotal_procesoBodegaProducto!=null && this.jInternalFrameDetalleFormBodegaProducto!=null) {this.jInternalFrameDetalleFormBodegaProducto.jTextFieldtotal_procesoBodegaProducto.setBorder(this.bodegaproductoConstantesFunciones.resaltartotal_procesoBodegaProducto);}
		if(this.bodegaproductoConstantesFunciones.resaltarcosto_calculadoBodegaProducto!=null && this.jInternalFrameDetalleFormBodegaProducto!=null) {this.jInternalFrameDetalleFormBodegaProducto.jTextFieldcosto_calculadoBodegaProducto.setBorder(this.bodegaproductoConstantesFunciones.resaltarcosto_calculadoBodegaProducto);}
		if(this.bodegaproductoConstantesFunciones.resaltardias_produccionBodegaProducto!=null && this.jInternalFrameDetalleFormBodegaProducto!=null) {this.jInternalFrameDetalleFormBodegaProducto.jTextFielddias_produccionBodegaProducto.setBorder(this.bodegaproductoConstantesFunciones.resaltardias_produccionBodegaProducto);}
		if(this.bodegaproductoConstantesFunciones.resaltarprecio_reposicionBodegaProducto!=null && this.jInternalFrameDetalleFormBodegaProducto!=null) {this.jInternalFrameDetalleFormBodegaProducto.jTextFieldprecio_reposicionBodegaProducto.setBorder(this.bodegaproductoConstantesFunciones.resaltarprecio_reposicionBodegaProducto);}
		if(this.bodegaproductoConstantesFunciones.resaltarfecha_ultimo_pedidoBodegaProducto!=null && this.jInternalFrameDetalleFormBodegaProducto!=null) {this.jInternalFrameDetalleFormBodegaProducto.jDateChooserfecha_ultimo_pedidoBodegaProducto.setBorder(this.bodegaproductoConstantesFunciones.resaltarfecha_ultimo_pedidoBodegaProducto);}
		if(this.bodegaproductoConstantesFunciones.resaltarfecha_ingresoBodegaProducto!=null && this.jInternalFrameDetalleFormBodegaProducto!=null) {this.jInternalFrameDetalleFormBodegaProducto.jDateChooserfecha_ingresoBodegaProducto.setBorder(this.bodegaproductoConstantesFunciones.resaltarfecha_ingresoBodegaProducto);}
		if(this.bodegaproductoConstantesFunciones.resaltarfecha_egresoBodegaProducto!=null && this.jInternalFrameDetalleFormBodegaProducto!=null) {this.jInternalFrameDetalleFormBodegaProducto.jDateChooserfecha_egresoBodegaProducto.setBorder(this.bodegaproductoConstantesFunciones.resaltarfecha_egresoBodegaProducto);}
		if(this.bodegaproductoConstantesFunciones.resaltarfecha_ultima_compraBodegaProducto!=null && this.jInternalFrameDetalleFormBodegaProducto!=null) {this.jInternalFrameDetalleFormBodegaProducto.jDateChooserfecha_ultima_compraBodegaProducto.setBorder(this.bodegaproductoConstantesFunciones.resaltarfecha_ultima_compraBodegaProducto);}
		if(this.bodegaproductoConstantesFunciones.resaltarfecha_ultima_ventaBodegaProducto!=null && this.jInternalFrameDetalleFormBodegaProducto!=null) {this.jInternalFrameDetalleFormBodegaProducto.jDateChooserfecha_ultima_ventaBodegaProducto.setBorder(this.bodegaproductoConstantesFunciones.resaltarfecha_ultima_ventaBodegaProducto);}
		if(this.bodegaproductoConstantesFunciones.resaltarfecha_ultima_devolucionBodegaProducto!=null && this.jInternalFrameDetalleFormBodegaProducto!=null) {this.jInternalFrameDetalleFormBodegaProducto.jDateChooserfecha_ultima_devolucionBodegaProducto.setBorder(this.bodegaproductoConstantesFunciones.resaltarfecha_ultima_devolucionBodegaProducto);}
		if(this.bodegaproductoConstantesFunciones.resaltarid_cuenta_contable_inventarioBodegaProducto!=null && this.jInternalFrameDetalleFormBodegaProducto!=null) {this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_inventarioBodegaProducto.setBorder(this.bodegaproductoConstantesFunciones.resaltarid_cuenta_contable_inventarioBodegaProducto);}
		if(this.bodegaproductoConstantesFunciones.resaltarid_cuenta_contable_costo_ventaBodegaProducto!=null && this.jInternalFrameDetalleFormBodegaProducto!=null) {this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_costo_ventaBodegaProducto.setBorder(this.bodegaproductoConstantesFunciones.resaltarid_cuenta_contable_costo_ventaBodegaProducto);}
		if(this.bodegaproductoConstantesFunciones.resaltarid_cuenta_contable_ventaBodegaProducto!=null && this.jInternalFrameDetalleFormBodegaProducto!=null) {this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_ventaBodegaProducto.setBorder(this.bodegaproductoConstantesFunciones.resaltarid_cuenta_contable_ventaBodegaProducto);}
		if(this.bodegaproductoConstantesFunciones.resaltarid_cuenta_contable_descuentoBodegaProducto!=null && this.jInternalFrameDetalleFormBodegaProducto!=null) {this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_descuentoBodegaProducto.setBorder(this.bodegaproductoConstantesFunciones.resaltarid_cuenta_contable_descuentoBodegaProducto);}
		if(this.bodegaproductoConstantesFunciones.resaltarid_cuenta_contable_produccionBodegaProducto!=null && this.jInternalFrameDetalleFormBodegaProducto!=null) {this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_produccionBodegaProducto.setBorder(this.bodegaproductoConstantesFunciones.resaltarid_cuenta_contable_produccionBodegaProducto);}
		if(this.bodegaproductoConstantesFunciones.resaltarid_cuenta_contable_devolucionBodegaProducto!=null && this.jInternalFrameDetalleFormBodegaProducto!=null) {this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_devolucionBodegaProducto.setBorder(this.bodegaproductoConstantesFunciones.resaltarid_cuenta_contable_devolucionBodegaProducto);}
		if(this.bodegaproductoConstantesFunciones.resaltarid_cuenta_contable_ingreso_debitoBodegaProducto!=null && this.jInternalFrameDetalleFormBodegaProducto!=null) {this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_ingreso_debitoBodegaProducto.setBorder(this.bodegaproductoConstantesFunciones.resaltarid_cuenta_contable_ingreso_debitoBodegaProducto);}
		if(this.bodegaproductoConstantesFunciones.resaltarid_cuenta_contable_ingreso_creditoBodegaProducto!=null && this.jInternalFrameDetalleFormBodegaProducto!=null) {this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_ingreso_creditoBodegaProducto.setBorder(this.bodegaproductoConstantesFunciones.resaltarid_cuenta_contable_ingreso_creditoBodegaProducto);}
		if(this.bodegaproductoConstantesFunciones.resaltarid_cuenta_contable_resultado_debitoBodegaProducto!=null && this.jInternalFrameDetalleFormBodegaProducto!=null) {this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_resultado_debitoBodegaProducto.setBorder(this.bodegaproductoConstantesFunciones.resaltarid_cuenta_contable_resultado_debitoBodegaProducto);}
		if(this.bodegaproductoConstantesFunciones.resaltarid_cuenta_contable_resultado_creditoBodegaProducto!=null && this.jInternalFrameDetalleFormBodegaProducto!=null) {this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_resultado_creditoBodegaProducto.setBorder(this.bodegaproductoConstantesFunciones.resaltarid_cuenta_contable_resultado_creditoBodegaProducto);}
	}
	
	public void updateVisibilidadResaltarControlesFormularioBodegaProducto() throws Exception {		
		if(this.jInternalFrameDetalleFormBodegaProducto==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormBodegaProducto!=null) {
	
		//this.jInternalFrameDetalleFormBodegaProducto.jLabelidBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostraridBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jPanelidBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostraridBodegaProducto);
		//this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_empresaBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarid_empresaBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jPanelid_empresaBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarid_empresaBodegaProducto);
		//this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_sucursalBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarid_sucursalBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jPanelid_sucursalBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarid_sucursalBodegaProducto);
		//this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_bodegaBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarid_bodegaBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jPanelid_bodegaBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarid_bodegaBodegaProducto);
		//this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_productoBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarid_productoBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jPanelid_productoBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarid_productoBodegaProducto);
			this.jInternalFrameDetalleFormBodegaProducto.jButtonid_productoBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarid_productoBodegaProducto);
		//this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_unidadBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarid_unidadBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jPanelid_unidadBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarid_unidadBodegaProducto);
		//this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_centro_costoBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarid_centro_costoBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jPanelid_centro_costoBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarid_centro_costoBodegaProducto);
		//this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_estado_bodega_productoBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarid_estado_bodega_productoBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jPanelid_estado_bodega_productoBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarid_estado_bodega_productoBodegaProducto);
		//this.jInternalFrameDetalleFormBodegaProducto.jTextAreadescripcionBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrardescripcionBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jPaneldescripcionBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrardescripcionBodegaProducto);
		//this.jInternalFrameDetalleFormBodegaProducto.jTextFieldcantidad_disponibleBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarcantidad_disponibleBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jPanelcantidad_disponibleBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarcantidad_disponibleBodegaProducto);
		//this.jInternalFrameDetalleFormBodegaProducto.jTextFieldstock_maximoBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarstock_maximoBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jPanelstock_maximoBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarstock_maximoBodegaProducto);
		//this.jInternalFrameDetalleFormBodegaProducto.jTextFieldstock_minimoBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarstock_minimoBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jPanelstock_minimoBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarstock_minimoBodegaProducto);
		//this.jInternalFrameDetalleFormBodegaProducto.jTextFieldivaBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarivaBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jPanelivaBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarivaBodegaProducto);
		//this.jInternalFrameDetalleFormBodegaProducto.jTextFieldiva_valorBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrariva_valorBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jPaneliva_valorBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrariva_valorBodegaProducto);
		//this.jInternalFrameDetalleFormBodegaProducto.jTextFielddescuentoBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrardescuentoBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jPaneldescuentoBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrardescuentoBodegaProducto);
		//this.jInternalFrameDetalleFormBodegaProducto.jTextFielddescuento_valorBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrardescuento_valorBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jPaneldescuento_valorBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrardescuento_valorBodegaProducto);
		//this.jInternalFrameDetalleFormBodegaProducto.jTextFieldiceBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrariceBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jPaneliceBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrariceBodegaProducto);
		//this.jInternalFrameDetalleFormBodegaProducto.jTextFieldice_valorBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarice_valorBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jPanelice_valorBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarice_valorBodegaProducto);
		//this.jInternalFrameDetalleFormBodegaProducto.jTextFieldcosto_promedioBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarcosto_promedioBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jPanelcosto_promedioBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarcosto_promedioBodegaProducto);
		//this.jInternalFrameDetalleFormBodegaProducto.jTextFieldporcentaje_comisionBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarporcentaje_comisionBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jPanelporcentaje_comisionBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarporcentaje_comisionBodegaProducto);
		//this.jInternalFrameDetalleFormBodegaProducto.jTextFieldprecioBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarprecioBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jPanelprecioBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarprecioBodegaProducto);
		//this.jInternalFrameDetalleFormBodegaProducto.jTextFieldultimo_costoBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarultimo_costoBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jPanelultimo_costoBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarultimo_costoBodegaProducto);
		//this.jInternalFrameDetalleFormBodegaProducto.jTextFieldcostoBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarcostoBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jPanelcostoBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarcostoBodegaProducto);
		//this.jInternalFrameDetalleFormBodegaProducto.jTextFieldarancel_porcentajeBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrararancel_porcentajeBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jPanelarancel_porcentajeBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrararancel_porcentajeBodegaProducto);
		//this.jInternalFrameDetalleFormBodegaProducto.jTextFieldice_porcentajeBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarice_porcentajeBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jPanelice_porcentajeBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarice_porcentajeBodegaProducto);
		//this.jInternalFrameDetalleFormBodegaProducto.jTextFieldpesoBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarpesoBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jPanelpesoBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarpesoBodegaProducto);
		//this.jInternalFrameDetalleFormBodegaProducto.jCheckBoxcon_ivaBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarcon_ivaBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jPanelcon_ivaBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarcon_ivaBodegaProducto);
		//this.jInternalFrameDetalleFormBodegaProducto.jCheckBoxcon_impuestoBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarcon_impuestoBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jPanelcon_impuestoBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarcon_impuestoBodegaProducto);
		//this.jInternalFrameDetalleFormBodegaProducto.jCheckBoxcon_iceBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarcon_iceBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jPanelcon_iceBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarcon_iceBodegaProducto);
		//this.jInternalFrameDetalleFormBodegaProducto.jCheckBoxesta_activoBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostraresta_activoBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jPanelesta_activoBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostraresta_activoBodegaProducto);
		//this.jInternalFrameDetalleFormBodegaProducto.jCheckBoxcon_balanzaBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarcon_balanzaBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jPanelcon_balanzaBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarcon_balanzaBodegaProducto);
		//this.jInternalFrameDetalleFormBodegaProducto.jTextFieldcantidad_pedidaBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarcantidad_pedidaBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jPanelcantidad_pedidaBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarcantidad_pedidaBodegaProducto);
		//this.jInternalFrameDetalleFormBodegaProducto.jTextFieldcantidad_fisicaBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarcantidad_fisicaBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jPanelcantidad_fisicaBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarcantidad_fisicaBodegaProducto);
		//this.jInternalFrameDetalleFormBodegaProducto.jTextFieldcantidad_requeridoBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarcantidad_requeridoBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jPanelcantidad_requeridoBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarcantidad_requeridoBodegaProducto);
		//this.jInternalFrameDetalleFormBodegaProducto.jTextFieldprecio_costoBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarprecio_costoBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jPanelprecio_costoBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarprecio_costoBodegaProducto);
		//this.jInternalFrameDetalleFormBodegaProducto.jTextFieldprecio_promedioBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarprecio_promedioBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jPanelprecio_promedioBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarprecio_promedioBodegaProducto);
		//this.jInternalFrameDetalleFormBodegaProducto.jTextFieldtotal_ingresosBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrartotal_ingresosBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jPaneltotal_ingresosBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrartotal_ingresosBodegaProducto);
		//this.jInternalFrameDetalleFormBodegaProducto.jTextFieldtotal_egresosBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrartotal_egresosBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jPaneltotal_egresosBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrartotal_egresosBodegaProducto);
		//this.jInternalFrameDetalleFormBodegaProducto.jTextFieldtotal_provisionBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrartotal_provisionBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jPaneltotal_provisionBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrartotal_provisionBodegaProducto);
		//this.jInternalFrameDetalleFormBodegaProducto.jTextFieldtotal_procesoBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrartotal_procesoBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jPaneltotal_procesoBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrartotal_procesoBodegaProducto);
		//this.jInternalFrameDetalleFormBodegaProducto.jTextFieldcosto_calculadoBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarcosto_calculadoBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jPanelcosto_calculadoBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarcosto_calculadoBodegaProducto);
		//this.jInternalFrameDetalleFormBodegaProducto.jTextFielddias_produccionBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrardias_produccionBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jPaneldias_produccionBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrardias_produccionBodegaProducto);
		//this.jInternalFrameDetalleFormBodegaProducto.jTextFieldprecio_reposicionBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarprecio_reposicionBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jPanelprecio_reposicionBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarprecio_reposicionBodegaProducto);
		//this.jInternalFrameDetalleFormBodegaProducto.jDateChooserfecha_ultimo_pedidoBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarfecha_ultimo_pedidoBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jPanelfecha_ultimo_pedidoBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarfecha_ultimo_pedidoBodegaProducto);
		//this.jInternalFrameDetalleFormBodegaProducto.jDateChooserfecha_ingresoBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarfecha_ingresoBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jPanelfecha_ingresoBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarfecha_ingresoBodegaProducto);
		//this.jInternalFrameDetalleFormBodegaProducto.jDateChooserfecha_egresoBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarfecha_egresoBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jPanelfecha_egresoBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarfecha_egresoBodegaProducto);
		//this.jInternalFrameDetalleFormBodegaProducto.jDateChooserfecha_ultima_compraBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarfecha_ultima_compraBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jPanelfecha_ultima_compraBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarfecha_ultima_compraBodegaProducto);
		//this.jInternalFrameDetalleFormBodegaProducto.jDateChooserfecha_ultima_ventaBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarfecha_ultima_ventaBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jPanelfecha_ultima_ventaBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarfecha_ultima_ventaBodegaProducto);
		//this.jInternalFrameDetalleFormBodegaProducto.jDateChooserfecha_ultima_devolucionBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarfecha_ultima_devolucionBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jPanelfecha_ultima_devolucionBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarfecha_ultima_devolucionBodegaProducto);
		//this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_inventarioBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarid_cuenta_contable_inventarioBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jPanelid_cuenta_contable_inventarioBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarid_cuenta_contable_inventarioBodegaProducto);
		//this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_costo_ventaBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarid_cuenta_contable_costo_ventaBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jPanelid_cuenta_contable_costo_ventaBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarid_cuenta_contable_costo_ventaBodegaProducto);
		//this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_ventaBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarid_cuenta_contable_ventaBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jPanelid_cuenta_contable_ventaBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarid_cuenta_contable_ventaBodegaProducto);
		//this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_descuentoBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarid_cuenta_contable_descuentoBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jPanelid_cuenta_contable_descuentoBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarid_cuenta_contable_descuentoBodegaProducto);
		//this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_produccionBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarid_cuenta_contable_produccionBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jPanelid_cuenta_contable_produccionBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarid_cuenta_contable_produccionBodegaProducto);
		//this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_devolucionBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarid_cuenta_contable_devolucionBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jPanelid_cuenta_contable_devolucionBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarid_cuenta_contable_devolucionBodegaProducto);
		//this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_ingreso_debitoBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarid_cuenta_contable_ingreso_debitoBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jPanelid_cuenta_contable_ingreso_debitoBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarid_cuenta_contable_ingreso_debitoBodegaProducto);
		//this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_ingreso_creditoBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarid_cuenta_contable_ingreso_creditoBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jPanelid_cuenta_contable_ingreso_creditoBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarid_cuenta_contable_ingreso_creditoBodegaProducto);
		//this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_resultado_debitoBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarid_cuenta_contable_resultado_debitoBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jPanelid_cuenta_contable_resultado_debitoBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarid_cuenta_contable_resultado_debitoBodegaProducto);
		//this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_resultado_creditoBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarid_cuenta_contable_resultado_creditoBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jPanelid_cuenta_contable_resultado_creditoBodegaProducto.setVisible(this.bodegaproductoConstantesFunciones.mostrarid_cuenta_contable_resultado_creditoBodegaProducto);
		}
	}
	
	public void updateHabilitarResaltarControlesFormularioBodegaProducto() throws Exception {
		if(this.jInternalFrameDetalleFormBodegaProducto==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormBodegaProducto!=null) {
	
		this.jInternalFrameDetalleFormBodegaProducto.jLabelidBodegaProducto.setEnabled(this.bodegaproductoConstantesFunciones.activaridBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_empresaBodegaProducto.setEnabled(this.bodegaproductoConstantesFunciones.activarid_empresaBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_sucursalBodegaProducto.setEnabled(this.bodegaproductoConstantesFunciones.activarid_sucursalBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_bodegaBodegaProducto.setEnabled(this.bodegaproductoConstantesFunciones.activarid_bodegaBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_productoBodegaProducto.setEnabled(this.bodegaproductoConstantesFunciones.activarid_productoBodegaProducto);
			this.jInternalFrameDetalleFormBodegaProducto.jButtonid_productoBodegaProducto.setEnabled(this.bodegaproductoConstantesFunciones.activarid_productoBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_unidadBodegaProducto.setEnabled(this.bodegaproductoConstantesFunciones.activarid_unidadBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_centro_costoBodegaProducto.setEnabled(this.bodegaproductoConstantesFunciones.activarid_centro_costoBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_estado_bodega_productoBodegaProducto.setEnabled(this.bodegaproductoConstantesFunciones.activarid_estado_bodega_productoBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jTextAreadescripcionBodegaProducto.setEnabled(this.bodegaproductoConstantesFunciones.activardescripcionBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jTextFieldcantidad_disponibleBodegaProducto.setEnabled(this.bodegaproductoConstantesFunciones.activarcantidad_disponibleBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jTextFieldstock_maximoBodegaProducto.setEnabled(this.bodegaproductoConstantesFunciones.activarstock_maximoBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jTextFieldstock_minimoBodegaProducto.setEnabled(this.bodegaproductoConstantesFunciones.activarstock_minimoBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jTextFieldivaBodegaProducto.setEnabled(this.bodegaproductoConstantesFunciones.activarivaBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jTextFieldiva_valorBodegaProducto.setEnabled(this.bodegaproductoConstantesFunciones.activariva_valorBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jTextFielddescuentoBodegaProducto.setEnabled(this.bodegaproductoConstantesFunciones.activardescuentoBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jTextFielddescuento_valorBodegaProducto.setEnabled(this.bodegaproductoConstantesFunciones.activardescuento_valorBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jTextFieldiceBodegaProducto.setEnabled(this.bodegaproductoConstantesFunciones.activariceBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jTextFieldice_valorBodegaProducto.setEnabled(this.bodegaproductoConstantesFunciones.activarice_valorBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jTextFieldcosto_promedioBodegaProducto.setEnabled(this.bodegaproductoConstantesFunciones.activarcosto_promedioBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jTextFieldporcentaje_comisionBodegaProducto.setEnabled(this.bodegaproductoConstantesFunciones.activarporcentaje_comisionBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jTextFieldprecioBodegaProducto.setEnabled(this.bodegaproductoConstantesFunciones.activarprecioBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jTextFieldultimo_costoBodegaProducto.setEnabled(this.bodegaproductoConstantesFunciones.activarultimo_costoBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jTextFieldcostoBodegaProducto.setEnabled(this.bodegaproductoConstantesFunciones.activarcostoBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jTextFieldarancel_porcentajeBodegaProducto.setEnabled(this.bodegaproductoConstantesFunciones.activararancel_porcentajeBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jTextFieldice_porcentajeBodegaProducto.setEnabled(this.bodegaproductoConstantesFunciones.activarice_porcentajeBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jTextFieldpesoBodegaProducto.setEnabled(this.bodegaproductoConstantesFunciones.activarpesoBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jCheckBoxcon_ivaBodegaProducto.setEnabled(this.bodegaproductoConstantesFunciones.activarcon_ivaBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jCheckBoxcon_impuestoBodegaProducto.setEnabled(this.bodegaproductoConstantesFunciones.activarcon_impuestoBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jCheckBoxcon_iceBodegaProducto.setEnabled(this.bodegaproductoConstantesFunciones.activarcon_iceBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jCheckBoxesta_activoBodegaProducto.setEnabled(this.bodegaproductoConstantesFunciones.activaresta_activoBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jCheckBoxcon_balanzaBodegaProducto.setEnabled(this.bodegaproductoConstantesFunciones.activarcon_balanzaBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jTextFieldcantidad_pedidaBodegaProducto.setEnabled(this.bodegaproductoConstantesFunciones.activarcantidad_pedidaBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jTextFieldcantidad_fisicaBodegaProducto.setEnabled(this.bodegaproductoConstantesFunciones.activarcantidad_fisicaBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jTextFieldcantidad_requeridoBodegaProducto.setEnabled(this.bodegaproductoConstantesFunciones.activarcantidad_requeridoBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jTextFieldprecio_costoBodegaProducto.setEnabled(this.bodegaproductoConstantesFunciones.activarprecio_costoBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jTextFieldprecio_promedioBodegaProducto.setEnabled(this.bodegaproductoConstantesFunciones.activarprecio_promedioBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jTextFieldtotal_ingresosBodegaProducto.setEnabled(this.bodegaproductoConstantesFunciones.activartotal_ingresosBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jTextFieldtotal_egresosBodegaProducto.setEnabled(this.bodegaproductoConstantesFunciones.activartotal_egresosBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jTextFieldtotal_provisionBodegaProducto.setEnabled(this.bodegaproductoConstantesFunciones.activartotal_provisionBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jTextFieldtotal_procesoBodegaProducto.setEnabled(this.bodegaproductoConstantesFunciones.activartotal_procesoBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jTextFieldcosto_calculadoBodegaProducto.setEnabled(this.bodegaproductoConstantesFunciones.activarcosto_calculadoBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jTextFielddias_produccionBodegaProducto.setEnabled(this.bodegaproductoConstantesFunciones.activardias_produccionBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jTextFieldprecio_reposicionBodegaProducto.setEnabled(this.bodegaproductoConstantesFunciones.activarprecio_reposicionBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jDateChooserfecha_ultimo_pedidoBodegaProducto.setEnabled(this.bodegaproductoConstantesFunciones.activarfecha_ultimo_pedidoBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jDateChooserfecha_ingresoBodegaProducto.setEnabled(this.bodegaproductoConstantesFunciones.activarfecha_ingresoBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jDateChooserfecha_egresoBodegaProducto.setEnabled(this.bodegaproductoConstantesFunciones.activarfecha_egresoBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jDateChooserfecha_ultima_compraBodegaProducto.setEnabled(this.bodegaproductoConstantesFunciones.activarfecha_ultima_compraBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jDateChooserfecha_ultima_ventaBodegaProducto.setEnabled(this.bodegaproductoConstantesFunciones.activarfecha_ultima_ventaBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jDateChooserfecha_ultima_devolucionBodegaProducto.setEnabled(this.bodegaproductoConstantesFunciones.activarfecha_ultima_devolucionBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_inventarioBodegaProducto.setEnabled(this.bodegaproductoConstantesFunciones.activarid_cuenta_contable_inventarioBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_costo_ventaBodegaProducto.setEnabled(this.bodegaproductoConstantesFunciones.activarid_cuenta_contable_costo_ventaBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_ventaBodegaProducto.setEnabled(this.bodegaproductoConstantesFunciones.activarid_cuenta_contable_ventaBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_descuentoBodegaProducto.setEnabled(this.bodegaproductoConstantesFunciones.activarid_cuenta_contable_descuentoBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_produccionBodegaProducto.setEnabled(this.bodegaproductoConstantesFunciones.activarid_cuenta_contable_produccionBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_devolucionBodegaProducto.setEnabled(this.bodegaproductoConstantesFunciones.activarid_cuenta_contable_devolucionBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_ingreso_debitoBodegaProducto.setEnabled(this.bodegaproductoConstantesFunciones.activarid_cuenta_contable_ingreso_debitoBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_ingreso_creditoBodegaProducto.setEnabled(this.bodegaproductoConstantesFunciones.activarid_cuenta_contable_ingreso_creditoBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_resultado_debitoBodegaProducto.setEnabled(this.bodegaproductoConstantesFunciones.activarid_cuenta_contable_resultado_debitoBodegaProducto);
		this.jInternalFrameDetalleFormBodegaProducto.jComboBoxid_cuenta_contable_resultado_creditoBodegaProducto.setEnabled(this.bodegaproductoConstantesFunciones.activarid_cuenta_contable_resultado_creditoBodegaProducto);
		}
	}
	
		
}