/*
*AVISO LEGAL
Â© Copyright
*Este programa esta protegido por la ley de derechos de autor.
*La reproduccion o distribucion ilicita de este programa o de cualquiera de
*sus partes esta penado por la ley con severas sanciones civiles y penales,
*y seran objeto de todas las sanciones legales que correspondan.

*Su contenido no puede copiarse para fines comerciales o de otras,
*ni puede mostrarse, incluso en una version modificada, en otros sitios Web.
Solo esta permitido colocar hipervinculos al sitio web.
*/
package com.bydan.erp.facturacion.presentation.swing.jinternalframes;




import com.bydan.erp.seguridad.business.entity.Usuario;
import com.bydan.erp.seguridad.business.entity.ResumenUsuario;
import com.bydan.erp.seguridad.business.entity.Opcion;
import com.bydan.erp.seguridad.business.entity.PerfilOpcion;
import com.bydan.erp.seguridad.business.entity.PerfilCampo;
import com.bydan.erp.seguridad.business.entity.PerfilAccion;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralSg;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralUsuario;
import com.bydan.erp.seguridad.business.entity.Modulo;
import com.bydan.erp.seguridad.business.entity.Accion;

import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneralAdditional;
import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneral;


//import com.bydan.erp.seguridad.business.entity.PerfilAccion;


import com.bydan.erp.seguridad.util.SistemaConstantesFunciones;
import com.bydan.erp.seguridad.util.SistemaConstantesFuncionesAdditional;
import com.bydan.erp.seguridad.business.logic.SistemaLogicAdditional;

import com.bydan.erp.facturacion.util.ParametroFactuTransaccionConstantesFunciones;
import com.bydan.erp.facturacion.util.ParametroFactuTransaccionParameterReturnGeneral;
//import com.bydan.erp.facturacion.util.ParametroFactuTransaccionParameterGeneral;
//import com.bydan.erp.facturacion.presentation.report.source.ParametroFactuTransaccionBean;
import com.bydan.framework.erp.business.dataaccess.ConstantesSql;
import com.bydan.framework.erp.business.entity.Classe;
import com.bydan.framework.erp.business.entity.DatoGeneral;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterGeneral;
import com.bydan.framework.erp.business.entity.OrderBy;
import com.bydan.framework.erp.business.entity.DatoGeneralMinimo;
import com.bydan.framework.erp.business.entity.GeneralEntity;
import com.bydan.framework.erp.business.entity.Mensajes;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterReturnGeneral;
//import com.bydan.framework.erp.business.entity.MaintenanceType;
import com.bydan.framework.erp.util.MaintenanceType;
import com.bydan.framework.erp.util.FuncionesReporte;
import com.bydan.framework.erp.business.logic.DatosCliente;
import com.bydan.framework.erp.business.logic.Pagination;

import com.bydan.erp.facturacion.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralTotalModel;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralOrderByModel;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverter;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverterFromDate;
import com.bydan.framework.erp.presentation.desktop.swing.DateRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.DateEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.TextFieldRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.RunnableProceso;
import com.bydan.framework.erp.presentation.desktop.swing.*;
//import com.bydan.framework.erp.presentation.desktop.swing.TextFieldEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.HeaderRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.JInternalFrameBase;
import com.bydan.framework.erp.presentation.desktop.swing.FuncionesSwing;
import com.bydan.framework.erp.presentation.desktop.swing.MainJFrame;
import com.bydan.framework.erp.resources.imagenes.AuxiliarImagenes;
import com.bydan.erp.facturacion.resources.reportes.AuxiliarReportes;


import com.bydan.erp.facturacion.util.*;
import com.bydan.erp.facturacion.business.logic.*;

import com.bydan.erp.seguridad.business.logic.*;
import com.bydan.erp.tesoreria.business.logic.*;

//EJB

//PARAMETROS


//EJB PARAMETROS

import com.bydan.framework.erp.business.logic.*;
import com.bydan.framework.erp.util.*;

import com.bydan.erp.facturacion.business.entity.*;
//import com.bydan.framework.erp.business.entity.ConexionBeanFace;
//import com.bydan.framework.erp.business.entity.Mensajes;


import com.bydan.erp.seguridad.presentation.swing.jinternalframes.*;
import com.bydan.erp.tesoreria.presentation.swing.jinternalframes.*;

import com.bydan.erp.seguridad.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.tesoreria.presentation.swing.jinternalframes.auxiliar.*;






import javax.imageio.ImageIO;
import java.net.NetworkInterface;
import java.net.InterfaceAddress;
import java.net.InetAddress;
import javax.naming.InitialContext;
import java.lang.Long;
import java.util.Date;
import java.util.Enumeration;
import java.util.Iterator;
import java.util.Set;
import java.util.HashSet;
import java.util.List;
import java.util.ArrayList;
import java.io.Serializable;
import java.util.Hashtable;
import java.util.Collections;
import java.io.File;
import java.io.FileInputStream;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.BufferedReader;
import java.io.FileReader;
import java.util.HashMap;
import java.util.Map;
import java.io.PrintWriter;
import java.sql.SQLException;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.stream.StreamSource;

import org.xml.sax.EntityResolver;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;

import org.w3c.dom.Document;
import org.w3c.dom.Document;
import org.w3c.dom.NodeList;
import org.w3c.dom.Node;
import org.w3c.dom.Element;

import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.util.CellRangeAddress;

import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;


import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRRuntimeException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.engine.export.JRHtmlExporter;
import net.sf.jasperreports.j2ee.servlets.BaseHttpServlet;
import net.sf.jasperreports.engine.JRExporterParameter;
import net.sf.jasperreports.engine.data.JRBeanArrayDataSource;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;

import org.apache.log4j.Logger;

import com.bydan.framework.erp.business.entity.Reporte;


//VALIDACION
import org.hibernate.validator.ClassValidator;
import org.hibernate.validator.InvalidValue;

import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.JasperRunManager;
import net.sf.jasperreports.engine.export.JExcelApiExporter;
import net.sf.jasperreports.engine.export.JRCsvExporter;
import net.sf.jasperreports.engine.export.JRRtfExporter;
import net.sf.jasperreports.engine.export.JRXlsExporter;
import net.sf.jasperreports.engine.export.JRXlsExporterParameter;
import net.sf.jasperreports.engine.util.JRSaver;
import net.sf.jasperreports.engine.xml.JRXmlWriter;


import com.bydan.erp.facturacion.presentation.web.jsf.sessionbean.*;

import java.util.EventObject;
import javax.swing.*;
import javax.swing.border.Border;
import javax.swing.border.TitledBorder;
import javax.swing.border.EmptyBorder;
import javax.swing.event.*;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import java.awt.*;
import java.awt.event.*;

import org.jdesktop.beansbinding.Binding.SyncFailure;
import org.jdesktop.beansbinding.BindingListener;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.ELProperty;
import org.jdesktop.beansbinding.AutoBinding.UpdateStrategy;
import org.jdesktop.beansbinding.PropertyStateEvent;
import org.jdesktop.swingbinding.JComboBoxBinding;
import org.jdesktop.swingbinding.SwingBindings;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeEvent;

import com.toedter.calendar.JDateChooser;


import com.bydan.erp.seguridad.business.entity.*;
import com.bydan.erp.tesoreria.business.entity.*;
import com.bydan.erp.seguridad.util.*;
import com.bydan.erp.tesoreria.util.*;
import com.bydan.erp.seguridad.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.tesoreria.presentation.web.jsf.sessionbean.*;


@SuppressWarnings("unused")
public class ParametroFactuTransaccionBeanSwingJInternalFrame extends ParametroFactuTransaccionJInternalFrame implements WindowListener,WindowFocusListener
{				
	
	public static final long serialVersionUID = 1L;
	
	public static Logger logger = Logger.getLogger(ParametroFactuTransaccionBeanSwingJInternalFrame.class);  
	
	public static ClassValidator<ParametroFactuTransaccion> parametrofactutransaccionValidator = new ClassValidator<ParametroFactuTransaccion>(ParametroFactuTransaccion.class);
	
	public InvalidValue[] invalidValues=null;
		

	//Ejb Foreign Keys
	
	public ParametroFactuTransaccion parametrofactutransaccion;	
	public ParametroFactuTransaccion parametrofactutransaccionAux;
	public ParametroFactuTransaccion parametrofactutransaccionAnterior;//USADO PARA MANEJAR FOCUS GAINED,LOST
	public ParametroFactuTransaccion parametrofactutransaccionTotales;
	public Long idParametroFactuTransaccionActual;
	public Long iIdNuevoParametroFactuTransaccion=0L;
	public int rowIndexActual=0;
	
	
	
	
	public String sFinalQueryComboEmpresa="";

	public List<Empresa> empresasForeignKey;

	public List<Empresa> getempresasForeignKey() {
		return empresasForeignKey;
	}

	public void setempresasForeignKey(List<Empresa> empresasForeignKey) {
		this.empresasForeignKey = empresasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Empresa empresaForeignKey;

	public Empresa getempresaForeignKey() {
		return empresaForeignKey;
	}

	public void setempresaForeignKey(Empresa empresaForeignKey) {
		this.empresaForeignKey = empresaForeignKey;
	}

	public String sFinalQueryComboSucursal="";

	public List<Sucursal> sucursalsForeignKey;

	public List<Sucursal> getsucursalsForeignKey() {
		return sucursalsForeignKey;
	}

	public void setsucursalsForeignKey(List<Sucursal> sucursalsForeignKey) {
		this.sucursalsForeignKey = sucursalsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Sucursal sucursalForeignKey;

	public Sucursal getsucursalForeignKey() {
		return sucursalForeignKey;
	}

	public void setsucursalForeignKey(Sucursal sucursalForeignKey) {
		this.sucursalForeignKey = sucursalForeignKey;
	}

	public String sFinalQueryComboTransaccionInvenFactura="";

	public List<Transaccion> transaccioninvenfacturasForeignKey;

	public List<Transaccion> gettransaccioninvenfacturasForeignKey() {
		return transaccioninvenfacturasForeignKey;
	}

	public void settransaccioninvenfacturasForeignKey(List<Transaccion> transaccioninvenfacturasForeignKey) {
		this.transaccioninvenfacturasForeignKey = transaccioninvenfacturasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Transaccion transaccioninvenfacturaForeignKey;

	public Transaccion gettransaccioninvenfacturaForeignKey() {
		return transaccioninvenfacturaForeignKey;
	}

	public void settransaccioninvenfacturaForeignKey(Transaccion transaccioninvenfacturaForeignKey) {
		this.transaccioninvenfacturaForeignKey = transaccioninvenfacturaForeignKey;
	}

	public String sFinalQueryComboTransaccionInvenNotaCredito="";

	public List<Transaccion> transaccioninvennotacreditosForeignKey;

	public List<Transaccion> gettransaccioninvennotacreditosForeignKey() {
		return transaccioninvennotacreditosForeignKey;
	}

	public void settransaccioninvennotacreditosForeignKey(List<Transaccion> transaccioninvennotacreditosForeignKey) {
		this.transaccioninvennotacreditosForeignKey = transaccioninvennotacreditosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Transaccion transaccioninvennotacreditoForeignKey;

	public Transaccion gettransaccioninvennotacreditoForeignKey() {
		return transaccioninvennotacreditoForeignKey;
	}

	public void settransaccioninvennotacreditoForeignKey(Transaccion transaccioninvennotacreditoForeignKey) {
		this.transaccioninvennotacreditoForeignKey = transaccioninvennotacreditoForeignKey;
	}

	public String sFinalQueryComboTransaccionInvenNotaVenta="";

	public List<Transaccion> transaccioninvennotaventasForeignKey;

	public List<Transaccion> gettransaccioninvennotaventasForeignKey() {
		return transaccioninvennotaventasForeignKey;
	}

	public void settransaccioninvennotaventasForeignKey(List<Transaccion> transaccioninvennotaventasForeignKey) {
		this.transaccioninvennotaventasForeignKey = transaccioninvennotaventasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Transaccion transaccioninvennotaventaForeignKey;

	public Transaccion gettransaccioninvennotaventaForeignKey() {
		return transaccioninvennotaventaForeignKey;
	}

	public void settransaccioninvennotaventaForeignKey(Transaccion transaccioninvennotaventaForeignKey) {
		this.transaccioninvennotaventaForeignKey = transaccioninvennotaventaForeignKey;
	}

	public String sFinalQueryComboTransaccionCuentaCoFactura="";

	public List<Transaccion> transaccioncuentacofacturasForeignKey;

	public List<Transaccion> gettransaccioncuentacofacturasForeignKey() {
		return transaccioncuentacofacturasForeignKey;
	}

	public void settransaccioncuentacofacturasForeignKey(List<Transaccion> transaccioncuentacofacturasForeignKey) {
		this.transaccioncuentacofacturasForeignKey = transaccioncuentacofacturasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Transaccion transaccioncuentacofacturaForeignKey;

	public Transaccion gettransaccioncuentacofacturaForeignKey() {
		return transaccioncuentacofacturaForeignKey;
	}

	public void settransaccioncuentacofacturaForeignKey(Transaccion transaccioncuentacofacturaForeignKey) {
		this.transaccioncuentacofacturaForeignKey = transaccioncuentacofacturaForeignKey;
	}

	public String sFinalQueryComboTransaccionCuentaCoNotaCredito="";

	public List<Transaccion> transaccioncuentaconotacreditosForeignKey;

	public List<Transaccion> gettransaccioncuentaconotacreditosForeignKey() {
		return transaccioncuentaconotacreditosForeignKey;
	}

	public void settransaccioncuentaconotacreditosForeignKey(List<Transaccion> transaccioncuentaconotacreditosForeignKey) {
		this.transaccioncuentaconotacreditosForeignKey = transaccioncuentaconotacreditosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Transaccion transaccioncuentaconotacreditoForeignKey;

	public Transaccion gettransaccioncuentaconotacreditoForeignKey() {
		return transaccioncuentaconotacreditoForeignKey;
	}

	public void settransaccioncuentaconotacreditoForeignKey(Transaccion transaccioncuentaconotacreditoForeignKey) {
		this.transaccioncuentaconotacreditoForeignKey = transaccioncuentaconotacreditoForeignKey;
	}

	public String sFinalQueryComboTransaccionCuentaCoNotaVenta="";

	public List<Transaccion> transaccioncuentaconotaventasForeignKey;

	public List<Transaccion> gettransaccioncuentaconotaventasForeignKey() {
		return transaccioncuentaconotaventasForeignKey;
	}

	public void settransaccioncuentaconotaventasForeignKey(List<Transaccion> transaccioncuentaconotaventasForeignKey) {
		this.transaccioncuentaconotaventasForeignKey = transaccioncuentaconotaventasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Transaccion transaccioncuentaconotaventaForeignKey;

	public Transaccion gettransaccioncuentaconotaventaForeignKey() {
		return transaccioncuentaconotaventaForeignKey;
	}

	public void settransaccioncuentaconotaventaForeignKey(Transaccion transaccioncuentaconotaventaForeignKey) {
		this.transaccioncuentaconotaventaForeignKey = transaccioncuentaconotaventaForeignKey;
	}

	public String sFinalQueryComboTransaccionCuentaCoTarjeta="";

	public List<Transaccion> transaccioncuentacotarjetasForeignKey;

	public List<Transaccion> gettransaccioncuentacotarjetasForeignKey() {
		return transaccioncuentacotarjetasForeignKey;
	}

	public void settransaccioncuentacotarjetasForeignKey(List<Transaccion> transaccioncuentacotarjetasForeignKey) {
		this.transaccioncuentacotarjetasForeignKey = transaccioncuentacotarjetasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Transaccion transaccioncuentacotarjetaForeignKey;

	public Transaccion gettransaccioncuentacotarjetaForeignKey() {
		return transaccioncuentacotarjetaForeignKey;
	}

	public void settransaccioncuentacotarjetaForeignKey(Transaccion transaccioncuentacotarjetaForeignKey) {
		this.transaccioncuentacotarjetaForeignKey = transaccioncuentacotarjetaForeignKey;
	}

	public String sFinalQueryComboTransaccionCuentaPaFactura="";

	public List<Transaccion> transaccioncuentapafacturasForeignKey;

	public List<Transaccion> gettransaccioncuentapafacturasForeignKey() {
		return transaccioncuentapafacturasForeignKey;
	}

	public void settransaccioncuentapafacturasForeignKey(List<Transaccion> transaccioncuentapafacturasForeignKey) {
		this.transaccioncuentapafacturasForeignKey = transaccioncuentapafacturasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Transaccion transaccioncuentapafacturaForeignKey;

	public Transaccion gettransaccioncuentapafacturaForeignKey() {
		return transaccioncuentapafacturaForeignKey;
	}

	public void settransaccioncuentapafacturaForeignKey(Transaccion transaccioncuentapafacturaForeignKey) {
		this.transaccioncuentapafacturaForeignKey = transaccioncuentapafacturaForeignKey;
	}

	public String sFinalQueryComboTransaccionCuentaPaNotaCredito="";

	public List<Transaccion> transaccioncuentapanotacreditosForeignKey;

	public List<Transaccion> gettransaccioncuentapanotacreditosForeignKey() {
		return transaccioncuentapanotacreditosForeignKey;
	}

	public void settransaccioncuentapanotacreditosForeignKey(List<Transaccion> transaccioncuentapanotacreditosForeignKey) {
		this.transaccioncuentapanotacreditosForeignKey = transaccioncuentapanotacreditosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Transaccion transaccioncuentapanotacreditoForeignKey;

	public Transaccion gettransaccioncuentapanotacreditoForeignKey() {
		return transaccioncuentapanotacreditoForeignKey;
	}

	public void settransaccioncuentapanotacreditoForeignKey(Transaccion transaccioncuentapanotacreditoForeignKey) {
		this.transaccioncuentapanotacreditoForeignKey = transaccioncuentapanotacreditoForeignKey;
	}

		
	
	
	
	
	
	
	
	//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
	public String sFinalQueryGeneral="";
	public Boolean isEntroOnLoad=false;
	public Boolean isErrorGuardar=false;
	
	public Boolean isGuardarCambiosEnLote=false;
	public Boolean isCargarCombosDependencia=false;
	public Boolean isSeleccionarTodos=false;
	public Boolean isSeleccionados=false;
	public Boolean conGraficoReporte=false;
	
	public Boolean isPostAccionNuevo=false;
	public Boolean isPostAccionSinCerrar=false;
	public Boolean isPostAccionSinMensaje=false;
	
	
	public Boolean esControlTabla=false;
	
	public Boolean isPermisoTodoParametroFactuTransaccion;
	public Boolean isPermisoNuevoParametroFactuTransaccion;
	public Boolean isPermisoActualizarParametroFactuTransaccion;
	public Boolean isPermisoActualizarOriginalParametroFactuTransaccion;
	public Boolean isPermisoEliminarParametroFactuTransaccion;
	public Boolean isPermisoGuardarCambiosParametroFactuTransaccion;
	public Boolean isPermisoConsultaParametroFactuTransaccion;
	public Boolean isPermisoBusquedaParametroFactuTransaccion;
	public Boolean isPermisoReporteParametroFactuTransaccion;
	public Boolean isPermisoPaginacionMedioParametroFactuTransaccion;
	public Boolean isPermisoPaginacionAltoParametroFactuTransaccion;
	public Boolean isPermisoPaginacionTodoParametroFactuTransaccion;
	public Boolean isPermisoCopiarParametroFactuTransaccion;
	public Boolean isPermisoVerFormParametroFactuTransaccion;
	public Boolean isPermisoDuplicarParametroFactuTransaccion;
	public Boolean isPermisoOrdenParametroFactuTransaccion;
	
	
	public ArrayList<DatoGeneral> arrDatoGeneral;
	public ArrayList<String> arrDatoGeneralNo;
	ArrayList<Classe> classesActual=new ArrayList<Classe>();
	
	public List<Accion> accions;	
	public List<Accion> accionsFormulario;
	
	
	public ArrayList<DatoGeneralMinimo> arrDatoGeneralMinimos;
	
	public ArrayList<Reporte> tiposArchivosReportes;
	public ArrayList<Reporte> tiposArchivosReportesDinamico;
	public ArrayList<Reporte> tiposReportes;
	public ArrayList<Reporte> tiposReportesDinamico;
	public ArrayList<Reporte> tiposGraficosReportes;
	public ArrayList<Reporte> tiposPaginacion;
	public ArrayList<Reporte> tiposRelaciones;
	public ArrayList<Reporte> tiposAcciones;
	public ArrayList<Reporte> tiposAccionesFormulario;
	public ArrayList<Reporte> tiposSeleccionar;
	
	public ArrayList<Reporte> tiposColumnasSelect;
	public ArrayList<Reporte> tiposRelacionesSelect;
	
	
	public Integer iNumeroPaginacion;
	public Integer iNumeroPaginacionPagina;
	public Pagination pagination;
	public DatosCliente datosCliente;
	public DatosDeep datosDeep;
	public String sTipoArchivoReporte="";
	public String sTipoArchivoReporteDinamico="";
	public String sTipoReporte="";
	public String sTipoReporteDinamico="";
	public String sTipoGraficoReporte="";
	public String sTipoPaginacion="";
	public String sTipoRelacion="";
	public String sTipoAccion="";
	public String sTipoAccionFormulario="";
	public String sTipoSeleccionar="";	
	public String sDetalleReporte="";
	public Boolean isMostrarNumeroPaginacion;
	public String sTipoReporteExtra="";
	public String sValorCampoGeneral="";
	public Boolean esReporteDinamico=false;
	public Boolean esReporteAccionProceso=false;
	public Boolean esRecargarFks=false;
	public String sPathReporteDinamico="";
	
	public ParametroFactuTransaccionParameterReturnGeneral parametrofactutransaccionReturnGeneral;
	public ParametroFactuTransaccionParameterReturnGeneral parametrofactutransaccionParameterGeneral;
	
	 	
	public JasperPrint jasperPrint = null;
	
	public Long lIdUsuarioSesion=0L;				
	
	public Boolean isEsNuevoParametroFactuTransaccion=false;
	public Boolean esParaAccionDesdeFormularioParametroFactuTransaccion=false;
	public Boolean isEsMantenimientoRelacionesRelacionadoUnico=false;
	public Boolean isEsMantenimientoRelaciones=false;
	public Boolean isEsMantenimientoRelacionado=false;	
	public Boolean isContieneImagenes=false;
		
	//public Boolean conTotales=false; //Viene heredado de JInternalFrameBase
	//public Boolean esParaBusquedaForeignKey=false;
	
	
	protected ParametroFactuTransaccionSessionBeanAdditional parametrofactutransaccionSessionBeanAdditional=null;
	
	public ParametroFactuTransaccionSessionBeanAdditional getParametroFactuTransaccionSessionBeanAdditional() {
		return this.parametrofactutransaccionSessionBeanAdditional;
	}
	
	public void setParametroFactuTransaccionSessionBeanAdditional(ParametroFactuTransaccionSessionBeanAdditional parametrofactutransaccionSessionBeanAdditional) {
		try {
			this.parametrofactutransaccionSessionBeanAdditional=parametrofactutransaccionSessionBeanAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	protected ParametroFactuTransaccionBeanSwingJInternalFrameAdditional parametrofactutransaccionBeanSwingJInternalFrameAdditional=null;
	//public class ParametroFactuTransaccionBeanSwingJInternalFrame
	
	public ParametroFactuTransaccionBeanSwingJInternalFrameAdditional getParametroFactuTransaccionBeanSwingJInternalFrameAdditional() {
		return this.parametrofactutransaccionBeanSwingJInternalFrameAdditional;
	}
	
	public void setParametroFactuTransaccionBeanSwingJInternalFrameAdditional(ParametroFactuTransaccionBeanSwingJInternalFrameAdditional parametrofactutransaccionBeanSwingJInternalFrameAdditional) {
		try {
			this.parametrofactutransaccionBeanSwingJInternalFrameAdditional=parametrofactutransaccionBeanSwingJInternalFrameAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	//ESTA EN PADRE
	
	//public ParametroFactuTransaccionLogic parametrofactutransaccionLogic;
	public SistemaLogicAdditional sistemaLogicAdditional;
	
	
	public ParametroFactuTransaccion parametrofactutransaccionBean;
	public ParametroFactuTransaccionConstantesFunciones parametrofactutransaccionConstantesFunciones;
	//public ParametroFactuTransaccionParameterReturnGeneral parametrofactutransaccionReturnGeneral;
	
	//FK
	
	public EmpresaLogic empresaLogic;
	public SucursalLogic sucursalLogic;
	public TransaccionLogic transaccioninvenfacturaLogic;
	public TransaccionLogic transaccioninvennotacreditoLogic;
	public TransaccionLogic transaccioninvennotaventaLogic;
	public TransaccionLogic transaccioncuentacofacturaLogic;
	public TransaccionLogic transaccioncuentaconotacreditoLogic;
	public TransaccionLogic transaccioncuentaconotaventaLogic;
	public TransaccionLogic transaccioncuentacotarjetaLogic;
	public TransaccionLogic transaccioncuentapafacturaLogic;
	public TransaccionLogic transaccioncuentapanotacreditoLogic;
	
	//PARAMETROS
	
	
	//public List<ParametroFactuTransaccion> parametrofactutransaccions;	
	//public List<ParametroFactuTransaccion> parametrofactutransaccionsEliminados;
	//public List<ParametroFactuTransaccion> parametrofactutransaccionsAux;
	
	public String sAccionMantenimiento="";
	public String sAccionBusqueda="";
	public String sAccionAdicional="";
	public String sUltimaBusqueda="";
	
	public Mensaje mensaje;
	
	
	public String sVisibilidadTablaBusquedas="";					
	public String sVisibilidadTablaElementos="";	
	public String sVisibilidadTablaAcciones="";			
	
	public Boolean isVisibilidadCeldaNuevoParametroFactuTransaccion=false;
	public Boolean isVisibilidadCeldaDuplicarParametroFactuTransaccion=true;
	public Boolean isVisibilidadCeldaCopiarParametroFactuTransaccion=true;
	public Boolean isVisibilidadCeldaVerFormParametroFactuTransaccion=true;
	public Boolean isVisibilidadCeldaOrdenParametroFactuTransaccion=true;
	public Boolean isVisibilidadCeldaNuevoRelacionesParametroFactuTransaccion=false;
	public Boolean isVisibilidadCeldaModificarParametroFactuTransaccion=false;
	public Boolean isVisibilidadCeldaActualizarParametroFactuTransaccion=false;
	public Boolean isVisibilidadCeldaEliminarParametroFactuTransaccion=false;
	public Boolean isVisibilidadCeldaCancelarParametroFactuTransaccion=false;
	public Boolean isVisibilidadCeldaGuardarParametroFactuTransaccion=false;	
	public Boolean isVisibilidadCeldaGuardarCambiosParametroFactuTransaccion=false;	
	
	
	public Boolean isVisibilidadFK_IdEmpresa=false;
	public Boolean isVisibilidadFK_IdSucursal=false;
	public Boolean isVisibilidadFK_IdTransaccionCuentaCoFactura=false;
	public Boolean isVisibilidadFK_IdTransaccionCuentaCoNotaCredito=false;
	public Boolean isVisibilidadFK_IdTransaccionCuentaCoNotaVenta=false;
	public Boolean isVisibilidadFK_IdTransaccionCuentaCoTarjeta=false;
	public Boolean isVisibilidadFK_IdTransaccionCuentaPaFactura=false;
	public Boolean isVisibilidadFK_IdTransaccionCuentaPaNotaCredito=false;
	public Boolean isVisibilidadFK_IdTransaccionInvenFactura=false;
	public Boolean isVisibilidadFK_IdTransaccionInvenNotaCredito=false;
	public Boolean isVisibilidadFK_IdTransaccionInvenNotaVenta=false;
	
	public Long getiIdNuevoParametroFactuTransaccion() {
		return this.iIdNuevoParametroFactuTransaccion;
	}

	public void setiIdNuevoParametroFactuTransaccion(Long iIdNuevoParametroFactuTransaccion) {
		this.iIdNuevoParametroFactuTransaccion = iIdNuevoParametroFactuTransaccion;
	}
	
	public Long getidParametroFactuTransaccionActual() {
		return this.idParametroFactuTransaccionActual;
	}

	public void setidParametroFactuTransaccionActual(Long idParametroFactuTransaccionActual) {
		this.idParametroFactuTransaccionActual = idParametroFactuTransaccionActual;
	}
	
	public int getrowIndexActual() {
		return this.rowIndexActual;
	}

	public void setrowIndexActual(int rowIndexActual) {
		this.rowIndexActual=rowIndexActual;
	}
	
	
	public ParametroFactuTransaccion getparametrofactutransaccion() {
		return this.parametrofactutransaccion;
	}

	public void setparametrofactutransaccion(ParametroFactuTransaccion parametrofactutransaccion) {
		this.parametrofactutransaccion = parametrofactutransaccion;
	}
	
	public ParametroFactuTransaccion getparametrofactutransaccionAux() {
		return this.parametrofactutransaccionAux;
	}

	public void setparametrofactutransaccionAux(ParametroFactuTransaccion parametrofactutransaccionAux) {
		this.parametrofactutransaccionAux = parametrofactutransaccionAux;
	}				
	
	public ParametroFactuTransaccion getparametrofactutransaccionAnterior() {
		return this.parametrofactutransaccionAnterior;
	}

	public void setparametrofactutransaccionAnterior(ParametroFactuTransaccion parametrofactutransaccionAnterior) {
		this.parametrofactutransaccionAnterior = parametrofactutransaccionAnterior;
	}	
	
	public ParametroFactuTransaccion getparametrofactutransaccionTotales() {
		return this.parametrofactutransaccionTotales;
	}

	public void setparametrofactutransaccionTotales(ParametroFactuTransaccion parametrofactutransaccionTotales) {
		this.parametrofactutransaccionTotales = parametrofactutransaccionTotales;
	}	
	
	public ParametroFactuTransaccion getparametrofactutransaccionBean() {
		return this.parametrofactutransaccionBean;
	}

	public void setparametrofactutransaccionBean(ParametroFactuTransaccion parametrofactutransaccionBean) {
		this.parametrofactutransaccionBean = parametrofactutransaccionBean;
	}	
	
	public ParametroFactuTransaccionParameterReturnGeneral getparametrofactutransaccionReturnGeneral() {
		return this.parametrofactutransaccionReturnGeneral;
	}

	public void setparametrofactutransaccionReturnGeneral(ParametroFactuTransaccionParameterReturnGeneral parametrofactutransaccionReturnGeneral) {
		this.parametrofactutransaccionReturnGeneral = parametrofactutransaccionReturnGeneral;
	}	
	
	
	public Long id_empresaFK_IdEmpresa=-1L;

	public Long getid_empresaFK_IdEmpresa() {
		return this.id_empresaFK_IdEmpresa;
	}

	public void setid_empresaFK_IdEmpresa(Long id_empresaFK_IdEmpresa) {
		this.id_empresaFK_IdEmpresa = id_empresaFK_IdEmpresa;
	}

	public Long id_sucursalFK_IdSucursal=-1L;

	public Long getid_sucursalFK_IdSucursal() {
		return this.id_sucursalFK_IdSucursal;
	}

	public void setid_sucursalFK_IdSucursal(Long id_sucursalFK_IdSucursal) {
		this.id_sucursalFK_IdSucursal = id_sucursalFK_IdSucursal;
	}

	public Long id_transaccion_cuenta_co_facturaFK_IdTransaccionCuentaCoFactura=-1L;

	public Long getid_transaccion_cuenta_co_facturaFK_IdTransaccionCuentaCoFactura() {
		return this.id_transaccion_cuenta_co_facturaFK_IdTransaccionCuentaCoFactura;
	}

	public void setid_transaccion_cuenta_co_facturaFK_IdTransaccionCuentaCoFactura(Long id_transaccion_cuenta_co_facturaFK_IdTransaccionCuentaCoFactura) {
		this.id_transaccion_cuenta_co_facturaFK_IdTransaccionCuentaCoFactura = id_transaccion_cuenta_co_facturaFK_IdTransaccionCuentaCoFactura;
	}

	public Long id_transaccion_cuenta_co_nota_creditoFK_IdTransaccionCuentaCoNotaCredito=-1L;

	public Long getid_transaccion_cuenta_co_nota_creditoFK_IdTransaccionCuentaCoNotaCredito() {
		return this.id_transaccion_cuenta_co_nota_creditoFK_IdTransaccionCuentaCoNotaCredito;
	}

	public void setid_transaccion_cuenta_co_nota_creditoFK_IdTransaccionCuentaCoNotaCredito(Long id_transaccion_cuenta_co_nota_creditoFK_IdTransaccionCuentaCoNotaCredito) {
		this.id_transaccion_cuenta_co_nota_creditoFK_IdTransaccionCuentaCoNotaCredito = id_transaccion_cuenta_co_nota_creditoFK_IdTransaccionCuentaCoNotaCredito;
	}

	public Long id_transaccion_cuenta_co_nota_ventaFK_IdTransaccionCuentaCoNotaVenta=-1L;

	public Long getid_transaccion_cuenta_co_nota_ventaFK_IdTransaccionCuentaCoNotaVenta() {
		return this.id_transaccion_cuenta_co_nota_ventaFK_IdTransaccionCuentaCoNotaVenta;
	}

	public void setid_transaccion_cuenta_co_nota_ventaFK_IdTransaccionCuentaCoNotaVenta(Long id_transaccion_cuenta_co_nota_ventaFK_IdTransaccionCuentaCoNotaVenta) {
		this.id_transaccion_cuenta_co_nota_ventaFK_IdTransaccionCuentaCoNotaVenta = id_transaccion_cuenta_co_nota_ventaFK_IdTransaccionCuentaCoNotaVenta;
	}

	public Long id_transaccion_cuenta_co_tarjetaFK_IdTransaccionCuentaCoTarjeta=-1L;

	public Long getid_transaccion_cuenta_co_tarjetaFK_IdTransaccionCuentaCoTarjeta() {
		return this.id_transaccion_cuenta_co_tarjetaFK_IdTransaccionCuentaCoTarjeta;
	}

	public void setid_transaccion_cuenta_co_tarjetaFK_IdTransaccionCuentaCoTarjeta(Long id_transaccion_cuenta_co_tarjetaFK_IdTransaccionCuentaCoTarjeta) {
		this.id_transaccion_cuenta_co_tarjetaFK_IdTransaccionCuentaCoTarjeta = id_transaccion_cuenta_co_tarjetaFK_IdTransaccionCuentaCoTarjeta;
	}

	public Long id_transaccion_cuenta_pa_facturaFK_IdTransaccionCuentaPaFactura=-1L;

	public Long getid_transaccion_cuenta_pa_facturaFK_IdTransaccionCuentaPaFactura() {
		return this.id_transaccion_cuenta_pa_facturaFK_IdTransaccionCuentaPaFactura;
	}

	public void setid_transaccion_cuenta_pa_facturaFK_IdTransaccionCuentaPaFactura(Long id_transaccion_cuenta_pa_facturaFK_IdTransaccionCuentaPaFactura) {
		this.id_transaccion_cuenta_pa_facturaFK_IdTransaccionCuentaPaFactura = id_transaccion_cuenta_pa_facturaFK_IdTransaccionCuentaPaFactura;
	}

	public Long id_transaccion_cuenta_pa_nota_creditoFK_IdTransaccionCuentaPaNotaCredito=-1L;

	public Long getid_transaccion_cuenta_pa_nota_creditoFK_IdTransaccionCuentaPaNotaCredito() {
		return this.id_transaccion_cuenta_pa_nota_creditoFK_IdTransaccionCuentaPaNotaCredito;
	}

	public void setid_transaccion_cuenta_pa_nota_creditoFK_IdTransaccionCuentaPaNotaCredito(Long id_transaccion_cuenta_pa_nota_creditoFK_IdTransaccionCuentaPaNotaCredito) {
		this.id_transaccion_cuenta_pa_nota_creditoFK_IdTransaccionCuentaPaNotaCredito = id_transaccion_cuenta_pa_nota_creditoFK_IdTransaccionCuentaPaNotaCredito;
	}

	public Long id_transaccion_inven_facturaFK_IdTransaccionInvenFactura=-1L;

	public Long getid_transaccion_inven_facturaFK_IdTransaccionInvenFactura() {
		return this.id_transaccion_inven_facturaFK_IdTransaccionInvenFactura;
	}

	public void setid_transaccion_inven_facturaFK_IdTransaccionInvenFactura(Long id_transaccion_inven_facturaFK_IdTransaccionInvenFactura) {
		this.id_transaccion_inven_facturaFK_IdTransaccionInvenFactura = id_transaccion_inven_facturaFK_IdTransaccionInvenFactura;
	}

	public Long id_transaccion_inven_nota_creditoFK_IdTransaccionInvenNotaCredito=-1L;

	public Long getid_transaccion_inven_nota_creditoFK_IdTransaccionInvenNotaCredito() {
		return this.id_transaccion_inven_nota_creditoFK_IdTransaccionInvenNotaCredito;
	}

	public void setid_transaccion_inven_nota_creditoFK_IdTransaccionInvenNotaCredito(Long id_transaccion_inven_nota_creditoFK_IdTransaccionInvenNotaCredito) {
		this.id_transaccion_inven_nota_creditoFK_IdTransaccionInvenNotaCredito = id_transaccion_inven_nota_creditoFK_IdTransaccionInvenNotaCredito;
	}

	public Long id_transaccion_inven_nota_ventaFK_IdTransaccionInvenNotaVenta=-1L;

	public Long getid_transaccion_inven_nota_ventaFK_IdTransaccionInvenNotaVenta() {
		return this.id_transaccion_inven_nota_ventaFK_IdTransaccionInvenNotaVenta;
	}

	public void setid_transaccion_inven_nota_ventaFK_IdTransaccionInvenNotaVenta(Long id_transaccion_inven_nota_ventaFK_IdTransaccionInvenNotaVenta) {
		this.id_transaccion_inven_nota_ventaFK_IdTransaccionInvenNotaVenta = id_transaccion_inven_nota_ventaFK_IdTransaccionInvenNotaVenta;
	}

		
	
	//ELEMENTOS TABLAS PARAMETOS
	
	
	
	
	
	
	//ELEMENTOS TABLAS PARAMETOS_FIN
	
	
	public ParametroFactuTransaccionLogic getParametroFactuTransaccionLogic()	{		
		return parametrofactutransaccionLogic;
	}

	public void setParametroFactuTransaccionLogic(ParametroFactuTransaccionLogic parametrofactutransaccionLogic) {
		this.parametrofactutransaccionLogic = parametrofactutransaccionLogic;
	}
	
	
	public void setsFinalQueryGeneral(String sFinalQueryGeneral) {
		this.sFinalQueryGeneral=sFinalQueryGeneral;
	}
	
	public String getsFinalQueryGeneral() {
		return this.sFinalQueryGeneral;
	}
		
	public Boolean getIsGuardarCambiosEnLote() {
		return isGuardarCambiosEnLote;
	}

	public void setIsGuardarCambiosEnLote(Boolean isGuardarCambiosEnLote) {
		this.isGuardarCambiosEnLote = isGuardarCambiosEnLote;
	}
	
	public Boolean getIsCargarCombosDependencia() {
		return isCargarCombosDependencia;
	}

	public void setIsCargarCombosDependencia(Boolean isCargarCombosDependencia) {
		this.isCargarCombosDependencia = isCargarCombosDependencia;
	}
	
	public Boolean getIsEsNuevoParametroFactuTransaccion() {
		return isEsNuevoParametroFactuTransaccion;
	}

	public void setIsEsNuevoParametroFactuTransaccion(Boolean isEsNuevoParametroFactuTransaccion) {
		this.isEsNuevoParametroFactuTransaccion = isEsNuevoParametroFactuTransaccion;
	}

	public Boolean getEsParaAccionDesdeFormularioParametroFactuTransaccion() {
		return esParaAccionDesdeFormularioParametroFactuTransaccion;
	}
	
	public void setEsParaAccionDesdeFormularioParametroFactuTransaccion(Boolean esParaAccionDesdeFormularioParametroFactuTransaccion) {
		this.esParaAccionDesdeFormularioParametroFactuTransaccion = esParaAccionDesdeFormularioParametroFactuTransaccion;
	}
	
	public Boolean getIsEsMantenimientoRelacionesRelacionadoUnico() {
		return isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public void setIsEsMantenimientoRelacionesRelacionadoUnico(Boolean isEsMantenimientoRelacionesRelacionadoUnico) {
		this.isEsMantenimientoRelacionesRelacionadoUnico = isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public Boolean getIsEsMantenimientoRelaciones() {
		return isEsMantenimientoRelaciones;
	}

	public void setIsEsMantenimientoRelaciones(Boolean isEsMantenimientoRelaciones) {
		this.isEsMantenimientoRelaciones = isEsMantenimientoRelaciones;
	}

	public Boolean getIsEsMantenimientoRelacionado() {
		return isEsMantenimientoRelacionado;
	}

	public void setIsEsMantenimientoRelacionado(Boolean isEsMantenimientoRelacionado) {
		this.isEsMantenimientoRelacionado = isEsMantenimientoRelacionado;
	}

	public Boolean getesParaBusquedaForeignKey() {
		return esParaBusquedaForeignKey;
	}

	public void setesParaBusquedaForeignKey(Boolean esParaBusquedaForeignKey) {
		this.esParaBusquedaForeignKey = esParaBusquedaForeignKey;
	}

	public Boolean getIsContieneImagenes() {
		return isContieneImagenes;
	}

	public void setIsContieneImagenes(Boolean isContieneImagenes) {
		this.isContieneImagenes = isContieneImagenes;
	}		
	
	
	public void cargarCombosEmpresasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.empresasForeignKey=new ArrayList<Empresa>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EmpresaLogic empresaLogic=new EmpresaLogic();

			//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

			if(this.parametrofactutransaccionSessionBean==null) {
				this.parametrofactutransaccionSessionBean=new ParametroFactuTransaccionSessionBean();
			}

			if(!this.parametrofactutransaccionSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

					empresaLogic.getTodosEmpresasWithConnection(sFinalQuery,new Pagination());

					this.empresasForeignKey=empresaLogic.getEmpresas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEmpresa(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					empresaLogic.getEntityWithConnection(parametrofactutransaccionSessionBean.getlidEmpresaActual());
					this.empresasForeignKey.add(empresaLogic.getEmpresa());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosSucursalsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.sucursalsForeignKey=new ArrayList<Sucursal>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			SucursalLogic sucursalLogic=new SucursalLogic();

			//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

			if(this.parametrofactutransaccionSessionBean==null) {
				this.parametrofactutransaccionSessionBean=new ParametroFactuTransaccionSessionBean();
			}

			if(!this.parametrofactutransaccionSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

					sucursalLogic.getTodosSucursalsWithConnection(sFinalQuery,new Pagination());

					this.sucursalsForeignKey=sucursalLogic.getSucursals();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaSucursal(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					sucursalLogic.getEntityWithConnection(parametrofactutransaccionSessionBean.getlidSucursalActual());
					this.sucursalsForeignKey.add(sucursalLogic.getSucursal());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTransaccionInvenFacturasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.transaccioninvenfacturasForeignKey=new ArrayList<Transaccion>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TransaccionLogic transaccionLogic=new TransaccionLogic();

			//transaccionLogic.getTransaccionDataAccess().setIsForForeingKeyData(true);

			if(this.parametrofactutransaccionSessionBean==null) {
				this.parametrofactutransaccionSessionBean=new ParametroFactuTransaccionSessionBean();
			}

			if(!this.parametrofactutransaccionSessionBean.getisBusquedaDesdeForeignKeySesionTransaccionInvenFactura()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//transaccioninvenfacturaLogic.getTransaccionDataAccess().setIsForForeingKeyData(true);

					transaccionLogic.getTodosTransaccionsWithConnection(sFinalQuery,new Pagination());

					this.transaccioninvenfacturasForeignKey=transaccionLogic.getTransaccions();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTransaccionInvenFactura(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					transaccionLogic.getEntityWithConnection(parametrofactutransaccionSessionBean.getlidTransaccionInvenFacturaActual());
					this.transaccioninvenfacturasForeignKey.add(transaccionLogic.getTransaccion());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTransaccionInvenNotaCreditosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.transaccioninvennotacreditosForeignKey=new ArrayList<Transaccion>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TransaccionLogic transaccionLogic=new TransaccionLogic();

			//transaccionLogic.getTransaccionDataAccess().setIsForForeingKeyData(true);

			if(this.parametrofactutransaccionSessionBean==null) {
				this.parametrofactutransaccionSessionBean=new ParametroFactuTransaccionSessionBean();
			}

			if(!this.parametrofactutransaccionSessionBean.getisBusquedaDesdeForeignKeySesionTransaccionInvenNotaCredito()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//transaccioninvennotacreditoLogic.getTransaccionDataAccess().setIsForForeingKeyData(true);

					transaccionLogic.getTodosTransaccionsWithConnection(sFinalQuery,new Pagination());

					this.transaccioninvennotacreditosForeignKey=transaccionLogic.getTransaccions();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTransaccionInvenNotaCredito(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					transaccionLogic.getEntityWithConnection(parametrofactutransaccionSessionBean.getlidTransaccionInvenNotaCreditoActual());
					this.transaccioninvennotacreditosForeignKey.add(transaccionLogic.getTransaccion());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTransaccionInvenNotaVentasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.transaccioninvennotaventasForeignKey=new ArrayList<Transaccion>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TransaccionLogic transaccionLogic=new TransaccionLogic();

			//transaccionLogic.getTransaccionDataAccess().setIsForForeingKeyData(true);

			if(this.parametrofactutransaccionSessionBean==null) {
				this.parametrofactutransaccionSessionBean=new ParametroFactuTransaccionSessionBean();
			}

			if(!this.parametrofactutransaccionSessionBean.getisBusquedaDesdeForeignKeySesionTransaccionInvenNotaVenta()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//transaccioninvennotaventaLogic.getTransaccionDataAccess().setIsForForeingKeyData(true);

					transaccionLogic.getTodosTransaccionsWithConnection(sFinalQuery,new Pagination());

					this.transaccioninvennotaventasForeignKey=transaccionLogic.getTransaccions();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTransaccionInvenNotaVenta(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					transaccionLogic.getEntityWithConnection(parametrofactutransaccionSessionBean.getlidTransaccionInvenNotaVentaActual());
					this.transaccioninvennotaventasForeignKey.add(transaccionLogic.getTransaccion());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTransaccionCuentaCoFacturasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.transaccioncuentacofacturasForeignKey=new ArrayList<Transaccion>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TransaccionLogic transaccionLogic=new TransaccionLogic();

			//transaccionLogic.getTransaccionDataAccess().setIsForForeingKeyData(true);

			if(this.parametrofactutransaccionSessionBean==null) {
				this.parametrofactutransaccionSessionBean=new ParametroFactuTransaccionSessionBean();
			}

			if(!this.parametrofactutransaccionSessionBean.getisBusquedaDesdeForeignKeySesionTransaccionCuentaCoFactura()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//transaccioncuentacofacturaLogic.getTransaccionDataAccess().setIsForForeingKeyData(true);

					transaccionLogic.getTodosTransaccionsWithConnection(sFinalQuery,new Pagination());

					this.transaccioncuentacofacturasForeignKey=transaccionLogic.getTransaccions();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTransaccionCuentaCoFactura(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					transaccionLogic.getEntityWithConnection(parametrofactutransaccionSessionBean.getlidTransaccionCuentaCoFacturaActual());
					this.transaccioncuentacofacturasForeignKey.add(transaccionLogic.getTransaccion());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTransaccionCuentaCoNotaCreditosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.transaccioncuentaconotacreditosForeignKey=new ArrayList<Transaccion>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TransaccionLogic transaccionLogic=new TransaccionLogic();

			//transaccionLogic.getTransaccionDataAccess().setIsForForeingKeyData(true);

			if(this.parametrofactutransaccionSessionBean==null) {
				this.parametrofactutransaccionSessionBean=new ParametroFactuTransaccionSessionBean();
			}

			if(!this.parametrofactutransaccionSessionBean.getisBusquedaDesdeForeignKeySesionTransaccionCuentaCoNotaCredito()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//transaccioncuentaconotacreditoLogic.getTransaccionDataAccess().setIsForForeingKeyData(true);

					transaccionLogic.getTodosTransaccionsWithConnection(sFinalQuery,new Pagination());

					this.transaccioncuentaconotacreditosForeignKey=transaccionLogic.getTransaccions();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTransaccionCuentaCoNotaCredito(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					transaccionLogic.getEntityWithConnection(parametrofactutransaccionSessionBean.getlidTransaccionCuentaCoNotaCreditoActual());
					this.transaccioncuentaconotacreditosForeignKey.add(transaccionLogic.getTransaccion());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTransaccionCuentaCoNotaVentasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.transaccioncuentaconotaventasForeignKey=new ArrayList<Transaccion>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TransaccionLogic transaccionLogic=new TransaccionLogic();

			//transaccionLogic.getTransaccionDataAccess().setIsForForeingKeyData(true);

			if(this.parametrofactutransaccionSessionBean==null) {
				this.parametrofactutransaccionSessionBean=new ParametroFactuTransaccionSessionBean();
			}

			if(!this.parametrofactutransaccionSessionBean.getisBusquedaDesdeForeignKeySesionTransaccionCuentaCoNotaVenta()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//transaccioncuentaconotaventaLogic.getTransaccionDataAccess().setIsForForeingKeyData(true);

					transaccionLogic.getTodosTransaccionsWithConnection(sFinalQuery,new Pagination());

					this.transaccioncuentaconotaventasForeignKey=transaccionLogic.getTransaccions();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTransaccionCuentaCoNotaVenta(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					transaccionLogic.getEntityWithConnection(parametrofactutransaccionSessionBean.getlidTransaccionCuentaCoNotaVentaActual());
					this.transaccioncuentaconotaventasForeignKey.add(transaccionLogic.getTransaccion());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTransaccionCuentaCoTarjetasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.transaccioncuentacotarjetasForeignKey=new ArrayList<Transaccion>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TransaccionLogic transaccionLogic=new TransaccionLogic();

			//transaccionLogic.getTransaccionDataAccess().setIsForForeingKeyData(true);

			if(this.parametrofactutransaccionSessionBean==null) {
				this.parametrofactutransaccionSessionBean=new ParametroFactuTransaccionSessionBean();
			}

			if(!this.parametrofactutransaccionSessionBean.getisBusquedaDesdeForeignKeySesionTransaccionCuentaCoTarjeta()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//transaccioncuentacotarjetaLogic.getTransaccionDataAccess().setIsForForeingKeyData(true);

					transaccionLogic.getTodosTransaccionsWithConnection(sFinalQuery,new Pagination());

					this.transaccioncuentacotarjetasForeignKey=transaccionLogic.getTransaccions();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTransaccionCuentaCoTarjeta(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					transaccionLogic.getEntityWithConnection(parametrofactutransaccionSessionBean.getlidTransaccionCuentaCoTarjetaActual());
					this.transaccioncuentacotarjetasForeignKey.add(transaccionLogic.getTransaccion());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTransaccionCuentaPaFacturasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.transaccioncuentapafacturasForeignKey=new ArrayList<Transaccion>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TransaccionLogic transaccionLogic=new TransaccionLogic();

			//transaccionLogic.getTransaccionDataAccess().setIsForForeingKeyData(true);

			if(this.parametrofactutransaccionSessionBean==null) {
				this.parametrofactutransaccionSessionBean=new ParametroFactuTransaccionSessionBean();
			}

			if(!this.parametrofactutransaccionSessionBean.getisBusquedaDesdeForeignKeySesionTransaccionCuentaPaFactura()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//transaccioncuentapafacturaLogic.getTransaccionDataAccess().setIsForForeingKeyData(true);

					transaccionLogic.getTodosTransaccionsWithConnection(sFinalQuery,new Pagination());

					this.transaccioncuentapafacturasForeignKey=transaccionLogic.getTransaccions();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTransaccionCuentaPaFactura(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					transaccionLogic.getEntityWithConnection(parametrofactutransaccionSessionBean.getlidTransaccionCuentaPaFacturaActual());
					this.transaccioncuentapafacturasForeignKey.add(transaccionLogic.getTransaccion());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTransaccionCuentaPaNotaCreditosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.transaccioncuentapanotacreditosForeignKey=new ArrayList<Transaccion>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TransaccionLogic transaccionLogic=new TransaccionLogic();

			//transaccionLogic.getTransaccionDataAccess().setIsForForeingKeyData(true);

			if(this.parametrofactutransaccionSessionBean==null) {
				this.parametrofactutransaccionSessionBean=new ParametroFactuTransaccionSessionBean();
			}

			if(!this.parametrofactutransaccionSessionBean.getisBusquedaDesdeForeignKeySesionTransaccionCuentaPaNotaCredito()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//transaccioncuentapanotacreditoLogic.getTransaccionDataAccess().setIsForForeingKeyData(true);

					transaccionLogic.getTodosTransaccionsWithConnection(sFinalQuery,new Pagination());

					this.transaccioncuentapanotacreditosForeignKey=transaccionLogic.getTransaccions();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTransaccionCuentaPaNotaCredito(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					transaccionLogic.getEntityWithConnection(parametrofactutransaccionSessionBean.getlidTransaccionCuentaPaNotaCreditoActual());
					this.transaccioncuentapanotacreditosForeignKey.add(transaccionLogic.getTransaccion());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	
	public void setActualEmpresaForeignKey(Long idEmpresaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(empresaTemp!=null) {

					if(this.parametrofactutransaccion!=null) {
						this.parametrofactutransaccion.setEmpresa(empresaTemp);
					}

					if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) {
						this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_empresaParametroFactuTransaccion.setSelectedItem(empresaTemp);
					}
				} else {
					//jComboBoxid_empresaParametroFactuTransaccion.setSelectedItem(empresaTemp);
					if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) {
						if(this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_empresaParametroFactuTransaccion.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_empresaParametroFactuTransaccion.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEmpresaForeignKeyDescripcion(Long idEmpresaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}


			sDescripcion=EmpresaConstantesFunciones.getEmpresaDescripcion(empresaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEmpresaForeignKeyGenerico(Long idEmpresaSeleccionado,JComboBox jComboBoxid_empresaParametroFactuTransaccionGenerico)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(empresaTemp!=null) {
				jComboBoxid_empresaParametroFactuTransaccionGenerico.setSelectedItem(empresaTemp);
			} else {
				if(jComboBoxid_empresaParametroFactuTransaccionGenerico!=null && jComboBoxid_empresaParametroFactuTransaccionGenerico.getItemCount()>0) {
					jComboBoxid_empresaParametroFactuTransaccionGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualSucursalForeignKey(Long idSucursalSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(sucursalTemp!=null) {

					if(this.parametrofactutransaccion!=null) {
						this.parametrofactutransaccion.setSucursal(sucursalTemp);
					}

					if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) {
						this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_sucursalParametroFactuTransaccion.setSelectedItem(sucursalTemp);
					}
				} else {
					//jComboBoxid_sucursalParametroFactuTransaccion.setSelectedItem(sucursalTemp);
					if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) {
						if(this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_sucursalParametroFactuTransaccion.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_sucursalParametroFactuTransaccion.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualSucursalForeignKeyDescripcion(Long idSucursalSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}


			sDescripcion=SucursalConstantesFunciones.getSucursalDescripcion(sucursalTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualSucursalForeignKeyGenerico(Long idSucursalSeleccionado,JComboBox jComboBoxid_sucursalParametroFactuTransaccionGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sucursalTemp!=null) {
				jComboBoxid_sucursalParametroFactuTransaccionGenerico.setSelectedItem(sucursalTemp);
			} else {
				if(jComboBoxid_sucursalParametroFactuTransaccionGenerico!=null && jComboBoxid_sucursalParametroFactuTransaccionGenerico.getItemCount()>0) {
					jComboBoxid_sucursalParametroFactuTransaccionGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTransaccionInvenFacturaForeignKey(Long idTransaccionInvenFacturaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Transaccion  transaccioninvenfacturaTemp=null;

			for(Transaccion transaccioninvenfacturaAux:transaccioninvenfacturasForeignKey) {
				if(transaccioninvenfacturaAux.getId()!=null && transaccioninvenfacturaAux.getId().equals(idTransaccionInvenFacturaSeleccionado)) {
					transaccioninvenfacturaTemp=transaccioninvenfacturaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(transaccioninvenfacturaTemp!=null) {

					if(this.parametrofactutransaccion!=null) {
						this.parametrofactutransaccion.setTransaccionInvenFactura(transaccioninvenfacturaTemp);
					}

					if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) {
						this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_inven_facturaParametroFactuTransaccion.setSelectedItem(transaccioninvenfacturaTemp);
					}
				} else {
					//jComboBoxid_transaccion_inven_facturaParametroFactuTransaccion.setSelectedItem(transaccioninvenfacturaTemp);
					if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) {
						if(this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_inven_facturaParametroFactuTransaccion.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_inven_facturaParametroFactuTransaccion.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTransaccionInvenFactura") || sFormularioTipoBusqueda.equals("Todos")){
					if(transaccioninvenfacturaTemp!=null && jComboBoxid_transaccion_inven_facturaFK_IdTransaccionInvenFacturaParametroFactuTransaccion!=null) {
						jComboBoxid_transaccion_inven_facturaFK_IdTransaccionInvenFacturaParametroFactuTransaccion.setSelectedItem(transaccioninvenfacturaTemp);
					} else {
						if(jComboBoxid_transaccion_inven_facturaFK_IdTransaccionInvenFacturaParametroFactuTransaccion!=null) {
							//jComboBoxid_transaccion_inven_facturaFK_IdTransaccionInvenFacturaParametroFactuTransaccion.setSelectedItem(transaccioninvenfacturaTemp);
							if(jComboBoxid_transaccion_inven_facturaFK_IdTransaccionInvenFacturaParametroFactuTransaccion.getItemCount()>0) {
								jComboBoxid_transaccion_inven_facturaFK_IdTransaccionInvenFacturaParametroFactuTransaccion.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTransaccionInvenFacturaForeignKeyDescripcion(Long idTransaccionInvenFacturaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Transaccion  transaccioninvenfacturaTemp=null;

			for(Transaccion transaccioninvenfacturaAux:transaccioninvenfacturasForeignKey) {
				if(transaccioninvenfacturaAux.getId()!=null && transaccioninvenfacturaAux.getId().equals(idTransaccionInvenFacturaSeleccionado)) {
					transaccioninvenfacturaTemp=transaccioninvenfacturaAux;
					break;
				}
			}


			sDescripcion=TransaccionConstantesFunciones.getTransaccionDescripcion(transaccioninvenfacturaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTransaccionInvenFacturaForeignKeyGenerico(Long idTransaccionInvenFacturaSeleccionado,JComboBox jComboBoxid_transaccion_inven_facturaParametroFactuTransaccionGenerico)throws Exception
	{
		try
		{
			Transaccion  transaccioninvenfacturaTemp=null;

			for(Transaccion transaccioninvenfacturaAux:transaccioninvenfacturasForeignKey) {
				if(transaccioninvenfacturaAux.getId()!=null && transaccioninvenfacturaAux.getId().equals(idTransaccionInvenFacturaSeleccionado)) {
					transaccioninvenfacturaTemp=transaccioninvenfacturaAux;
					break;
				}
			}

			if(transaccioninvenfacturaTemp!=null) {
				jComboBoxid_transaccion_inven_facturaParametroFactuTransaccionGenerico.setSelectedItem(transaccioninvenfacturaTemp);
			} else {
				if(jComboBoxid_transaccion_inven_facturaParametroFactuTransaccionGenerico!=null && jComboBoxid_transaccion_inven_facturaParametroFactuTransaccionGenerico.getItemCount()>0) {
					jComboBoxid_transaccion_inven_facturaParametroFactuTransaccionGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTransaccionInvenNotaCreditoForeignKey(Long idTransaccionInvenNotaCreditoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Transaccion  transaccioninvennotacreditoTemp=null;

			for(Transaccion transaccioninvennotacreditoAux:transaccioninvennotacreditosForeignKey) {
				if(transaccioninvennotacreditoAux.getId()!=null && transaccioninvennotacreditoAux.getId().equals(idTransaccionInvenNotaCreditoSeleccionado)) {
					transaccioninvennotacreditoTemp=transaccioninvennotacreditoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(transaccioninvennotacreditoTemp!=null) {

					if(this.parametrofactutransaccion!=null) {
						this.parametrofactutransaccion.setTransaccionInvenNotaCredito(transaccioninvennotacreditoTemp);
					}

					if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) {
						this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_inven_nota_creditoParametroFactuTransaccion.setSelectedItem(transaccioninvennotacreditoTemp);
					}
				} else {
					//jComboBoxid_transaccion_inven_nota_creditoParametroFactuTransaccion.setSelectedItem(transaccioninvennotacreditoTemp);
					if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) {
						if(this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_inven_nota_creditoParametroFactuTransaccion.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_inven_nota_creditoParametroFactuTransaccion.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTransaccionInvenNotaCredito") || sFormularioTipoBusqueda.equals("Todos")){
					if(transaccioninvennotacreditoTemp!=null && jComboBoxid_transaccion_inven_nota_creditoFK_IdTransaccionInvenNotaCreditoParametroFactuTransaccion!=null) {
						jComboBoxid_transaccion_inven_nota_creditoFK_IdTransaccionInvenNotaCreditoParametroFactuTransaccion.setSelectedItem(transaccioninvennotacreditoTemp);
					} else {
						if(jComboBoxid_transaccion_inven_nota_creditoFK_IdTransaccionInvenNotaCreditoParametroFactuTransaccion!=null) {
							//jComboBoxid_transaccion_inven_nota_creditoFK_IdTransaccionInvenNotaCreditoParametroFactuTransaccion.setSelectedItem(transaccioninvennotacreditoTemp);
							if(jComboBoxid_transaccion_inven_nota_creditoFK_IdTransaccionInvenNotaCreditoParametroFactuTransaccion.getItemCount()>0) {
								jComboBoxid_transaccion_inven_nota_creditoFK_IdTransaccionInvenNotaCreditoParametroFactuTransaccion.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTransaccionInvenNotaCreditoForeignKeyDescripcion(Long idTransaccionInvenNotaCreditoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Transaccion  transaccioninvennotacreditoTemp=null;

			for(Transaccion transaccioninvennotacreditoAux:transaccioninvennotacreditosForeignKey) {
				if(transaccioninvennotacreditoAux.getId()!=null && transaccioninvennotacreditoAux.getId().equals(idTransaccionInvenNotaCreditoSeleccionado)) {
					transaccioninvennotacreditoTemp=transaccioninvennotacreditoAux;
					break;
				}
			}


			sDescripcion=TransaccionConstantesFunciones.getTransaccionDescripcion(transaccioninvennotacreditoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTransaccionInvenNotaCreditoForeignKeyGenerico(Long idTransaccionInvenNotaCreditoSeleccionado,JComboBox jComboBoxid_transaccion_inven_nota_creditoParametroFactuTransaccionGenerico)throws Exception
	{
		try
		{
			Transaccion  transaccioninvennotacreditoTemp=null;

			for(Transaccion transaccioninvennotacreditoAux:transaccioninvennotacreditosForeignKey) {
				if(transaccioninvennotacreditoAux.getId()!=null && transaccioninvennotacreditoAux.getId().equals(idTransaccionInvenNotaCreditoSeleccionado)) {
					transaccioninvennotacreditoTemp=transaccioninvennotacreditoAux;
					break;
				}
			}

			if(transaccioninvennotacreditoTemp!=null) {
				jComboBoxid_transaccion_inven_nota_creditoParametroFactuTransaccionGenerico.setSelectedItem(transaccioninvennotacreditoTemp);
			} else {
				if(jComboBoxid_transaccion_inven_nota_creditoParametroFactuTransaccionGenerico!=null && jComboBoxid_transaccion_inven_nota_creditoParametroFactuTransaccionGenerico.getItemCount()>0) {
					jComboBoxid_transaccion_inven_nota_creditoParametroFactuTransaccionGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTransaccionInvenNotaVentaForeignKey(Long idTransaccionInvenNotaVentaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Transaccion  transaccioninvennotaventaTemp=null;

			for(Transaccion transaccioninvennotaventaAux:transaccioninvennotaventasForeignKey) {
				if(transaccioninvennotaventaAux.getId()!=null && transaccioninvennotaventaAux.getId().equals(idTransaccionInvenNotaVentaSeleccionado)) {
					transaccioninvennotaventaTemp=transaccioninvennotaventaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(transaccioninvennotaventaTemp!=null) {

					if(this.parametrofactutransaccion!=null) {
						this.parametrofactutransaccion.setTransaccionInvenNotaVenta(transaccioninvennotaventaTemp);
					}

					if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) {
						this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_inven_nota_ventaParametroFactuTransaccion.setSelectedItem(transaccioninvennotaventaTemp);
					}
				} else {
					//jComboBoxid_transaccion_inven_nota_ventaParametroFactuTransaccion.setSelectedItem(transaccioninvennotaventaTemp);
					if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) {
						if(this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_inven_nota_ventaParametroFactuTransaccion.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_inven_nota_ventaParametroFactuTransaccion.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTransaccionInvenNotaVenta") || sFormularioTipoBusqueda.equals("Todos")){
					if(transaccioninvennotaventaTemp!=null && jComboBoxid_transaccion_inven_nota_ventaFK_IdTransaccionInvenNotaVentaParametroFactuTransaccion!=null) {
						jComboBoxid_transaccion_inven_nota_ventaFK_IdTransaccionInvenNotaVentaParametroFactuTransaccion.setSelectedItem(transaccioninvennotaventaTemp);
					} else {
						if(jComboBoxid_transaccion_inven_nota_ventaFK_IdTransaccionInvenNotaVentaParametroFactuTransaccion!=null) {
							//jComboBoxid_transaccion_inven_nota_ventaFK_IdTransaccionInvenNotaVentaParametroFactuTransaccion.setSelectedItem(transaccioninvennotaventaTemp);
							if(jComboBoxid_transaccion_inven_nota_ventaFK_IdTransaccionInvenNotaVentaParametroFactuTransaccion.getItemCount()>0) {
								jComboBoxid_transaccion_inven_nota_ventaFK_IdTransaccionInvenNotaVentaParametroFactuTransaccion.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTransaccionInvenNotaVentaForeignKeyDescripcion(Long idTransaccionInvenNotaVentaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Transaccion  transaccioninvennotaventaTemp=null;

			for(Transaccion transaccioninvennotaventaAux:transaccioninvennotaventasForeignKey) {
				if(transaccioninvennotaventaAux.getId()!=null && transaccioninvennotaventaAux.getId().equals(idTransaccionInvenNotaVentaSeleccionado)) {
					transaccioninvennotaventaTemp=transaccioninvennotaventaAux;
					break;
				}
			}


			sDescripcion=TransaccionConstantesFunciones.getTransaccionDescripcion(transaccioninvennotaventaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTransaccionInvenNotaVentaForeignKeyGenerico(Long idTransaccionInvenNotaVentaSeleccionado,JComboBox jComboBoxid_transaccion_inven_nota_ventaParametroFactuTransaccionGenerico)throws Exception
	{
		try
		{
			Transaccion  transaccioninvennotaventaTemp=null;

			for(Transaccion transaccioninvennotaventaAux:transaccioninvennotaventasForeignKey) {
				if(transaccioninvennotaventaAux.getId()!=null && transaccioninvennotaventaAux.getId().equals(idTransaccionInvenNotaVentaSeleccionado)) {
					transaccioninvennotaventaTemp=transaccioninvennotaventaAux;
					break;
				}
			}

			if(transaccioninvennotaventaTemp!=null) {
				jComboBoxid_transaccion_inven_nota_ventaParametroFactuTransaccionGenerico.setSelectedItem(transaccioninvennotaventaTemp);
			} else {
				if(jComboBoxid_transaccion_inven_nota_ventaParametroFactuTransaccionGenerico!=null && jComboBoxid_transaccion_inven_nota_ventaParametroFactuTransaccionGenerico.getItemCount()>0) {
					jComboBoxid_transaccion_inven_nota_ventaParametroFactuTransaccionGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTransaccionCuentaCoFacturaForeignKey(Long idTransaccionCuentaCoFacturaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Transaccion  transaccioncuentacofacturaTemp=null;

			for(Transaccion transaccioncuentacofacturaAux:transaccioncuentacofacturasForeignKey) {
				if(transaccioncuentacofacturaAux.getId()!=null && transaccioncuentacofacturaAux.getId().equals(idTransaccionCuentaCoFacturaSeleccionado)) {
					transaccioncuentacofacturaTemp=transaccioncuentacofacturaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(transaccioncuentacofacturaTemp!=null) {

					if(this.parametrofactutransaccion!=null) {
						this.parametrofactutransaccion.setTransaccionCuentaCoFactura(transaccioncuentacofacturaTemp);
					}

					if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) {
						this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_cuenta_co_facturaParametroFactuTransaccion.setSelectedItem(transaccioncuentacofacturaTemp);
					}
				} else {
					//jComboBoxid_transaccion_cuenta_co_facturaParametroFactuTransaccion.setSelectedItem(transaccioncuentacofacturaTemp);
					if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) {
						if(this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_cuenta_co_facturaParametroFactuTransaccion.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_cuenta_co_facturaParametroFactuTransaccion.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTransaccionCuentaCoFactura") || sFormularioTipoBusqueda.equals("Todos")){
					if(transaccioncuentacofacturaTemp!=null && jComboBoxid_transaccion_cuenta_co_facturaFK_IdTransaccionCuentaCoFacturaParametroFactuTransaccion!=null) {
						jComboBoxid_transaccion_cuenta_co_facturaFK_IdTransaccionCuentaCoFacturaParametroFactuTransaccion.setSelectedItem(transaccioncuentacofacturaTemp);
					} else {
						if(jComboBoxid_transaccion_cuenta_co_facturaFK_IdTransaccionCuentaCoFacturaParametroFactuTransaccion!=null) {
							//jComboBoxid_transaccion_cuenta_co_facturaFK_IdTransaccionCuentaCoFacturaParametroFactuTransaccion.setSelectedItem(transaccioncuentacofacturaTemp);
							if(jComboBoxid_transaccion_cuenta_co_facturaFK_IdTransaccionCuentaCoFacturaParametroFactuTransaccion.getItemCount()>0) {
								jComboBoxid_transaccion_cuenta_co_facturaFK_IdTransaccionCuentaCoFacturaParametroFactuTransaccion.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTransaccionCuentaCoFacturaForeignKeyDescripcion(Long idTransaccionCuentaCoFacturaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Transaccion  transaccioncuentacofacturaTemp=null;

			for(Transaccion transaccioncuentacofacturaAux:transaccioncuentacofacturasForeignKey) {
				if(transaccioncuentacofacturaAux.getId()!=null && transaccioncuentacofacturaAux.getId().equals(idTransaccionCuentaCoFacturaSeleccionado)) {
					transaccioncuentacofacturaTemp=transaccioncuentacofacturaAux;
					break;
				}
			}


			sDescripcion=TransaccionConstantesFunciones.getTransaccionDescripcion(transaccioncuentacofacturaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTransaccionCuentaCoFacturaForeignKeyGenerico(Long idTransaccionCuentaCoFacturaSeleccionado,JComboBox jComboBoxid_transaccion_cuenta_co_facturaParametroFactuTransaccionGenerico)throws Exception
	{
		try
		{
			Transaccion  transaccioncuentacofacturaTemp=null;

			for(Transaccion transaccioncuentacofacturaAux:transaccioncuentacofacturasForeignKey) {
				if(transaccioncuentacofacturaAux.getId()!=null && transaccioncuentacofacturaAux.getId().equals(idTransaccionCuentaCoFacturaSeleccionado)) {
					transaccioncuentacofacturaTemp=transaccioncuentacofacturaAux;
					break;
				}
			}

			if(transaccioncuentacofacturaTemp!=null) {
				jComboBoxid_transaccion_cuenta_co_facturaParametroFactuTransaccionGenerico.setSelectedItem(transaccioncuentacofacturaTemp);
			} else {
				if(jComboBoxid_transaccion_cuenta_co_facturaParametroFactuTransaccionGenerico!=null && jComboBoxid_transaccion_cuenta_co_facturaParametroFactuTransaccionGenerico.getItemCount()>0) {
					jComboBoxid_transaccion_cuenta_co_facturaParametroFactuTransaccionGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTransaccionCuentaCoNotaCreditoForeignKey(Long idTransaccionCuentaCoNotaCreditoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Transaccion  transaccioncuentaconotacreditoTemp=null;

			for(Transaccion transaccioncuentaconotacreditoAux:transaccioncuentaconotacreditosForeignKey) {
				if(transaccioncuentaconotacreditoAux.getId()!=null && transaccioncuentaconotacreditoAux.getId().equals(idTransaccionCuentaCoNotaCreditoSeleccionado)) {
					transaccioncuentaconotacreditoTemp=transaccioncuentaconotacreditoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(transaccioncuentaconotacreditoTemp!=null) {

					if(this.parametrofactutransaccion!=null) {
						this.parametrofactutransaccion.setTransaccionCuentaCoNotaCredito(transaccioncuentaconotacreditoTemp);
					}

					if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) {
						this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_cuenta_co_nota_creditoParametroFactuTransaccion.setSelectedItem(transaccioncuentaconotacreditoTemp);
					}
				} else {
					//jComboBoxid_transaccion_cuenta_co_nota_creditoParametroFactuTransaccion.setSelectedItem(transaccioncuentaconotacreditoTemp);
					if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) {
						if(this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_cuenta_co_nota_creditoParametroFactuTransaccion.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_cuenta_co_nota_creditoParametroFactuTransaccion.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTransaccionCuentaCoNotaCredito") || sFormularioTipoBusqueda.equals("Todos")){
					if(transaccioncuentaconotacreditoTemp!=null && jComboBoxid_transaccion_cuenta_co_nota_creditoFK_IdTransaccionCuentaCoNotaCreditoParametroFactuTransaccion!=null) {
						jComboBoxid_transaccion_cuenta_co_nota_creditoFK_IdTransaccionCuentaCoNotaCreditoParametroFactuTransaccion.setSelectedItem(transaccioncuentaconotacreditoTemp);
					} else {
						if(jComboBoxid_transaccion_cuenta_co_nota_creditoFK_IdTransaccionCuentaCoNotaCreditoParametroFactuTransaccion!=null) {
							//jComboBoxid_transaccion_cuenta_co_nota_creditoFK_IdTransaccionCuentaCoNotaCreditoParametroFactuTransaccion.setSelectedItem(transaccioncuentaconotacreditoTemp);
							if(jComboBoxid_transaccion_cuenta_co_nota_creditoFK_IdTransaccionCuentaCoNotaCreditoParametroFactuTransaccion.getItemCount()>0) {
								jComboBoxid_transaccion_cuenta_co_nota_creditoFK_IdTransaccionCuentaCoNotaCreditoParametroFactuTransaccion.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTransaccionCuentaCoNotaCreditoForeignKeyDescripcion(Long idTransaccionCuentaCoNotaCreditoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Transaccion  transaccioncuentaconotacreditoTemp=null;

			for(Transaccion transaccioncuentaconotacreditoAux:transaccioncuentaconotacreditosForeignKey) {
				if(transaccioncuentaconotacreditoAux.getId()!=null && transaccioncuentaconotacreditoAux.getId().equals(idTransaccionCuentaCoNotaCreditoSeleccionado)) {
					transaccioncuentaconotacreditoTemp=transaccioncuentaconotacreditoAux;
					break;
				}
			}


			sDescripcion=TransaccionConstantesFunciones.getTransaccionDescripcion(transaccioncuentaconotacreditoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTransaccionCuentaCoNotaCreditoForeignKeyGenerico(Long idTransaccionCuentaCoNotaCreditoSeleccionado,JComboBox jComboBoxid_transaccion_cuenta_co_nota_creditoParametroFactuTransaccionGenerico)throws Exception
	{
		try
		{
			Transaccion  transaccioncuentaconotacreditoTemp=null;

			for(Transaccion transaccioncuentaconotacreditoAux:transaccioncuentaconotacreditosForeignKey) {
				if(transaccioncuentaconotacreditoAux.getId()!=null && transaccioncuentaconotacreditoAux.getId().equals(idTransaccionCuentaCoNotaCreditoSeleccionado)) {
					transaccioncuentaconotacreditoTemp=transaccioncuentaconotacreditoAux;
					break;
				}
			}

			if(transaccioncuentaconotacreditoTemp!=null) {
				jComboBoxid_transaccion_cuenta_co_nota_creditoParametroFactuTransaccionGenerico.setSelectedItem(transaccioncuentaconotacreditoTemp);
			} else {
				if(jComboBoxid_transaccion_cuenta_co_nota_creditoParametroFactuTransaccionGenerico!=null && jComboBoxid_transaccion_cuenta_co_nota_creditoParametroFactuTransaccionGenerico.getItemCount()>0) {
					jComboBoxid_transaccion_cuenta_co_nota_creditoParametroFactuTransaccionGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTransaccionCuentaCoNotaVentaForeignKey(Long idTransaccionCuentaCoNotaVentaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Transaccion  transaccioncuentaconotaventaTemp=null;

			for(Transaccion transaccioncuentaconotaventaAux:transaccioncuentaconotaventasForeignKey) {
				if(transaccioncuentaconotaventaAux.getId()!=null && transaccioncuentaconotaventaAux.getId().equals(idTransaccionCuentaCoNotaVentaSeleccionado)) {
					transaccioncuentaconotaventaTemp=transaccioncuentaconotaventaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(transaccioncuentaconotaventaTemp!=null) {

					if(this.parametrofactutransaccion!=null) {
						this.parametrofactutransaccion.setTransaccionCuentaCoNotaVenta(transaccioncuentaconotaventaTemp);
					}

					if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) {
						this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_cuenta_co_nota_ventaParametroFactuTransaccion.setSelectedItem(transaccioncuentaconotaventaTemp);
					}
				} else {
					//jComboBoxid_transaccion_cuenta_co_nota_ventaParametroFactuTransaccion.setSelectedItem(transaccioncuentaconotaventaTemp);
					if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) {
						if(this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_cuenta_co_nota_ventaParametroFactuTransaccion.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_cuenta_co_nota_ventaParametroFactuTransaccion.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTransaccionCuentaCoNotaVenta") || sFormularioTipoBusqueda.equals("Todos")){
					if(transaccioncuentaconotaventaTemp!=null && jComboBoxid_transaccion_cuenta_co_nota_ventaFK_IdTransaccionCuentaCoNotaVentaParametroFactuTransaccion!=null) {
						jComboBoxid_transaccion_cuenta_co_nota_ventaFK_IdTransaccionCuentaCoNotaVentaParametroFactuTransaccion.setSelectedItem(transaccioncuentaconotaventaTemp);
					} else {
						if(jComboBoxid_transaccion_cuenta_co_nota_ventaFK_IdTransaccionCuentaCoNotaVentaParametroFactuTransaccion!=null) {
							//jComboBoxid_transaccion_cuenta_co_nota_ventaFK_IdTransaccionCuentaCoNotaVentaParametroFactuTransaccion.setSelectedItem(transaccioncuentaconotaventaTemp);
							if(jComboBoxid_transaccion_cuenta_co_nota_ventaFK_IdTransaccionCuentaCoNotaVentaParametroFactuTransaccion.getItemCount()>0) {
								jComboBoxid_transaccion_cuenta_co_nota_ventaFK_IdTransaccionCuentaCoNotaVentaParametroFactuTransaccion.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTransaccionCuentaCoNotaVentaForeignKeyDescripcion(Long idTransaccionCuentaCoNotaVentaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Transaccion  transaccioncuentaconotaventaTemp=null;

			for(Transaccion transaccioncuentaconotaventaAux:transaccioncuentaconotaventasForeignKey) {
				if(transaccioncuentaconotaventaAux.getId()!=null && transaccioncuentaconotaventaAux.getId().equals(idTransaccionCuentaCoNotaVentaSeleccionado)) {
					transaccioncuentaconotaventaTemp=transaccioncuentaconotaventaAux;
					break;
				}
			}


			sDescripcion=TransaccionConstantesFunciones.getTransaccionDescripcion(transaccioncuentaconotaventaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTransaccionCuentaCoNotaVentaForeignKeyGenerico(Long idTransaccionCuentaCoNotaVentaSeleccionado,JComboBox jComboBoxid_transaccion_cuenta_co_nota_ventaParametroFactuTransaccionGenerico)throws Exception
	{
		try
		{
			Transaccion  transaccioncuentaconotaventaTemp=null;

			for(Transaccion transaccioncuentaconotaventaAux:transaccioncuentaconotaventasForeignKey) {
				if(transaccioncuentaconotaventaAux.getId()!=null && transaccioncuentaconotaventaAux.getId().equals(idTransaccionCuentaCoNotaVentaSeleccionado)) {
					transaccioncuentaconotaventaTemp=transaccioncuentaconotaventaAux;
					break;
				}
			}

			if(transaccioncuentaconotaventaTemp!=null) {
				jComboBoxid_transaccion_cuenta_co_nota_ventaParametroFactuTransaccionGenerico.setSelectedItem(transaccioncuentaconotaventaTemp);
			} else {
				if(jComboBoxid_transaccion_cuenta_co_nota_ventaParametroFactuTransaccionGenerico!=null && jComboBoxid_transaccion_cuenta_co_nota_ventaParametroFactuTransaccionGenerico.getItemCount()>0) {
					jComboBoxid_transaccion_cuenta_co_nota_ventaParametroFactuTransaccionGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTransaccionCuentaCoTarjetaForeignKey(Long idTransaccionCuentaCoTarjetaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Transaccion  transaccioncuentacotarjetaTemp=null;

			for(Transaccion transaccioncuentacotarjetaAux:transaccioncuentacotarjetasForeignKey) {
				if(transaccioncuentacotarjetaAux.getId()!=null && transaccioncuentacotarjetaAux.getId().equals(idTransaccionCuentaCoTarjetaSeleccionado)) {
					transaccioncuentacotarjetaTemp=transaccioncuentacotarjetaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(transaccioncuentacotarjetaTemp!=null) {

					if(this.parametrofactutransaccion!=null) {
						this.parametrofactutransaccion.setTransaccionCuentaCoTarjeta(transaccioncuentacotarjetaTemp);
					}

					if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) {
						this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_cuenta_co_tarjetaParametroFactuTransaccion.setSelectedItem(transaccioncuentacotarjetaTemp);
					}
				} else {
					//jComboBoxid_transaccion_cuenta_co_tarjetaParametroFactuTransaccion.setSelectedItem(transaccioncuentacotarjetaTemp);
					if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) {
						if(this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_cuenta_co_tarjetaParametroFactuTransaccion.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_cuenta_co_tarjetaParametroFactuTransaccion.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTransaccionCuentaCoTarjeta") || sFormularioTipoBusqueda.equals("Todos")){
					if(transaccioncuentacotarjetaTemp!=null && jComboBoxid_transaccion_cuenta_co_tarjetaFK_IdTransaccionCuentaCoTarjetaParametroFactuTransaccion!=null) {
						jComboBoxid_transaccion_cuenta_co_tarjetaFK_IdTransaccionCuentaCoTarjetaParametroFactuTransaccion.setSelectedItem(transaccioncuentacotarjetaTemp);
					} else {
						if(jComboBoxid_transaccion_cuenta_co_tarjetaFK_IdTransaccionCuentaCoTarjetaParametroFactuTransaccion!=null) {
							//jComboBoxid_transaccion_cuenta_co_tarjetaFK_IdTransaccionCuentaCoTarjetaParametroFactuTransaccion.setSelectedItem(transaccioncuentacotarjetaTemp);
							if(jComboBoxid_transaccion_cuenta_co_tarjetaFK_IdTransaccionCuentaCoTarjetaParametroFactuTransaccion.getItemCount()>0) {
								jComboBoxid_transaccion_cuenta_co_tarjetaFK_IdTransaccionCuentaCoTarjetaParametroFactuTransaccion.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTransaccionCuentaCoTarjetaForeignKeyDescripcion(Long idTransaccionCuentaCoTarjetaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Transaccion  transaccioncuentacotarjetaTemp=null;

			for(Transaccion transaccioncuentacotarjetaAux:transaccioncuentacotarjetasForeignKey) {
				if(transaccioncuentacotarjetaAux.getId()!=null && transaccioncuentacotarjetaAux.getId().equals(idTransaccionCuentaCoTarjetaSeleccionado)) {
					transaccioncuentacotarjetaTemp=transaccioncuentacotarjetaAux;
					break;
				}
			}


			sDescripcion=TransaccionConstantesFunciones.getTransaccionDescripcion(transaccioncuentacotarjetaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTransaccionCuentaCoTarjetaForeignKeyGenerico(Long idTransaccionCuentaCoTarjetaSeleccionado,JComboBox jComboBoxid_transaccion_cuenta_co_tarjetaParametroFactuTransaccionGenerico)throws Exception
	{
		try
		{
			Transaccion  transaccioncuentacotarjetaTemp=null;

			for(Transaccion transaccioncuentacotarjetaAux:transaccioncuentacotarjetasForeignKey) {
				if(transaccioncuentacotarjetaAux.getId()!=null && transaccioncuentacotarjetaAux.getId().equals(idTransaccionCuentaCoTarjetaSeleccionado)) {
					transaccioncuentacotarjetaTemp=transaccioncuentacotarjetaAux;
					break;
				}
			}

			if(transaccioncuentacotarjetaTemp!=null) {
				jComboBoxid_transaccion_cuenta_co_tarjetaParametroFactuTransaccionGenerico.setSelectedItem(transaccioncuentacotarjetaTemp);
			} else {
				if(jComboBoxid_transaccion_cuenta_co_tarjetaParametroFactuTransaccionGenerico!=null && jComboBoxid_transaccion_cuenta_co_tarjetaParametroFactuTransaccionGenerico.getItemCount()>0) {
					jComboBoxid_transaccion_cuenta_co_tarjetaParametroFactuTransaccionGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTransaccionCuentaPaFacturaForeignKey(Long idTransaccionCuentaPaFacturaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Transaccion  transaccioncuentapafacturaTemp=null;

			for(Transaccion transaccioncuentapafacturaAux:transaccioncuentapafacturasForeignKey) {
				if(transaccioncuentapafacturaAux.getId()!=null && transaccioncuentapafacturaAux.getId().equals(idTransaccionCuentaPaFacturaSeleccionado)) {
					transaccioncuentapafacturaTemp=transaccioncuentapafacturaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(transaccioncuentapafacturaTemp!=null) {

					if(this.parametrofactutransaccion!=null) {
						this.parametrofactutransaccion.setTransaccionCuentaPaFactura(transaccioncuentapafacturaTemp);
					}

					if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) {
						this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_cuenta_pa_facturaParametroFactuTransaccion.setSelectedItem(transaccioncuentapafacturaTemp);
					}
				} else {
					//jComboBoxid_transaccion_cuenta_pa_facturaParametroFactuTransaccion.setSelectedItem(transaccioncuentapafacturaTemp);
					if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) {
						if(this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_cuenta_pa_facturaParametroFactuTransaccion.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_cuenta_pa_facturaParametroFactuTransaccion.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTransaccionCuentaPaFactura") || sFormularioTipoBusqueda.equals("Todos")){
					if(transaccioncuentapafacturaTemp!=null && jComboBoxid_transaccion_cuenta_pa_facturaFK_IdTransaccionCuentaPaFacturaParametroFactuTransaccion!=null) {
						jComboBoxid_transaccion_cuenta_pa_facturaFK_IdTransaccionCuentaPaFacturaParametroFactuTransaccion.setSelectedItem(transaccioncuentapafacturaTemp);
					} else {
						if(jComboBoxid_transaccion_cuenta_pa_facturaFK_IdTransaccionCuentaPaFacturaParametroFactuTransaccion!=null) {
							//jComboBoxid_transaccion_cuenta_pa_facturaFK_IdTransaccionCuentaPaFacturaParametroFactuTransaccion.setSelectedItem(transaccioncuentapafacturaTemp);
							if(jComboBoxid_transaccion_cuenta_pa_facturaFK_IdTransaccionCuentaPaFacturaParametroFactuTransaccion.getItemCount()>0) {
								jComboBoxid_transaccion_cuenta_pa_facturaFK_IdTransaccionCuentaPaFacturaParametroFactuTransaccion.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTransaccionCuentaPaFacturaForeignKeyDescripcion(Long idTransaccionCuentaPaFacturaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Transaccion  transaccioncuentapafacturaTemp=null;

			for(Transaccion transaccioncuentapafacturaAux:transaccioncuentapafacturasForeignKey) {
				if(transaccioncuentapafacturaAux.getId()!=null && transaccioncuentapafacturaAux.getId().equals(idTransaccionCuentaPaFacturaSeleccionado)) {
					transaccioncuentapafacturaTemp=transaccioncuentapafacturaAux;
					break;
				}
			}


			sDescripcion=TransaccionConstantesFunciones.getTransaccionDescripcion(transaccioncuentapafacturaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTransaccionCuentaPaFacturaForeignKeyGenerico(Long idTransaccionCuentaPaFacturaSeleccionado,JComboBox jComboBoxid_transaccion_cuenta_pa_facturaParametroFactuTransaccionGenerico)throws Exception
	{
		try
		{
			Transaccion  transaccioncuentapafacturaTemp=null;

			for(Transaccion transaccioncuentapafacturaAux:transaccioncuentapafacturasForeignKey) {
				if(transaccioncuentapafacturaAux.getId()!=null && transaccioncuentapafacturaAux.getId().equals(idTransaccionCuentaPaFacturaSeleccionado)) {
					transaccioncuentapafacturaTemp=transaccioncuentapafacturaAux;
					break;
				}
			}

			if(transaccioncuentapafacturaTemp!=null) {
				jComboBoxid_transaccion_cuenta_pa_facturaParametroFactuTransaccionGenerico.setSelectedItem(transaccioncuentapafacturaTemp);
			} else {
				if(jComboBoxid_transaccion_cuenta_pa_facturaParametroFactuTransaccionGenerico!=null && jComboBoxid_transaccion_cuenta_pa_facturaParametroFactuTransaccionGenerico.getItemCount()>0) {
					jComboBoxid_transaccion_cuenta_pa_facturaParametroFactuTransaccionGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTransaccionCuentaPaNotaCreditoForeignKey(Long idTransaccionCuentaPaNotaCreditoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Transaccion  transaccioncuentapanotacreditoTemp=null;

			for(Transaccion transaccioncuentapanotacreditoAux:transaccioncuentapanotacreditosForeignKey) {
				if(transaccioncuentapanotacreditoAux.getId()!=null && transaccioncuentapanotacreditoAux.getId().equals(idTransaccionCuentaPaNotaCreditoSeleccionado)) {
					transaccioncuentapanotacreditoTemp=transaccioncuentapanotacreditoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(transaccioncuentapanotacreditoTemp!=null) {

					if(this.parametrofactutransaccion!=null) {
						this.parametrofactutransaccion.setTransaccionCuentaPaNotaCredito(transaccioncuentapanotacreditoTemp);
					}

					if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) {
						this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_cuenta_pa_nota_creditoParametroFactuTransaccion.setSelectedItem(transaccioncuentapanotacreditoTemp);
					}
				} else {
					//jComboBoxid_transaccion_cuenta_pa_nota_creditoParametroFactuTransaccion.setSelectedItem(transaccioncuentapanotacreditoTemp);
					if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) {
						if(this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_cuenta_pa_nota_creditoParametroFactuTransaccion.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_cuenta_pa_nota_creditoParametroFactuTransaccion.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTransaccionCuentaPaNotaCredito") || sFormularioTipoBusqueda.equals("Todos")){
					if(transaccioncuentapanotacreditoTemp!=null && jComboBoxid_transaccion_cuenta_pa_nota_creditoFK_IdTransaccionCuentaPaNotaCreditoParametroFactuTransaccion!=null) {
						jComboBoxid_transaccion_cuenta_pa_nota_creditoFK_IdTransaccionCuentaPaNotaCreditoParametroFactuTransaccion.setSelectedItem(transaccioncuentapanotacreditoTemp);
					} else {
						if(jComboBoxid_transaccion_cuenta_pa_nota_creditoFK_IdTransaccionCuentaPaNotaCreditoParametroFactuTransaccion!=null) {
							//jComboBoxid_transaccion_cuenta_pa_nota_creditoFK_IdTransaccionCuentaPaNotaCreditoParametroFactuTransaccion.setSelectedItem(transaccioncuentapanotacreditoTemp);
							if(jComboBoxid_transaccion_cuenta_pa_nota_creditoFK_IdTransaccionCuentaPaNotaCreditoParametroFactuTransaccion.getItemCount()>0) {
								jComboBoxid_transaccion_cuenta_pa_nota_creditoFK_IdTransaccionCuentaPaNotaCreditoParametroFactuTransaccion.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTransaccionCuentaPaNotaCreditoForeignKeyDescripcion(Long idTransaccionCuentaPaNotaCreditoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Transaccion  transaccioncuentapanotacreditoTemp=null;

			for(Transaccion transaccioncuentapanotacreditoAux:transaccioncuentapanotacreditosForeignKey) {
				if(transaccioncuentapanotacreditoAux.getId()!=null && transaccioncuentapanotacreditoAux.getId().equals(idTransaccionCuentaPaNotaCreditoSeleccionado)) {
					transaccioncuentapanotacreditoTemp=transaccioncuentapanotacreditoAux;
					break;
				}
			}


			sDescripcion=TransaccionConstantesFunciones.getTransaccionDescripcion(transaccioncuentapanotacreditoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTransaccionCuentaPaNotaCreditoForeignKeyGenerico(Long idTransaccionCuentaPaNotaCreditoSeleccionado,JComboBox jComboBoxid_transaccion_cuenta_pa_nota_creditoParametroFactuTransaccionGenerico)throws Exception
	{
		try
		{
			Transaccion  transaccioncuentapanotacreditoTemp=null;

			for(Transaccion transaccioncuentapanotacreditoAux:transaccioncuentapanotacreditosForeignKey) {
				if(transaccioncuentapanotacreditoAux.getId()!=null && transaccioncuentapanotacreditoAux.getId().equals(idTransaccionCuentaPaNotaCreditoSeleccionado)) {
					transaccioncuentapanotacreditoTemp=transaccioncuentapanotacreditoAux;
					break;
				}
			}

			if(transaccioncuentapanotacreditoTemp!=null) {
				jComboBoxid_transaccion_cuenta_pa_nota_creditoParametroFactuTransaccionGenerico.setSelectedItem(transaccioncuentapanotacreditoTemp);
			} else {
				if(jComboBoxid_transaccion_cuenta_pa_nota_creditoParametroFactuTransaccionGenerico!=null && jComboBoxid_transaccion_cuenta_pa_nota_creditoParametroFactuTransaccionGenerico.getItemCount()>0) {
					jComboBoxid_transaccion_cuenta_pa_nota_creditoParametroFactuTransaccionGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	
	
	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEmpresaForeignKey(ParametroFactuTransaccion parametrofactutransaccion,JComboBox jComboBoxid_empresaParametroFactuTransaccionGenerico)throws Exception
	{
		try
		{
			Empresa  empresaAux=new Empresa();

			if(jComboBoxid_empresaParametroFactuTransaccionGenerico==null) {
				empresaAux=(Empresa)this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_empresaParametroFactuTransaccion.getSelectedItem();
			} else {
				empresaAux=(Empresa)jComboBoxid_empresaParametroFactuTransaccionGenerico.getSelectedItem();
			}

			if(empresaAux!=null && empresaAux.getId()!=null) {
				parametrofactutransaccion.setid_empresa(empresaAux.getId());
				parametrofactutransaccion.setempresa_descripcion(ParametroFactuTransaccionConstantesFunciones.getEmpresaDescripcion(empresaAux));
				parametrofactutransaccion.setEmpresa(empresaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarSucursalForeignKey(ParametroFactuTransaccion parametrofactutransaccion,JComboBox jComboBoxid_sucursalParametroFactuTransaccionGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalAux=new Sucursal();

			if(jComboBoxid_sucursalParametroFactuTransaccionGenerico==null) {
				sucursalAux=(Sucursal)this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_sucursalParametroFactuTransaccion.getSelectedItem();
			} else {
				sucursalAux=(Sucursal)jComboBoxid_sucursalParametroFactuTransaccionGenerico.getSelectedItem();
			}

			if(sucursalAux!=null && sucursalAux.getId()!=null) {
				parametrofactutransaccion.setid_sucursal(sucursalAux.getId());
				parametrofactutransaccion.setsucursal_descripcion(ParametroFactuTransaccionConstantesFunciones.getSucursalDescripcion(sucursalAux));
				parametrofactutransaccion.setSucursal(sucursalAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTransaccionInvenFacturaForeignKey(ParametroFactuTransaccion parametrofactutransaccion,JComboBox jComboBoxid_transaccion_inven_facturaParametroFactuTransaccionGenerico)throws Exception
	{
		try
		{
			Transaccion  transaccionAux=new Transaccion();

			if(jComboBoxid_transaccion_inven_facturaParametroFactuTransaccionGenerico==null) {
				transaccionAux=(Transaccion)this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_inven_facturaParametroFactuTransaccion.getSelectedItem();
			} else {
				transaccionAux=(Transaccion)jComboBoxid_transaccion_inven_facturaParametroFactuTransaccionGenerico.getSelectedItem();
			}

			if(transaccionAux!=null && transaccionAux.getId()!=null) {
				parametrofactutransaccion.setid_transaccion_inven_factura(transaccionAux.getId());
				parametrofactutransaccion.settransaccioninvenfactura_descripcion(ParametroFactuTransaccionConstantesFunciones.getTransaccionInvenFacturaDescripcion(transaccionAux));
				parametrofactutransaccion.setTransaccionInvenFactura(transaccionAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTransaccionInvenNotaCreditoForeignKey(ParametroFactuTransaccion parametrofactutransaccion,JComboBox jComboBoxid_transaccion_inven_nota_creditoParametroFactuTransaccionGenerico)throws Exception
	{
		try
		{
			Transaccion  transaccionAux=new Transaccion();

			if(jComboBoxid_transaccion_inven_nota_creditoParametroFactuTransaccionGenerico==null) {
				transaccionAux=(Transaccion)this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_inven_nota_creditoParametroFactuTransaccion.getSelectedItem();
			} else {
				transaccionAux=(Transaccion)jComboBoxid_transaccion_inven_nota_creditoParametroFactuTransaccionGenerico.getSelectedItem();
			}

			if(transaccionAux!=null && transaccionAux.getId()!=null) {
				parametrofactutransaccion.setid_transaccion_inven_nota_credito(transaccionAux.getId());
				parametrofactutransaccion.settransaccioninvennotacredito_descripcion(ParametroFactuTransaccionConstantesFunciones.getTransaccionInvenNotaCreditoDescripcion(transaccionAux));
				parametrofactutransaccion.setTransaccionInvenNotaCredito(transaccionAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTransaccionInvenNotaVentaForeignKey(ParametroFactuTransaccion parametrofactutransaccion,JComboBox jComboBoxid_transaccion_inven_nota_ventaParametroFactuTransaccionGenerico)throws Exception
	{
		try
		{
			Transaccion  transaccionAux=new Transaccion();

			if(jComboBoxid_transaccion_inven_nota_ventaParametroFactuTransaccionGenerico==null) {
				transaccionAux=(Transaccion)this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_inven_nota_ventaParametroFactuTransaccion.getSelectedItem();
			} else {
				transaccionAux=(Transaccion)jComboBoxid_transaccion_inven_nota_ventaParametroFactuTransaccionGenerico.getSelectedItem();
			}

			if(transaccionAux!=null && transaccionAux.getId()!=null) {
				parametrofactutransaccion.setid_transaccion_inven_nota_venta(transaccionAux.getId());
				parametrofactutransaccion.settransaccioninvennotaventa_descripcion(ParametroFactuTransaccionConstantesFunciones.getTransaccionInvenNotaVentaDescripcion(transaccionAux));
				parametrofactutransaccion.setTransaccionInvenNotaVenta(transaccionAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTransaccionCuentaCoFacturaForeignKey(ParametroFactuTransaccion parametrofactutransaccion,JComboBox jComboBoxid_transaccion_cuenta_co_facturaParametroFactuTransaccionGenerico)throws Exception
	{
		try
		{
			Transaccion  transaccionAux=new Transaccion();

			if(jComboBoxid_transaccion_cuenta_co_facturaParametroFactuTransaccionGenerico==null) {
				transaccionAux=(Transaccion)this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_cuenta_co_facturaParametroFactuTransaccion.getSelectedItem();
			} else {
				transaccionAux=(Transaccion)jComboBoxid_transaccion_cuenta_co_facturaParametroFactuTransaccionGenerico.getSelectedItem();
			}

			if(transaccionAux!=null && transaccionAux.getId()!=null) {
				parametrofactutransaccion.setid_transaccion_cuenta_co_factura(transaccionAux.getId());
				parametrofactutransaccion.settransaccioncuentacofactura_descripcion(ParametroFactuTransaccionConstantesFunciones.getTransaccionCuentaCoFacturaDescripcion(transaccionAux));
				parametrofactutransaccion.setTransaccionCuentaCoFactura(transaccionAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTransaccionCuentaCoNotaCreditoForeignKey(ParametroFactuTransaccion parametrofactutransaccion,JComboBox jComboBoxid_transaccion_cuenta_co_nota_creditoParametroFactuTransaccionGenerico)throws Exception
	{
		try
		{
			Transaccion  transaccionAux=new Transaccion();

			if(jComboBoxid_transaccion_cuenta_co_nota_creditoParametroFactuTransaccionGenerico==null) {
				transaccionAux=(Transaccion)this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_cuenta_co_nota_creditoParametroFactuTransaccion.getSelectedItem();
			} else {
				transaccionAux=(Transaccion)jComboBoxid_transaccion_cuenta_co_nota_creditoParametroFactuTransaccionGenerico.getSelectedItem();
			}

			if(transaccionAux!=null && transaccionAux.getId()!=null) {
				parametrofactutransaccion.setid_transaccion_cuenta_co_nota_credito(transaccionAux.getId());
				parametrofactutransaccion.settransaccioncuentaconotacredito_descripcion(ParametroFactuTransaccionConstantesFunciones.getTransaccionCuentaCoNotaCreditoDescripcion(transaccionAux));
				parametrofactutransaccion.setTransaccionCuentaCoNotaCredito(transaccionAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTransaccionCuentaCoNotaVentaForeignKey(ParametroFactuTransaccion parametrofactutransaccion,JComboBox jComboBoxid_transaccion_cuenta_co_nota_ventaParametroFactuTransaccionGenerico)throws Exception
	{
		try
		{
			Transaccion  transaccionAux=new Transaccion();

			if(jComboBoxid_transaccion_cuenta_co_nota_ventaParametroFactuTransaccionGenerico==null) {
				transaccionAux=(Transaccion)this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_cuenta_co_nota_ventaParametroFactuTransaccion.getSelectedItem();
			} else {
				transaccionAux=(Transaccion)jComboBoxid_transaccion_cuenta_co_nota_ventaParametroFactuTransaccionGenerico.getSelectedItem();
			}

			if(transaccionAux!=null && transaccionAux.getId()!=null) {
				parametrofactutransaccion.setid_transaccion_cuenta_co_nota_venta(transaccionAux.getId());
				parametrofactutransaccion.settransaccioncuentaconotaventa_descripcion(ParametroFactuTransaccionConstantesFunciones.getTransaccionCuentaCoNotaVentaDescripcion(transaccionAux));
				parametrofactutransaccion.setTransaccionCuentaCoNotaVenta(transaccionAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTransaccionCuentaCoTarjetaForeignKey(ParametroFactuTransaccion parametrofactutransaccion,JComboBox jComboBoxid_transaccion_cuenta_co_tarjetaParametroFactuTransaccionGenerico)throws Exception
	{
		try
		{
			Transaccion  transaccionAux=new Transaccion();

			if(jComboBoxid_transaccion_cuenta_co_tarjetaParametroFactuTransaccionGenerico==null) {
				transaccionAux=(Transaccion)this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_cuenta_co_tarjetaParametroFactuTransaccion.getSelectedItem();
			} else {
				transaccionAux=(Transaccion)jComboBoxid_transaccion_cuenta_co_tarjetaParametroFactuTransaccionGenerico.getSelectedItem();
			}

			if(transaccionAux!=null && transaccionAux.getId()!=null) {
				parametrofactutransaccion.setid_transaccion_cuenta_co_tarjeta(transaccionAux.getId());
				parametrofactutransaccion.settransaccioncuentacotarjeta_descripcion(ParametroFactuTransaccionConstantesFunciones.getTransaccionCuentaCoTarjetaDescripcion(transaccionAux));
				parametrofactutransaccion.setTransaccionCuentaCoTarjeta(transaccionAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTransaccionCuentaPaFacturaForeignKey(ParametroFactuTransaccion parametrofactutransaccion,JComboBox jComboBoxid_transaccion_cuenta_pa_facturaParametroFactuTransaccionGenerico)throws Exception
	{
		try
		{
			Transaccion  transaccionAux=new Transaccion();

			if(jComboBoxid_transaccion_cuenta_pa_facturaParametroFactuTransaccionGenerico==null) {
				transaccionAux=(Transaccion)this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_cuenta_pa_facturaParametroFactuTransaccion.getSelectedItem();
			} else {
				transaccionAux=(Transaccion)jComboBoxid_transaccion_cuenta_pa_facturaParametroFactuTransaccionGenerico.getSelectedItem();
			}

			if(transaccionAux!=null && transaccionAux.getId()!=null) {
				parametrofactutransaccion.setid_transaccion_cuenta_pa_factura(transaccionAux.getId());
				parametrofactutransaccion.settransaccioncuentapafactura_descripcion(ParametroFactuTransaccionConstantesFunciones.getTransaccionCuentaPaFacturaDescripcion(transaccionAux));
				parametrofactutransaccion.setTransaccionCuentaPaFactura(transaccionAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTransaccionCuentaPaNotaCreditoForeignKey(ParametroFactuTransaccion parametrofactutransaccion,JComboBox jComboBoxid_transaccion_cuenta_pa_nota_creditoParametroFactuTransaccionGenerico)throws Exception
	{
		try
		{
			Transaccion  transaccionAux=new Transaccion();

			if(jComboBoxid_transaccion_cuenta_pa_nota_creditoParametroFactuTransaccionGenerico==null) {
				transaccionAux=(Transaccion)this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_cuenta_pa_nota_creditoParametroFactuTransaccion.getSelectedItem();
			} else {
				transaccionAux=(Transaccion)jComboBoxid_transaccion_cuenta_pa_nota_creditoParametroFactuTransaccionGenerico.getSelectedItem();
			}

			if(transaccionAux!=null && transaccionAux.getId()!=null) {
				parametrofactutransaccion.setid_transaccion_cuenta_pa_nota_credito(transaccionAux.getId());
				parametrofactutransaccion.settransaccioncuentapanotacredito_descripcion(ParametroFactuTransaccionConstantesFunciones.getTransaccionCuentaPaNotaCreditoDescripcion(transaccionAux));
				parametrofactutransaccion.setTransaccionCuentaPaNotaCredito(transaccionAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	


		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEmpresasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEmpresa=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroFactuTransaccionJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) { 
							this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_empresaParametroFactuTransaccion.removeAllItems();

							for(Empresa empresa:this.empresasForeignKey) {
								this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_empresaParametroFactuTransaccion.addItem(empresa);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) { 
					}

					if(!ParametroFactuTransaccionJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameSucursalsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingSucursal=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroFactuTransaccionJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) { 
							this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_sucursalParametroFactuTransaccion.removeAllItems();

							for(Sucursal sucursal:this.sucursalsForeignKey) {
								this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_sucursalParametroFactuTransaccion.addItem(sucursal);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) { 
					}

					if(!ParametroFactuTransaccionJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTransaccionInvenFacturasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTransaccion=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroFactuTransaccionJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) { 
							this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_inven_facturaParametroFactuTransaccion.removeAllItems();

							for(Transaccion transaccioninvenfactura:this.transaccioninvenfacturasForeignKey) {
								this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_inven_facturaParametroFactuTransaccion.addItem(transaccioninvenfactura);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) { 
					}

					if(!ParametroFactuTransaccionJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTransaccionInvenFactura") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroFactuTransaccionJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_transaccion_inven_facturaFK_IdTransaccionInvenFacturaParametroFactuTransaccion.removeAllItems();

							for(Transaccion transaccioninvenfactura:this.transaccioninvenfacturasForeignKey) {
								this.jComboBoxid_transaccion_inven_facturaFK_IdTransaccionInvenFacturaParametroFactuTransaccion.addItem(transaccioninvenfactura);
							}
						}

						if(!ParametroFactuTransaccionJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTransaccionInvenNotaCreditosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTransaccion=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroFactuTransaccionJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) { 
							this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_inven_nota_creditoParametroFactuTransaccion.removeAllItems();

							for(Transaccion transaccioninvennotacredito:this.transaccioninvennotacreditosForeignKey) {
								this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_inven_nota_creditoParametroFactuTransaccion.addItem(transaccioninvennotacredito);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) { 
					}

					if(!ParametroFactuTransaccionJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTransaccionInvenNotaCredito") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroFactuTransaccionJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_transaccion_inven_nota_creditoFK_IdTransaccionInvenNotaCreditoParametroFactuTransaccion.removeAllItems();

							for(Transaccion transaccioninvennotacredito:this.transaccioninvennotacreditosForeignKey) {
								this.jComboBoxid_transaccion_inven_nota_creditoFK_IdTransaccionInvenNotaCreditoParametroFactuTransaccion.addItem(transaccioninvennotacredito);
							}
						}

						if(!ParametroFactuTransaccionJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTransaccionInvenNotaVentasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTransaccion=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroFactuTransaccionJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) { 
							this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_inven_nota_ventaParametroFactuTransaccion.removeAllItems();

							for(Transaccion transaccioninvennotaventa:this.transaccioninvennotaventasForeignKey) {
								this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_inven_nota_ventaParametroFactuTransaccion.addItem(transaccioninvennotaventa);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) { 
					}

					if(!ParametroFactuTransaccionJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTransaccionInvenNotaVenta") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroFactuTransaccionJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_transaccion_inven_nota_ventaFK_IdTransaccionInvenNotaVentaParametroFactuTransaccion.removeAllItems();

							for(Transaccion transaccioninvennotaventa:this.transaccioninvennotaventasForeignKey) {
								this.jComboBoxid_transaccion_inven_nota_ventaFK_IdTransaccionInvenNotaVentaParametroFactuTransaccion.addItem(transaccioninvennotaventa);
							}
						}

						if(!ParametroFactuTransaccionJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTransaccionCuentaCoFacturasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTransaccion=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroFactuTransaccionJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) { 
							this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_cuenta_co_facturaParametroFactuTransaccion.removeAllItems();

							for(Transaccion transaccioncuentacofactura:this.transaccioncuentacofacturasForeignKey) {
								this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_cuenta_co_facturaParametroFactuTransaccion.addItem(transaccioncuentacofactura);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) { 
					}

					if(!ParametroFactuTransaccionJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTransaccionCuentaCoFactura") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroFactuTransaccionJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_transaccion_cuenta_co_facturaFK_IdTransaccionCuentaCoFacturaParametroFactuTransaccion.removeAllItems();

							for(Transaccion transaccioncuentacofactura:this.transaccioncuentacofacturasForeignKey) {
								this.jComboBoxid_transaccion_cuenta_co_facturaFK_IdTransaccionCuentaCoFacturaParametroFactuTransaccion.addItem(transaccioncuentacofactura);
							}
						}

						if(!ParametroFactuTransaccionJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTransaccionCuentaCoNotaCreditosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTransaccion=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroFactuTransaccionJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) { 
							this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_cuenta_co_nota_creditoParametroFactuTransaccion.removeAllItems();

							for(Transaccion transaccioncuentaconotacredito:this.transaccioncuentaconotacreditosForeignKey) {
								this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_cuenta_co_nota_creditoParametroFactuTransaccion.addItem(transaccioncuentaconotacredito);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) { 
					}

					if(!ParametroFactuTransaccionJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTransaccionCuentaCoNotaCredito") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroFactuTransaccionJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_transaccion_cuenta_co_nota_creditoFK_IdTransaccionCuentaCoNotaCreditoParametroFactuTransaccion.removeAllItems();

							for(Transaccion transaccioncuentaconotacredito:this.transaccioncuentaconotacreditosForeignKey) {
								this.jComboBoxid_transaccion_cuenta_co_nota_creditoFK_IdTransaccionCuentaCoNotaCreditoParametroFactuTransaccion.addItem(transaccioncuentaconotacredito);
							}
						}

						if(!ParametroFactuTransaccionJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTransaccionCuentaCoNotaVentasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTransaccion=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroFactuTransaccionJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) { 
							this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_cuenta_co_nota_ventaParametroFactuTransaccion.removeAllItems();

							for(Transaccion transaccioncuentaconotaventa:this.transaccioncuentaconotaventasForeignKey) {
								this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_cuenta_co_nota_ventaParametroFactuTransaccion.addItem(transaccioncuentaconotaventa);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) { 
					}

					if(!ParametroFactuTransaccionJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTransaccionCuentaCoNotaVenta") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroFactuTransaccionJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_transaccion_cuenta_co_nota_ventaFK_IdTransaccionCuentaCoNotaVentaParametroFactuTransaccion.removeAllItems();

							for(Transaccion transaccioncuentaconotaventa:this.transaccioncuentaconotaventasForeignKey) {
								this.jComboBoxid_transaccion_cuenta_co_nota_ventaFK_IdTransaccionCuentaCoNotaVentaParametroFactuTransaccion.addItem(transaccioncuentaconotaventa);
							}
						}

						if(!ParametroFactuTransaccionJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTransaccionCuentaCoTarjetasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTransaccion=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroFactuTransaccionJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) { 
							this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_cuenta_co_tarjetaParametroFactuTransaccion.removeAllItems();

							for(Transaccion transaccioncuentacotarjeta:this.transaccioncuentacotarjetasForeignKey) {
								this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_cuenta_co_tarjetaParametroFactuTransaccion.addItem(transaccioncuentacotarjeta);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) { 
					}

					if(!ParametroFactuTransaccionJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTransaccionCuentaCoTarjeta") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroFactuTransaccionJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_transaccion_cuenta_co_tarjetaFK_IdTransaccionCuentaCoTarjetaParametroFactuTransaccion.removeAllItems();

							for(Transaccion transaccioncuentacotarjeta:this.transaccioncuentacotarjetasForeignKey) {
								this.jComboBoxid_transaccion_cuenta_co_tarjetaFK_IdTransaccionCuentaCoTarjetaParametroFactuTransaccion.addItem(transaccioncuentacotarjeta);
							}
						}

						if(!ParametroFactuTransaccionJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTransaccionCuentaPaFacturasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTransaccion=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroFactuTransaccionJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) { 
							this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_cuenta_pa_facturaParametroFactuTransaccion.removeAllItems();

							for(Transaccion transaccioncuentapafactura:this.transaccioncuentapafacturasForeignKey) {
								this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_cuenta_pa_facturaParametroFactuTransaccion.addItem(transaccioncuentapafactura);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) { 
					}

					if(!ParametroFactuTransaccionJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTransaccionCuentaPaFactura") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroFactuTransaccionJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_transaccion_cuenta_pa_facturaFK_IdTransaccionCuentaPaFacturaParametroFactuTransaccion.removeAllItems();

							for(Transaccion transaccioncuentapafactura:this.transaccioncuentapafacturasForeignKey) {
								this.jComboBoxid_transaccion_cuenta_pa_facturaFK_IdTransaccionCuentaPaFacturaParametroFactuTransaccion.addItem(transaccioncuentapafactura);
							}
						}

						if(!ParametroFactuTransaccionJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTransaccionCuentaPaNotaCreditosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTransaccion=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroFactuTransaccionJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) { 
							this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_cuenta_pa_nota_creditoParametroFactuTransaccion.removeAllItems();

							for(Transaccion transaccioncuentapanotacredito:this.transaccioncuentapanotacreditosForeignKey) {
								this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_cuenta_pa_nota_creditoParametroFactuTransaccion.addItem(transaccioncuentapanotacredito);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) { 
					}

					if(!ParametroFactuTransaccionJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTransaccionCuentaPaNotaCredito") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroFactuTransaccionJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_transaccion_cuenta_pa_nota_creditoFK_IdTransaccionCuentaPaNotaCreditoParametroFactuTransaccion.removeAllItems();

							for(Transaccion transaccioncuentapanotacredito:this.transaccioncuentapanotacreditosForeignKey) {
								this.jComboBoxid_transaccion_cuenta_pa_nota_creditoFK_IdTransaccionCuentaPaNotaCreditoParametroFactuTransaccion.addItem(transaccioncuentapanotacredito);
							}
						}

						if(!ParametroFactuTransaccionJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

	


		public void setSelectedItemCombosFrameEmpresaForeignKey(Empresa empresa,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) {
							this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_empresaParametroFactuTransaccion.setSelectedItem(empresa);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) {
							this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_empresaParametroFactuTransaccion.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameSucursalForeignKey(Sucursal sucursal,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) {
							this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_sucursalParametroFactuTransaccion.setSelectedItem(sucursal);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) {
							this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_sucursalParametroFactuTransaccion.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTransaccionInvenFacturaForeignKey(Transaccion transaccioninvenfactura,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) {
							this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_inven_facturaParametroFactuTransaccion.setSelectedItem(transaccioninvenfactura);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) {
							this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_inven_facturaParametroFactuTransaccion.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_transaccion_inven_facturaFK_IdTransaccionInvenFacturaParametroFactuTransaccion.setSelectedItem(transaccioninvenfactura);
						} else {
							this.jComboBoxid_transaccion_inven_facturaFK_IdTransaccionInvenFacturaParametroFactuTransaccion.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTransaccionInvenNotaCreditoForeignKey(Transaccion transaccioninvennotacredito,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) {
							this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_inven_nota_creditoParametroFactuTransaccion.setSelectedItem(transaccioninvennotacredito);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) {
							this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_inven_nota_creditoParametroFactuTransaccion.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_transaccion_inven_nota_creditoFK_IdTransaccionInvenNotaCreditoParametroFactuTransaccion.setSelectedItem(transaccioninvennotacredito);
						} else {
							this.jComboBoxid_transaccion_inven_nota_creditoFK_IdTransaccionInvenNotaCreditoParametroFactuTransaccion.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTransaccionInvenNotaVentaForeignKey(Transaccion transaccioninvennotaventa,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) {
							this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_inven_nota_ventaParametroFactuTransaccion.setSelectedItem(transaccioninvennotaventa);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) {
							this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_inven_nota_ventaParametroFactuTransaccion.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_transaccion_inven_nota_ventaFK_IdTransaccionInvenNotaVentaParametroFactuTransaccion.setSelectedItem(transaccioninvennotaventa);
						} else {
							this.jComboBoxid_transaccion_inven_nota_ventaFK_IdTransaccionInvenNotaVentaParametroFactuTransaccion.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTransaccionCuentaCoFacturaForeignKey(Transaccion transaccioncuentacofactura,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) {
							this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_cuenta_co_facturaParametroFactuTransaccion.setSelectedItem(transaccioncuentacofactura);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) {
							this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_cuenta_co_facturaParametroFactuTransaccion.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_transaccion_cuenta_co_facturaFK_IdTransaccionCuentaCoFacturaParametroFactuTransaccion.setSelectedItem(transaccioncuentacofactura);
						} else {
							this.jComboBoxid_transaccion_cuenta_co_facturaFK_IdTransaccionCuentaCoFacturaParametroFactuTransaccion.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTransaccionCuentaCoNotaCreditoForeignKey(Transaccion transaccioncuentaconotacredito,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) {
							this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_cuenta_co_nota_creditoParametroFactuTransaccion.setSelectedItem(transaccioncuentaconotacredito);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) {
							this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_cuenta_co_nota_creditoParametroFactuTransaccion.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_transaccion_cuenta_co_nota_creditoFK_IdTransaccionCuentaCoNotaCreditoParametroFactuTransaccion.setSelectedItem(transaccioncuentaconotacredito);
						} else {
							this.jComboBoxid_transaccion_cuenta_co_nota_creditoFK_IdTransaccionCuentaCoNotaCreditoParametroFactuTransaccion.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTransaccionCuentaCoNotaVentaForeignKey(Transaccion transaccioncuentaconotaventa,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) {
							this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_cuenta_co_nota_ventaParametroFactuTransaccion.setSelectedItem(transaccioncuentaconotaventa);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) {
							this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_cuenta_co_nota_ventaParametroFactuTransaccion.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_transaccion_cuenta_co_nota_ventaFK_IdTransaccionCuentaCoNotaVentaParametroFactuTransaccion.setSelectedItem(transaccioncuentaconotaventa);
						} else {
							this.jComboBoxid_transaccion_cuenta_co_nota_ventaFK_IdTransaccionCuentaCoNotaVentaParametroFactuTransaccion.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTransaccionCuentaCoTarjetaForeignKey(Transaccion transaccioncuentacotarjeta,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) {
							this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_cuenta_co_tarjetaParametroFactuTransaccion.setSelectedItem(transaccioncuentacotarjeta);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) {
							this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_cuenta_co_tarjetaParametroFactuTransaccion.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_transaccion_cuenta_co_tarjetaFK_IdTransaccionCuentaCoTarjetaParametroFactuTransaccion.setSelectedItem(transaccioncuentacotarjeta);
						} else {
							this.jComboBoxid_transaccion_cuenta_co_tarjetaFK_IdTransaccionCuentaCoTarjetaParametroFactuTransaccion.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTransaccionCuentaPaFacturaForeignKey(Transaccion transaccioncuentapafactura,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) {
							this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_cuenta_pa_facturaParametroFactuTransaccion.setSelectedItem(transaccioncuentapafactura);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) {
							this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_cuenta_pa_facturaParametroFactuTransaccion.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_transaccion_cuenta_pa_facturaFK_IdTransaccionCuentaPaFacturaParametroFactuTransaccion.setSelectedItem(transaccioncuentapafactura);
						} else {
							this.jComboBoxid_transaccion_cuenta_pa_facturaFK_IdTransaccionCuentaPaFacturaParametroFactuTransaccion.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTransaccionCuentaPaNotaCreditoForeignKey(Transaccion transaccioncuentapanotacredito,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) {
							this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_cuenta_pa_nota_creditoParametroFactuTransaccion.setSelectedItem(transaccioncuentapanotacredito);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) {
							this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_cuenta_pa_nota_creditoParametroFactuTransaccion.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_transaccion_cuenta_pa_nota_creditoFK_IdTransaccionCuentaPaNotaCreditoParametroFactuTransaccion.setSelectedItem(transaccioncuentapanotacredito);
						} else {
							this.jComboBoxid_transaccion_cuenta_pa_nota_creditoFK_IdTransaccionCuentaPaNotaCreditoParametroFactuTransaccion.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

	


	
	public void refrescarForeignKeysDescripcionesParametroFactuTransaccion() throws Exception {
		//SI FUNCIONA DEEPLOAD ESTO VA AL ULTIMO
		if(Constantes.ISUSAEJBLOGICLAYER) {
			ParametroFactuTransaccionConstantesFunciones.refrescarForeignKeysDescripcionesParametroFactuTransaccion(this.parametrofactutransaccionLogic.getParametroFactuTransaccions());
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			ParametroFactuTransaccionConstantesFunciones.refrescarForeignKeysDescripcionesParametroFactuTransaccion(this.parametrofactutransaccions);
		}
		
		/*
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		classes.add(new Classe(Empresa.class));
		classes.add(new Classe(Sucursal.class));
		classes.add(new Classe(Transaccion.class));
			
		if(Constantes.ISUSAEJBLOGICLAYER) {
			//USA LOS OBJETOS DE LOGIC DIRECTAMENTE
			//parametrofactutransaccionLogic.setParametroFactuTransaccions(this.parametrofactutransaccions);
			parametrofactutransaccionLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
	
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		*/				
	}	
	
	
	
	public Integer getiNumeroPaginacion() {
		return iNumeroPaginacion;
	}

	public void setiNumeroPaginacion(Integer iNumeroPaginacion) {
		this.iNumeroPaginacion= iNumeroPaginacion;
	}
	
	public Integer getiNumeroPaginacionPagina() {
		return iNumeroPaginacionPagina;
	}

	public void setiNumeroPaginacionPagina(Integer iNumeroPaginacionPagina) {
		this.iNumeroPaginacionPagina= iNumeroPaginacionPagina;
	}
	
	
	public Boolean getIsSeleccionarTodos() {
		return this.isSeleccionarTodos;
	}

	public void setIsSeleccionarTodos(Boolean isSeleccionarTodos) {
		this.isSeleccionarTodos= isSeleccionarTodos;
	}
	
	public Boolean getEsControlTabla() {
		return this.esControlTabla;
	}

	public void setEsControlTabla(Boolean esControlTabla) {
		this.esControlTabla= esControlTabla;
	}
	
	public Boolean getIsSeleccionados() {
		return this.isSeleccionados;
	}

	public void setIsSeleccionados(Boolean isSeleccionados) {
		this.isSeleccionados= isSeleccionados;
	}
	
	public Boolean getIsPostAccionNuevo() {
		return this.isPostAccionNuevo;
	}

	public void setIsPostAccionNuevo(Boolean isPostAccionNuevo) {
		this.isPostAccionNuevo= isPostAccionNuevo;
	}
	
	public Boolean getIsPostAccionSinCerrar() {
		return this.isPostAccionSinCerrar;
	}

	public void setIsPostAccionSinCerrar(Boolean isPostAccionSinCerrar) {
		this.isPostAccionSinCerrar= isPostAccionSinCerrar;
	}
	
	public Boolean getIsPostAccionSinMensaje() {
		return this.isPostAccionSinMensaje;
	}

	public void setIsPostAccionSinMensaje(Boolean isPostAccionSinMensaje) {
		this.isPostAccionSinMensaje= isPostAccionSinMensaje;
	}
	
	public Boolean getConGraficoReporte() {
		return this.conGraficoReporte;
	}

	public void setConGraficoReporte(Boolean conGraficoReporte) {
		this.conGraficoReporte= conGraficoReporte;
	}
	
	
	public ArrayList<Reporte> gettiposArchivosReportes() {
		return this.tiposArchivosReportes;
	}
	
	public void settiposArchivosReportes(ArrayList<Reporte> tiposArchivosReportes) {
		this.tiposArchivosReportes = tiposArchivosReportes;
	}
	
	//TIPOS ARCHIVOS DINAMICOS
	public ArrayList<Reporte> gettiposArchivosReportesDinamico() {
		return this.tiposArchivosReportesDinamico;
	}
	
	public void settiposArchivosReportesDinamico(ArrayList<Reporte> tiposArchivosReportesDinamico) {
		this.tiposArchivosReportesDinamico = tiposArchivosReportesDinamico;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportes() {
		return this.tiposReportes;
	}
	
	public void settiposReportes(ArrayList<Reporte> tiposReportes) {
		this.tiposReportes = tiposReportes;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportesDinamico() {
		return this.tiposReportesDinamico;
	}
	
	public void settiposReportesDinamico(ArrayList<Reporte> tiposReportesDinamico) {
		this.tiposReportesDinamico = tiposReportesDinamico;
	}
	
	//TIPOS GRAFICOS REPORTES
	public ArrayList<Reporte> gettiposGraficosReportes() {
		return this.tiposGraficosReportes;
	}
	
	public void settiposGraficosReportes(ArrayList<Reporte> tiposGraficosReportes) {
		this.tiposGraficosReportes = tiposGraficosReportes;
	}
	
	public ArrayList<Reporte> gettiposPaginacion() {
		return this.tiposPaginacion;
	}
	
	public void settiposPaginacion(ArrayList<Reporte> tiposPaginacion) {
		this.tiposPaginacion = tiposPaginacion;
	}
	
	public ArrayList<Reporte> gettiposRelaciones() {
		return this.tiposRelaciones;
	}
	
	public void settiposRelaciones(ArrayList<Reporte> tiposRelaciones) {
		this.tiposRelaciones= tiposRelaciones;
	}
	
	public ArrayList<Reporte> gettiposAcciones() {
		return this.tiposAcciones;
	}
	
	public void settiposAcciones(ArrayList<Reporte> tiposAcciones) {
		this.tiposAcciones = tiposAcciones;
	}
	
	public ArrayList<Reporte> gettiposAccionesFormulario() {
		return this.tiposAccionesFormulario;
	}
	
	public void settiposAccionesFormulario(ArrayList<Reporte> tiposAccionesFormulario) {
		this.tiposAccionesFormulario = tiposAccionesFormulario;
	}
	
	public ArrayList<Reporte> gettiposSeleccionar() {
		return this.tiposSeleccionar;
	}
	
	public void settiposSeleccionar(ArrayList<Reporte> tiposSeleccionar) {
		this.tiposSeleccionar = tiposSeleccionar;
	}
	
	public ArrayList<Reporte> gettiposColumnasSelect() {
		return this.tiposColumnasSelect;
	}
	
	public void settiposColumnasSelect(ArrayList<Reporte> tiposColumnasSelect) {
		this.tiposColumnasSelect = tiposColumnasSelect;
	}
		
	public ArrayList<Reporte> gettiposRelacionesSelect() {
		return this.tiposRelacionesSelect;
	}
	
	public void settiposRelacionesSelect(ArrayList<Reporte> tiposRelacionesSelect) {
		this.tiposRelacionesSelect = tiposRelacionesSelect;
	}
	
	public Long getIIdUsuarioSesion() {
		return lIdUsuarioSesion;
	}

	public void setIIdUsuarioSesion(Long lIdUsuarioSesion) {
		this.lIdUsuarioSesion = lIdUsuarioSesion;
	}
	
	
	public List<Accion> getAccions() {
		return this.accions;
	}

	public void setAccions(List<Accion> accions) {
		this.accions = accions;
	}
	
	public List<Accion> getAccionsFormulario() {
		return this.accionsFormulario;
	}

	public void setAccionsFormulario(List<Accion> accionsFormulario) {
		this.accionsFormulario = accionsFormulario;
	}
	
	public String getsAccionMantenimiento() {
		return sAccionMantenimiento;
	}

	public void setsAccionMantenimiento(String sAccionMantenimiento) {
		this.sAccionMantenimiento = sAccionMantenimiento;
	}

	public String getsAccionBusqueda() {
		return sAccionBusqueda;
	}

	public void setsAccionBusqueda(String sAccionBusqueda) {
		this.sAccionBusqueda = sAccionBusqueda;
	}

	public String getsAccionAdicional() {
		return sAccionAdicional;
	}

	public void setsAccionAdicional(String sAccionAdicional) {
		this.sAccionAdicional = sAccionAdicional;
	}

	public String getsUltimaBusqueda() {
		return sUltimaBusqueda;
	}

	public void setsUltimaBusqueda(String sUltimaBusqueda) {
		this.sUltimaBusqueda = sUltimaBusqueda;
	}
	
	public String getsTipoArchivoReporte() {
		return sTipoArchivoReporte;
	}

	public void setsTipoArchivoReporte(String sTipoArchivoReporte) {
		this.sTipoArchivoReporte = sTipoArchivoReporte;
	}
	
	public String getsTipoArchivoReporteDinamico() {
		return sTipoArchivoReporteDinamico;
	}

	public void setsTipoArchivoReporteDinamico(String sTipoArchivoReporteDinamico) {
		this.sTipoArchivoReporteDinamico = sTipoArchivoReporteDinamico;
	}
	
	public String getsTipoReporte() {
		return sTipoReporte;
	}

	public void setsTipoReporte(String sTipoReporte) {
		this.sTipoReporte = sTipoReporte;
	}
	
	public String getsTipoReporteDinamico() {
		return sTipoReporteDinamico;
	}

	public void setsTipoReporteDinamico(String sTipoReporteDinamico) {
		this.sTipoReporteDinamico = sTipoReporteDinamico;
	}
	
	public String getsTipoGraficoReporte() {
		return sTipoGraficoReporte;
	}

	public void setsTipoGraficoReporte(String sTipoGraficoReporte) {
		this.sTipoGraficoReporte = sTipoGraficoReporte;
	}
	
	public String getsTipoPaginacion() {
		return sTipoPaginacion;
	}

	public void setsTipoPaginacion(String sTipoPaginacion) {
		this.sTipoPaginacion = sTipoPaginacion;
	}
	
	public String getsTipoRelacion() {
		return sTipoRelacion;
	}

	public void setsTipoRelacion(String sTipoRelacion) {
		this.sTipoRelacion = sTipoRelacion;
	}
	
	public String getsTipoAccion() {
		return sTipoAccion;
	}

	public void setsTipoAccion(String sTipoAccion) {
		this.sTipoAccion = sTipoAccion;
	}
	
	public String getsTipoAccionFormulario() {
		return sTipoAccionFormulario;
	}

	public void setsTipoAccionFormulario(String sTipoAccionFormulario) {
		this.sTipoAccionFormulario = sTipoAccionFormulario;
	}
	
	public String getsTipoSeleccionar() {
		return sTipoSeleccionar;
	}

	public void setsTipoSeleccionar(String sTipoSeleccionar) {
		this.sTipoSeleccionar = sTipoSeleccionar;
	}
	
	public String getsValorCampoGeneral() {
		return sValorCampoGeneral;
	}

	public void setsValorCampoGeneral(String sValorCampoGeneral) {
		this.sValorCampoGeneral = sValorCampoGeneral;
	}			

	public String getsDetalleReporte() {
		return sDetalleReporte;
	}

	public void setsDetalleReporte(String sDetalleReporte) {
		this.sDetalleReporte = sDetalleReporte;
	}
	
	
	public String getsTipoReporteExtra() {
		return sTipoReporteExtra;
	}

	public void setsTipoReporteExtra(String sTipoReporteExtra) {
		this.sTipoReporteExtra = sTipoReporteExtra;
	}
	
	public Boolean getesReporteDinamico() {
		return esReporteDinamico;
	}	
	
	public void setesReporteDinamico(Boolean esReporteDinamico) {
		this.esReporteDinamico = esReporteDinamico;
	}
	
	public Boolean getesRecargarFks() {
		return esRecargarFks;
	}	
	
	public void setesRecargarFks(Boolean esRecargarFks) {
		this.esRecargarFks = esRecargarFks;
	}
	
	public Boolean getesReporteAccionProceso() {
		return esReporteAccionProceso;
	}	
	
	public void setesReporteAccionProceso(Boolean esReporteAccionProceso) {
		this.esReporteAccionProceso= esReporteAccionProceso;
	}
		
	public ParametroFactuTransaccionParameterReturnGeneral getParametroFactuTransaccionParameterGeneral() {
		return this.parametrofactutransaccionParameterGeneral;
	}
	
	public void setParametroFactuTransaccionParameterGeneral(ParametroFactuTransaccionParameterReturnGeneral parametrofactutransaccionParameterGeneral) {
		this.parametrofactutransaccionParameterGeneral = parametrofactutransaccionParameterGeneral;
	}
	
	public String getsPathReporteDinamico() {
		return sPathReporteDinamico;
	}

	public void setsPathReporteDinamico(String sPathReporteDinamico) {
		this.sPathReporteDinamico = sPathReporteDinamico;
	}
		
	public Boolean getisMostrarNumeroPaginacion() {
		return isMostrarNumeroPaginacion;
	}

	public void setisMostrarNumeroPaginacion(Boolean isMostrarNumeroPaginacion) {
		this.isMostrarNumeroPaginacion = isMostrarNumeroPaginacion;
	}
	
	public Mensaje getMensaje() {
		return mensaje;
	}

	public void setMensaje(Mensaje mensaje) {
		this.mensaje = mensaje;
	}
	
	public Boolean getIsPermisoTodoParametroFactuTransaccion() {
		return isPermisoTodoParametroFactuTransaccion;
	}

	public void setIsPermisoTodoParametroFactuTransaccion(Boolean isPermisoTodoParametroFactuTransaccion) {
		this.isPermisoTodoParametroFactuTransaccion = isPermisoTodoParametroFactuTransaccion;
	}

	public Boolean getIsPermisoNuevoParametroFactuTransaccion() {
		return isPermisoNuevoParametroFactuTransaccion;
	}

	public void setIsPermisoNuevoParametroFactuTransaccion(Boolean isPermisoNuevoParametroFactuTransaccion) {
		this.isPermisoNuevoParametroFactuTransaccion = isPermisoNuevoParametroFactuTransaccion;
	}

	public Boolean getIsPermisoActualizarParametroFactuTransaccion() {
		return isPermisoActualizarParametroFactuTransaccion;
	}

	public void setIsPermisoActualizarParametroFactuTransaccion(Boolean isPermisoActualizarParametroFactuTransaccion) {
		this.isPermisoActualizarParametroFactuTransaccion = isPermisoActualizarParametroFactuTransaccion;
	}

	public Boolean getIsPermisoEliminarParametroFactuTransaccion() {
		return isPermisoEliminarParametroFactuTransaccion;
	}

	public void setIsPermisoEliminarParametroFactuTransaccion(Boolean isPermisoEliminarParametroFactuTransaccion) {
		this.isPermisoEliminarParametroFactuTransaccion = isPermisoEliminarParametroFactuTransaccion;
	}

	public Boolean getIsPermisoGuardarCambiosParametroFactuTransaccion() {
		return isPermisoGuardarCambiosParametroFactuTransaccion;
	}

	public void setIsPermisoGuardarCambiosParametroFactuTransaccion(Boolean isPermisoGuardarCambiosParametroFactuTransaccion) {
		this.isPermisoGuardarCambiosParametroFactuTransaccion = isPermisoGuardarCambiosParametroFactuTransaccion;
	}
	
	public Boolean getIsPermisoConsultaParametroFactuTransaccion() {
		return isPermisoConsultaParametroFactuTransaccion;
	}

	public void setIsPermisoConsultaParametroFactuTransaccion(Boolean isPermisoConsultaParametroFactuTransaccion) {
		this.isPermisoConsultaParametroFactuTransaccion = isPermisoConsultaParametroFactuTransaccion;
	}

	public Boolean getIsPermisoBusquedaParametroFactuTransaccion() {
		return isPermisoBusquedaParametroFactuTransaccion;
	}

	public void setIsPermisoBusquedaParametroFactuTransaccion(Boolean isPermisoBusquedaParametroFactuTransaccion) {
		this.isPermisoBusquedaParametroFactuTransaccion = isPermisoBusquedaParametroFactuTransaccion;
	}

	public Boolean getIsPermisoReporteParametroFactuTransaccion() {
		return isPermisoReporteParametroFactuTransaccion;
	}

	public void setIsPermisoReporteParametroFactuTransaccion(Boolean isPermisoReporteParametroFactuTransaccion) {
		this.isPermisoReporteParametroFactuTransaccion = isPermisoReporteParametroFactuTransaccion;
	}
	
	public Boolean getIsPermisoPaginacionMedioParametroFactuTransaccion() {
		return isPermisoPaginacionMedioParametroFactuTransaccion;
	}

	public void setIsPermisoPaginacionMedioParametroFactuTransaccion(Boolean isPermisoPaginacionMedioParametroFactuTransaccion) {
		this.isPermisoPaginacionMedioParametroFactuTransaccion = isPermisoPaginacionMedioParametroFactuTransaccion;
	}
	
	public Boolean getIsPermisoPaginacionTodoParametroFactuTransaccion() {
		return isPermisoPaginacionTodoParametroFactuTransaccion;
	}

	public void setIsPermisoPaginacionTodoParametroFactuTransaccion(Boolean isPermisoPaginacionTodoParametroFactuTransaccion) {
		this.isPermisoPaginacionTodoParametroFactuTransaccion = isPermisoPaginacionTodoParametroFactuTransaccion;
	}
	
	public Boolean getIsPermisoPaginacionAltoParametroFactuTransaccion() {
		return isPermisoPaginacionAltoParametroFactuTransaccion;
	}

	public void setIsPermisoPaginacionAltoParametroFactuTransaccion(Boolean isPermisoPaginacionAltoParametroFactuTransaccion) {
		this.isPermisoPaginacionAltoParametroFactuTransaccion = isPermisoPaginacionAltoParametroFactuTransaccion;
	}
	
	public Boolean getIsPermisoCopiarParametroFactuTransaccion() {
		return isPermisoCopiarParametroFactuTransaccion;
	}

	public void setIsPermisoCopiarParametroFactuTransaccion(Boolean isPermisoCopiarParametroFactuTransaccion) {
		this.isPermisoCopiarParametroFactuTransaccion = isPermisoCopiarParametroFactuTransaccion;
	}
	
	public Boolean getIsPermisoVerFormParametroFactuTransaccion() {
		return isPermisoVerFormParametroFactuTransaccion;
	}

	public void setIsPermisoVerFormParametroFactuTransaccion(Boolean isPermisoVerFormParametroFactuTransaccion) {
		this.isPermisoVerFormParametroFactuTransaccion = isPermisoVerFormParametroFactuTransaccion;
	}
	
	public Boolean getIsPermisoDuplicarParametroFactuTransaccion() {
		return isPermisoDuplicarParametroFactuTransaccion;
	}

	public void setIsPermisoDuplicarParametroFactuTransaccion(Boolean isPermisoDuplicarParametroFactuTransaccion) {
		this.isPermisoDuplicarParametroFactuTransaccion = isPermisoDuplicarParametroFactuTransaccion;
	}
	
	public Boolean getIsPermisoOrdenParametroFactuTransaccion() {
		return isPermisoOrdenParametroFactuTransaccion;
	}

	public void setIsPermisoOrdenParametroFactuTransaccion(Boolean isPermisoOrdenParametroFactuTransaccion) {
		this.isPermisoOrdenParametroFactuTransaccion = isPermisoOrdenParametroFactuTransaccion;
	}
	
	public String getsVisibilidadTablaBusquedas() {
		return sVisibilidadTablaBusquedas;
	}

	public void setsVisibilidadTablaBusquedas(String sVisibilidadTablaBusquedas) {
		this.sVisibilidadTablaBusquedas = sVisibilidadTablaBusquedas;
	}
	
	public String getsVisibilidadTablaElementos() {
		return sVisibilidadTablaElementos;
	}

	public void setsVisibilidadTablaElementos(String sVisibilidadTablaElementos) {
		this.sVisibilidadTablaElementos = sVisibilidadTablaElementos;
	}

	public String getsVisibilidadTablaAcciones() {
		return sVisibilidadTablaAcciones;
	}

	public void setsVisibilidadTablaAcciones(String sVisibilidadTablaAcciones) {
		this.sVisibilidadTablaAcciones = sVisibilidadTablaAcciones;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoParametroFactuTransaccion() {
		return isVisibilidadCeldaNuevoParametroFactuTransaccion;
	}

	public void setIsVisibilidadCeldaNuevoParametroFactuTransaccion(Boolean isVisibilidadCeldaNuevoParametroFactuTransaccion) {
		this.isVisibilidadCeldaNuevoParametroFactuTransaccion = isVisibilidadCeldaNuevoParametroFactuTransaccion;
	}
	
	public Boolean getIsVisibilidadCeldaDuplicarParametroFactuTransaccion() {
		return isVisibilidadCeldaDuplicarParametroFactuTransaccion;
	}

	public void setIsVisibilidadCeldaDuplicarParametroFactuTransaccion(Boolean isVisibilidadCeldaDuplicarParametroFactuTransaccion) {
		this.isVisibilidadCeldaDuplicarParametroFactuTransaccion = isVisibilidadCeldaDuplicarParametroFactuTransaccion;
	}
	
	public Boolean getIsVisibilidadCeldaCopiarParametroFactuTransaccion() {
		return isVisibilidadCeldaCopiarParametroFactuTransaccion;
	}

	public void setIsVisibilidadCeldaCopiarParametroFactuTransaccion(Boolean isVisibilidadCeldaCopiarParametroFactuTransaccion) {
		this.isVisibilidadCeldaCopiarParametroFactuTransaccion = isVisibilidadCeldaCopiarParametroFactuTransaccion;
	}
	
	public Boolean getIsVisibilidadCeldaVerFormParametroFactuTransaccion() {
		return isVisibilidadCeldaVerFormParametroFactuTransaccion;
	}

	public void setIsVisibilidadCeldaVerFormParametroFactuTransaccion(Boolean isVisibilidadCeldaVerFormParametroFactuTransaccion) {
		this.isVisibilidadCeldaVerFormParametroFactuTransaccion = isVisibilidadCeldaVerFormParametroFactuTransaccion;
	}
	
	public Boolean getIsVisibilidadCeldaOrdenParametroFactuTransaccion() {
		return isVisibilidadCeldaOrdenParametroFactuTransaccion;
	}

	public void setIsVisibilidadCeldaOrdenParametroFactuTransaccion(Boolean isVisibilidadCeldaOrdenParametroFactuTransaccion) {
		this.isVisibilidadCeldaOrdenParametroFactuTransaccion = isVisibilidadCeldaOrdenParametroFactuTransaccion;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoRelacionesParametroFactuTransaccion() {
		return isVisibilidadCeldaNuevoRelacionesParametroFactuTransaccion;
	}

	public void setIsVisibilidadCeldaNuevoRelacionesParametroFactuTransaccion(Boolean isVisibilidadCeldaNuevoRelacionesParametroFactuTransaccion) {
		this.isVisibilidadCeldaNuevoRelacionesParametroFactuTransaccion = isVisibilidadCeldaNuevoRelacionesParametroFactuTransaccion;
	}
	
	public Boolean getIsVisibilidadCeldaModificarParametroFactuTransaccion() {
		return isVisibilidadCeldaModificarParametroFactuTransaccion;
	}

	public void setIsVisibilidadCeldaModificarParametroFactuTransaccion(Boolean isVisibilidadCeldaModificarParametroFactuTransaccion) {
		this.isVisibilidadCeldaModificarParametroFactuTransaccion = isVisibilidadCeldaModificarParametroFactuTransaccion;
	}
	
	public Boolean getIsVisibilidadCeldaActualizarParametroFactuTransaccion() {
		return isVisibilidadCeldaActualizarParametroFactuTransaccion;
	}

	public void setIsVisibilidadCeldaActualizarParametroFactuTransaccion(Boolean isVisibilidadCeldaActualizarParametroFactuTransaccion) {
		this.isVisibilidadCeldaActualizarParametroFactuTransaccion = isVisibilidadCeldaActualizarParametroFactuTransaccion;
	}

	public Boolean getIsVisibilidadCeldaEliminarParametroFactuTransaccion() {
		return isVisibilidadCeldaEliminarParametroFactuTransaccion;
	}

	public void setIsVisibilidadCeldaEliminarParametroFactuTransaccion(Boolean isVisibilidadCeldaEliminarParametroFactuTransaccion) {
		this.isVisibilidadCeldaEliminarParametroFactuTransaccion = isVisibilidadCeldaEliminarParametroFactuTransaccion;
	}

	public Boolean getIsVisibilidadCeldaCancelarParametroFactuTransaccion() {
		return isVisibilidadCeldaCancelarParametroFactuTransaccion;
	}

	public void setIsVisibilidadCeldaCancelarParametroFactuTransaccion(Boolean isVisibilidadCeldaCancelarParametroFactuTransaccion) {
		this.isVisibilidadCeldaCancelarParametroFactuTransaccion = isVisibilidadCeldaCancelarParametroFactuTransaccion;
	}

	public Boolean getIsVisibilidadCeldaGuardarParametroFactuTransaccion() {
		return isVisibilidadCeldaGuardarParametroFactuTransaccion;
	}

	public void setIsVisibilidadCeldaGuardarParametroFactuTransaccion(Boolean isVisibilidadCeldaGuardarParametroFactuTransaccion) {
		this.isVisibilidadCeldaGuardarParametroFactuTransaccion = isVisibilidadCeldaGuardarParametroFactuTransaccion;
	}
	
	public Boolean getIsVisibilidadCeldaGuardarCambiosParametroFactuTransaccion() {
		return isVisibilidadCeldaGuardarCambiosParametroFactuTransaccion;
	}

	public void setIsVisibilidadCeldaGuardarCambiosParametroFactuTransaccion(Boolean isVisibilidadCeldaGuardarCambiosParametroFactuTransaccion) {
		this.isVisibilidadCeldaGuardarCambiosParametroFactuTransaccion = isVisibilidadCeldaGuardarCambiosParametroFactuTransaccion;
	}
		
	public ParametroFactuTransaccionSessionBean getparametrofactutransaccionSessionBean() {
		return this.parametrofactutransaccionSessionBean;
	}
	
	public void setparametrofactutransaccionSessionBean(ParametroFactuTransaccionSessionBean parametrofactutransaccionSessionBean) {
		this.parametrofactutransaccionSessionBean=parametrofactutransaccionSessionBean;
	}
	
	
	public Boolean getisVisibilidadFK_IdEmpresa() {
		return this.isVisibilidadFK_IdEmpresa;
	}

	public void setisVisibilidadFK_IdEmpresa(Boolean isVisibilidadFK_IdEmpresa) {
		this.isVisibilidadFK_IdEmpresa=isVisibilidadFK_IdEmpresa;
	}

	public Boolean getisVisibilidadFK_IdSucursal() {
		return this.isVisibilidadFK_IdSucursal;
	}

	public void setisVisibilidadFK_IdSucursal(Boolean isVisibilidadFK_IdSucursal) {
		this.isVisibilidadFK_IdSucursal=isVisibilidadFK_IdSucursal;
	}

	public Boolean getisVisibilidadFK_IdTransaccionCuentaCoFactura() {
		return this.isVisibilidadFK_IdTransaccionCuentaCoFactura;
	}

	public void setisVisibilidadFK_IdTransaccionCuentaCoFactura(Boolean isVisibilidadFK_IdTransaccionCuentaCoFactura) {
		this.isVisibilidadFK_IdTransaccionCuentaCoFactura=isVisibilidadFK_IdTransaccionCuentaCoFactura;
	}

	public Boolean getisVisibilidadFK_IdTransaccionCuentaCoNotaCredito() {
		return this.isVisibilidadFK_IdTransaccionCuentaCoNotaCredito;
	}

	public void setisVisibilidadFK_IdTransaccionCuentaCoNotaCredito(Boolean isVisibilidadFK_IdTransaccionCuentaCoNotaCredito) {
		this.isVisibilidadFK_IdTransaccionCuentaCoNotaCredito=isVisibilidadFK_IdTransaccionCuentaCoNotaCredito;
	}

	public Boolean getisVisibilidadFK_IdTransaccionCuentaCoNotaVenta() {
		return this.isVisibilidadFK_IdTransaccionCuentaCoNotaVenta;
	}

	public void setisVisibilidadFK_IdTransaccionCuentaCoNotaVenta(Boolean isVisibilidadFK_IdTransaccionCuentaCoNotaVenta) {
		this.isVisibilidadFK_IdTransaccionCuentaCoNotaVenta=isVisibilidadFK_IdTransaccionCuentaCoNotaVenta;
	}

	public Boolean getisVisibilidadFK_IdTransaccionCuentaCoTarjeta() {
		return this.isVisibilidadFK_IdTransaccionCuentaCoTarjeta;
	}

	public void setisVisibilidadFK_IdTransaccionCuentaCoTarjeta(Boolean isVisibilidadFK_IdTransaccionCuentaCoTarjeta) {
		this.isVisibilidadFK_IdTransaccionCuentaCoTarjeta=isVisibilidadFK_IdTransaccionCuentaCoTarjeta;
	}

	public Boolean getisVisibilidadFK_IdTransaccionCuentaPaFactura() {
		return this.isVisibilidadFK_IdTransaccionCuentaPaFactura;
	}

	public void setisVisibilidadFK_IdTransaccionCuentaPaFactura(Boolean isVisibilidadFK_IdTransaccionCuentaPaFactura) {
		this.isVisibilidadFK_IdTransaccionCuentaPaFactura=isVisibilidadFK_IdTransaccionCuentaPaFactura;
	}

	public Boolean getisVisibilidadFK_IdTransaccionCuentaPaNotaCredito() {
		return this.isVisibilidadFK_IdTransaccionCuentaPaNotaCredito;
	}

	public void setisVisibilidadFK_IdTransaccionCuentaPaNotaCredito(Boolean isVisibilidadFK_IdTransaccionCuentaPaNotaCredito) {
		this.isVisibilidadFK_IdTransaccionCuentaPaNotaCredito=isVisibilidadFK_IdTransaccionCuentaPaNotaCredito;
	}

	public Boolean getisVisibilidadFK_IdTransaccionInvenFactura() {
		return this.isVisibilidadFK_IdTransaccionInvenFactura;
	}

	public void setisVisibilidadFK_IdTransaccionInvenFactura(Boolean isVisibilidadFK_IdTransaccionInvenFactura) {
		this.isVisibilidadFK_IdTransaccionInvenFactura=isVisibilidadFK_IdTransaccionInvenFactura;
	}

	public Boolean getisVisibilidadFK_IdTransaccionInvenNotaCredito() {
		return this.isVisibilidadFK_IdTransaccionInvenNotaCredito;
	}

	public void setisVisibilidadFK_IdTransaccionInvenNotaCredito(Boolean isVisibilidadFK_IdTransaccionInvenNotaCredito) {
		this.isVisibilidadFK_IdTransaccionInvenNotaCredito=isVisibilidadFK_IdTransaccionInvenNotaCredito;
	}

	public Boolean getisVisibilidadFK_IdTransaccionInvenNotaVenta() {
		return this.isVisibilidadFK_IdTransaccionInvenNotaVenta;
	}

	public void setisVisibilidadFK_IdTransaccionInvenNotaVenta(Boolean isVisibilidadFK_IdTransaccionInvenNotaVenta) {
		this.isVisibilidadFK_IdTransaccionInvenNotaVenta=isVisibilidadFK_IdTransaccionInvenNotaVenta;
	}

	
	
	public void setVariablesFormularioToObjetoActualForeignKeysParametroFactuTransaccion(ParametroFactuTransaccion parametrofactutransaccion)throws Exception {
		try {
			
				this.setActualParaGuardarEmpresaForeignKey(parametrofactutransaccion,null);
				this.setActualParaGuardarSucursalForeignKey(parametrofactutransaccion,null);
				this.setActualParaGuardarTransaccionInvenFacturaForeignKey(parametrofactutransaccion,null);
				this.setActualParaGuardarTransaccionInvenNotaCreditoForeignKey(parametrofactutransaccion,null);
				this.setActualParaGuardarTransaccionInvenNotaVentaForeignKey(parametrofactutransaccion,null);
				this.setActualParaGuardarTransaccionCuentaCoFacturaForeignKey(parametrofactutransaccion,null);
				this.setActualParaGuardarTransaccionCuentaCoNotaCreditoForeignKey(parametrofactutransaccion,null);
				this.setActualParaGuardarTransaccionCuentaCoNotaVentaForeignKey(parametrofactutransaccion,null);
				this.setActualParaGuardarTransaccionCuentaCoTarjetaForeignKey(parametrofactutransaccion,null);
				this.setActualParaGuardarTransaccionCuentaPaFacturaForeignKey(parametrofactutransaccion,null);
				this.setActualParaGuardarTransaccionCuentaPaNotaCreditoForeignKey(parametrofactutransaccion,null);
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarLicenciaCliente(DatosCliente datosCliente) throws Exception {
		Boolean existe=false;
			
		try {
				InputStream reportFile=null;
				
				String sPath=this.parametroGeneralUsuario.getpath_exportar()+"erp_bydan/license/license.xml";
				
				reportFile = new FileInputStream(sPath);
				
				Document documentBuilder=null;
				
				if(this.constantes2.DOCUMENT_BUILDER==null) {
					documentBuilder=Funciones2.parseXml(reportFile);
				} else {
					documentBuilder=this.constantes2.DOCUMENT_BUILDER;
				}
				
				//GlobalSeguridad.readXml(documentBuilder);
				
				String sNamePCServerLicencia="";
				String sClaveSistemaLicencia="";
				Date dFechaServerLicencia=null;
				
				//CARGAR ELEMENTOS DE LICENCIA
				NodeList nodeList = documentBuilder.getElementsByTagName("Licencia");
				
				for (int iIndice = 0; iIndice < nodeList.getLength(); iIndice++) {
					Node node = nodeList.item(iIndice);
				
					if (node.getNodeType() == Node.ELEMENT_NODE) {
						Element element = (Element) node;
						 
						sNamePCServerLicencia=element.getElementsByTagName("NombrePc").item(0).getTextContent();
						sClaveSistemaLicencia=element.getElementsByTagName("ClaveSistema").item(0).getTextContent();
						
						existe=true;
						break;
					}
				}														
			
				
			if(existe) {
				datosCliente.setsClaveSistema(sClaveSistemaLicencia);
				
				if(!datosCliente.getsNamePCServer().equals(sNamePCServerLicencia)
					&& !datosCliente.getsNamePCServer().equals("")) {
					
					datosCliente.setsNamePCServer(sNamePCServerLicencia);
				}
			} else {
				throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
			}
		} catch(Exception e) {
			throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
		}						
	}
	
	public void cargarDatosCliente() throws Exception {
		String sPrimerMacAddress="";		
		String sHostName="";		 
		String sHostIp="";		  
		String sHostUser="";
		
		
		sPrimerMacAddress=FuncionesNetwork.getPrimerMacAddress();		
		sHostName=FuncionesNetwork.getHostName();		 
		sHostIp=FuncionesNetwork.getHostIp();		  
		sHostUser=FuncionesNetwork.getHostUser();
		
		
		this.datosCliente=new DatosCliente();
		if(lIdUsuarioSesion!=null){datosCliente.setIdUsuario(this.lIdUsuarioSesion);}
		
		//SERVIDOR WEB Y TALVEZ SERVIDOR SWING WINDOWS
		this.datosCliente.setsUsuarioPCServer(sHostUser);
		this.datosCliente.setsNamePCServer(sHostName);
		this.datosCliente.setsIPPCServer(sHostIp);
		this.datosCliente.setsMacAddressPCServer(sPrimerMacAddress);
			
			//CLIENTE SWING WINDOWS
			this.datosCliente.setIsClienteWeb(false);
			
			this.datosCliente.setsUsuarioPC(sHostUser);
			this.datosCliente.setsNamePC(sHostName);
			this.datosCliente.setsIPPC(sHostIp);
			this.datosCliente.setsMacAddressPC(sPrimerMacAddress);	
			
			
			//this.cargarLicenciaCliente(this.datosCliente);
			
	}
	
	public void bugActualizarReferenciaActual(ParametroFactuTransaccion parametrofactutransaccion,ParametroFactuTransaccion parametrofactutransaccionAux) throws Exception {
		//ARCHITECTURE		
		//EL ID NEGATIVO GUARDADO EN ORIGINAL SIRVE PARA VERIFICAR Y ACTUALIZAR EL REGISTRO NUEVO (ID,VERSIONROW)
		this.setCamposBaseDesdeOriginalParametroFactuTransaccion(parametrofactutransaccion);
					
		//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
		parametrofactutransaccionAux.setId(parametrofactutransaccion.getId());
		parametrofactutransaccionAux.setVersionRow(parametrofactutransaccion.getVersionRow());					
	}
	
	public void ejecutarMantenimiento(MaintenanceType maintenanceType)throws Exception {	
		try	{								
			
			//this.startProcessParametroFactuTransaccion();
		
			int intSelectedRow = this.jTableDatosParametroFactuTransaccion.getSelectedRow();	       
			
			//PUEDE SER -1 CUANDO SE ELIMINA EN GUARDAR CAMBIOS
			if(intSelectedRow>=0 && maintenanceType!=MaintenanceType.GUARDARCAMBIOS) {
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
					
				//ARCHITECTURE
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactutransaccion =(ParametroFactuTransaccion) this.parametrofactutransaccionLogic.getParametroFactuTransaccions().toArray()[this.jTableDatosParametroFactuTransaccion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
					this.parametrofactutransaccion =(ParametroFactuTransaccion) this.parametrofactutransaccions.toArray()[this.jTableDatosParametroFactuTransaccion.convertRowIndexToModel(intSelectedRow)];
				}
				
				//ARCHITECTURE
				
				if(ParametroFactuTransaccionJInternalFrame.ISBINDING_MANUAL_TABLA) {
					//this.setVariablesFormularioToObjetoActualParametroFactuTransaccion(this.parametrofactutransaccion,true);
				}
				
				this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuTransaccion(this.parametrofactutransaccion);
			}
			
			//LUEGO DE TRAER DATOS CORRESPONDIENTES QUE COINCIDA LISTA TABLA QUITO FILA TOTALES
			if(this.conTotales) {
				//MEJOR LO DEJO, SI EXISTE EXCEPCION SE PIEDE FILA TOTALES Y ORDEN INDICE FILA ACTUAL
				//this.quitarFilaTotales();
			}
			
			this.cargarDatosCliente();
			
			this.datosDeep=new DatosDeep();
			
			//SE CAMBIA ESTADOS CON ERROR, ENTONCES SE EJECUTA ANTES
			//this.invalidValues = parametrofactutransaccionValidator.getInvalidValues(this.parametrofactutransaccion);
			
			//if(this.invalidValues==null || this.invalidValues.length<=0) {
			
			parametrofactutransaccionLogic.setDatosCliente(datosCliente);
			parametrofactutransaccionLogic.setIsConDeep(false);
			
			if(maintenanceType==MaintenanceType.NUEVO) {
				parametrofactutransaccionAux=new  ParametroFactuTransaccion();
				
				parametrofactutransaccionAux.setIsNew(true);
				parametrofactutransaccionAux.setIsChanged(true);
				
				parametrofactutransaccionAux.setParametroFactuTransaccionOriginal(this.parametrofactutransaccion);
				
				parametrofactutransaccionAux.setId(this.parametrofactutransaccion.getId());	
				parametrofactutransaccionAux.setVersionRow(this.parametrofactutransaccion.getVersionRow());	
				parametrofactutransaccionAux.setid_empresa(this.parametrofactutransaccion.getid_empresa());	
				parametrofactutransaccionAux.setid_sucursal(this.parametrofactutransaccion.getid_sucursal());	
				parametrofactutransaccionAux.setid_transaccion_inven_factura(this.parametrofactutransaccion.getid_transaccion_inven_factura());	
				parametrofactutransaccionAux.setid_transaccion_inven_nota_credito(this.parametrofactutransaccion.getid_transaccion_inven_nota_credito());	
				parametrofactutransaccionAux.setid_transaccion_inven_nota_venta(this.parametrofactutransaccion.getid_transaccion_inven_nota_venta());	
				parametrofactutransaccionAux.setid_transaccion_cuenta_co_factura(this.parametrofactutransaccion.getid_transaccion_cuenta_co_factura());	
				parametrofactutransaccionAux.setid_transaccion_cuenta_co_nota_credito(this.parametrofactutransaccion.getid_transaccion_cuenta_co_nota_credito());	
				parametrofactutransaccionAux.setid_transaccion_cuenta_co_nota_venta(this.parametrofactutransaccion.getid_transaccion_cuenta_co_nota_venta());	
				parametrofactutransaccionAux.setid_transaccion_cuenta_co_tarjeta(this.parametrofactutransaccion.getid_transaccion_cuenta_co_tarjeta());	
				parametrofactutransaccionAux.setid_transaccion_cuenta_pa_factura(this.parametrofactutransaccion.getid_transaccion_cuenta_pa_factura());	
				parametrofactutransaccionAux.setid_transaccion_cuenta_pa_nota_credito(this.parametrofactutransaccion.getid_transaccion_cuenta_pa_nota_credito());	
								
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.parametrofactutransaccionSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.parametrofactutransaccionSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(parametrofactutransaccionAux,parametrofactutransaccionLogic.getParametroFactuTransaccions());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(parametrofactutransaccionAux,parametrofactutransaccions);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote  && !this.parametrofactutransaccionSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.parametrofactutransaccionSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactutransaccionLogic.saveParametroFactuTransaccions();//WithConnection
						//parametrofactutransaccionLogic.getSetVersionRowParametroFactuTransaccions();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE		
					
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.parametrofactutransaccion,parametrofactutransaccionAux);
					
					this.refrescarForeignKeysDescripcionesParametroFactuTransaccion();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.parametrofactutransaccionSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
						}
						//ARCHITECTURE	
						
						if(!this.parametrofactutransaccionSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
												
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								parametrofactutransaccionLogic.saveParametroFactuTransaccionRelaciones(parametrofactutransaccionAux);//WithConnection
								//parametrofactutransaccionLogic.getSetVersionRowParametroFactuTransaccions();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.parametrofactutransaccion,parametrofactutransaccionAux);
					
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE	
						} else {
							
							
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.parametrofactutransaccionSessionBean.getEstaModoGuardarRelaciones() 
									|| this.parametrofactutransaccionSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(parametrofactutransaccionAux,parametrofactutransaccionLogic.getParametroFactuTransaccions());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(parametrofactutransaccionAux,parametrofactutransaccions);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.parametrofactutransaccion,parametrofactutransaccionAux);												
						}
					}
				}
			} else if(maintenanceType==MaintenanceType.ACTUALIZAR) {
				parametrofactutransaccionAux=new  ParametroFactuTransaccion();
				
				//PUEDE QUE SE ACTUALIZE ALGUN REGISTRO NUEVO
				if(!this.parametrofactutransaccionSessionBean.getEsGuardarRelacionado() 
					|| (this.parametrofactutransaccionSessionBean.getEsGuardarRelacionado() && this.parametrofactutransaccion.getId()>=0)) {
						
					parametrofactutransaccionAux.setIsNew(false);
				}
				
				parametrofactutransaccionAux.setIsDeleted(false);
			
				parametrofactutransaccionAux.setId(this.parametrofactutransaccion.getId());	
				parametrofactutransaccionAux.setVersionRow(this.parametrofactutransaccion.getVersionRow());	
				parametrofactutransaccionAux.setid_empresa(this.parametrofactutransaccion.getid_empresa());	
				parametrofactutransaccionAux.setid_sucursal(this.parametrofactutransaccion.getid_sucursal());	
				parametrofactutransaccionAux.setid_transaccion_inven_factura(this.parametrofactutransaccion.getid_transaccion_inven_factura());	
				parametrofactutransaccionAux.setid_transaccion_inven_nota_credito(this.parametrofactutransaccion.getid_transaccion_inven_nota_credito());	
				parametrofactutransaccionAux.setid_transaccion_inven_nota_venta(this.parametrofactutransaccion.getid_transaccion_inven_nota_venta());	
				parametrofactutransaccionAux.setid_transaccion_cuenta_co_factura(this.parametrofactutransaccion.getid_transaccion_cuenta_co_factura());	
				parametrofactutransaccionAux.setid_transaccion_cuenta_co_nota_credito(this.parametrofactutransaccion.getid_transaccion_cuenta_co_nota_credito());	
				parametrofactutransaccionAux.setid_transaccion_cuenta_co_nota_venta(this.parametrofactutransaccion.getid_transaccion_cuenta_co_nota_venta());	
				parametrofactutransaccionAux.setid_transaccion_cuenta_co_tarjeta(this.parametrofactutransaccion.getid_transaccion_cuenta_co_tarjeta());	
				parametrofactutransaccionAux.setid_transaccion_cuenta_pa_factura(this.parametrofactutransaccion.getid_transaccion_cuenta_pa_factura());	
				parametrofactutransaccionAux.setid_transaccion_cuenta_pa_nota_credito(this.parametrofactutransaccion.getid_transaccion_cuenta_pa_nota_credito());	
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(parametrofactutransaccionAux,parametrofactutransaccionLogic.getParametroFactuTransaccions());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(parametrofactutransaccionAux,parametrofactutransaccions);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote && !this.parametrofactutransaccionSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.parametrofactutransaccionSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactutransaccionLogic.saveParametroFactuTransaccions();//WithConnection
						//parametrofactutransaccionLogic.getSetVersionRowParametroFactuTransaccions();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
					
					//TALVEZ ESTA DEMAS POR SER UPDATE
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.parametrofactutransaccion,parametrofactutransaccionAux);
					
					this.refrescarForeignKeysDescripcionesParametroFactuTransaccion();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.parametrofactutransaccionSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
						}
						//ARCHITECTURE
						
						if(!this.parametrofactutransaccionSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								parametrofactutransaccionLogic.saveParametroFactuTransaccionRelaciones(parametrofactutransaccionAux);//WithConnection
								//parametrofactutransaccionLogic.getSetVersionRowParametroFactuTransaccions();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.parametrofactutransaccion,parametrofactutransaccionAux);
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
						} else {
							
							
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.parametrofactutransaccionSessionBean.getEstaModoGuardarRelaciones() 
									|| this.parametrofactutransaccionSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(parametrofactutransaccionAux,parametrofactutransaccionLogic.getParametroFactuTransaccions());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(parametrofactutransaccionAux,parametrofactutransaccions);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.parametrofactutransaccion,parametrofactutransaccionAux);
					
						}
					}
				}				
			} else if(maintenanceType==MaintenanceType.ELIMINAR) {
				parametrofactutransaccionAux=new  ParametroFactuTransaccion();
				
				parametrofactutransaccionAux.setIsNew(false);
				parametrofactutransaccionAux.setIsChanged(false);
				
				parametrofactutransaccionAux.setIsDeleted(true);
				
				parametrofactutransaccionAux.setId(this.parametrofactutransaccion.getId());	
				parametrofactutransaccionAux.setVersionRow(this.parametrofactutransaccion.getVersionRow());	
				parametrofactutransaccionAux.setid_empresa(this.parametrofactutransaccion.getid_empresa());	
				parametrofactutransaccionAux.setid_sucursal(this.parametrofactutransaccion.getid_sucursal());	
				parametrofactutransaccionAux.setid_transaccion_inven_factura(this.parametrofactutransaccion.getid_transaccion_inven_factura());	
				parametrofactutransaccionAux.setid_transaccion_inven_nota_credito(this.parametrofactutransaccion.getid_transaccion_inven_nota_credito());	
				parametrofactutransaccionAux.setid_transaccion_inven_nota_venta(this.parametrofactutransaccion.getid_transaccion_inven_nota_venta());	
				parametrofactutransaccionAux.setid_transaccion_cuenta_co_factura(this.parametrofactutransaccion.getid_transaccion_cuenta_co_factura());	
				parametrofactutransaccionAux.setid_transaccion_cuenta_co_nota_credito(this.parametrofactutransaccion.getid_transaccion_cuenta_co_nota_credito());	
				parametrofactutransaccionAux.setid_transaccion_cuenta_co_nota_venta(this.parametrofactutransaccion.getid_transaccion_cuenta_co_nota_venta());	
				parametrofactutransaccionAux.setid_transaccion_cuenta_co_tarjeta(this.parametrofactutransaccion.getid_transaccion_cuenta_co_tarjeta());	
				parametrofactutransaccionAux.setid_transaccion_cuenta_pa_factura(this.parametrofactutransaccion.getid_transaccion_cuenta_pa_factura());	
				parametrofactutransaccionAux.setid_transaccion_cuenta_pa_nota_credito(this.parametrofactutransaccion.getid_transaccion_cuenta_pa_nota_credito());	
				
				if(this.parametrofactutransaccionSessionBean.getEsGuardarRelacionado()) {
					//ELEMENTO ACTUAL NO SE HA INGRESADO AL SISTEMA, NO SE PUEDE ELIMINAR ALGO QUE NO EXISTE
					if(this.parametrofactutransaccionAux.getId()>=0) {	
						this.parametrofactutransaccionsEliminados.add(parametrofactutransaccionAux);											
					}
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					actualizarLista(parametrofactutransaccionAux,parametrofactutransaccionLogic.getParametroFactuTransaccions());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(parametrofactutransaccionAux,parametrofactutransaccions);
				}
				//ARCHITECTURE
				
				
				if(!isGuardarCambiosEnLote && !this.parametrofactutransaccionSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.parametrofactutransaccionSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactutransaccionLogic.saveParametroFactuTransaccions();//WithConnection
						//parametrofactutransaccionLogic.getSetVersionRowParametroFactuTransaccions();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.parametrofactutransaccionSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
						}
						//ARCHITECTURE
						
						
						if(!this.parametrofactutransaccionSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								parametrofactutransaccionLogic.saveParametroFactuTransaccionRelaciones(parametrofactutransaccionAux);//WithConnection
								//parametrofactutransaccionLogic.getSetVersionRowParametroFactuTransaccions();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
						}
					}  else {
							
						
								
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							if(this.parametrofactutransaccionSessionBean.getEstaModoGuardarRelaciones() 
								|| this.parametrofactutransaccionSessionBean.getEsGuardarRelacionado())	{
								actualizarLista(parametrofactutransaccionAux,parametrofactutransaccionLogic.getParametroFactuTransaccions());
							}
						} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
							actualizarLista(parametrofactutransaccionAux,parametrofactutransaccions);
						}
						//ARCHITECTURE
					}
				}				
			} else if(maintenanceType==MaintenanceType.GUARDARCAMBIOS) {		
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactutransaccionLogic.getParametroFactuTransaccions().addAll(this.parametrofactutransaccionsEliminados);
					
					parametrofactutransaccionLogic.saveParametroFactuTransaccions();//WithConnection
					//parametrofactutransaccionLogic.getSetVersionRowParametroFactuTransaccions();//WithConnection
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}	
				//ARCHITECTURE
				this.refrescarForeignKeysDescripcionesParametroFactuTransaccion();
				
				this.parametrofactutransaccionsEliminados= new ArrayList<ParametroFactuTransaccion>();		
			}
			
			if(this.parametrofactutransaccionSessionBean.getEsGuardarRelacionado()) {
				 this.crearFilaTotales();
			}
			
			
									
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.parametrofactutransaccionSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				if(!this.isPostAccionSinMensaje) {
					JOptionPane.showMessageDialog(this,"Parametro Transaccion  GUARDADO CORRECTAMENTE","MANTENIMIENTO DE Parametro Transaccion ",JOptionPane.INFORMATION_MESSAGE);
					if(maintenanceType==MaintenanceType.NUEVO || maintenanceType==MaintenanceType.ACTUALIZAR) {
						//CUANDO ES NUEVO SE PIERDE REFERENCIA NO SE PORQUE
						this.parametrofactutransaccion=parametrofactutransaccionAux;
					}
				}
			}
			
			this.isErrorGuardar=false;
			
			this.inicializarInvalidValues();
		/*
		} else {
			this.mostrarInvalidValues();	
		}
		*/
			
		} catch(Exception e) {
			this.isErrorGuardar=true;
			
			this.crearFilaTotales();
			
			throw e;
		} finally {
      		//this.finishProcessParametroFactuTransaccion();
      	}
		
	}	
	
	public void actualizarRelaciones(ParametroFactuTransaccion parametrofactutransaccionLocal) throws Exception {
		
		if(this.parametrofactutransaccionSessionBean.getConGuardarRelaciones()) {			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
			
			
			} else {
				
			}
		}
	}
	
	public void actualizarRelacionFkPadreActual(ParametroFactuTransaccion parametrofactutransaccionLocal) throws Exception {	
		if(this.parametrofactutransaccionSessionBean.getEsGuardarRelacionado()) {			
			
		
			if(this.jInternalFrameParent.getClass().equals(EmpresaDetalleFormJInternalFrame.class)) {
				EmpresaBeanSwingJInternalFrame empresaBeanSwingJInternalFrameLocal=(EmpresaBeanSwingJInternalFrame) ((EmpresaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				empresaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEmpresa(empresaBeanSwingJInternalFrameLocal.getempresa(),true);
				empresaBeanSwingJInternalFrameLocal.actualizarLista(empresaBeanSwingJInternalFrameLocal.empresa,this.empresasForeignKey);

				empresaBeanSwingJInternalFrameLocal.actualizarRelaciones(empresaBeanSwingJInternalFrameLocal.empresa);

				parametrofactutransaccionLocal.setEmpresa(empresaBeanSwingJInternalFrameLocal.empresa);

				this.addItemDefectoCombosForeignKeyEmpresa();
				this.cargarCombosFrameEmpresasForeignKey("Formulario");
				this.setActualEmpresaForeignKey(empresaBeanSwingJInternalFrameLocal.empresa.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(SucursalDetalleFormJInternalFrame.class)) {
				SucursalBeanSwingJInternalFrame sucursalBeanSwingJInternalFrameLocal=(SucursalBeanSwingJInternalFrame) ((SucursalDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				sucursalBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoSucursal(sucursalBeanSwingJInternalFrameLocal.getsucursal(),true);
				sucursalBeanSwingJInternalFrameLocal.actualizarLista(sucursalBeanSwingJInternalFrameLocal.sucursal,this.sucursalsForeignKey);

				sucursalBeanSwingJInternalFrameLocal.actualizarRelaciones(sucursalBeanSwingJInternalFrameLocal.sucursal);

				parametrofactutransaccionLocal.setSucursal(sucursalBeanSwingJInternalFrameLocal.sucursal);

				this.addItemDefectoCombosForeignKeySucursal();
				this.cargarCombosFrameSucursalsForeignKey("Formulario");
				this.setActualSucursalForeignKey(sucursalBeanSwingJInternalFrameLocal.sucursal.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TransaccionDetalleFormJInternalFrame.class)) {
				TransaccionBeanSwingJInternalFrame transaccioninvenfacturaBeanSwingJInternalFrameLocal=(TransaccionBeanSwingJInternalFrame) ((TransaccionDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				transaccioninvenfacturaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTransaccion(transaccioninvenfacturaBeanSwingJInternalFrameLocal.gettransaccion(),true);
				transaccioninvenfacturaBeanSwingJInternalFrameLocal.actualizarLista(transaccioninvenfacturaBeanSwingJInternalFrameLocal.transaccion,this.transaccioninvenfacturasForeignKey);

				transaccioninvenfacturaBeanSwingJInternalFrameLocal.actualizarRelaciones(transaccioninvenfacturaBeanSwingJInternalFrameLocal.transaccion);

				parametrofactutransaccionLocal.setTransaccionInvenFactura(transaccioninvenfacturaBeanSwingJInternalFrameLocal.transaccion);

				this.addItemDefectoCombosForeignKeyTransaccionInvenFactura();
				this.cargarCombosFrameTransaccionInvenFacturasForeignKey("Formulario");
				this.setActualTransaccionInvenFacturaForeignKey(transaccioninvenfacturaBeanSwingJInternalFrameLocal.transaccion.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TransaccionDetalleFormJInternalFrame.class)) {
				TransaccionBeanSwingJInternalFrame transaccioninvennotacreditoBeanSwingJInternalFrameLocal=(TransaccionBeanSwingJInternalFrame) ((TransaccionDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				transaccioninvennotacreditoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTransaccion(transaccioninvennotacreditoBeanSwingJInternalFrameLocal.gettransaccion(),true);
				transaccioninvennotacreditoBeanSwingJInternalFrameLocal.actualizarLista(transaccioninvennotacreditoBeanSwingJInternalFrameLocal.transaccion,this.transaccioninvennotacreditosForeignKey);

				transaccioninvennotacreditoBeanSwingJInternalFrameLocal.actualizarRelaciones(transaccioninvennotacreditoBeanSwingJInternalFrameLocal.transaccion);

				parametrofactutransaccionLocal.setTransaccionInvenNotaCredito(transaccioninvennotacreditoBeanSwingJInternalFrameLocal.transaccion);

				this.addItemDefectoCombosForeignKeyTransaccionInvenNotaCredito();
				this.cargarCombosFrameTransaccionInvenNotaCreditosForeignKey("Formulario");
				this.setActualTransaccionInvenNotaCreditoForeignKey(transaccioninvennotacreditoBeanSwingJInternalFrameLocal.transaccion.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TransaccionDetalleFormJInternalFrame.class)) {
				TransaccionBeanSwingJInternalFrame transaccioninvennotaventaBeanSwingJInternalFrameLocal=(TransaccionBeanSwingJInternalFrame) ((TransaccionDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				transaccioninvennotaventaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTransaccion(transaccioninvennotaventaBeanSwingJInternalFrameLocal.gettransaccion(),true);
				transaccioninvennotaventaBeanSwingJInternalFrameLocal.actualizarLista(transaccioninvennotaventaBeanSwingJInternalFrameLocal.transaccion,this.transaccioninvennotaventasForeignKey);

				transaccioninvennotaventaBeanSwingJInternalFrameLocal.actualizarRelaciones(transaccioninvennotaventaBeanSwingJInternalFrameLocal.transaccion);

				parametrofactutransaccionLocal.setTransaccionInvenNotaVenta(transaccioninvennotaventaBeanSwingJInternalFrameLocal.transaccion);

				this.addItemDefectoCombosForeignKeyTransaccionInvenNotaVenta();
				this.cargarCombosFrameTransaccionInvenNotaVentasForeignKey("Formulario");
				this.setActualTransaccionInvenNotaVentaForeignKey(transaccioninvennotaventaBeanSwingJInternalFrameLocal.transaccion.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TransaccionDetalleFormJInternalFrame.class)) {
				TransaccionBeanSwingJInternalFrame transaccioncuentacofacturaBeanSwingJInternalFrameLocal=(TransaccionBeanSwingJInternalFrame) ((TransaccionDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				transaccioncuentacofacturaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTransaccion(transaccioncuentacofacturaBeanSwingJInternalFrameLocal.gettransaccion(),true);
				transaccioncuentacofacturaBeanSwingJInternalFrameLocal.actualizarLista(transaccioncuentacofacturaBeanSwingJInternalFrameLocal.transaccion,this.transaccioncuentacofacturasForeignKey);

				transaccioncuentacofacturaBeanSwingJInternalFrameLocal.actualizarRelaciones(transaccioncuentacofacturaBeanSwingJInternalFrameLocal.transaccion);

				parametrofactutransaccionLocal.setTransaccionCuentaCoFactura(transaccioncuentacofacturaBeanSwingJInternalFrameLocal.transaccion);

				this.addItemDefectoCombosForeignKeyTransaccionCuentaCoFactura();
				this.cargarCombosFrameTransaccionCuentaCoFacturasForeignKey("Formulario");
				this.setActualTransaccionCuentaCoFacturaForeignKey(transaccioncuentacofacturaBeanSwingJInternalFrameLocal.transaccion.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TransaccionDetalleFormJInternalFrame.class)) {
				TransaccionBeanSwingJInternalFrame transaccioncuentaconotacreditoBeanSwingJInternalFrameLocal=(TransaccionBeanSwingJInternalFrame) ((TransaccionDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				transaccioncuentaconotacreditoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTransaccion(transaccioncuentaconotacreditoBeanSwingJInternalFrameLocal.gettransaccion(),true);
				transaccioncuentaconotacreditoBeanSwingJInternalFrameLocal.actualizarLista(transaccioncuentaconotacreditoBeanSwingJInternalFrameLocal.transaccion,this.transaccioncuentaconotacreditosForeignKey);

				transaccioncuentaconotacreditoBeanSwingJInternalFrameLocal.actualizarRelaciones(transaccioncuentaconotacreditoBeanSwingJInternalFrameLocal.transaccion);

				parametrofactutransaccionLocal.setTransaccionCuentaCoNotaCredito(transaccioncuentaconotacreditoBeanSwingJInternalFrameLocal.transaccion);

				this.addItemDefectoCombosForeignKeyTransaccionCuentaCoNotaCredito();
				this.cargarCombosFrameTransaccionCuentaCoNotaCreditosForeignKey("Formulario");
				this.setActualTransaccionCuentaCoNotaCreditoForeignKey(transaccioncuentaconotacreditoBeanSwingJInternalFrameLocal.transaccion.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TransaccionDetalleFormJInternalFrame.class)) {
				TransaccionBeanSwingJInternalFrame transaccioncuentaconotaventaBeanSwingJInternalFrameLocal=(TransaccionBeanSwingJInternalFrame) ((TransaccionDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				transaccioncuentaconotaventaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTransaccion(transaccioncuentaconotaventaBeanSwingJInternalFrameLocal.gettransaccion(),true);
				transaccioncuentaconotaventaBeanSwingJInternalFrameLocal.actualizarLista(transaccioncuentaconotaventaBeanSwingJInternalFrameLocal.transaccion,this.transaccioncuentaconotaventasForeignKey);

				transaccioncuentaconotaventaBeanSwingJInternalFrameLocal.actualizarRelaciones(transaccioncuentaconotaventaBeanSwingJInternalFrameLocal.transaccion);

				parametrofactutransaccionLocal.setTransaccionCuentaCoNotaVenta(transaccioncuentaconotaventaBeanSwingJInternalFrameLocal.transaccion);

				this.addItemDefectoCombosForeignKeyTransaccionCuentaCoNotaVenta();
				this.cargarCombosFrameTransaccionCuentaCoNotaVentasForeignKey("Formulario");
				this.setActualTransaccionCuentaCoNotaVentaForeignKey(transaccioncuentaconotaventaBeanSwingJInternalFrameLocal.transaccion.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TransaccionDetalleFormJInternalFrame.class)) {
				TransaccionBeanSwingJInternalFrame transaccioncuentacotarjetaBeanSwingJInternalFrameLocal=(TransaccionBeanSwingJInternalFrame) ((TransaccionDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				transaccioncuentacotarjetaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTransaccion(transaccioncuentacotarjetaBeanSwingJInternalFrameLocal.gettransaccion(),true);
				transaccioncuentacotarjetaBeanSwingJInternalFrameLocal.actualizarLista(transaccioncuentacotarjetaBeanSwingJInternalFrameLocal.transaccion,this.transaccioncuentacotarjetasForeignKey);

				transaccioncuentacotarjetaBeanSwingJInternalFrameLocal.actualizarRelaciones(transaccioncuentacotarjetaBeanSwingJInternalFrameLocal.transaccion);

				parametrofactutransaccionLocal.setTransaccionCuentaCoTarjeta(transaccioncuentacotarjetaBeanSwingJInternalFrameLocal.transaccion);

				this.addItemDefectoCombosForeignKeyTransaccionCuentaCoTarjeta();
				this.cargarCombosFrameTransaccionCuentaCoTarjetasForeignKey("Formulario");
				this.setActualTransaccionCuentaCoTarjetaForeignKey(transaccioncuentacotarjetaBeanSwingJInternalFrameLocal.transaccion.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TransaccionDetalleFormJInternalFrame.class)) {
				TransaccionBeanSwingJInternalFrame transaccioncuentapafacturaBeanSwingJInternalFrameLocal=(TransaccionBeanSwingJInternalFrame) ((TransaccionDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				transaccioncuentapafacturaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTransaccion(transaccioncuentapafacturaBeanSwingJInternalFrameLocal.gettransaccion(),true);
				transaccioncuentapafacturaBeanSwingJInternalFrameLocal.actualizarLista(transaccioncuentapafacturaBeanSwingJInternalFrameLocal.transaccion,this.transaccioncuentapafacturasForeignKey);

				transaccioncuentapafacturaBeanSwingJInternalFrameLocal.actualizarRelaciones(transaccioncuentapafacturaBeanSwingJInternalFrameLocal.transaccion);

				parametrofactutransaccionLocal.setTransaccionCuentaPaFactura(transaccioncuentapafacturaBeanSwingJInternalFrameLocal.transaccion);

				this.addItemDefectoCombosForeignKeyTransaccionCuentaPaFactura();
				this.cargarCombosFrameTransaccionCuentaPaFacturasForeignKey("Formulario");
				this.setActualTransaccionCuentaPaFacturaForeignKey(transaccioncuentapafacturaBeanSwingJInternalFrameLocal.transaccion.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TransaccionDetalleFormJInternalFrame.class)) {
				TransaccionBeanSwingJInternalFrame transaccioncuentapanotacreditoBeanSwingJInternalFrameLocal=(TransaccionBeanSwingJInternalFrame) ((TransaccionDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				transaccioncuentapanotacreditoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTransaccion(transaccioncuentapanotacreditoBeanSwingJInternalFrameLocal.gettransaccion(),true);
				transaccioncuentapanotacreditoBeanSwingJInternalFrameLocal.actualizarLista(transaccioncuentapanotacreditoBeanSwingJInternalFrameLocal.transaccion,this.transaccioncuentapanotacreditosForeignKey);

				transaccioncuentapanotacreditoBeanSwingJInternalFrameLocal.actualizarRelaciones(transaccioncuentapanotacreditoBeanSwingJInternalFrameLocal.transaccion);

				parametrofactutransaccionLocal.setTransaccionCuentaPaNotaCredito(transaccioncuentapanotacreditoBeanSwingJInternalFrameLocal.transaccion);

				this.addItemDefectoCombosForeignKeyTransaccionCuentaPaNotaCredito();
				this.cargarCombosFrameTransaccionCuentaPaNotaCreditosForeignKey("Formulario");
				this.setActualTransaccionCuentaPaNotaCreditoForeignKey(transaccioncuentapanotacreditoBeanSwingJInternalFrameLocal.transaccion.getId(),false,"Formulario");
			}
		
		}
	}
	
	public Boolean validarParametroFactuTransaccionActual() throws Exception {
		Boolean estaValidado=false;
		this.inicializarInvalidValues();
		
		/*
		int intSelectedRow = this.jTableDatosParametroFactuTransaccion.getSelectedRow();
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.parametrofactutransaccion =(ParametroFactuTransaccion) this.parametrofactutransaccionLogic.getParametroFactuTransaccions().toArray()[this.jTableDatosParametroFactuTransaccion.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
			this.parametrofactutransaccion =(ParametroFactuTransaccion) this.parametrofactutransaccions.toArray()[this.jTableDatosParametroFactuTransaccion.convertRowIndexToModel(intSelectedRow)];
		}
		//ARCHITECTURE
		*/
		
		this.invalidValues = parametrofactutransaccionValidator.getInvalidValues(this.parametrofactutransaccion);
					
		if(this.invalidValues==null || this.invalidValues.length<=0) {
			estaValidado=true;
		} else {
			this.mostrarInvalidValues();	
		}
		
		return estaValidado;
	}
	
	public void actualizarLista(ParametroFactuTransaccion parametrofactutransaccion,List<ParametroFactuTransaccion> parametrofactutransaccions) throws Exception {
		try	{		
			ParametroFactuTransaccionConstantesFunciones.actualizarLista(parametrofactutransaccion,parametrofactutransaccions,this.parametrofactutransaccionSessionBean.getEsGuardarRelacionado());		
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void actualizarSelectedLista(ParametroFactuTransaccion parametrofactutransaccion,List<ParametroFactuTransaccion> parametrofactutransaccions) throws Exception {
		try	{			
			ParametroFactuTransaccionConstantesFunciones.actualizarSelectedLista(parametrofactutransaccion,parametrofactutransaccions);
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public Boolean tieneElementosSeleccionados() throws Exception {
		Boolean tiene=false;
		
		List<ParametroFactuTransaccion> parametrofactutransaccionsLocal=null;
		
		try	{			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				parametrofactutransaccionsLocal=this.parametrofactutransaccionLogic.getParametroFactuTransaccions();
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				parametrofactutransaccionsLocal=this.parametrofactutransaccions;
			}
			//ARCHITECTURE
		
			for(ParametroFactuTransaccion parametrofactutransaccionLocal:parametrofactutransaccionsLocal) {
				if(this.permiteMantenimiento(parametrofactutransaccionLocal) && parametrofactutransaccionLocal.getIsSelected()) {
					tiene=true;
					break;
				}
			}
		} catch(Exception e) {
			throw e;
		}
		
		return tiene;
	}			
	
	public void mostrarInvalidValues() throws Exception {
		String sMensaje="";
				
		for (InvalidValue invalidValue : this.invalidValues) {
			sMensaje+="\r\n"+ParametroFactuTransaccionConstantesFunciones.getParametroFactuTransaccionLabelDesdeNombre(invalidValue.getPropertyName())+"->"+invalidValue.getMessage();
			
			//MOSTRAR CAMPOS INVALIDOS
			if(invalidValue.getPropertyName().equals(ParametroFactuTransaccionConstantesFunciones.IDEMPRESA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuTransaccion.jLabelid_empresaParametroFactuTransaccion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroFactuTransaccionConstantesFunciones.IDSUCURSAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuTransaccion.jLabelid_sucursalParametroFactuTransaccion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroFactuTransaccionConstantesFunciones.IDTRANSACCIONINVENFACTURA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuTransaccion.jLabelid_transaccion_inven_facturaParametroFactuTransaccion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroFactuTransaccionConstantesFunciones.IDTRANSACCIONINVENNOTACREDITO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuTransaccion.jLabelid_transaccion_inven_nota_creditoParametroFactuTransaccion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroFactuTransaccionConstantesFunciones.IDTRANSACCIONINVENNOTAVENTA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuTransaccion.jLabelid_transaccion_inven_nota_ventaParametroFactuTransaccion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroFactuTransaccionConstantesFunciones.IDTRANSACCIONCUENTACOFACTURA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuTransaccion.jLabelid_transaccion_cuenta_co_facturaParametroFactuTransaccion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroFactuTransaccionConstantesFunciones.IDTRANSACCIONCUENTACONOTACREDITO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuTransaccion.jLabelid_transaccion_cuenta_co_nota_creditoParametroFactuTransaccion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroFactuTransaccionConstantesFunciones.IDTRANSACCIONCUENTACONOTAVENTA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuTransaccion.jLabelid_transaccion_cuenta_co_nota_ventaParametroFactuTransaccion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroFactuTransaccionConstantesFunciones.IDTRANSACCIONCUENTACOTARJETA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuTransaccion.jLabelid_transaccion_cuenta_co_tarjetaParametroFactuTransaccion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroFactuTransaccionConstantesFunciones.IDTRANSACCIONCUENTAPAFACTURA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuTransaccion.jLabelid_transaccion_cuenta_pa_facturaParametroFactuTransaccion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroFactuTransaccionConstantesFunciones.IDTRANSACCIONCUENTAPANOTACREDITO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuTransaccion.jLabelid_transaccion_cuenta_pa_nota_creditoParametroFactuTransaccion,invalidValue.getMessage());}
        }
		
		
		if(!sMensaje.equals("")) {
			//JOptionPane.showMessageDialog(this,sMensaje,"VALIDACION ",JOptionPane.ERROR_MESSAGE);
			throw new Exception(sMensaje);			
		}
		
		/*
		System.out.println(invalidValue);
        System.out.println("message=" + invalidValue.getMessage());
        System.out.println("propertyName=" + invalidValue.getPropertyName());
        System.out.println("propertyPath=" + invalidValue.getPropertyPath());
        System.out.println("value=" + invalidValue.getValue());
        */
	}		
	
	public void inicializarInvalidValues() throws Exception {
		String sMensaje="";	
		
		if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) {
		
		//MOSTRAR CAMPOS INVALIDOS
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuTransaccion.jLabelid_empresaParametroFactuTransaccion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuTransaccion.jLabelid_sucursalParametroFactuTransaccion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuTransaccion.jLabelid_transaccion_inven_facturaParametroFactuTransaccion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuTransaccion.jLabelid_transaccion_inven_nota_creditoParametroFactuTransaccion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuTransaccion.jLabelid_transaccion_inven_nota_ventaParametroFactuTransaccion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuTransaccion.jLabelid_transaccion_cuenta_co_facturaParametroFactuTransaccion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuTransaccion.jLabelid_transaccion_cuenta_co_nota_creditoParametroFactuTransaccion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuTransaccion.jLabelid_transaccion_cuenta_co_nota_ventaParametroFactuTransaccion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuTransaccion.jLabelid_transaccion_cuenta_co_tarjetaParametroFactuTransaccion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuTransaccion.jLabelid_transaccion_cuenta_pa_facturaParametroFactuTransaccion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuTransaccion.jLabelid_transaccion_cuenta_pa_nota_creditoParametroFactuTransaccion,"");
		
		}
	}
	
	
	
	public void actualizarObjetoPadreFk(String sTipo)  throws Exception {
		if(sTipo.equals("XXXAuxiliar")) {
		
		}
		
	}
	
	public void nuevoPreparar() throws Exception {
		this.nuevoPreparar(false);
	}
	
	public void nuevoPreparar(Boolean esNuevoGuardarCambios) throws Exception {
		this.iIdNuevoParametroFactuTransaccion--;	
		
		
		this.parametrofactutransaccionAux=new ParametroFactuTransaccion();
		
		this.parametrofactutransaccionAux.setId(this.iIdNuevoParametroFactuTransaccion);
		this.parametrofactutransaccionAux.setIsChanged(true);
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.parametrofactutransaccionLogic.getParametroFactuTransaccions().add(this.parametrofactutransaccionAux);
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.parametrofactutransaccions.add(this.parametrofactutransaccionAux);
		}
		//ARCHITECTURE
		
		this.parametrofactutransaccion=this.parametrofactutransaccionAux;
		
		if(ParametroFactuTransaccionJInternalFrame.ISBINDING_MANUAL_TABLA) {
			this.setVariablesObjetoActualToFormularioParametroFactuTransaccion(this.parametrofactutransaccion);
			this.setVariablesObjetoActualToFormularioForeignKeyParametroFactuTransaccion(this.parametrofactutransaccion);
		}
				
		//this.setDefaultControlesParametroFactuTransaccion();
		
		this.inicializarInvalidValues();
				
		//SELECCIONA ITEM DEFECTO-->SET O SELECTED INDEX
		this.setItemDefectoCombosForeignKeyParametroFactuTransaccion();
		
		
		//INICIALIZA VARIABLES COMBOS GLOBALES A FORMULARIO(ParametroGeneralUsuario)
		this.setVariablesGlobalesCombosForeignKeyParametroFactuTransaccion();
		
		//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
		//this.setVariablesGlobalesAuxiliaresCombosForeignKeyParametroFactuTransaccion();
		
		//SI TIENE FOREIGN KEY CON CAMPO esDefecto=true, SE ACTUALIZA A OBJETO ACTUAL
		this.setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualParametroFactuTransaccion(this.parametrofactutransaccionBean,this.parametrofactutransaccion,false,false);
		
		//ACTUALIZA VALORES PARA EL OBJETO ACTUAL ANTES DE ENVIARLO A ACTUALIZAR
		this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuTransaccion(this.parametrofactutransaccion);
				
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		if(this.jInternalFrameParent!=null) {
			this.jInternalFrameParent.actualizarObjetoPadreFk(ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
		}	
		
		
		if(this.parametrofactutransaccionSessionBean.getConGuardarRelaciones()) {
			classes=ParametroFactuTransaccionConstantesFunciones.getClassesRelationshipsOfParametroFactuTransaccion(new ArrayList<Classe>(),DeepLoadType.NONE);
		}
		
		this.classesActual=new ArrayList<Classe>();
		this.classesActual.addAll(classes);
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {						
			this.parametrofactutransaccionReturnGeneral=parametrofactutransaccionLogic.procesarEventosParametroFactuTransaccionsWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,EventoGlobalTipo.FORM_RECARGAR,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.parametrofactutransaccionLogic.getParametroFactuTransaccions(),this.parametrofactutransaccion,this.parametrofactutransaccionParameterGeneral,this.isEsNuevoParametroFactuTransaccion,classes);//this.parametrofactutransaccionLogic.getParametroFactuTransaccion()
						
		} else if(Constantes.ISUSAEJBREMOTE) {
						
		} else if(Constantes.ISUSAEJBHOME) {
		}
		//ARCHITECTURE
		
		//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
		//this.setVariablesObjetoReturnGeneralToBeanParametroFactuTransaccion(this.parametrofactutransaccionReturnGeneral,this.parametrofactutransaccionBean,false);
		
		if(this.parametrofactutransaccionReturnGeneral.getConRecargarPropiedades()) {
			//INICIALIZA VARIABLES COMBOS NORMALES (FK)
			this.setVariablesObjetoActualToFormularioForeignKeyParametroFactuTransaccion(this.parametrofactutransaccionReturnGeneral.getParametroFactuTransaccion());
			
			//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
			this.setVariablesObjetoActualToFormularioParametroFactuTransaccion(this.parametrofactutransaccionReturnGeneral.getParametroFactuTransaccion());
		}
		
		if(this.parametrofactutransaccionReturnGeneral.getConRecargarRelaciones()) {
			//INICIALIZA VARIABLES RELACIONES A FORMULARIO
			this.setVariablesRelacionesObjetoActualToFormularioParametroFactuTransaccion(this.parametrofactutransaccionReturnGeneral.getParametroFactuTransaccion(),classes);//this.parametrofactutransaccionBean);	
		}
			
		//ACTUALIZA VARIABLES FORMULARIO A OBJETO ACTUAL (PARA NUEVO TABLA O GUARDAR CAMBIOS
		if(esNuevoGuardarCambios) {
			this.setVariablesFormularioToObjetoActualParametroFactuTransaccion(this.parametrofactutransaccion,false);
		}
		
		//INICIALIZA VARIABLES COMBOS DEFAULT DEL PROYECTO(|DEFAULT para FK)
		//this.setVariablesDefaultCombosForeignKeyParametroFactuTransaccion();
		
		//INICIALIZA VARIABLES COMBOS PARAMETRO DEL PROYECTO(|VALORPARAM Era para ParametroModulo, ahora en logic)
		//this.setVariablesParametroCombosForeignKeyParametroFactuTransaccion();						
		
		if(!esNuevoGuardarCambios) {
			//INICIALIZA VARIABLES POR OPCION MENU
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			ParametroFactuTransaccionBeanSwingJInternalFrameAdditional.RecargarFormParametroFactuTransaccion(this,"NUEVO_PREPARAR","",this.arrDatoGeneral);
		
			//NO FUNCIONA BINDINGS			
			this.inicializarActualizarBindingParametroFactuTransaccion(false);
						
			if(parametrofactutransaccionSessionBean.getConGuardarRelaciones()) {
				//DEBERIA YA ESTAR CARGADO LOS COMBOS Y SI SE NECESITA ALGO MAS SE DEBE CREAR FUNCION LIMITADA
				//SI DEBE TRAER Y RESETEAR TABLA
								
			}
				
			//SI ES MANUAL
			if(ParametroFactuTransaccionJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualParametroFactuTransaccion();
			}
			
			this.actualizarVisualTableDatosParametroFactuTransaccion();
			
			this.jTableDatosParametroFactuTransaccion.setRowSelectionInterval(this.getIndiceNuevoParametroFactuTransaccion(), this.getIndiceNuevoParametroFactuTransaccion());
			
			this.seleccionarFilaTablaParametroFactuTransaccionActual();
						
			this.actualizarEstadoCeldasBotonesParametroFactuTransaccion("a", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		}		
	}
	
	public void habilitarDeshabilitarControlesParametroFactuTransaccion(Boolean isHabilitar) throws Exception {
			
		//
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_empresaParametroFactuTransaccion.setEnabled(isHabilitar && this.parametrofactutransaccionConstantesFunciones.activarid_empresaParametroFactuTransaccion);//
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_sucursalParametroFactuTransaccion.setEnabled(isHabilitar && this.parametrofactutransaccionConstantesFunciones.activarid_sucursalParametroFactuTransaccion);
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_inven_facturaParametroFactuTransaccion.setEnabled(isHabilitar && this.parametrofactutransaccionConstantesFunciones.activarid_transaccion_inven_facturaParametroFactuTransaccion);
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_inven_nota_creditoParametroFactuTransaccion.setEnabled(isHabilitar && this.parametrofactutransaccionConstantesFunciones.activarid_transaccion_inven_nota_creditoParametroFactuTransaccion);
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_inven_nota_ventaParametroFactuTransaccion.setEnabled(isHabilitar && this.parametrofactutransaccionConstantesFunciones.activarid_transaccion_inven_nota_ventaParametroFactuTransaccion);
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_cuenta_co_facturaParametroFactuTransaccion.setEnabled(isHabilitar && this.parametrofactutransaccionConstantesFunciones.activarid_transaccion_cuenta_co_facturaParametroFactuTransaccion);
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_cuenta_co_nota_creditoParametroFactuTransaccion.setEnabled(isHabilitar && this.parametrofactutransaccionConstantesFunciones.activarid_transaccion_cuenta_co_nota_creditoParametroFactuTransaccion);
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_cuenta_co_nota_ventaParametroFactuTransaccion.setEnabled(isHabilitar && this.parametrofactutransaccionConstantesFunciones.activarid_transaccion_cuenta_co_nota_ventaParametroFactuTransaccion);
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_cuenta_co_tarjetaParametroFactuTransaccion.setEnabled(isHabilitar && this.parametrofactutransaccionConstantesFunciones.activarid_transaccion_cuenta_co_tarjetaParametroFactuTransaccion);
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_cuenta_pa_facturaParametroFactuTransaccion.setEnabled(isHabilitar && this.parametrofactutransaccionConstantesFunciones.activarid_transaccion_cuenta_pa_facturaParametroFactuTransaccion);
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_cuenta_pa_nota_creditoParametroFactuTransaccion.setEnabled(isHabilitar && this.parametrofactutransaccionConstantesFunciones.activarid_transaccion_cuenta_pa_nota_creditoParametroFactuTransaccion);
	};
	
	public void setDefaultControlesParametroFactuTransaccion() throws Exception {
			
	};
	
	
	public void habilitarDeshabilitarTipoMantenimientoParametroFactuTransaccion(Boolean esRelaciones) throws Exception {
		if(esRelaciones) {
			//this.parametrofactutransaccionSessionBean.setConGuardarRelaciones(true);			
			this.parametrofactutransaccionSessionBean.setEstaModoGuardarRelaciones(true);				
			this.jInternalFrameDetalleFormParametroFactuTransaccion.jTabbedPaneRelacionesParametroFactuTransaccion.setVisible(true);
			
					
		} else {
			//this.parametrofactutransaccionSessionBean.setConGuardarRelaciones(false);			
			this.parametrofactutransaccionSessionBean.setEstaModoGuardarRelaciones(false);						
			this.jInternalFrameDetalleFormParametroFactuTransaccion.jTabbedPaneRelacionesParametroFactuTransaccion.setVisible(false);
			
			
		}
	};
	
	public int getIndiceNuevoParametroFactuTransaccion() throws Exception {
		int iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(ParametroFactuTransaccion parametrofactutransaccionAux:this.parametrofactutransaccionLogic.getParametroFactuTransaccions()) {
				if(parametrofactutransaccionAux.getId().equals(this.iIdNuevoParametroFactuTransaccion)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(ParametroFactuTransaccion parametrofactutransaccionAux:this.parametrofactutransaccions) {
				if(parametrofactutransaccionAux.getId().equals(this.iIdNuevoParametroFactuTransaccion)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndice-1;
		}
		
		return iIndice;
	}
	
	public int getIndiceActualParametroFactuTransaccion(ParametroFactuTransaccion parametrofactutransaccion,Integer iIndiceActual) throws Exception {
		Integer iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(ParametroFactuTransaccion parametrofactutransaccionAux:this.parametrofactutransaccionLogic.getParametroFactuTransaccions()) {
				if(parametrofactutransaccionAux.getId().equals(parametrofactutransaccion.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(ParametroFactuTransaccion parametrofactutransaccionAux:this.parametrofactutransaccions) {
				if(parametrofactutransaccionAux.getId().equals(parametrofactutransaccion.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndiceActual;
		}
		
		return iIndice;
	}
	
	public void setCamposBaseDesdeOriginalParametroFactuTransaccion(ParametroFactuTransaccion parametrofactutransaccionOriginal) throws Exception {
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(ParametroFactuTransaccion parametrofactutransaccionAux:this.parametrofactutransaccionLogic.getParametroFactuTransaccions()) {
				if(parametrofactutransaccionAux.getParametroFactuTransaccionOriginal().getId().equals(parametrofactutransaccionOriginal.getId())) {
					existe=true;
					parametrofactutransaccionOriginal.setId(parametrofactutransaccionAux.getId());
					parametrofactutransaccionOriginal.setVersionRow(parametrofactutransaccionAux.getVersionRow());
					break;
				}
				
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(ParametroFactuTransaccion parametrofactutransaccionAux:this.parametrofactutransaccions) {
				if(parametrofactutransaccionAux.getParametroFactuTransaccionOriginal().getId().equals(parametrofactutransaccionOriginal.getId())) {
					existe=true;
					parametrofactutransaccionOriginal.setId(parametrofactutransaccionAux.getId());
					parametrofactutransaccionOriginal.setVersionRow(parametrofactutransaccionAux.getVersionRow());
					break;
				}				
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
		}
	}
	
	public void cancelarNuevosParametroFactuTransaccion(Boolean esParaCancelar) throws Exception {
		parametrofactutransaccionsAux=new ArrayList<ParametroFactuTransaccion>();
		parametrofactutransaccionAux=new ParametroFactuTransaccion();
		
		if(!this.parametrofactutransaccionSessionBean.getEsGuardarRelacionado()) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(ParametroFactuTransaccion parametrofactutransaccionAux:this.parametrofactutransaccionLogic.getParametroFactuTransaccions()) {
					if(parametrofactutransaccionAux.getId()<0) {
						parametrofactutransaccionsAux.add(parametrofactutransaccionAux);
					}		
				}
				this.iIdNuevoParametroFactuTransaccion=0L;
				this.parametrofactutransaccionLogic.getParametroFactuTransaccions().removeAll(parametrofactutransaccionsAux);
					
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(ParametroFactuTransaccion parametrofactutransaccionAux:this.parametrofactutransaccions) {
					if(parametrofactutransaccionAux.getId()<0) {
						parametrofactutransaccionsAux.add(parametrofactutransaccionAux);
					}		
				}
				this.iIdNuevoParametroFactuTransaccion=0L;
				this.parametrofactutransaccions.removeAll(parametrofactutransaccionsAux);
			}	
		} else {			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				if(esParaCancelar && this.isEsNuevoParametroFactuTransaccion 
					&& this.parametrofactutransaccionLogic.getParametroFactuTransaccions().size()>0
					) {
					parametrofactutransaccionAux=this.parametrofactutransaccionLogic.getParametroFactuTransaccions().get(this.parametrofactutransaccionLogic.getParametroFactuTransaccions().size() - 1);
				
					if(parametrofactutransaccionAux.getId()<0) {
						this.parametrofactutransaccionLogic.getParametroFactuTransaccions().remove(parametrofactutransaccionAux);
					}
				}
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				if(esParaCancelar && this.isEsNuevoParametroFactuTransaccion && this.parametrofactutransaccions.size()>0) {
					parametrofactutransaccionAux=this.parametrofactutransaccions.get(this.parametrofactutransaccions.size() - 1);
				
					if(parametrofactutransaccionAux.getId()<0) {
						this.parametrofactutransaccions.remove(parametrofactutransaccionAux);
					}
				}
			}	
		}
	}
	
	public void cancelarNuevoParametroFactuTransaccion(Boolean esParaCancelar) throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			if(parametrofactutransaccion.getId()<0) {
				this.parametrofactutransaccionLogic.getParametroFactuTransaccions().remove(this.parametrofactutransaccion);
			}					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			if(parametrofactutransaccion.getId()<0) {
				this.parametrofactutransaccions.remove(this.parametrofactutransaccion);
			}
		}			
	}
	
	public void setEstadosInicialesParametroFactuTransaccion(List<ParametroFactuTransaccion> parametrofactutransaccionsAux) throws Exception {
		ParametroFactuTransaccionConstantesFunciones.setEstadosInicialesParametroFactuTransaccion(parametrofactutransaccionsAux);
	}
	
	public void setEstadosInicialesParametroFactuTransaccion(ParametroFactuTransaccion parametrofactutransaccionAux) throws Exception {
		ParametroFactuTransaccionConstantesFunciones.setEstadosInicialesParametroFactuTransaccion(parametrofactutransaccionAux);		
	}
	
	public void nuevo() throws Exception {
		try	{
			//ESTA VALIDADO EN FUNCION ACTUALIZAR
			//if(this.validarParametroFactuTransaccionActual()) {
				this.ejecutarMantenimiento(MaintenanceType.NUEVO);
				
				this.actualizarEstadoCeldasBotonesParametroFactuTransaccion("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
				
			//}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void actualizar() throws Exception {
		try	{
			if(this.validarParametroFactuTransaccionActual()) {
				if(!this.isEsNuevoParametroFactuTransaccion) {
					this.ejecutarMantenimiento(MaintenanceType.ACTUALIZAR);
					
					this.actualizarEstadoCeldasBotonesParametroFactuTransaccion("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
					
				} else {					
					this.nuevo();
					this.isEsNuevoParametroFactuTransaccion=false;
				}
				
				//SE CANCELA AL FINAL DEL PROCESO JBUTTONACTUALIZAR
				//this.cancelar(false);
			}		
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void eliminar() throws Exception {
		try	{	
			if(this.validarParametroFactuTransaccionActual()) {
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE ELIMINAR EL/LA Parametro Transaccion  ?", "MANTENIMIENTO DE Parametro Transaccion ", JOptionPane.OK_CANCEL_OPTION) == 0) {
					this.ejecutarMantenimiento(MaintenanceType.ELIMINAR);			
					this.actualizarEstadoCeldasBotonesParametroFactuTransaccion("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
				}
			
			}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void guardarCambios() throws Exception {
		try	{
			this.ejecutarMantenimiento(MaintenanceType.GUARDARCAMBIOS);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarAsignar(ParametroFactuTransaccion parametrofactutransaccion) throws Exception {
		ParametroFactuTransaccionConstantesFunciones.seleccionarAsignar(this.parametrofactutransaccion,parametrofactutransaccion);
	}
	
	public void seleccionar() throws Exception {
		try	{
			//ACTUALIZO EL PERMISO ACTUALIZAR CON EL PERMISO ACTUALIZAR ORIGINAL ESTE PERMISO SE UTILIZA PARA EL NUEVO TAMBIEN
			this.isPermisoActualizarParametroFactuTransaccion=this.isPermisoActualizarOriginalParametroFactuTransaccion;
			
			
			this.seleccionarAsignar(parametrofactutransaccion);
			
			
			
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			ParametroFactuTransaccionConstantesFunciones.quitarEspaciosParametroFactuTransaccion(this.parametrofactutransaccion,this.arrDatoGeneral);
			
			
			this.actualizarEstadoCeldasBotonesParametroFactuTransaccion("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarBusqueda(Long id) throws Exception {
		try	{
			this.parametrofactutransaccionSessionBean.setsFuncionBusquedaRapida(this.parametrofactutransaccionSessionBean.getsFuncionBusquedaRapida().replace("TO_REPLACE", id.toString()));
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
		}
	}
	
	
	
	public void cancelar() throws Exception {
		this.cancelar(true);
	}
	
	public void cancelar(Boolean esParaCancelar) throws Exception {
		try {
														
			
			//SE UTILIZA COLUMNA ELIMINAR EN TABLA
			if(this.isEsNuevoParametroFactuTransaccion) {
				//NO CANCELA TODOS NUEVOS POR FUNCIONALIDAD GUARDAR CAMBIOS
				//this.cancelarNuevosParametroFactuTransaccion(esParaCancelar);				
				this.cancelarNuevoParametroFactuTransaccion(esParaCancelar);								
			}
			
			this.parametrofactutransaccion=new ParametroFactuTransaccion();
			
			this.inicializarParametroFactuTransaccion();
			
			this.actualizarEstadoCeldasBotonesParametroFactuTransaccion("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void inicializarParametroFactuTransaccion() throws Exception {
		try {
			ParametroFactuTransaccionConstantesFunciones.inicializarParametroFactuTransaccion(this.parametrofactutransaccion);
			
			} catch(Exception e) {
			throw e;
		}
	}
	
	public void anteriores()throws Exception {
		try	{
			//this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			
			if(this.iNumeroPaginacionPagina-this.iNumeroPaginacion<this.iNumeroPaginacion) {
				this.iNumeroPaginacionPagina=0;		
			} else {
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			}
			
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void siguientes()throws Exception {
		try	{			
			if(this.parametrofactutransaccionLogic.getParametroFactuTransaccions().size()>0) {
					
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina+this.iNumeroPaginacion;
			}
				
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void generarReporteParametroFactuTransaccions(String sAccionBusqueda,List<ParametroFactuTransaccion> parametrofactutransaccionsParaReportes) throws Exception {
		//HttpSession httpSession = httpServletRequest.getSession();
		Long iIdUsuarioSesion=0L;	
		
		
		if(usuarioActual==null) {
			this.usuarioActual=new Usuario();
		}
		
		iIdUsuarioSesion=usuarioActual.getId();
		
		String sPathReportes="";
		
		InputStream reportFile=null;
		InputStream imageFile=null;
			
		imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		String sPathReporteFinal="";
		
		if(!esReporteAccionProceso) {
			if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
				if(!this.esReporteDinamico) {
					sPathReporteFinal="ParametroFactuTransaccion"+this.sTipoReporteExtra+"Design.jasper";
					reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
				} else {
					sPathReporteFinal=this.sPathReporteDinamico;
					reportFile = new FileInputStream(sPathReporteFinal);
				}
			} else {
				sPathReporteFinal="ParametroFactuTransaccionMasterRelaciones"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);
				//sPathReportes=reportFile.getPath().replace("ParametroFactuTransaccionMasterRelacionesDesign.jasper", "");
			}
		} else {
				sPathReporteFinal="ParametroFactuTransaccion"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
		}
		
		if(reportFile==null) {
			throw new JRRuntimeException(sPathReporteFinal+" no existe");
		}
		
		String sUsuario="";
		
		if(usuarioActual!=null) {
			sUsuario=usuarioActual.getuser_name();
		}
		
		Map<String, Object> parameters = new HashMap<String, Object>();
		parameters.put("usuario", sUsuario);
		
		parameters.put("titulo", Funciones.GetTituloSistemaReporte(this.parametroGeneralSg,this.moduloActual,this.usuarioActual));
		parameters.put("subtitulo", "Reporte De  Parametro Transaccion s");		
		parameters.put("busquedapor", ParametroFactuTransaccionConstantesFunciones.getNombreIndice(sAccionBusqueda)+sDetalleReporte);
		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			parameters.put("SUBREPORT_DIR", sPathReportes);
		}
		
		parameters.put("con_grafico", this.conGraficoReporte);
		
		JasperReport jasperReport = (JasperReport)JRLoader.loadObject(reportFile);
				
		this.cargarDatosCliente();
		
		ArrayList<Classe> classes=new ArrayList<Classe>();		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			
			
		} else {
			//FK DEBERIA TRAERSE DE ANTEMANO
			
		}
								
		
		//CLASSES PARA REPORTES OBJETOS RELACIONADOS
		if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
			classes=new ArrayList<Classe>();
		}
		
		JRBeanArrayDataSource jrbeanArrayDataSourceParametroFactuTransaccion=null;
		
		if(this.sTipoReporteExtra!=null && !this.sTipoReporteExtra.equals("")) {
			ParametroFactuTransaccionConstantesFunciones.S_TIPOREPORTE_EXTRA=this.sTipoReporteExtra;
		} else {
			ParametroFactuTransaccionConstantesFunciones.S_TIPOREPORTE_EXTRA="";
		}
		
		jrbeanArrayDataSourceParametroFactuTransaccion=new JRBeanArrayDataSource(ParametroFactuTransaccionJInternalFrame.TraerParametroFactuTransaccionBeans(parametrofactutransaccionsParaReportes,classes).toArray());
		
		jasperPrint = JasperFillManager.fillReport(jasperReport,parameters,jrbeanArrayDataSourceParametroFactuTransaccion);
				
		
		String sPathDest=Constantes.SUNIDAD_ARCHIVOS+":/"+Constantes.SCONTEXTSERVER+"/"+ParametroFactuTransaccionConstantesFunciones.SCHEMA+"/reportes";
		
		File filePathDest = new File(sPathDest);
		
		if(!filePathDest.exists()) {
			filePathDest.mkdirs();				
		}
				
		String sDestFileName=sPathDest+"/"+ParametroFactuTransaccionConstantesFunciones.CLASSNAME;
				
		if(this.sTipoArchivoReporte=="VISUALIZAR") {
			JasperViewer jasperViewer = new JasperViewer(jasperPrint,false) ;
			jasperViewer.setVisible(true) ; 

		} else if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML") {	
			//JasperFillManager.fillReportToFile(reportFile.getAbsolutePath(),parameters, new JRBeanArrayDataSource(ParametroFactuTransaccionBean.TraerParametroFactuTransaccionBeans(parametrofactutransaccionsParaReportes).toArray()));
							
			if(this.sTipoArchivoReporte=="HTML") {
				sDestFileName+=".html";
				JasperExportManager.exportReportToHtmlFile(jasperPrint,sDestFileName);
					
			} else if(this.sTipoArchivoReporte=="PDF") {
				sDestFileName+=".pdf";
				JasperExportManager.exportReportToPdfFile(jasperPrint,sDestFileName);
			} else {
				sDestFileName+=".xml";
				JasperExportManager.exportReportToXmlFile(jasperPrint,sDestFileName, false);
			}	
			
		} else if(this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {
				
			if(this.sTipoArchivoReporte=="WORD") {
				sDestFileName+=".rtf";
					
				JRRtfExporter exporter = new JRRtfExporter();
		
				exporter.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporter.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
		
				exporter.exportReport();
				
			} else	{
				sDestFileName+=".xls";
					
				JRXlsExporter exporterXls = new JRXlsExporter();
		
				exporterXls.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporterXls.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
				exporterXls.setParameter(JRXlsExporterParameter.IS_ONE_PAGE_PER_SHEET, Boolean.TRUE);
		
				exporterXls.exportReport();
			}
			
		} else if(this.sTipoArchivoReporte=="EXCEL2"||this.sTipoArchivoReporte=="EXCEL2_2") {
			//sDestFileName+=".xlsx";
			
			if(this.sTipoReporte.equals("NORMAL")) {
				this.generarExcelReporteParametroFactuTransaccions(sAccionBusqueda,sTipoArchivoReporte,parametrofactutransaccionsParaReportes);
			
			} else if(this.sTipoReporte.equals("FORMULARIO")){
				this.generarExcelReporteVerticalParametroFactuTransaccions(sAccionBusqueda,sTipoArchivoReporte,parametrofactutransaccionsParaReportes,false);
			
			} else if(this.sTipoReporte.equals("DINAMICO")){
				
				if(this.sTipoReporteDinamico.equals("NORMAL")) {
					
					this.jButtonGenerarExcelReporteDinamicoParametroFactuTransaccionActionPerformed(null);
					//this.generarExcelReporteParametroFactuTransaccions(sAccionBusqueda,sTipoArchivoReporte,parametrofactutransaccionsParaReportes);
					
				
				} else if(this.sTipoReporteDinamico.equals("FORMULARIO")){
					this.generarExcelReporteVerticalParametroFactuTransaccions(sAccionBusqueda,sTipoArchivoReporte,parametrofactutransaccionsParaReportes,true);
				
				} else if(this.sTipoReporteDinamico.equals("RELACIONES")){
					this.generarExcelReporteRelacionesParametroFactuTransaccions(sAccionBusqueda,sTipoArchivoReporte,parametrofactutransaccionsParaReportes,true);
				}
				
			} else if(this.sTipoReporte.equals("RELACIONES")){
				this.generarExcelReporteRelacionesParametroFactuTransaccions(sAccionBusqueda,sTipoArchivoReporte,parametrofactutransaccionsParaReportes,false);
			}
		}
		
		if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML"||this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {				
			JOptionPane.showMessageDialog(this,"REPORTE "+sDestFileName+" GENERADO SATISFACTORIAMENTE","REPORTES ",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteParametroFactuTransaccions(String sAccionBusqueda,String sTipoArchivoReporte,List<ParametroFactuTransaccion> parametrofactutransaccionsParaReportes) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"parametrofactutransaccion";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("ParametroFactuTransaccions");
         
        int iRow = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderParametroFactuTransaccion("NORMAL",row,workbook);
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux=null;
		
		int i=0;
		
      	for(ParametroFactuTransaccion parametrofactutransaccion : parametrofactutransaccionsParaReportes) {            
			row = sheet.createRow(iRow++);
			iCell = 0;
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				cellStyleDataAux=cellStyleData;
			}
			
			ParametroFactuTransaccionConstantesFunciones.generarExcelReporteDataParametroFactuTransaccion("NORMAL",row,workbook,parametrofactutransaccion,cellStyleDataAux);
		
			
			/*
            Cell cell0 = row.createCell(0);
            cell0.setCellValue(country.getName());
            Cell cell1 = row.createCell(1);
            cell1.setCellValue(country.getShortCode());
			*/
			
			i++;
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.parametrofactutransaccionSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Parametro Transaccion ",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteHeaderParametroFactuTransaccion(String sTipo,Row row,Workbook workbook) {
		
		ParametroFactuTransaccionConstantesFunciones.generarExcelReporteHeaderParametroFactuTransaccion(sTipo,row,workbook);
		
		/*
		Cell cell=null;
		int iCell=0;
		
		CellStyle cellStyle = workbook.createCellStyle();
		cellStyle.setFillBackgroundColor(IndexedColors.GREEN.getIndex());
		cellStyle.setFillPattern(CellStyle.ALIGN_FILL);
		*/
		
	}
	
	public void generarExcelReporteVerticalParametroFactuTransaccions(String sAccionBusqueda,String sTipoArchivoReporte,List<ParametroFactuTransaccion> parametrofactutransaccionsParaReportes,Boolean paraDinamico) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"parametrofactutransaccion_vertical";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("ParametroFactuTransaccions");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		CellStyle cellStyle = Funciones2.getStyleTitulo(workbook,"ZEBRA");;
		
		CellStyle cellStyleTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL_VERTICAL");
		
		
		for(ParametroFactuTransaccion parametrofactutransaccion : parametrofactutransaccionsParaReportes) {
			row = sheet.createRow(iRow++);
			iRowLast=iRow - 1;
			
			cell = row.createCell(0);
			cell.setCellValue(ParametroFactuTransaccionConstantesFunciones.getParametroFactuTransaccionDescripcion(parametrofactutransaccion));
			cell.setCellStyle(cellStyleTitulo);
			
			sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
	
			


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuTransaccionConstantesFunciones.LABEL_IDEMPRESA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuTransaccionConstantesFunciones.LABEL_IDEMPRESA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrofactutransaccion.getempresa_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuTransaccionConstantesFunciones.LABEL_IDSUCURSAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuTransaccionConstantesFunciones.LABEL_IDSUCURSAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrofactutransaccion.getsucursal_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONINVENFACTURA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONINVENFACTURA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrofactutransaccion.gettransaccioninvenfactura_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONINVENNOTACREDITO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONINVENNOTACREDITO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrofactutransaccion.gettransaccioninvennotacredito_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONINVENNOTAVENTA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONINVENNOTAVENTA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrofactutransaccion.gettransaccioninvennotaventa_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONCUENTACOFACTURA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONCUENTACOFACTURA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrofactutransaccion.gettransaccioncuentacofactura_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONCUENTACONOTACREDITO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONCUENTACONOTACREDITO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrofactutransaccion.gettransaccioncuentaconotacredito_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONCUENTACONOTAVENTA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONCUENTACONOTAVENTA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrofactutransaccion.gettransaccioncuentaconotaventa_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONCUENTACOTARJETA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONCUENTACOTARJETA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrofactutransaccion.gettransaccioncuentacotarjeta_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONCUENTAPAFACTURA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONCUENTAPAFACTURA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrofactutransaccion.gettransaccioncuentapafactura_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONCUENTAPANOTACREDITO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONCUENTAPANOTACREDITO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrofactutransaccion.gettransaccioncuentapanotacredito_descripcion());


			}						
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.parametrofactutransaccionSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Parametro Transaccion ",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteRelacionesParametroFactuTransaccions(String sAccionBusqueda,String sTipoArchivoReporte,List<ParametroFactuTransaccion> parametrofactutransaccionsParaReportes,Boolean paraDinamico) throws Exception {
		
		ArrayList<Classe> classes=new ArrayList<Classe>();
		List<ParametroFactuTransaccion> parametrofactutransaccionsRespaldo=null;
		
		classes=ParametroFactuTransaccionConstantesFunciones.getClassesRelationshipsOfParametroFactuTransaccion(new ArrayList<Classe>(),DeepLoadType.NONE,false);
					
		this.datosDeep=new DatosDeep();
		
		this.datosDeep.setIsDeep(false);
		this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
		this.datosDeep.setClases(classes);
			
		this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
		this.datosCliente.setIsConDeep(true);	
		this.datosCliente.setIsConExportar(false);
		
						
		this.parametrofactutransaccionLogic.setDatosCliente(this.datosCliente);
		this.parametrofactutransaccionLogic.setDatosDeep(this.datosDeep);
		this.parametrofactutransaccionLogic.setIsConDeep(true);
		
		parametrofactutransaccionsRespaldo=this.parametrofactutransaccionLogic.getParametroFactuTransaccions();
		
		this.parametrofactutransaccionLogic.setParametroFactuTransaccions(parametrofactutransaccionsParaReportes);	
		this.parametrofactutransaccionLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
		
		parametrofactutransaccionsParaReportes=this.parametrofactutransaccionLogic.getParametroFactuTransaccions();
		this.parametrofactutransaccionLogic.setParametroFactuTransaccions(parametrofactutransaccionsRespaldo);
		
		
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"parametrofactutransaccion_relacion";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("ParametroFactuTransaccions");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderParametroFactuTransaccion("NORMAL",row,workbook);
		
		int i=0;
		int i2=0;
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL");
		CellStyle cellStyleDataZebra = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux =null;
		CellStyle cellStyleDataAuxHijo =null;
		
		for(ParametroFactuTransaccion parametrofactutransaccion : parametrofactutransaccionsParaReportes) {			
			if(i!=0) {
				row = sheet.createRow(iRow++);				
				this.generarExcelReporteHeaderParametroFactuTransaccion("NORMAL",row,workbook);
			}
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				//cellStyleDataAux=cellStyleData;
			}
			
			row = sheet.createRow(iRow++);						
			ParametroFactuTransaccionConstantesFunciones.generarExcelReporteDataParametroFactuTransaccion("NORMAL",row,workbook,parametrofactutransaccion,cellStyleDataAux);
		
			
			
			
			i++;
        }
        
		/*
		row = sheet.createRow(iRow++);
		iRowLast=iRow - 1;
			
		cell = row.createCell(0);
		cell.setCellValue(ParametroFactuTransaccionConstantesFunciones.getParametroFactuTransaccionDescripcion(parametrofactutransaccion));
		cell.setCellStyle(cellStyleTitulo);
			
		sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
		*/
		
			
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.parametrofactutransaccionSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Parametro Transaccion ",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	
	public Boolean existeColumnaReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoParametroFactuTransaccion.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoParametroFactuTransaccion.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public Boolean existeRelacionReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoParametroFactuTransaccion.getjListRelacionesSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoParametroFactuTransaccion.getjListRelacionesSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public void startProcessParametroFactuTransaccion() throws Exception {		
		this.startProcessParametroFactuTransaccion(true);
	}
	
	public void startProcessParametroFactuTransaccion(Boolean conSplash) throws Exception {		
		//FuncionesSwing.enableDisablePanels(false,this.jTabbedPaneBusquedasParametroFactuTransaccion ,this.jPanelParametrosReportesParametroFactuTransaccion, this.jScrollPanelDatosParametroFactuTransaccion,this.jPanelPaginacionParametroFactuTransaccion, this.jScrollPanelDatosEdicionParametroFactuTransaccion, this.jPanelAccionesParametroFactuTransaccion,this.jPanelAccionesFormularioParametroFactuTransaccion,this.jmenuBarParametroFactuTransaccion,this.jmenuBarDetalleParametroFactuTransaccion,this.jTtoolBarParametroFactuTransaccion,this.jTtoolBarDetalleParametroFactuTransaccion);		
		
		final JTabbedPane jTabbedPaneBusquedasParametroFactuTransaccion=this.jTabbedPaneBusquedasParametroFactuTransaccion; 
		
		final JPanel jPanelParametrosReportesParametroFactuTransaccion=this.jPanelParametrosReportesParametroFactuTransaccion;
		//final JScrollPane jScrollPanelDatosParametroFactuTransaccion=this.jScrollPanelDatosParametroFactuTransaccion;
		final JTable jTableDatosParametroFactuTransaccion=this.jTableDatosParametroFactuTransaccion;		
		final JPanel jPanelPaginacionParametroFactuTransaccion=this.jPanelPaginacionParametroFactuTransaccion;
		//final JScrollPane jScrollPanelDatosEdicionParametroFactuTransaccion=this.jScrollPanelDatosEdicionParametroFactuTransaccion;
		final JPanel jPanelAccionesParametroFactuTransaccion=this.jPanelAccionesParametroFactuTransaccion;
		
		JPanel jPanelCamposAuxiliarParametroFactuTransaccion=new JPanelMe();
		JPanel jPanelAccionesFormularioAuxiliarParametroFactuTransaccion=new JPanelMe();
		
		if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) {
			jPanelCamposAuxiliarParametroFactuTransaccion=this.jInternalFrameDetalleFormParametroFactuTransaccion.jPanelCamposParametroFactuTransaccion;
			jPanelAccionesFormularioAuxiliarParametroFactuTransaccion=this.jInternalFrameDetalleFormParametroFactuTransaccion.jPanelAccionesFormularioParametroFactuTransaccion;
		}
		
		final JPanel jPanelCamposParametroFactuTransaccion=jPanelCamposAuxiliarParametroFactuTransaccion;
		final JPanel jPanelAccionesFormularioParametroFactuTransaccion=jPanelAccionesFormularioAuxiliarParametroFactuTransaccion;
		
		
		final JMenuBar jmenuBarParametroFactuTransaccion=this.jmenuBarParametroFactuTransaccion;
		final JToolBar jTtoolBarParametroFactuTransaccion=this.jTtoolBarParametroFactuTransaccion;		
		
		
		JMenuBar jmenuBarDetalleAuxiliarParametroFactuTransaccion=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarParametroFactuTransaccion=new JToolBar();		
		
		if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) {
			jmenuBarDetalleAuxiliarParametroFactuTransaccion=this.jInternalFrameDetalleFormParametroFactuTransaccion.jmenuBarDetalleParametroFactuTransaccion;
			jTtoolBarDetalleAuxiliarParametroFactuTransaccion=this.jInternalFrameDetalleFormParametroFactuTransaccion.jTtoolBarDetalleParametroFactuTransaccion;
		}
		
		final JMenuBar jmenuBarDetalleParametroFactuTransaccion=jmenuBarDetalleAuxiliarParametroFactuTransaccion;
		final JToolBar jTtoolBarDetalleParametroFactuTransaccion=jTtoolBarDetalleAuxiliarParametroFactuTransaccion;		
		
		
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("START");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasParametroFactuTransaccion;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesParametroFactuTransaccion;
			processRunnable.jTableDatos=jTableDatosParametroFactuTransaccion;
			processRunnable.jPanelCampos=jPanelCamposParametroFactuTransaccion;
			processRunnable.jPanelPaginacion=jPanelPaginacionParametroFactuTransaccion;
			processRunnable.jPanelAcciones=jPanelAccionesParametroFactuTransaccion;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioParametroFactuTransaccion;
			
			
			processRunnable.jmenuBar=jmenuBarParametroFactuTransaccion;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleParametroFactuTransaccion;
			processRunnable.jTtoolBar=jTtoolBarParametroFactuTransaccion;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleParametroFactuTransaccion;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasParametroFactuTransaccion ,jPanelParametrosReportesParametroFactuTransaccion,jTableDatosParametroFactuTransaccion, /*jScrollPanelDatosParametroFactuTransaccion,*/jPanelCamposParametroFactuTransaccion,jPanelPaginacionParametroFactuTransaccion, /*jScrollPanelDatosEdicionParametroFactuTransaccion,*/ jPanelAccionesParametroFactuTransaccion,jPanelAccionesFormularioParametroFactuTransaccion,jmenuBarParametroFactuTransaccion,jmenuBarDetalleParametroFactuTransaccion,jTtoolBarParametroFactuTransaccion,jTtoolBarDetalleParametroFactuTransaccion);
		
			startProcess();//this.
		}
						
		/*
		if(conSplash) {
			SwingUtilities.invokeLater(new Runnable() {
			      public void run() {
			    	  try {
							FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasParametroFactuTransaccion ,jPanelParametrosReportesParametroFactuTransaccion, jScrollPanelDatosParametroFactuTransaccion,jPanelPaginacionParametroFactuTransaccion, jScrollPanelDatosEdicionParametroFactuTransaccion, jPanelAccionesParametroFactuTransaccion,jPanelAccionesFormularioParametroFactuTransaccion,jmenuBarParametroFactuTransaccion,jmenuBarDetalleParametroFactuTransaccion,jTtoolBarParametroFactuTransaccion,jTtoolBarDetalleParametroFactuTransaccion);
						
							startProcess();//this.
							
						} catch (Exception e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
			      }
			});
		}
		*/
	}
	
	public void finishProcessParametroFactuTransaccion() {// throws Exception 
		this.finishProcessParametroFactuTransaccion(true);
	}
	
	public void finishProcessParametroFactuTransaccion(Boolean conSplash) {// throws Exception 
		//FuncionesSwing.enableDisablePanels(true,this.jTabbedPaneBusquedasParametroFactuTransaccion ,this.jPanelParametrosReportesParametroFactuTransaccion, this.jScrollPanelDatosParametroFactuTransaccion,this.jPanelPaginacionParametroFactuTransaccion, this.jScrollPanelDatosEdicionParametroFactuTransaccion, this.jPanelAccionesParametroFactuTransaccion,this.jPanelAccionesFormularioParametroFactuTransaccion,this.jmenuBarParametroFactuTransaccion,this.jmenuBarDetalleParametroFactuTransaccion,this.jTtoolBarParametroFactuTransaccion,this.jTtoolBarDetalleParametroFactuTransaccion);		
		
		final JTabbedPane jTabbedPaneBusquedasParametroFactuTransaccion=this.jTabbedPaneBusquedasParametroFactuTransaccion; 
		
		final JPanel jPanelParametrosReportesParametroFactuTransaccion=this.jPanelParametrosReportesParametroFactuTransaccion;
		//final JScrollPane jScrollPanelDatosParametroFactuTransaccion=this.jScrollPanelDatosParametroFactuTransaccion;
		final JTable jTableDatosParametroFactuTransaccion=this.jTableDatosParametroFactuTransaccion;		
		final JPanel jPanelPaginacionParametroFactuTransaccion=this.jPanelPaginacionParametroFactuTransaccion;
		//final JScrollPane jScrollPanelDatosEdicionParametroFactuTransaccion=this.jScrollPanelDatosEdicionParametroFactuTransaccion;
		final JPanel jPanelAccionesParametroFactuTransaccion=this.jPanelAccionesParametroFactuTransaccion;
		
		JPanel jPanelCamposAuxiliarParametroFactuTransaccion=new JPanel();
		JPanel jPanelAccionesFormularioAuxiliarParametroFactuTransaccion=new JPanel();
		
		if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) {
			jPanelCamposAuxiliarParametroFactuTransaccion=this.jInternalFrameDetalleFormParametroFactuTransaccion.jPanelCamposParametroFactuTransaccion;
			jPanelAccionesFormularioAuxiliarParametroFactuTransaccion=this.jInternalFrameDetalleFormParametroFactuTransaccion.jPanelAccionesFormularioParametroFactuTransaccion;
		}
		
		final JPanel jPanelCamposParametroFactuTransaccion=jPanelCamposAuxiliarParametroFactuTransaccion;
		final JPanel jPanelAccionesFormularioParametroFactuTransaccion=jPanelAccionesFormularioAuxiliarParametroFactuTransaccion;
		
		
		final JMenuBar jmenuBarParametroFactuTransaccion=this.jmenuBarParametroFactuTransaccion;		
		final JToolBar jTtoolBarParametroFactuTransaccion=this.jTtoolBarParametroFactuTransaccion;
				
		JMenuBar jmenuBarDetalleAuxiliarParametroFactuTransaccion=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarParametroFactuTransaccion=new JToolBar();
		
		if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) {
			jmenuBarDetalleAuxiliarParametroFactuTransaccion=this.jInternalFrameDetalleFormParametroFactuTransaccion.jmenuBarDetalleParametroFactuTransaccion;
			jTtoolBarDetalleAuxiliarParametroFactuTransaccion=this.jInternalFrameDetalleFormParametroFactuTransaccion.jTtoolBarDetalleParametroFactuTransaccion;		
		}
		
		final JMenuBar jmenuBarDetalleParametroFactuTransaccion=jmenuBarDetalleAuxiliarParametroFactuTransaccion;
		final JToolBar jTtoolBarDetalleParametroFactuTransaccion=jTtoolBarDetalleAuxiliarParametroFactuTransaccion;
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("END");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasParametroFactuTransaccion;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesParametroFactuTransaccion;
			processRunnable.jTableDatos=jTableDatosParametroFactuTransaccion;
			processRunnable.jPanelCampos=jPanelCamposParametroFactuTransaccion;
			processRunnable.jPanelPaginacion=jPanelPaginacionParametroFactuTransaccion;
			processRunnable.jPanelAcciones=jPanelAccionesParametroFactuTransaccion;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioParametroFactuTransaccion;
			
			
			processRunnable.jmenuBar=jmenuBarParametroFactuTransaccion;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleParametroFactuTransaccion;
			processRunnable.jTtoolBar=jTtoolBarParametroFactuTransaccion;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleParametroFactuTransaccion;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			if(conSplash) {
				SwingUtilities.invokeLater(new RunnableProceso(true,this,jTabbedPaneBusquedasParametroFactuTransaccion ,jPanelParametrosReportesParametroFactuTransaccion, jTableDatosParametroFactuTransaccion,/*jScrollPanelDatosParametroFactuTransaccion,*/jPanelCamposParametroFactuTransaccion,jPanelPaginacionParametroFactuTransaccion, /*jScrollPanelDatosEdicionParametroFactuTransaccion,*/ jPanelAccionesParametroFactuTransaccion,jPanelAccionesFormularioParametroFactuTransaccion,jmenuBarParametroFactuTransaccion,jmenuBarDetalleParametroFactuTransaccion,jTtoolBarParametroFactuTransaccion,jTtoolBarDetalleParametroFactuTransaccion));
			}
		}						
	}
	
	/*
	public void habilitarDeshabilitarControlesParametroFactuTransaccion(Boolean esHabilitar,Boolean conDetalle) {
		this.habilitarDeshabilitarToolBarParametroFactuTransaccion(esHabilitar,conDetalle);
		this.habilitarDeshabilitarMenuParametroFactuTransaccion(esHabilitar,conDetalle);
	}
	
	public void habilitarDeshabilitarToolBarParametroFactuTransaccion(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jTtoolBarParametroFactuTransaccion,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jTtoolBarDetalleParametroFactuTransaccion,esHabilitar,1,1);
		}
	}
	
	public void habilitarDeshabilitarMenuParametroFactuTransaccion(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jmenuBarParametroFactuTransaccion,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jmenuBarDetalleParametroFactuTransaccion,esHabilitar,1,1);
		}
	}
	*/
	
	
	
	public void procesarBusqueda(String sAccionBusqueda) throws Exception {		
		String  finalQueryPaginacion=this.parametrofactutransaccionConstantesFunciones.getsFinalQueryParametroFactuTransaccion();
		String  finalQueryPaginacionTodos=this.parametrofactutransaccionConstantesFunciones.getsFinalQueryParametroFactuTransaccion();
		
		Boolean esBusqueda=false;
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!sAccionBusqueda.equals("Todos"))	{
			esBusqueda=true;
		}
		
		this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
		this.arrDatoGeneralNo= new  ArrayList<String>();
		
		ArrayList<String> arrColumnasGlobalesNo=ParametroFactuTransaccionConstantesFunciones.getArrayColumnasGlobalesNoParametroFactuTransaccion(this.arrDatoGeneral);
		ArrayList<String> arrColumnasGlobales=ParametroFactuTransaccionConstantesFunciones.getArrayColumnasGlobalesParametroFactuTransaccion(this.arrDatoGeneral,arrColumnasGlobalesNo);
		
			
		String  finalQueryGlobal="";
		
		finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,!esBusqueda,esBusqueda,arrColumnasGlobales,ParametroFactuTransaccionConstantesFunciones.TABLENAME);
		
		String sOrderBy="";
		
		
		sOrderBy=Funciones2.getFinalQueryOrderBy(this.arrOrderBy);
		
		
		if(!sOrderBy.equals("")) {			
			finalQueryPaginacion=sOrderBy;
			finalQueryPaginacionTodos=sOrderBy;
		}
		
		
		//INICIALIZA ELIMINADOS
		this.parametrofactutransaccionsEliminados= new ArrayList<ParametroFactuTransaccion>();
		
		if(!this.isEntroOnLoad) {
			this.onLoad();
		}/* else {
			this.isEntroOnLoad=false;
		}*/
		
		
		
				
		try	{		
			
			//this.startProcessParametroFactuTransaccion();
		
				///*ParametroFactuTransaccionSessionBean*/this.parametrofactutransaccionSessionBean=new ParametroFactuTransaccionSessionBean();
			
			if(this.parametrofactutransaccionSessionBean==null) {
				this.parametrofactutransaccionSessionBean=new ParametroFactuTransaccionSessionBean();
			}
			
			//ACTUALIZA EL TAMANIO DE PAGINACION DESDE EL COMBO
			if(this.sTipoPaginacion!=null && !this.sTipoPaginacion.equals("")) {
				if(!this.sTipoPaginacion.equals("TODOS")) {
					this.iNumeroPaginacion=Integer.parseInt(this.sTipoPaginacion);
				} else {
					this.iNumeroPaginacion=-1;
					this.iNumeroPaginacionPagina=-1;
				}
			} else {
				if(this.iNumeroPaginacion==null || (this.iNumeroPaginacion!=null && this.iNumeroPaginacion<=0)) {
					this.iNumeroPaginacion=ParametroFactuTransaccionConstantesFunciones.INUMEROPAGINACION;
				}
			}
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);
			
			this.cargarDatosCliente();
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			classes=ParametroFactuTransaccionConstantesFunciones.getClassesForeignKeysOfParametroFactuTransaccion(new ArrayList<Classe>(),DeepLoadType.NONE);
			
		
			this.datosDeep=new DatosDeep();
			this.datosDeep.setIsDeep(false);
			this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
			this.datosDeep.setClases(classes);
			
			this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
			this.datosCliente.setIsConDeep(true);
			
			if(false) {//this.conExportar
				this.datosCliente.setIsConExportar(true);
				this.datosCliente.setDatosExportarParametros(Funciones2.getTipoExportar(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getcon_exportar_cabecera(),Funciones2.getTipoDelimiter(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getpath_exportar()+"/parametrofactutransaccion."+Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario));
			} else {
				this.datosCliente.setIsConExportar(false);
			}
			
			parametrofactutransaccionsAux= new ArrayList<ParametroFactuTransaccion>();
			
				
			parametrofactutransaccionLogic.setDatosCliente(this.datosCliente);
			parametrofactutransaccionLogic.setDatosDeep(this.datosDeep);
			parametrofactutransaccionLogic.setIsConDeep(true);
			
			
			parametrofactutransaccionLogic.getParametroFactuTransaccionDataAccess().setIsForForeingsKeysDataRelationships(true);
			
			if(sAccionBusqueda.equals("Todos") || sAccionBusqueda.equals("Query"))	{	
				if(sAccionBusqueda.equals("Todos")) {
					//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
					//this.sFinalQueryGeneral="";
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacionTodos );
					
					parametrofactutransaccionLogic.getTodosParametroFactuTransaccions(finalQueryGlobal,pagination);
					
					//parametrofactutransaccionLogic.getTodosParametroFactuTransaccionsWithConnection(finalQueryGlobal,pagination);										
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
				
				if(parametrofactutransaccionLogic.getParametroFactuTransaccions()==null|| parametrofactutransaccionLogic.getParametroFactuTransaccions().size()==0)	{
					
				
				}
				
				if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(-1);
						this.pagination.setiMaxResults(-1);
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							parametrofactutransaccionsAux= new ArrayList<ParametroFactuTransaccion>();
							parametrofactutransaccionsAux.addAll(parametrofactutransaccionLogic.getParametroFactuTransaccions());						
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactutransaccionsAux= new ArrayList<ParametroFactuTransaccion>();
							parametrofactutransaccionsAux.addAll(parametrofactutransaccions);
						}
						//ARCHITECTURE
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							parametrofactutransaccionLogic.getTodosParametroFactuTransaccions(finalQueryGlobal+"",this.pagination);												
							
							//parametrofactutransaccionLogic.getTodosParametroFactuTransaccionsWithConnection(finalQueryGlobal+"",this.pagination);												
						} else if(Constantes.ISUSAEJBREMOTE) {
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
					}
					
					this.generarReporteParametroFactuTransaccions("Todos",parametrofactutransaccionLogic.getParametroFactuTransaccions() );
					
					if(false) {//isMostrarTodosResultadosReporte						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							parametrofactutransaccionLogic.setParametroFactuTransaccions(new ArrayList<ParametroFactuTransaccion>());					
							parametrofactutransaccionLogic.getParametroFactuTransaccions().addAll(parametrofactutransaccionsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactutransaccions=new ArrayList<ParametroFactuTransaccion>();
							parametrofactutransaccions.addAll(parametrofactutransaccionsAux);
						}
						//ARCHITECTURE
						
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);														
					}
				}
			}
			else if(sAccionBusqueda.equals("PorId")) {
				Long idParametroFactuTransaccion=0L;
				
				if(this.idActual!=null && this.idActual!=0L) {
					idParametroFactuTransaccion=this.idActual;
				
				} else if(this.idParametroFactuTransaccionActual!=null && this.idParametroFactuTransaccionActual!=0L) {
					idParametroFactuTransaccion=idParametroFactuTransaccionActual;
				}
				
					
				this.sDetalleReporte=ParametroFactuTransaccionConstantesFunciones.getDetalleIndicePorId(idParametroFactuTransaccion);
				
				this.parametrofactutransaccions=new ArrayList<ParametroFactuTransaccion>();
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {					
					parametrofactutransaccionLogic.getEntity(idParametroFactuTransaccion);
					
					//parametrofactutransaccionLogic.getEntityWithConnection(idParametroFactuTransaccion);
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
								
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrofactutransaccionLogic.setParametroFactuTransaccions(new ArrayList<ParametroFactuTransaccion>());
					parametrofactutransaccionLogic.getParametroFactuTransaccions().add(parametrofactutransaccionLogic.getParametroFactuTransaccion());
				
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrofactutransaccions=new ArrayList<ParametroFactuTransaccion>();
					this.parametrofactutransaccions.add(parametrofactutransaccion);
				}
				
				if(parametrofactutransaccionLogic.getParametroFactuTransaccion()==null)	{
					
				
				}			
			}
			
		
			else if(sAccionBusqueda.equals("FK_IdEmpresa")) {
				this.sDetalleReporte=ParametroFactuTransaccionConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrofactutransaccionLogic.getParametroFactuTransaccionsFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuTransaccionConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuTransaccionConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrofactutransaccionLogic.getParametroFactuTransaccions()==null||parametrofactutransaccionLogic.getParametroFactuTransaccions().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrofactutransaccions==null|| parametrofactutransaccions.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactutransaccionsAux=new ArrayList<ParametroFactuTransaccion>();
						parametrofactutransaccionsAux.addAll(parametrofactutransaccionLogic.getParametroFactuTransaccions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactutransaccionsAux=new ArrayList<ParametroFactuTransaccion>();
							parametrofactutransaccionsAux.addAll(parametrofactutransaccions);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrofactutransaccionLogic.getParametroFactuTransaccionsFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuTransaccionConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuTransaccionConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroFactuTransaccions("FK_IdEmpresa",parametrofactutransaccionLogic.getParametroFactuTransaccions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroFactuTransaccions("FK_IdEmpresa",parametrofactutransaccions);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactutransaccionLogic.setParametroFactuTransaccions(new ArrayList<ParametroFactuTransaccion>());
						parametrofactutransaccionLogic.getParametroFactuTransaccions().addAll(parametrofactutransaccionsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactutransaccions=new ArrayList<ParametroFactuTransaccion>();
							parametrofactutransaccions.addAll(parametrofactutransaccionsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdSucursal")) {
				this.sDetalleReporte=ParametroFactuTransaccionConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrofactutransaccionLogic.getParametroFactuTransaccionsFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuTransaccionConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuTransaccionConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrofactutransaccionLogic.getParametroFactuTransaccions()==null||parametrofactutransaccionLogic.getParametroFactuTransaccions().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrofactutransaccions==null|| parametrofactutransaccions.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactutransaccionsAux=new ArrayList<ParametroFactuTransaccion>();
						parametrofactutransaccionsAux.addAll(parametrofactutransaccionLogic.getParametroFactuTransaccions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactutransaccionsAux=new ArrayList<ParametroFactuTransaccion>();
							parametrofactutransaccionsAux.addAll(parametrofactutransaccions);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrofactutransaccionLogic.getParametroFactuTransaccionsFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuTransaccionConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuTransaccionConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroFactuTransaccions("FK_IdSucursal",parametrofactutransaccionLogic.getParametroFactuTransaccions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroFactuTransaccions("FK_IdSucursal",parametrofactutransaccions);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactutransaccionLogic.setParametroFactuTransaccions(new ArrayList<ParametroFactuTransaccion>());
						parametrofactutransaccionLogic.getParametroFactuTransaccions().addAll(parametrofactutransaccionsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactutransaccions=new ArrayList<ParametroFactuTransaccion>();
							parametrofactutransaccions.addAll(parametrofactutransaccionsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTransaccionCuentaCoFactura")) {
				this.sDetalleReporte=ParametroFactuTransaccionConstantesFunciones.getDetalleIndiceFK_IdTransaccionCuentaCoFactura(id_transaccion_cuenta_co_facturaFK_IdTransaccionCuentaCoFactura);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrofactutransaccionLogic.getParametroFactuTransaccionsFK_IdTransaccionCuentaCoFactura(finalQueryGlobal,pagination,id_transaccion_cuenta_co_facturaFK_IdTransaccionCuentaCoFactura);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuTransaccionConstantesFunciones.getDetalleIndiceFK_IdTransaccionCuentaCoFactura(id_transaccion_cuenta_co_facturaFK_IdTransaccionCuentaCoFactura);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuTransaccionConstantesFunciones.getDetalleIndiceFK_IdTransaccionCuentaCoFactura(id_transaccion_cuenta_co_facturaFK_IdTransaccionCuentaCoFactura);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrofactutransaccionLogic.getParametroFactuTransaccions()==null||parametrofactutransaccionLogic.getParametroFactuTransaccions().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrofactutransaccions==null|| parametrofactutransaccions.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactutransaccionsAux=new ArrayList<ParametroFactuTransaccion>();
						parametrofactutransaccionsAux.addAll(parametrofactutransaccionLogic.getParametroFactuTransaccions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactutransaccionsAux=new ArrayList<ParametroFactuTransaccion>();
							parametrofactutransaccionsAux.addAll(parametrofactutransaccions);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrofactutransaccionLogic.getParametroFactuTransaccionsFK_IdTransaccionCuentaCoFactura(finalQueryGlobal,pagination,id_transaccion_cuenta_co_facturaFK_IdTransaccionCuentaCoFactura);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuTransaccionConstantesFunciones.getDetalleIndiceFK_IdTransaccionCuentaCoFactura(id_transaccion_cuenta_co_facturaFK_IdTransaccionCuentaCoFactura);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuTransaccionConstantesFunciones.getDetalleIndiceFK_IdTransaccionCuentaCoFactura(id_transaccion_cuenta_co_facturaFK_IdTransaccionCuentaCoFactura);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroFactuTransaccions("FK_IdTransaccionCuentaCoFactura",parametrofactutransaccionLogic.getParametroFactuTransaccions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroFactuTransaccions("FK_IdTransaccionCuentaCoFactura",parametrofactutransaccions);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactutransaccionLogic.setParametroFactuTransaccions(new ArrayList<ParametroFactuTransaccion>());
						parametrofactutransaccionLogic.getParametroFactuTransaccions().addAll(parametrofactutransaccionsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactutransaccions=new ArrayList<ParametroFactuTransaccion>();
							parametrofactutransaccions.addAll(parametrofactutransaccionsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTransaccionCuentaCoNotaCredito")) {
				this.sDetalleReporte=ParametroFactuTransaccionConstantesFunciones.getDetalleIndiceFK_IdTransaccionCuentaCoNotaCredito(id_transaccion_cuenta_co_nota_creditoFK_IdTransaccionCuentaCoNotaCredito);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrofactutransaccionLogic.getParametroFactuTransaccionsFK_IdTransaccionCuentaCoNotaCredito(finalQueryGlobal,pagination,id_transaccion_cuenta_co_nota_creditoFK_IdTransaccionCuentaCoNotaCredito);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuTransaccionConstantesFunciones.getDetalleIndiceFK_IdTransaccionCuentaCoNotaCredito(id_transaccion_cuenta_co_nota_creditoFK_IdTransaccionCuentaCoNotaCredito);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuTransaccionConstantesFunciones.getDetalleIndiceFK_IdTransaccionCuentaCoNotaCredito(id_transaccion_cuenta_co_nota_creditoFK_IdTransaccionCuentaCoNotaCredito);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrofactutransaccionLogic.getParametroFactuTransaccions()==null||parametrofactutransaccionLogic.getParametroFactuTransaccions().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrofactutransaccions==null|| parametrofactutransaccions.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactutransaccionsAux=new ArrayList<ParametroFactuTransaccion>();
						parametrofactutransaccionsAux.addAll(parametrofactutransaccionLogic.getParametroFactuTransaccions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactutransaccionsAux=new ArrayList<ParametroFactuTransaccion>();
							parametrofactutransaccionsAux.addAll(parametrofactutransaccions);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrofactutransaccionLogic.getParametroFactuTransaccionsFK_IdTransaccionCuentaCoNotaCredito(finalQueryGlobal,pagination,id_transaccion_cuenta_co_nota_creditoFK_IdTransaccionCuentaCoNotaCredito);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuTransaccionConstantesFunciones.getDetalleIndiceFK_IdTransaccionCuentaCoNotaCredito(id_transaccion_cuenta_co_nota_creditoFK_IdTransaccionCuentaCoNotaCredito);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuTransaccionConstantesFunciones.getDetalleIndiceFK_IdTransaccionCuentaCoNotaCredito(id_transaccion_cuenta_co_nota_creditoFK_IdTransaccionCuentaCoNotaCredito);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroFactuTransaccions("FK_IdTransaccionCuentaCoNotaCredito",parametrofactutransaccionLogic.getParametroFactuTransaccions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroFactuTransaccions("FK_IdTransaccionCuentaCoNotaCredito",parametrofactutransaccions);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactutransaccionLogic.setParametroFactuTransaccions(new ArrayList<ParametroFactuTransaccion>());
						parametrofactutransaccionLogic.getParametroFactuTransaccions().addAll(parametrofactutransaccionsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactutransaccions=new ArrayList<ParametroFactuTransaccion>();
							parametrofactutransaccions.addAll(parametrofactutransaccionsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTransaccionCuentaCoNotaVenta")) {
				this.sDetalleReporte=ParametroFactuTransaccionConstantesFunciones.getDetalleIndiceFK_IdTransaccionCuentaCoNotaVenta(id_transaccion_cuenta_co_nota_ventaFK_IdTransaccionCuentaCoNotaVenta);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrofactutransaccionLogic.getParametroFactuTransaccionsFK_IdTransaccionCuentaCoNotaVenta(finalQueryGlobal,pagination,id_transaccion_cuenta_co_nota_ventaFK_IdTransaccionCuentaCoNotaVenta);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuTransaccionConstantesFunciones.getDetalleIndiceFK_IdTransaccionCuentaCoNotaVenta(id_transaccion_cuenta_co_nota_ventaFK_IdTransaccionCuentaCoNotaVenta);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuTransaccionConstantesFunciones.getDetalleIndiceFK_IdTransaccionCuentaCoNotaVenta(id_transaccion_cuenta_co_nota_ventaFK_IdTransaccionCuentaCoNotaVenta);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrofactutransaccionLogic.getParametroFactuTransaccions()==null||parametrofactutransaccionLogic.getParametroFactuTransaccions().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrofactutransaccions==null|| parametrofactutransaccions.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactutransaccionsAux=new ArrayList<ParametroFactuTransaccion>();
						parametrofactutransaccionsAux.addAll(parametrofactutransaccionLogic.getParametroFactuTransaccions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactutransaccionsAux=new ArrayList<ParametroFactuTransaccion>();
							parametrofactutransaccionsAux.addAll(parametrofactutransaccions);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrofactutransaccionLogic.getParametroFactuTransaccionsFK_IdTransaccionCuentaCoNotaVenta(finalQueryGlobal,pagination,id_transaccion_cuenta_co_nota_ventaFK_IdTransaccionCuentaCoNotaVenta);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuTransaccionConstantesFunciones.getDetalleIndiceFK_IdTransaccionCuentaCoNotaVenta(id_transaccion_cuenta_co_nota_ventaFK_IdTransaccionCuentaCoNotaVenta);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuTransaccionConstantesFunciones.getDetalleIndiceFK_IdTransaccionCuentaCoNotaVenta(id_transaccion_cuenta_co_nota_ventaFK_IdTransaccionCuentaCoNotaVenta);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroFactuTransaccions("FK_IdTransaccionCuentaCoNotaVenta",parametrofactutransaccionLogic.getParametroFactuTransaccions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroFactuTransaccions("FK_IdTransaccionCuentaCoNotaVenta",parametrofactutransaccions);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactutransaccionLogic.setParametroFactuTransaccions(new ArrayList<ParametroFactuTransaccion>());
						parametrofactutransaccionLogic.getParametroFactuTransaccions().addAll(parametrofactutransaccionsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactutransaccions=new ArrayList<ParametroFactuTransaccion>();
							parametrofactutransaccions.addAll(parametrofactutransaccionsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTransaccionCuentaCoTarjeta")) {
				this.sDetalleReporte=ParametroFactuTransaccionConstantesFunciones.getDetalleIndiceFK_IdTransaccionCuentaCoTarjeta(id_transaccion_cuenta_co_tarjetaFK_IdTransaccionCuentaCoTarjeta);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrofactutransaccionLogic.getParametroFactuTransaccionsFK_IdTransaccionCuentaCoTarjeta(finalQueryGlobal,pagination,id_transaccion_cuenta_co_tarjetaFK_IdTransaccionCuentaCoTarjeta);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuTransaccionConstantesFunciones.getDetalleIndiceFK_IdTransaccionCuentaCoTarjeta(id_transaccion_cuenta_co_tarjetaFK_IdTransaccionCuentaCoTarjeta);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuTransaccionConstantesFunciones.getDetalleIndiceFK_IdTransaccionCuentaCoTarjeta(id_transaccion_cuenta_co_tarjetaFK_IdTransaccionCuentaCoTarjeta);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrofactutransaccionLogic.getParametroFactuTransaccions()==null||parametrofactutransaccionLogic.getParametroFactuTransaccions().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrofactutransaccions==null|| parametrofactutransaccions.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactutransaccionsAux=new ArrayList<ParametroFactuTransaccion>();
						parametrofactutransaccionsAux.addAll(parametrofactutransaccionLogic.getParametroFactuTransaccions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactutransaccionsAux=new ArrayList<ParametroFactuTransaccion>();
							parametrofactutransaccionsAux.addAll(parametrofactutransaccions);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrofactutransaccionLogic.getParametroFactuTransaccionsFK_IdTransaccionCuentaCoTarjeta(finalQueryGlobal,pagination,id_transaccion_cuenta_co_tarjetaFK_IdTransaccionCuentaCoTarjeta);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuTransaccionConstantesFunciones.getDetalleIndiceFK_IdTransaccionCuentaCoTarjeta(id_transaccion_cuenta_co_tarjetaFK_IdTransaccionCuentaCoTarjeta);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuTransaccionConstantesFunciones.getDetalleIndiceFK_IdTransaccionCuentaCoTarjeta(id_transaccion_cuenta_co_tarjetaFK_IdTransaccionCuentaCoTarjeta);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroFactuTransaccions("FK_IdTransaccionCuentaCoTarjeta",parametrofactutransaccionLogic.getParametroFactuTransaccions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroFactuTransaccions("FK_IdTransaccionCuentaCoTarjeta",parametrofactutransaccions);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactutransaccionLogic.setParametroFactuTransaccions(new ArrayList<ParametroFactuTransaccion>());
						parametrofactutransaccionLogic.getParametroFactuTransaccions().addAll(parametrofactutransaccionsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactutransaccions=new ArrayList<ParametroFactuTransaccion>();
							parametrofactutransaccions.addAll(parametrofactutransaccionsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTransaccionCuentaPaFactura")) {
				this.sDetalleReporte=ParametroFactuTransaccionConstantesFunciones.getDetalleIndiceFK_IdTransaccionCuentaPaFactura(id_transaccion_cuenta_pa_facturaFK_IdTransaccionCuentaPaFactura);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrofactutransaccionLogic.getParametroFactuTransaccionsFK_IdTransaccionCuentaPaFactura(finalQueryGlobal,pagination,id_transaccion_cuenta_pa_facturaFK_IdTransaccionCuentaPaFactura);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuTransaccionConstantesFunciones.getDetalleIndiceFK_IdTransaccionCuentaPaFactura(id_transaccion_cuenta_pa_facturaFK_IdTransaccionCuentaPaFactura);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuTransaccionConstantesFunciones.getDetalleIndiceFK_IdTransaccionCuentaPaFactura(id_transaccion_cuenta_pa_facturaFK_IdTransaccionCuentaPaFactura);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrofactutransaccionLogic.getParametroFactuTransaccions()==null||parametrofactutransaccionLogic.getParametroFactuTransaccions().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrofactutransaccions==null|| parametrofactutransaccions.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactutransaccionsAux=new ArrayList<ParametroFactuTransaccion>();
						parametrofactutransaccionsAux.addAll(parametrofactutransaccionLogic.getParametroFactuTransaccions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactutransaccionsAux=new ArrayList<ParametroFactuTransaccion>();
							parametrofactutransaccionsAux.addAll(parametrofactutransaccions);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrofactutransaccionLogic.getParametroFactuTransaccionsFK_IdTransaccionCuentaPaFactura(finalQueryGlobal,pagination,id_transaccion_cuenta_pa_facturaFK_IdTransaccionCuentaPaFactura);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuTransaccionConstantesFunciones.getDetalleIndiceFK_IdTransaccionCuentaPaFactura(id_transaccion_cuenta_pa_facturaFK_IdTransaccionCuentaPaFactura);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuTransaccionConstantesFunciones.getDetalleIndiceFK_IdTransaccionCuentaPaFactura(id_transaccion_cuenta_pa_facturaFK_IdTransaccionCuentaPaFactura);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroFactuTransaccions("FK_IdTransaccionCuentaPaFactura",parametrofactutransaccionLogic.getParametroFactuTransaccions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroFactuTransaccions("FK_IdTransaccionCuentaPaFactura",parametrofactutransaccions);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactutransaccionLogic.setParametroFactuTransaccions(new ArrayList<ParametroFactuTransaccion>());
						parametrofactutransaccionLogic.getParametroFactuTransaccions().addAll(parametrofactutransaccionsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactutransaccions=new ArrayList<ParametroFactuTransaccion>();
							parametrofactutransaccions.addAll(parametrofactutransaccionsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTransaccionCuentaPaNotaCredito")) {
				this.sDetalleReporte=ParametroFactuTransaccionConstantesFunciones.getDetalleIndiceFK_IdTransaccionCuentaPaNotaCredito(id_transaccion_cuenta_pa_nota_creditoFK_IdTransaccionCuentaPaNotaCredito);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrofactutransaccionLogic.getParametroFactuTransaccionsFK_IdTransaccionCuentaPaNotaCredito(finalQueryGlobal,pagination,id_transaccion_cuenta_pa_nota_creditoFK_IdTransaccionCuentaPaNotaCredito);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuTransaccionConstantesFunciones.getDetalleIndiceFK_IdTransaccionCuentaPaNotaCredito(id_transaccion_cuenta_pa_nota_creditoFK_IdTransaccionCuentaPaNotaCredito);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuTransaccionConstantesFunciones.getDetalleIndiceFK_IdTransaccionCuentaPaNotaCredito(id_transaccion_cuenta_pa_nota_creditoFK_IdTransaccionCuentaPaNotaCredito);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrofactutransaccionLogic.getParametroFactuTransaccions()==null||parametrofactutransaccionLogic.getParametroFactuTransaccions().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrofactutransaccions==null|| parametrofactutransaccions.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactutransaccionsAux=new ArrayList<ParametroFactuTransaccion>();
						parametrofactutransaccionsAux.addAll(parametrofactutransaccionLogic.getParametroFactuTransaccions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactutransaccionsAux=new ArrayList<ParametroFactuTransaccion>();
							parametrofactutransaccionsAux.addAll(parametrofactutransaccions);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrofactutransaccionLogic.getParametroFactuTransaccionsFK_IdTransaccionCuentaPaNotaCredito(finalQueryGlobal,pagination,id_transaccion_cuenta_pa_nota_creditoFK_IdTransaccionCuentaPaNotaCredito);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuTransaccionConstantesFunciones.getDetalleIndiceFK_IdTransaccionCuentaPaNotaCredito(id_transaccion_cuenta_pa_nota_creditoFK_IdTransaccionCuentaPaNotaCredito);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuTransaccionConstantesFunciones.getDetalleIndiceFK_IdTransaccionCuentaPaNotaCredito(id_transaccion_cuenta_pa_nota_creditoFK_IdTransaccionCuentaPaNotaCredito);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroFactuTransaccions("FK_IdTransaccionCuentaPaNotaCredito",parametrofactutransaccionLogic.getParametroFactuTransaccions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroFactuTransaccions("FK_IdTransaccionCuentaPaNotaCredito",parametrofactutransaccions);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactutransaccionLogic.setParametroFactuTransaccions(new ArrayList<ParametroFactuTransaccion>());
						parametrofactutransaccionLogic.getParametroFactuTransaccions().addAll(parametrofactutransaccionsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactutransaccions=new ArrayList<ParametroFactuTransaccion>();
							parametrofactutransaccions.addAll(parametrofactutransaccionsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTransaccionInvenFactura")) {
				this.sDetalleReporte=ParametroFactuTransaccionConstantesFunciones.getDetalleIndiceFK_IdTransaccionInvenFactura(id_transaccion_inven_facturaFK_IdTransaccionInvenFactura);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrofactutransaccionLogic.getParametroFactuTransaccionsFK_IdTransaccionInvenFactura(finalQueryGlobal,pagination,id_transaccion_inven_facturaFK_IdTransaccionInvenFactura);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuTransaccionConstantesFunciones.getDetalleIndiceFK_IdTransaccionInvenFactura(id_transaccion_inven_facturaFK_IdTransaccionInvenFactura);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuTransaccionConstantesFunciones.getDetalleIndiceFK_IdTransaccionInvenFactura(id_transaccion_inven_facturaFK_IdTransaccionInvenFactura);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrofactutransaccionLogic.getParametroFactuTransaccions()==null||parametrofactutransaccionLogic.getParametroFactuTransaccions().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrofactutransaccions==null|| parametrofactutransaccions.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactutransaccionsAux=new ArrayList<ParametroFactuTransaccion>();
						parametrofactutransaccionsAux.addAll(parametrofactutransaccionLogic.getParametroFactuTransaccions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactutransaccionsAux=new ArrayList<ParametroFactuTransaccion>();
							parametrofactutransaccionsAux.addAll(parametrofactutransaccions);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrofactutransaccionLogic.getParametroFactuTransaccionsFK_IdTransaccionInvenFactura(finalQueryGlobal,pagination,id_transaccion_inven_facturaFK_IdTransaccionInvenFactura);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuTransaccionConstantesFunciones.getDetalleIndiceFK_IdTransaccionInvenFactura(id_transaccion_inven_facturaFK_IdTransaccionInvenFactura);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuTransaccionConstantesFunciones.getDetalleIndiceFK_IdTransaccionInvenFactura(id_transaccion_inven_facturaFK_IdTransaccionInvenFactura);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroFactuTransaccions("FK_IdTransaccionInvenFactura",parametrofactutransaccionLogic.getParametroFactuTransaccions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroFactuTransaccions("FK_IdTransaccionInvenFactura",parametrofactutransaccions);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactutransaccionLogic.setParametroFactuTransaccions(new ArrayList<ParametroFactuTransaccion>());
						parametrofactutransaccionLogic.getParametroFactuTransaccions().addAll(parametrofactutransaccionsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactutransaccions=new ArrayList<ParametroFactuTransaccion>();
							parametrofactutransaccions.addAll(parametrofactutransaccionsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTransaccionInvenNotaCredito")) {
				this.sDetalleReporte=ParametroFactuTransaccionConstantesFunciones.getDetalleIndiceFK_IdTransaccionInvenNotaCredito(id_transaccion_inven_nota_creditoFK_IdTransaccionInvenNotaCredito);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrofactutransaccionLogic.getParametroFactuTransaccionsFK_IdTransaccionInvenNotaCredito(finalQueryGlobal,pagination,id_transaccion_inven_nota_creditoFK_IdTransaccionInvenNotaCredito);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuTransaccionConstantesFunciones.getDetalleIndiceFK_IdTransaccionInvenNotaCredito(id_transaccion_inven_nota_creditoFK_IdTransaccionInvenNotaCredito);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuTransaccionConstantesFunciones.getDetalleIndiceFK_IdTransaccionInvenNotaCredito(id_transaccion_inven_nota_creditoFK_IdTransaccionInvenNotaCredito);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrofactutransaccionLogic.getParametroFactuTransaccions()==null||parametrofactutransaccionLogic.getParametroFactuTransaccions().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrofactutransaccions==null|| parametrofactutransaccions.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactutransaccionsAux=new ArrayList<ParametroFactuTransaccion>();
						parametrofactutransaccionsAux.addAll(parametrofactutransaccionLogic.getParametroFactuTransaccions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactutransaccionsAux=new ArrayList<ParametroFactuTransaccion>();
							parametrofactutransaccionsAux.addAll(parametrofactutransaccions);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrofactutransaccionLogic.getParametroFactuTransaccionsFK_IdTransaccionInvenNotaCredito(finalQueryGlobal,pagination,id_transaccion_inven_nota_creditoFK_IdTransaccionInvenNotaCredito);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuTransaccionConstantesFunciones.getDetalleIndiceFK_IdTransaccionInvenNotaCredito(id_transaccion_inven_nota_creditoFK_IdTransaccionInvenNotaCredito);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuTransaccionConstantesFunciones.getDetalleIndiceFK_IdTransaccionInvenNotaCredito(id_transaccion_inven_nota_creditoFK_IdTransaccionInvenNotaCredito);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroFactuTransaccions("FK_IdTransaccionInvenNotaCredito",parametrofactutransaccionLogic.getParametroFactuTransaccions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroFactuTransaccions("FK_IdTransaccionInvenNotaCredito",parametrofactutransaccions);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactutransaccionLogic.setParametroFactuTransaccions(new ArrayList<ParametroFactuTransaccion>());
						parametrofactutransaccionLogic.getParametroFactuTransaccions().addAll(parametrofactutransaccionsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactutransaccions=new ArrayList<ParametroFactuTransaccion>();
							parametrofactutransaccions.addAll(parametrofactutransaccionsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTransaccionInvenNotaVenta")) {
				this.sDetalleReporte=ParametroFactuTransaccionConstantesFunciones.getDetalleIndiceFK_IdTransaccionInvenNotaVenta(id_transaccion_inven_nota_ventaFK_IdTransaccionInvenNotaVenta);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrofactutransaccionLogic.getParametroFactuTransaccionsFK_IdTransaccionInvenNotaVenta(finalQueryGlobal,pagination,id_transaccion_inven_nota_ventaFK_IdTransaccionInvenNotaVenta);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuTransaccionConstantesFunciones.getDetalleIndiceFK_IdTransaccionInvenNotaVenta(id_transaccion_inven_nota_ventaFK_IdTransaccionInvenNotaVenta);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuTransaccionConstantesFunciones.getDetalleIndiceFK_IdTransaccionInvenNotaVenta(id_transaccion_inven_nota_ventaFK_IdTransaccionInvenNotaVenta);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrofactutransaccionLogic.getParametroFactuTransaccions()==null||parametrofactutransaccionLogic.getParametroFactuTransaccions().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrofactutransaccions==null|| parametrofactutransaccions.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactutransaccionsAux=new ArrayList<ParametroFactuTransaccion>();
						parametrofactutransaccionsAux.addAll(parametrofactutransaccionLogic.getParametroFactuTransaccions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactutransaccionsAux=new ArrayList<ParametroFactuTransaccion>();
							parametrofactutransaccionsAux.addAll(parametrofactutransaccions);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrofactutransaccionLogic.getParametroFactuTransaccionsFK_IdTransaccionInvenNotaVenta(finalQueryGlobal,pagination,id_transaccion_inven_nota_ventaFK_IdTransaccionInvenNotaVenta);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuTransaccionConstantesFunciones.getDetalleIndiceFK_IdTransaccionInvenNotaVenta(id_transaccion_inven_nota_ventaFK_IdTransaccionInvenNotaVenta);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuTransaccionConstantesFunciones.getDetalleIndiceFK_IdTransaccionInvenNotaVenta(id_transaccion_inven_nota_ventaFK_IdTransaccionInvenNotaVenta);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroFactuTransaccions("FK_IdTransaccionInvenNotaVenta",parametrofactutransaccionLogic.getParametroFactuTransaccions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroFactuTransaccions("FK_IdTransaccionInvenNotaVenta",parametrofactutransaccions);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactutransaccionLogic.setParametroFactuTransaccions(new ArrayList<ParametroFactuTransaccion>());
						parametrofactutransaccionLogic.getParametroFactuTransaccions().addAll(parametrofactutransaccionsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactutransaccions=new ArrayList<ParametroFactuTransaccion>();
							parametrofactutransaccions.addAll(parametrofactutransaccionsAux);
						}
						//ARCHITECTURE
					}
				}

			} 
		
		
		
		this.redimensionarTablaDatos();
		//this.refrescarForeignKeysDescripcionesParametroFactuTransaccion();
		
		
		if(this.conTotales) {
			this.crearFilaTotales();
		}		
		} catch (JRException e) {
			throw e;
		} catch(Exception e) {
			throw e;
      	} finally {
      		//this.finishProcessParametroFactuTransaccion();
      	}
		
	}				
	
	public void redimensionarTablaDatos() throws Exception {
		int iSizeTabla=0;
				
		iSizeTabla=this.getSizeTablaDatos();
		
		//ARCHITECTURE
		/*
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=parametrofactutransaccionLogic.getParametroFactuTransaccions().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=parametrofactutransaccions.size();
		}
		*/
		//ARCHITECTURE
											
		this.redimensionarTablaDatos(iSizeTabla);		
	}
	
	public Integer getSizeTablaDatos() throws Exception {
		Integer iSizeTabla=0;
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=parametrofactutransaccionLogic.getParametroFactuTransaccions().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=parametrofactutransaccions.size();
		}
		//ARCHITECTURE
											
		return iSizeTabla;		
	}
	
			
	public Boolean permiteMantenimiento(ParametroFactuTransaccion parametrofactutransaccion) {
		Boolean permite=true;
		
		if(this.parametrofactutransaccion.getsType().equals(Constantes2.S_TOTALES)) {
			permite=false;
		}
		
		return permite;
	}
	
	public void traerValoresTablaTotales() throws Exception {
	}
	
	
	public void traerValoresTablaOrderBy() throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.arrOrderBy=ParametroFactuTransaccionConstantesFunciones.getOrderByListaParametroFactuTransaccion();							
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.arrOrderBy=ParametroFactuTransaccionConstantesFunciones.getOrderByListaParametroFactuTransaccion();
		}		
	}
	
	
	public Boolean existeFilaTotales() throws Exception {
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(ParametroFactuTransaccion parametrofactutransaccion:parametrofactutransaccionLogic.getParametroFactuTransaccions()) {
				if(parametrofactutransaccion.getsType().equals(Constantes2.S_TOTALES)) {
					parametrofactutransaccionTotales=parametrofactutransaccion;
					existe=true;
					break;
				}
			}
								
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(ParametroFactuTransaccion parametrofactutransaccion:this.parametrofactutransaccions) {
				if(parametrofactutransaccion.getsType().equals(Constantes2.S_TOTALES)) {
					parametrofactutransaccionTotales=parametrofactutransaccion;
					existe=true;
					break;
				}
			}
		}
		
		return existe;
	}
	
	public void crearFilaTotales() throws Exception {
		Boolean existe=false;
		
		existe=this.existeFilaTotales();
		
		if(!existe) {
			//SI NO ES UNO A UNO SE CREA FILA TOTALES
			this.parametrofactutransaccionAux=new ParametroFactuTransaccion();
			this.parametrofactutransaccionAux.setsType(Constantes2.S_TOTALES);
			this.parametrofactutransaccionAux.setIsNew(false);
			this.parametrofactutransaccionAux.setIsChanged(false);
			this.parametrofactutransaccionAux.setIsDeleted(false);
				
			if(Constantes.ISUSAEJBLOGICLAYER) {
				ParametroFactuTransaccionConstantesFunciones.TotalizarValoresFilaParametroFactuTransaccion(this.parametrofactutransaccionLogic.getParametroFactuTransaccions(),this.parametrofactutransaccionAux);
				
				this.parametrofactutransaccionLogic.getParametroFactuTransaccions().add(this.parametrofactutransaccionAux);
				
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				ParametroFactuTransaccionConstantesFunciones.TotalizarValoresFilaParametroFactuTransaccion(this.parametrofactutransaccions,this.parametrofactutransaccionAux);
				
				this.parametrofactutransaccions.add(this.parametrofactutransaccionAux);
			}
		}
	}
	
	public void quitarFilaTotales() throws Exception {
		parametrofactutransaccionTotales=new ParametroFactuTransaccion();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.parametrofactutransaccionLogic.getParametroFactuTransaccions().remove(parametrofactutransaccionTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.parametrofactutransaccions.remove(parametrofactutransaccionTotales);
			}
		}
	}
	
	public void actualizarFilaTotales() throws Exception {
		parametrofactutransaccionTotales=new ParametroFactuTransaccion();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(ParametroFactuTransaccion parametrofactutransaccion:parametrofactutransaccionLogic.getParametroFactuTransaccions()) {
				if(parametrofactutransaccion.getsType().equals(Constantes2.S_TOTALES)) {
					parametrofactutransaccionTotales=parametrofactutransaccion;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				ParametroFactuTransaccionConstantesFunciones.TotalizarValoresFilaParametroFactuTransaccion(this.parametrofactutransaccionLogic.getParametroFactuTransaccions(),parametrofactutransaccionTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(ParametroFactuTransaccion parametrofactutransaccion:this.parametrofactutransaccions) {
				if(parametrofactutransaccion.getsType().equals(Constantes2.S_TOTALES)) {
					parametrofactutransaccionTotales=parametrofactutransaccion;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				ParametroFactuTransaccionConstantesFunciones.TotalizarValoresFilaParametroFactuTransaccion(this.parametrofactutransaccions,parametrofactutransaccionTotales);
			}
		}
	}		
	
	public void recargarInformacion()throws Exception {
		try {
			sAccionBusqueda="Todos";
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
		}	
	}		
	
	
	public void getParametroFactuTransaccionsFK_IdEmpresa()throws Exception {
		try {
			sAccionBusqueda="FK_IdEmpresa";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroFactuTransaccionsFK_IdSucursal()throws Exception {
		try {
			sAccionBusqueda="FK_IdSucursal";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroFactuTransaccionsFK_IdTransaccionCuentaCoFactura()throws Exception {
		try {
			sAccionBusqueda="FK_IdTransaccionCuentaCoFactura";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroFactuTransaccionsFK_IdTransaccionCuentaCoNotaCredito()throws Exception {
		try {
			sAccionBusqueda="FK_IdTransaccionCuentaCoNotaCredito";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroFactuTransaccionsFK_IdTransaccionCuentaCoNotaVenta()throws Exception {
		try {
			sAccionBusqueda="FK_IdTransaccionCuentaCoNotaVenta";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroFactuTransaccionsFK_IdTransaccionCuentaCoTarjeta()throws Exception {
		try {
			sAccionBusqueda="FK_IdTransaccionCuentaCoTarjeta";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroFactuTransaccionsFK_IdTransaccionCuentaPaFactura()throws Exception {
		try {
			sAccionBusqueda="FK_IdTransaccionCuentaPaFactura";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroFactuTransaccionsFK_IdTransaccionCuentaPaNotaCredito()throws Exception {
		try {
			sAccionBusqueda="FK_IdTransaccionCuentaPaNotaCredito";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroFactuTransaccionsFK_IdTransaccionInvenFactura()throws Exception {
		try {
			sAccionBusqueda="FK_IdTransaccionInvenFactura";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroFactuTransaccionsFK_IdTransaccionInvenNotaCredito()throws Exception {
		try {
			sAccionBusqueda="FK_IdTransaccionInvenNotaCredito";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroFactuTransaccionsFK_IdTransaccionInvenNotaVenta()throws Exception {
		try {
			sAccionBusqueda="FK_IdTransaccionInvenNotaVenta";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	
	
	public void getParametroFactuTransaccionsFK_IdEmpresa(String sFinalQuery,Long id_empresa)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrofactutransaccionLogic.getParametroFactuTransaccionsFK_IdEmpresa(sFinalQuery,this.pagination,id_empresa);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroFactuTransaccionsFK_IdSucursal(String sFinalQuery,Long id_sucursal)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrofactutransaccionLogic.getParametroFactuTransaccionsFK_IdSucursal(sFinalQuery,this.pagination,id_sucursal);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroFactuTransaccionsFK_IdTransaccionCuentaCoFactura(String sFinalQuery,Long id_transaccion_cuenta_co_factura)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrofactutransaccionLogic.getParametroFactuTransaccionsFK_IdTransaccionCuentaCoFactura(sFinalQuery,this.pagination,id_transaccion_cuenta_co_factura);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroFactuTransaccionsFK_IdTransaccionCuentaCoNotaCredito(String sFinalQuery,Long id_transaccion_cuenta_co_nota_credito)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrofactutransaccionLogic.getParametroFactuTransaccionsFK_IdTransaccionCuentaCoNotaCredito(sFinalQuery,this.pagination,id_transaccion_cuenta_co_nota_credito);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroFactuTransaccionsFK_IdTransaccionCuentaCoNotaVenta(String sFinalQuery,Long id_transaccion_cuenta_co_nota_venta)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrofactutransaccionLogic.getParametroFactuTransaccionsFK_IdTransaccionCuentaCoNotaVenta(sFinalQuery,this.pagination,id_transaccion_cuenta_co_nota_venta);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroFactuTransaccionsFK_IdTransaccionCuentaCoTarjeta(String sFinalQuery,Long id_transaccion_cuenta_co_tarjeta)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrofactutransaccionLogic.getParametroFactuTransaccionsFK_IdTransaccionCuentaCoTarjeta(sFinalQuery,this.pagination,id_transaccion_cuenta_co_tarjeta);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroFactuTransaccionsFK_IdTransaccionCuentaPaFactura(String sFinalQuery,Long id_transaccion_cuenta_pa_factura)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrofactutransaccionLogic.getParametroFactuTransaccionsFK_IdTransaccionCuentaPaFactura(sFinalQuery,this.pagination,id_transaccion_cuenta_pa_factura);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroFactuTransaccionsFK_IdTransaccionCuentaPaNotaCredito(String sFinalQuery,Long id_transaccion_cuenta_pa_nota_credito)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrofactutransaccionLogic.getParametroFactuTransaccionsFK_IdTransaccionCuentaPaNotaCredito(sFinalQuery,this.pagination,id_transaccion_cuenta_pa_nota_credito);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroFactuTransaccionsFK_IdTransaccionInvenFactura(String sFinalQuery,Long id_transaccion_inven_factura)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrofactutransaccionLogic.getParametroFactuTransaccionsFK_IdTransaccionInvenFactura(sFinalQuery,this.pagination,id_transaccion_inven_factura);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroFactuTransaccionsFK_IdTransaccionInvenNotaCredito(String sFinalQuery,Long id_transaccion_inven_nota_credito)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrofactutransaccionLogic.getParametroFactuTransaccionsFK_IdTransaccionInvenNotaCredito(sFinalQuery,this.pagination,id_transaccion_inven_nota_credito);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroFactuTransaccionsFK_IdTransaccionInvenNotaVenta(String sFinalQuery,Long id_transaccion_inven_nota_venta)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrofactutransaccionLogic.getParametroFactuTransaccionsFK_IdTransaccionInvenNotaVenta(sFinalQuery,this.pagination,id_transaccion_inven_nota_venta);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	
	public void onLoad()throws Exception {		
		try {		
			isEntroOnLoad=true;
			//INTENTA TRAER DATOS DE BUSQUEDA ANTERIOR
			this.traerDatosBusquedaDesdeSession();
					
			//SINO SE CUMPLE VIENE DE PADRE FOREIGN O BUSQUEDA ANTIGUA
			if(this.sAccionBusqueda.equals("")) {
				this.sAccionBusqueda="Todos";
			}
								
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch (Exception e) {
			throw e;
		}
	}		
	
	public void inicializarPermisosParametroFactuTransaccion() {
		this.isPermisoTodoParametroFactuTransaccion=false;
		this.isPermisoNuevoParametroFactuTransaccion=false;
		this.isPermisoActualizarParametroFactuTransaccion=false;
		this.isPermisoActualizarOriginalParametroFactuTransaccion=false;
		this.isPermisoEliminarParametroFactuTransaccion=false;
		this.isPermisoGuardarCambiosParametroFactuTransaccion=false;
		this.isPermisoConsultaParametroFactuTransaccion=false;
		this.isPermisoBusquedaParametroFactuTransaccion=false;
		this.isPermisoReporteParametroFactuTransaccion=false;		
		this.isPermisoOrdenParametroFactuTransaccion=false;		
		this.isPermisoPaginacionMedioParametroFactuTransaccion=false;		
		this.isPermisoPaginacionAltoParametroFactuTransaccion=false;
		this.isPermisoPaginacionTodoParametroFactuTransaccion=false;
		this.isPermisoCopiarParametroFactuTransaccion=false;		
		this.isPermisoVerFormParametroFactuTransaccion=false;		
		this.isPermisoDuplicarParametroFactuTransaccion=false;		
		this.isPermisoOrdenParametroFactuTransaccion=false;		
	}
	
	public void setPermisosUsuarioParametroFactuTransaccion(Boolean isPermiso) {
		this.isPermisoTodoParametroFactuTransaccion=isPermiso;
		this.isPermisoNuevoParametroFactuTransaccion=isPermiso;
		this.isPermisoActualizarParametroFactuTransaccion=isPermiso;
		this.isPermisoActualizarOriginalParametroFactuTransaccion=isPermiso;
		this.isPermisoEliminarParametroFactuTransaccion=isPermiso;
		this.isPermisoGuardarCambiosParametroFactuTransaccion=isPermiso;
		this.isPermisoConsultaParametroFactuTransaccion=isPermiso;
		this.isPermisoBusquedaParametroFactuTransaccion=isPermiso;
		this.isPermisoReporteParametroFactuTransaccion=isPermiso;
		this.isPermisoOrdenParametroFactuTransaccion=isPermiso;		
		this.isPermisoPaginacionMedioParametroFactuTransaccion=isPermiso;		
		this.isPermisoPaginacionAltoParametroFactuTransaccion=isPermiso;		
		this.isPermisoPaginacionTodoParametroFactuTransaccion=isPermiso;		
		this.isPermisoCopiarParametroFactuTransaccion=isPermiso;		
		this.isPermisoVerFormParametroFactuTransaccion=isPermiso;		
		this.isPermisoDuplicarParametroFactuTransaccion=isPermiso;
		this.isPermisoOrdenParametroFactuTransaccion=isPermiso;
	}
	
	public void setPermisosMantenimientoUsuarioParametroFactuTransaccion(Boolean isPermiso) {
		//this.isPermisoTodoParametroFactuTransaccion=isPermiso;
		this.isPermisoNuevoParametroFactuTransaccion=isPermiso;
		this.isPermisoActualizarParametroFactuTransaccion=isPermiso;
		this.isPermisoActualizarOriginalParametroFactuTransaccion=isPermiso;
		this.isPermisoEliminarParametroFactuTransaccion=isPermiso;
		this.isPermisoGuardarCambiosParametroFactuTransaccion=isPermiso;
		//this.isPermisoConsultaParametroFactuTransaccion=isPermiso;
		//this.isPermisoBusquedaParametroFactuTransaccion=isPermiso;
		//this.isPermisoReporteParametroFactuTransaccion=isPermiso;
		//this.isPermisoOrdenParametroFactuTransaccion=isPermiso;		
		//this.isPermisoPaginacionMedioParametroFactuTransaccion=isPermiso;		
		//this.isPermisoPaginacionAltoParametroFactuTransaccion=isPermiso;		
		//this.isPermisoPaginacionTodoParametroFactuTransaccion=isPermiso;		
		//this.isPermisoCopiarParametroFactuTransaccion=isPermiso;		
		//this.isPermisoDuplicarParametroFactuTransaccion=isPermiso;
		//this.isPermisoOrdenParametroFactuTransaccion=isPermiso;
	}
	
	public void inicializarSetPermisosUsuarioParametroFactuTransaccionClasesRelacionadas() throws Exception {
		ArrayList<String> arrPaginas=new ArrayList<String>();		
		ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
		
		
		if(ParametroFactuTransaccionJInternalFrame.CON_LLAMADA_SIMPLE) {
			this.opcionsRelacionadas.addAll(this.sistemaReturnGeneral.getOpcionsRelacionadas());
			
		} else {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				opcionsFinal=sistemaLogicAdditional.tienePermisosOpcionesEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, arrPaginas);
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
			
			this.opcionsRelacionadas.addAll(opcionsFinal);
		}
		
		
		
	}
	
	public Boolean tienePermisosUsuarioEnPaginaWebParametroFactuTransaccion(String sPagina) throws Exception {
		Boolean tienePermisos=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			tienePermisos=sistemaLogicAdditional.tienePermisosEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, sPagina);
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		
		return tienePermisos;
	}
	
	public void inicializarSetPermisosUsuarioParametroFactuTransaccionClasesRelacionadas(Boolean conPermiso) throws Exception {
		
	}
	
	public Boolean verificarGetPermisosUsuarioParametroFactuTransaccionClaseRelacionada(ArrayList<String> arrPaginasFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioClaseRelacionada(arrPaginasFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public Boolean verificarGetPermisosUsuarioOpcionParametroFactuTransaccionClaseRelacionada(List<Opcion> opcionsFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioOpcionClaseRelacionada(opcionsFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public void actualizarTabsSetPermisosUsuarioParametroFactuTransaccionClasesRelacionadas() throws Exception {
		
	}
	
	public void setPermisosUsuarioParametroFactuTransaccion() throws Exception {
		
		PerfilOpcion perfilOpcionUsuario=new PerfilOpcion();		
		Long idOpcion=this.opcionActual.getId();
		
		if(ParametroFactuTransaccionJInternalFrame.CON_LLAMADA_SIMPLE) {
			perfilOpcionUsuario=this.sistemaReturnGeneral.getPerfilOpcion();
			
		} else {
			if(this.parametrofactutransaccionSessionBean.getEsGuardarRelacionado()) {
				idOpcion=0L;
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				perfilOpcionUsuario=sistemaLogicAdditional.traerPermisosPaginaWebPerfilOpcion(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, ParametroFactuTransaccionConstantesFunciones.SNOMBREOPCION,idOpcion);				
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
		}
		
		if(perfilOpcionUsuario!=null && perfilOpcionUsuario.getId()>0) {
			this.isPermisoNuevoParametroFactuTransaccion=perfilOpcionUsuario.getingreso()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarParametroFactuTransaccion=perfilOpcionUsuario.getmodificacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarOriginalParametroFactuTransaccion=this.isPermisoActualizarParametroFactuTransaccion;
			this.isPermisoEliminarParametroFactuTransaccion=perfilOpcionUsuario.geteliminacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoGuardarCambiosParametroFactuTransaccion=perfilOpcionUsuario.getguardar_cambios()||perfilOpcionUsuario.gettodo();
			this.isPermisoConsultaParametroFactuTransaccion=perfilOpcionUsuario.getconsulta()||perfilOpcionUsuario.gettodo();
			this.isPermisoBusquedaParametroFactuTransaccion=perfilOpcionUsuario.getbusqueda()||perfilOpcionUsuario.gettodo();
			this.isPermisoTodoParametroFactuTransaccion=perfilOpcionUsuario.gettodo()||perfilOpcionUsuario.gettodo();
			this.isPermisoReporteParametroFactuTransaccion=perfilOpcionUsuario.getreporte()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenParametroFactuTransaccion=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionMedioParametroFactuTransaccion=perfilOpcionUsuario.getpaginacion_medio()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionAltoParametroFactuTransaccion=perfilOpcionUsuario.getpaginacion_alto()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionTodoParametroFactuTransaccion=perfilOpcionUsuario.getpaginacion_todo()||perfilOpcionUsuario.gettodo();
			this.isPermisoCopiarParametroFactuTransaccion=perfilOpcionUsuario.getcopiar()||perfilOpcionUsuario.gettodo();
			this.isPermisoVerFormParametroFactuTransaccion=true;//perfilOpcionUsuario.getver_form()||perfilOpcionUsuario.gettodo();
			this.isPermisoDuplicarParametroFactuTransaccion=perfilOpcionUsuario.getduplicar()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenParametroFactuTransaccion=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			
			if(this.parametrofactutransaccionSessionBean.getEsGuardarRelacionado()) {
				this.opcionActual.setId(perfilOpcionUsuario.getid_opcion());
				
				this.jTableDatosParametroFactuTransaccion.setToolTipText(this.jTableDatosParametroFactuTransaccion.getToolTipText()+"_"+perfilOpcionUsuario.getid_opcion());		
			}
		} else {
			this.setPermisosUsuarioParametroFactuTransaccion(false);
		}
		
		//SI SE NECESITA PONER TODOS LOS PERMISOS POR DEFECTO
		//
		
	}
	
	public void setAccionesUsuarioParametroFactuTransaccion(Boolean esParaAccionesFormulario) throws Exception {		
		Reporte reporte=null;
		
		if(!esParaAccionesFormulario) {
			this.accions=new ArrayList<Accion>();
			
			if(ParametroFactuTransaccionJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accions=this.sistemaReturnGeneral.getAccions();
				
				
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accions=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,false);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accions.size()>0) {			
				for(Accion accion:this.accions) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
		
		
					this.tiposAcciones.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAcciones.add(reporte);
			
		} else {
			//ACCIONES FORMULARIO
			this.accionsFormulario=new ArrayList<Accion>();
			
			if(ParametroFactuTransaccionJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accionsFormulario=this.sistemaReturnGeneral.getAccionsFormulario();
			
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accionsFormulario=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,true);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accionsFormulario.size()>0) {			
				for(Accion accion:this.accionsFormulario) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
					
					this.tiposAccionesFormulario.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAccionesFormulario.add(reporte);
		}				
	}	 	
	
	public void setRelacionesUsuarioParametroFactuTransaccion() throws Exception {
		Reporte reporte=null;
		
		
		
		
		//ORDENAR ALFABETICAMENTE
		Collections.sort(this.tiposRelaciones, new ReporteComparator());
		/*
		reporte=new Reporte();
		reporte.setsCodigo(accion.getcodigo());
		reporte.setsDescripcion(accion.getnombre());
			
		this.tiposRelaciones.add(reporte);
		*/
	}	
	
		
	@SuppressWarnings({ "unchecked", "rawtypes" } )
	public void inicializarCombosForeignKeyParametroFactuTransaccionListas()throws Exception {
		try	{						
			
				this.empresasForeignKey=new ArrayList();
				this.sucursalsForeignKey=new ArrayList();
				this.transaccioninvenfacturasForeignKey=new ArrayList();
				this.transaccioninvennotacreditosForeignKey=new ArrayList();
				this.transaccioninvennotaventasForeignKey=new ArrayList();
				this.transaccioncuentacofacturasForeignKey=new ArrayList();
				this.transaccioncuentaconotacreditosForeignKey=new ArrayList();
				this.transaccioncuentaconotaventasForeignKey=new ArrayList();
				this.transaccioncuentacotarjetasForeignKey=new ArrayList();
				this.transaccioncuentapafacturasForeignKey=new ArrayList();
				this.transaccioncuentapanotacreditosForeignKey=new ArrayList();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void cargarCombosTodosForeignKeyParametroFactuTransaccionListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			String sFinalQueryCombo="";
			
			Modulo  moduloActualAux=new Modulo();
			
			if(ParametroFactuTransaccionJInternalFrame.ISLOAD_FKLOTE) {
				this.cargarCombosLoteForeignKeyParametroFactuTransaccionListas(false);
			} else {
			
				this.cargarCombosForeignKeyEmpresaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeySucursalListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTransaccionInvenFacturaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTransaccionInvenNotaCreditoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTransaccionInvenNotaVentaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTransaccionCuentaCoFacturaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTransaccionCuentaCoNotaCreditoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTransaccionCuentaCoNotaVentaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTransaccionCuentaCoTarjetaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTransaccionCuentaPaFacturaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTransaccionCuentaPaNotaCreditoListas(cargarCombosDependencia,sFinalQueryCombo);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	

	public void cargarCombosForeignKeyEmpresaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EmpresaConstantesFunciones.SFINALQUERY;

				this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeySucursalListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=SucursalConstantesFunciones.SFINALQUERY;

				this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransaccionInvenFacturaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.transaccioninvenfacturasForeignKey==null||this.transaccioninvenfacturasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TransaccionConstantesFunciones.getArrayColumnasGlobalesTransaccion(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransaccionConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TransaccionConstantesFunciones.SFINALQUERY;

				this.cargarCombosTransaccionInvenFacturasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransaccionInvenNotaCreditoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.transaccioninvennotacreditosForeignKey==null||this.transaccioninvennotacreditosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TransaccionConstantesFunciones.getArrayColumnasGlobalesTransaccion(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransaccionConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TransaccionConstantesFunciones.SFINALQUERY;

				this.cargarCombosTransaccionInvenNotaCreditosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransaccionInvenNotaVentaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.transaccioninvennotaventasForeignKey==null||this.transaccioninvennotaventasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TransaccionConstantesFunciones.getArrayColumnasGlobalesTransaccion(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransaccionConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TransaccionConstantesFunciones.SFINALQUERY;

				this.cargarCombosTransaccionInvenNotaVentasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransaccionCuentaCoFacturaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.transaccioncuentacofacturasForeignKey==null||this.transaccioncuentacofacturasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TransaccionConstantesFunciones.getArrayColumnasGlobalesTransaccion(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransaccionConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TransaccionConstantesFunciones.SFINALQUERY;

				this.cargarCombosTransaccionCuentaCoFacturasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransaccionCuentaCoNotaCreditoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.transaccioncuentaconotacreditosForeignKey==null||this.transaccioncuentaconotacreditosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TransaccionConstantesFunciones.getArrayColumnasGlobalesTransaccion(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransaccionConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TransaccionConstantesFunciones.SFINALQUERY;

				this.cargarCombosTransaccionCuentaCoNotaCreditosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransaccionCuentaCoNotaVentaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.transaccioncuentaconotaventasForeignKey==null||this.transaccioncuentaconotaventasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TransaccionConstantesFunciones.getArrayColumnasGlobalesTransaccion(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransaccionConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TransaccionConstantesFunciones.SFINALQUERY;

				this.cargarCombosTransaccionCuentaCoNotaVentasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransaccionCuentaCoTarjetaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.transaccioncuentacotarjetasForeignKey==null||this.transaccioncuentacotarjetasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TransaccionConstantesFunciones.getArrayColumnasGlobalesTransaccion(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransaccionConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TransaccionConstantesFunciones.SFINALQUERY;

				this.cargarCombosTransaccionCuentaCoTarjetasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransaccionCuentaPaFacturaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.transaccioncuentapafacturasForeignKey==null||this.transaccioncuentapafacturasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TransaccionConstantesFunciones.getArrayColumnasGlobalesTransaccion(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransaccionConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TransaccionConstantesFunciones.SFINALQUERY;

				this.cargarCombosTransaccionCuentaPaFacturasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransaccionCuentaPaNotaCreditoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.transaccioncuentapanotacreditosForeignKey==null||this.transaccioncuentapanotacreditosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TransaccionConstantesFunciones.getArrayColumnasGlobalesTransaccion(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransaccionConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TransaccionConstantesFunciones.SFINALQUERY;

				this.cargarCombosTransaccionCuentaPaNotaCreditosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarCombosLoteForeignKeyParametroFactuTransaccionListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			Modulo  moduloActualAux=new Modulo();
			
			
			ParametroFactuTransaccionParameterReturnGeneral parametrofactutransaccionReturnGeneral=new ParametroFactuTransaccionParameterReturnGeneral();
						
			


				String finalQueryGlobalEmpresa="";

				if(((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0) && this.parametrofactutransaccionConstantesFunciones.cargarid_empresaParametroFactuTransaccion)
					 || (this.esRecargarFks && this.parametrofactutransaccionConstantesFunciones.cargarid_empresaParametroFactuTransaccion)) {

					if(!this.parametrofactutransaccionSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEmpresa=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

						finalQueryGlobalEmpresa=Funciones.GetFinalQueryAppend(finalQueryGlobalEmpresa, "");
						finalQueryGlobalEmpresa+=EmpresaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEmpresa=" WHERE " + ConstantesSql.ID + "="+parametrofactutransaccionSessionBean.getlidEmpresaActual();
					}
				} else {
					finalQueryGlobalEmpresa="NONE";
				}


				String finalQueryGlobalSucursal="";

				if(((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0) && this.parametrofactutransaccionConstantesFunciones.cargarid_sucursalParametroFactuTransaccion)
					 || (this.esRecargarFks && this.parametrofactutransaccionConstantesFunciones.cargarid_sucursalParametroFactuTransaccion)) {

					if(!this.parametrofactutransaccionSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalSucursal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

						finalQueryGlobalSucursal=Funciones.GetFinalQueryAppend(finalQueryGlobalSucursal, "");
						finalQueryGlobalSucursal+=SucursalConstantesFunciones.SFINALQUERY;

						//this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalSucursal=" WHERE " + ConstantesSql.ID + "="+parametrofactutransaccionSessionBean.getlidSucursalActual();
					}
				} else {
					finalQueryGlobalSucursal="NONE";
				}


				String finalQueryGlobalTransaccionInvenFactura="";

				if(((this.transaccioninvenfacturasForeignKey==null||this.transaccioninvenfacturasForeignKey.size()<=0) && this.parametrofactutransaccionConstantesFunciones.cargarid_transaccion_inven_facturaParametroFactuTransaccion)
					 || (this.esRecargarFks && this.parametrofactutransaccionConstantesFunciones.cargarid_transaccion_inven_facturaParametroFactuTransaccion)) {

					if(!this.parametrofactutransaccionSessionBean.getisBusquedaDesdeForeignKeySesionTransaccionInvenFactura()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TransaccionConstantesFunciones.getArrayColumnasGlobalesTransaccion(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTransaccionInvenFactura=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransaccionConstantesFunciones.TABLENAME);

						finalQueryGlobalTransaccionInvenFactura=Funciones.GetFinalQueryAppend(finalQueryGlobalTransaccionInvenFactura, "");
						finalQueryGlobalTransaccionInvenFactura+=TransaccionConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTransaccionInvenFacturasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTransaccionInvenFactura=" WHERE " + ConstantesSql.ID + "="+parametrofactutransaccionSessionBean.getlidTransaccionInvenFacturaActual();
					}
				} else {
					finalQueryGlobalTransaccionInvenFactura="NONE";
				}


				String finalQueryGlobalTransaccionInvenNotaCredito="";

				if(((this.transaccioninvennotacreditosForeignKey==null||this.transaccioninvennotacreditosForeignKey.size()<=0) && this.parametrofactutransaccionConstantesFunciones.cargarid_transaccion_inven_nota_creditoParametroFactuTransaccion)
					 || (this.esRecargarFks && this.parametrofactutransaccionConstantesFunciones.cargarid_transaccion_inven_nota_creditoParametroFactuTransaccion)) {

					if(!this.parametrofactutransaccionSessionBean.getisBusquedaDesdeForeignKeySesionTransaccionInvenNotaCredito()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TransaccionConstantesFunciones.getArrayColumnasGlobalesTransaccion(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTransaccionInvenNotaCredito=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransaccionConstantesFunciones.TABLENAME);

						finalQueryGlobalTransaccionInvenNotaCredito=Funciones.GetFinalQueryAppend(finalQueryGlobalTransaccionInvenNotaCredito, "");
						finalQueryGlobalTransaccionInvenNotaCredito+=TransaccionConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTransaccionInvenNotaCreditosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTransaccionInvenNotaCredito=" WHERE " + ConstantesSql.ID + "="+parametrofactutransaccionSessionBean.getlidTransaccionInvenNotaCreditoActual();
					}
				} else {
					finalQueryGlobalTransaccionInvenNotaCredito="NONE";
				}


				String finalQueryGlobalTransaccionInvenNotaVenta="";

				if(((this.transaccioninvennotaventasForeignKey==null||this.transaccioninvennotaventasForeignKey.size()<=0) && this.parametrofactutransaccionConstantesFunciones.cargarid_transaccion_inven_nota_ventaParametroFactuTransaccion)
					 || (this.esRecargarFks && this.parametrofactutransaccionConstantesFunciones.cargarid_transaccion_inven_nota_ventaParametroFactuTransaccion)) {

					if(!this.parametrofactutransaccionSessionBean.getisBusquedaDesdeForeignKeySesionTransaccionInvenNotaVenta()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TransaccionConstantesFunciones.getArrayColumnasGlobalesTransaccion(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTransaccionInvenNotaVenta=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransaccionConstantesFunciones.TABLENAME);

						finalQueryGlobalTransaccionInvenNotaVenta=Funciones.GetFinalQueryAppend(finalQueryGlobalTransaccionInvenNotaVenta, "");
						finalQueryGlobalTransaccionInvenNotaVenta+=TransaccionConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTransaccionInvenNotaVentasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTransaccionInvenNotaVenta=" WHERE " + ConstantesSql.ID + "="+parametrofactutransaccionSessionBean.getlidTransaccionInvenNotaVentaActual();
					}
				} else {
					finalQueryGlobalTransaccionInvenNotaVenta="NONE";
				}


				String finalQueryGlobalTransaccionCuentaCoFactura="";

				if(((this.transaccioncuentacofacturasForeignKey==null||this.transaccioncuentacofacturasForeignKey.size()<=0) && this.parametrofactutransaccionConstantesFunciones.cargarid_transaccion_cuenta_co_facturaParametroFactuTransaccion)
					 || (this.esRecargarFks && this.parametrofactutransaccionConstantesFunciones.cargarid_transaccion_cuenta_co_facturaParametroFactuTransaccion)) {

					if(!this.parametrofactutransaccionSessionBean.getisBusquedaDesdeForeignKeySesionTransaccionCuentaCoFactura()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TransaccionConstantesFunciones.getArrayColumnasGlobalesTransaccion(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTransaccionCuentaCoFactura=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransaccionConstantesFunciones.TABLENAME);

						finalQueryGlobalTransaccionCuentaCoFactura=Funciones.GetFinalQueryAppend(finalQueryGlobalTransaccionCuentaCoFactura, "");
						finalQueryGlobalTransaccionCuentaCoFactura+=TransaccionConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTransaccionCuentaCoFacturasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTransaccionCuentaCoFactura=" WHERE " + ConstantesSql.ID + "="+parametrofactutransaccionSessionBean.getlidTransaccionCuentaCoFacturaActual();
					}
				} else {
					finalQueryGlobalTransaccionCuentaCoFactura="NONE";
				}


				String finalQueryGlobalTransaccionCuentaCoNotaCredito="";

				if(((this.transaccioncuentaconotacreditosForeignKey==null||this.transaccioncuentaconotacreditosForeignKey.size()<=0) && this.parametrofactutransaccionConstantesFunciones.cargarid_transaccion_cuenta_co_nota_creditoParametroFactuTransaccion)
					 || (this.esRecargarFks && this.parametrofactutransaccionConstantesFunciones.cargarid_transaccion_cuenta_co_nota_creditoParametroFactuTransaccion)) {

					if(!this.parametrofactutransaccionSessionBean.getisBusquedaDesdeForeignKeySesionTransaccionCuentaCoNotaCredito()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TransaccionConstantesFunciones.getArrayColumnasGlobalesTransaccion(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTransaccionCuentaCoNotaCredito=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransaccionConstantesFunciones.TABLENAME);

						finalQueryGlobalTransaccionCuentaCoNotaCredito=Funciones.GetFinalQueryAppend(finalQueryGlobalTransaccionCuentaCoNotaCredito, "");
						finalQueryGlobalTransaccionCuentaCoNotaCredito+=TransaccionConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTransaccionCuentaCoNotaCreditosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTransaccionCuentaCoNotaCredito=" WHERE " + ConstantesSql.ID + "="+parametrofactutransaccionSessionBean.getlidTransaccionCuentaCoNotaCreditoActual();
					}
				} else {
					finalQueryGlobalTransaccionCuentaCoNotaCredito="NONE";
				}


				String finalQueryGlobalTransaccionCuentaCoNotaVenta="";

				if(((this.transaccioncuentaconotaventasForeignKey==null||this.transaccioncuentaconotaventasForeignKey.size()<=0) && this.parametrofactutransaccionConstantesFunciones.cargarid_transaccion_cuenta_co_nota_ventaParametroFactuTransaccion)
					 || (this.esRecargarFks && this.parametrofactutransaccionConstantesFunciones.cargarid_transaccion_cuenta_co_nota_ventaParametroFactuTransaccion)) {

					if(!this.parametrofactutransaccionSessionBean.getisBusquedaDesdeForeignKeySesionTransaccionCuentaCoNotaVenta()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TransaccionConstantesFunciones.getArrayColumnasGlobalesTransaccion(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTransaccionCuentaCoNotaVenta=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransaccionConstantesFunciones.TABLENAME);

						finalQueryGlobalTransaccionCuentaCoNotaVenta=Funciones.GetFinalQueryAppend(finalQueryGlobalTransaccionCuentaCoNotaVenta, "");
						finalQueryGlobalTransaccionCuentaCoNotaVenta+=TransaccionConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTransaccionCuentaCoNotaVentasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTransaccionCuentaCoNotaVenta=" WHERE " + ConstantesSql.ID + "="+parametrofactutransaccionSessionBean.getlidTransaccionCuentaCoNotaVentaActual();
					}
				} else {
					finalQueryGlobalTransaccionCuentaCoNotaVenta="NONE";
				}


				String finalQueryGlobalTransaccionCuentaCoTarjeta="";

				if(((this.transaccioncuentacotarjetasForeignKey==null||this.transaccioncuentacotarjetasForeignKey.size()<=0) && this.parametrofactutransaccionConstantesFunciones.cargarid_transaccion_cuenta_co_tarjetaParametroFactuTransaccion)
					 || (this.esRecargarFks && this.parametrofactutransaccionConstantesFunciones.cargarid_transaccion_cuenta_co_tarjetaParametroFactuTransaccion)) {

					if(!this.parametrofactutransaccionSessionBean.getisBusquedaDesdeForeignKeySesionTransaccionCuentaCoTarjeta()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TransaccionConstantesFunciones.getArrayColumnasGlobalesTransaccion(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTransaccionCuentaCoTarjeta=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransaccionConstantesFunciones.TABLENAME);

						finalQueryGlobalTransaccionCuentaCoTarjeta=Funciones.GetFinalQueryAppend(finalQueryGlobalTransaccionCuentaCoTarjeta, "");
						finalQueryGlobalTransaccionCuentaCoTarjeta+=TransaccionConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTransaccionCuentaCoTarjetasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTransaccionCuentaCoTarjeta=" WHERE " + ConstantesSql.ID + "="+parametrofactutransaccionSessionBean.getlidTransaccionCuentaCoTarjetaActual();
					}
				} else {
					finalQueryGlobalTransaccionCuentaCoTarjeta="NONE";
				}


				String finalQueryGlobalTransaccionCuentaPaFactura="";

				if(((this.transaccioncuentapafacturasForeignKey==null||this.transaccioncuentapafacturasForeignKey.size()<=0) && this.parametrofactutransaccionConstantesFunciones.cargarid_transaccion_cuenta_pa_facturaParametroFactuTransaccion)
					 || (this.esRecargarFks && this.parametrofactutransaccionConstantesFunciones.cargarid_transaccion_cuenta_pa_facturaParametroFactuTransaccion)) {

					if(!this.parametrofactutransaccionSessionBean.getisBusquedaDesdeForeignKeySesionTransaccionCuentaPaFactura()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TransaccionConstantesFunciones.getArrayColumnasGlobalesTransaccion(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTransaccionCuentaPaFactura=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransaccionConstantesFunciones.TABLENAME);

						finalQueryGlobalTransaccionCuentaPaFactura=Funciones.GetFinalQueryAppend(finalQueryGlobalTransaccionCuentaPaFactura, "");
						finalQueryGlobalTransaccionCuentaPaFactura+=TransaccionConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTransaccionCuentaPaFacturasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTransaccionCuentaPaFactura=" WHERE " + ConstantesSql.ID + "="+parametrofactutransaccionSessionBean.getlidTransaccionCuentaPaFacturaActual();
					}
				} else {
					finalQueryGlobalTransaccionCuentaPaFactura="NONE";
				}


				String finalQueryGlobalTransaccionCuentaPaNotaCredito="";

				if(((this.transaccioncuentapanotacreditosForeignKey==null||this.transaccioncuentapanotacreditosForeignKey.size()<=0) && this.parametrofactutransaccionConstantesFunciones.cargarid_transaccion_cuenta_pa_nota_creditoParametroFactuTransaccion)
					 || (this.esRecargarFks && this.parametrofactutransaccionConstantesFunciones.cargarid_transaccion_cuenta_pa_nota_creditoParametroFactuTransaccion)) {

					if(!this.parametrofactutransaccionSessionBean.getisBusquedaDesdeForeignKeySesionTransaccionCuentaPaNotaCredito()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TransaccionConstantesFunciones.getArrayColumnasGlobalesTransaccion(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTransaccionCuentaPaNotaCredito=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransaccionConstantesFunciones.TABLENAME);

						finalQueryGlobalTransaccionCuentaPaNotaCredito=Funciones.GetFinalQueryAppend(finalQueryGlobalTransaccionCuentaPaNotaCredito, "");
						finalQueryGlobalTransaccionCuentaPaNotaCredito+=TransaccionConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTransaccionCuentaPaNotaCreditosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTransaccionCuentaPaNotaCredito=" WHERE " + ConstantesSql.ID + "="+parametrofactutransaccionSessionBean.getlidTransaccionCuentaPaNotaCreditoActual();
					}
				} else {
					finalQueryGlobalTransaccionCuentaPaNotaCredito="NONE";
				}
			
			//ARCHITECTURE			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				parametrofactutransaccionReturnGeneral=parametrofactutransaccionLogic.cargarCombosLoteForeignKeyParametroFactuTransaccion(finalQueryGlobalEmpresa,finalQueryGlobalSucursal,finalQueryGlobalTransaccionInvenFactura,finalQueryGlobalTransaccionInvenNotaCredito,finalQueryGlobalTransaccionInvenNotaVenta,finalQueryGlobalTransaccionCuentaCoFactura,finalQueryGlobalTransaccionCuentaCoNotaCredito,finalQueryGlobalTransaccionCuentaCoNotaVenta,finalQueryGlobalTransaccionCuentaCoTarjeta,finalQueryGlobalTransaccionCuentaPaFactura,finalQueryGlobalTransaccionCuentaPaNotaCredito);//WithConnection
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}			
			//ARCHITECTURE
			
			

			if(!finalQueryGlobalEmpresa.equals("NONE")) {
				this.empresasForeignKey=parametrofactutransaccionReturnGeneral.getempresasForeignKey();
			}

			if(!finalQueryGlobalSucursal.equals("NONE")) {
				this.sucursalsForeignKey=parametrofactutransaccionReturnGeneral.getsucursalsForeignKey();
			}

			if(!finalQueryGlobalTransaccionInvenFactura.equals("NONE")) {
				this.transaccioninvenfacturasForeignKey=parametrofactutransaccionReturnGeneral.gettransaccioninvenfacturasForeignKey();
			}

			if(!finalQueryGlobalTransaccionInvenNotaCredito.equals("NONE")) {
				this.transaccioninvennotacreditosForeignKey=parametrofactutransaccionReturnGeneral.gettransaccioninvennotacreditosForeignKey();
			}

			if(!finalQueryGlobalTransaccionInvenNotaVenta.equals("NONE")) {
				this.transaccioninvennotaventasForeignKey=parametrofactutransaccionReturnGeneral.gettransaccioninvennotaventasForeignKey();
			}

			if(!finalQueryGlobalTransaccionCuentaCoFactura.equals("NONE")) {
				this.transaccioncuentacofacturasForeignKey=parametrofactutransaccionReturnGeneral.gettransaccioncuentacofacturasForeignKey();
			}

			if(!finalQueryGlobalTransaccionCuentaCoNotaCredito.equals("NONE")) {
				this.transaccioncuentaconotacreditosForeignKey=parametrofactutransaccionReturnGeneral.gettransaccioncuentaconotacreditosForeignKey();
			}

			if(!finalQueryGlobalTransaccionCuentaCoNotaVenta.equals("NONE")) {
				this.transaccioncuentaconotaventasForeignKey=parametrofactutransaccionReturnGeneral.gettransaccioncuentaconotaventasForeignKey();
			}

			if(!finalQueryGlobalTransaccionCuentaCoTarjeta.equals("NONE")) {
				this.transaccioncuentacotarjetasForeignKey=parametrofactutransaccionReturnGeneral.gettransaccioncuentacotarjetasForeignKey();
			}

			if(!finalQueryGlobalTransaccionCuentaPaFactura.equals("NONE")) {
				this.transaccioncuentapafacturasForeignKey=parametrofactutransaccionReturnGeneral.gettransaccioncuentapafacturasForeignKey();
			}

			if(!finalQueryGlobalTransaccionCuentaPaNotaCredito.equals("NONE")) {
				this.transaccioncuentapanotacreditosForeignKey=parametrofactutransaccionReturnGeneral.gettransaccioncuentapanotacreditosForeignKey();
			}
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void addItemDefectoCombosTodosForeignKeyParametroFactuTransaccion()throws Exception {
		try {
			
			this.addItemDefectoCombosForeignKeyEmpresa();
			this.addItemDefectoCombosForeignKeySucursal();
			this.addItemDefectoCombosForeignKeyTransaccionInvenFactura();
			this.addItemDefectoCombosForeignKeyTransaccionInvenNotaCredito();
			this.addItemDefectoCombosForeignKeyTransaccionInvenNotaVenta();
			this.addItemDefectoCombosForeignKeyTransaccionCuentaCoFactura();
			this.addItemDefectoCombosForeignKeyTransaccionCuentaCoNotaCredito();
			this.addItemDefectoCombosForeignKeyTransaccionCuentaCoNotaVenta();
			this.addItemDefectoCombosForeignKeyTransaccionCuentaCoTarjeta();
			this.addItemDefectoCombosForeignKeyTransaccionCuentaPaFactura();
			this.addItemDefectoCombosForeignKeyTransaccionCuentaPaNotaCredito();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	



	public void addItemDefectoCombosForeignKeyEmpresa()throws Exception {
		try {
			if(this.parametrofactutransaccionSessionBean==null) {
				this.parametrofactutransaccionSessionBean=new ParametroFactuTransaccionSessionBean();
			}

			if(!this.parametrofactutransaccionSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				Empresa empresa=new Empresa();
				EmpresaConstantesFunciones.setEmpresaDescripcion(empresa,Constantes.SMENSAJE_ESCOJA_OPCION);
				empresa.setId(null);

				if(!EmpresaConstantesFunciones.ExisteEnLista(this.empresasForeignKey,empresa,true)) {

					this.empresasForeignKey.add(0,empresa);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeySucursal()throws Exception {
		try {

			if(!this.parametrofactutransaccionSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				Sucursal sucursal=new Sucursal();
				SucursalConstantesFunciones.setSucursalDescripcion(sucursal,Constantes.SMENSAJE_ESCOJA_OPCION);
				sucursal.setId(null);

				if(!SucursalConstantesFunciones.ExisteEnLista(this.sucursalsForeignKey,sucursal,true)) {

					this.sucursalsForeignKey.add(0,sucursal);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTransaccionInvenFactura()throws Exception {
		try {

			if(!this.parametrofactutransaccionSessionBean.getisBusquedaDesdeForeignKeySesionTransaccionInvenFactura()) {
				Transaccion transaccioninvenfactura=new Transaccion();
				TransaccionConstantesFunciones.setTransaccionDescripcion(transaccioninvenfactura,Constantes.SMENSAJE_ESCOJA_OPCION);
				transaccioninvenfactura.setId(null);

				if(!TransaccionConstantesFunciones.ExisteEnLista(this.transaccioninvenfacturasForeignKey,transaccioninvenfactura,true)) {

					this.transaccioninvenfacturasForeignKey.add(0,transaccioninvenfactura);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTransaccionInvenNotaCredito()throws Exception {
		try {

			if(!this.parametrofactutransaccionSessionBean.getisBusquedaDesdeForeignKeySesionTransaccionInvenNotaCredito()) {
				Transaccion transaccioninvennotacredito=new Transaccion();
				TransaccionConstantesFunciones.setTransaccionDescripcion(transaccioninvennotacredito,Constantes.SMENSAJE_ESCOJA_OPCION);
				transaccioninvennotacredito.setId(null);

				if(!TransaccionConstantesFunciones.ExisteEnLista(this.transaccioninvennotacreditosForeignKey,transaccioninvennotacredito,true)) {

					this.transaccioninvennotacreditosForeignKey.add(0,transaccioninvennotacredito);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTransaccionInvenNotaVenta()throws Exception {
		try {

			if(!this.parametrofactutransaccionSessionBean.getisBusquedaDesdeForeignKeySesionTransaccionInvenNotaVenta()) {
				Transaccion transaccioninvennotaventa=new Transaccion();
				TransaccionConstantesFunciones.setTransaccionDescripcion(transaccioninvennotaventa,Constantes.SMENSAJE_ESCOJA_OPCION);
				transaccioninvennotaventa.setId(null);

				if(!TransaccionConstantesFunciones.ExisteEnLista(this.transaccioninvennotaventasForeignKey,transaccioninvennotaventa,true)) {

					this.transaccioninvennotaventasForeignKey.add(0,transaccioninvennotaventa);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTransaccionCuentaCoFactura()throws Exception {
		try {

			if(!this.parametrofactutransaccionSessionBean.getisBusquedaDesdeForeignKeySesionTransaccionCuentaCoFactura()) {
				Transaccion transaccioncuentacofactura=new Transaccion();
				TransaccionConstantesFunciones.setTransaccionDescripcion(transaccioncuentacofactura,Constantes.SMENSAJE_ESCOJA_OPCION);
				transaccioncuentacofactura.setId(null);

				if(!TransaccionConstantesFunciones.ExisteEnLista(this.transaccioncuentacofacturasForeignKey,transaccioncuentacofactura,true)) {

					this.transaccioncuentacofacturasForeignKey.add(0,transaccioncuentacofactura);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTransaccionCuentaCoNotaCredito()throws Exception {
		try {

			if(!this.parametrofactutransaccionSessionBean.getisBusquedaDesdeForeignKeySesionTransaccionCuentaCoNotaCredito()) {
				Transaccion transaccioncuentaconotacredito=new Transaccion();
				TransaccionConstantesFunciones.setTransaccionDescripcion(transaccioncuentaconotacredito,Constantes.SMENSAJE_ESCOJA_OPCION);
				transaccioncuentaconotacredito.setId(null);

				if(!TransaccionConstantesFunciones.ExisteEnLista(this.transaccioncuentaconotacreditosForeignKey,transaccioncuentaconotacredito,true)) {

					this.transaccioncuentaconotacreditosForeignKey.add(0,transaccioncuentaconotacredito);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTransaccionCuentaCoNotaVenta()throws Exception {
		try {

			if(!this.parametrofactutransaccionSessionBean.getisBusquedaDesdeForeignKeySesionTransaccionCuentaCoNotaVenta()) {
				Transaccion transaccioncuentaconotaventa=new Transaccion();
				TransaccionConstantesFunciones.setTransaccionDescripcion(transaccioncuentaconotaventa,Constantes.SMENSAJE_ESCOJA_OPCION);
				transaccioncuentaconotaventa.setId(null);

				if(!TransaccionConstantesFunciones.ExisteEnLista(this.transaccioncuentaconotaventasForeignKey,transaccioncuentaconotaventa,true)) {

					this.transaccioncuentaconotaventasForeignKey.add(0,transaccioncuentaconotaventa);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTransaccionCuentaCoTarjeta()throws Exception {
		try {

			if(!this.parametrofactutransaccionSessionBean.getisBusquedaDesdeForeignKeySesionTransaccionCuentaCoTarjeta()) {
				Transaccion transaccioncuentacotarjeta=new Transaccion();
				TransaccionConstantesFunciones.setTransaccionDescripcion(transaccioncuentacotarjeta,Constantes.SMENSAJE_ESCOJA_OPCION);
				transaccioncuentacotarjeta.setId(null);

				if(!TransaccionConstantesFunciones.ExisteEnLista(this.transaccioncuentacotarjetasForeignKey,transaccioncuentacotarjeta,true)) {

					this.transaccioncuentacotarjetasForeignKey.add(0,transaccioncuentacotarjeta);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTransaccionCuentaPaFactura()throws Exception {
		try {

			if(!this.parametrofactutransaccionSessionBean.getisBusquedaDesdeForeignKeySesionTransaccionCuentaPaFactura()) {
				Transaccion transaccioncuentapafactura=new Transaccion();
				TransaccionConstantesFunciones.setTransaccionDescripcion(transaccioncuentapafactura,Constantes.SMENSAJE_ESCOJA_OPCION);
				transaccioncuentapafactura.setId(null);

				if(!TransaccionConstantesFunciones.ExisteEnLista(this.transaccioncuentapafacturasForeignKey,transaccioncuentapafactura,true)) {

					this.transaccioncuentapafacturasForeignKey.add(0,transaccioncuentapafactura);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTransaccionCuentaPaNotaCredito()throws Exception {
		try {

			if(!this.parametrofactutransaccionSessionBean.getisBusquedaDesdeForeignKeySesionTransaccionCuentaPaNotaCredito()) {
				Transaccion transaccioncuentapanotacredito=new Transaccion();
				TransaccionConstantesFunciones.setTransaccionDescripcion(transaccioncuentapanotacredito,Constantes.SMENSAJE_ESCOJA_OPCION);
				transaccioncuentapanotacredito.setId(null);

				if(!TransaccionConstantesFunciones.ExisteEnLista(this.transaccioncuentapanotacreditosForeignKey,transaccioncuentapanotacredito,true)) {

					this.transaccioncuentapanotacreditosForeignKey.add(0,transaccioncuentapanotacredito);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void initActionsCombosTodosForeignKeyParametroFactuTransaccion()throws Exception {
		try {
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void initActionsCombosTodosForeignKeyParametroFactuTransaccion(String sFormularioTipoBusqueda)throws Exception {
		try {
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	


	
	


	
	public void setVariablesGlobalesCombosForeignKeyParametroFactuTransaccion()throws Exception {	
		try {
			if(this.parametroGeneralUsuario!=null && this.parametroGeneralUsuario.getId()>0) {
			
				this.setActualEmpresaForeignKey(this.parametroGeneralUsuario.getid_empresa(),false,"Formulario");
				this.setActualSucursalForeignKey(this.parametroGeneralUsuario.getid_sucursal(),false,"Formulario");
			
			
			}
			
			//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
			this.setVariablesGlobalesAuxiliaresCombosForeignKeyParametroFactuTransaccion();
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToFormularioForeignKeyParametroFactuTransaccion(ParametroFactuTransaccion parametrofactutransaccion)throws Exception {	
		try {
			
			this.setActualTransaccionInvenFacturaForeignKey(parametrofactutransaccion.getid_transaccion_inven_factura(),false,"Formulario");
			this.setActualTransaccionInvenNotaCreditoForeignKey(parametrofactutransaccion.getid_transaccion_inven_nota_credito(),false,"Formulario");
			this.setActualTransaccionInvenNotaVentaForeignKey(parametrofactutransaccion.getid_transaccion_inven_nota_venta(),false,"Formulario");
			this.setActualTransaccionCuentaCoFacturaForeignKey(parametrofactutransaccion.getid_transaccion_cuenta_co_factura(),false,"Formulario");
			this.setActualTransaccionCuentaCoNotaCreditoForeignKey(parametrofactutransaccion.getid_transaccion_cuenta_co_nota_credito(),false,"Formulario");
			this.setActualTransaccionCuentaCoNotaVentaForeignKey(parametrofactutransaccion.getid_transaccion_cuenta_co_nota_venta(),false,"Formulario");
			this.setActualTransaccionCuentaCoTarjetaForeignKey(parametrofactutransaccion.getid_transaccion_cuenta_co_tarjeta(),false,"Formulario");
			this.setActualTransaccionCuentaPaFacturaForeignKey(parametrofactutransaccion.getid_transaccion_cuenta_pa_factura(),false,"Formulario");
			this.setActualTransaccionCuentaPaNotaCreditoForeignKey(parametrofactutransaccion.getid_transaccion_cuenta_pa_nota_credito(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToListasForeignKeyParametroFactuTransaccion(ParametroFactuTransaccion parametrofactutransaccion,String sTipoEvento)throws Exception {	
		try {
			
			
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	/*
	public void setVariablesCombosFromBeanForeignKeyParametroFactuTransaccion()throws Exception {	
		try {
			
			this.setActualTransaccionInvenFacturaForeignKey(this.parametrofactutransaccionConstantesFunciones.getid_transaccion_inven_factura(),false,"Formulario");
			this.setActualTransaccionInvenNotaCreditoForeignKey(this.parametrofactutransaccionConstantesFunciones.getid_transaccion_inven_nota_credito(),false,"Formulario");
			this.setActualTransaccionInvenNotaVentaForeignKey(this.parametrofactutransaccionConstantesFunciones.getid_transaccion_inven_nota_venta(),false,"Formulario");
			this.setActualTransaccionCuentaCoFacturaForeignKey(this.parametrofactutransaccionConstantesFunciones.getid_transaccion_cuenta_co_factura(),false,"Formulario");
			this.setActualTransaccionCuentaCoNotaCreditoForeignKey(this.parametrofactutransaccionConstantesFunciones.getid_transaccion_cuenta_co_nota_credito(),false,"Formulario");
			this.setActualTransaccionCuentaCoNotaVentaForeignKey(this.parametrofactutransaccionConstantesFunciones.getid_transaccion_cuenta_co_nota_venta(),false,"Formulario");
			this.setActualTransaccionCuentaCoTarjetaForeignKey(this.parametrofactutransaccionConstantesFunciones.getid_transaccion_cuenta_co_tarjeta(),false,"Formulario");
			this.setActualTransaccionCuentaPaFacturaForeignKey(this.parametrofactutransaccionConstantesFunciones.getid_transaccion_cuenta_pa_factura(),false,"Formulario");
			this.setActualTransaccionCuentaPaNotaCreditoForeignKey(this.parametrofactutransaccionConstantesFunciones.getid_transaccion_cuenta_pa_nota_credito(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	*/
	
	public void setVariablesGlobalesAuxiliaresCombosForeignKeyParametroFactuTransaccion()throws Exception {	
		try {
			
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesDefaultCombosForeignKeyParametroFactuTransaccion()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesParametroCombosForeignKeyParametroFactuTransaccion()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void cargarCombosParametroParametroFactuTransaccion()throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			//this.cargarDatosCliente();
			
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
		
	public void cargarCombosFrameForeignKeyParametroFactuTransaccion()throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey("Todos");
			this.cargarCombosFrameSucursalsForeignKey("Todos");
			this.cargarCombosFrameTransaccionInvenFacturasForeignKey("Todos");
			this.cargarCombosFrameTransaccionInvenNotaCreditosForeignKey("Todos");
			this.cargarCombosFrameTransaccionInvenNotaVentasForeignKey("Todos");
			this.cargarCombosFrameTransaccionCuentaCoFacturasForeignKey("Todos");
			this.cargarCombosFrameTransaccionCuentaCoNotaCreditosForeignKey("Todos");
			this.cargarCombosFrameTransaccionCuentaCoNotaVentasForeignKey("Todos");
			this.cargarCombosFrameTransaccionCuentaCoTarjetasForeignKey("Todos");
			this.cargarCombosFrameTransaccionCuentaPaFacturasForeignKey("Todos");
			this.cargarCombosFrameTransaccionCuentaPaNotaCreditosForeignKey("Todos");

		} catch(Exception e) {
			throw e;
		}		
	}		
	
	public void cargarCombosFrameForeignKeyParametroFactuTransaccion(String sFormularioTipoBusqueda)throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameSucursalsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTransaccionInvenFacturasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTransaccionInvenNotaCreditosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTransaccionInvenNotaVentasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTransaccionCuentaCoFacturasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTransaccionCuentaCoNotaCreditosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTransaccionCuentaCoNotaVentasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTransaccionCuentaCoTarjetasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTransaccionCuentaPaFacturasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTransaccionCuentaPaNotaCreditosForeignKey(sFormularioTipoBusqueda);

		} catch(Exception e) {
			throw e;
		}		
	}	
	
	public void setItemDefectoCombosForeignKeyParametroFactuTransaccion()throws Exception {
		try {
			



			if(this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_empresaParametroFactuTransaccion!=null && this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_empresaParametroFactuTransaccion.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_empresaParametroFactuTransaccion.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_sucursalParametroFactuTransaccion!=null && this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_sucursalParametroFactuTransaccion.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_sucursalParametroFactuTransaccion.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_inven_facturaParametroFactuTransaccion!=null && this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_inven_facturaParametroFactuTransaccion.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_inven_facturaParametroFactuTransaccion.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_inven_nota_creditoParametroFactuTransaccion!=null && this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_inven_nota_creditoParametroFactuTransaccion.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_inven_nota_creditoParametroFactuTransaccion.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_inven_nota_ventaParametroFactuTransaccion!=null && this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_inven_nota_ventaParametroFactuTransaccion.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_inven_nota_ventaParametroFactuTransaccion.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_cuenta_co_facturaParametroFactuTransaccion!=null && this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_cuenta_co_facturaParametroFactuTransaccion.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_cuenta_co_facturaParametroFactuTransaccion.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_cuenta_co_nota_creditoParametroFactuTransaccion!=null && this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_cuenta_co_nota_creditoParametroFactuTransaccion.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_cuenta_co_nota_creditoParametroFactuTransaccion.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_cuenta_co_nota_ventaParametroFactuTransaccion!=null && this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_cuenta_co_nota_ventaParametroFactuTransaccion.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_cuenta_co_nota_ventaParametroFactuTransaccion.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_cuenta_co_tarjetaParametroFactuTransaccion!=null && this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_cuenta_co_tarjetaParametroFactuTransaccion.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_cuenta_co_tarjetaParametroFactuTransaccion.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_cuenta_pa_facturaParametroFactuTransaccion!=null && this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_cuenta_pa_facturaParametroFactuTransaccion.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_cuenta_pa_facturaParametroFactuTransaccion.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_cuenta_pa_nota_creditoParametroFactuTransaccion!=null && this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_cuenta_pa_nota_creditoParametroFactuTransaccion.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_cuenta_pa_nota_creditoParametroFactuTransaccion.setSelectedIndex(0);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	






















	
	

	public ParametroFactuTransaccionBeanSwingJInternalFrame() throws Exception {
		super(false,PaginaTipo.PRINCIPAL);
	}
	
	public ParametroFactuTransaccionBeanSwingJInternalFrame(Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
	}
	
	public ParametroFactuTransaccionBeanSwingJInternalFrame(Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
		
		this.parametrofactutransaccionSessionBean=new ParametroFactuTransaccionSessionBean(); 
		this.parametrofactutransaccionConstantesFunciones=new ParametroFactuTransaccionConstantesFunciones(); 
		this.parametrofactutransaccionBean=new ParametroFactuTransaccion();//(this.parametrofactutransaccionConstantesFunciones); 		
		this.parametrofactutransaccionReturnGeneral=new ParametroFactuTransaccionParameterReturnGeneral(); 
		
		this.parametrofactutransaccionSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
		this.parametrofactutransaccionSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
				
	}
	
	public ParametroFactuTransaccionBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,cargarTodosDatos);
	}
		
	public ParametroFactuTransaccionBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,false,false,cargarRelaciones,cargarTodosDatos);
	}	
	
	public ParametroFactuTransaccionBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,PaginaTipo paginaTipo,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos) throws Exception //Boolean esParaBusquedaForeignKey
    {
		super(jdesktopPane,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		try {
			
			this.permiteRecargarForm=false;
			
			this.startProcessParametroFactuTransaccion(true);
			
			Boolean esParaBusquedaForeignKey=false;//ANTES USADO COMO PARAMETRO DEL CONSTRUCTOR
			
			if(paginaTipo.equals(PaginaTipo.BUSQUEDA)) {
				esParaBusquedaForeignKey=true;
			}
			
			
			
			//SE ASIGNA EN CLASE PADRE
			/*
			this.parametroGeneralSg=parametroGeneralSg;		
			this.parametroGeneralUsuario=parametroGeneralUsuario;	
			this.usuarioActual=usuarioActual;
			this.moduloActual=moduloActual;
			*/						
			
			long start_time=0;
			long end_time=0;
			
			if(Constantes2.ISDEVELOPING2) {
				start_time = System.currentTimeMillis();
			}
			
			if(!cargarTodosDatos) {
				this.sAccionBusqueda="NINGUNO";
			}
			
			this.parametrofactutransaccionConstantesFunciones=new ParametroFactuTransaccionConstantesFunciones(); 
			this.parametrofactutransaccionBean=new ParametroFactuTransaccion();//this.parametrofactutransaccionConstantesFunciones); 			
			this.parametrofactutransaccionReturnGeneral=new ParametroFactuTransaccionParameterReturnGeneral(); 
		
			ParametroFactuTransaccionBeanSwingJInternalFrameAdditional.CargaInicialInicio(this, "NORMAL", null);
			
			this.setTitle(Funciones.GetTituloSistema(this.parametroGeneralSg,this.moduloActual,this.usuarioActual,"Parametro Transaccion  Mantenimiento",paginaTipo));			
			
			this.conTotales=false;
			
			
			
			this.parametrofactutransaccion=new ParametroFactuTransaccion();
			this.parametrofactutransaccions = new ArrayList<ParametroFactuTransaccion>();
			this.parametrofactutransaccionsAux = new ArrayList<ParametroFactuTransaccion>();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic=new ParametroFactuTransaccionLogic();
				this.parametrofactutransaccionLogic.getNewConnexionToDeep("");
			}
			
			//this.parametrofactutransaccionSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
			//this.parametrofactutransaccionSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
			
			this.jDesktopPane=jdesktopPane;
			
			if(this.jDesktopPane.getClass().equals(JDesktopPaneMe.class)) {
				this.constantes2=((JDesktopPaneMe)this.jDesktopPane).constantes2;
			}
			
			if(!Constantes.CON_VARIAS_VENTANAS) {
    			MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameDetalleFormParametroFactuTransaccion);
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameReporteDinamicoParametroFactuTransaccion!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoParametroFactuTransaccion);	
					}
					
					if(this.jInternalFrameImportacionParametroFactuTransaccion!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionParametroFactuTransaccion);							
					}
					
				}
				
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameOrderByParametroFactuTransaccion!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameOrderByParametroFactuTransaccion);					
					}
					
				}
			}
			
			//DETALLE DATOS
			if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) { //this.conCargarFormDetalle) {
				this.jDesktopPane.add(this.jInternalFrameDetalleFormParametroFactuTransaccion);
				this.jInternalFrameDetalleFormParametroFactuTransaccion.setVisible(false);
				this.jInternalFrameDetalleFormParametroFactuTransaccion.setSelected(false);						
			}
			
			if(!this.conCargarMinimo) {
				
				//REPORTE DINAMICO
				if(this.jInternalFrameReporteDinamicoParametroFactuTransaccion!=null) {
					this.jDesktopPane.add(this.jInternalFrameReporteDinamicoParametroFactuTransaccion);
					this.jInternalFrameReporteDinamicoParametroFactuTransaccion.setVisible(false);
					this.jInternalFrameReporteDinamicoParametroFactuTransaccion.setSelected(false);
				}
				
				//IMPORTACION
				if(this.jInternalFrameImportacionParametroFactuTransaccion!=null) {
					this.jDesktopPane.add(this.jInternalFrameImportacionParametroFactuTransaccion);
					this.jInternalFrameImportacionParametroFactuTransaccion.setVisible(false);
					this.jInternalFrameImportacionParametroFactuTransaccion.setSelected(false);
				}
				
				
			}
			
			
			if(!this.conCargarMinimo) {
				
				if(this.jInternalFrameOrderByParametroFactuTransaccion!=null) {
					this.jDesktopPane.add(this.jInternalFrameOrderByParametroFactuTransaccion);
					this.jInternalFrameOrderByParametroFactuTransaccion.setVisible(false);
					this.jInternalFrameOrderByParametroFactuTransaccion.setSelected(false);				
				}
				
			}
			
			
			//this.esParaBusquedaForeignKey=false;
			this.esParaBusquedaForeignKey=esParaBusquedaForeignKey;
			
			this.invalidValues=new InvalidValue[0];
			
			
			
			this.idParametroFactuTransaccionActual=0L;
			this.rowIndexActual=0;
			
			
			this.iNumeroPaginacionPagina=0;
			this.iNumeroPaginacion=ParametroFactuTransaccionConstantesFunciones.INUMEROPAGINACION;
			this.pagination=new Pagination();
			this.datosCliente=new DatosCliente();
			this.lIdUsuarioSesion=0L;	
			this.sTipoArchivoReporte="";
			this.sTipoArchivoReporteDinamico="";
			this.sTipoReporte="";
			this.sTipoReporteDinamico="";
			this.sTipoPaginacion="";
			this.sTipoRelacion="";
			this.sTipoAccion="";
			this.sTipoAccionFormulario="";
			this.sTipoSeleccionar="";			
			this.sDetalleReporte="";
			this.sTipoReporteExtra="";
			this.sValorCampoGeneral="";
			this.sPathReporteDinamico="";			
			
			this.isMostrarNumeroPaginacion=false;
			this.isSeleccionarTodos=false;
			this.isSeleccionados=false;
			this.conGraficoReporte=false;
			this.isPostAccionNuevo=false;
			this.isPostAccionSinCerrar=false;
			this.isPostAccionSinMensaje=false;
			this.esReporteDinamico=false;
			this.esRecargarFks=false;
			this.esReporteAccionProceso=false;
			
			this.parametrofactutransaccionReturnGeneral=new ParametroFactuTransaccionParameterReturnGeneral();
			
			this.parametrofactutransaccionParameterGeneral=new ParametroFactuTransaccionParameterReturnGeneral();
			
			
			
			this.sistemaLogicAdditional=new SistemaLogicAdditional();
			
			this.sistemaLogicAdditional.setConnexion(this.parametrofactutransaccionLogic.getConnexion());			
			
			
			
			
			
			
			
			//VERIFICAR GLOBAL
			this.cargarDatosCliente();			
			
			
			if(!this.parametrofactutransaccionSessionBean.getEsGuardarRelacionado()) {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarLicenciaCliente(this.datosCliente,this.moduloActual,this.usuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_CONTROLGLOBAL);
					}
					
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}			
			
			//VERIFICAR GLOBAL
			
			//VERIFICAR SESSION ACTUAL
			//this.cargarDatosCliente();
			
			this.sistemaReturnGeneral=new SistemaParameterReturnGeneral();
			
			SistemaParameterReturnGeneralAdditional.inicializarSinSeguridad(this.sistemaReturnGeneral);
			
			if(ParametroFactuTransaccionJInternalFrame.CON_LLAMADA_SIMPLE) {
				if(this.parametrofactutransaccionSessionBean.getEsGuardarRelacionado()) {
					this.opcionActual.setId(0L);
					
					//idOpcion=0L;					
				}
				
				ArrayList<String> arrPaginas=new ArrayList<String>();		
				ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
				
		
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					//this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActualWithConnection(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,ParametroFactuTransaccionConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.parametrofactutransaccionSessionBean.getEsGuardarRelacionado(),this.parametrofactutransaccionSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,ParametroFactuTransaccionConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.parametrofactutransaccionSessionBean.getEsGuardarRelacionado(),this.parametrofactutransaccionSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					if(!this.sistemaReturnGeneral.getEsValidado()) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
					//FALTA
				}
			} else { 
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			} 
			//VERIFICAR SESSION ACTUAL
			
			
			this.sVisibilidadTablaBusquedas="table-row";
			this.sVisibilidadTablaElementos="none";
			this.sVisibilidadTablaAcciones="none";
			
			this.isVisibilidadCeldaNuevoParametroFactuTransaccion=false;
			this.isVisibilidadCeldaDuplicarParametroFactuTransaccion=true;
			this.isVisibilidadCeldaCopiarParametroFactuTransaccion=true;
			this.isVisibilidadCeldaVerFormParametroFactuTransaccion=true;
			this.isVisibilidadCeldaOrdenParametroFactuTransaccion=true;
			this.isVisibilidadCeldaNuevoRelacionesParametroFactuTransaccion=false;
			this.isVisibilidadCeldaModificarParametroFactuTransaccion=false;
			this.isVisibilidadCeldaActualizarParametroFactuTransaccion=false;
			this.isVisibilidadCeldaEliminarParametroFactuTransaccion=false;
			this.isVisibilidadCeldaCancelarParametroFactuTransaccion=false;
			this.isVisibilidadCeldaGuardarParametroFactuTransaccion=false;
			this.isVisibilidadCeldaGuardarCambiosParametroFactuTransaccion=false;
			
			
			this.isVisibilidadFK_IdEmpresa=true;
			this.isVisibilidadFK_IdSucursal=true;
			this.isVisibilidadFK_IdTransaccionCuentaCoFactura=true;
			this.isVisibilidadFK_IdTransaccionCuentaCoNotaCredito=true;
			this.isVisibilidadFK_IdTransaccionCuentaCoNotaVenta=true;
			this.isVisibilidadFK_IdTransaccionCuentaCoTarjeta=true;
			this.isVisibilidadFK_IdTransaccionCuentaPaFactura=true;
			this.isVisibilidadFK_IdTransaccionCuentaPaNotaCredito=true;
			this.isVisibilidadFK_IdTransaccionInvenFactura=true;
			this.isVisibilidadFK_IdTransaccionInvenNotaCredito=true;
			this.isVisibilidadFK_IdTransaccionInvenNotaVenta=true;
			
			//ELEMENTOS TABLAS PARAMETOS
			
			
			
			//ELEMENTOS TABLAS PARAMETOS_FIN
			
			//this.actualizarEstadoCeldasBotonesParametroFactuTransaccion("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
						
			
			
			this.inicializarPermisosParametroFactuTransaccion();
			
			//INICIALIZAR FALSE, TALVEZ COMENTAR
			this.setPermisosUsuarioParametroFactuTransaccion(false);
			
			this.setPermisosUsuarioParametroFactuTransaccion();
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.parametrofactutransaccionSessionBean.getEsGuardarRelacionado() 
				|| (this.parametrofactutransaccionSessionBean.getEsGuardarRelacionado() && this.parametrofactutransaccionSessionBean.getConGuardarRelaciones())) {
				
				this.inicializarSetPermisosUsuarioParametroFactuTransaccionClasesRelacionadas();
			}
			
			if(this.parametrofactutransaccionSessionBean.getConGuardarRelaciones()) {
				this.actualizarTabsSetPermisosUsuarioParametroFactuTransaccionClasesRelacionadas();
			}
			
			
			
			//SOLO SE EJECUTA LA PRIMERA VEZ, BINDINGS SI FUNCIONA
			if(!ParametroFactuTransaccionJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingBotonesPermisosParametroFactuTransaccion();
			} else {
				this.inicializarActualizarBindingBotonesPermisosManualParametroFactuTransaccion();
			}
			
			if(!this.isPermisoBusquedaParametroFactuTransaccion) {
				//BYDAN_BUSQUEDAS
				
				this.jTabbedPaneBusquedasParametroFactuTransaccion.setVisible(false);				
				
			}
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.parametrofactutransaccionSessionBean.getEsGuardarRelacionado()) {				
				this.tiposArchivosReportes=Funciones.getListTiposArchivosReportes();
				this.tiposArchivosReportesDinamico=Funciones.getListTiposArchivosReportes();
				this.tiposReportes=Funciones.getListTiposReportes(false);
				this.tiposReportesDinamico=Funciones.getListTiposReportesDinamico(false);
				
				
				
				this.tiposGraficosReportes=Funciones2.getListTiposGraficosReportes();
				this.tiposPaginacion=Funciones2.getListTiposPaginacion(this.isPermisoPaginacionMedioParametroFactuTransaccion,this.isPermisoPaginacionMedioParametroFactuTransaccion,this.isPermisoPaginacionTodoParametroFactuTransaccion);
				this.tiposSeleccionar=Funciones2.getListTiposSeleccionar();
				this.tiposSeleccionar.addAll(ParametroFactuTransaccionConstantesFunciones.getTiposSeleccionarParametroFactuTransaccion());
				
				this.tiposColumnasSelect=ParametroFactuTransaccionConstantesFunciones.getTiposSeleccionarParametroFactuTransaccion(true);
				
				this.tiposRelacionesSelect=new ArrayList<Reporte>();								
				
				
			} else {
				this.tiposArchivosReportes=new ArrayList<Reporte>();
				this.tiposArchivosReportesDinamico=new ArrayList<Reporte>();
				this.tiposReportes=new ArrayList<Reporte>();
				this.tiposReportesDinamico=new ArrayList<Reporte>();
				this.tiposGraficosReportes=new ArrayList<Reporte>();
				this.tiposPaginacion=new ArrayList<Reporte>();
				this.tiposSeleccionar=new ArrayList<Reporte>();			
				this.tiposColumnasSelect=new ArrayList<Reporte>();	
				this.tiposRelacionesSelect=new ArrayList<Reporte>();	
			}
						
			
			//FUNCIONALIDAD_RELACIONADO
			//if(!this.parametrofactutransaccionSessionBean.getEsGuardarRelacionado()) {
				//SE ENCUENTRA MAS ADELANTE CON ACCIONES POR USUARIO
				//ACCIONES GENERALES Y POR USUARIO
				this.tiposRelaciones=Funciones2.getListTiposRelaciones();
				this.setRelacionesUsuarioParametroFactuTransaccion();
				
				this.tiposAcciones=Funciones2.getListTiposAcciones(false,false,true);
				this.setAccionesUsuarioParametroFactuTransaccion(false);	
				
				this.tiposAccionesFormulario=Funciones2.getListTiposAccionesFormulario(false,false,true);							
				this.setAccionesUsuarioParametroFactuTransaccion(true);	
				
				this.inicializarActualizarBindingtiposArchivosReportesAccionesParametroFactuTransaccion() ;
			
			/*
			} else {
				this.tiposAcciones=new ArrayList<Reporte>();
				this.tiposAccionesFormulario=new ArrayList<Reporte>();
			}
			*/						
			
			this.inicializarInvalidValues();
						
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			
			
			this.arrOrderBy= new  ArrayList<OrderBy>();
			
			
			this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
			
			
			this.traerValoresTablaOrderBy();			
			
			
			this.isGuardarCambiosEnLote=false;
			this.isCargarCombosDependencia=false;
			
			 
			jasperPrint = null;												
			
			//FK
			
			this.empresaLogic=new EmpresaLogic();
			this.sucursalLogic=new SucursalLogic();
			this.transaccioninvenfacturaLogic=new TransaccionLogic();
			this.transaccioninvennotacreditoLogic=new TransaccionLogic();
			this.transaccioninvennotaventaLogic=new TransaccionLogic();
			this.transaccioncuentacofacturaLogic=new TransaccionLogic();
			this.transaccioncuentaconotacreditoLogic=new TransaccionLogic();
			this.transaccioncuentaconotaventaLogic=new TransaccionLogic();
			this.transaccioncuentacotarjetaLogic=new TransaccionLogic();
			this.transaccioncuentapafacturaLogic=new TransaccionLogic();
			this.transaccioncuentapanotacreditoLogic=new TransaccionLogic();
			
			//PARAMETROS
			
			
			/*
			if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {		
				hashtableEnv =  Funciones.getHashtableEnv();		
				initialContext = new InitialContext(hashtableEnv);	
			}
			*/
			/*
			if(Constantes.ISUSAEJBREMOTE) {
				parametrofactutransaccionImplementable= (ParametroFactuTransaccionImplementable) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+ParametroFactuTransaccionConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBREMOTE);
			} else if(Constantes.ISUSAEJBHOME) {
				parametrofactutransaccionImplementableHome= (ParametroFactuTransaccionImplementableHome) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+ParametroFactuTransaccionConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBLOCAL);
			}			
			*/
			
			
			this.parametrofactutransaccions= new ArrayList<ParametroFactuTransaccion>();
			this.parametrofactutransaccionsEliminados= new ArrayList<ParametroFactuTransaccion>();
						
			this.isEsNuevoParametroFactuTransaccion=false;
			this.esParaAccionDesdeFormularioParametroFactuTransaccion=false;
			this.isEsMantenimientoRelacionesRelacionadoUnico=false;
			this.isEsMantenimientoRelaciones=false;
			this.isEsMantenimientoRelacionado=false;
			this.isContieneImagenes=false;
			
			
			
			
			
			//INICIALIZAR LISTAS FK
			
			this.empresasForeignKey=new ArrayList<Empresa>() ;
			this.sucursalsForeignKey=new ArrayList<Sucursal>() ;
			this.transaccioninvenfacturasForeignKey=new ArrayList<Transaccion>() ;
			this.transaccioninvennotacreditosForeignKey=new ArrayList<Transaccion>() ;
			this.transaccioninvennotaventasForeignKey=new ArrayList<Transaccion>() ;
			this.transaccioncuentacofacturasForeignKey=new ArrayList<Transaccion>() ;
			this.transaccioncuentaconotacreditosForeignKey=new ArrayList<Transaccion>() ;
			this.transaccioncuentaconotaventasForeignKey=new ArrayList<Transaccion>() ;
			this.transaccioncuentacotarjetasForeignKey=new ArrayList<Transaccion>() ;
			this.transaccioncuentapafacturasForeignKey=new ArrayList<Transaccion>() ;
			this.transaccioncuentapanotacreditosForeignKey=new ArrayList<Transaccion>() ;
			
			
			
			
			if(blncargarCombostrForeignKey) {
				this.cargarCombosForeignKeyParametroFactuTransaccion(this.isCargarCombosDependencia);
			}
			
			this.cargarCombosParametroParametroFactuTransaccion();
			
			
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.parametrofactutransaccionSessionBean.getEsGuardarRelacionado()) {
				this.onLoad();
			}
						
			ParametroFactuTransaccionBeanSwingJInternalFrameAdditional.RecargarVentanaSegunOpcion(this,opcionActual);
			
			/*
			if(blnCargarInformacionInicial) {
				this.recargarInformacion();
			}
			*/
			//this.iNumeroPaginacionPagina=0;
			//this.iNumeroPaginacion=ParametroFactuTransaccionConstantesFunciones.INUMEROPAGINACION;
			
			this.actualizarEstadoCeldasBotonesParametroFactuTransaccion("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			//SOLO LA PRIMERA VEZ HACE LOS BINDINGS, SOLO AHI FUNCIONA
			this.inicializarActualizarBindingParametroFactuTransaccion(true); 
			
			//SE REDIMENSIONA SINO NO SE ACTUALIZA
			this.redimensionarTablaDatos();
			
			
			this.initActions();
			
			;
						
			if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) {//if(this.conCargarFormDetalle) {
				this.cargarMenuRelaciones();
			}
			
			//OBLIGA CARGAR DETALLE, MEJOR DESHABILITAR, FALTA TALVEZ PONER EN SELECCIONAR
			//MAYBE
			//this.updateControlesFormularioParametroFactuTransaccion();
			
			if(!this.conCargarMinimo) {
				this.updateBusquedasFormularioParametroFactuTransaccion();
			}
			
			ParametroFactuTransaccionBeanSwingJInternalFrameAdditional.CargaInicial(this, "NORMAL", null);
			
			
			//SE REALIZA ESTO PARA QUE SE PUEDA RECORRER TAB SIN IMPORTAR ORDEN
			Boolean existeTabBusqueda=false;
			
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				
				for(int i=0; i<this.jTabbedPaneBusquedasParametroFactuTransaccion.getTabCount(); i++) {
					this.jTabbedPaneBusquedasParametroFactuTransaccion.setSelectedIndex(i);
						
					if(!existeTabBusqueda) {
						existeTabBusqueda=true;
					}
				}
					
				if(existeTabBusqueda) {
					this.jTabbedPaneBusquedasParametroFactuTransaccion.setSelectedIndex(0);
				}	
				
				
			}
			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.commitNewConnexionToDeep();
			}
			
			
			if(Constantes2.ISDEVELOPING2) {
				end_time = System.currentTimeMillis();			
				String sTipo="Load Ventana";
				Funciones2.getMensajeTiempoEjecucion(start_time, end_time, sTipo,false);
			}  
			
			this.finishProcessParametroFactuTransaccion(true);
			
			this.dEnd=(double)System.currentTimeMillis();
			
			this.dDif=this.dEnd - this.dStart;
			
			if(Constantes.ISDEVELOPING) {
				System.out.println("Tiempo(ms) Carga ParametroFactuTransaccion: " + this.dDif); 
			}
			
			this.permiteRecargarForm=true;
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.closeNewConnexionToDeep();
			}
		}	 
    }
	
	public void cargarTiposRelacionesSelectParametroFactuTransaccion() {
		Reporte reporte=new Reporte();
		
	
	}
	
	
	
	public void jTabbedPaneChangeListenerGeneral(String sTipo,ChangeEvent evt) { 	  
		Boolean procesaCargarParteTab=false;
			
		try {
			int iIndex=0;		    			
			String sTitle="";
			
			//TABBED PANE RELACIONES
			if(sTipo.equals("RelacionesParametroFactuTransaccion")) {
				iIndex=this.jInternalFrameDetalleFormParametroFactuTransaccion.jTabbedPaneRelacionesParametroFactuTransaccion.getSelectedIndex();		    
			
				sTitle=this.jInternalFrameDetalleFormParametroFactuTransaccion.jTabbedPaneRelacionesParametroFactuTransaccion.getTitleAt(iIndex);
				
				Integer intSelectedRow = 0;	
			
				intSelectedRow = this.jTableDatosParametroFactuTransaccion.getSelectedRow();	
				
				
				
			}
			
			//TABBED PANE RELACIONES FIN(EXTRA TAB)
			;
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		} finally {
			if(procesaCargarParteTab) {				
				this.finishProcessParametroFactuTransaccion();	
			}
		}
    }
	
	
	
	public void jButtonRelacionActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		}
    }
	
	public void cargarMenuRelaciones() {	
		JMenuItem jmenuItem= new JMenuItem("General");
		String sLabelMenu="";
		
	}		
	
	public void cargarCombosForeignKeyParametroFactuTransaccion(Boolean cargarCombosDependencia) throws Exception {   
		this.cargarCombosForeignKeyParametroFactuTransaccion(cargarCombosDependencia,true,true);
	}
	
	//CARGAR COMBOS EN LOTE
	public void cargarCombosForeignKeyParametroFactuTransaccion(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales) throws Exception {   
		this.cargarCombosTodosForeignKeyParametroFactuTransaccionListas(cargarCombosDependencia);
				
		this.addItemDefectoCombosTodosForeignKeyParametroFactuTransaccion();
		
		this.cargarCombosFrameForeignKeyParametroFactuTransaccion();						
		
		if(conInitActions) {
			this.initActionsCombosTodosForeignKeyParametroFactuTransaccion();
		}
		
		if(conSetVariablesGlobales) {
			this.setVariablesGlobalesCombosForeignKeyParametroFactuTransaccion();
		}
	}
	
	

	public void cargarCombosForeignKeyTransaccionInvenFactura(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTransaccionInvenFacturaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTransaccionInvenFactura();
				this.cargarCombosFrameTransaccionInvenFacturasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTransaccionInvenFactura(this.transaccioninvenfacturasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransaccionInvenNotaCredito(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTransaccionInvenNotaCreditoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTransaccionInvenNotaCredito();
				this.cargarCombosFrameTransaccionInvenNotaCreditosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTransaccionInvenNotaCredito(this.transaccioninvennotacreditosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransaccionInvenNotaVenta(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTransaccionInvenNotaVentaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTransaccionInvenNotaVenta();
				this.cargarCombosFrameTransaccionInvenNotaVentasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTransaccionInvenNotaVenta(this.transaccioninvennotaventasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransaccionCuentaCoFactura(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTransaccionCuentaCoFacturaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTransaccionCuentaCoFactura();
				this.cargarCombosFrameTransaccionCuentaCoFacturasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTransaccionCuentaCoFactura(this.transaccioncuentacofacturasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransaccionCuentaCoNotaCredito(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTransaccionCuentaCoNotaCreditoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTransaccionCuentaCoNotaCredito();
				this.cargarCombosFrameTransaccionCuentaCoNotaCreditosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTransaccionCuentaCoNotaCredito(this.transaccioncuentaconotacreditosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransaccionCuentaCoNotaVenta(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTransaccionCuentaCoNotaVentaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTransaccionCuentaCoNotaVenta();
				this.cargarCombosFrameTransaccionCuentaCoNotaVentasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTransaccionCuentaCoNotaVenta(this.transaccioncuentaconotaventasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransaccionCuentaCoTarjeta(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTransaccionCuentaCoTarjetaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTransaccionCuentaCoTarjeta();
				this.cargarCombosFrameTransaccionCuentaCoTarjetasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTransaccionCuentaCoTarjeta(this.transaccioncuentacotarjetasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransaccionCuentaPaFactura(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTransaccionCuentaPaFacturaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTransaccionCuentaPaFactura();
				this.cargarCombosFrameTransaccionCuentaPaFacturasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTransaccionCuentaPaFactura(this.transaccioncuentapafacturasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransaccionCuentaPaNotaCredito(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTransaccionCuentaPaNotaCreditoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTransaccionCuentaPaNotaCredito();
				this.cargarCombosFrameTransaccionCuentaPaNotaCreditosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTransaccionCuentaPaNotaCredito(this.transaccioncuentapanotacreditosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void jButtonNuevoParametroFactuTransaccionActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.FORM_RECARGAR;
			String sTipo="NUEVO_NORMAL";
			
			this.estaModoNuevo=true;
			
			if(this.parametrofactutransaccionSessionBean.getConGuardarRelaciones()) {
				this.dStart=(double)System.currentTimeMillis();
			}
				
			//if(this.esUsoDesdeHijo) {
			//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			//}
											
			if(this.jInternalFrameDetalleFormParametroFactuTransaccion==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}			
				
			ParametroFactuTransaccionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.parametrofactutransaccion,new Object(),this.parametrofactutransaccionParameterGeneral,this.parametrofactutransaccionReturnGeneral);
			
			
			if(jTableDatosParametroFactuTransaccion.getRowCount()>=1) {
				jTableDatosParametroFactuTransaccion.removeRowSelectionInterval(0, jTableDatosParametroFactuTransaccion.getRowCount()-1);						
			}
			
			this.isEsNuevoParametroFactuTransaccion=true;
			
			//ESTABLECE SI ES RELACIONADO O NO 
			this.habilitarDeshabilitarTipoMantenimientoParametroFactuTransaccion(esRelaciones);
			
			this.nuevoPreparar(false); 
			this.habilitarDeshabilitarControlesParametroFactuTransaccion(true);			
			//this.parametrofactutransaccion=new ParametroFactuTransaccion();
			//this.parametrofactutransaccion.setIsChanged(true);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesParametroFactuTransaccion(false) ;						
			 
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualParametroFactuTransaccion() ;
			
			if(ParametroFactuTransaccionJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleParametroFactuTransaccion(esRelaciones);
			}
					
			//Se Duplica, sin sentido
			//this.actualizarInformacion("EVENTO_NUEVO",false,this.parametrofactutransaccion);	
			this.actualizarInformacion("INFO_PADRE",false,this.parametrofactutransaccion);				
			
			ParametroFactuTransaccionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.parametrofactutransaccion,new Object(),this.parametrofactutransaccionParameterGeneral,this.parametrofactutransaccionReturnGeneral);
			
			if(this.parametrofactutransaccionSessionBean.getConGuardarRelaciones()) {
				this.dEnd=(double)System.currentTimeMillis();					
				this.dDif=this.dEnd - this.dStart;
					
				if(Constantes.ISDEVELOPING) {
					System.out.println("Tiempo(ms) Nuevo Preparar ParametroFactuTransaccion: " + this.dDif); 
				}
			}
			
			//false para que pueda generar eventos
			this.estaModoNuevo=false;
							
			//Con this.estaModoNuevo=false;, se permite actualizar y usar eventos control al mismo tiempo (FuncionTipo.LAST)			
			ParametroFactuTransaccionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.LAST,ControlTipo.FORM,EventoTipo.CLIC,EventoSubTipo.NEW,sTipo,this.parametrofactutransaccion,new Object(),this.parametrofactutransaccionParameterGeneral,this.parametrofactutransaccionReturnGeneral);
			
		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;			
		}
	}
	
	public void jButtonDuplicarParametroFactuTransaccionActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			Boolean soloDuplicarUno=false;
			Boolean conSeleccionarFilaTabla=false;
			
			this.estaModoNuevo=true;
			this.estaModoDuplicar=true;
			
			ArrayList<ParametroFactuTransaccion> parametrofactutransaccionsSeleccionados=new ArrayList<ParametroFactuTransaccion>();
			int intSelectedRow =-1;
			Integer iNumRowsSeleccionados=0;
			int[] arrNumRowsSeleccionados=null;
			
			//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
			if(conSeleccionarFilaTabla) {
				arrNumRowsSeleccionados=this.jTableDatosParametroFactuTransaccion.getSelectedRows();
				iNumRowsSeleccionados=this.jTableDatosParametroFactuTransaccion.getSelectedRows().length;			
			}
			
			parametrofactutransaccionsSeleccionados=this.getParametroFactuTransaccionsSeleccionados(false);
				
			if((soloDuplicarUno && iNumRowsSeleccionados.equals(1)) || !soloDuplicarUno) {
				//LO HACE NUEVOPREPARAR
				//this.iIdNuevoParametroFactuTransaccion--;			
				//ParametroFactuTransaccion parametrofactutransaccionAux= new ParametroFactuTransaccion();			
				//parametrofactutransaccionAux.setId(this.iIdNuevoParametroFactuTransaccion);																
				
				//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
				//ParametroFactuTransaccion parametrofactutransaccionOrigen=new ParametroFactuTransaccion();
				//for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {				
				
				for(ParametroFactuTransaccion parametrofactutransaccionOrigen : parametrofactutransaccionsSeleccionados) {
					if(conSeleccionarFilaTabla) {
						if(!soloDuplicarUno) {
							//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
							//intSelectedRow =iNumRowSeleccionado;
						} else {
							intSelectedRow = this.jTableDatosParametroFactuTransaccion.getSelectedRow();
						}
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							parametrofactutransaccionOrigen =(ParametroFactuTransaccion) this.parametrofactutransaccionLogic.getParametroFactuTransaccions().toArray()[this.jTableDatosParametroFactuTransaccion.convertRowIndexToModel(intSelectedRow)];
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactutransaccionOrigen =(ParametroFactuTransaccion) this.parametrofactutransaccions.toArray()[this.jTableDatosParametroFactuTransaccion.convertRowIndexToModel(intSelectedRow)];
						}
					}
					
					this.aumentarTamanioFilaNuevaTablaParametroFactuTransaccion();
					
					if(this.conTotales) {
						this.quitarFilaTotales();
					}
					
					this.nuevoPreparar(true);
					
					this.parametrofactutransaccion.setsType("DUPLICADO");
					
					this.setCopiarVariablesObjetosParametroFactuTransaccion(parametrofactutransaccionOrigen,this.parametrofactutransaccion,true,true);
					
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuTransaccion(this.parametrofactutransaccion);
					
					//LO HACE NUEVOPREPARAR
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.parametrofactutransaccionLogic.getParametroFactuTransaccions().add(this.parametrofactutransaccionAux);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.parametrofactutransaccions.add(this.parametrofactutransaccionAux);				
					}
					*/
				}
				
				this.inicializarActualizarBindingTablaParametroFactuTransaccion(false);
				
				this.jTableDatosParametroFactuTransaccion.setRowSelectionInterval(this.getIndiceNuevoParametroFactuTransaccion(), this.getIndiceNuevoParametroFactuTransaccion());
				
				int iLastRow =  this.jTableDatosParametroFactuTransaccion.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosParametroFactuTransaccion.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosParametroFactuTransaccion.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaParametroFactuTransaccion(false);
				}
			} else {
				throw new Exception("DEBE ESTAR SELECCIONADO 1 REGISTRO");
			}
			
		} catch(Exception e) {			
			FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
		
		} finally {
			this.estaModoNuevo=false;
			this.estaModoDuplicar=false;
		}
	}
	
	public void jButtonCopiarParametroFactuTransaccionActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			Boolean conSeleccionarFilaTabla=false;
			Integer iNumRowsSeleccionados=0;
			int[] intSelectedRows =null;
			int intSelectedRow =0;
			
			this.estaModoCopiar=true;
			
			ArrayList<ParametroFactuTransaccion> parametrofactutransaccionsSeleccionados=new ArrayList<ParametroFactuTransaccion>();									
		
			ParametroFactuTransaccion parametrofactutransaccionOrigen=new ParametroFactuTransaccion();
			ParametroFactuTransaccion parametrofactutransaccionDestino=new ParametroFactuTransaccion();
				
			parametrofactutransaccionsSeleccionados=this.getParametroFactuTransaccionsSeleccionados(false);
			
			if(conSeleccionarFilaTabla) {
				iNumRowsSeleccionados=this.jTableDatosParametroFactuTransaccion.getSelectedRows().length;	
			}
			
			if(iNumRowsSeleccionados.equals(2) || parametrofactutransaccionsSeleccionados.size()==2) {
				if(conSeleccionarFilaTabla) {
					intSelectedRows =this.jTableDatosParametroFactuTransaccion.getSelectedRows();
					intSelectedRow = intSelectedRows[0];	
									
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactutransaccionOrigen =(ParametroFactuTransaccion) this.parametrofactutransaccionLogic.getParametroFactuTransaccions().toArray()[this.jTableDatosParametroFactuTransaccion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						parametrofactutransaccionOrigen =(ParametroFactuTransaccion) this.parametrofactutransaccions.toArray()[this.jTableDatosParametroFactuTransaccion.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					intSelectedRow = intSelectedRows[1];
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactutransaccionDestino =(ParametroFactuTransaccion) this.parametrofactutransaccionLogic.getParametroFactuTransaccions().toArray()[this.jTableDatosParametroFactuTransaccion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						parametrofactutransaccionDestino =(ParametroFactuTransaccion) this.parametrofactutransaccions.toArray()[this.jTableDatosParametroFactuTransaccion.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				}
				
				parametrofactutransaccionOrigen =parametrofactutransaccionsSeleccionados.get(0);
				parametrofactutransaccionDestino =parametrofactutransaccionsSeleccionados.get(1);
				
				this.setCopiarVariablesObjetosParametroFactuTransaccion(parametrofactutransaccionOrigen,parametrofactutransaccionDestino,true,false);
				
				parametrofactutransaccionDestino.setsType("DUPLICADO");
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(parametrofactutransaccionDestino,parametrofactutransaccionLogic.getParametroFactuTransaccions());					
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(parametrofactutransaccionDestino,parametrofactutransaccions);
				}
				//ARCHITECTURE
				
				this.inicializarActualizarBindingTablaParametroFactuTransaccion(false);
				
				//this.jTableDatosParametroFactuTransaccion.setRowSelectionInterval(this.getIndiceNuevoParametroFactuTransaccion(), this.getIndiceNuevoParametroFactuTransaccion());
				
				int iLastRow =  this.jTableDatosParametroFactuTransaccion.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosParametroFactuTransaccion.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosParametroFactuTransaccion.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					//this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaParametroFactuTransaccion(false);
				}
			} else {
				throw new Exception("DEBEN ESTAR SELECCIONADOS 2 REGISTROS");
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.estaModoCopiar=false;
		}
	}
	
	public void jButtonVerFormParametroFactuTransaccionActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormParametroFactuTransaccion==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.jInternalFrameDetalleFormParametroFactuTransaccion.setSelected(true);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonMostrarOcultarParametroFactuTransaccionActionPerformed(ActionEvent evt) throws Exception {   
		try {
			Boolean isVisible=this.jPanelParametrosReportesParametroFactuTransaccion.isVisible();
			
			//BYDAN_BUSQUEDAS
			
			this.jTabbedPaneBusquedasParametroFactuTransaccion.setVisible(!isVisible);			
			
			
			this.jPanelParametrosReportesParametroFactuTransaccion.setVisible(!isVisible);
			this.jPanelPaginacionParametroFactuTransaccion.setVisible(!isVisible);
			this.jPanelAccionesParametroFactuTransaccion.setVisible(!isVisible);
							
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarParametroFactuTransaccionActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.closingInternalFrameParametroFactuTransaccion();
			
			//if(this.jInternalFrameParent==null) {
				//this.dispose();
			/*} else {
				this.setVisible(false);
	        	this.setSelected(false);	
			}*/			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarReporteDinamicoParametroFactuTransaccionActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameReporteDinamicoParametroFactuTransaccion();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarImportacionParametroFactuTransaccionActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameImportacionParametroFactuTransaccion();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonAbrirOrderByParametroFactuTransaccionActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			
			this.abrirInicializarFrameOrderByParametroFactuTransaccion();
			
			this.abrirFrameOrderByParametroFactuTransaccion();
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarOrderByParametroFactuTransaccionActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameOrderByParametroFactuTransaccion();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void abrirFrameDetalleParametroFactuTransaccion(Boolean esRelaciones) throws Exception {	    	        
	    try {
			//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
			//this.jDesktopPane.add(jInternalFrameDetalleFormParametroFactuTransaccion);
			
			if(!esRelaciones) {
				if(this.jInternalFrameDetalleFormParametroFactuTransaccion.isMaximum()) {
					this.jInternalFrameDetalleFormParametroFactuTransaccion.setMaximum(false);
				}								
				
	    		this.jInternalFrameDetalleFormParametroFactuTransaccion.setSize(this.jInternalFrameDetalleFormParametroFactuTransaccion.iWidthFormulario,this.jInternalFrameDetalleFormParametroFactuTransaccion.iHeightFormulario);
	    	} else {
				if(this.iWidthScroll<this.jInternalFrameDetalleFormParametroFactuTransaccion.iWidthFormularioMaximo) {
	    			this.jInternalFrameDetalleFormParametroFactuTransaccion.setSize(this.iWidthScroll,this.iHeightScroll);
				} else {
					if(!this.jInternalFrameDetalleFormParametroFactuTransaccion.isMaximum()) {
						this.jInternalFrameDetalleFormParametroFactuTransaccion.setMaximum(true);
					}
				}
				
				if(this.jInternalFrameDetalleFormParametroFactuTransaccion.jContentPaneDetalleParametroFactuTransaccion.getWidth() > this.getWidth()) {
					this.jInternalFrameDetalleFormParametroFactuTransaccion.jTabbedPaneRelacionesParametroFactuTransaccion.setMinimumSize(new Dimension(this.jInternalFrameDetalleFormParametroFactuTransaccion.jContentPaneDetalleParametroFactuTransaccion.getWidth(),ParametroFactuTransaccionConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormParametroFactuTransaccion.jTabbedPaneRelacionesParametroFactuTransaccion.setMaximumSize(new Dimension(this.jInternalFrameDetalleFormParametroFactuTransaccion.jContentPaneDetalleParametroFactuTransaccion.getWidth(),ParametroFactuTransaccionConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormParametroFactuTransaccion.jTabbedPaneRelacionesParametroFactuTransaccion.setPreferredSize(new Dimension(this.jInternalFrameDetalleFormParametroFactuTransaccion.jContentPaneDetalleParametroFactuTransaccion.getWidth(),ParametroFactuTransaccionConstantesFunciones.ALTO_TABPANE_RELACIONES));
					
					Dimension dimension=new Dimension(); 
					
					
					
				}
	    	}
			
		
	       	this.jInternalFrameDetalleFormParametroFactuTransaccion.setVisible(true);
	        this.jInternalFrameDetalleFormParametroFactuTransaccion.setSelected(true);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirInicializarFrameOrderByParametroFactuTransaccion() throws Exception {	    	        
	    try {
			if(this.jInternalFrameOrderByParametroFactuTransaccion==null) {
				
				if(!this.conCargarMinimo) {
					this.jInternalFrameOrderByParametroFactuTransaccion=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByParametroFactuTransaccion,false,this);
				} else {
					this.jInternalFrameOrderByParametroFactuTransaccion=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByParametroFactuTransaccion,true,this);
				}
				
				this.jDesktopPane.add(this.jInternalFrameOrderByParametroFactuTransaccion);
				this.jInternalFrameOrderByParametroFactuTransaccion.setVisible(false);
				this.jInternalFrameOrderByParametroFactuTransaccion.setSelected(false);
				
				this.jInternalFrameOrderByParametroFactuTransaccion.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByParametroFactuTransaccion"));
				
				this.inicializarActualizarBindingTablaOrderByParametroFactuTransaccion();
			}
		} catch (final Exception e) {
			
		}
	}
	
	
	
	public void abrirInicializarFrameImportacionParametroFactuTransaccion() throws Exception {	    	        
	    try {
			if(this.jInternalFrameImportacionParametroFactuTransaccion==null) {
				
				this.jInternalFrameImportacionParametroFactuTransaccion=new ImportacionJInternalFrame(ParametroFactuTransaccionConstantesFunciones.SCLASSWEBTITULO,this);			
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionParametroFactuTransaccion);							
				
				this.jDesktopPane.add(this.jInternalFrameImportacionParametroFactuTransaccion);
				this.jInternalFrameImportacionParametroFactuTransaccion.setVisible(false);
				this.jInternalFrameImportacionParametroFactuTransaccion.setSelected(false);


				this.jInternalFrameImportacionParametroFactuTransaccion.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionParametroFactuTransaccion"));
				this.jInternalFrameImportacionParametroFactuTransaccion.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionParametroFactuTransaccion"));
				this.jInternalFrameImportacionParametroFactuTransaccion.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionParametroFactuTransaccion"));


			}
		} catch (final Exception e) {
			
		}
	}		
	
	
	
	public void abrirInicializarFrameReporteDinamicoParametroFactuTransaccion() throws Exception {	    	        
	    try {
			
			if(this.jInternalFrameReporteDinamicoParametroFactuTransaccion==null) {
				this.jInternalFrameReporteDinamicoParametroFactuTransaccion=new ReporteDinamicoJInternalFrame(ParametroFactuTransaccionConstantesFunciones.SCLASSWEBTITULO,this);	
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoParametroFactuTransaccion);	
	
	
				this.jDesktopPane.add(this.jInternalFrameReporteDinamicoParametroFactuTransaccion);
				this.jInternalFrameReporteDinamicoParametroFactuTransaccion.setVisible(false);
				this.jInternalFrameReporteDinamicoParametroFactuTransaccion.setSelected(false);
	
	
	
				this.jInternalFrameReporteDinamicoParametroFactuTransaccion.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoParametroFactuTransaccion"));
				this.jInternalFrameReporteDinamicoParametroFactuTransaccion.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoParametroFactuTransaccion"));
				this.jInternalFrameReporteDinamicoParametroFactuTransaccion.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoParametroFactuTransaccion"));
	
				this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualParametroFactuTransaccion();
			}

		} catch (final Exception e) {
			
		}
	}	
	
	
	
		
					
	public void cerrarFrameDetalleParametroFactuTransaccion() throws Exception {	    	        
	    try {
			//this.jDesktopPane.add(jInternalFrameDetalleFormParametroFactuTransaccion);
			
	       	this.jInternalFrameDetalleFormParametroFactuTransaccion.setVisible(false);
	        this.jInternalFrameDetalleFormParametroFactuTransaccion.setSelected(false);
			
			//this.jInternalFrameDetalleFormParametroFactuTransaccion.dispose();
			//this.jInternalFrameDetalleFormParametroFactuTransaccion=null;
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirFrameReporteDinamicoParametroFactuTransaccion() throws Exception {	    	        
	    try {
			
			this.jInternalFrameReporteDinamicoParametroFactuTransaccion.setVisible(true);
	        this.jInternalFrameReporteDinamicoParametroFactuTransaccion.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void abrirFrameImportacionParametroFactuTransaccion() throws Exception {	    	        		
	    try {			
			this.jInternalFrameImportacionParametroFactuTransaccion.setVisible(true);
	        this.jInternalFrameImportacionParametroFactuTransaccion.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
	    }		
	}	
	
	
	
	
	
	public void abrirFrameOrderByParametroFactuTransaccion() throws Exception {	    	        		
	    try {
			this.jInternalFrameOrderByParametroFactuTransaccion.setVisible(true);
	        this.jInternalFrameOrderByParametroFactuTransaccion.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameOrderByParametroFactuTransaccion() throws Exception {	    	        		
	    try {			
			this.jInternalFrameOrderByParametroFactuTransaccion.setVisible(false);
	        this.jInternalFrameOrderByParametroFactuTransaccion.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameReporteDinamicoParametroFactuTransaccion() throws Exception {			
	    try {
			this.jInternalFrameReporteDinamicoParametroFactuTransaccion.setVisible(false);
	        this.jInternalFrameReporteDinamicoParametroFactuTransaccion.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameImportacionParametroFactuTransaccion() throws Exception {	    	        		
	    try {
			this.jInternalFrameImportacionParametroFactuTransaccion.setVisible(false);
	        this.jInternalFrameImportacionParametroFactuTransaccion.setSelected(false);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	
	public void jButtonModificarParametroFactuTransaccionActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.modificarParametroFactuTransaccion(evt,-1,false);
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void modificarParametroFactuTransaccion(ActionEvent evt,int rowIndex,Boolean esRelaciones) throws Exception {   
		try {
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosParametroFactuTransaccion.getSelectedRow();
			}
			
			this.habilitarDeshabilitarControlesParametroFactuTransaccion(true);
			//this.isEsNuevoParametroFactuTransaccion=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccion =(ParametroFactuTransaccion) this.parametrofactutransaccionLogic.getParametroFactuTransaccions().toArray()[this.jTableDatosParametroFactuTransaccion.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.parametrofactutransaccion =(ParametroFactuTransaccion) this.parametrofactutransaccions.toArray()[this.jTableDatosParametroFactuTransaccion.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.actualizarEstadoCeldasBotonesParametroFactuTransaccion("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesParametroFactuTransaccion(false) ;
			
			if(parametrofactutransaccionSessionBean.getConGuardarRelaciones()) {
			
			}
			
			if(ParametroFactuTransaccionJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleParametroFactuTransaccion(esRelaciones);
			}
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualParametroFactuTransaccion(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarFilaTablaParametroFactuTransaccionActual() { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL
			Integer intSelectedRow = this.jTableDatosParametroFactuTransaccion.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactutransaccion =(ParametroFactuTransaccion) this.parametrofactutransaccionLogic.getParametroFactuTransaccions().toArray()[this.jTableDatosParametroFactuTransaccion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.parametrofactutransaccion =(ParametroFactuTransaccion) this.parametrofactutransaccions.toArray()[this.jTableDatosParametroFactuTransaccion.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void seleccionarParametroFactuTransaccion(ActionEvent evt,int rowIndex) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormParametroFactuTransaccion==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosParametroFactuTransaccion.getSelectedRow();
			}
			
			//this.habilitarDeshabilitarControlesParametroFactuTransaccion(true);
			//this.isEsNuevoParametroFactuTransaccion=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccion =(ParametroFactuTransaccion) this.parametrofactutransaccionLogic.getParametroFactuTransaccions().toArray()[this.jTableDatosParametroFactuTransaccion.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.parametrofactutransaccion =(ParametroFactuTransaccion) this.parametrofactutransaccions.toArray()[this.jTableDatosParametroFactuTransaccion.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.jInternalFrameParent.setIdCombosCodigoDesdeBusquedaForeignKey(this.parametrofactutransaccion.getId(),this.sTipoBusqueda);
			
			this.dispose();
			
			//this.actualizarEstadoCeldasBotonesParametroFactuTransaccion("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			/*
			this.inicializarActualizarBindingBotonesParametroFactuTransaccion(false) ;
			
			if(ParametroFactuTransaccionJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleParametroFactuTransaccion(esRelaciones);
			}
			*/
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualParametroFactuTransaccion(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void setIdCombosCodigoDesdeBusquedaForeignKey(Long id,String sType)throws Exception{
		
		try {
		} catch(Exception e) {
			throw e;
		}
	}
	
			
	
	public void recargarComboTablaTransaccionInvenFactura(List<Transaccion> transaccioninvenfacturasForeignKey)throws Exception{
		TableColumn tableColumnTransaccionInvenFactura=this.jTableDatosParametroFactuTransaccion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuTransaccion,ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONINVENFACTURA));
		TableCellEditor tableCellEditorTransaccionInvenFactura =tableColumnTransaccionInvenFactura.getCellEditor();

		TransaccionTableCell transaccionTableCellFk=(TransaccionTableCell)tableCellEditorTransaccionInvenFactura;

		if(transaccionTableCellFk!=null) {
			transaccionTableCellFk.settransaccionsForeignKey(transaccioninvenfacturasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroFactuTransaccion.getSelectedRow();

		//if(intSelectedRow<=0) {
			//transaccionTableCellFk.setRowActual(intSelectedRow);
			//transaccionTableCellFk.settransaccionsForeignKeyActual(transaccioninvenfacturasForeignKey);
		//}


		if(transaccionTableCellFk!=null) {
			transaccionTableCellFk.RecargarTransaccionsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTransaccionInvenNotaCredito(List<Transaccion> transaccioninvennotacreditosForeignKey)throws Exception{
		TableColumn tableColumnTransaccionInvenNotaCredito=this.jTableDatosParametroFactuTransaccion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuTransaccion,ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONINVENNOTACREDITO));
		TableCellEditor tableCellEditorTransaccionInvenNotaCredito =tableColumnTransaccionInvenNotaCredito.getCellEditor();

		TransaccionTableCell transaccionTableCellFk=(TransaccionTableCell)tableCellEditorTransaccionInvenNotaCredito;

		if(transaccionTableCellFk!=null) {
			transaccionTableCellFk.settransaccionsForeignKey(transaccioninvennotacreditosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroFactuTransaccion.getSelectedRow();

		//if(intSelectedRow<=0) {
			//transaccionTableCellFk.setRowActual(intSelectedRow);
			//transaccionTableCellFk.settransaccionsForeignKeyActual(transaccioninvennotacreditosForeignKey);
		//}


		if(transaccionTableCellFk!=null) {
			transaccionTableCellFk.RecargarTransaccionsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTransaccionInvenNotaVenta(List<Transaccion> transaccioninvennotaventasForeignKey)throws Exception{
		TableColumn tableColumnTransaccionInvenNotaVenta=this.jTableDatosParametroFactuTransaccion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuTransaccion,ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONINVENNOTAVENTA));
		TableCellEditor tableCellEditorTransaccionInvenNotaVenta =tableColumnTransaccionInvenNotaVenta.getCellEditor();

		TransaccionTableCell transaccionTableCellFk=(TransaccionTableCell)tableCellEditorTransaccionInvenNotaVenta;

		if(transaccionTableCellFk!=null) {
			transaccionTableCellFk.settransaccionsForeignKey(transaccioninvennotaventasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroFactuTransaccion.getSelectedRow();

		//if(intSelectedRow<=0) {
			//transaccionTableCellFk.setRowActual(intSelectedRow);
			//transaccionTableCellFk.settransaccionsForeignKeyActual(transaccioninvennotaventasForeignKey);
		//}


		if(transaccionTableCellFk!=null) {
			transaccionTableCellFk.RecargarTransaccionsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTransaccionCuentaCoFactura(List<Transaccion> transaccioncuentacofacturasForeignKey)throws Exception{
		TableColumn tableColumnTransaccionCuentaCoFactura=this.jTableDatosParametroFactuTransaccion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuTransaccion,ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONCUENTACOFACTURA));
		TableCellEditor tableCellEditorTransaccionCuentaCoFactura =tableColumnTransaccionCuentaCoFactura.getCellEditor();

		TransaccionTableCell transaccionTableCellFk=(TransaccionTableCell)tableCellEditorTransaccionCuentaCoFactura;

		if(transaccionTableCellFk!=null) {
			transaccionTableCellFk.settransaccionsForeignKey(transaccioncuentacofacturasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroFactuTransaccion.getSelectedRow();

		//if(intSelectedRow<=0) {
			//transaccionTableCellFk.setRowActual(intSelectedRow);
			//transaccionTableCellFk.settransaccionsForeignKeyActual(transaccioncuentacofacturasForeignKey);
		//}


		if(transaccionTableCellFk!=null) {
			transaccionTableCellFk.RecargarTransaccionsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTransaccionCuentaCoNotaCredito(List<Transaccion> transaccioncuentaconotacreditosForeignKey)throws Exception{
		TableColumn tableColumnTransaccionCuentaCoNotaCredito=this.jTableDatosParametroFactuTransaccion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuTransaccion,ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONCUENTACONOTACREDITO));
		TableCellEditor tableCellEditorTransaccionCuentaCoNotaCredito =tableColumnTransaccionCuentaCoNotaCredito.getCellEditor();

		TransaccionTableCell transaccionTableCellFk=(TransaccionTableCell)tableCellEditorTransaccionCuentaCoNotaCredito;

		if(transaccionTableCellFk!=null) {
			transaccionTableCellFk.settransaccionsForeignKey(transaccioncuentaconotacreditosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroFactuTransaccion.getSelectedRow();

		//if(intSelectedRow<=0) {
			//transaccionTableCellFk.setRowActual(intSelectedRow);
			//transaccionTableCellFk.settransaccionsForeignKeyActual(transaccioncuentaconotacreditosForeignKey);
		//}


		if(transaccionTableCellFk!=null) {
			transaccionTableCellFk.RecargarTransaccionsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTransaccionCuentaCoNotaVenta(List<Transaccion> transaccioncuentaconotaventasForeignKey)throws Exception{
		TableColumn tableColumnTransaccionCuentaCoNotaVenta=this.jTableDatosParametroFactuTransaccion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuTransaccion,ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONCUENTACONOTAVENTA));
		TableCellEditor tableCellEditorTransaccionCuentaCoNotaVenta =tableColumnTransaccionCuentaCoNotaVenta.getCellEditor();

		TransaccionTableCell transaccionTableCellFk=(TransaccionTableCell)tableCellEditorTransaccionCuentaCoNotaVenta;

		if(transaccionTableCellFk!=null) {
			transaccionTableCellFk.settransaccionsForeignKey(transaccioncuentaconotaventasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroFactuTransaccion.getSelectedRow();

		//if(intSelectedRow<=0) {
			//transaccionTableCellFk.setRowActual(intSelectedRow);
			//transaccionTableCellFk.settransaccionsForeignKeyActual(transaccioncuentaconotaventasForeignKey);
		//}


		if(transaccionTableCellFk!=null) {
			transaccionTableCellFk.RecargarTransaccionsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTransaccionCuentaCoTarjeta(List<Transaccion> transaccioncuentacotarjetasForeignKey)throws Exception{
		TableColumn tableColumnTransaccionCuentaCoTarjeta=this.jTableDatosParametroFactuTransaccion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuTransaccion,ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONCUENTACOTARJETA));
		TableCellEditor tableCellEditorTransaccionCuentaCoTarjeta =tableColumnTransaccionCuentaCoTarjeta.getCellEditor();

		TransaccionTableCell transaccionTableCellFk=(TransaccionTableCell)tableCellEditorTransaccionCuentaCoTarjeta;

		if(transaccionTableCellFk!=null) {
			transaccionTableCellFk.settransaccionsForeignKey(transaccioncuentacotarjetasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroFactuTransaccion.getSelectedRow();

		//if(intSelectedRow<=0) {
			//transaccionTableCellFk.setRowActual(intSelectedRow);
			//transaccionTableCellFk.settransaccionsForeignKeyActual(transaccioncuentacotarjetasForeignKey);
		//}


		if(transaccionTableCellFk!=null) {
			transaccionTableCellFk.RecargarTransaccionsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTransaccionCuentaPaFactura(List<Transaccion> transaccioncuentapafacturasForeignKey)throws Exception{
		TableColumn tableColumnTransaccionCuentaPaFactura=this.jTableDatosParametroFactuTransaccion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuTransaccion,ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONCUENTAPAFACTURA));
		TableCellEditor tableCellEditorTransaccionCuentaPaFactura =tableColumnTransaccionCuentaPaFactura.getCellEditor();

		TransaccionTableCell transaccionTableCellFk=(TransaccionTableCell)tableCellEditorTransaccionCuentaPaFactura;

		if(transaccionTableCellFk!=null) {
			transaccionTableCellFk.settransaccionsForeignKey(transaccioncuentapafacturasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroFactuTransaccion.getSelectedRow();

		//if(intSelectedRow<=0) {
			//transaccionTableCellFk.setRowActual(intSelectedRow);
			//transaccionTableCellFk.settransaccionsForeignKeyActual(transaccioncuentapafacturasForeignKey);
		//}


		if(transaccionTableCellFk!=null) {
			transaccionTableCellFk.RecargarTransaccionsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTransaccionCuentaPaNotaCredito(List<Transaccion> transaccioncuentapanotacreditosForeignKey)throws Exception{
		TableColumn tableColumnTransaccionCuentaPaNotaCredito=this.jTableDatosParametroFactuTransaccion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuTransaccion,ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONCUENTAPANOTACREDITO));
		TableCellEditor tableCellEditorTransaccionCuentaPaNotaCredito =tableColumnTransaccionCuentaPaNotaCredito.getCellEditor();

		TransaccionTableCell transaccionTableCellFk=(TransaccionTableCell)tableCellEditorTransaccionCuentaPaNotaCredito;

		if(transaccionTableCellFk!=null) {
			transaccionTableCellFk.settransaccionsForeignKey(transaccioncuentapanotacreditosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroFactuTransaccion.getSelectedRow();

		//if(intSelectedRow<=0) {
			//transaccionTableCellFk.setRowActual(intSelectedRow);
			//transaccionTableCellFk.settransaccionsForeignKeyActual(transaccioncuentapanotacreditosForeignKey);
		//}


		if(transaccionTableCellFk!=null) {
			transaccionTableCellFk.RecargarTransaccionsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	
	public void jButtonActualizarParametroFactuTransaccionActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingParametrosReportesParametroFactuTransaccion(false);
			
			//if(!this.isEsNuevoParametroFactuTransaccion) {								
				int intSelectedRow = this.jTableDatosParametroFactuTransaccion.getSelectedRow();	
				
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactutransaccion =(ParametroFactuTransaccion) this.parametrofactutransaccionLogic.getParametroFactuTransaccions().toArray()[this.jTableDatosParametroFactuTransaccion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrofactutransaccion =(ParametroFactuTransaccion) this.parametrofactutransaccions.toArray()[this.jTableDatosParametroFactuTransaccion.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
			//}
				
			if(ParametroFactuTransaccionJInternalFrame.ISBINDING_MANUAL_TABLA) {
				this.setVariablesFormularioToObjetoActualParametroFactuTransaccion(this.parametrofactutransaccion,true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuTransaccion(this.parametrofactutransaccion);
				
			}
			
			if(this.permiteMantenimiento(this.parametrofactutransaccion)) {	
				this.actualizar();
				
				if(!this.isGuardarCambiosEnLote && !this.parametrofactutransaccionSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
					
					this.isEsNuevoParametroFactuTransaccion=true;
					this.inicializarActualizarBindingTablaParametroFactuTransaccion(false);
					this.isEsNuevoParametroFactuTransaccion=false;
				
				} else {					
					
					//PARA RELACIONADO ACTUALIZAR FILA TOTALES
					this.isEsNuevoParametroFactuTransaccion=true;
					this.procesoActualizarFilaTotales(false,"MANTENIMIENTO");
					this.isEsNuevoParametroFactuTransaccion=false;
				}
						
								
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesParametroFactuTransaccion(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualParametroFactuTransaccion(false);
				
				this.habilitarDeshabilitarControlesParametroFactuTransaccion(false);
			
												
				
				if(ParametroFactuTransaccionJInternalFrame.CON_DATOS_FRAME) {
					if(!this.isPostAccionSinCerrar) {
						this.cerrarFrameDetalleParametroFactuTransaccion();
					}
				}
				
				if(this.isPostAccionNuevo) {
					this.jButtonNuevoParametroFactuTransaccionActionPerformed(evt,parametrofactutransaccionSessionBean.getConGuardarRelaciones());
				} else {
					if(this.isPostAccionSinCerrar) {
						Integer intSelectedRowActual=this.getIndiceActualParametroFactuTransaccion(this.parametrofactutransaccion,intSelectedRow);
						
						if(intSelectedRow>-1) {
							this.jTableDatosParametroFactuTransaccion.setRowSelectionInterval(intSelectedRowActual, intSelectedRowActual);
							this.jButtonIdActionPerformed(evt,intSelectedRowActual,parametrofactutransaccionSessionBean.getConGuardarRelaciones(),false);
						}
					}
				}
				
				this.cancelar(false);
				
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.commitNewConnexionToDeep();
			}
			
			
			if(this.jInternalFrameParent!=null) { //&& this.isEsMantenimientoRelacionado) {
				Boolean esUsoDesdeHijoLocal=true;
				String sTipo="Formulario";
				Boolean conIrServidorAplicacionParent=false;
				Long id=this.parametrofactutransaccion.getId();
				ArrayList<String> arrClasses=new ArrayList<String>();
				
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();
				
				generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
				generalEntityParameterGeneral.setsDominio("Formulario");
				generalEntityParameterGeneral.setsDominioTipo(ParametroFactuTransaccion.class.getName());
				
				this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ParametroFactuTransaccion.class.getName(),sTipo,"FORMULARIO",esControlTabla,conIrServidorAplicacionParent,
					id,this, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.FORM,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
					evt,generalEntityParameterGeneral,this);
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonEliminarParametroFactuTransaccionActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.getNewConnexionToDeep("");
			}
			
			int intSelectedRow = this.jTableDatosParametroFactuTransaccion.getSelectedRow();	       
							
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccion =(ParametroFactuTransaccion) this.parametrofactutransaccionLogic.getParametroFactuTransaccions().toArray()[this.jTableDatosParametroFactuTransaccion.convertRowIndexToModel(intSelectedRow)];
				this.parametrofactutransaccion.setIsDeleted(true);
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.parametrofactutransaccion =(ParametroFactuTransaccion) this.parametrofactutransaccions.toArray()[this.jTableDatosParametroFactuTransaccion.convertRowIndexToModel(intSelectedRow)];
				this.parametrofactutransaccion.setIsDeleted(true);
			}
			//ARCHITECTURE
			
			if(this.permiteMantenimiento(this.parametrofactutransaccion)) {
				this.eliminar();
				
				if(!this.isGuardarCambiosEnLote && !this.parametrofactutransaccionSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
				}
				
				((ParametroFactuTransaccionModel) this.jTableDatosParametroFactuTransaccion.getModel()).fireTableRowsDeleted(intSelectedRow,intSelectedRow);
				
				this.isEsNuevoParametroFactuTransaccion=true;
				this.inicializarActualizarBindingTablaParametroFactuTransaccion(false);
				this.isEsNuevoParametroFactuTransaccion=false;									
					
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesParametroFactuTransaccion(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualParametroFactuTransaccion(false);
				
				this.habilitarDeshabilitarControlesParametroFactuTransaccion(false);
				
				
				
				if(ParametroFactuTransaccionJInternalFrame.CON_DATOS_FRAME) {
					this.cerrarFrameDetalleParametroFactuTransaccion();
				}
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.closeNewConnexionToDeep();
			}
		}		
	}
		
	public void jButtonCancelarParametroFactuTransaccionActionPerformed(ActionEvent evt) throws Exception {                                         	   	       
	  	try {
			if(jTableDatosParametroFactuTransaccion.getRowCount()>=1) {
				jTableDatosParametroFactuTransaccion.removeRowSelectionInterval(0, jTableDatosParametroFactuTransaccion.getRowCount()-1);						
			}
						
			this.invalidValues=new InvalidValue[0];
			this.habilitarDeshabilitarControlesParametroFactuTransaccion(false);
			this.cancelar(true);			
			this.inicializarActualizarBindingTablaParametroFactuTransaccion(false);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesParametroFactuTransaccion(false) ;
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualParametroFactuTransaccion(false) ;
			
			this.isEsNuevoParametroFactuTransaccion=false;
			
			if(ParametroFactuTransaccionJInternalFrame.CON_DATOS_FRAME) {
				this.cerrarFrameDetalleParametroFactuTransaccion();
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonGuardarCambiosParametroFactuTransaccionActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.getNewConnexionToDeep("");
			}
			
			//this.estaModoGuardarCambios=true;
			
	    	this.guardarCambios();
			
			if(!this.isErrorGuardar) {
				this.procesarBusqueda(this.sAccionBusqueda);
				
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingParametroFactuTransaccion(false);
				
				//SI ES MANUAL
				if(ParametroFactuTransaccionJInternalFrame.ISBINDING_MANUAL) {				
					//this.inicializarActualizarBindingManualParametroFactuTransaccion();				
				}
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.closeNewConnexionToDeep();
			}
			
			//this.estaModoGuardarCambios=false;
		}
	}
	
	public void jButtonNuevoGuardarCambiosParametroFactuTransaccionActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			this.estaModoNuevo=true;
			this.estaModoNuevoGuardarCambios=true;
			
			//LO HACE NUEVOPREPARAR
			//this.iIdNuevoParametroFactuTransaccion--;			
			//ParametroFactuTransaccion parametrofactutransaccionAux= new ParametroFactuTransaccion();			
			//parametrofactutransaccionAux.setId(this.iIdNuevoParametroFactuTransaccion);
			
			if(this.jInternalFrameDetalleFormParametroFactuTransaccion==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.aumentarTamanioFilaNuevaTablaParametroFactuTransaccion();
			
			if(this.conTotales) {
				this.quitarFilaTotales();
			}
			
			this.nuevoPreparar(true);
			
			this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuTransaccion(this.parametrofactutransaccion);
			
			this.parametrofactutransaccion.setsType("NUEVO_GUARDAR_CAMBIOS");
			
			//LO HACE NUEVOPREPARAR
			/*
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				this.parametrofactutransaccionLogic.getParametroFactuTransaccions().add(this.parametrofactutransaccionAux);
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				this.parametrofactutransaccions.add(this.parametrofactutransaccionAux);				
			}
			*/
			
			this.inicializarActualizarBindingTablaParametroFactuTransaccion(false);
			
			this.jTableDatosParametroFactuTransaccion.setRowSelectionInterval(this.getIndiceNuevoParametroFactuTransaccion(), this.getIndiceNuevoParametroFactuTransaccion());
			
			int iLastRow =  this.jTableDatosParametroFactuTransaccion.getRowCount () - 1;
			Rectangle rectangle = this.jTableDatosParametroFactuTransaccion.getCellRect(iLastRow, 0, true);
			
			this.jTableDatosParametroFactuTransaccion.scrollRectToVisible(rectangle);
			
			//FILA TOTALES
			if(this.conTotales) {
				this.crearFilaTotales();
				
				this.inicializarActualizarBindingTablaParametroFactuTransaccion(false);
			}

		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;
			this.estaModoNuevoGuardarCambios=false;
		}
	}		
	
	public void jButtonRecargarInformacionParametroFactuTransaccionActionPerformed(ActionEvent evt) throws Exception {    		
		try {
			this.iNumeroPaginacionPagina=0;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingParametroFactuTransaccion(false,false);
			
	    	this.recargarInformacion();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingParametroFactuTransaccion(false);
			
			//SI ES MANUAL
			if(ParametroFactuTransaccionJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualParametroFactuTransaccion();
			}
			
			//this.abrirFrameTreeParametroFactuTransaccion();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.closeNewConnexionToDeep();
			}
		}	
	}
	
	
	public void jButtonGenerarImportacionParametroFactuTransaccionActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedReader bufferedReader = null;
		String sXmlStringFile="";
		String sPath="";
		this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
		DatoGeneralMinimo datoGeneralMinimo=new DatoGeneralMinimo();
		String sLine="";
		
		try {			
			if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR IMPORTACION DE Parametro Transaccion S ?", "MANTENIMIENTO DE Parametro Transaccion ", JOptionPane.OK_CANCEL_OPTION) == 0) {
				bufferedReader = new BufferedReader(new FileReader(this.jInternalFrameImportacionParametroFactuTransaccion.getFileImportacion().getAbsolutePath()));
								
				while ((sLine = bufferedReader.readLine()) != null) {
					datoGeneralMinimo=new DatoGeneralMinimo();
					datoGeneralMinimo.setsDescripcion(sLine);
					
					this.arrDatoGeneralMinimos.add(datoGeneralMinimo);
				}
				
				this.actualizarParametrosGeneralParametroFactuTransaccion();
						
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {						
					this.parametrofactutransaccionReturnGeneral=parametrofactutransaccionLogic.procesarImportacionParametroFactuTransaccionsWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this.arrDatoGeneralMinimos,this.parametrofactutransaccionParameterGeneral);
						
				} else if(Constantes.ISUSAEJBREMOTE) {
						
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
						
				this.procesarParametroFactuTransaccionReturnGeneral();
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedReader != null) {
				bufferedReader.close();
			}	
		}				
	}
	
	
	
	public void jButtonAbrirImportacionParametroFactuTransaccionActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {
			int iReturnArchivo = this.jInternalFrameImportacionParametroFactuTransaccion.getjFileChooserImportacion().showOpenDialog(this);
 
            if (iReturnArchivo == JFileChooser.APPROVE_OPTION) {
            	this.jInternalFrameImportacionParametroFactuTransaccion.setFileImportacion(this.jInternalFrameImportacionParametroFactuTransaccion.getjFileChooserImportacion().getSelectedFile());
            	
				this.jInternalFrameImportacionParametroFactuTransaccion.getjTextFieldPathArchivoImportacion().setText(this.jInternalFrameImportacionParametroFactuTransaccion.getFileImportacion().getName());
				
				//System.out.println("ARCHIVO ESCOGIDO: "+this.fileImportacionParametroFactuTransaccion.getName());
				
            } else {
                //System.out.println("CANCELAR SELECCION");
				this.jInternalFrameImportacionParametroFactuTransaccion.getjTextFieldPathArchivoImportacion().setText("SELECCION CANCELADA");
            }			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}		
	}
	
	
	public void jButtonGenerarReporteDinamicoParametroFactuTransaccionActionPerformed(ActionEvent evt) throws Exception {    		
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {	
		
		ArrayList<ParametroFactuTransaccion> parametrofactutransaccionsSeleccionados=new ArrayList<ParametroFactuTransaccion>();		

		parametrofactutransaccionsSeleccionados=this.getParametroFactuTransaccionsSeleccionados(true);
		
		
		this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoParametroFactuTransaccion.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();
		
		this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoParametroFactuTransaccion.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
		
		
		this.sTipoArchivoReporte=this.sTipoArchivoReporteDinamico;
		
		//this.sTipoReporteExtra="Base";
		
			InputStream reportFile=null;
			InputStream imageFile=null;
			
			imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		
			reportFile = AuxiliarReportes.class.getResourceAsStream("ParametroFactuTransaccionBaseDesign.jrxml");	
			
			sPath=this.parametroGeneralUsuario.getpath_exportar()+"ParametroFactuTransaccionBaseDesign.jrxml";
			
			sXmlStringFile=Funciones2.getStringFromInputStream(reportFile);
						
			bufferedWriter = new BufferedWriter(new FileWriter(sPath));
			
			
			sXmlStringFile=this.actualizarReporteDinamico(sXmlStringFile);
			
			
			bufferedWriter.write(sXmlStringFile);
			
			bufferedWriter.close();
			
			try{JasperCompileManager.compileReportToFile(sPath);}catch(Exception e){e.printStackTrace();}
			
			this.actualizarVariablesTipoReporte(false,true,false,sPath);
			
			/*
			this.esReporteDinamico=true;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");
			this.sTipoReporteExtra="";
			*/
			
			this.generarReporteParametroFactuTransaccions("Todos",parametrofactutransaccionsSeleccionados );

			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.parametrofactutransaccionSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				//DEBE APARECER EL REPORTE DIRECTAMENTE
				//JOptionPane.showMessageDialog(this,"GENERADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Parametro Transaccion ",JOptionPane.INFORMATION_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}
	}		
	
	
	public String actualizarReporteDinamico(String sXmlStringFile) {				
		Reporte reporte=new Reporte();
		Integer iAnchoMaximoVertical=535;//781,782
		Integer iAnchoMaximoHorizontal=782;
		Integer iAnchoSum=0;
		Integer iAnchoColumna=0;
		
		Integer iAnchoMargenes=60;
		String sWidthGrafico="535";
		
		for(int index:this.jInternalFrameReporteDinamicoParametroFactuTransaccion.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoParametroFactuTransaccion.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case ParametroFactuTransaccionConstantesFunciones.LABEL_IDEMPRESA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Empresa_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Empresa_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Empresa_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Empresa_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroFactuTransaccionConstantesFunciones.LABEL_IDSUCURSAL:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Sucursal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Sucursal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Sucursal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Sucursal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONINVENFACTURA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TransaccionInvenFactura_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TransaccionInvenFactura_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TransaccionInvenFactura_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TransaccionInvenFactura_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONINVENNOTACREDITO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TransaccionInvenNotaCredito_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TransaccionInvenNotaCredito_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TransaccionInvenNotaCredito_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TransaccionInvenNotaCredito_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONINVENNOTAVENTA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TransaccionInvenNotaVenta_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TransaccionInvenNotaVenta_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TransaccionInvenNotaVenta_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TransaccionInvenNotaVenta_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONCUENTACOFACTURA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TransaccionCuentaCoFactura_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TransaccionCuentaCoFactura_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TransaccionCuentaCoFactura_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TransaccionCuentaCoFactura_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONCUENTACONOTACREDITO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TransaccionCuentaCoNotaCredito_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TransaccionCuentaCoNotaCredito_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TransaccionCuentaCoNotaCredito_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TransaccionCuentaCoNotaCredito_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONCUENTACONOTAVENTA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TransaccionCuentaCoNotaVenta_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TransaccionCuentaCoNotaVenta_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TransaccionCuentaCoNotaVenta_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TransaccionCuentaCoNotaVenta_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONCUENTACOTARJETA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TransaccionCuentaCoTarjeta_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TransaccionCuentaCoTarjeta_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TransaccionCuentaCoTarjeta_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TransaccionCuentaCoTarjeta_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONCUENTAPAFACTURA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TransaccionCuentaPaFactura_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TransaccionCuentaPaFactura_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TransaccionCuentaPaFactura_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TransaccionCuentaPaFactura_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONCUENTAPANOTACREDITO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TransaccionCuentaPaNotaCredito_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TransaccionCuentaPaNotaCredito_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TransaccionCuentaPaNotaCredito_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TransaccionCuentaPaNotaCredito_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;
					
				default :
					break;
			}
		}
		
		iAnchoSum+=iAnchoMargenes;
		
		if(iAnchoSum>iAnchoMaximoVertical) {
			sXmlStringFile=sXmlStringFile.replace("595", "842");
			//sXmlStringFile=sXmlStringFile.replace("842", "595");
			sXmlStringFile=sXmlStringFile.replace("535", "782");
			sXmlStringFile=sXmlStringFile.replace("Portrait", "Landscape");			
			sWidthGrafico="782";
		
		} else {
			sXmlStringFile=sXmlStringFile.replace("842", "595");
			//sXmlStringFile=sXmlStringFile.replace("595", "842");
			sXmlStringFile=sXmlStringFile.replace("782", "535");
			sXmlStringFile=sXmlStringFile.replace("Landscape", "Portrait");
			sWidthGrafico="535";
		}
		
		if(this.jInternalFrameReporteDinamicoParametroFactuTransaccion.getjCheckBoxConGraficoDinamico().isSelected()) {
			sXmlStringFile=this.actualizarGraficoReporteDinamico(sXmlStringFile,sWidthGrafico);
		} else {
			sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "30");
		}
		
		return sXmlStringFile;
	}
	
	
	
	public String actualizarGraficoReporteDinamico(String sXmlStringFile,String sWidthGrafico) {		
		String strGrafico="";		
		String sTipo="NORMAL";
		String strCategorySeries="";
		String sNombreCampoCategoria="";
		String sNombreCampoCategoriaValor="";
		Reporte reporte=new Reporte();
		Reporte reporteCategoriaValor=new Reporte();
		Reporte reporteTipoGraficoReporte=new Reporte();
		Boolean existe=false;
		
		sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "280");
		
		//CATEGORIA GRAFICO				
		reporte=((Reporte)this.jInternalFrameReporteDinamicoParametroFactuTransaccion.getjComboBoxColumnaCategoriaGrafico().getSelectedItem());
				
		//TIPO GRAFICO REPORTE
		reporteTipoGraficoReporte=((Reporte)this.jInternalFrameReporteDinamicoParametroFactuTransaccion.getjComboBoxTiposGraficosReportesDinamico().getSelectedItem());
		
		String sTipoGraficoReporte=reporteTipoGraficoReporte.getsCodigo();
		
		switch(reporte.getsCodigo()) {
			
				case ParametroFactuTransaccionConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoria="id_empresa";
					break;

				case ParametroFactuTransaccionConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoria="id_sucursal";
					break;

				case ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONINVENFACTURA:
					sNombreCampoCategoria="id_transaccion_inven_factura";
					break;

				case ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONINVENNOTACREDITO:
					sNombreCampoCategoria="id_transaccion_inven_nota_credito";
					break;

				case ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONINVENNOTAVENTA:
					sNombreCampoCategoria="id_transaccion_inven_nota_venta";
					break;

				case ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONCUENTACOFACTURA:
					sNombreCampoCategoria="id_transaccion_cuenta_co_factura";
					break;

				case ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONCUENTACONOTACREDITO:
					sNombreCampoCategoria="id_transaccion_cuenta_co_nota_credito";
					break;

				case ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONCUENTACONOTAVENTA:
					sNombreCampoCategoria="id_transaccion_cuenta_co_nota_venta";
					break;

				case ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONCUENTACOTARJETA:
					sNombreCampoCategoria="id_transaccion_cuenta_co_tarjeta";
					break;

				case ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONCUENTAPAFACTURA:
					sNombreCampoCategoria="id_transaccion_cuenta_pa_factura";
					break;

				case ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONCUENTAPANOTACREDITO:
					sNombreCampoCategoria="id_transaccion_cuenta_pa_nota_credito";
					break;
					
			default :
				break;
		}		
		//CATEGORIA GRAFICO
		
		//CATEGORIA VALOR				
		reporteCategoriaValor=((Reporte)this.jInternalFrameReporteDinamicoParametroFactuTransaccion.getjComboBoxColumnaCategoriaValor().getSelectedItem());
		
		switch(reporteCategoriaValor.getsCodigo()) {
			
				case ParametroFactuTransaccionConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoriaValor="id_empresa";
					break;

				case ParametroFactuTransaccionConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoriaValor="id_sucursal";
					break;

				case ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONINVENFACTURA:
					sNombreCampoCategoriaValor="id_transaccion_inven_factura";
					break;

				case ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONINVENNOTACREDITO:
					sNombreCampoCategoriaValor="id_transaccion_inven_nota_credito";
					break;

				case ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONINVENNOTAVENTA:
					sNombreCampoCategoriaValor="id_transaccion_inven_nota_venta";
					break;

				case ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONCUENTACOFACTURA:
					sNombreCampoCategoriaValor="id_transaccion_cuenta_co_factura";
					break;

				case ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONCUENTACONOTACREDITO:
					sNombreCampoCategoriaValor="id_transaccion_cuenta_co_nota_credito";
					break;

				case ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONCUENTACONOTAVENTA:
					sNombreCampoCategoriaValor="id_transaccion_cuenta_co_nota_venta";
					break;

				case ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONCUENTACOTARJETA:
					sNombreCampoCategoriaValor="id_transaccion_cuenta_co_tarjeta";
					break;

				case ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONCUENTAPAFACTURA:
					sNombreCampoCategoriaValor="id_transaccion_cuenta_pa_factura";
					break;

				case ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONCUENTAPANOTACREDITO:
					sNombreCampoCategoriaValor="id_transaccion_cuenta_pa_nota_credito";
					break;
					
			default :
				break;
		}	
		//CATEGORIA VALOR
		
		//VALORES GRAFICO
		for(int index:this.jInternalFrameReporteDinamicoParametroFactuTransaccion.getjListColumnasValoresGrafico().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoParametroFactuTransaccion.getjListColumnasValoresGrafico().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case ParametroFactuTransaccionConstantesFunciones.LABEL_IDEMPRESA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Empresa",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_empresa");
					break;

				case ParametroFactuTransaccionConstantesFunciones.LABEL_IDSUCURSAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Sucursal",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_sucursal");
					break;

				case ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONINVENFACTURA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Facturacion.",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_transaccion_inven_factura");
					break;

				case ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONINVENNOTACREDITO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Nota De Credito.",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_transaccion_inven_nota_credito");
					break;

				case ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONINVENNOTAVENTA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Nota De Venta.",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_transaccion_inven_nota_venta");
					break;

				case ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONCUENTACOFACTURA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Facturacion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_transaccion_cuenta_co_factura");
					break;

				case ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONCUENTACONOTACREDITO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Nota De Credito",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_transaccion_cuenta_co_nota_credito");
					break;

				case ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONCUENTACONOTAVENTA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Nota De Venta",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_transaccion_cuenta_co_nota_venta");
					break;

				case ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONCUENTACOTARJETA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tarjeta De Credito",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_transaccion_cuenta_co_tarjeta");
					break;

				case ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONCUENTAPAFACTURA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Facturacion_",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_transaccion_cuenta_pa_factura");
					break;

				case ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONCUENTAPANOTACREDITO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Nota De Credito_",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_transaccion_cuenta_pa_nota_credito");
					break;
					
				default :
					break;
			}
		}
		//VALORES GRAFICO
		//if(sTipoGraficoReporte.equals("BARRAS") || sTipoGraficoReporte.equals("BARRAS_3D") || sTipoGraficoReporte.equals("BARRAS_XY") ||
		//   sTipoGraficoReporte.equals("PASTEL") || sTipoGraficoReporte.equals("PASTEL_3D") || sTipoGraficoReporte.equals("APILADO")) {
			
			existe=true;
			strGrafico=FuncionesReporte.getStringGraficoReporte(sTipoGraficoReporte,sWidthGrafico,strCategorySeries);			
		//}
		
		if(existe) {
			sXmlStringFile=sXmlStringFile.replace("<!--GRAFICO-->", strGrafico);
		}												
		
		return sXmlStringFile;
	}
	
	
	//@SuppressWarnings("deprecation")
	
	public void jButtonGenerarExcelReporteDinamicoParametroFactuTransaccionActionPerformed(ActionEvent evt) throws Exception {		
		ArrayList<ParametroFactuTransaccion> parametrofactutransaccionsSeleccionados=new ArrayList<ParametroFactuTransaccion>();		
		
		parametrofactutransaccionsSeleccionados=this.getParametroFactuTransaccionsSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"parametrofactutransaccion";//.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		Boolean existeFilas=false;
		
		Workbook workbook = null;
		FileOutputStream fileOutputStream=null;
		Reporte reporte=new Reporte();
		
		try {
			
			if(sTipoArchivoReporte=="EXCEL2") {
				workbook = new HSSFWorkbook();
				sPath+=".xls";
			
			} else if(sTipoArchivoReporte=="EXCEL2_2") {
				workbook = new XSSFWorkbook();
				sPath+=".xlsx";			
			}
		
			Sheet sheet = workbook.createSheet("ParametroFactuTransaccions");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			Row row = sheet.createRow(iRow);
			Cell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");
			
			for(int index:this.jInternalFrameReporteDinamicoParametroFactuTransaccion.getjListColumnasSelectReporte().getSelectedIndices()) {
				reporte=(Reporte)this.jInternalFrameReporteDinamicoParametroFactuTransaccion.getjListColumnasSelectReporte().getModel().getElementAt(index);
				
				switch(reporte.getsCodigo()) {
					
				case ParametroFactuTransaccionConstantesFunciones.LABEL_IDEMPRESA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuTransaccionConstantesFunciones.LABEL_IDEMPRESA);
					iRow++;

					for(ParametroFactuTransaccion parametrofactutransaccion:parametrofactutransaccionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactutransaccion.getempresa_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroFactuTransaccionConstantesFunciones.LABEL_IDSUCURSAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuTransaccionConstantesFunciones.LABEL_IDSUCURSAL);
					iRow++;

					for(ParametroFactuTransaccion parametrofactutransaccion:parametrofactutransaccionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactutransaccion.getsucursal_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONINVENFACTURA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONINVENFACTURA);
					iRow++;

					for(ParametroFactuTransaccion parametrofactutransaccion:parametrofactutransaccionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactutransaccion.gettransaccioninvenfactura_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONINVENNOTACREDITO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONINVENNOTACREDITO);
					iRow++;

					for(ParametroFactuTransaccion parametrofactutransaccion:parametrofactutransaccionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactutransaccion.gettransaccioninvennotacredito_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONINVENNOTAVENTA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONINVENNOTAVENTA);
					iRow++;

					for(ParametroFactuTransaccion parametrofactutransaccion:parametrofactutransaccionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactutransaccion.gettransaccioninvennotaventa_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONCUENTACOFACTURA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONCUENTACOFACTURA);
					iRow++;

					for(ParametroFactuTransaccion parametrofactutransaccion:parametrofactutransaccionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactutransaccion.gettransaccioncuentacofactura_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONCUENTACONOTACREDITO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONCUENTACONOTACREDITO);
					iRow++;

					for(ParametroFactuTransaccion parametrofactutransaccion:parametrofactutransaccionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactutransaccion.gettransaccioncuentaconotacredito_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONCUENTACONOTAVENTA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONCUENTACONOTAVENTA);
					iRow++;

					for(ParametroFactuTransaccion parametrofactutransaccion:parametrofactutransaccionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactutransaccion.gettransaccioncuentaconotaventa_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONCUENTACOTARJETA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONCUENTACOTARJETA);
					iRow++;

					for(ParametroFactuTransaccion parametrofactutransaccion:parametrofactutransaccionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactutransaccion.gettransaccioncuentacotarjeta_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONCUENTAPAFACTURA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONCUENTAPAFACTURA);
					iRow++;

					for(ParametroFactuTransaccion parametrofactutransaccion:parametrofactutransaccionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactutransaccion.gettransaccioncuentapafactura_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONCUENTAPANOTACREDITO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONCUENTAPANOTACREDITO);
					iRow++;

					for(ParametroFactuTransaccion parametrofactutransaccion:parametrofactutransaccionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactutransaccion.gettransaccioncuentapanotacredito_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;
					
					default :
						break;
				}
			}
			
			
			//if(conCabecera) {
			//	this.getFilaCabeceraExportarExcelParametroFactuTransaccion(row);				
			//	iRow++;
			//}				
			
			//for(ParametroFactuTransaccion parametrofactutransaccionAux:parametrofactutransaccionsSeleccionados) {
			//	row = sheet.createRow(iRow);
				
			//	this.getFilaDatosExportarExcelParametroFactuTransaccion(parametrofactutransaccionAux,row);
				
			//	iRow++;
			//}
			
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.parametrofactutransaccionSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Parametro Transaccion ",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}				
	}	
	
	
	
	
	public void buscarPorId(Long idActual) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.getNewConnexionToDeep("");
			}
			
			this.idActual=idActual;
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda("PorId");
				    	
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingParametroFactuTransaccion(false);
			
			//SI ES MANUAL
			if(ParametroFactuTransaccionJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualParametroFactuTransaccion();
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger);
			
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonAnterioresParametroFactuTransaccionActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion-=this.iNumeroPaginacion;
			/*
			if(this.iNumeroPaginacion<0) {
				this.iNumeroPaginacion=0;
			}
			*/
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.getNewConnexionToDeep("");
			}
			
			this.anteriores();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingParametroFactuTransaccion(false);
			
			//SI ES MANUAL
			if(ParametroFactuTransaccionJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualParametroFactuTransaccion();
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonSiguientesParametroFactuTransaccionActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion+=this.iNumeroPaginacion;
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.getNewConnexionToDeep("");
			}
			
			this.siguientes();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingParametroFactuTransaccion(false);
			
			//SI ES MANUAL
			if(ParametroFactuTransaccionJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualParametroFactuTransaccion();
			}		
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void aumentarTamanioFilaNuevaTablaParametroFactuTransaccion() throws Exception {		
		Dimension dimensionMinimum=this.jTableDatosParametroFactuTransaccion.getMinimumSize();
		Dimension dimensionMaximum=this.jTableDatosParametroFactuTransaccion.getMaximumSize();
		Dimension dimensionPreferred=this.jTableDatosParametroFactuTransaccion.getPreferredSize();
	
		double iHeightConFilaNueva=dimensionPreferred.getHeight();
		
		iHeightConFilaNueva+=this.jTableDatosParametroFactuTransaccion.getRowHeight();
		
		dimensionMinimum.setSize(dimensionMinimum.getWidth(),iHeightConFilaNueva);
		dimensionMaximum.setSize(dimensionMaximum.getWidth(),iHeightConFilaNueva);
		dimensionPreferred.setSize(dimensionPreferred.getWidth(),iHeightConFilaNueva);
		
		this.jTableDatosParametroFactuTransaccion.setMinimumSize(dimensionMinimum);
		this.jTableDatosParametroFactuTransaccion.setMaximumSize(dimensionMaximum);
		this.jTableDatosParametroFactuTransaccion.setPreferredSize(dimensionPreferred);	
	}
	
	public void inicializarActualizarBindingParametroFactuTransaccion(Boolean esInicializar) throws Exception {
		this.inicializarActualizarBindingParametroFactuTransaccion(esInicializar,true);
	}
	
	public void inicializarActualizarBindingParametroFactuTransaccion(Boolean esInicializar,Boolean conTabla) throws Exception {		
		if(conTabla) {
			this.inicializarActualizarBindingTablaParametroFactuTransaccion(esInicializar);
		}
		
		this.inicializarActualizarBindingBotonesParametroFactuTransaccion(esInicializar);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.parametrofactutransaccionSessionBean.getEsGuardarRelacionado()) {
			try{this.inicializarActualizarBindingBusquedasParametroFactuTransaccion(esInicializar);}catch(Exception e){e.printStackTrace();}
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesParametroFactuTransaccion(esInicializar) ;
			
			this.inicializarActualizarBindingParametrosReportesParametroFactuTransaccion(esInicializar) ;
		}
		
		if(esInicializar) {
			if( !ParametroFactuTransaccionJInternalFrame.ISBINDING_MANUAL_TABLA ||
			   	!ParametroFactuTransaccionJInternalFrame.ISBINDING_MANUAL) {
			   	
			}
		}
	}
	
	public void inicializarActualizarBindingManualParametroFactuTransaccion() throws Exception {		
		//NO SE NECESITA HACER BINDING OTRA VEZ
		//this.inicializarActualizarBindingTablaParametroFactuTransaccion();
		
		this.inicializarActualizarBindingBotonesManualParametroFactuTransaccion(true);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.parametrofactutransaccionSessionBean.getEsGuardarRelacionado()) {
			
			this.inicializarActualizarBindingBusquedasManualParametroFactuTransaccion();			
			
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesParametroFactuTransaccion() ;
			
			this.inicializarActualizarBindingParametrosReportesPostAccionesManualParametroFactuTransaccion(false) ;			
			
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesPostAccionesManualParametroFactuTransaccion(Boolean esSetControles) throws Exception {
		try	{					
			if(!esSetControles) {
				this.isSeleccionarTodos=this.jCheckBoxSeleccionarTodosParametroFactuTransaccion.isSelected();
				this.isSeleccionados=this.jCheckBoxSeleccionadosParametroFactuTransaccion.isSelected();
				
				
				this.conGraficoReporte=this.jCheckBoxConGraficoReporteParametroFactuTransaccion.isSelected();															
				
				
				if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) {
				this.isPostAccionNuevo=this.jInternalFrameDetalleFormParametroFactuTransaccion.jCheckBoxPostAccionNuevoParametroFactuTransaccion.isSelected();
				this.isPostAccionSinCerrar=this.jInternalFrameDetalleFormParametroFactuTransaccion.jCheckBoxPostAccionSinCerrarParametroFactuTransaccion.isSelected();
				this.isPostAccionSinMensaje=this.jInternalFrameDetalleFormParametroFactuTransaccion.jCheckBoxPostAccionSinMensajeParametroFactuTransaccion.isSelected();
				}
			
			} else {
				this.jCheckBoxSeleccionarTodosParametroFactuTransaccion.setSelected(this.isSeleccionarTodos);
				this.jCheckBoxSeleccionadosParametroFactuTransaccion.setSelected(this.isSeleccionados);
				
				
				this.jCheckBoxConGraficoReporteParametroFactuTransaccion.setSelected(this.conGraficoReporte);				
				
				
				if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) {
				this.jInternalFrameDetalleFormParametroFactuTransaccion.jCheckBoxPostAccionNuevoParametroFactuTransaccion.setSelected(this.isPostAccionNuevo);
				this.jInternalFrameDetalleFormParametroFactuTransaccion.jCheckBoxPostAccionSinCerrarParametroFactuTransaccion.setSelected(this.isPostAccionSinCerrar);
				this.jInternalFrameDetalleFormParametroFactuTransaccion.jCheckBoxPostAccionSinMensajeParametroFactuTransaccion.setSelected(this.isPostAccionSinMensaje);
				}
			}
			
			
			if(this.jComboBoxTiposPaginacionParametroFactuTransaccion.getSelectedItem()!=null) {
				this.sTipoPaginacion=((Reporte)this.jComboBoxTiposPaginacionParametroFactuTransaccion.getSelectedItem()).getsCodigo();			
			}
			
			
			
			if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) {
			this.sTipoAccionFormulario=((Reporte)this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxTiposAccionesFormularioParametroFactuTransaccion.getSelectedItem()).getsCodigo();
			}
			
			
			
			if(!this.conCargarMinimo) {
				this.sTipoArchivoReporte=((Reporte)this.jComboBoxTiposArchivosReportesParametroFactuTransaccion.getSelectedItem()).getsCodigo();			
				
				if(this.jInternalFrameReporteDinamicoParametroFactuTransaccion!=null) {
					this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoParametroFactuTransaccion.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
				}
				
				this.sTipoRelacion=((Reporte)this.jComboBoxTiposRelacionesParametroFactuTransaccion.getSelectedItem()).getsCodigo();
									
				this.sTipoAccion=((Reporte)this.jComboBoxTiposAccionesParametroFactuTransaccion.getSelectedItem()).getsCodigo();
													
				this.sTipoSeleccionar=((Reporte)this.jComboBoxTiposSeleccionarParametroFactuTransaccion.getSelectedItem()).getsCodigo();
									
				this.sTipoReporte=((Reporte)this.jComboBoxTiposReportesParametroFactuTransaccion.getSelectedItem()).getsCodigo();							
					
				if(this.jInternalFrameReporteDinamicoParametroFactuTransaccion!=null) {
					this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoParametroFactuTransaccion.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();							
				}
				
				this.sTipoGraficoReporte=((Reporte)this.jComboBoxTiposGraficosReportesParametroFactuTransaccion.getSelectedItem()).getsCodigo();											
			}			
			
			this.sValorCampoGeneral=this.jTextFieldValorCampoGeneralParametroFactuTransaccion.getText();						
			
			
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesParametroFactuTransaccion(Boolean esInicializar) throws Exception {
		try	{	
			if(ParametroFactuTransaccionJInternalFrame.ISBINDING_MANUAL) {
				this. inicializarActualizarBindingParametrosReportesPostAccionesManualParametroFactuTransaccion(false);
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public void inicializarActualizarBindingtiposArchivosReportesAccionesParametroFactuTransaccion() throws Exception {
		try	{
			if(ParametroFactuTransaccionJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingtiposArchivosReportesAccionesManualParametroFactuTransaccion();
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleParametroFactuTransaccion() throws Exception {
		//TIPOS ACCIONES FORMULARIO	
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxTiposAccionesFormularioParametroFactuTransaccion.removeAllItems();
				
		for(Reporte reporte:this.tiposAccionesFormulario) {
			this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxTiposAccionesFormularioParametroFactuTransaccion.addItem(reporte);
		}
		
		//TIPOS ACCIONES FORMULARIO
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualParametroFactuTransaccion() throws Exception {
		try	{
			
			//TIPOS ARCHIVOS REPORTES
			this.jComboBoxTiposArchivosReportesParametroFactuTransaccion.removeAllItems();
				
			for(Reporte reporte:this.tiposArchivosReportes) {
				this.jComboBoxTiposArchivosReportesParametroFactuTransaccion.addItem(reporte);
			}
			
			
				
			//TIPOS REPORTES
			this.jComboBoxTiposReportesParametroFactuTransaccion.removeAllItems();
				
			for(Reporte reporte:this.tiposReportes) {
				this.jComboBoxTiposReportesParametroFactuTransaccion.addItem(reporte);
			}
			
			
			//TIPOS GRAFICOS REPORTES
			this.jComboBoxTiposGraficosReportesParametroFactuTransaccion.removeAllItems();
				
			for(Reporte reporte:this.tiposGraficosReportes) {
				this.jComboBoxTiposGraficosReportesParametroFactuTransaccion.addItem(reporte);
			}
			
			
			//TIPOS PAGINACION
			this.jComboBoxTiposPaginacionParametroFactuTransaccion.removeAllItems();
				
			for(Reporte reporte:this.tiposPaginacion) {
				this.jComboBoxTiposPaginacionParametroFactuTransaccion.addItem(reporte);
			}
			
			
			if(!this.parametrofactutransaccionSessionBean.getEsGuardarRelacionado()) {
				this.jComboBoxTiposPaginacionParametroFactuTransaccion.setSelectedItem(Funciones2.getTipoPaginacionDefecto("NORMAL",this.tiposPaginacion));
			} else {
				this.jComboBoxTiposPaginacionParametroFactuTransaccion.setSelectedItem(Funciones2.getTipoPaginacionDefecto("RELACIONADO",this.tiposPaginacion));
			}
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposRelacionesParametroFactuTransaccion.removeAllItems();
				
			for(Reporte reporte:this.tiposRelaciones) {
				this.jComboBoxTiposRelacionesParametroFactuTransaccion.addItem(reporte);
			}
			
			//TIPOS ACCIONES
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposAccionesParametroFactuTransaccion.removeAllItems();
				
			for(Reporte reporte:this.tiposAcciones) {
				this.jComboBoxTiposAccionesParametroFactuTransaccion.addItem(reporte);
			}
			
			//TIPOS ACCIONES			
			
			
			
			//TIPOS ACCIONES FORMULARIO	
			if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) { //if(this.conCargarFormDetalle) {
				this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxTiposAccionesFormularioParametroFactuTransaccion.removeAllItems();
				
				for(Reporte reporte:this.tiposAccionesFormulario) {
					this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxTiposAccionesFormularioParametroFactuTransaccion.addItem(reporte);
				}
				
			}
			//TIPOS ACCIONES FORMULARIO
			
			
			
			//TIPOS SELECCIONAR
			this.jComboBoxTiposSeleccionarParametroFactuTransaccion.removeAllItems();
				
			for(Reporte reporte:this.tiposSeleccionar) {
				this.jComboBoxTiposSeleccionarParametroFactuTransaccion.addItem(reporte);
			}
			
			
			if(this.tiposSeleccionar!=null && this.tiposSeleccionar.size()>1) {
				this.jComboBoxTiposSeleccionarParametroFactuTransaccion.setSelectedIndex(1);
			}
				
			//REPORTE DINAMICO
			this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualParametroFactuTransaccion();
							
			//TIPOS COLUMNAS SELECT
			//TIPOS SELECCIONAR
			
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualParametroFactuTransaccion() throws Exception {
		try	{
			DefaultListModel<Reporte> defaultListModel=new DefaultListModel<Reporte>();
			
			
			//TIPOS ARCHIVOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoParametroFactuTransaccion!=null) {
				this.jInternalFrameReporteDinamicoParametroFactuTransaccion.getjComboBoxTiposArchivosReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposArchivosReportesDinamico) {
					this.jInternalFrameReporteDinamicoParametroFactuTransaccion.getjComboBoxTiposArchivosReportesDinamico().addItem(reporte);
				}
				
			}
			
			//TIPOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoParametroFactuTransaccion!=null) {
				this.jInternalFrameReporteDinamicoParametroFactuTransaccion.getjComboBoxTiposReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposReportesDinamico) {
					this.jInternalFrameReporteDinamicoParametroFactuTransaccion.getjComboBoxTiposReportesDinamico().addItem(reporte);
				}
				
			}
			
			defaultListModel=new DefaultListModel<Reporte>();
			
			if(this.jInternalFrameReporteDinamicoParametroFactuTransaccion!=null) {
				
				if(this.jInternalFrameReporteDinamicoParametroFactuTransaccion.getjListColumnasSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoParametroFactuTransaccion.getjListColumnasSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposColumnasSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoParametroFactuTransaccion.getjListColumnasSelectReporte().setModel(defaultListModel);									
						
				}	
					
				//TIPOS RELACIONES SELECT
				//TIPOS SELECCIONAR
				defaultListModel=new DefaultListModel<Reporte>();
				if(this.jInternalFrameReporteDinamicoParametroFactuTransaccion.getjListRelacionesSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoParametroFactuTransaccion.getjListRelacionesSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposRelacionesSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoParametroFactuTransaccion.getjListRelacionesSelectReporte().setModel(defaultListModel);									
						
				}	
				
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	
	
	public void inicializarActualizarBindingBusquedasManualParametroFactuTransaccion()  throws Exception {				
		//BYDAN_BUSQUEDAS		
		
		if(this.jComboBoxid_transaccion_cuenta_co_facturaFK_IdTransaccionCuentaCoFacturaParametroFactuTransaccion.getSelectedItem()!=null){this.id_transaccion_cuenta_co_facturaFK_IdTransaccionCuentaCoFactura=((Transaccion)this.jComboBoxid_transaccion_cuenta_co_facturaFK_IdTransaccionCuentaCoFacturaParametroFactuTransaccion.getSelectedItem()).getId();}
		if(this.jComboBoxid_transaccion_cuenta_co_nota_creditoFK_IdTransaccionCuentaCoNotaCreditoParametroFactuTransaccion.getSelectedItem()!=null){this.id_transaccion_cuenta_co_nota_creditoFK_IdTransaccionCuentaCoNotaCredito=((Transaccion)this.jComboBoxid_transaccion_cuenta_co_nota_creditoFK_IdTransaccionCuentaCoNotaCreditoParametroFactuTransaccion.getSelectedItem()).getId();}
		if(this.jComboBoxid_transaccion_cuenta_co_nota_ventaFK_IdTransaccionCuentaCoNotaVentaParametroFactuTransaccion.getSelectedItem()!=null){this.id_transaccion_cuenta_co_nota_ventaFK_IdTransaccionCuentaCoNotaVenta=((Transaccion)this.jComboBoxid_transaccion_cuenta_co_nota_ventaFK_IdTransaccionCuentaCoNotaVentaParametroFactuTransaccion.getSelectedItem()).getId();}
		if(this.jComboBoxid_transaccion_cuenta_co_tarjetaFK_IdTransaccionCuentaCoTarjetaParametroFactuTransaccion.getSelectedItem()!=null){this.id_transaccion_cuenta_co_tarjetaFK_IdTransaccionCuentaCoTarjeta=((Transaccion)this.jComboBoxid_transaccion_cuenta_co_tarjetaFK_IdTransaccionCuentaCoTarjetaParametroFactuTransaccion.getSelectedItem()).getId();}
		if(this.jComboBoxid_transaccion_cuenta_pa_facturaFK_IdTransaccionCuentaPaFacturaParametroFactuTransaccion.getSelectedItem()!=null){this.id_transaccion_cuenta_pa_facturaFK_IdTransaccionCuentaPaFactura=((Transaccion)this.jComboBoxid_transaccion_cuenta_pa_facturaFK_IdTransaccionCuentaPaFacturaParametroFactuTransaccion.getSelectedItem()).getId();}
		if(this.jComboBoxid_transaccion_cuenta_pa_nota_creditoFK_IdTransaccionCuentaPaNotaCreditoParametroFactuTransaccion.getSelectedItem()!=null){this.id_transaccion_cuenta_pa_nota_creditoFK_IdTransaccionCuentaPaNotaCredito=((Transaccion)this.jComboBoxid_transaccion_cuenta_pa_nota_creditoFK_IdTransaccionCuentaPaNotaCreditoParametroFactuTransaccion.getSelectedItem()).getId();}
		if(this.jComboBoxid_transaccion_inven_facturaFK_IdTransaccionInvenFacturaParametroFactuTransaccion.getSelectedItem()!=null){this.id_transaccion_inven_facturaFK_IdTransaccionInvenFactura=((Transaccion)this.jComboBoxid_transaccion_inven_facturaFK_IdTransaccionInvenFacturaParametroFactuTransaccion.getSelectedItem()).getId();}
		if(this.jComboBoxid_transaccion_inven_nota_creditoFK_IdTransaccionInvenNotaCreditoParametroFactuTransaccion.getSelectedItem()!=null){this.id_transaccion_inven_nota_creditoFK_IdTransaccionInvenNotaCredito=((Transaccion)this.jComboBoxid_transaccion_inven_nota_creditoFK_IdTransaccionInvenNotaCreditoParametroFactuTransaccion.getSelectedItem()).getId();}
		if(this.jComboBoxid_transaccion_inven_nota_ventaFK_IdTransaccionInvenNotaVentaParametroFactuTransaccion.getSelectedItem()!=null){this.id_transaccion_inven_nota_ventaFK_IdTransaccionInvenNotaVenta=((Transaccion)this.jComboBoxid_transaccion_inven_nota_ventaFK_IdTransaccionInvenNotaVentaParametroFactuTransaccion.getSelectedItem()).getId();}
		
	}
	
	
	
	
	public void inicializarActualizarBindingBusquedasParametroFactuTransaccion(Boolean esInicializar) throws Exception {				
		if(ParametroFactuTransaccionJInternalFrame.ISBINDING_MANUAL) {
			
			this.inicializarActualizarBindingBusquedasManualParametroFactuTransaccion();			
			
		} else {
		}
	}		
		
	public void inicializarActualizarBindingTablaParametroFactuTransaccion() throws Exception {
		this.inicializarActualizarBindingTablaParametroFactuTransaccion(false);
	}
	
	
	public void inicializarActualizarBindingTablaOrderByParametroFactuTransaccion() {
		//TABLA OrderBy	
		TableColumn tableColumn=new TableColumn();
		Integer iWidthTableDefinicionOrderBy=0;			
			
		this.jInternalFrameOrderByParametroFactuTransaccion.getjTableDatosOrderBy().setModel(new TablaGeneralOrderByModel(this.arrOrderBy));
					
		//DEFINIR RENDERERS OrderBy
		tableColumn=this.jInternalFrameOrderByParametroFactuTransaccion.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByParametroFactuTransaccion.getjTableDatosOrderBy(),OrderBy.ISSELECTED));			
		//tableColumn.addPropertyChangeListener(new ParametroFactuTransaccionPropertyChangeListener());
					
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		iWidthTableDefinicionOrderBy+=50;
					
		tableColumn=this.jInternalFrameOrderByParametroFactuTransaccion.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByParametroFactuTransaccion.getjTableDatosOrderBy(),OrderBy.NOMBRE));
		//tableColumn.addPropertyChangeListener(new ParametroFactuTransaccionPropertyChangeListener());
					
		tableColumn.setPreferredWidth(150); 	 
		tableColumn.setWidth(150); 	 
		tableColumn.setMinWidth(150);
		tableColumn.setMaxWidth(150);
				
		iWidthTableDefinicionOrderBy+=150;
					
		//tableColumn=this.jTableDatosParametroFactuTransaccionOrderBy.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuTransaccionOrderBy,OrderBy.NOMBREDB));			
		////tableColumn.addPropertyChangeListener(new ParametroFactuTransaccionPropertyChangeListener());
								
		tableColumn=this.jInternalFrameOrderByParametroFactuTransaccion.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByParametroFactuTransaccion.getjTableDatosOrderBy(),OrderBy.ESDESC));
		//tableColumn.addPropertyChangeListener(new ParametroFactuTransaccionPropertyChangeListener());
												
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		((AbstractTableModel) this.jInternalFrameOrderByParametroFactuTransaccion.getjTableDatosOrderBy().getModel()).fireTableDataChanged();
				
		iWidthTableDefinicionOrderBy+=50;
	}
	
	
	
	public void inicializarActualizarBindingTablaParametroFactuTransaccion(Boolean esInicializar) throws Exception {
		Boolean isNoExiste=false;
		Integer iCountNumeroColumnasNormal=0;
		Integer iCountNumeroColumnasFk=0;
		
		this.iWidthTableDefinicion=0;
		
		int iSizeTabla=0;
		
		iSizeTabla=this.getSizeTablaDatos();
		
	if(esInicializar || ConstantesSwing.FORZAR_INICIALIZAR_TABLA) {//esInicializar
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			isNoExiste=parametrofactutransaccionLogic.getParametroFactuTransaccions().size()==0;
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			isNoExiste=parametrofactutransaccions.size()==0;
		}
		//ARCHITECTURE
			
		if(isNoExiste) {
			if(this.iNumeroPaginacion-this.iNumeroPaginacion>0) {
				this.iNumeroPaginacion-=this.iNumeroPaginacion;
			}
		}
		
		TableColumn tableColumn=new TableColumn();
		
		if(ParametroFactuTransaccionJInternalFrame.ISBINDING_MANUAL_TABLA) {
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.jTableDatosParametroFactuTransaccion.setModel(new ParametroFactuTransaccionModel(this.parametrofactutransaccionLogic.getParametroFactuTransaccions(),this));
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.jTableDatosParametroFactuTransaccion.setModel(new ParametroFactuTransaccionModel(this.parametrofactutransaccions,this));
			}
			//ARCHITECTURE
			
							
			
			
			if(this.jInternalFrameOrderByParametroFactuTransaccion!=null && this.jInternalFrameOrderByParametroFactuTransaccion.getjTableDatosOrderBy()!=null) {
				this.inicializarActualizarBindingTablaOrderByParametroFactuTransaccion();
			}
			
								
			//DEFINIR RENDERERS
			tableColumn=this.jTableDatosParametroFactuTransaccion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuTransaccion,Constantes2.S_SELECCIONAR));
			//tableColumn.addPropertyChangeListener(new ParametroFactuTransaccionPropertyChangeListener());
			tableColumn.setCellRenderer(new BooleanRenderer(true,"Seleccionar "+ParametroFactuTransaccionConstantesFunciones.SCLASSWEBTITULO,parametrofactutransaccionConstantesFunciones.resaltarSeleccionarParametroFactuTransaccion,true,false,"","",this));
			tableColumn.setCellEditor(new BooleanEditorRenderer(true,"Seleccionar "+ParametroFactuTransaccionConstantesFunciones.SCLASSWEBTITULO,parametrofactutransaccionConstantesFunciones.resaltarSeleccionarParametroFactuTransaccion,false,"","",this));			
			
			tableColumn.setPreferredWidth(50); 	 
			tableColumn.setWidth(50); 	 
			tableColumn.setMinWidth(50); 
			tableColumn.setMaxWidth(50); 
			
			this.iWidthTableDefinicion+=50;
			
			


			tableColumn=this.jTableDatosParametroFactuTransaccion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuTransaccion,ParametroFactuTransaccionConstantesFunciones.LABEL_ID));

		if(this.parametrofactutransaccionConstantesFunciones.mostraridParametroFactuTransaccion && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuTransaccionConstantesFunciones.LABEL_ID,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.parametrofactutransaccionConstantesFunciones.resaltaridParametroFactuTransaccion,this.parametrofactutransaccionConstantesFunciones.activaridParametroFactuTransaccion,this,true,"idParametroFactuTransaccion","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.parametrofactutransaccionConstantesFunciones.resaltaridParametroFactuTransaccion,this.parametrofactutransaccionConstantesFunciones.activaridParametroFactuTransaccion,this,true,"idParametroFactuTransaccion","BASICO",false));

			tableColumn.setPreferredWidth(50);
			tableColumn.setWidth(50);
			tableColumn.setMinWidth(50);
			tableColumn.setMaxWidth(50);

			this.iWidthTableDefinicion+=50;
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuTransaccion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuTransaccion,ParametroFactuTransaccionConstantesFunciones.LABEL_IDEMPRESA));

		if(this.parametrofactutransaccionConstantesFunciones.mostrarid_empresaParametroFactuTransaccion && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuTransaccionConstantesFunciones.LABEL_IDEMPRESA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new EmpresaTableCell(this.empresasForeignKey,this.parametrofactutransaccionConstantesFunciones.resaltarid_empresaParametroFactuTransaccion,this,this.parametrofactutransaccionConstantesFunciones.activarid_empresaParametroFactuTransaccion));
			tableColumn.setCellEditor(new EmpresaTableCell(this.empresasForeignKey,this.parametrofactutransaccionConstantesFunciones.resaltarid_empresaParametroFactuTransaccion,this,this.parametrofactutransaccionConstantesFunciones.activarid_empresaParametroFactuTransaccion,false,"id_empresaParametroFactuTransaccion","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ParametroFactuTransaccionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuTransaccion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuTransaccion,ParametroFactuTransaccionConstantesFunciones.LABEL_IDSUCURSAL));

		if(this.parametrofactutransaccionConstantesFunciones.mostrarid_sucursalParametroFactuTransaccion && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuTransaccionConstantesFunciones.LABEL_IDSUCURSAL,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new SucursalTableCell(this.sucursalsForeignKey,this.parametrofactutransaccionConstantesFunciones.resaltarid_sucursalParametroFactuTransaccion,this,this.parametrofactutransaccionConstantesFunciones.activarid_sucursalParametroFactuTransaccion));
			tableColumn.setCellEditor(new SucursalTableCell(this.sucursalsForeignKey,this.parametrofactutransaccionConstantesFunciones.resaltarid_sucursalParametroFactuTransaccion,this,this.parametrofactutransaccionConstantesFunciones.activarid_sucursalParametroFactuTransaccion,false,"id_sucursalParametroFactuTransaccion","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ParametroFactuTransaccionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuTransaccion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuTransaccion,ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONINVENFACTURA));

		if(this.parametrofactutransaccionConstantesFunciones.mostrarid_transaccion_inven_facturaParametroFactuTransaccion && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONINVENFACTURA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TransaccionTableCell(this.transaccioninvenfacturasForeignKey,this.parametrofactutransaccionConstantesFunciones.resaltarid_transaccion_inven_facturaParametroFactuTransaccion,this,this.parametrofactutransaccionConstantesFunciones.activarid_transaccion_inven_facturaParametroFactuTransaccion));
			tableColumn.setCellEditor(new TransaccionTableCell(this.transaccioninvenfacturasForeignKey,this.parametrofactutransaccionConstantesFunciones.resaltarid_transaccion_inven_facturaParametroFactuTransaccion,this,this.parametrofactutransaccionConstantesFunciones.activarid_transaccion_inven_facturaParametroFactuTransaccion,true,"id_transaccion_inven_facturaParametroFactuTransaccion","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50);
			//tableColumn.addPropertyChangeListener(new ParametroFactuTransaccionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuTransaccion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuTransaccion,ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONINVENNOTACREDITO));

		if(this.parametrofactutransaccionConstantesFunciones.mostrarid_transaccion_inven_nota_creditoParametroFactuTransaccion && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONINVENNOTACREDITO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TransaccionTableCell(this.transaccioninvennotacreditosForeignKey,this.parametrofactutransaccionConstantesFunciones.resaltarid_transaccion_inven_nota_creditoParametroFactuTransaccion,this,this.parametrofactutransaccionConstantesFunciones.activarid_transaccion_inven_nota_creditoParametroFactuTransaccion));
			tableColumn.setCellEditor(new TransaccionTableCell(this.transaccioninvennotacreditosForeignKey,this.parametrofactutransaccionConstantesFunciones.resaltarid_transaccion_inven_nota_creditoParametroFactuTransaccion,this,this.parametrofactutransaccionConstantesFunciones.activarid_transaccion_inven_nota_creditoParametroFactuTransaccion,true,"id_transaccion_inven_nota_creditoParametroFactuTransaccion","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50);
			//tableColumn.addPropertyChangeListener(new ParametroFactuTransaccionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuTransaccion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuTransaccion,ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONINVENNOTAVENTA));

		if(this.parametrofactutransaccionConstantesFunciones.mostrarid_transaccion_inven_nota_ventaParametroFactuTransaccion && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONINVENNOTAVENTA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TransaccionTableCell(this.transaccioninvennotaventasForeignKey,this.parametrofactutransaccionConstantesFunciones.resaltarid_transaccion_inven_nota_ventaParametroFactuTransaccion,this,this.parametrofactutransaccionConstantesFunciones.activarid_transaccion_inven_nota_ventaParametroFactuTransaccion));
			tableColumn.setCellEditor(new TransaccionTableCell(this.transaccioninvennotaventasForeignKey,this.parametrofactutransaccionConstantesFunciones.resaltarid_transaccion_inven_nota_ventaParametroFactuTransaccion,this,this.parametrofactutransaccionConstantesFunciones.activarid_transaccion_inven_nota_ventaParametroFactuTransaccion,true,"id_transaccion_inven_nota_ventaParametroFactuTransaccion","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50);
			//tableColumn.addPropertyChangeListener(new ParametroFactuTransaccionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuTransaccion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuTransaccion,ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONCUENTACOFACTURA));

		if(this.parametrofactutransaccionConstantesFunciones.mostrarid_transaccion_cuenta_co_facturaParametroFactuTransaccion && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONCUENTACOFACTURA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TransaccionTableCell(this.transaccioncuentacofacturasForeignKey,this.parametrofactutransaccionConstantesFunciones.resaltarid_transaccion_cuenta_co_facturaParametroFactuTransaccion,this,this.parametrofactutransaccionConstantesFunciones.activarid_transaccion_cuenta_co_facturaParametroFactuTransaccion));
			tableColumn.setCellEditor(new TransaccionTableCell(this.transaccioncuentacofacturasForeignKey,this.parametrofactutransaccionConstantesFunciones.resaltarid_transaccion_cuenta_co_facturaParametroFactuTransaccion,this,this.parametrofactutransaccionConstantesFunciones.activarid_transaccion_cuenta_co_facturaParametroFactuTransaccion,true,"id_transaccion_cuenta_co_facturaParametroFactuTransaccion","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50);
			//tableColumn.addPropertyChangeListener(new ParametroFactuTransaccionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuTransaccion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuTransaccion,ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONCUENTACONOTACREDITO));

		if(this.parametrofactutransaccionConstantesFunciones.mostrarid_transaccion_cuenta_co_nota_creditoParametroFactuTransaccion && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONCUENTACONOTACREDITO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TransaccionTableCell(this.transaccioncuentaconotacreditosForeignKey,this.parametrofactutransaccionConstantesFunciones.resaltarid_transaccion_cuenta_co_nota_creditoParametroFactuTransaccion,this,this.parametrofactutransaccionConstantesFunciones.activarid_transaccion_cuenta_co_nota_creditoParametroFactuTransaccion));
			tableColumn.setCellEditor(new TransaccionTableCell(this.transaccioncuentaconotacreditosForeignKey,this.parametrofactutransaccionConstantesFunciones.resaltarid_transaccion_cuenta_co_nota_creditoParametroFactuTransaccion,this,this.parametrofactutransaccionConstantesFunciones.activarid_transaccion_cuenta_co_nota_creditoParametroFactuTransaccion,true,"id_transaccion_cuenta_co_nota_creditoParametroFactuTransaccion","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50);
			//tableColumn.addPropertyChangeListener(new ParametroFactuTransaccionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuTransaccion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuTransaccion,ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONCUENTACONOTAVENTA));

		if(this.parametrofactutransaccionConstantesFunciones.mostrarid_transaccion_cuenta_co_nota_ventaParametroFactuTransaccion && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONCUENTACONOTAVENTA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TransaccionTableCell(this.transaccioncuentaconotaventasForeignKey,this.parametrofactutransaccionConstantesFunciones.resaltarid_transaccion_cuenta_co_nota_ventaParametroFactuTransaccion,this,this.parametrofactutransaccionConstantesFunciones.activarid_transaccion_cuenta_co_nota_ventaParametroFactuTransaccion));
			tableColumn.setCellEditor(new TransaccionTableCell(this.transaccioncuentaconotaventasForeignKey,this.parametrofactutransaccionConstantesFunciones.resaltarid_transaccion_cuenta_co_nota_ventaParametroFactuTransaccion,this,this.parametrofactutransaccionConstantesFunciones.activarid_transaccion_cuenta_co_nota_ventaParametroFactuTransaccion,true,"id_transaccion_cuenta_co_nota_ventaParametroFactuTransaccion","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50);
			//tableColumn.addPropertyChangeListener(new ParametroFactuTransaccionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuTransaccion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuTransaccion,ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONCUENTACOTARJETA));

		if(this.parametrofactutransaccionConstantesFunciones.mostrarid_transaccion_cuenta_co_tarjetaParametroFactuTransaccion && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONCUENTACOTARJETA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TransaccionTableCell(this.transaccioncuentacotarjetasForeignKey,this.parametrofactutransaccionConstantesFunciones.resaltarid_transaccion_cuenta_co_tarjetaParametroFactuTransaccion,this,this.parametrofactutransaccionConstantesFunciones.activarid_transaccion_cuenta_co_tarjetaParametroFactuTransaccion));
			tableColumn.setCellEditor(new TransaccionTableCell(this.transaccioncuentacotarjetasForeignKey,this.parametrofactutransaccionConstantesFunciones.resaltarid_transaccion_cuenta_co_tarjetaParametroFactuTransaccion,this,this.parametrofactutransaccionConstantesFunciones.activarid_transaccion_cuenta_co_tarjetaParametroFactuTransaccion,true,"id_transaccion_cuenta_co_tarjetaParametroFactuTransaccion","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50);
			//tableColumn.addPropertyChangeListener(new ParametroFactuTransaccionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuTransaccion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuTransaccion,ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONCUENTAPAFACTURA));

		if(this.parametrofactutransaccionConstantesFunciones.mostrarid_transaccion_cuenta_pa_facturaParametroFactuTransaccion && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONCUENTAPAFACTURA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TransaccionTableCell(this.transaccioncuentapafacturasForeignKey,this.parametrofactutransaccionConstantesFunciones.resaltarid_transaccion_cuenta_pa_facturaParametroFactuTransaccion,this,this.parametrofactutransaccionConstantesFunciones.activarid_transaccion_cuenta_pa_facturaParametroFactuTransaccion));
			tableColumn.setCellEditor(new TransaccionTableCell(this.transaccioncuentapafacturasForeignKey,this.parametrofactutransaccionConstantesFunciones.resaltarid_transaccion_cuenta_pa_facturaParametroFactuTransaccion,this,this.parametrofactutransaccionConstantesFunciones.activarid_transaccion_cuenta_pa_facturaParametroFactuTransaccion,true,"id_transaccion_cuenta_pa_facturaParametroFactuTransaccion","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50);
			//tableColumn.addPropertyChangeListener(new ParametroFactuTransaccionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuTransaccion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuTransaccion,ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONCUENTAPANOTACREDITO));

		if(this.parametrofactutransaccionConstantesFunciones.mostrarid_transaccion_cuenta_pa_nota_creditoParametroFactuTransaccion && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONCUENTAPANOTACREDITO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TransaccionTableCell(this.transaccioncuentapanotacreditosForeignKey,this.parametrofactutransaccionConstantesFunciones.resaltarid_transaccion_cuenta_pa_nota_creditoParametroFactuTransaccion,this,this.parametrofactutransaccionConstantesFunciones.activarid_transaccion_cuenta_pa_nota_creditoParametroFactuTransaccion));
			tableColumn.setCellEditor(new TransaccionTableCell(this.transaccioncuentapanotacreditosForeignKey,this.parametrofactutransaccionConstantesFunciones.resaltarid_transaccion_cuenta_pa_nota_creditoParametroFactuTransaccion,this,this.parametrofactutransaccionConstantesFunciones.activarid_transaccion_cuenta_pa_nota_creditoParametroFactuTransaccion,true,"id_transaccion_cuenta_pa_nota_creditoParametroFactuTransaccion","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50);
			//tableColumn.addPropertyChangeListener(new ParametroFactuTransaccionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}
			
		} else {
		}			
					
		if(!this.parametrofactutransaccionSessionBean.getEsGuardarRelacionado()
			&& !this.esParaBusquedaForeignKey) {
			
		}
		
		if(true) {
			String sLabelColumnAccion="Editar";
			String sLabelColumnAccionEli="Eli";
			
			if(this.esParaBusquedaForeignKey)  {
				sLabelColumnAccion="Seleccionar";
				
				//LO MISMO QUE ELSE
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.parametrofactutransaccionSessionBean.getEsGuardarRelacionado()));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.parametrofactutransaccionSessionBean.getEsGuardarRelacionado()));
	
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosParametroFactuTransaccion.addColumn(tableColumn);
			
			} else {				
				
				//LO MISMO QUE IF
				
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.parametrofactutransaccionSessionBean.getEsGuardarRelacionado()));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.parametrofactutransaccionSessionBean.getEsGuardarRelacionado()));
		
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosParametroFactuTransaccion.addColumn(tableColumn);				
					
				//ELIMINAR
				if(this.isPermisoEliminarParametroFactuTransaccion && this.isPermisoGuardarCambiosParametroFactuTransaccion) {
					tableColumn= new TableColumn();
					tableColumn.setIdentifier(Constantes2.S_ELI);
					tableColumn.setHeaderValue(sLabelColumnAccionEli);
					tableColumn.setCellRenderer(new IdTableCell(this,false,true,this.parametrofactutransaccionSessionBean.getEsGuardarRelacionado()));
					tableColumn.setCellEditor(new IdTableCell(this,false,true,this.parametrofactutransaccionSessionBean.getEsGuardarRelacionado()));
			
					tableColumn.setPreferredWidth(65); 	 
					tableColumn.setWidth(65); 	 
					tableColumn.setMinWidth(65); 
					tableColumn.setMaxWidth(65);
					
					this.iWidthTableDefinicion+=65;
						
					this.jTableDatosParametroFactuTransaccion.addColumn(tableColumn);
				}
			}			
						
			
			/*
			tableColumn= new TableColumn();
			tableColumn.setIdentifier(Constantes2.S_SELECCIONAR);
			tableColumn.setHeaderValue(Constantes2.S_SELECCIONAR);
			tableColumn.setCellRenderer(new IdSeleccionarTableCell(this));
			tableColumn.setCellEditor(new IdSeleccionarTableCell(this));
			
			tableColumn.setPreferredWidth(30); 	 
			tableColumn.setWidth(30); 	 
			tableColumn.setMinWidth(30); 
			
			this.iWidthTableDefinicion+=30;
			
			this.jTableDatosParametroFactuTransaccion.addColumn(tableColumn);
			*/
		}
		
		Integer iUltimaColumna=0;//1
		Integer iNuevaPosicionColumna=0;
		
		
		//PERMITE ELIMINAR SIMPLE
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarParametroFactuTransaccion && this.isPermisoGuardarCambiosParametroFactuTransaccion) {
				iUltimaColumna++;
			}	
		}
		
		//PERMITE EDITAR SIMPLE
		iUltimaColumna++;	
		
				
		
		//MOVIA SELECCIONAR
		//iUltimaColumna++;
		
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarParametroFactuTransaccion && this.isPermisoGuardarCambiosParametroFactuTransaccion) {
				//REUBICA ELIMINAR SIMPLE
				jTableDatosParametroFactuTransaccion.moveColumn(this.jTableDatosParametroFactuTransaccion.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3
					
				iUltimaColumna--;
			}
		}
		//REUBICA EDITAR SIMPLE
		jTableDatosParametroFactuTransaccion.moveColumn(this.jTableDatosParametroFactuTransaccion.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3				
		
		
		
		
		//REUBICABA SELECCIONAR
		/*
		if(iUltimaColumna>1) {
			iUltimaColumna--;
		}
		
		//iNuevaPosicionColumna++;
			
		//REUBICA SELECCIONAR FILA CHECK
		jTableDatosParametroFactuTransaccion.moveColumn(this.jTableDatosParametroFactuTransaccion.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1		
		*/
		
		//DEFINEN HEADERS
		final TableCellRenderer tableHeaderDefaultCellRenderer = this.jTableDatosParametroFactuTransaccion.getTableHeader().getDefaultRenderer();
		
		this.jTableDatosParametroFactuTransaccion.getTableHeader().setDefaultRenderer(new TableCellRendererHeader(this.jTableDatosParametroFactuTransaccion,tableHeaderDefaultCellRenderer));
	    
		TableColumn column=null;
		
		if(!ParametroFactuTransaccionJInternalFrame.ISBINDING_MANUAL_TABLA) {
			for(int i = 0; i < this.jTableDatosParametroFactuTransaccion.getColumnModel().getColumnCount(); i++) { 
				column = this.jTableDatosParametroFactuTransaccion.getColumnModel().getColumn(i); 
				
				if(column.getIdentifier()!=null) {
					//SI SE UTILIZA UN HEADER ES GENERICO
					//column.setHeaderRenderer(new HeaderRenderer(column.getIdentifier().toString()));
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_ELI)) {
					continue;
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_SELECCIONAR)) {
					if(!ParametroFactuTransaccionJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(50); 	 
						column.setWidth(50); 	 
						column.setMinWidth(50); 	
						column.setMaxWidth(50); 
						
						this.iWidthTableDefinicion+=50;
					}
					
				} else {
					if(!ParametroFactuTransaccionJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						column.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						
						this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
					}
				}
			}
		}
		
		this.jTableDatosParametroFactuTransaccion.setSelectionBackground(FuncionesSwing.getColorSelectedBackground());
		this.jTableDatosParametroFactuTransaccion.setSelectionForeground(FuncionesSwing.getColorSelectedForeground());
		
		/*
		this.jTableDatosParametroFactuTransaccion.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
			private static final long serialVersionUID = 1L;
			
		    @Override
		    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
		        final Component component= super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
		        //POR DEFECTO ES MEJOR, SE PIERDE DATOS AL SELECCIONAR BLANCO LETRAS BLANCAS
				component.setBackground(row % 2 == 0 ? FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR) : Funciones2.getColorFilaTabla2()); //FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR)
				component.setForeground(Funciones2.getColorTextoFilaTabla1());
				
				try {
		        	int iSize=-999;
		        	
		        	if(conTotales) {
						//FILA TOTALES OTRO COLOR, SI TABLA NO ES UNO A UNO
			        	if(Constantes.ISUSAEJBLOGICLAYER) {
							iSize=parametrofactutransaccionLogic.getParametroFactuTransaccions().size()-1;
								
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							iSize=parametrofactutransaccions.size()-1;
						}
						
						if(iSize==row) {
							component.setBackground(Funciones2.getColorFilaTablaTotales());
						}
		        	}
					
					//POR EFICIENCIA NO UTILIZAR					
					//if (component instanceof JComponent) {
		            //    JComponent jcomponent = (JComponent) component;		                 		                
		        	//}				
					
				} catch (Exception e) {
					e.printStackTrace();
				}
				
		        return component;
		    }
		});
		*/
		
		//ESTA EN LA DEFINICION DE LA TABLA
		//this.jTableDatosParametroFactuTransaccion.setRowHeight(Constantes.ISWING_ALTO_FILA_TABLA);
		
		/*
		column=this.jTableDatosParametroFactuTransaccion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSistema,Constantes2.S_SELECCIONAR));
		
		if(column!=null) {
			column.setPreferredWidth(25); 	 
			column.setWidth(25); 	 
			column.setMinWidth(25); 	
		}
		*/
			
			//CopyTableToTableTotal();
		} else {
			
			this.actualizarVisualTableDatosParametroFactuTransaccion();
			
		}
	}
	
	/*
	//COPY_TABLES
	/* FALTARIA RESOLVER:
	   1 SOLO SCROLL PARA 2 TABLAS
	   COPIA EXACTA DE COLUMNAS DE UNA TABLA A OTRA, SI SE MODIFICA TAMANIO TAMBIEN LA OTRA
	*/
	
	public void jButtonIdActionPerformed(ActionEvent evt,int rowIndex,Boolean esRelaciones,Boolean esEliminar) { 
		try {
			if(!esEliminar) {
				this.estaModoSeleccionar=true;
				
				//this.isEsNuevoParametroFactuTransaccion=false;
					
				ParametroFactuTransaccionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.parametrofactutransaccion,new Object(),this.parametrofactutransaccionParameterGeneral,this.parametrofactutransaccionReturnGeneral);
			
				if(this.parametrofactutransaccionSessionBean.getConGuardarRelaciones()) {
					this.dStart=(double)System.currentTimeMillis();
				}
				
				if(this.jInternalFrameDetalleFormParametroFactuTransaccion==null) {
					this.inicializarFormDetalle();
				}
				
				this.inicializarInvalidValues();
				
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosParametroFactuTransaccion.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosParametroFactuTransaccion.getSelectedRow();	       
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactutransaccion =(ParametroFactuTransaccion) this.parametrofactutransaccionLogic.getParametroFactuTransaccions().toArray()[this.jTableDatosParametroFactuTransaccion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.parametrofactutransaccion =(ParametroFactuTransaccion) this.parametrofactutransaccions.toArray()[this.jTableDatosParametroFactuTransaccion.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//PUEDE SER PARA DUPLICADO O NUEVO TABLA
				
				if(this.parametrofactutransaccion.getsType().equals("DUPLICADO")
				   || this.parametrofactutransaccion.getsType().equals("NUEVO_GUARDAR_CAMBIOS")) {
					
					this.isEsNuevoParametroFactuTransaccion=true;
				
				} else {
					this.isEsNuevoParametroFactuTransaccion=false;	
				}
				
				//CONTROL VERSION ANTERIOR
				/*
				if(!this.parametrofactutransaccionSessionBean.getEsGuardarRelacionado()) {
					if(this.parametrofactutransaccion.getId()>=0 && !this.parametrofactutransaccion.getIsNew()) {						
						this.isEsNuevoParametroFactuTransaccion=false;
						
					} else {
						this.isEsNuevoParametroFactuTransaccion=true;
					}
					
				} else {
					//CONTROLAR PARA RELACIONADO
				}
				*/
				
				//ESTABLECE SI ES RELACIONADO O NO 
				this.habilitarDeshabilitarTipoMantenimientoParametroFactuTransaccion(esRelaciones);						
				
				this.seleccionarParametroFactuTransaccion(evt,null,rowIndex);
				
				//SELECCIONA ACTUAL PERO AUN NO SE HA INGRESADO AL SISTEMA
				//SE DESHABILITA POR GUARDAR CAMBIOS
				/*
				if(this.parametrofactutransaccion.getId()<0) {
					this.isEsNuevoParametroFactuTransaccion=true;
				}
				*/
				
				if(!this.esParaBusquedaForeignKey) {
					this.modificarParametroFactuTransaccion(evt,rowIndex,esRelaciones);
				} else {
					this.seleccionarParametroFactuTransaccion(evt,rowIndex);
				}	
				
				if(this.parametrofactutransaccionSessionBean.getConGuardarRelaciones()) {
					this.dEnd=(double)System.currentTimeMillis();					
					this.dDif=this.dEnd - this.dStart;
					
					if(Constantes.ISDEVELOPING) {
						System.out.println("Tiempo(ms) Seleccion ParametroFactuTransaccion: " + this.dDif); 
					}
				}								
				
				ParametroFactuTransaccionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.parametrofactutransaccion,new Object(),this.parametrofactutransaccionParameterGeneral,this.parametrofactutransaccionReturnGeneral);
				
			} else {
				this.estaModoEliminarGuardarCambios=true;
				
				this.seleccionarParametroFactuTransaccion(evt,null,rowIndex);
				
				if(this.permiteMantenimiento(this.parametrofactutransaccion)) {
					if(this.parametrofactutransaccion.getId()>0) {
						this.parametrofactutransaccion.setIsDeleted(true);
						
						this.parametrofactutransaccionsEliminados.add(this.parametrofactutransaccion);
					}
					
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.parametrofactutransaccionLogic.getParametroFactuTransaccions().remove(this.parametrofactutransaccion);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.parametrofactutransaccions.remove(this.parametrofactutransaccion);				
					}
					
					
					((ParametroFactuTransaccionModel) this.jTableDatosParametroFactuTransaccion.getModel()).fireTableRowsDeleted(rowIndex,rowIndex);
					
					this.actualizarFilaTotales();
					
					this.inicializarActualizarBindingTablaParametroFactuTransaccion(false);					
				}								
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException2(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoSeleccionar=false;				
			this.estaModoEliminarGuardarCambios=false;
		}
	}
	
	
	public void seleccionarParametroFactuTransaccion(ActionEvent evt,javax.swing.event.ListSelectionEvent evt2,int rowIndex) throws Exception { 
		try {
			//SI PUEDE SER NUEVO Y SELECCIONAR (PARA DUPLICAR Y NUEVO TABLA)
			//if(!this.isEsNuevoParametroFactuTransaccion) {
			
			if(this.jInternalFrameDetalleFormParametroFactuTransaccion==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosParametroFactuTransaccion.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosParametroFactuTransaccion.getSelectedRow();	       
				}
				
				//CUANDO SE RECARGA TABLA TAMBIEN SE SELECCIONA PERO CON -1 POR LO QUE SE NECESITA VALIDAR ANTES
				if(intSelectedRow<0) {
					return;
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactutransaccion =(ParametroFactuTransaccion) this.parametrofactutransaccionLogic.getParametroFactuTransaccions().toArray()[this.jTableDatosParametroFactuTransaccion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.parametrofactutransaccion =(ParametroFactuTransaccion) this.parametrofactutransaccions.toArray()[this.jTableDatosParametroFactuTransaccion.convertRowIndexToModel(intSelectedRow)];
				}
				
				if(ParametroFactuTransaccionJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesObjetoActualToFormularioParametroFactuTransaccion(this.parametrofactutransaccion);
				}
				
				//ARCHITECTURE
				try {
					

					//Empresa
					if(!this.parametrofactutransaccionConstantesFunciones.cargarid_empresaParametroFactuTransaccion || this.parametrofactutransaccionConstantesFunciones.event_dependid_empresaParametroFactuTransaccion) {
						//this.cargarCombosEmpresasForeignKeyLista(" where id="+this.parametrofactutransaccion.getid_empresa());
									//this.inicializarActualizarBindingParametroFactuTransaccion(false,false);
						this.empresasForeignKey=new ArrayList<Empresa>();

						if(parametrofactutransaccion.getEmpresa()!=null) {
							this.empresasForeignKey.add(parametrofactutransaccion.getEmpresa());
						}

						this.addItemDefectoCombosForeignKeyEmpresa();
						this.cargarCombosFrameEmpresasForeignKey("Todos");
					}
					this.setActualEmpresaForeignKey(this.parametrofactutransaccion.getid_empresa(),false,"Formulario");

					//Sucursal
					if(!this.parametrofactutransaccionConstantesFunciones.cargarid_sucursalParametroFactuTransaccion || this.parametrofactutransaccionConstantesFunciones.event_dependid_sucursalParametroFactuTransaccion) {
						//this.cargarCombosSucursalsForeignKeyLista(" where id="+this.parametrofactutransaccion.getid_sucursal());
									//this.inicializarActualizarBindingParametroFactuTransaccion(false,false);
						this.sucursalsForeignKey=new ArrayList<Sucursal>();

						if(parametrofactutransaccion.getSucursal()!=null) {
							this.sucursalsForeignKey.add(parametrofactutransaccion.getSucursal());
						}

						this.addItemDefectoCombosForeignKeySucursal();
						this.cargarCombosFrameSucursalsForeignKey("Todos");
					}
					this.setActualSucursalForeignKey(this.parametrofactutransaccion.getid_sucursal(),false,"Formulario");

					//TransaccionInvenFactura
					if(!this.parametrofactutransaccionConstantesFunciones.cargarid_transaccion_inven_facturaParametroFactuTransaccion || this.parametrofactutransaccionConstantesFunciones.event_dependid_transaccion_inven_facturaParametroFactuTransaccion) {
						//this.cargarCombosTransaccionInvenFacturasForeignKeyLista(" where id="+this.parametrofactutransaccion.getid_transaccion_inven_factura());
									//this.inicializarActualizarBindingParametroFactuTransaccion(false,false);
						this.transaccioninvenfacturasForeignKey=new ArrayList<Transaccion>();

						if(parametrofactutransaccion.getTransaccionInvenFactura()!=null) {
							this.transaccioninvenfacturasForeignKey.add(parametrofactutransaccion.getTransaccionInvenFactura());
						}

						this.addItemDefectoCombosForeignKeyTransaccionInvenFactura();
						this.cargarCombosFrameTransaccionInvenFacturasForeignKey("Todos");
					}
					this.setActualTransaccionInvenFacturaForeignKey(this.parametrofactutransaccion.getid_transaccion_inven_factura(),false,"Formulario");

					//TransaccionInvenNotaCredito
					if(!this.parametrofactutransaccionConstantesFunciones.cargarid_transaccion_inven_nota_creditoParametroFactuTransaccion || this.parametrofactutransaccionConstantesFunciones.event_dependid_transaccion_inven_nota_creditoParametroFactuTransaccion) {
						//this.cargarCombosTransaccionInvenNotaCreditosForeignKeyLista(" where id="+this.parametrofactutransaccion.getid_transaccion_inven_nota_credito());
									//this.inicializarActualizarBindingParametroFactuTransaccion(false,false);
						this.transaccioninvennotacreditosForeignKey=new ArrayList<Transaccion>();

						if(parametrofactutransaccion.getTransaccionInvenNotaCredito()!=null) {
							this.transaccioninvennotacreditosForeignKey.add(parametrofactutransaccion.getTransaccionInvenNotaCredito());
						}

						this.addItemDefectoCombosForeignKeyTransaccionInvenNotaCredito();
						this.cargarCombosFrameTransaccionInvenNotaCreditosForeignKey("Todos");
					}
					this.setActualTransaccionInvenNotaCreditoForeignKey(this.parametrofactutransaccion.getid_transaccion_inven_nota_credito(),false,"Formulario");

					//TransaccionInvenNotaVenta
					if(!this.parametrofactutransaccionConstantesFunciones.cargarid_transaccion_inven_nota_ventaParametroFactuTransaccion || this.parametrofactutransaccionConstantesFunciones.event_dependid_transaccion_inven_nota_ventaParametroFactuTransaccion) {
						//this.cargarCombosTransaccionInvenNotaVentasForeignKeyLista(" where id="+this.parametrofactutransaccion.getid_transaccion_inven_nota_venta());
									//this.inicializarActualizarBindingParametroFactuTransaccion(false,false);
						this.transaccioninvennotaventasForeignKey=new ArrayList<Transaccion>();

						if(parametrofactutransaccion.getTransaccionInvenNotaVenta()!=null) {
							this.transaccioninvennotaventasForeignKey.add(parametrofactutransaccion.getTransaccionInvenNotaVenta());
						}

						this.addItemDefectoCombosForeignKeyTransaccionInvenNotaVenta();
						this.cargarCombosFrameTransaccionInvenNotaVentasForeignKey("Todos");
					}
					this.setActualTransaccionInvenNotaVentaForeignKey(this.parametrofactutransaccion.getid_transaccion_inven_nota_venta(),false,"Formulario");

					//TransaccionCuentaCoFactura
					if(!this.parametrofactutransaccionConstantesFunciones.cargarid_transaccion_cuenta_co_facturaParametroFactuTransaccion || this.parametrofactutransaccionConstantesFunciones.event_dependid_transaccion_cuenta_co_facturaParametroFactuTransaccion) {
						//this.cargarCombosTransaccionCuentaCoFacturasForeignKeyLista(" where id="+this.parametrofactutransaccion.getid_transaccion_cuenta_co_factura());
									//this.inicializarActualizarBindingParametroFactuTransaccion(false,false);
						this.transaccioncuentacofacturasForeignKey=new ArrayList<Transaccion>();

						if(parametrofactutransaccion.getTransaccionCuentaCoFactura()!=null) {
							this.transaccioncuentacofacturasForeignKey.add(parametrofactutransaccion.getTransaccionCuentaCoFactura());
						}

						this.addItemDefectoCombosForeignKeyTransaccionCuentaCoFactura();
						this.cargarCombosFrameTransaccionCuentaCoFacturasForeignKey("Todos");
					}
					this.setActualTransaccionCuentaCoFacturaForeignKey(this.parametrofactutransaccion.getid_transaccion_cuenta_co_factura(),false,"Formulario");

					//TransaccionCuentaCoNotaCredito
					if(!this.parametrofactutransaccionConstantesFunciones.cargarid_transaccion_cuenta_co_nota_creditoParametroFactuTransaccion || this.parametrofactutransaccionConstantesFunciones.event_dependid_transaccion_cuenta_co_nota_creditoParametroFactuTransaccion) {
						//this.cargarCombosTransaccionCuentaCoNotaCreditosForeignKeyLista(" where id="+this.parametrofactutransaccion.getid_transaccion_cuenta_co_nota_credito());
									//this.inicializarActualizarBindingParametroFactuTransaccion(false,false);
						this.transaccioncuentaconotacreditosForeignKey=new ArrayList<Transaccion>();

						if(parametrofactutransaccion.getTransaccionCuentaCoNotaCredito()!=null) {
							this.transaccioncuentaconotacreditosForeignKey.add(parametrofactutransaccion.getTransaccionCuentaCoNotaCredito());
						}

						this.addItemDefectoCombosForeignKeyTransaccionCuentaCoNotaCredito();
						this.cargarCombosFrameTransaccionCuentaCoNotaCreditosForeignKey("Todos");
					}
					this.setActualTransaccionCuentaCoNotaCreditoForeignKey(this.parametrofactutransaccion.getid_transaccion_cuenta_co_nota_credito(),false,"Formulario");

					//TransaccionCuentaCoNotaVenta
					if(!this.parametrofactutransaccionConstantesFunciones.cargarid_transaccion_cuenta_co_nota_ventaParametroFactuTransaccion || this.parametrofactutransaccionConstantesFunciones.event_dependid_transaccion_cuenta_co_nota_ventaParametroFactuTransaccion) {
						//this.cargarCombosTransaccionCuentaCoNotaVentasForeignKeyLista(" where id="+this.parametrofactutransaccion.getid_transaccion_cuenta_co_nota_venta());
									//this.inicializarActualizarBindingParametroFactuTransaccion(false,false);
						this.transaccioncuentaconotaventasForeignKey=new ArrayList<Transaccion>();

						if(parametrofactutransaccion.getTransaccionCuentaCoNotaVenta()!=null) {
							this.transaccioncuentaconotaventasForeignKey.add(parametrofactutransaccion.getTransaccionCuentaCoNotaVenta());
						}

						this.addItemDefectoCombosForeignKeyTransaccionCuentaCoNotaVenta();
						this.cargarCombosFrameTransaccionCuentaCoNotaVentasForeignKey("Todos");
					}
					this.setActualTransaccionCuentaCoNotaVentaForeignKey(this.parametrofactutransaccion.getid_transaccion_cuenta_co_nota_venta(),false,"Formulario");

					//TransaccionCuentaCoTarjeta
					if(!this.parametrofactutransaccionConstantesFunciones.cargarid_transaccion_cuenta_co_tarjetaParametroFactuTransaccion || this.parametrofactutransaccionConstantesFunciones.event_dependid_transaccion_cuenta_co_tarjetaParametroFactuTransaccion) {
						//this.cargarCombosTransaccionCuentaCoTarjetasForeignKeyLista(" where id="+this.parametrofactutransaccion.getid_transaccion_cuenta_co_tarjeta());
									//this.inicializarActualizarBindingParametroFactuTransaccion(false,false);
						this.transaccioncuentacotarjetasForeignKey=new ArrayList<Transaccion>();

						if(parametrofactutransaccion.getTransaccionCuentaCoTarjeta()!=null) {
							this.transaccioncuentacotarjetasForeignKey.add(parametrofactutransaccion.getTransaccionCuentaCoTarjeta());
						}

						this.addItemDefectoCombosForeignKeyTransaccionCuentaCoTarjeta();
						this.cargarCombosFrameTransaccionCuentaCoTarjetasForeignKey("Todos");
					}
					this.setActualTransaccionCuentaCoTarjetaForeignKey(this.parametrofactutransaccion.getid_transaccion_cuenta_co_tarjeta(),false,"Formulario");

					//TransaccionCuentaPaFactura
					if(!this.parametrofactutransaccionConstantesFunciones.cargarid_transaccion_cuenta_pa_facturaParametroFactuTransaccion || this.parametrofactutransaccionConstantesFunciones.event_dependid_transaccion_cuenta_pa_facturaParametroFactuTransaccion) {
						//this.cargarCombosTransaccionCuentaPaFacturasForeignKeyLista(" where id="+this.parametrofactutransaccion.getid_transaccion_cuenta_pa_factura());
									//this.inicializarActualizarBindingParametroFactuTransaccion(false,false);
						this.transaccioncuentapafacturasForeignKey=new ArrayList<Transaccion>();

						if(parametrofactutransaccion.getTransaccionCuentaPaFactura()!=null) {
							this.transaccioncuentapafacturasForeignKey.add(parametrofactutransaccion.getTransaccionCuentaPaFactura());
						}

						this.addItemDefectoCombosForeignKeyTransaccionCuentaPaFactura();
						this.cargarCombosFrameTransaccionCuentaPaFacturasForeignKey("Todos");
					}
					this.setActualTransaccionCuentaPaFacturaForeignKey(this.parametrofactutransaccion.getid_transaccion_cuenta_pa_factura(),false,"Formulario");

					//TransaccionCuentaPaNotaCredito
					if(!this.parametrofactutransaccionConstantesFunciones.cargarid_transaccion_cuenta_pa_nota_creditoParametroFactuTransaccion || this.parametrofactutransaccionConstantesFunciones.event_dependid_transaccion_cuenta_pa_nota_creditoParametroFactuTransaccion) {
						//this.cargarCombosTransaccionCuentaPaNotaCreditosForeignKeyLista(" where id="+this.parametrofactutransaccion.getid_transaccion_cuenta_pa_nota_credito());
									//this.inicializarActualizarBindingParametroFactuTransaccion(false,false);
						this.transaccioncuentapanotacreditosForeignKey=new ArrayList<Transaccion>();

						if(parametrofactutransaccion.getTransaccionCuentaPaNotaCredito()!=null) {
							this.transaccioncuentapanotacreditosForeignKey.add(parametrofactutransaccion.getTransaccionCuentaPaNotaCredito());
						}

						this.addItemDefectoCombosForeignKeyTransaccionCuentaPaNotaCredito();
						this.cargarCombosFrameTransaccionCuentaPaNotaCreditosForeignKey("Todos");
					}
					this.setActualTransaccionCuentaPaNotaCreditoForeignKey(this.parametrofactutransaccion.getid_transaccion_cuenta_pa_nota_credito(),false,"Formulario");
				} catch(Exception e) {
					throw e;
				}
				
				this.actualizarEstadoCeldasBotonesParametroFactuTransaccion("s", this.isGuardarCambiosEnLote, this.isEsMantenimientoRelacionado);
				
				//NO FUNCIONA BINDING PERO SE MANTIENE
				this.inicializarActualizarBindingBotonesParametroFactuTransaccion(false) ;
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualParametroFactuTransaccion() ;
			//}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesObjetoActualToFormularioTodoParametroFactuTransaccion(ParametroFactuTransaccion parametrofactutransaccion) throws Exception { 
		this.setVariablesObjetoActualToFormularioTodoParametroFactuTransaccion(parametrofactutransaccion,false,"NINGUNO");
	}
	
	public void setVariablesObjetoActualToFormularioTodoParametroFactuTransaccion(ParametroFactuTransaccion parametrofactutransaccion,Boolean conCargarListasDesdeObjetoActual,String sTipoEvento) throws Exception { 
		this.setVariablesObjetoActualToFormularioParametroFactuTransaccion(parametrofactutransaccion);
		
		if(conCargarListasDesdeObjetoActual) {
			this.setVariablesObjetoActualToListasForeignKeyParametroFactuTransaccion(parametrofactutransaccion,sTipoEvento);
		}
		
		this.setVariablesObjetoActualToFormularioForeignKeyParametroFactuTransaccion(parametrofactutransaccion);
	}
	
	public void setVariablesObjetoActualToFormularioParametroFactuTransaccion(ParametroFactuTransaccion parametrofactutransaccion) throws Exception { 
		try {			
			Image imageActual=null;
			ImageIcon imageIcon = null;
			
			if(this.jInternalFrameDetalleFormParametroFactuTransaccion==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			
			this.jInternalFrameDetalleFormParametroFactuTransaccion.jLabelidParametroFactuTransaccion.setText(parametrofactutransaccion.getId().toString());
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
		}
	}
		
	public void actualizarInformacion(String sTipo,ParametroFactuTransaccion parametrofactutransaccionLocal) throws Exception {
		this.actualizarInformacion(sTipo,false,parametrofactutransaccionLocal);
	}	
	
	public void actualizarInformacion(String sTipo,Boolean conParametroObjeto,ParametroFactuTransaccion parametrofactutransaccionLocal) throws Exception {
		
		if(!conParametroObjeto) {
			if(!this.getEsControlTabla()) {
				parametrofactutransaccionLocal=this.parametrofactutransaccion;
			} else {
				parametrofactutransaccionLocal=this.parametrofactutransaccionAnterior;
			}
		}
		
		if(this.permiteMantenimiento(parametrofactutransaccionLocal)) {
			if(sTipo.equals("EVENTO_CONTROL")) { // || sTipo.equals("EVENTO_NUEVO")
				if(!this.esControlTabla) {
					this.setVariablesFormularioToObjetoActualTodoParametroFactuTransaccion(parametrofactutransaccionLocal,true);
					
					if(parametrofactutransaccionSessionBean.getConGuardarRelaciones()) {
						this.actualizarRelaciones(parametrofactutransaccionLocal);
					}
				}
			
			} else if(sTipo.equals("INFO_PADRE")) {
				
				if(this.parametrofactutransaccionSessionBean.getEsGuardarRelacionado()) {
					this.actualizarRelacionFkPadreActual(parametrofactutransaccionLocal);
				}
			}
		}
	}
	
	public void setVariablesFormularioToObjetoActualTodoParametroFactuTransaccion(ParametroFactuTransaccion parametrofactutransaccion,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualParametroFactuTransaccion(parametrofactutransaccion,conColumnasBase);
		this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuTransaccion(parametrofactutransaccion);
	}
	
	public void setVariablesFormularioToObjetoActualParametroFactuTransaccion(ParametroFactuTransaccion parametrofactutransaccion,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualParametroFactuTransaccion(parametrofactutransaccion,conColumnasBase,true);
	}
	
	public void setVariablesFormularioToObjetoActualParametroFactuTransaccion(ParametroFactuTransaccion parametrofactutransaccion,Boolean conColumnasBase,Boolean conInicializarInvalidValues) throws Exception { 
		String sMensajeCampoActual="";
		Boolean estaValidado=true;
		try {
			
			if(this.jInternalFrameDetalleFormParametroFactuTransaccion==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			if(conInicializarInvalidValues) {
				this.inicializarInvalidValues();
			}
			
			

		try {
			if(this.jInternalFrameDetalleFormParametroFactuTransaccion.jLabelidParametroFactuTransaccion.getText()==null || this.jInternalFrameDetalleFormParametroFactuTransaccion.jLabelidParametroFactuTransaccion.getText()=="" || this.jInternalFrameDetalleFormParametroFactuTransaccion.jLabelidParametroFactuTransaccion.getText()=="Id") {
				this.jInternalFrameDetalleFormParametroFactuTransaccion.jLabelidParametroFactuTransaccion.setText("0");
			}

			if(conColumnasBase) {parametrofactutransaccion.setId(Long.parseLong(this.jInternalFrameDetalleFormParametroFactuTransaccion.jLabelidParametroFactuTransaccion.getText()));}
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ParametroFactuTransaccionConstantesFunciones.LABEL_ID+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuTransaccion.jLabelIdParametroFactuTransaccion,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}
			
			if(!estaValidado) {
				throw new Exception(sMensajeCampoActual);
			}
		} catch(NumberFormatException e) {
			throw new Exception(sMensajeCampoActual);
			//FuncionesSwing.manageException(this, e,logger,MovimientoInventarioConstantesFunciones.CLASSNAME);
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualParametroFactuTransaccion(ParametroFactuTransaccion parametrofactutransaccionBean,ParametroFactuTransaccion parametrofactutransaccion,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			if(conDefault || (!conDefault && parametrofactutransaccionBean.getid_transaccion_inven_factura()!=null && !parametrofactutransaccionBean.getid_transaccion_inven_factura().equals(-1L))) {parametrofactutransaccion.setid_transaccion_inven_factura(parametrofactutransaccionBean.getid_transaccion_inven_factura());}
			if(conDefault || (!conDefault && parametrofactutransaccionBean.getid_transaccion_inven_nota_credito()!=null && !parametrofactutransaccionBean.getid_transaccion_inven_nota_credito().equals(-1L))) {parametrofactutransaccion.setid_transaccion_inven_nota_credito(parametrofactutransaccionBean.getid_transaccion_inven_nota_credito());}
			if(conDefault || (!conDefault && parametrofactutransaccionBean.getid_transaccion_inven_nota_venta()!=null && !parametrofactutransaccionBean.getid_transaccion_inven_nota_venta().equals(-1L))) {parametrofactutransaccion.setid_transaccion_inven_nota_venta(parametrofactutransaccionBean.getid_transaccion_inven_nota_venta());}
			if(conDefault || (!conDefault && parametrofactutransaccionBean.getid_transaccion_cuenta_co_factura()!=null && !parametrofactutransaccionBean.getid_transaccion_cuenta_co_factura().equals(-1L))) {parametrofactutransaccion.setid_transaccion_cuenta_co_factura(parametrofactutransaccionBean.getid_transaccion_cuenta_co_factura());}
			if(conDefault || (!conDefault && parametrofactutransaccionBean.getid_transaccion_cuenta_co_nota_credito()!=null && !parametrofactutransaccionBean.getid_transaccion_cuenta_co_nota_credito().equals(-1L))) {parametrofactutransaccion.setid_transaccion_cuenta_co_nota_credito(parametrofactutransaccionBean.getid_transaccion_cuenta_co_nota_credito());}
			if(conDefault || (!conDefault && parametrofactutransaccionBean.getid_transaccion_cuenta_co_nota_venta()!=null && !parametrofactutransaccionBean.getid_transaccion_cuenta_co_nota_venta().equals(-1L))) {parametrofactutransaccion.setid_transaccion_cuenta_co_nota_venta(parametrofactutransaccionBean.getid_transaccion_cuenta_co_nota_venta());}
			if(conDefault || (!conDefault && parametrofactutransaccionBean.getid_transaccion_cuenta_co_tarjeta()!=null && !parametrofactutransaccionBean.getid_transaccion_cuenta_co_tarjeta().equals(-1L))) {parametrofactutransaccion.setid_transaccion_cuenta_co_tarjeta(parametrofactutransaccionBean.getid_transaccion_cuenta_co_tarjeta());}
			if(conDefault || (!conDefault && parametrofactutransaccionBean.getid_transaccion_cuenta_pa_factura()!=null && !parametrofactutransaccionBean.getid_transaccion_cuenta_pa_factura().equals(-1L))) {parametrofactutransaccion.setid_transaccion_cuenta_pa_factura(parametrofactutransaccionBean.getid_transaccion_cuenta_pa_factura());}
			if(conDefault || (!conDefault && parametrofactutransaccionBean.getid_transaccion_cuenta_pa_nota_credito()!=null && !parametrofactutransaccionBean.getid_transaccion_cuenta_pa_nota_credito().equals(-1L))) {parametrofactutransaccion.setid_transaccion_cuenta_pa_nota_credito(parametrofactutransaccionBean.getid_transaccion_cuenta_pa_nota_credito());}
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setCopiarVariablesObjetosParametroFactuTransaccion(ParametroFactuTransaccion parametrofactutransaccionOrigen,ParametroFactuTransaccion parametrofactutransaccion,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			if(conColumnasBase) {if(conDefault || (!conDefault && parametrofactutransaccionOrigen.getId()!=null && !parametrofactutransaccionOrigen.getId().equals(0L))) {parametrofactutransaccion.setId(parametrofactutransaccionOrigen.getId());}}
			if(conDefault || (!conDefault && parametrofactutransaccionOrigen.getid_transaccion_inven_factura()!=null && !parametrofactutransaccionOrigen.getid_transaccion_inven_factura().equals(-1L))) {parametrofactutransaccion.setid_transaccion_inven_factura(parametrofactutransaccionOrigen.getid_transaccion_inven_factura());}
			if(conDefault || (!conDefault && parametrofactutransaccionOrigen.getid_transaccion_inven_nota_credito()!=null && !parametrofactutransaccionOrigen.getid_transaccion_inven_nota_credito().equals(-1L))) {parametrofactutransaccion.setid_transaccion_inven_nota_credito(parametrofactutransaccionOrigen.getid_transaccion_inven_nota_credito());}
			if(conDefault || (!conDefault && parametrofactutransaccionOrigen.getid_transaccion_inven_nota_venta()!=null && !parametrofactutransaccionOrigen.getid_transaccion_inven_nota_venta().equals(-1L))) {parametrofactutransaccion.setid_transaccion_inven_nota_venta(parametrofactutransaccionOrigen.getid_transaccion_inven_nota_venta());}
			if(conDefault || (!conDefault && parametrofactutransaccionOrigen.getid_transaccion_cuenta_co_factura()!=null && !parametrofactutransaccionOrigen.getid_transaccion_cuenta_co_factura().equals(-1L))) {parametrofactutransaccion.setid_transaccion_cuenta_co_factura(parametrofactutransaccionOrigen.getid_transaccion_cuenta_co_factura());}
			if(conDefault || (!conDefault && parametrofactutransaccionOrigen.getid_transaccion_cuenta_co_nota_credito()!=null && !parametrofactutransaccionOrigen.getid_transaccion_cuenta_co_nota_credito().equals(-1L))) {parametrofactutransaccion.setid_transaccion_cuenta_co_nota_credito(parametrofactutransaccionOrigen.getid_transaccion_cuenta_co_nota_credito());}
			if(conDefault || (!conDefault && parametrofactutransaccionOrigen.getid_transaccion_cuenta_co_nota_venta()!=null && !parametrofactutransaccionOrigen.getid_transaccion_cuenta_co_nota_venta().equals(-1L))) {parametrofactutransaccion.setid_transaccion_cuenta_co_nota_venta(parametrofactutransaccionOrigen.getid_transaccion_cuenta_co_nota_venta());}
			if(conDefault || (!conDefault && parametrofactutransaccionOrigen.getid_transaccion_cuenta_co_tarjeta()!=null && !parametrofactutransaccionOrigen.getid_transaccion_cuenta_co_tarjeta().equals(-1L))) {parametrofactutransaccion.setid_transaccion_cuenta_co_tarjeta(parametrofactutransaccionOrigen.getid_transaccion_cuenta_co_tarjeta());}
			if(conDefault || (!conDefault && parametrofactutransaccionOrigen.getid_transaccion_cuenta_pa_factura()!=null && !parametrofactutransaccionOrigen.getid_transaccion_cuenta_pa_factura().equals(-1L))) {parametrofactutransaccion.setid_transaccion_cuenta_pa_factura(parametrofactutransaccionOrigen.getid_transaccion_cuenta_pa_factura());}
			if(conDefault || (!conDefault && parametrofactutransaccionOrigen.getid_transaccion_cuenta_pa_nota_credito()!=null && !parametrofactutransaccionOrigen.getid_transaccion_cuenta_pa_nota_credito().equals(-1L))) {parametrofactutransaccion.setid_transaccion_cuenta_pa_nota_credito(parametrofactutransaccionOrigen.getid_transaccion_cuenta_pa_nota_credito());}
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
		}
	}
	
	/*
	public void setVariablesObjetoBeanActualToFormularioParametroFactuTransaccion(ParametroFactuTransaccion parametrofactutransaccion) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormParametroFactuTransaccion.jLabelidParametroFactuTransaccion.setText(parametrofactutransaccion.getId().toString());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoBeanActualToFormularioParametroFactuTransaccion(ParametroFactuTransaccionBean parametrofactutransaccionBean) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormParametroFactuTransaccion.jLabelidParametroFactuTransaccion.setText(parametrofactutransaccionBean.getId().toString());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoReturnGeneralToBeanParametroFactuTransaccion(ParametroFactuTransaccionParameterReturnGeneral parametrofactutransaccionReturnGeneral,ParametroFactuTransaccionBean parametrofactutransaccionBean,Boolean conDefault) throws Exception { 
		try {
			ParametroFactuTransaccion parametrofactutransaccionLocal=new ParametroFactuTransaccion();
			
			parametrofactutransaccionLocal=parametrofactutransaccionReturnGeneral.getParametroFactuTransaccion();
			
			
			if(conColumnasBase) {if(conDefault || (!conDefault && parametrofactutransaccionLocal.getId()!=null && !parametrofactutransaccionLocal.getId().equals(0L))) {parametrofactutransaccionBean.setId(parametrofactutransaccionLocal.getId());}}
			if(conDefault || (!conDefault && parametrofactutransaccionLocal.getid_transaccion_inven_factura()!=null && !parametrofactutransaccionLocal.getid_transaccion_inven_factura().equals(-1L))) {parametrofactutransaccionBean.setid_transaccion_inven_factura(parametrofactutransaccionLocal.getid_transaccion_inven_factura());}
			if(conDefault || (!conDefault && parametrofactutransaccionLocal.getid_transaccion_inven_nota_credito()!=null && !parametrofactutransaccionLocal.getid_transaccion_inven_nota_credito().equals(-1L))) {parametrofactutransaccionBean.setid_transaccion_inven_nota_credito(parametrofactutransaccionLocal.getid_transaccion_inven_nota_credito());}
			if(conDefault || (!conDefault && parametrofactutransaccionLocal.getid_transaccion_inven_nota_venta()!=null && !parametrofactutransaccionLocal.getid_transaccion_inven_nota_venta().equals(-1L))) {parametrofactutransaccionBean.setid_transaccion_inven_nota_venta(parametrofactutransaccionLocal.getid_transaccion_inven_nota_venta());}
			if(conDefault || (!conDefault && parametrofactutransaccionLocal.getid_transaccion_cuenta_co_factura()!=null && !parametrofactutransaccionLocal.getid_transaccion_cuenta_co_factura().equals(-1L))) {parametrofactutransaccionBean.setid_transaccion_cuenta_co_factura(parametrofactutransaccionLocal.getid_transaccion_cuenta_co_factura());}
			if(conDefault || (!conDefault && parametrofactutransaccionLocal.getid_transaccion_cuenta_co_nota_credito()!=null && !parametrofactutransaccionLocal.getid_transaccion_cuenta_co_nota_credito().equals(-1L))) {parametrofactutransaccionBean.setid_transaccion_cuenta_co_nota_credito(parametrofactutransaccionLocal.getid_transaccion_cuenta_co_nota_credito());}
			if(conDefault || (!conDefault && parametrofactutransaccionLocal.getid_transaccion_cuenta_co_nota_venta()!=null && !parametrofactutransaccionLocal.getid_transaccion_cuenta_co_nota_venta().equals(-1L))) {parametrofactutransaccionBean.setid_transaccion_cuenta_co_nota_venta(parametrofactutransaccionLocal.getid_transaccion_cuenta_co_nota_venta());}
			if(conDefault || (!conDefault && parametrofactutransaccionLocal.getid_transaccion_cuenta_co_tarjeta()!=null && !parametrofactutransaccionLocal.getid_transaccion_cuenta_co_tarjeta().equals(-1L))) {parametrofactutransaccionBean.setid_transaccion_cuenta_co_tarjeta(parametrofactutransaccionLocal.getid_transaccion_cuenta_co_tarjeta());}
			if(conDefault || (!conDefault && parametrofactutransaccionLocal.getid_transaccion_cuenta_pa_factura()!=null && !parametrofactutransaccionLocal.getid_transaccion_cuenta_pa_factura().equals(-1L))) {parametrofactutransaccionBean.setid_transaccion_cuenta_pa_factura(parametrofactutransaccionLocal.getid_transaccion_cuenta_pa_factura());}
			if(conDefault || (!conDefault && parametrofactutransaccionLocal.getid_transaccion_cuenta_pa_nota_credito()!=null && !parametrofactutransaccionLocal.getid_transaccion_cuenta_pa_nota_credito().equals(-1L))) {parametrofactutransaccionBean.setid_transaccion_cuenta_pa_nota_credito(parametrofactutransaccionLocal.getid_transaccion_cuenta_pa_nota_credito());}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	@SuppressWarnings("rawtypes")
	public static void setActualComboBoxParametroFactuTransaccionGenerico(Long idParametroFactuTransaccionSeleccionado,JComboBox jComboBoxParametroFactuTransaccion,List<ParametroFactuTransaccion> parametrofactutransaccionsLocal)throws Exception {
		try {
			ParametroFactuTransaccion  parametrofactutransaccionTemp=null;

			for(ParametroFactuTransaccion parametrofactutransaccionAux:parametrofactutransaccionsLocal) {
				if(parametrofactutransaccionAux.getId()!=null && parametrofactutransaccionAux.getId().equals(idParametroFactuTransaccionSeleccionado)) {
					parametrofactutransaccionTemp=parametrofactutransaccionAux;
					break;
				}
			}

			jComboBoxParametroFactuTransaccion.setSelectedItem(parametrofactutransaccionTemp);

		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("rawtypes")
	public static void setHotKeysComboBoxParametroFactuTransaccionGenerico(JComboBox jComboBoxParametroFactuTransaccion,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda)throws Exception {
		try {
			//GLOBAL(id_empresa,id_sucursal,id_ejercicio)
			//BASICO(normal)
			//CON_BUSQUEDA(Permite buscar Fk)
			
			String sKeyStrokeName="";
			KeyStroke keyStrokeControl=null;
			
			if(!sTipoBusqueda.equals("GLOBAL")) {
				
				//BUSCAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSCAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSCAR");
				
				jComboBoxParametroFactuTransaccion.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxParametroFactuTransaccion.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Busqueda"));
				//BUSCAR
				
				
				//ACTUALIZAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_ACTUALIZAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_ACTUALIZAR");
				
				jComboBoxParametroFactuTransaccion.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxParametroFactuTransaccion.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Update"));
				//ACTUALIZAR
				
				if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxParametroFactuTransaccion.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
						jComboBoxParametroFactuTransaccion.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));						
					}
					
					/*
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxParametroFactuTransaccion.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					} else {
						jComboBoxParametroFactuTransaccion.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					}
					*/
				}								
				
				//CON_BUSQUEDA								
				if(sTipoBusqueda.contains("CON_BUSQUEDA")) {
					sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSQUEDA");
					keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSQUEDA");
							
					jComboBoxParametroFactuTransaccion.getInputMap().put(keyStrokeControl, sKeyStrokeName);
					jComboBoxParametroFactuTransaccion.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction));
				}
				//CON_BUSQUEDA
				
				
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	@SuppressWarnings("rawtypes")
	public void setHotKeysComboBoxGenerico(JComboBox jComboBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
			if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
				jComboBox.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			} else {
				jComboBox.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			}
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextFieldGenerico(JTextField jTextField,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextField.addFocusListener(new TextFieldFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		jTextField.addActionListener(new TextFieldActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextAreaGenerico(JTextArea jTextArea,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextArea.addFocusListener(new TextAreaFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jTextArea.addActionListener(new TextAreaActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJLabelGenerico(JLabel jLabel,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jLabel.addFocusListener(new LabelFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jLabel.addActionListener(new LabelActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJCheckBoxGenerico(JCheckBox jCheckBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jCheckBox.addFocusListener(new CheckBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//SI SE DEFINE AL CAMBIAR VALOR, ESTE NUEVO VALOR NO SE ENVIA AL EVENTO
		//jCheckBox.addItemListener(new CheckBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJDateChooserGenerico(JDateChooser jDateChooser,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		FuncionesSwing.addDateListener(jDateChooser, jInternalFrameBase, sNombreHotKeyAbstractAction);
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJButtonGenerico(JButton jButton,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jButton.addActionListener(new ButtonActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	public void jButtonRelacionActionPerformed(String sTipo,ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado) {
		//ABRIR RELACIONES
		try {
			
		} catch (Exception e) {
			FuncionesSwing.manageException2(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
		}
	}
	
	public String getDescripcionFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		String sDescripcion="";
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			parametrofactutransaccion=(ParametroFactuTransaccion) parametrofactutransaccionLogic.getParametroFactuTransaccions().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			parametrofactutransaccion =(ParametroFactuTransaccion) parametrofactutransaccions.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		if(sTipo.equals("Empresa")) {
			//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
			if(!parametrofactutransaccion.getIsNew() && !parametrofactutransaccion.getIsChanged() && !parametrofactutransaccion.getIsDeleted()) {
				sDescripcion=parametrofactutransaccion.getempresa_descripcion();
			} else {
				//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
				sDescripcion=parametrofactutransaccion.getempresa_descripcion();
			}
		}

		if(sTipo.equals("Sucursal")) {
			//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
			if(!parametrofactutransaccion.getIsNew() && !parametrofactutransaccion.getIsChanged() && !parametrofactutransaccion.getIsDeleted()) {
				sDescripcion=parametrofactutransaccion.getsucursal_descripcion();
			} else {
				//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
				sDescripcion=parametrofactutransaccion.getsucursal_descripcion();
			}
		}

		if(sTipo.equals("TransaccionInvenFactura")) {
			//sDescripcion=this.getActualTransaccionInvenFacturaForeignKeyDescripcion((Long)value);
			if(!parametrofactutransaccion.getIsNew() && !parametrofactutransaccion.getIsChanged() && !parametrofactutransaccion.getIsDeleted()) {
				sDescripcion=parametrofactutransaccion.gettransaccioninvenfactura_descripcion();
			} else {
				//sDescripcion=this.getActualTransaccionInvenFacturaForeignKeyDescripcion((Long)value);
				sDescripcion=parametrofactutransaccion.gettransaccioninvenfactura_descripcion();
			}
		}

		if(sTipo.equals("TransaccionInvenNotaCredito")) {
			//sDescripcion=this.getActualTransaccionInvenNotaCreditoForeignKeyDescripcion((Long)value);
			if(!parametrofactutransaccion.getIsNew() && !parametrofactutransaccion.getIsChanged() && !parametrofactutransaccion.getIsDeleted()) {
				sDescripcion=parametrofactutransaccion.gettransaccioninvennotacredito_descripcion();
			} else {
				//sDescripcion=this.getActualTransaccionInvenNotaCreditoForeignKeyDescripcion((Long)value);
				sDescripcion=parametrofactutransaccion.gettransaccioninvennotacredito_descripcion();
			}
		}

		if(sTipo.equals("TransaccionInvenNotaVenta")) {
			//sDescripcion=this.getActualTransaccionInvenNotaVentaForeignKeyDescripcion((Long)value);
			if(!parametrofactutransaccion.getIsNew() && !parametrofactutransaccion.getIsChanged() && !parametrofactutransaccion.getIsDeleted()) {
				sDescripcion=parametrofactutransaccion.gettransaccioninvennotaventa_descripcion();
			} else {
				//sDescripcion=this.getActualTransaccionInvenNotaVentaForeignKeyDescripcion((Long)value);
				sDescripcion=parametrofactutransaccion.gettransaccioninvennotaventa_descripcion();
			}
		}

		if(sTipo.equals("TransaccionCuentaCoFactura")) {
			//sDescripcion=this.getActualTransaccionCuentaCoFacturaForeignKeyDescripcion((Long)value);
			if(!parametrofactutransaccion.getIsNew() && !parametrofactutransaccion.getIsChanged() && !parametrofactutransaccion.getIsDeleted()) {
				sDescripcion=parametrofactutransaccion.gettransaccioncuentacofactura_descripcion();
			} else {
				//sDescripcion=this.getActualTransaccionCuentaCoFacturaForeignKeyDescripcion((Long)value);
				sDescripcion=parametrofactutransaccion.gettransaccioncuentacofactura_descripcion();
			}
		}

		if(sTipo.equals("TransaccionCuentaCoNotaCredito")) {
			//sDescripcion=this.getActualTransaccionCuentaCoNotaCreditoForeignKeyDescripcion((Long)value);
			if(!parametrofactutransaccion.getIsNew() && !parametrofactutransaccion.getIsChanged() && !parametrofactutransaccion.getIsDeleted()) {
				sDescripcion=parametrofactutransaccion.gettransaccioncuentaconotacredito_descripcion();
			} else {
				//sDescripcion=this.getActualTransaccionCuentaCoNotaCreditoForeignKeyDescripcion((Long)value);
				sDescripcion=parametrofactutransaccion.gettransaccioncuentaconotacredito_descripcion();
			}
		}

		if(sTipo.equals("TransaccionCuentaCoNotaVenta")) {
			//sDescripcion=this.getActualTransaccionCuentaCoNotaVentaForeignKeyDescripcion((Long)value);
			if(!parametrofactutransaccion.getIsNew() && !parametrofactutransaccion.getIsChanged() && !parametrofactutransaccion.getIsDeleted()) {
				sDescripcion=parametrofactutransaccion.gettransaccioncuentaconotaventa_descripcion();
			} else {
				//sDescripcion=this.getActualTransaccionCuentaCoNotaVentaForeignKeyDescripcion((Long)value);
				sDescripcion=parametrofactutransaccion.gettransaccioncuentaconotaventa_descripcion();
			}
		}

		if(sTipo.equals("TransaccionCuentaCoTarjeta")) {
			//sDescripcion=this.getActualTransaccionCuentaCoTarjetaForeignKeyDescripcion((Long)value);
			if(!parametrofactutransaccion.getIsNew() && !parametrofactutransaccion.getIsChanged() && !parametrofactutransaccion.getIsDeleted()) {
				sDescripcion=parametrofactutransaccion.gettransaccioncuentacotarjeta_descripcion();
			} else {
				//sDescripcion=this.getActualTransaccionCuentaCoTarjetaForeignKeyDescripcion((Long)value);
				sDescripcion=parametrofactutransaccion.gettransaccioncuentacotarjeta_descripcion();
			}
		}

		if(sTipo.equals("TransaccionCuentaPaFactura")) {
			//sDescripcion=this.getActualTransaccionCuentaPaFacturaForeignKeyDescripcion((Long)value);
			if(!parametrofactutransaccion.getIsNew() && !parametrofactutransaccion.getIsChanged() && !parametrofactutransaccion.getIsDeleted()) {
				sDescripcion=parametrofactutransaccion.gettransaccioncuentapafactura_descripcion();
			} else {
				//sDescripcion=this.getActualTransaccionCuentaPaFacturaForeignKeyDescripcion((Long)value);
				sDescripcion=parametrofactutransaccion.gettransaccioncuentapafactura_descripcion();
			}
		}

		if(sTipo.equals("TransaccionCuentaPaNotaCredito")) {
			//sDescripcion=this.getActualTransaccionCuentaPaNotaCreditoForeignKeyDescripcion((Long)value);
			if(!parametrofactutransaccion.getIsNew() && !parametrofactutransaccion.getIsChanged() && !parametrofactutransaccion.getIsDeleted()) {
				sDescripcion=parametrofactutransaccion.gettransaccioncuentapanotacredito_descripcion();
			} else {
				//sDescripcion=this.getActualTransaccionCuentaPaNotaCreditoForeignKeyDescripcion((Long)value);
				sDescripcion=parametrofactutransaccion.gettransaccioncuentapanotacredito_descripcion();
			}
		}

		
		return sDescripcion;
	}
	
	public Color getColorFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		Color color=Color.WHITE;
		
		ParametroFactuTransaccion parametrofactutransaccionRow=new ParametroFactuTransaccion();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			parametrofactutransaccionRow=(ParametroFactuTransaccion) parametrofactutransaccionLogic.getParametroFactuTransaccions().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			parametrofactutransaccionRow=(ParametroFactuTransaccion) parametrofactutransaccions.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		
		return color;
	}
	
	
	
	
	
	
	
	public void refrescarBindingTabla(Boolean blnSoloTabla) {
	}
	
	public void inicializarActualizarBindingBotonesManualParametroFactuTransaccion(Boolean esSetControles) {						
		if(esSetControles) {
			this.jButtonNuevoParametroFactuTransaccion.setVisible((this.isVisibilidadCeldaNuevoParametroFactuTransaccion && this.isPermisoNuevoParametroFactuTransaccion));			
			this.jButtonDuplicarParametroFactuTransaccion.setVisible((this.isVisibilidadCeldaDuplicarParametroFactuTransaccion && this.isPermisoDuplicarParametroFactuTransaccion));			
			this.jButtonCopiarParametroFactuTransaccion.setVisible((this.isVisibilidadCeldaCopiarParametroFactuTransaccion && this.isPermisoCopiarParametroFactuTransaccion));
			this.jButtonVerFormParametroFactuTransaccion.setVisible((this.isVisibilidadCeldaVerFormParametroFactuTransaccion && this.isPermisoVerFormParametroFactuTransaccion));
			
			this.jButtonAbrirOrderByParametroFactuTransaccion.setVisible((this.isVisibilidadCeldaOrdenParametroFactuTransaccion && this.isPermisoOrdenParametroFactuTransaccion));			
			
			this.jButtonNuevoRelacionesParametroFactuTransaccion.setVisible((this.isVisibilidadCeldaNuevoRelacionesParametroFactuTransaccion && this.isPermisoNuevoParametroFactuTransaccion));			
			this.jButtonNuevoGuardarCambiosParametroFactuTransaccion.setVisible((this.isVisibilidadCeldaNuevoParametroFactuTransaccion && this.isPermisoNuevoParametroFactuTransaccion && this.isPermisoGuardarCambiosParametroFactuTransaccion));
			
			if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) {
			this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonModificarParametroFactuTransaccion.setVisible((this.isVisibilidadCeldaModificarParametroFactuTransaccion && this.isPermisoActualizarParametroFactuTransaccion));	
			this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonActualizarParametroFactuTransaccion.setVisible((this.isVisibilidadCeldaActualizarParametroFactuTransaccion && this.isPermisoActualizarParametroFactuTransaccion));	
			this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonEliminarParametroFactuTransaccion.setVisible((this.isVisibilidadCeldaEliminarParametroFactuTransaccion && this.isPermisoEliminarParametroFactuTransaccion));
			this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonCancelarParametroFactuTransaccion.setVisible(this.isVisibilidadCeldaCancelarParametroFactuTransaccion);							
			this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonGuardarCambiosParametroFactuTransaccion.setVisible((this.isVisibilidadCeldaGuardarParametroFactuTransaccion && this.isPermisoGuardarCambiosParametroFactuTransaccion));			
			
			}
						
			this.jButtonGuardarCambiosTablaParametroFactuTransaccion.setVisible((this.isVisibilidadCeldaGuardarCambiosParametroFactuTransaccion && this.isPermisoGuardarCambiosParametroFactuTransaccion));							
			
			//TOOLBAR
			
			this.jButtonNuevoToolBarParametroFactuTransaccion.setVisible((this.isVisibilidadCeldaNuevoParametroFactuTransaccion && this.isPermisoNuevoParametroFactuTransaccion));						
			this.jButtonDuplicarToolBarParametroFactuTransaccion.setVisible((this.isVisibilidadCeldaDuplicarParametroFactuTransaccion && this.isPermisoDuplicarParametroFactuTransaccion));						
			this.jButtonCopiarToolBarParametroFactuTransaccion.setVisible((this.isVisibilidadCeldaCopiarParametroFactuTransaccion && this.isPermisoCopiarParametroFactuTransaccion));			
			this.jButtonVerFormToolBarParametroFactuTransaccion.setVisible((this.isVisibilidadCeldaVerFormParametroFactuTransaccion && this.isPermisoVerFormParametroFactuTransaccion));			
			this.jButtonAbrirOrderByToolBarParametroFactuTransaccion.setVisible((this.isVisibilidadCeldaOrdenParametroFactuTransaccion && this.isPermisoOrdenParametroFactuTransaccion));
			this.jButtonNuevoRelacionesToolBarParametroFactuTransaccion.setVisible((this.isVisibilidadCeldaNuevoRelacionesParametroFactuTransaccion && this.isPermisoNuevoParametroFactuTransaccion));			
			this.jButtonNuevoGuardarCambiosToolBarParametroFactuTransaccion.setVisible((this.isVisibilidadCeldaNuevoParametroFactuTransaccion && this.isPermisoNuevoParametroFactuTransaccion && this.isPermisoGuardarCambiosParametroFactuTransaccion));			
			
			if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) {
			this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonModificarToolBarParametroFactuTransaccion.setVisible((this.isVisibilidadCeldaModificarParametroFactuTransaccion && this.isPermisoActualizarParametroFactuTransaccion));	
			this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonActualizarToolBarParametroFactuTransaccion.setVisible((this.isVisibilidadCeldaActualizarParametroFactuTransaccion  && this.isPermisoActualizarParametroFactuTransaccion));	
			this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonEliminarToolBarParametroFactuTransaccion.setVisible((this.isVisibilidadCeldaEliminarParametroFactuTransaccion && this.isPermisoEliminarParametroFactuTransaccion));
			this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonCancelarToolBarParametroFactuTransaccion.setVisible(this.isVisibilidadCeldaCancelarParametroFactuTransaccion);				
			this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonGuardarCambiosToolBarParametroFactuTransaccion.setVisible((this.isVisibilidadCeldaGuardarParametroFactuTransaccion && this.isPermisoGuardarCambiosParametroFactuTransaccion));									
			}
			
			this.jButtonGuardarCambiosTablaToolBarParametroFactuTransaccion.setVisible((this.isVisibilidadCeldaGuardarCambiosParametroFactuTransaccion && this.isPermisoGuardarCambiosParametroFactuTransaccion));									
			
			//TOOLBAR
			
			//MENUS
			
			this.jMenuItemNuevoParametroFactuTransaccion.setVisible((this.isVisibilidadCeldaNuevoParametroFactuTransaccion && this.isPermisoNuevoParametroFactuTransaccion));			
			this.jMenuItemDuplicarParametroFactuTransaccion.setVisible((this.isVisibilidadCeldaDuplicarParametroFactuTransaccion && this.isPermisoDuplicarParametroFactuTransaccion));			
			this.jMenuItemCopiarParametroFactuTransaccion.setVisible((this.isVisibilidadCeldaCopiarParametroFactuTransaccion && this.isPermisoCopiarParametroFactuTransaccion));			
			this.jMenuItemVerFormParametroFactuTransaccion.setVisible((this.isVisibilidadCeldaVerFormParametroFactuTransaccion && this.isPermisoVerFormParametroFactuTransaccion));			
			this.jMenuItemAbrirOrderByParametroFactuTransaccion.setVisible((this.isVisibilidadCeldaOrdenParametroFactuTransaccion && this.isPermisoOrdenParametroFactuTransaccion));			
			//this.jMenuItemMostrarOcultarParametroFactuTransaccion.setVisible((this.isVisibilidadCeldaOrdenParametroFactuTransaccion && this.isPermisoOrdenParametroFactuTransaccion));
			this.jMenuItemDetalleAbrirOrderByParametroFactuTransaccion.setVisible((this.isVisibilidadCeldaOrdenParametroFactuTransaccion && this.isPermisoOrdenParametroFactuTransaccion));			
			//this.jMenuItemDetalleMostrarOcultarParametroFactuTransaccion.setVisible((this.isVisibilidadCeldaOrdenParametroFactuTransaccion && this.isPermisoOrdenParametroFactuTransaccion));			
			this.jMenuItemNuevoRelacionesParametroFactuTransaccion.setVisible((this.isVisibilidadCeldaNuevoRelacionesParametroFactuTransaccion && this.isPermisoNuevoParametroFactuTransaccion));			
			this.jMenuItemNuevoGuardarCambiosParametroFactuTransaccion.setVisible((this.isVisibilidadCeldaNuevoParametroFactuTransaccion && this.isPermisoNuevoParametroFactuTransaccion && this.isPermisoGuardarCambiosParametroFactuTransaccion));									
			
			if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) {
			this.jInternalFrameDetalleFormParametroFactuTransaccion.jMenuItemModificarParametroFactuTransaccion.setVisible((this.isVisibilidadCeldaModificarParametroFactuTransaccion && this.isPermisoActualizarParametroFactuTransaccion));	
			this.jInternalFrameDetalleFormParametroFactuTransaccion.jMenuItemActualizarParametroFactuTransaccion.setVisible((this.isVisibilidadCeldaActualizarParametroFactuTransaccion && this.isPermisoActualizarParametroFactuTransaccion));	
			this.jInternalFrameDetalleFormParametroFactuTransaccion.jMenuItemEliminarParametroFactuTransaccion.setVisible((this.isVisibilidadCeldaEliminarParametroFactuTransaccion && this.isPermisoEliminarParametroFactuTransaccion));
			this.jInternalFrameDetalleFormParametroFactuTransaccion.jMenuItemCancelarParametroFactuTransaccion.setVisible(this.isVisibilidadCeldaCancelarParametroFactuTransaccion);				
			}
			
			this.jMenuItemGuardarCambiosParametroFactuTransaccion.setVisible((this.isVisibilidadCeldaGuardarParametroFactuTransaccion && this.isPermisoGuardarCambiosParametroFactuTransaccion));						
			this.jMenuItemGuardarCambiosTablaParametroFactuTransaccion.setVisible((this.isVisibilidadCeldaGuardarCambiosParametroFactuTransaccion && this.isPermisoGuardarCambiosParametroFactuTransaccion));						
			
			//MENUS
			
		} else {
			this.isVisibilidadCeldaNuevoParametroFactuTransaccion=this.jButtonNuevoParametroFactuTransaccion.isVisible();
			this.isVisibilidadCeldaDuplicarParametroFactuTransaccion=this.jButtonDuplicarParametroFactuTransaccion.isVisible();
			this.isVisibilidadCeldaCopiarParametroFactuTransaccion=this.jButtonCopiarParametroFactuTransaccion.isVisible();
			this.isVisibilidadCeldaVerFormParametroFactuTransaccion=this.jButtonVerFormParametroFactuTransaccion.isVisible();
			
			this.isVisibilidadCeldaOrdenParametroFactuTransaccion=this.jButtonAbrirOrderByParametroFactuTransaccion.isVisible();			
			
			this.isVisibilidadCeldaNuevoRelacionesParametroFactuTransaccion=this.jButtonNuevoRelacionesParametroFactuTransaccion.isVisible();
			this.isVisibilidadCeldaModificarParametroFactuTransaccion=this.jButtonModificarParametroFactuTransaccion.isVisible();
			
			if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) {
			this.isVisibilidadCeldaActualizarParametroFactuTransaccion=this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonActualizarParametroFactuTransaccion.isVisible();
			this.isVisibilidadCeldaEliminarParametroFactuTransaccion=this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonEliminarParametroFactuTransaccion.isVisible();
			this.isVisibilidadCeldaCancelarParametroFactuTransaccion=this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonCancelarParametroFactuTransaccion.isVisible();
			this.isVisibilidadCeldaGuardarParametroFactuTransaccion=this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonGuardarCambiosParametroFactuTransaccion.isVisible();			
			}
			
			this.isVisibilidadCeldaGuardarCambiosParametroFactuTransaccion=this.jButtonGuardarCambiosTablaParametroFactuTransaccion.isVisible();
			
			//TOOLBAR
			
			this.isVisibilidadCeldaNuevoParametroFactuTransaccion=this.jButtonNuevoToolBarParametroFactuTransaccion.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesParametroFactuTransaccion=this.jButtonNuevoRelacionesToolBarParametroFactuTransaccion.isVisible();
			
			if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) {
			this.isVisibilidadCeldaModificarParametroFactuTransaccion=this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonModificarToolBarParametroFactuTransaccion.isVisible();
			this.isVisibilidadCeldaActualizarParametroFactuTransaccion=this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonActualizarToolBarParametroFactuTransaccion.isVisible();
			this.isVisibilidadCeldaEliminarParametroFactuTransaccion=this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonEliminarToolBarParametroFactuTransaccion.isVisible();
			this.isVisibilidadCeldaCancelarParametroFactuTransaccion=this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonCancelarToolBarParametroFactuTransaccion.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarParametroFactuTransaccion=this.jButtonGuardarCambiosToolBarParametroFactuTransaccion.isVisible();
			this.isVisibilidadCeldaGuardarCambiosParametroFactuTransaccion=this.jButtonGuardarCambiosTablaToolBarParametroFactuTransaccion.isVisible();						
			
			//TOOLBAR
			
			//MENUS
			
			this.isVisibilidadCeldaNuevoParametroFactuTransaccion=this.jMenuItemNuevoParametroFactuTransaccion.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesParametroFactuTransaccion=this.jMenuItemNuevoRelacionesParametroFactuTransaccion.isVisible();
			
			if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) {
			this.isVisibilidadCeldaModificarParametroFactuTransaccion=this.jInternalFrameDetalleFormParametroFactuTransaccion.jMenuItemModificarParametroFactuTransaccion.isVisible();
			this.isVisibilidadCeldaActualizarParametroFactuTransaccion=this.jInternalFrameDetalleFormParametroFactuTransaccion.jMenuItemActualizarParametroFactuTransaccion.isVisible();
			this.isVisibilidadCeldaEliminarParametroFactuTransaccion=this.jInternalFrameDetalleFormParametroFactuTransaccion.jMenuItemEliminarParametroFactuTransaccion.isVisible();
			this.isVisibilidadCeldaCancelarParametroFactuTransaccion=this.jInternalFrameDetalleFormParametroFactuTransaccion.jMenuItemCancelarParametroFactuTransaccion.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarParametroFactuTransaccion=this.jMenuItemGuardarCambiosParametroFactuTransaccion.isVisible();
			this.isVisibilidadCeldaGuardarCambiosParametroFactuTransaccion=this.jMenuItemGuardarCambiosTablaParametroFactuTransaccion.isVisible();						
			
			//MENUS
		}
	}
	
	public void inicializarActualizarBindingBotonesParametroFactuTransaccion(Boolean esInicializar) {
		if(ParametroFactuTransaccionJInternalFrame.ISBINDING_MANUAL) {			
			if(this.parametrofactutransaccionSessionBean.getConGuardarRelaciones()) {
				//if(this.parametrofactutransaccionSessionBean.getEsGuardarRelacionado()) {
				
				this.actualizarEstadoCeldasBotonesConGuardarRelacionesParametroFactuTransaccion();
			}
			
			this.inicializarActualizarBindingBotonesManualParametroFactuTransaccion(true);
			
		} else {	
		}
	}		
	
	public void inicializarActualizarBindingBotonesPermisosManualParametroFactuTransaccion() {
		this.jButtonNuevoParametroFactuTransaccion.setVisible(this.isPermisoNuevoParametroFactuTransaccion);			
		this.jButtonDuplicarParametroFactuTransaccion.setVisible(this.isPermisoDuplicarParametroFactuTransaccion);			
		this.jButtonCopiarParametroFactuTransaccion.setVisible(this.isPermisoCopiarParametroFactuTransaccion);			
		this.jButtonVerFormParametroFactuTransaccion.setVisible(this.isPermisoVerFormParametroFactuTransaccion);			
		
		this.jButtonAbrirOrderByParametroFactuTransaccion.setVisible(this.isPermisoOrdenParametroFactuTransaccion);					
		
		this.jButtonNuevoRelacionesParametroFactuTransaccion.setVisible(this.isPermisoNuevoParametroFactuTransaccion);			
		
		if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonModificarParametroFactuTransaccion.setVisible(this.isPermisoActualizarParametroFactuTransaccion);	
			this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonActualizarParametroFactuTransaccion.setVisible(this.isPermisoActualizarParametroFactuTransaccion);	
			this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonEliminarParametroFactuTransaccion.setVisible(this.isPermisoEliminarParametroFactuTransaccion);
			this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonCancelarParametroFactuTransaccion.setVisible(this.isVisibilidadCeldaCancelarParametroFactuTransaccion);						
			this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonGuardarCambiosParametroFactuTransaccion.setVisible(this.isPermisoGuardarCambiosParametroFactuTransaccion);							
		}
		
		this.jButtonGuardarCambiosTablaParametroFactuTransaccion.setVisible(this.isPermisoActualizarParametroFactuTransaccion);
	}
	
	public void inicializarActualizarBindingBotonesPermisosManualFormDetalleParametroFactuTransaccion() {
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonModificarParametroFactuTransaccion.setVisible(this.isPermisoActualizarParametroFactuTransaccion);	
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonActualizarParametroFactuTransaccion.setVisible(this.isPermisoActualizarParametroFactuTransaccion);	
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonEliminarParametroFactuTransaccion.setVisible(this.isPermisoEliminarParametroFactuTransaccion);
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonCancelarParametroFactuTransaccion.setVisible(this.isVisibilidadCeldaCancelarParametroFactuTransaccion);							
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonGuardarCambiosParametroFactuTransaccion.setVisible((this.isVisibilidadCeldaGuardarParametroFactuTransaccion && this.isPermisoGuardarCambiosParametroFactuTransaccion));			
	}
	
	public void inicializarActualizarBindingBotonesPermisosParametroFactuTransaccion() {
		if(ParametroFactuTransaccionJInternalFrame.ISBINDING_MANUAL) {
			this.inicializarActualizarBindingBotonesPermisosManualParametroFactuTransaccion();
		} else {
		}
	}
	
	
	public void refrescarBindingBotonesParametroFactuTransaccion() {
	}
	
	public void jTableDatosParametroFactuTransaccionListSelectionListener(javax.swing.event.ListSelectionEvent evt) throws Exception { 
		try {
			this.seleccionarParametroFactuTransaccion(null,evt,-1);
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonidParametroFactuTransaccionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactutransaccionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuTransaccion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuTransaccion(this.getparametrofactutransaccion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuTransaccion(this.parametrofactutransaccion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactutransaccion =(ParametroFactuTransaccion) this.parametrofactutransaccionLogic.getParametroFactuTransaccions().toArray()[this.jTableDatosParametroFactuTransaccion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactutransaccion =(ParametroFactuTransaccion) this.parametrofactutransaccions.toArray()[this.jTableDatosParametroFactuTransaccion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactutransaccion==null) {
						this.parametrofactutransaccion = new ParametroFactuTransaccion();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuTransaccion(this.parametrofactutransaccion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuTransaccion(this.parametrofactutransaccion);
				}

				if(this.parametrofactutransaccion.getId()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id = "+this.parametrofactutransaccion.getId().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuTransaccion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactutransaccionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactutransaccionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactutransaccionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_empresaParametroFactuTransaccionUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoempresa=true;

			idTienePermisoempresa=this.tienePermisosUsuarioEnPaginaWebParametroFactuTransaccion(EmpresaConstantesFunciones.CLASSNAME);

			if(idTienePermisoempresa) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuTransaccion.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroFactuTransaccion.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroFactuTransaccion.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactutransaccion =(ParametroFactuTransaccion) this.parametrofactutransaccionLogic.getParametroFactuTransaccions().toArray()[this.jTableDatosParametroFactuTransaccion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrofactutransaccion =(ParametroFactuTransaccion) this.parametrofactutransaccions.toArray()[this.jTableDatosParametroFactuTransaccion.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroFactuTransaccion(this.getparametrofactutransaccion(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuTransaccion(this.parametrofactutransaccion);

				this.empresaBeanSwingJInternalFrame=new EmpresaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.empresaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.empresaBeanSwingJInternalFrame.getEmpresaLogic().setConnexion(this.parametrofactutransaccionLogic.getConnexion());

				if(this.parametrofactutransaccion.getid_empresa()!=null) {
					this.empresaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.empresaBeanSwingJInternalFrame.setIdActual(this.parametrofactutransaccion.getid_empresa());
					this.empresaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpresa();
				}

				JInternalFrameBase jinternalFrame =this.empresaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroFactuTransaccion=(TitledBorder)this.jScrollPanelDatosParametroFactuTransaccion.getBorder();
				TitledBorder titledBorderempresa=(TitledBorder)this.empresaBeanSwingJInternalFrame.jScrollPanelDatosEmpresa.getBorder();

				titledBorderempresa.setTitle(titledBorderParametroFactuTransaccion.getTitle() + " -> Empresa");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_empresaParametroFactuTransaccionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactutransaccionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuTransaccion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuTransaccion(this.getparametrofactutransaccion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuTransaccion(this.parametrofactutransaccion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactutransaccion =(ParametroFactuTransaccion) this.parametrofactutransaccionLogic.getParametroFactuTransaccions().toArray()[this.jTableDatosParametroFactuTransaccion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactutransaccion =(ParametroFactuTransaccion) this.parametrofactutransaccions.toArray()[this.jTableDatosParametroFactuTransaccion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactutransaccion==null) {
						this.parametrofactutransaccion = new ParametroFactuTransaccion();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuTransaccion(this.parametrofactutransaccion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuTransaccion(this.parametrofactutransaccion);
				}

				if(this.parametrofactutransaccion.getid_empresa()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_empresa = "+this.parametrofactutransaccion.getid_empresa().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuTransaccion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactutransaccionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactutransaccionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactutransaccionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_sucursalParametroFactuTransaccionUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisosucursal=true;

			idTienePermisosucursal=this.tienePermisosUsuarioEnPaginaWebParametroFactuTransaccion(SucursalConstantesFunciones.CLASSNAME);

			if(idTienePermisosucursal) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuTransaccion.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroFactuTransaccion.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroFactuTransaccion.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactutransaccion =(ParametroFactuTransaccion) this.parametrofactutransaccionLogic.getParametroFactuTransaccions().toArray()[this.jTableDatosParametroFactuTransaccion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrofactutransaccion =(ParametroFactuTransaccion) this.parametrofactutransaccions.toArray()[this.jTableDatosParametroFactuTransaccion.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroFactuTransaccion(this.getparametrofactutransaccion(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuTransaccion(this.parametrofactutransaccion);

				this.sucursalBeanSwingJInternalFrame=new SucursalBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.sucursalBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.sucursalBeanSwingJInternalFrame.getSucursalLogic().setConnexion(this.parametrofactutransaccionLogic.getConnexion());

				if(this.parametrofactutransaccion.getid_sucursal()!=null) {
					this.sucursalBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.sucursalBeanSwingJInternalFrame.setIdActual(this.parametrofactutransaccion.getid_sucursal());
					this.sucursalBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.inicializarActualizarBindingTablaSucursal();
				}

				JInternalFrameBase jinternalFrame =this.sucursalBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroFactuTransaccion=(TitledBorder)this.jScrollPanelDatosParametroFactuTransaccion.getBorder();
				TitledBorder titledBordersucursal=(TitledBorder)this.sucursalBeanSwingJInternalFrame.jScrollPanelDatosSucursal.getBorder();

				titledBordersucursal.setTitle(titledBorderParametroFactuTransaccion.getTitle() + " -> Sucursal");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_sucursalParametroFactuTransaccionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactutransaccionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuTransaccion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuTransaccion(this.getparametrofactutransaccion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuTransaccion(this.parametrofactutransaccion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactutransaccion =(ParametroFactuTransaccion) this.parametrofactutransaccionLogic.getParametroFactuTransaccions().toArray()[this.jTableDatosParametroFactuTransaccion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactutransaccion =(ParametroFactuTransaccion) this.parametrofactutransaccions.toArray()[this.jTableDatosParametroFactuTransaccion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactutransaccion==null) {
						this.parametrofactutransaccion = new ParametroFactuTransaccion();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuTransaccion(this.parametrofactutransaccion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuTransaccion(this.parametrofactutransaccion);
				}

				if(this.parametrofactutransaccion.getid_sucursal()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_sucursal = "+this.parametrofactutransaccion.getid_sucursal().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuTransaccion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactutransaccionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactutransaccionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactutransaccionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_transaccion_inven_facturaParametroFactuTransaccionUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotransaccioninvenfactura=true;

			idTienePermisotransaccioninvenfactura=this.tienePermisosUsuarioEnPaginaWebParametroFactuTransaccion(TransaccionConstantesFunciones.CLASSNAME);

			if(idTienePermisotransaccioninvenfactura) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuTransaccion.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroFactuTransaccion.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroFactuTransaccion.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactutransaccion =(ParametroFactuTransaccion) this.parametrofactutransaccionLogic.getParametroFactuTransaccions().toArray()[this.jTableDatosParametroFactuTransaccion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrofactutransaccion =(ParametroFactuTransaccion) this.parametrofactutransaccions.toArray()[this.jTableDatosParametroFactuTransaccion.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroFactuTransaccion(this.getparametrofactutransaccion(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuTransaccion(this.parametrofactutransaccion);

				this.transaccioninvenfacturaBeanSwingJInternalFrame=new TransaccionBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.transaccioninvenfacturaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.transaccioninvenfacturaBeanSwingJInternalFrame.getTransaccionLogic().setConnexion(this.parametrofactutransaccionLogic.getConnexion());

				if(this.parametrofactutransaccion.getid_transaccion_inven_factura()!=null) {
					this.transaccioninvenfacturaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.transaccioninvenfacturaBeanSwingJInternalFrame.setIdActual(this.parametrofactutransaccion.getid_transaccion_inven_factura());
					this.transaccioninvenfacturaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.transaccioninvenfacturaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.transaccioninvenfacturaBeanSwingJInternalFrame.inicializarActualizarBindingTablaTransaccion();
				}

				JInternalFrameBase jinternalFrame =this.transaccioninvenfacturaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroFactuTransaccion=(TitledBorder)this.jScrollPanelDatosParametroFactuTransaccion.getBorder();
				TitledBorder titledBordertransaccioninvenfactura=(TitledBorder)this.transaccioninvenfacturaBeanSwingJInternalFrame.jScrollPanelDatosTransaccion.getBorder();

				titledBordertransaccioninvenfactura.setTitle(titledBorderParametroFactuTransaccion.getTitle() + " -> Transaccion");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_transaccion_inven_facturaParametroFactuTransaccionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactutransaccionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuTransaccion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuTransaccion(this.getparametrofactutransaccion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuTransaccion(this.parametrofactutransaccion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactutransaccion =(ParametroFactuTransaccion) this.parametrofactutransaccionLogic.getParametroFactuTransaccions().toArray()[this.jTableDatosParametroFactuTransaccion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactutransaccion =(ParametroFactuTransaccion) this.parametrofactutransaccions.toArray()[this.jTableDatosParametroFactuTransaccion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactutransaccion==null) {
						this.parametrofactutransaccion = new ParametroFactuTransaccion();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuTransaccion(this.parametrofactutransaccion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuTransaccion(this.parametrofactutransaccion);
				}

				if(this.parametrofactutransaccion.getid_transaccion_inven_factura()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_transaccion_inven_factura = "+this.parametrofactutransaccion.getid_transaccion_inven_factura().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuTransaccion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactutransaccionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactutransaccionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactutransaccionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_transaccion_inven_nota_creditoParametroFactuTransaccionUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotransaccioninvennotacredito=true;

			idTienePermisotransaccioninvennotacredito=this.tienePermisosUsuarioEnPaginaWebParametroFactuTransaccion(TransaccionConstantesFunciones.CLASSNAME);

			if(idTienePermisotransaccioninvennotacredito) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuTransaccion.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroFactuTransaccion.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroFactuTransaccion.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactutransaccion =(ParametroFactuTransaccion) this.parametrofactutransaccionLogic.getParametroFactuTransaccions().toArray()[this.jTableDatosParametroFactuTransaccion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrofactutransaccion =(ParametroFactuTransaccion) this.parametrofactutransaccions.toArray()[this.jTableDatosParametroFactuTransaccion.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroFactuTransaccion(this.getparametrofactutransaccion(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuTransaccion(this.parametrofactutransaccion);

				this.transaccioninvennotacreditoBeanSwingJInternalFrame=new TransaccionBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.transaccioninvennotacreditoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.transaccioninvennotacreditoBeanSwingJInternalFrame.getTransaccionLogic().setConnexion(this.parametrofactutransaccionLogic.getConnexion());

				if(this.parametrofactutransaccion.getid_transaccion_inven_nota_credito()!=null) {
					this.transaccioninvennotacreditoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.transaccioninvennotacreditoBeanSwingJInternalFrame.setIdActual(this.parametrofactutransaccion.getid_transaccion_inven_nota_credito());
					this.transaccioninvennotacreditoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.transaccioninvennotacreditoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.transaccioninvennotacreditoBeanSwingJInternalFrame.inicializarActualizarBindingTablaTransaccion();
				}

				JInternalFrameBase jinternalFrame =this.transaccioninvennotacreditoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroFactuTransaccion=(TitledBorder)this.jScrollPanelDatosParametroFactuTransaccion.getBorder();
				TitledBorder titledBordertransaccioninvennotacredito=(TitledBorder)this.transaccioninvennotacreditoBeanSwingJInternalFrame.jScrollPanelDatosTransaccion.getBorder();

				titledBordertransaccioninvennotacredito.setTitle(titledBorderParametroFactuTransaccion.getTitle() + " -> Transaccion");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_transaccion_inven_nota_creditoParametroFactuTransaccionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactutransaccionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuTransaccion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuTransaccion(this.getparametrofactutransaccion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuTransaccion(this.parametrofactutransaccion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactutransaccion =(ParametroFactuTransaccion) this.parametrofactutransaccionLogic.getParametroFactuTransaccions().toArray()[this.jTableDatosParametroFactuTransaccion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactutransaccion =(ParametroFactuTransaccion) this.parametrofactutransaccions.toArray()[this.jTableDatosParametroFactuTransaccion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactutransaccion==null) {
						this.parametrofactutransaccion = new ParametroFactuTransaccion();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuTransaccion(this.parametrofactutransaccion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuTransaccion(this.parametrofactutransaccion);
				}

				if(this.parametrofactutransaccion.getid_transaccion_inven_nota_credito()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_transaccion_inven_nota_credito = "+this.parametrofactutransaccion.getid_transaccion_inven_nota_credito().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuTransaccion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactutransaccionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactutransaccionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactutransaccionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_transaccion_inven_nota_ventaParametroFactuTransaccionUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotransaccioninvennotaventa=true;

			idTienePermisotransaccioninvennotaventa=this.tienePermisosUsuarioEnPaginaWebParametroFactuTransaccion(TransaccionConstantesFunciones.CLASSNAME);

			if(idTienePermisotransaccioninvennotaventa) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuTransaccion.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroFactuTransaccion.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroFactuTransaccion.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactutransaccion =(ParametroFactuTransaccion) this.parametrofactutransaccionLogic.getParametroFactuTransaccions().toArray()[this.jTableDatosParametroFactuTransaccion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrofactutransaccion =(ParametroFactuTransaccion) this.parametrofactutransaccions.toArray()[this.jTableDatosParametroFactuTransaccion.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroFactuTransaccion(this.getparametrofactutransaccion(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuTransaccion(this.parametrofactutransaccion);

				this.transaccioninvennotaventaBeanSwingJInternalFrame=new TransaccionBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.transaccioninvennotaventaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.transaccioninvennotaventaBeanSwingJInternalFrame.getTransaccionLogic().setConnexion(this.parametrofactutransaccionLogic.getConnexion());

				if(this.parametrofactutransaccion.getid_transaccion_inven_nota_venta()!=null) {
					this.transaccioninvennotaventaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.transaccioninvennotaventaBeanSwingJInternalFrame.setIdActual(this.parametrofactutransaccion.getid_transaccion_inven_nota_venta());
					this.transaccioninvennotaventaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.transaccioninvennotaventaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.transaccioninvennotaventaBeanSwingJInternalFrame.inicializarActualizarBindingTablaTransaccion();
				}

				JInternalFrameBase jinternalFrame =this.transaccioninvennotaventaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroFactuTransaccion=(TitledBorder)this.jScrollPanelDatosParametroFactuTransaccion.getBorder();
				TitledBorder titledBordertransaccioninvennotaventa=(TitledBorder)this.transaccioninvennotaventaBeanSwingJInternalFrame.jScrollPanelDatosTransaccion.getBorder();

				titledBordertransaccioninvennotaventa.setTitle(titledBorderParametroFactuTransaccion.getTitle() + " -> Transaccion");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_transaccion_inven_nota_ventaParametroFactuTransaccionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactutransaccionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuTransaccion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuTransaccion(this.getparametrofactutransaccion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuTransaccion(this.parametrofactutransaccion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactutransaccion =(ParametroFactuTransaccion) this.parametrofactutransaccionLogic.getParametroFactuTransaccions().toArray()[this.jTableDatosParametroFactuTransaccion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactutransaccion =(ParametroFactuTransaccion) this.parametrofactutransaccions.toArray()[this.jTableDatosParametroFactuTransaccion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactutransaccion==null) {
						this.parametrofactutransaccion = new ParametroFactuTransaccion();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuTransaccion(this.parametrofactutransaccion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuTransaccion(this.parametrofactutransaccion);
				}

				if(this.parametrofactutransaccion.getid_transaccion_inven_nota_venta()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_transaccion_inven_nota_venta = "+this.parametrofactutransaccion.getid_transaccion_inven_nota_venta().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuTransaccion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactutransaccionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactutransaccionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactutransaccionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_transaccion_cuenta_co_facturaParametroFactuTransaccionUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotransaccioncuentacofactura=true;

			idTienePermisotransaccioncuentacofactura=this.tienePermisosUsuarioEnPaginaWebParametroFactuTransaccion(TransaccionConstantesFunciones.CLASSNAME);

			if(idTienePermisotransaccioncuentacofactura) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuTransaccion.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroFactuTransaccion.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroFactuTransaccion.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactutransaccion =(ParametroFactuTransaccion) this.parametrofactutransaccionLogic.getParametroFactuTransaccions().toArray()[this.jTableDatosParametroFactuTransaccion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrofactutransaccion =(ParametroFactuTransaccion) this.parametrofactutransaccions.toArray()[this.jTableDatosParametroFactuTransaccion.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroFactuTransaccion(this.getparametrofactutransaccion(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuTransaccion(this.parametrofactutransaccion);

				this.transaccioncuentacofacturaBeanSwingJInternalFrame=new TransaccionBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.transaccioncuentacofacturaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.transaccioncuentacofacturaBeanSwingJInternalFrame.getTransaccionLogic().setConnexion(this.parametrofactutransaccionLogic.getConnexion());

				if(this.parametrofactutransaccion.getid_transaccion_cuenta_co_factura()!=null) {
					this.transaccioncuentacofacturaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.transaccioncuentacofacturaBeanSwingJInternalFrame.setIdActual(this.parametrofactutransaccion.getid_transaccion_cuenta_co_factura());
					this.transaccioncuentacofacturaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.transaccioncuentacofacturaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.transaccioncuentacofacturaBeanSwingJInternalFrame.inicializarActualizarBindingTablaTransaccion();
				}

				JInternalFrameBase jinternalFrame =this.transaccioncuentacofacturaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroFactuTransaccion=(TitledBorder)this.jScrollPanelDatosParametroFactuTransaccion.getBorder();
				TitledBorder titledBordertransaccioncuentacofactura=(TitledBorder)this.transaccioncuentacofacturaBeanSwingJInternalFrame.jScrollPanelDatosTransaccion.getBorder();

				titledBordertransaccioncuentacofactura.setTitle(titledBorderParametroFactuTransaccion.getTitle() + " -> Transaccion");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_transaccion_cuenta_co_facturaParametroFactuTransaccionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactutransaccionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuTransaccion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuTransaccion(this.getparametrofactutransaccion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuTransaccion(this.parametrofactutransaccion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactutransaccion =(ParametroFactuTransaccion) this.parametrofactutransaccionLogic.getParametroFactuTransaccions().toArray()[this.jTableDatosParametroFactuTransaccion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactutransaccion =(ParametroFactuTransaccion) this.parametrofactutransaccions.toArray()[this.jTableDatosParametroFactuTransaccion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactutransaccion==null) {
						this.parametrofactutransaccion = new ParametroFactuTransaccion();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuTransaccion(this.parametrofactutransaccion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuTransaccion(this.parametrofactutransaccion);
				}

				if(this.parametrofactutransaccion.getid_transaccion_cuenta_co_factura()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_transaccion_cuenta_co_factura = "+this.parametrofactutransaccion.getid_transaccion_cuenta_co_factura().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuTransaccion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactutransaccionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactutransaccionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactutransaccionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_transaccion_cuenta_co_nota_creditoParametroFactuTransaccionUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotransaccioncuentaconotacredito=true;

			idTienePermisotransaccioncuentaconotacredito=this.tienePermisosUsuarioEnPaginaWebParametroFactuTransaccion(TransaccionConstantesFunciones.CLASSNAME);

			if(idTienePermisotransaccioncuentaconotacredito) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuTransaccion.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroFactuTransaccion.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroFactuTransaccion.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactutransaccion =(ParametroFactuTransaccion) this.parametrofactutransaccionLogic.getParametroFactuTransaccions().toArray()[this.jTableDatosParametroFactuTransaccion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrofactutransaccion =(ParametroFactuTransaccion) this.parametrofactutransaccions.toArray()[this.jTableDatosParametroFactuTransaccion.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroFactuTransaccion(this.getparametrofactutransaccion(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuTransaccion(this.parametrofactutransaccion);

				this.transaccioncuentaconotacreditoBeanSwingJInternalFrame=new TransaccionBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.transaccioncuentaconotacreditoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.transaccioncuentaconotacreditoBeanSwingJInternalFrame.getTransaccionLogic().setConnexion(this.parametrofactutransaccionLogic.getConnexion());

				if(this.parametrofactutransaccion.getid_transaccion_cuenta_co_nota_credito()!=null) {
					this.transaccioncuentaconotacreditoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.transaccioncuentaconotacreditoBeanSwingJInternalFrame.setIdActual(this.parametrofactutransaccion.getid_transaccion_cuenta_co_nota_credito());
					this.transaccioncuentaconotacreditoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.transaccioncuentaconotacreditoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.transaccioncuentaconotacreditoBeanSwingJInternalFrame.inicializarActualizarBindingTablaTransaccion();
				}

				JInternalFrameBase jinternalFrame =this.transaccioncuentaconotacreditoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroFactuTransaccion=(TitledBorder)this.jScrollPanelDatosParametroFactuTransaccion.getBorder();
				TitledBorder titledBordertransaccioncuentaconotacredito=(TitledBorder)this.transaccioncuentaconotacreditoBeanSwingJInternalFrame.jScrollPanelDatosTransaccion.getBorder();

				titledBordertransaccioncuentaconotacredito.setTitle(titledBorderParametroFactuTransaccion.getTitle() + " -> Transaccion");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_transaccion_cuenta_co_nota_creditoParametroFactuTransaccionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactutransaccionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuTransaccion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuTransaccion(this.getparametrofactutransaccion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuTransaccion(this.parametrofactutransaccion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactutransaccion =(ParametroFactuTransaccion) this.parametrofactutransaccionLogic.getParametroFactuTransaccions().toArray()[this.jTableDatosParametroFactuTransaccion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactutransaccion =(ParametroFactuTransaccion) this.parametrofactutransaccions.toArray()[this.jTableDatosParametroFactuTransaccion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactutransaccion==null) {
						this.parametrofactutransaccion = new ParametroFactuTransaccion();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuTransaccion(this.parametrofactutransaccion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuTransaccion(this.parametrofactutransaccion);
				}

				if(this.parametrofactutransaccion.getid_transaccion_cuenta_co_nota_credito()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_transaccion_cuenta_co_nota_credito = "+this.parametrofactutransaccion.getid_transaccion_cuenta_co_nota_credito().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuTransaccion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactutransaccionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactutransaccionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactutransaccionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_transaccion_cuenta_co_nota_ventaParametroFactuTransaccionUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotransaccioncuentaconotaventa=true;

			idTienePermisotransaccioncuentaconotaventa=this.tienePermisosUsuarioEnPaginaWebParametroFactuTransaccion(TransaccionConstantesFunciones.CLASSNAME);

			if(idTienePermisotransaccioncuentaconotaventa) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuTransaccion.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroFactuTransaccion.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroFactuTransaccion.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactutransaccion =(ParametroFactuTransaccion) this.parametrofactutransaccionLogic.getParametroFactuTransaccions().toArray()[this.jTableDatosParametroFactuTransaccion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrofactutransaccion =(ParametroFactuTransaccion) this.parametrofactutransaccions.toArray()[this.jTableDatosParametroFactuTransaccion.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroFactuTransaccion(this.getparametrofactutransaccion(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuTransaccion(this.parametrofactutransaccion);

				this.transaccioncuentaconotaventaBeanSwingJInternalFrame=new TransaccionBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.transaccioncuentaconotaventaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.transaccioncuentaconotaventaBeanSwingJInternalFrame.getTransaccionLogic().setConnexion(this.parametrofactutransaccionLogic.getConnexion());

				if(this.parametrofactutransaccion.getid_transaccion_cuenta_co_nota_venta()!=null) {
					this.transaccioncuentaconotaventaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.transaccioncuentaconotaventaBeanSwingJInternalFrame.setIdActual(this.parametrofactutransaccion.getid_transaccion_cuenta_co_nota_venta());
					this.transaccioncuentaconotaventaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.transaccioncuentaconotaventaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.transaccioncuentaconotaventaBeanSwingJInternalFrame.inicializarActualizarBindingTablaTransaccion();
				}

				JInternalFrameBase jinternalFrame =this.transaccioncuentaconotaventaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroFactuTransaccion=(TitledBorder)this.jScrollPanelDatosParametroFactuTransaccion.getBorder();
				TitledBorder titledBordertransaccioncuentaconotaventa=(TitledBorder)this.transaccioncuentaconotaventaBeanSwingJInternalFrame.jScrollPanelDatosTransaccion.getBorder();

				titledBordertransaccioncuentaconotaventa.setTitle(titledBorderParametroFactuTransaccion.getTitle() + " -> Transaccion");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_transaccion_cuenta_co_nota_ventaParametroFactuTransaccionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactutransaccionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuTransaccion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuTransaccion(this.getparametrofactutransaccion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuTransaccion(this.parametrofactutransaccion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactutransaccion =(ParametroFactuTransaccion) this.parametrofactutransaccionLogic.getParametroFactuTransaccions().toArray()[this.jTableDatosParametroFactuTransaccion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactutransaccion =(ParametroFactuTransaccion) this.parametrofactutransaccions.toArray()[this.jTableDatosParametroFactuTransaccion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactutransaccion==null) {
						this.parametrofactutransaccion = new ParametroFactuTransaccion();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuTransaccion(this.parametrofactutransaccion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuTransaccion(this.parametrofactutransaccion);
				}

				if(this.parametrofactutransaccion.getid_transaccion_cuenta_co_nota_venta()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_transaccion_cuenta_co_nota_venta = "+this.parametrofactutransaccion.getid_transaccion_cuenta_co_nota_venta().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuTransaccion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactutransaccionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactutransaccionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactutransaccionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_transaccion_cuenta_co_tarjetaParametroFactuTransaccionUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotransaccioncuentacotarjeta=true;

			idTienePermisotransaccioncuentacotarjeta=this.tienePermisosUsuarioEnPaginaWebParametroFactuTransaccion(TransaccionConstantesFunciones.CLASSNAME);

			if(idTienePermisotransaccioncuentacotarjeta) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuTransaccion.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroFactuTransaccion.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroFactuTransaccion.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactutransaccion =(ParametroFactuTransaccion) this.parametrofactutransaccionLogic.getParametroFactuTransaccions().toArray()[this.jTableDatosParametroFactuTransaccion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrofactutransaccion =(ParametroFactuTransaccion) this.parametrofactutransaccions.toArray()[this.jTableDatosParametroFactuTransaccion.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroFactuTransaccion(this.getparametrofactutransaccion(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuTransaccion(this.parametrofactutransaccion);

				this.transaccioncuentacotarjetaBeanSwingJInternalFrame=new TransaccionBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.transaccioncuentacotarjetaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.transaccioncuentacotarjetaBeanSwingJInternalFrame.getTransaccionLogic().setConnexion(this.parametrofactutransaccionLogic.getConnexion());

				if(this.parametrofactutransaccion.getid_transaccion_cuenta_co_tarjeta()!=null) {
					this.transaccioncuentacotarjetaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.transaccioncuentacotarjetaBeanSwingJInternalFrame.setIdActual(this.parametrofactutransaccion.getid_transaccion_cuenta_co_tarjeta());
					this.transaccioncuentacotarjetaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.transaccioncuentacotarjetaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.transaccioncuentacotarjetaBeanSwingJInternalFrame.inicializarActualizarBindingTablaTransaccion();
				}

				JInternalFrameBase jinternalFrame =this.transaccioncuentacotarjetaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroFactuTransaccion=(TitledBorder)this.jScrollPanelDatosParametroFactuTransaccion.getBorder();
				TitledBorder titledBordertransaccioncuentacotarjeta=(TitledBorder)this.transaccioncuentacotarjetaBeanSwingJInternalFrame.jScrollPanelDatosTransaccion.getBorder();

				titledBordertransaccioncuentacotarjeta.setTitle(titledBorderParametroFactuTransaccion.getTitle() + " -> Transaccion");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_transaccion_cuenta_co_tarjetaParametroFactuTransaccionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactutransaccionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuTransaccion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuTransaccion(this.getparametrofactutransaccion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuTransaccion(this.parametrofactutransaccion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactutransaccion =(ParametroFactuTransaccion) this.parametrofactutransaccionLogic.getParametroFactuTransaccions().toArray()[this.jTableDatosParametroFactuTransaccion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactutransaccion =(ParametroFactuTransaccion) this.parametrofactutransaccions.toArray()[this.jTableDatosParametroFactuTransaccion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactutransaccion==null) {
						this.parametrofactutransaccion = new ParametroFactuTransaccion();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuTransaccion(this.parametrofactutransaccion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuTransaccion(this.parametrofactutransaccion);
				}

				if(this.parametrofactutransaccion.getid_transaccion_cuenta_co_tarjeta()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_transaccion_cuenta_co_tarjeta = "+this.parametrofactutransaccion.getid_transaccion_cuenta_co_tarjeta().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuTransaccion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactutransaccionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactutransaccionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactutransaccionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_transaccion_cuenta_pa_facturaParametroFactuTransaccionUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotransaccioncuentapafactura=true;

			idTienePermisotransaccioncuentapafactura=this.tienePermisosUsuarioEnPaginaWebParametroFactuTransaccion(TransaccionConstantesFunciones.CLASSNAME);

			if(idTienePermisotransaccioncuentapafactura) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuTransaccion.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroFactuTransaccion.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroFactuTransaccion.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactutransaccion =(ParametroFactuTransaccion) this.parametrofactutransaccionLogic.getParametroFactuTransaccions().toArray()[this.jTableDatosParametroFactuTransaccion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrofactutransaccion =(ParametroFactuTransaccion) this.parametrofactutransaccions.toArray()[this.jTableDatosParametroFactuTransaccion.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroFactuTransaccion(this.getparametrofactutransaccion(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuTransaccion(this.parametrofactutransaccion);

				this.transaccioncuentapafacturaBeanSwingJInternalFrame=new TransaccionBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.transaccioncuentapafacturaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.transaccioncuentapafacturaBeanSwingJInternalFrame.getTransaccionLogic().setConnexion(this.parametrofactutransaccionLogic.getConnexion());

				if(this.parametrofactutransaccion.getid_transaccion_cuenta_pa_factura()!=null) {
					this.transaccioncuentapafacturaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.transaccioncuentapafacturaBeanSwingJInternalFrame.setIdActual(this.parametrofactutransaccion.getid_transaccion_cuenta_pa_factura());
					this.transaccioncuentapafacturaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.transaccioncuentapafacturaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.transaccioncuentapafacturaBeanSwingJInternalFrame.inicializarActualizarBindingTablaTransaccion();
				}

				JInternalFrameBase jinternalFrame =this.transaccioncuentapafacturaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroFactuTransaccion=(TitledBorder)this.jScrollPanelDatosParametroFactuTransaccion.getBorder();
				TitledBorder titledBordertransaccioncuentapafactura=(TitledBorder)this.transaccioncuentapafacturaBeanSwingJInternalFrame.jScrollPanelDatosTransaccion.getBorder();

				titledBordertransaccioncuentapafactura.setTitle(titledBorderParametroFactuTransaccion.getTitle() + " -> Transaccion");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_transaccion_cuenta_pa_facturaParametroFactuTransaccionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactutransaccionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuTransaccion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuTransaccion(this.getparametrofactutransaccion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuTransaccion(this.parametrofactutransaccion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactutransaccion =(ParametroFactuTransaccion) this.parametrofactutransaccionLogic.getParametroFactuTransaccions().toArray()[this.jTableDatosParametroFactuTransaccion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactutransaccion =(ParametroFactuTransaccion) this.parametrofactutransaccions.toArray()[this.jTableDatosParametroFactuTransaccion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactutransaccion==null) {
						this.parametrofactutransaccion = new ParametroFactuTransaccion();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuTransaccion(this.parametrofactutransaccion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuTransaccion(this.parametrofactutransaccion);
				}

				if(this.parametrofactutransaccion.getid_transaccion_cuenta_pa_factura()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_transaccion_cuenta_pa_factura = "+this.parametrofactutransaccion.getid_transaccion_cuenta_pa_factura().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuTransaccion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactutransaccionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactutransaccionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactutransaccionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_transaccion_cuenta_pa_nota_creditoParametroFactuTransaccionUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotransaccioncuentapanotacredito=true;

			idTienePermisotransaccioncuentapanotacredito=this.tienePermisosUsuarioEnPaginaWebParametroFactuTransaccion(TransaccionConstantesFunciones.CLASSNAME);

			if(idTienePermisotransaccioncuentapanotacredito) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuTransaccion.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroFactuTransaccion.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroFactuTransaccion.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactutransaccion =(ParametroFactuTransaccion) this.parametrofactutransaccionLogic.getParametroFactuTransaccions().toArray()[this.jTableDatosParametroFactuTransaccion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrofactutransaccion =(ParametroFactuTransaccion) this.parametrofactutransaccions.toArray()[this.jTableDatosParametroFactuTransaccion.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroFactuTransaccion(this.getparametrofactutransaccion(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuTransaccion(this.parametrofactutransaccion);

				this.transaccioncuentapanotacreditoBeanSwingJInternalFrame=new TransaccionBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.transaccioncuentapanotacreditoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.transaccioncuentapanotacreditoBeanSwingJInternalFrame.getTransaccionLogic().setConnexion(this.parametrofactutransaccionLogic.getConnexion());

				if(this.parametrofactutransaccion.getid_transaccion_cuenta_pa_nota_credito()!=null) {
					this.transaccioncuentapanotacreditoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.transaccioncuentapanotacreditoBeanSwingJInternalFrame.setIdActual(this.parametrofactutransaccion.getid_transaccion_cuenta_pa_nota_credito());
					this.transaccioncuentapanotacreditoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.transaccioncuentapanotacreditoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.transaccioncuentapanotacreditoBeanSwingJInternalFrame.inicializarActualizarBindingTablaTransaccion();
				}

				JInternalFrameBase jinternalFrame =this.transaccioncuentapanotacreditoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroFactuTransaccion=(TitledBorder)this.jScrollPanelDatosParametroFactuTransaccion.getBorder();
				TitledBorder titledBordertransaccioncuentapanotacredito=(TitledBorder)this.transaccioncuentapanotacreditoBeanSwingJInternalFrame.jScrollPanelDatosTransaccion.getBorder();

				titledBordertransaccioncuentapanotacredito.setTitle(titledBorderParametroFactuTransaccion.getTitle() + " -> Transaccion");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_transaccion_cuenta_pa_nota_creditoParametroFactuTransaccionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactutransaccionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuTransaccion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuTransaccion(this.getparametrofactutransaccion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuTransaccion(this.parametrofactutransaccion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactutransaccion =(ParametroFactuTransaccion) this.parametrofactutransaccionLogic.getParametroFactuTransaccions().toArray()[this.jTableDatosParametroFactuTransaccion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactutransaccion =(ParametroFactuTransaccion) this.parametrofactutransaccions.toArray()[this.jTableDatosParametroFactuTransaccion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactutransaccion==null) {
						this.parametrofactutransaccion = new ParametroFactuTransaccion();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuTransaccion(this.parametrofactutransaccion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuTransaccion(this.parametrofactutransaccion);
				}

				if(this.parametrofactutransaccion.getid_transaccion_cuenta_pa_nota_credito()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_transaccion_cuenta_pa_nota_credito = "+this.parametrofactutransaccion.getid_transaccion_cuenta_pa_nota_credito().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuTransaccion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactutransaccionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactutransaccionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactutransaccionLogic.closeNewConnexionToDeep();
				}

			}
		}

	
	
	public void jButtonFK_IdEmpresaParametroFactuTransaccionActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroFactuTransaccion(false,false);

			this.getParametroFactuTransaccionsFK_IdEmpresa();

			this.inicializarActualizarBindingParametroFactuTransaccion(false);

			//if(ParametroFactuTransaccionBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroFactuTransaccion(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdSucursalParametroFactuTransaccionActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroFactuTransaccion(false,false);

			this.getParametroFactuTransaccionsFK_IdSucursal();

			this.inicializarActualizarBindingParametroFactuTransaccion(false);

			//if(ParametroFactuTransaccionBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroFactuTransaccion(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTransaccionCuentaCoFacturaParametroFactuTransaccionActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroFactuTransaccion(false,false);

			this.getParametroFactuTransaccionsFK_IdTransaccionCuentaCoFactura();

			this.inicializarActualizarBindingParametroFactuTransaccion(false);

			//if(ParametroFactuTransaccionBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroFactuTransaccion(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTransaccionCuentaCoNotaCreditoParametroFactuTransaccionActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroFactuTransaccion(false,false);

			this.getParametroFactuTransaccionsFK_IdTransaccionCuentaCoNotaCredito();

			this.inicializarActualizarBindingParametroFactuTransaccion(false);

			//if(ParametroFactuTransaccionBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroFactuTransaccion(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTransaccionCuentaCoNotaVentaParametroFactuTransaccionActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroFactuTransaccion(false,false);

			this.getParametroFactuTransaccionsFK_IdTransaccionCuentaCoNotaVenta();

			this.inicializarActualizarBindingParametroFactuTransaccion(false);

			//if(ParametroFactuTransaccionBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroFactuTransaccion(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTransaccionCuentaCoTarjetaParametroFactuTransaccionActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroFactuTransaccion(false,false);

			this.getParametroFactuTransaccionsFK_IdTransaccionCuentaCoTarjeta();

			this.inicializarActualizarBindingParametroFactuTransaccion(false);

			//if(ParametroFactuTransaccionBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroFactuTransaccion(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTransaccionCuentaPaFacturaParametroFactuTransaccionActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroFactuTransaccion(false,false);

			this.getParametroFactuTransaccionsFK_IdTransaccionCuentaPaFactura();

			this.inicializarActualizarBindingParametroFactuTransaccion(false);

			//if(ParametroFactuTransaccionBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroFactuTransaccion(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTransaccionCuentaPaNotaCreditoParametroFactuTransaccionActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroFactuTransaccion(false,false);

			this.getParametroFactuTransaccionsFK_IdTransaccionCuentaPaNotaCredito();

			this.inicializarActualizarBindingParametroFactuTransaccion(false);

			//if(ParametroFactuTransaccionBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroFactuTransaccion(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTransaccionInvenFacturaParametroFactuTransaccionActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroFactuTransaccion(false,false);

			this.getParametroFactuTransaccionsFK_IdTransaccionInvenFactura();

			this.inicializarActualizarBindingParametroFactuTransaccion(false);

			//if(ParametroFactuTransaccionBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroFactuTransaccion(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTransaccionInvenNotaCreditoParametroFactuTransaccionActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroFactuTransaccion(false,false);

			this.getParametroFactuTransaccionsFK_IdTransaccionInvenNotaCredito();

			this.inicializarActualizarBindingParametroFactuTransaccion(false);

			//if(ParametroFactuTransaccionBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroFactuTransaccion(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTransaccionInvenNotaVentaParametroFactuTransaccionActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroFactuTransaccion(false,false);

			this.getParametroFactuTransaccionsFK_IdTransaccionInvenNotaVenta();

			this.inicializarActualizarBindingParametroFactuTransaccion(false);

			//if(ParametroFactuTransaccionBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroFactuTransaccion(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactutransaccionLogic.closeNewConnexionToDeep();
			}
		}
	}

	
	public void closingInternalFrameParametroFactuTransaccion() {
		if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) {
			
		
		
		}
		
		if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) {
			this.jInternalFrameDetalleFormParametroFactuTransaccion.setVisible(false);	    			
			this.jInternalFrameDetalleFormParametroFactuTransaccion.dispose();
			this.jInternalFrameDetalleFormParametroFactuTransaccion=null;
		}
		
		
		if(this.jInternalFrameReporteDinamicoParametroFactuTransaccion!=null) {
			this.jInternalFrameReporteDinamicoParametroFactuTransaccion.setVisible(false);	    			
			this.jInternalFrameReporteDinamicoParametroFactuTransaccion.dispose();
			this.jInternalFrameReporteDinamicoParametroFactuTransaccion=null;
		}
		
		if(this.jInternalFrameImportacionParametroFactuTransaccion!=null) {
			this.jInternalFrameImportacionParametroFactuTransaccion.setVisible(false);	    			
			this.jInternalFrameImportacionParametroFactuTransaccion.dispose();
			this.jInternalFrameImportacionParametroFactuTransaccion=null;
		}		
		
		
		this.setVisible(false);
		this.dispose();
		//this=null;
	}
	
	
	
	public void jButtonActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {			
			this.startProcessParametroFactuTransaccion();
			
			ParametroFactuTransaccionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.parametrofactutransaccion,new Object(),this.parametrofactutransaccionParameterGeneral,this.parametrofactutransaccionReturnGeneral);
			
			
			if(sTipo.equals("NuevoParametroFactuTransaccion")) {
				jButtonNuevoParametroFactuTransaccionActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarParametroFactuTransaccion")) {
				jButtonDuplicarParametroFactuTransaccionActionPerformed(evt,false);
			} else if(sTipo.equals("CopiarParametroFactuTransaccion")) {
				jButtonCopiarParametroFactuTransaccionActionPerformed(evt);
			} else if(sTipo.equals("VerFormParametroFactuTransaccion")) {
				jButtonVerFormParametroFactuTransaccionActionPerformed(evt);
			} else if(sTipo.equals("NuevoToolBarParametroFactuTransaccion")) {
				jButtonNuevoParametroFactuTransaccionActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarToolBarParametroFactuTransaccion")) {
				jButtonDuplicarParametroFactuTransaccionActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemNuevoParametroFactuTransaccion")) {
				jButtonNuevoParametroFactuTransaccionActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemDuplicarParametroFactuTransaccion")) {
				jButtonDuplicarParametroFactuTransaccionActionPerformed(evt,false);
			} else if(sTipo.equals("NuevoRelacionesParametroFactuTransaccion")) {
				jButtonNuevoParametroFactuTransaccionActionPerformed(evt,true);
			} else if(sTipo.equals("NuevoRelacionesToolBarParametroFactuTransaccion")) {
				jButtonNuevoParametroFactuTransaccionActionPerformed(evt,true);
			} else if(sTipo.equals("MenuItemNuevoRelacionesParametroFactuTransaccion")) {
				jButtonNuevoParametroFactuTransaccionActionPerformed(evt,true);
			} else if(sTipo.equals("ModificarParametroFactuTransaccion")) {
				jButtonModificarParametroFactuTransaccionActionPerformed(evt);
			} else if(sTipo.equals("ModificarToolBarParametroFactuTransaccion")) {
				jButtonModificarParametroFactuTransaccionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemModificarParametroFactuTransaccion")) {
				jButtonModificarParametroFactuTransaccionActionPerformed(evt);
			} else if(sTipo.equals("ActualizarParametroFactuTransaccion")) {
				jButtonActualizarParametroFactuTransaccionActionPerformed(evt);
			} else if(sTipo.equals("ActualizarToolBarParametroFactuTransaccion")) {
				jButtonActualizarParametroFactuTransaccionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemActualizarParametroFactuTransaccion")) {
				jButtonActualizarParametroFactuTransaccionActionPerformed(evt);
			} else if(sTipo.equals("EliminarParametroFactuTransaccion")) {
				jButtonEliminarParametroFactuTransaccionActionPerformed(evt);
			} else if(sTipo.equals("EliminarToolBarParametroFactuTransaccion")) {
				jButtonEliminarParametroFactuTransaccionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemEliminarParametroFactuTransaccion")) {
				jButtonEliminarParametroFactuTransaccionActionPerformed(evt);
			} else if(sTipo.equals("CancelarParametroFactuTransaccion")) {
				jButtonCancelarParametroFactuTransaccionActionPerformed(evt);
			} else if(sTipo.equals("CancelarToolBarParametroFactuTransaccion")) {
				jButtonCancelarParametroFactuTransaccionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCancelarParametroFactuTransaccion")) {
				jButtonCancelarParametroFactuTransaccionActionPerformed(evt);
			} else if(sTipo.equals("CerrarParametroFactuTransaccion")) {
				jButtonCerrarParametroFactuTransaccionActionPerformed(evt);
			} else if(sTipo.equals("CerrarToolBarParametroFactuTransaccion")) {
				jButtonCerrarParametroFactuTransaccionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCerrarParametroFactuTransaccion")) {
				jButtonCerrarParametroFactuTransaccionActionPerformed(evt);
			} else if(sTipo.equals("MostrarOcultarToolBarParametroFactuTransaccion")) {
				jButtonMostrarOcultarParametroFactuTransaccionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemDetalleCerrarParametroFactuTransaccion")) {
				jButtonCancelarParametroFactuTransaccionActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosParametroFactuTransaccion")) {
				jButtonGuardarCambiosParametroFactuTransaccionActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosToolBarParametroFactuTransaccion")) {
				jButtonGuardarCambiosParametroFactuTransaccionActionPerformed(evt);
			} else if(sTipo.equals("CopiarToolBarParametroFactuTransaccion")) {
				jButtonCopiarParametroFactuTransaccionActionPerformed(evt);
			} else if(sTipo.equals("VerFormToolBarParametroFactuTransaccion")) {
				jButtonVerFormParametroFactuTransaccionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosParametroFactuTransaccion")) {
				jButtonGuardarCambiosParametroFactuTransaccionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCopiarParametroFactuTransaccion")) {
				jButtonCopiarParametroFactuTransaccionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemVerFormParametroFactuTransaccion")) {
				jButtonVerFormParametroFactuTransaccionActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaParametroFactuTransaccion")) {
				jButtonGuardarCambiosParametroFactuTransaccionActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaToolBarParametroFactuTransaccion")) {
				jButtonGuardarCambiosParametroFactuTransaccionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosTablaParametroFactuTransaccion")) {
				jButtonGuardarCambiosParametroFactuTransaccionActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionParametroFactuTransaccion")) {
				jButtonRecargarInformacionParametroFactuTransaccionActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionToolBarParametroFactuTransaccion")) {
				jButtonRecargarInformacionParametroFactuTransaccionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemRecargarInformacionParametroFactuTransaccion")) {
				jButtonRecargarInformacionParametroFactuTransaccionActionPerformed(evt);
			}
			else if(sTipo.equals("AnterioresParametroFactuTransaccion")) {
				jButtonAnterioresParametroFactuTransaccionActionPerformed(evt);
			} else if(sTipo.equals("AnterioresToolBarParametroFactuTransaccion")) {
				jButtonAnterioresParametroFactuTransaccionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAnterioreParametroFactuTransaccion")) {
				jButtonAnterioresParametroFactuTransaccionActionPerformed(evt);
			} else if(sTipo.equals("SiguientesParametroFactuTransaccion")) {
				jButtonSiguientesParametroFactuTransaccionActionPerformed(evt);
			} else if(sTipo.equals("SiguientesToolBarParametroFactuTransaccion")) {
				jButtonSiguientesParametroFactuTransaccionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemSiguientesParametroFactuTransaccion")) {
				jButtonSiguientesParametroFactuTransaccionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAbrirOrderByParametroFactuTransaccion") || sTipo.equals("MenuItemDetalleAbrirOrderByParametroFactuTransaccion")) {
				jButtonAbrirOrderByParametroFactuTransaccionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemMostrarOcultarParametroFactuTransaccion") || sTipo.equals("MenuItemDetalleMostrarOcultarParametroFactuTransaccion")) {
				jButtonMostrarOcultarParametroFactuTransaccionActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosParametroFactuTransaccion")) {
				jButtonNuevoGuardarCambiosParametroFactuTransaccionActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosToolBarParametroFactuTransaccion")) {
				jButtonNuevoGuardarCambiosParametroFactuTransaccionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemNuevoGuardarCambiosParametroFactuTransaccion")) {
				jButtonNuevoGuardarCambiosParametroFactuTransaccionActionPerformed(evt);
			} 
			else if(sTipo.equals("CerrarReporteDinamicoParametroFactuTransaccion")) {
				jButtonCerrarReporteDinamicoParametroFactuTransaccionActionPerformed(evt);
			} else if(sTipo.equals("GenerarReporteDinamicoParametroFactuTransaccion")) {
				jButtonGenerarReporteDinamicoParametroFactuTransaccionActionPerformed(evt);
			} else if(sTipo.equals("GenerarExcelReporteDinamicoParametroFactuTransaccion")) {
				
				jButtonGenerarExcelReporteDinamicoParametroFactuTransaccionActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarImportacionParametroFactuTransaccion")) {
				jButtonCerrarImportacionParametroFactuTransaccionActionPerformed(evt);
			} else if(sTipo.equals("GenerarImportacionParametroFactuTransaccion")) {
				
				jButtonGenerarImportacionParametroFactuTransaccionActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirImportacionParametroFactuTransaccion")) {
				
				jButtonAbrirImportacionParametroFactuTransaccionActionPerformed(evt);
				
			} else if(sTipo.equals("TiposAccionesParametroFactuTransaccion")) {
				jComboBoxTiposAccionesParametroFactuTransaccionActionListener(evt,false);
			} else if(sTipo.equals("TiposRelacionesParametroFactuTransaccion")) {
				jComboBoxTiposRelacionesParametroFactuTransaccionActionListener(evt);
			} else if(sTipo.equals("TiposAccionesFormularioParametroFactuTransaccion")) {
				jComboBoxTiposAccionesParametroFactuTransaccionActionListener(evt,true);
			} else if(sTipo.equals("TiposSeleccionarParametroFactuTransaccion")) {
				
				jComboBoxTiposSeleccionarParametroFactuTransaccionActionListener(evt);
				
			} else if(sTipo.equals("ValorCampoGeneralParametroFactuTransaccion")) {
				jTextFieldValorCampoGeneralParametroFactuTransaccionActionListener(evt);
			}
			
			
			else if(sTipo.equals("AbrirOrderByParametroFactuTransaccion")) {
				jButtonAbrirOrderByParametroFactuTransaccionActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirOrderByToolBarParametroFactuTransaccion")) {
				jButtonAbrirOrderByParametroFactuTransaccionActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarOrderByParametroFactuTransaccion")) {
				jButtonCerrarOrderByParametroFactuTransaccionActionPerformed(evt);
			} 
						
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idParametroFactuTransaccionBusqueda")) {
				this.jButtonidParametroFactuTransaccionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaParametroFactuTransaccionUpdate")) {
				this.jButtonid_empresaParametroFactuTransaccionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaParametroFactuTransaccionBusqueda")) {
				this.jButtonid_empresaParametroFactuTransaccionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalParametroFactuTransaccionUpdate")) {
				this.jButtonid_sucursalParametroFactuTransaccionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalParametroFactuTransaccionBusqueda")) {
				this.jButtonid_sucursalParametroFactuTransaccionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transaccion_inven_facturaParametroFactuTransaccionUpdate")) {
				this.jButtonid_transaccion_inven_facturaParametroFactuTransaccionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transaccion_inven_facturaParametroFactuTransaccionBusqueda")) {
				this.jButtonid_transaccion_inven_facturaParametroFactuTransaccionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transaccion_inven_nota_creditoParametroFactuTransaccionUpdate")) {
				this.jButtonid_transaccion_inven_nota_creditoParametroFactuTransaccionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transaccion_inven_nota_creditoParametroFactuTransaccionBusqueda")) {
				this.jButtonid_transaccion_inven_nota_creditoParametroFactuTransaccionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transaccion_inven_nota_ventaParametroFactuTransaccionUpdate")) {
				this.jButtonid_transaccion_inven_nota_ventaParametroFactuTransaccionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transaccion_inven_nota_ventaParametroFactuTransaccionBusqueda")) {
				this.jButtonid_transaccion_inven_nota_ventaParametroFactuTransaccionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transaccion_cuenta_co_facturaParametroFactuTransaccionUpdate")) {
				this.jButtonid_transaccion_cuenta_co_facturaParametroFactuTransaccionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transaccion_cuenta_co_facturaParametroFactuTransaccionBusqueda")) {
				this.jButtonid_transaccion_cuenta_co_facturaParametroFactuTransaccionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transaccion_cuenta_co_nota_creditoParametroFactuTransaccionUpdate")) {
				this.jButtonid_transaccion_cuenta_co_nota_creditoParametroFactuTransaccionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transaccion_cuenta_co_nota_creditoParametroFactuTransaccionBusqueda")) {
				this.jButtonid_transaccion_cuenta_co_nota_creditoParametroFactuTransaccionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transaccion_cuenta_co_nota_ventaParametroFactuTransaccionUpdate")) {
				this.jButtonid_transaccion_cuenta_co_nota_ventaParametroFactuTransaccionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transaccion_cuenta_co_nota_ventaParametroFactuTransaccionBusqueda")) {
				this.jButtonid_transaccion_cuenta_co_nota_ventaParametroFactuTransaccionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transaccion_cuenta_co_tarjetaParametroFactuTransaccionUpdate")) {
				this.jButtonid_transaccion_cuenta_co_tarjetaParametroFactuTransaccionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transaccion_cuenta_co_tarjetaParametroFactuTransaccionBusqueda")) {
				this.jButtonid_transaccion_cuenta_co_tarjetaParametroFactuTransaccionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transaccion_cuenta_pa_facturaParametroFactuTransaccionUpdate")) {
				this.jButtonid_transaccion_cuenta_pa_facturaParametroFactuTransaccionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transaccion_cuenta_pa_facturaParametroFactuTransaccionBusqueda")) {
				this.jButtonid_transaccion_cuenta_pa_facturaParametroFactuTransaccionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transaccion_cuenta_pa_nota_creditoParametroFactuTransaccionUpdate")) {
				this.jButtonid_transaccion_cuenta_pa_nota_creditoParametroFactuTransaccionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transaccion_cuenta_pa_nota_creditoParametroFactuTransaccionBusqueda")) {
				this.jButtonid_transaccion_cuenta_pa_nota_creditoParametroFactuTransaccionBusquedaActionPerformed(evt);
			}
			
			
			
			
			else if(sTipo.equals("FK_IdTransaccionCuentaCoFacturaParametroFactuTransaccion")) {
				this.jButtonFK_IdTransaccionCuentaCoFacturaParametroFactuTransaccionActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTransaccionCuentaCoNotaCreditoParametroFactuTransaccion")) {
				this.jButtonFK_IdTransaccionCuentaCoNotaCreditoParametroFactuTransaccionActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTransaccionCuentaCoNotaVentaParametroFactuTransaccion")) {
				this.jButtonFK_IdTransaccionCuentaCoNotaVentaParametroFactuTransaccionActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTransaccionCuentaCoTarjetaParametroFactuTransaccion")) {
				this.jButtonFK_IdTransaccionCuentaCoTarjetaParametroFactuTransaccionActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTransaccionCuentaPaFacturaParametroFactuTransaccion")) {
				this.jButtonFK_IdTransaccionCuentaPaFacturaParametroFactuTransaccionActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTransaccionCuentaPaNotaCreditoParametroFactuTransaccion")) {
				this.jButtonFK_IdTransaccionCuentaPaNotaCreditoParametroFactuTransaccionActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTransaccionInvenFacturaParametroFactuTransaccion")) {
				this.jButtonFK_IdTransaccionInvenFacturaParametroFactuTransaccionActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTransaccionInvenNotaCreditoParametroFactuTransaccion")) {
				this.jButtonFK_IdTransaccionInvenNotaCreditoParametroFactuTransaccionActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTransaccionInvenNotaVentaParametroFactuTransaccion")) {
				this.jButtonFK_IdTransaccionInvenNotaVentaParametroFactuTransaccionActionPerformed(evt);
			}
			
			;
			
			
			ParametroFactuTransaccionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.parametrofactutransaccion,new Object(),this.parametrofactutransaccionParameterGeneral,this.parametrofactutransaccionReturnGeneral);
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
			
  		} finally {
      		this.finishProcessParametroFactuTransaccion();
      	}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaParametroFactuTransaccionActual();
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				JTextField jTextField=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				if(containerParent!=null && containerParent.getClass().equals(JTableMe.class)) {
					esControlTabla=true;
				}
						
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrofactutransaccion);
				
				this.actualizarInformacion("INFO_PADRE",false,this.parametrofactutransaccion);
				
				ParametroFactuTransaccionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrofactutransaccion,new Object(),this.parametrofactutransaccionParameterGeneral,this.parametrofactutransaccionReturnGeneral);
				
				


				
				ParametroFactuTransaccionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrofactutransaccion,new Object(),this.parametrofactutransaccionParameterGeneral,this.parametrofactutransaccionReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ParametroFactuTransaccion.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ParametroFactuTransaccion.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
				}
				
			} catch(Exception e) {
  				FuncionesSwing.manageException2(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
  			}
    }
	
	public Boolean existeCambioValor(ControlTipo controlTipo,String sTipo) throws Exception {
		Boolean existeCambio=true;
		
		try {
			ParametroFactuTransaccion parametrofactutransaccionLocal=null;
			
			if(!this.getEsControlTabla()) {
				parametrofactutransaccionLocal=this.parametrofactutransaccion;
			} else {
				parametrofactutransaccionLocal=this.parametrofactutransaccionAnterior;
			}
			
			if(controlTipo.equals(ControlTipo.TEXTBOX)) {
				


			}
		
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
  		}
		
		return existeCambio;
	}
	
	public void jTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrofactutransaccion);
				
				this.actualizarInformacion("INFO_PADRE",false,this.parametrofactutransaccion);
				
				ParametroFactuTransaccionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrofactutransaccion,new Object(),this.parametrofactutransaccionParameterGeneral,this.parametrofactutransaccionReturnGeneral);
							
				
				


				
				ParametroFactuTransaccionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrofactutransaccion,new Object(),this.parametrofactutransaccionParameterGeneral,this.parametrofactutransaccionReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ParametroFactuTransaccion.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ParametroFactuTransaccion.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaParametroFactuTransaccionActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosParametroFactuTransaccion.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactutransaccionAnterior =(ParametroFactuTransaccion) this.parametrofactutransaccionLogic.getParametroFactuTransaccions().toArray()[this.jTableDatosParametroFactuTransaccion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.parametrofactutransaccionAnterior =(ParametroFactuTransaccion) this.parametrofactutransaccions.toArray()[this.jTableDatosParametroFactuTransaccion.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
  		}
    }	
	
	//CUANDO SE CAMBIA ALGUN FORMATO(TIPO DE LETRA,NEGRILLA,ETC)
	public void jTextFieldChangedUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextField jTextField=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			ParametroFactuTransaccionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrofactutransaccion,new Object(),this.parametrofactutransaccionParameterGeneral,this.parametrofactutransaccionReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextField=(JTextField)evt.getSource();
			
			containerParent=jTextField.getParent();
					
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {					
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			ParametroFactuTransaccionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrofactutransaccion,new Object(),this.parametrofactutransaccionParameterGeneral,this.parametrofactutransaccionReturnGeneral);
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE QUITA ALGUN CARACTER
	public void jTextFieldRemoveUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE INGRESA ALGUN CARACTER
	public void jTextFieldInsertUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
  		}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jFormattedTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaParametroFactuTransaccionActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				Container containerParentAux=null;
				JFormattedTextField JFormattedTextField=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JFormattedTextField=(JFormattedTextField)evt.getSource();
				
				containerParentAux=JFormattedTextField.getParent();
				
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrofactutransaccion);
				
				this.actualizarInformacion("INFO_PADRE",false,this.parametrofactutransaccion);
				
				ParametroFactuTransaccionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrofactutransaccion,new Object(),this.parametrofactutransaccionParameterGeneral,this.parametrofactutransaccionReturnGeneral);
								
						
				


				
				ParametroFactuTransaccionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrofactutransaccion,new Object(),this.parametrofactutransaccionParameterGeneral,this.parametrofactutransaccionReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ParametroFactuTransaccion.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ParametroFactuTransaccion.class.getName(),sTipo,"DATE",esControlTabla,conIrServidorAplicacionParent,
							id,JFormattedTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Container containerParentAux=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParentAux=jTextField.getParent();
						
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrofactutransaccion);
				
				this.actualizarInformacion("INFO_PADRE",false,this.parametrofactutransaccion);
				
				ParametroFactuTransaccionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrofactutransaccion,new Object(),this.parametrofactutransaccionParameterGeneral,this.parametrofactutransaccionReturnGeneral);
								
				
				


				
				ParametroFactuTransaccionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrofactutransaccion,new Object(),this.parametrofactutransaccionParameterGeneral,this.parametrofactutransaccionReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ParametroFactuTransaccion.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ParametroFactuTransaccion.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaParametroFactuTransaccionActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosParametroFactuTransaccion.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactutransaccionAnterior =(ParametroFactuTransaccion) this.parametrofactutransaccionLogic.getParametroFactuTransaccions().toArray()[this.jTableDatosParametroFactuTransaccion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.parametrofactutransaccionAnterior =(ParametroFactuTransaccion) this.parametrofactutransaccions.toArray()[this.jTableDatosParametroFactuTransaccion.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.DATE,sTipo)) {
				this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrofactutransaccion);
				
				this.actualizarInformacion("INFO_PADRE",false,this.parametrofactutransaccion);
			}	
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaParametroFactuTransaccionActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosParametroFactuTransaccion.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactutransaccionAnterior =(ParametroFactuTransaccion) this.parametrofactutransaccionLogic.getParametroFactuTransaccions().toArray()[this.jTableDatosParametroFactuTransaccion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.parametrofactutransaccionAnterior =(ParametroFactuTransaccion) this.parametrofactutransaccions.toArray()[this.jTableDatosParametroFactuTransaccion.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaParametroFactuTransaccionActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrofactutransaccion);
			
			this.actualizarInformacion("INFO_PADRE",false,this.parametrofactutransaccion);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jTextAreaFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTAREA,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextArea jTextArea=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextArea=(JTextArea)evt.getSource();
				
				containerParent=jTextArea.getParent();
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrofactutransaccion);
				
				this.actualizarInformacion("INFO_PADRE",false,this.parametrofactutransaccion);
				
				ParametroFactuTransaccionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrofactutransaccion,new Object(),this.parametrofactutransaccionParameterGeneral,this.parametrofactutransaccionReturnGeneral);
							
				
				


				
				ParametroFactuTransaccionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrofactutransaccion,new Object(),this.parametrofactutransaccionParameterGeneral,this.parametrofactutransaccionReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ParametroFactuTransaccion.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ParametroFactuTransaccion.class.getName(),sTipo,"TEXTAREA",esControlTabla,conIrServidorAplicacionParent,
							id,jTextArea, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaParametroFactuTransaccionActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosParametroFactuTransaccion.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactutransaccionAnterior =(ParametroFactuTransaccion) this.parametrofactutransaccionLogic.getParametroFactuTransaccions().toArray()[this.jTableDatosParametroFactuTransaccion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.parametrofactutransaccionAnterior =(ParametroFactuTransaccion) this.parametrofactutransaccions.toArray()[this.jTableDatosParametroFactuTransaccion.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaChangedUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextArea jTextArea=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			ParametroFactuTransaccionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrofactutransaccion,new Object(),this.parametrofactutransaccionParameterGeneral,this.parametrofactutransaccionReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextArea=(JTextArea)evt.getSource();
			
			containerParent=jTextArea.getParent();
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			ParametroFactuTransaccionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrofactutransaccion,new Object(),this.parametrofactutransaccionParameterGeneral,this.parametrofactutransaccionReturnGeneral);
			
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaRemoveUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaInsertUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jTextAreaActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaParametroFactuTransaccionActual();
			
			this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrofactutransaccion);
			
			this.actualizarInformacion("INFO_PADRE",false,this.parametrofactutransaccion);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JLabel jLabel=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jLabel=(JLabel)evt.getSource();
				
				containerParent=jLabel.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrofactutransaccion);
				
				this.actualizarInformacion("INFO_PADRE",false,this.parametrofactutransaccion);
				
				ParametroFactuTransaccionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrofactutransaccion,new Object(),this.parametrofactutransaccionParameterGeneral,this.parametrofactutransaccionReturnGeneral);
								
				
				


				
				ParametroFactuTransaccionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrofactutransaccion,new Object(),this.parametrofactutransaccionParameterGeneral,this.parametrofactutransaccionReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ParametroFactuTransaccion.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ParametroFactuTransaccion.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jLabel, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaParametroFactuTransaccionActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosParametroFactuTransaccion.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactutransaccionAnterior =(ParametroFactuTransaccion) this.parametrofactutransaccionLogic.getParametroFactuTransaccions().toArray()[this.jTableDatosParametroFactuTransaccion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.parametrofactutransaccionAnterior =(ParametroFactuTransaccion) this.parametrofactutransaccions.toArray()[this.jTableDatosParametroFactuTransaccion.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jLabelActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaParametroFactuTransaccionActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrofactutransaccion);
			
			this.actualizarInformacion("INFO_PADRE",false,this.parametrofactutransaccion);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxItemListenerGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaParametroFactuTransaccionActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
							
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrofactutransaccion);
				
				this.actualizarInformacion("INFO_PADRE",false,this.parametrofactutransaccion);
				
				ParametroFactuTransaccionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.parametrofactutransaccion,new Object(),this.parametrofactutransaccionParameterGeneral,this.parametrofactutransaccionReturnGeneral);
												
				
				if(sTipo.equals("SeleccionarTodosParametroFactuTransaccion")) {
					jCheckBoxSeleccionarTodosParametroFactuTransaccionItemListener(evt);
				
				} else if(sTipo.equals("SeleccionadosParametroFactuTransaccion")) {
					jCheckBoxSeleccionadosParametroFactuTransaccionItemListener(evt);
				
				} else if(sTipo.equals("NuevoToolBarParametroFactuTransaccion")) {
					
				}
				
				


				
				
				ParametroFactuTransaccionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.parametrofactutransaccion,new Object(),this.parametrofactutransaccionParameterGeneral,this.parametrofactutransaccionReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ParametroFactuTransaccion.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ParametroFactuTransaccion.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.CHECKBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				//this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrofactutransaccion);
				
				//this.actualizarInformacion("INFO_PADRE",false,this.parametrofactutransaccion);
				
				ParametroFactuTransaccionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.parametrofactutransaccion,new Object(),this.parametrofactutransaccionParameterGeneral,this.parametrofactutransaccionReturnGeneral);
												
				
				


				
				
				ParametroFactuTransaccionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.parametrofactutransaccion,new Object(),this.parametrofactutransaccionParameterGeneral,this.parametrofactutransaccionReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ParametroFactuTransaccion.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ParametroFactuTransaccion.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaParametroFactuTransaccionActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosParametroFactuTransaccion.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactutransaccionAnterior =(ParametroFactuTransaccion) this.parametrofactutransaccionLogic.getParametroFactuTransaccions().toArray()[this.jTableDatosParametroFactuTransaccion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.parametrofactutransaccionAnterior =(ParametroFactuTransaccion) this.parametrofactutransaccions.toArray()[this.jTableDatosParametroFactuTransaccion.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaParametroFactuTransaccionActual();
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrofactutransaccion);
				
				this.actualizarInformacion("INFO_PADRE",false,this.parametrofactutransaccion);
				
				ParametroFactuTransaccionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.parametrofactutransaccion,new Object(),this.parametrofactutransaccionParameterGeneral,this.parametrofactutransaccionReturnGeneral);
				
				
				ParametroFactuTransaccionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.parametrofactutransaccion,new Object(),this.parametrofactutransaccionParameterGeneral,this.parametrofactutransaccionReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO SE UTILIZA, SE USA EL DE ABAJO, IGUAL SE DEJA EL CODIGO COMO RESPALDO Y ES CASI IGUAL
	//ERROR:SI SE USA,AL HACER CLIC EN EL MISMO ELEMENTO O EJECUTAR SELECTEDITEM, SIEMPRE SE EJECUTA COMO SI ESCOGIERA OTRO ELEMENTO(NO DEBERIA)
	//@SuppressWarnings("rawtypes")
	public void jComboBoxActionPerformedGeneral(String sTipo,ActionEvent evt) {		
		try {
			/*		
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			Container containerParent=null;
			Component componentOpposite=null;
			Boolean esControlTabla=false;
				
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			ParametroFactuTransaccionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.parametrofactutransaccion,new Object(),this.parametrofactutransaccionParameterGeneral,this.parametrofactutransaccionReturnGeneral);
			JComboBox jComboBoxGenerico=null;						
			
			if(evt.getSource().getClass().equals(JComboBox.class)
				|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
					
				jComboBoxGenerico=(JComboBox)evt.getSource();
				
				containerParent=jComboBoxGenerico.getParent();
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
			}
			
			String sFinalQueryCombo="";
			
			


			
			ParametroFactuTransaccionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrofactutransaccion,new Object(),this.parametrofactutransaccionParameterGeneral,this.parametrofactutransaccionReturnGeneral);
			*/						
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
  		}		
    }
	
	@SuppressWarnings("rawtypes")
	public void jComboBoxItemStateChangedGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if (evt.getStateChange() == ItemEvent.SELECTED && this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaParametroFactuTransaccionActual();
			
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=null;//evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}		
					
					this.esControlTabla=esControlTabla;
				}
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrofactutransaccion);
				
				this.actualizarInformacion("INFO_PADRE",false,this.parametrofactutransaccion);
				
				ParametroFactuTransaccionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.parametrofactutransaccion,new Object(),this.parametrofactutransaccionParameterGeneral,this.parametrofactutransaccionReturnGeneral);
				
				
				String sFinalQueryCombo="";
				
				


				
				ParametroFactuTransaccionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrofactutransaccion,new Object(),this.parametrofactutransaccionParameterGeneral,this.parametrofactutransaccionReturnGeneral);
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ParametroFactuTransaccion.class.getName());
								
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ParametroFactuTransaccion.class.getName(),sTipo,"COMBOBOX",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
  		}
    }
	
	//@SuppressWarnings("rawtypes")
	public void jComboBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		//MANEJADO EN ITEMLISTENER
		/*
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				
				//if(this.esUsoDesdeHijo) {
				//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				//}
				
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
				this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrofactutransaccion);
				
				this.actualizarInformacion("INFO_PADRE",false,this.parametrofactutransaccion);
				
				ParametroFactuTransaccionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.parametrofactutransaccion,new Object(),this.parametrofactutransaccionParameterGeneral,this.parametrofactutransaccionReturnGeneral);
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}
					
					this.esControlTabla=esControlTabla;
				}
				
				String sFinalQueryCombo="";
				
				


				
				ParametroFactuTransaccionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrofactutransaccion,new Object(),this.parametrofactutransaccionParameterGeneral,this.parametrofactutransaccionReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ParametroFactuTransaccion.class.getName());
				
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ParametroFactuTransaccion.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
  		}
		
		*/
    }
	
	public void jComboBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaParametroFactuTransaccionActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosParametroFactuTransaccion.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactutransaccionAnterior =(ParametroFactuTransaccion) this.parametrofactutransaccionLogic.getParametroFactuTransaccions().toArray()[this.jTableDatosParametroFactuTransaccion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.parametrofactutransaccionAnterior =(ParametroFactuTransaccion) this.parametrofactutransaccions.toArray()[this.jTableDatosParametroFactuTransaccion.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
  		}
    }		
	
	public void tableValueChangedGeneral(String sTipo,ListSelectionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				ParametroFactuTransaccionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrofactutransaccion,new Object(),this.parametrofactutransaccionParameterGeneral,this.parametrofactutransaccionReturnGeneral);
				
				if(sTipo.equals("TableDatosSeleccionarParametroFactuTransaccion")) {
					//BYDAN_DESHABILITADO
					//try {jTableDatosParametroFactuTransaccionListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
					
					//SOLO CUANDO MOUSE ES SOLTADO
					if (!evt.getValueIsAdjusting()) {
						//SELECCIONA FILA A OBJETO ACTUAL
						Integer intSelectedRow = this.jTableDatosParametroFactuTransaccion.getSelectedRow();
						
						if(intSelectedRow!=null && intSelectedRow>-1) {
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								this.parametrofactutransaccion =(ParametroFactuTransaccion) this.parametrofactutransaccionLogic.getParametroFactuTransaccions().toArray()[this.jTableDatosParametroFactuTransaccion.convertRowIndexToModel(intSelectedRow)];
							} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
								this.parametrofactutransaccion =(ParametroFactuTransaccion) this.parametrofactutransaccions.toArray()[this.jTableDatosParametroFactuTransaccion.convertRowIndexToModel(intSelectedRow)];
							}
							//ARCHITECTURE
							
							//System.out.println(this.parametrofactutransaccion);
						}
					}
					
				} else if(sTipo.equals("jButtonCancelarParametroFactuTransaccion")) {
				
				}
				
				ParametroFactuTransaccionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrofactutransaccion,new Object(),this.parametrofactutransaccionParameterGeneral,this.parametrofactutransaccionReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void tableMouseAdapterGeneral(String sTipo,MouseEvent evt) { 	  
		try {
			ParametroFactuTransaccionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.parametrofactutransaccion,new Object(),this.parametrofactutransaccionParameterGeneral,this.parametrofactutransaccionReturnGeneral);
			
			if(sTipo.equals("DatosSeleccionarParametroFactuTransaccion")) {
				if (evt.getClickCount() == 2) {
					jButtonIdActionPerformed(null,jTableDatosParametroFactuTransaccion.getSelectedRow(),false,false);
				}	
			} else if(sTipo.equals("jButtonCancelarParametroFactuTransaccion")) {
			
			}
			
			ParametroFactuTransaccionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.parametrofactutransaccion,new Object(),this.parametrofactutransaccionParameterGeneral,this.parametrofactutransaccionReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
  		}
    }
	
	;
	
	public void jButtonActionPerformedTecladoGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			this.startProcessParametroFactuTransaccion();
			
			ParametroFactuTransaccionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.parametrofactutransaccion,new Object(),this.parametrofactutransaccionParameterGeneral,this.parametrofactutransaccionReturnGeneral);
			
			if(sTipo.equals("NuevoParametroFactuTransaccion")) {
				jButtonNuevoParametroFactuTransaccionActionPerformed(evt,false);
				
			} else if(sTipo.equals("DuplicarParametroFactuTransaccion")) {
				jButtonDuplicarParametroFactuTransaccionActionPerformed(evt,false);
				
			} else if(sTipo.equals("CopiarParametroFactuTransaccion")) {
				jButtonCopiarParametroFactuTransaccionActionPerformed(evt);
				
			} else if(sTipo.equals("VerFormParametroFactuTransaccion")) {
				jButtonVerFormParametroFactuTransaccionActionPerformed(evt);
				
			} else if(sTipo.equals("NuevoRelacionesParametroFactuTransaccion")) {
				jButtonNuevoParametroFactuTransaccionActionPerformed(evt,true);
				
			} else if(sTipo.equals("ModificarParametroFactuTransaccion")) {
				jButtonModificarParametroFactuTransaccionActionPerformed(evt);
				
			} else if(sTipo.equals("ActualizarParametroFactuTransaccion")) {
				jButtonActualizarParametroFactuTransaccionActionPerformed(evt);
				
			} else if(sTipo.equals("EliminarParametroFactuTransaccion")) {
				jButtonEliminarParametroFactuTransaccionActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosTablaParametroFactuTransaccion")) {
				jButtonGuardarCambiosParametroFactuTransaccionActionPerformed(evt);
				
			} else if(sTipo.equals("CancelarParametroFactuTransaccion")) {
				jButtonCancelarParametroFactuTransaccionActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarParametroFactuTransaccion")) {
				jButtonCerrarParametroFactuTransaccionActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosParametroFactuTransaccion")) {
				jButtonGuardarCambiosParametroFactuTransaccionActionPerformed(evt);
			
			} else if(sTipo.equals("NuevoGuardarCambiosParametroFactuTransaccion")) {
				jButtonNuevoGuardarCambiosParametroFactuTransaccionActionPerformed(evt);
			
			} else if(sTipo.equals("AbrirOrderByParametroFactuTransaccion")) {
				jButtonAbrirOrderByParametroFactuTransaccionActionPerformed(evt);
			
			} else if(sTipo.equals("RecargarInformacionParametroFactuTransaccion")) {
				jButtonRecargarInformacionParametroFactuTransaccionActionPerformed(evt);
			
			} else if(sTipo.equals("AnterioresParametroFactuTransaccion")) {
				jButtonAnterioresParametroFactuTransaccionActionPerformed(evt);			
			
			}  else if(sTipo.equals("SiguientesParametroFactuTransaccion")) {
				jButtonSiguientesParametroFactuTransaccionActionPerformed(evt);			
			} 
			
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idParametroFactuTransaccionBusqueda")) {
				this.jButtonidParametroFactuTransaccionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaParametroFactuTransaccionUpdate")) {
				this.jButtonid_empresaParametroFactuTransaccionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaParametroFactuTransaccionBusqueda")) {
				this.jButtonid_empresaParametroFactuTransaccionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalParametroFactuTransaccionUpdate")) {
				this.jButtonid_sucursalParametroFactuTransaccionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalParametroFactuTransaccionBusqueda")) {
				this.jButtonid_sucursalParametroFactuTransaccionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transaccion_inven_facturaParametroFactuTransaccionUpdate")) {
				this.jButtonid_transaccion_inven_facturaParametroFactuTransaccionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transaccion_inven_facturaParametroFactuTransaccionBusqueda")) {
				this.jButtonid_transaccion_inven_facturaParametroFactuTransaccionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transaccion_inven_nota_creditoParametroFactuTransaccionUpdate")) {
				this.jButtonid_transaccion_inven_nota_creditoParametroFactuTransaccionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transaccion_inven_nota_creditoParametroFactuTransaccionBusqueda")) {
				this.jButtonid_transaccion_inven_nota_creditoParametroFactuTransaccionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transaccion_inven_nota_ventaParametroFactuTransaccionUpdate")) {
				this.jButtonid_transaccion_inven_nota_ventaParametroFactuTransaccionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transaccion_inven_nota_ventaParametroFactuTransaccionBusqueda")) {
				this.jButtonid_transaccion_inven_nota_ventaParametroFactuTransaccionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transaccion_cuenta_co_facturaParametroFactuTransaccionUpdate")) {
				this.jButtonid_transaccion_cuenta_co_facturaParametroFactuTransaccionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transaccion_cuenta_co_facturaParametroFactuTransaccionBusqueda")) {
				this.jButtonid_transaccion_cuenta_co_facturaParametroFactuTransaccionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transaccion_cuenta_co_nota_creditoParametroFactuTransaccionUpdate")) {
				this.jButtonid_transaccion_cuenta_co_nota_creditoParametroFactuTransaccionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transaccion_cuenta_co_nota_creditoParametroFactuTransaccionBusqueda")) {
				this.jButtonid_transaccion_cuenta_co_nota_creditoParametroFactuTransaccionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transaccion_cuenta_co_nota_ventaParametroFactuTransaccionUpdate")) {
				this.jButtonid_transaccion_cuenta_co_nota_ventaParametroFactuTransaccionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transaccion_cuenta_co_nota_ventaParametroFactuTransaccionBusqueda")) {
				this.jButtonid_transaccion_cuenta_co_nota_ventaParametroFactuTransaccionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transaccion_cuenta_co_tarjetaParametroFactuTransaccionUpdate")) {
				this.jButtonid_transaccion_cuenta_co_tarjetaParametroFactuTransaccionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transaccion_cuenta_co_tarjetaParametroFactuTransaccionBusqueda")) {
				this.jButtonid_transaccion_cuenta_co_tarjetaParametroFactuTransaccionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transaccion_cuenta_pa_facturaParametroFactuTransaccionUpdate")) {
				this.jButtonid_transaccion_cuenta_pa_facturaParametroFactuTransaccionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transaccion_cuenta_pa_facturaParametroFactuTransaccionBusqueda")) {
				this.jButtonid_transaccion_cuenta_pa_facturaParametroFactuTransaccionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transaccion_cuenta_pa_nota_creditoParametroFactuTransaccionUpdate")) {
				this.jButtonid_transaccion_cuenta_pa_nota_creditoParametroFactuTransaccionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transaccion_cuenta_pa_nota_creditoParametroFactuTransaccionBusqueda")) {
				this.jButtonid_transaccion_cuenta_pa_nota_creditoParametroFactuTransaccionBusquedaActionPerformed(evt);
			}
			
			ParametroFactuTransaccionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.parametrofactutransaccion,new Object(),this.parametrofactutransaccionParameterGeneral,this.parametrofactutransaccionReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
			
  		}  finally {
      		this.finishProcessParametroFactuTransaccion();
      	}
    }
	
	public void internalFrameClosingInternalFrameGeneral(String sTipo,InternalFrameEvent evt) { 	  
		try {
			ParametroFactuTransaccionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.parametrofactutransaccion,new Object(),this.parametrofactutransaccionParameterGeneral,this.parametrofactutransaccionReturnGeneral);
			
			if(sTipo.equals("CloseInternalFrameParametroFactuTransaccion")) {
				closingInternalFrameParametroFactuTransaccion();
				
			} else if(sTipo.equals("jButtonCancelarParametroFactuTransaccion")) {
				JInternalFrameBase jInternalFrameDetalleFormParametroFactuTransaccion = (JInternalFrameBase)evt.getSource();
	            	
	            ParametroFactuTransaccionBeanSwingJInternalFrame jInternalFrameParent=(ParametroFactuTransaccionBeanSwingJInternalFrame)jInternalFrameDetalleFormParametroFactuTransaccion.getjInternalFrameParent();
	            
				jInternalFrameParent.jButtonCancelarParametroFactuTransaccionActionPerformed(null);
			}
			
			ParametroFactuTransaccionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.parametrofactutransaccion,new Object(),this.parametrofactutransaccionParameterGeneral,this.parametrofactutransaccionReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void recargarFormParametroFactuTransaccion(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion) throws Exception {
		this.recargarFormParametroFactuTransaccion(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,false);
	}
	
	public void recargarFormParametroFactuTransaccion(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion,Boolean esControlTabla) throws Exception {
		if(this.permiteRecargarForm && this.permiteMantenimiento(this.parametrofactutransaccion)) {
			if(!esControlTabla) {
				if(ParametroFactuTransaccionJInternalFrame.ISBINDING_MANUAL_TABLA) {			
					this.setVariablesFormularioToObjetoActualParametroFactuTransaccion(this.parametrofactutransaccion,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuTransaccion(this.parametrofactutransaccion);			
				}
				
				if(this.parametrofactutransaccionSessionBean.getEstaModoGuardarRelaciones()) {
					this.setVariablesFormularioRelacionesToObjetoActualParametroFactuTransaccion(this.parametrofactutransaccion,classes);				
				}
			
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.parametrofactutransaccionReturnGeneral=parametrofactutransaccionLogic.procesarEventosParametroFactuTransaccionsWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.parametrofactutransaccionLogic.getParametroFactuTransaccions(),this.parametrofactutransaccion,this.parametrofactutransaccionParameterGeneral,this.isEsNuevoParametroFactuTransaccion,classes);//this.parametrofactutransaccionLogic.getParametroFactuTransaccion()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
					
					//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					//this.setVariablesObjetoReturnGeneralToBeanParametroFactuTransaccion(this.parametrofactutransaccionReturnGeneral,this.parametrofactutransaccionBean,false);
						
					//ACTUALIZA VARIABLES RELACIONES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					if(this.parametrofactutransaccionSessionBean.getEstaModoGuardarRelaciones()) {
						//this.setVariablesRelacionesObjetoReturnGeneralToBeanParametroFactuTransaccion(classes,this.parametrofactutransaccionReturnGeneral,this.parametrofactutransaccionBean,false);
					}
						
					if(this.parametrofactutransaccionReturnGeneral.getConRecargarPropiedades()) {
						//INICIALIZA VARIABLES COMBOS NORMALES (FK)
						this.setVariablesObjetoActualToFormularioForeignKeyParametroFactuTransaccion(this.parametrofactutransaccionReturnGeneral.getParametroFactuTransaccion());
							
						//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
						this.setVariablesObjetoActualToFormularioParametroFactuTransaccion(this.parametrofactutransaccionReturnGeneral.getParametroFactuTransaccion());	
					}
						
					if(this.parametrofactutransaccionReturnGeneral.getConRecargarRelaciones()) {
						//INICIALIZA VARIABLES RELACIONES A FORMULARIO
						this.setVariablesRelacionesObjetoActualToFormularioParametroFactuTransaccion(this.parametrofactutransaccionReturnGeneral.getParametroFactuTransaccion(),classes);//this.parametrofactutransaccionBean);	
					}									
					
				} else {				
					//INICIALIZA VARIABLES RELACIONES A FORMULARIO
					this.setVariablesRelacionesObjetoActualToFormularioParametroFactuTransaccion(this.parametrofactutransaccion,classes);//this.parametrofactutransaccionBean);									
				}
			
				if(ParametroFactuTransaccionJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesFormularioToObjetoActualParametroFactuTransaccion(this.parametrofactutransaccion,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuTransaccion(this.parametrofactutransaccion);				
				}
				
			} else {
				
				if(((controlTipo.equals(ControlTipo.TEXTBOX) || controlTipo.equals(ControlTipo.DATE)
					|| controlTipo.equals(ControlTipo.TEXTAREA) || controlTipo.equals(ControlTipo.COMBOBOX)
					)				
					&& eventoTipo.equals(EventoTipo.CHANGE)
					)
					
					|| (controlTipo.equals(ControlTipo.CHECKBOX) && eventoTipo.equals(EventoTipo.CLIC))
					
				) { // && sTipoGeneral.equals("TEXTBOX")
					
					if(this.parametrofactutransaccionAnterior!=null) {
						this.parametrofactutransaccion=this.parametrofactutransaccionAnterior;
					}
				}
				
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.parametrofactutransaccionReturnGeneral=parametrofactutransaccionLogic.procesarEventosParametroFactuTransaccionsWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.parametrofactutransaccionLogic.getParametroFactuTransaccions(),this.parametrofactutransaccion,this.parametrofactutransaccionParameterGeneral,this.isEsNuevoParametroFactuTransaccion,classes);//this.parametrofactutransaccionLogic.getParametroFactuTransaccion()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.parametrofactutransaccionSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.parametrofactutransaccionSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(this.parametrofactutransaccionReturnGeneral.getParametroFactuTransaccion(),parametrofactutransaccionLogic.getParametroFactuTransaccions());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(this.parametrofactutransaccionReturnGeneral.getParametroFactuTransaccion(),this.parametrofactutransaccions);
				}
				//ARCHITECTURE
				
				//this.jTableDatosParametroFactuTransaccion.repaint();
				
				//((AbstractTableModel) this.jTableDatosParametroFactuTransaccion.getModel()).fireTableDataChanged();
				
				this.actualizarVisualTableDatosParametroFactuTransaccion();
			}
		}
	}
	
	public void actualizarVisualTableDatosParametroFactuTransaccion() throws Exception {
		
		ParametroFactuTransaccionModel parametrofactutransaccionModel=(ParametroFactuTransaccionModel)this.jTableDatosParametroFactuTransaccion.getModel();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			parametrofactutransaccionModel.parametrofactutransaccions=this.parametrofactutransaccionLogic.getParametroFactuTransaccions();
		
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
			parametrofactutransaccionModel.parametrofactutransaccions=this.parametrofactutransaccions;
		}
		
		
		((ParametroFactuTransaccionModel) this.jTableDatosParametroFactuTransaccion.getModel()).fireTableDataChanged();
	}
	
	public void actualizarVisualTableDatosEventosVistaParametroFactuTransaccion() throws Exception {
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.actualizarLista(this.getparametrofactutransaccionAnterior(),this.parametrofactutransaccionLogic.getParametroFactuTransaccions());
					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			this.actualizarLista(this.getparametrofactutransaccionAnterior(),this.parametrofactutransaccions);
		}
		//ARCHITECTURE
						
		this.actualizarFilaTotales();
						
		this.actualizarVisualTableDatosParametroFactuTransaccion();	
	}
	
	public void setVariablesRelacionesObjetoActualToFormularioParametroFactuTransaccion(ParametroFactuTransaccion parametrofactutransaccion,ArrayList<Classe> classes) throws Exception { 
		try {
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setEventoParentGeneral(Boolean esUsoDesdeHijo,String sDominio,String sDominioTipo,String sTipo,String sTipoGeneral,Boolean esControlTabla,Boolean conIrServidorAplicacion,
						Long id,Component control, EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,ArrayList<String> arrClasses,
						Object evt,GeneralEntityParameterReturnGeneral generalEntityParameterGeneral,Object otro) { 	  
		try {
			
			if(this.permiteManejarEventosControl()) {
				
				//BASE COPIADO DESDE TEXTFIELLOSTFOCUS
				
				//EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				Boolean conTodasRelaciones=false;
				
				this.esUsoDesdeHijo=esUsoDesdeHijo;
										
				ParametroFactuTransaccionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.parametrofactutransaccion,new Object(),generalEntityParameterGeneral,this.parametrofactutransaccionReturnGeneral);
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				for(String sClasse:arrClasses) {
					if(sClasse.equals("TODOS")) {
						conTodasRelaciones=true;
						break;
					}
				}
				
				if(this.parametrofactutransaccionSessionBean.getConGuardarRelaciones()) {
					if(conTodasRelaciones) {
						classes=ParametroFactuTransaccionConstantesFunciones.getClassesRelationshipsOfParametroFactuTransaccion(new ArrayList<Classe>(),DeepLoadType.NONE);
					} else {
						classes=ParametroFactuTransaccionConstantesFunciones.getClassesRelationshipsFromStringsOfParametroFactuTransaccion(arrClasses,DeepLoadType.NONE);
					}
				}
	
				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);
	
				this.recargarFormParametroFactuTransaccion(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,esControlTabla);
										
				ParametroFactuTransaccionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.parametrofactutransaccion,new Object(),generalEntityParameterGeneral,this.parametrofactutransaccionReturnGeneral);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
  		}
    }
	
	/*
	public void setVariablesRelacionesObjetoBeanActualToFormularioParametroFactuTransaccion(ParametroFactuTransaccionBean parametrofactutransaccionBean) throws Exception { 
		try {
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesRelacionesObjetoReturnGeneralToBeanParametroFactuTransaccion(ArrayList<Classe> classes,ParametroFactuTransaccionReturnGeneral parametrofactutransaccionReturnGeneral,ParametroFactuTransaccionBean parametrofactutransaccionBean,Boolean conDefault) throws Exception {
		
	}
	*/
	
	public void setVariablesFormularioRelacionesToObjetoActualParametroFactuTransaccion(ParametroFactuTransaccion parametrofactutransaccion,ArrayList<Classe> classes) throws Exception {
		
	}
	
	public Boolean permiteManejarEventosControl() {
		Boolean permite=true;				
		
		if(this.estaModoNuevo || this.estaModoSeleccionar || this.estaModoEliminarGuardarCambios) {
			permite=false;
			
		} 
		
		//NO DEBE MEZCLARSE CONCEPTOS
		/*	
		if(!paraTabla && !this.permiteMantenimiento(this.parametrofactutransaccion)) {
			System.out.println("ERROR:EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES");
				
			//JOptionPane.showMessageDialog(this,"EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES","EVENTO",JOptionPane.ERROR_MESSAGE);			
		}
		*/
		
		return permite;
	}
	
	public void inicializarFormDetalle() throws Exception {
		
		this.jInternalFrameDetalleFormParametroFactuTransaccion = new ParametroFactuTransaccionDetalleFormJInternalFrame(jDesktopPane,this.parametrofactutransaccionSessionBean.getConGuardarRelaciones(),this.parametrofactutransaccionSessionBean.getEsGuardarRelacionado(),this.cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		this.jDesktopPane.add(this.jInternalFrameDetalleFormParametroFactuTransaccion);
		this.jInternalFrameDetalleFormParametroFactuTransaccion.setVisible(false);
		this.jInternalFrameDetalleFormParametroFactuTransaccion.setSelected(false);						
		
		this.jInternalFrameDetalleFormParametroFactuTransaccion.setJInternalFrameParent(this);
		
		this.jInternalFrameDetalleFormParametroFactuTransaccion.parametrofactutransaccionLogic=this.parametrofactutransaccionLogic;
		
		this.cargarCombosFrameForeignKeyParametroFactuTransaccion("Formulario");
		
		this.inicializarActualizarBindingBotonesPermisosManualFormDetalleParametroFactuTransaccion();
		this.inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleParametroFactuTransaccion();
		
		this.initActionsFormDetalle();		
		
		this.initActionsCombosTodosForeignKeyParametroFactuTransaccion("Formulario");
		
		//TALVEZ conSetVariablesGlobales COMO if() 
		this.setVariablesGlobalesCombosForeignKeyParametroFactuTransaccion();
		
		this.cargarMenuRelaciones();
		
	}
	
	public void initActionsFormDetalle() {	
		
		this.jInternalFrameDetalleFormParametroFactuTransaccion.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarParametroFactuTransaccion"));
		
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonModificarParametroFactuTransaccion.addActionListener(new ButtonActionListener(this,"ModificarParametroFactuTransaccion"));

		
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonModificarToolBarParametroFactuTransaccion.addActionListener(new ButtonActionListener(this,"ModificarToolBarParametroFactuTransaccion"));
					
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jMenuItemModificarParametroFactuTransaccion.addActionListener(new ButtonActionListener(this,"MenuItemModificarParametroFactuTransaccion"));		
		
		
		
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonActualizarParametroFactuTransaccion.addActionListener (new ButtonActionListener(this,"ActualizarParametroFactuTransaccion"));
		
		
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonActualizarToolBarParametroFactuTransaccion.addActionListener(new ButtonActionListener(this,"ActualizarToolBarParametroFactuTransaccion"));
						
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jMenuItemActualizarParametroFactuTransaccion.addActionListener (new ButtonActionListener(this,"MenuItemActualizarParametroFactuTransaccion"));		
		
		
		
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonEliminarParametroFactuTransaccion.addActionListener (new ButtonActionListener(this,"EliminarParametroFactuTransaccion"));
		
		
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonEliminarToolBarParametroFactuTransaccion.addActionListener (new ButtonActionListener(this,"EliminarToolBarParametroFactuTransaccion"));
								
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jMenuItemEliminarParametroFactuTransaccion.addActionListener (new ButtonActionListener(this,"MenuItemEliminarParametroFactuTransaccion"));		
		
		
		
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonCancelarParametroFactuTransaccion.addActionListener (new ButtonActionListener(this,"CancelarParametroFactuTransaccion"));
		
		
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonCancelarToolBarParametroFactuTransaccion.addActionListener (new ButtonActionListener(this,"CancelarToolBarParametroFactuTransaccion"));
					
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jMenuItemCancelarParametroFactuTransaccion.addActionListener (new ButtonActionListener(this,"MenuItemCancelarParametroFactuTransaccion"));		
		
		
		
		
		
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jMenuItemDetalleCerrarParametroFactuTransaccion.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarParametroFactuTransaccion"));		
		
		
		
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonGuardarCambiosToolBarParametroFactuTransaccion.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarParametroFactuTransaccion"));
		
		
		
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonGuardarCambiosToolBarParametroFactuTransaccion.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarParametroFactuTransaccion"));
		
		
		
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxTiposAccionesFormularioParametroFactuTransaccion.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioParametroFactuTransaccion"));
		
		
				
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonidParametroFactuTransaccionBusqueda.addActionListener(new ButtonActionListener(this,"idParametroFactuTransaccionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonid_empresaParametroFactuTransaccionUpdate.addActionListener(new ButtonActionListener(this,"id_empresaParametroFactuTransaccionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonid_empresaParametroFactuTransaccionBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaParametroFactuTransaccionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonid_sucursalParametroFactuTransaccionUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalParametroFactuTransaccionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonid_sucursalParametroFactuTransaccionBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalParametroFactuTransaccionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonid_transaccion_inven_facturaParametroFactuTransaccionUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion_inven_facturaParametroFactuTransaccionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonid_transaccion_inven_facturaParametroFactuTransaccionBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion_inven_facturaParametroFactuTransaccionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonid_transaccion_inven_nota_creditoParametroFactuTransaccionUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion_inven_nota_creditoParametroFactuTransaccionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonid_transaccion_inven_nota_creditoParametroFactuTransaccionBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion_inven_nota_creditoParametroFactuTransaccionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonid_transaccion_inven_nota_ventaParametroFactuTransaccionUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion_inven_nota_ventaParametroFactuTransaccionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonid_transaccion_inven_nota_ventaParametroFactuTransaccionBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion_inven_nota_ventaParametroFactuTransaccionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonid_transaccion_cuenta_co_facturaParametroFactuTransaccionUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion_cuenta_co_facturaParametroFactuTransaccionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonid_transaccion_cuenta_co_facturaParametroFactuTransaccionBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion_cuenta_co_facturaParametroFactuTransaccionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonid_transaccion_cuenta_co_nota_creditoParametroFactuTransaccionUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion_cuenta_co_nota_creditoParametroFactuTransaccionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonid_transaccion_cuenta_co_nota_creditoParametroFactuTransaccionBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion_cuenta_co_nota_creditoParametroFactuTransaccionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonid_transaccion_cuenta_co_nota_ventaParametroFactuTransaccionUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion_cuenta_co_nota_ventaParametroFactuTransaccionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonid_transaccion_cuenta_co_nota_ventaParametroFactuTransaccionBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion_cuenta_co_nota_ventaParametroFactuTransaccionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonid_transaccion_cuenta_co_tarjetaParametroFactuTransaccionUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion_cuenta_co_tarjetaParametroFactuTransaccionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonid_transaccion_cuenta_co_tarjetaParametroFactuTransaccionBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion_cuenta_co_tarjetaParametroFactuTransaccionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonid_transaccion_cuenta_pa_facturaParametroFactuTransaccionUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion_cuenta_pa_facturaParametroFactuTransaccionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonid_transaccion_cuenta_pa_facturaParametroFactuTransaccionBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion_cuenta_pa_facturaParametroFactuTransaccionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonid_transaccion_cuenta_pa_nota_creditoParametroFactuTransaccionUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion_cuenta_pa_nota_creditoParametroFactuTransaccionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonid_transaccion_cuenta_pa_nota_creditoParametroFactuTransaccionBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion_cuenta_pa_nota_creditoParametroFactuTransaccionBusqueda"));
		
		
		;

		//TABBED PANE RELACIONES
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jTabbedPaneRelacionesParametroFactuTransaccion.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesParametroFactuTransaccion"));
		
		;		
		//TABBED PANE RELACIONES FIN(EXTRA TAB)	
	}
	
	public void initActions() {				
		this.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"CloseInternalFrameParametroFactuTransaccion"));
		
		if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroFactuTransaccion.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarParametroFactuTransaccion"));
		}
		
		this.jTableDatosParametroFactuTransaccion.getSelectionModel().addListSelectionListener(new TableListSelectionListener(this,"TableDatosSeleccionarParametroFactuTransaccion"));
		
		this.jTableDatosParametroFactuTransaccion.addMouseListener(new TableMouseAdapter(this,"DatosSeleccionarParametroFactuTransaccion"));
		
		this.jButtonNuevoParametroFactuTransaccion.addActionListener(new ButtonActionListener(this,"NuevoParametroFactuTransaccion"));
		
		this.jButtonDuplicarParametroFactuTransaccion.addActionListener(new ButtonActionListener(this,"DuplicarParametroFactuTransaccion"));
		
		this.jButtonCopiarParametroFactuTransaccion.addActionListener(new ButtonActionListener(this,"CopiarParametroFactuTransaccion"));
		
		this.jButtonVerFormParametroFactuTransaccion.addActionListener(new ButtonActionListener(this,"VerFormParametroFactuTransaccion"));
		
		
		this.jButtonNuevoToolBarParametroFactuTransaccion.addActionListener(new ButtonActionListener(this,"NuevoToolBarParametroFactuTransaccion"));
			
		this.jButtonDuplicarToolBarParametroFactuTransaccion.addActionListener(new ButtonActionListener(this,"DuplicarToolBarParametroFactuTransaccion"));
			
		this.jMenuItemNuevoParametroFactuTransaccion.addActionListener (new ButtonActionListener(this,"MenuItemNuevoParametroFactuTransaccion"));
			
		this.jMenuItemDuplicarParametroFactuTransaccion.addActionListener (new ButtonActionListener(this,"MenuItemDuplicarParametroFactuTransaccion"));		
		
		
		this.jButtonNuevoRelacionesParametroFactuTransaccion.addActionListener (new ButtonActionListener(this,"NuevoRelacionesParametroFactuTransaccion"));
		
		
		this.jButtonNuevoRelacionesToolBarParametroFactuTransaccion.addActionListener(new ButtonActionListener(this,"NuevoRelacionesToolBarParametroFactuTransaccion"));
			
		this.jMenuItemNuevoRelacionesParametroFactuTransaccion.addActionListener(new ButtonActionListener(this,"MenuItemNuevoRelacionesParametroFactuTransaccion"));		
		
		
		if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonModificarParametroFactuTransaccion.addActionListener(new ButtonActionListener(this,"ModificarParametroFactuTransaccion"));
		}
		
		
		if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonModificarToolBarParametroFactuTransaccion.addActionListener(new ButtonActionListener(this,"ModificarToolBarParametroFactuTransaccion"));
			
			this.jInternalFrameDetalleFormParametroFactuTransaccion.jMenuItemModificarParametroFactuTransaccion.addActionListener(new ButtonActionListener(this,"MenuItemModificarParametroFactuTransaccion"));		
		}
		
		
		if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) { //if(this.conCargarFormDetalle) {			
			this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonActualizarParametroFactuTransaccion.addActionListener (new ButtonActionListener(this,"ActualizarParametroFactuTransaccion"));
		}
		
		
		if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonActualizarToolBarParametroFactuTransaccion.addActionListener(new ButtonActionListener(this,"ActualizarToolBarParametroFactuTransaccion"));
				
			this.jInternalFrameDetalleFormParametroFactuTransaccion.jMenuItemActualizarParametroFactuTransaccion.addActionListener (new ButtonActionListener(this,"MenuItemActualizarParametroFactuTransaccion"));		
		}
		
		
		if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonEliminarParametroFactuTransaccion.addActionListener (new ButtonActionListener(this,"EliminarParametroFactuTransaccion"));
		}
		
		
		if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonEliminarToolBarParametroFactuTransaccion.addActionListener (new ButtonActionListener(this,"EliminarToolBarParametroFactuTransaccion"));
						
			this.jInternalFrameDetalleFormParametroFactuTransaccion.jMenuItemEliminarParametroFactuTransaccion.addActionListener (new ButtonActionListener(this,"MenuItemEliminarParametroFactuTransaccion"));		
		}
		
		
		if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonCancelarParametroFactuTransaccion.addActionListener (new ButtonActionListener(this,"CancelarParametroFactuTransaccion"));
		}
		
		
		if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonCancelarToolBarParametroFactuTransaccion.addActionListener (new ButtonActionListener(this,"CancelarToolBarParametroFactuTransaccion"));
			
			this.jInternalFrameDetalleFormParametroFactuTransaccion.jMenuItemCancelarParametroFactuTransaccion.addActionListener (new ButtonActionListener(this,"MenuItemCancelarParametroFactuTransaccion"));		
		}
		
		this.jButtonMostrarOcultarTablaToolBarParametroFactuTransaccion.addActionListener (new ButtonActionListener(this,"MostrarOcultarToolBarParametroFactuTransaccion"));		
		
		
		this.jButtonCerrarParametroFactuTransaccion.addActionListener (new ButtonActionListener(this,"CerrarParametroFactuTransaccion"));
		
		
		this.jButtonCerrarToolBarParametroFactuTransaccion.addActionListener (new ButtonActionListener(this,"CerrarToolBarParametroFactuTransaccion"));
			
		this.jMenuItemCerrarParametroFactuTransaccion.addActionListener (new ButtonActionListener(this,"MenuItemCerrarParametroFactuTransaccion"));
			
		if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroFactuTransaccion.jMenuItemDetalleCerrarParametroFactuTransaccion.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarParametroFactuTransaccion"));		
		}
		
		
		if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonGuardarCambiosParametroFactuTransaccion.addActionListener (new ButtonActionListener(this,"GuardarCambiosParametroFactuTransaccion"));
		}
		
		
		if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonGuardarCambiosToolBarParametroFactuTransaccion.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarParametroFactuTransaccion"));
		}
		
		this.jButtonCopiarToolBarParametroFactuTransaccion.addActionListener (new ButtonActionListener(this,"CopiarToolBarParametroFactuTransaccion"));
			
		this.jButtonVerFormToolBarParametroFactuTransaccion.addActionListener (new ButtonActionListener(this,"VerFormToolBarParametroFactuTransaccion"));
		
		this.jMenuItemGuardarCambiosParametroFactuTransaccion.addActionListener (new ButtonActionListener(this,"MenuItemGuardarCambiosParametroFactuTransaccion"));
			
		this.jMenuItemCopiarParametroFactuTransaccion.addActionListener (new ButtonActionListener(this,"MenuItemCopiarParametroFactuTransaccion"));		
		
		this.jMenuItemVerFormParametroFactuTransaccion.addActionListener (new ButtonActionListener(this,"MenuItemVerFormParametroFactuTransaccion"));		
		
		
		this.jButtonGuardarCambiosTablaParametroFactuTransaccion.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaParametroFactuTransaccion"));
		
		
		this.jButtonGuardarCambiosTablaToolBarParametroFactuTransaccion.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaToolBarParametroFactuTransaccion"));
			
		this.jMenuItemGuardarCambiosTablaParametroFactuTransaccion.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaParametroFactuTransaccion"));		
		
		
		
		this.jButtonRecargarInformacionParametroFactuTransaccion.addActionListener (new ButtonActionListener(this,"RecargarInformacionParametroFactuTransaccion"));
					
		this.jButtonRecargarInformacionToolBarParametroFactuTransaccion.addActionListener (new ButtonActionListener(this,"RecargarInformacionToolBarParametroFactuTransaccion"));
		
		this.jMenuItemRecargarInformacionParametroFactuTransaccion.addActionListener (new ButtonActionListener(this,"MenuItemRecargarInformacionParametroFactuTransaccion"));		
		
		
		
		this.jButtonAnterioresParametroFactuTransaccion.addActionListener (new ButtonActionListener(this,"AnterioresParametroFactuTransaccion"));
		
		
		this.jButtonAnterioresToolBarParametroFactuTransaccion.addActionListener (new ButtonActionListener(this,"AnterioresToolBarParametroFactuTransaccion"));
		
		this.jMenuItemAnterioresParametroFactuTransaccion.addActionListener (new ButtonActionListener(this,"MenuItemAnterioresParametroFactuTransaccion"));		
		
		
		this.jButtonSiguientesParametroFactuTransaccion.addActionListener (new ButtonActionListener(this,"SiguientesParametroFactuTransaccion"));
		
		
		this.jButtonSiguientesToolBarParametroFactuTransaccion.addActionListener (new ButtonActionListener(this,"SiguientesToolBarParametroFactuTransaccion"));
			
		this.jMenuItemSiguientesParametroFactuTransaccion.addActionListener (new ButtonActionListener(this,"MenuItemSiguientesParametroFactuTransaccion"));
			
		this.jMenuItemAbrirOrderByParametroFactuTransaccion.addActionListener (new ButtonActionListener(this,"MenuItemAbrirOrderByParametroFactuTransaccion"));
			
		this.jMenuItemMostrarOcultarParametroFactuTransaccion.addActionListener (new ButtonActionListener(this,"MenuItemMostrarOcultarParametroFactuTransaccion"));
			
		this.jMenuItemDetalleAbrirOrderByParametroFactuTransaccion.addActionListener (new ButtonActionListener(this,"MenuItemDetalleAbrirOrderByParametroFactuTransaccion"));
			
		this.jMenuItemDetalleMostarOcultarParametroFactuTransaccion.addActionListener (new ButtonActionListener(this,"MenuItemDetalleMostrarOcultarParametroFactuTransaccion"));		
		
		
		this.jButtonNuevoGuardarCambiosParametroFactuTransaccion.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosParametroFactuTransaccion"));
		
		
		this.jButtonNuevoGuardarCambiosToolBarParametroFactuTransaccion.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosToolBarParametroFactuTransaccion"));
			
		this.jMenuItemNuevoGuardarCambiosParametroFactuTransaccion.addActionListener (new ButtonActionListener(this,"MenuItemNuevoGuardarCambiosParametroFactuTransaccion"));		
		
		
		
		//SELECCIONAR TODOS
		
		this.jCheckBoxSeleccionarTodosParametroFactuTransaccion.addItemListener(new CheckBoxItemListener(this,"SeleccionarTodosParametroFactuTransaccion"));

		this.jCheckBoxSeleccionadosParametroFactuTransaccion.addItemListener(new CheckBoxItemListener(this,"SeleccionadosParametroFactuTransaccion"));
		
		if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxTiposAccionesFormularioParametroFactuTransaccion.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioParametroFactuTransaccion"));
		}
		
		
		this.jComboBoxTiposRelacionesParametroFactuTransaccion.addActionListener (new ButtonActionListener(this,"TiposRelacionesParametroFactuTransaccion"));
			
		this.jComboBoxTiposAccionesParametroFactuTransaccion.addActionListener (new ButtonActionListener(this,"TiposAccionesParametroFactuTransaccion"));
					
		this.jComboBoxTiposSeleccionarParametroFactuTransaccion.addActionListener (new ButtonActionListener(this,"TiposSeleccionarParametroFactuTransaccion"));
			
		this.jTextFieldValorCampoGeneralParametroFactuTransaccion.addActionListener (new ButtonActionListener(this,"ValorCampoGeneralParametroFactuTransaccion"));		
		
		
		if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) { //if(this.conCargarFormDetalle) {
		
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonidParametroFactuTransaccionBusqueda.addActionListener(new ButtonActionListener(this,"idParametroFactuTransaccionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonid_empresaParametroFactuTransaccionUpdate.addActionListener(new ButtonActionListener(this,"id_empresaParametroFactuTransaccionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonid_empresaParametroFactuTransaccionBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaParametroFactuTransaccionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonid_sucursalParametroFactuTransaccionUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalParametroFactuTransaccionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonid_sucursalParametroFactuTransaccionBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalParametroFactuTransaccionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonid_transaccion_inven_facturaParametroFactuTransaccionUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion_inven_facturaParametroFactuTransaccionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonid_transaccion_inven_facturaParametroFactuTransaccionBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion_inven_facturaParametroFactuTransaccionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonid_transaccion_inven_nota_creditoParametroFactuTransaccionUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion_inven_nota_creditoParametroFactuTransaccionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonid_transaccion_inven_nota_creditoParametroFactuTransaccionBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion_inven_nota_creditoParametroFactuTransaccionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonid_transaccion_inven_nota_ventaParametroFactuTransaccionUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion_inven_nota_ventaParametroFactuTransaccionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonid_transaccion_inven_nota_ventaParametroFactuTransaccionBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion_inven_nota_ventaParametroFactuTransaccionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonid_transaccion_cuenta_co_facturaParametroFactuTransaccionUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion_cuenta_co_facturaParametroFactuTransaccionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonid_transaccion_cuenta_co_facturaParametroFactuTransaccionBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion_cuenta_co_facturaParametroFactuTransaccionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonid_transaccion_cuenta_co_nota_creditoParametroFactuTransaccionUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion_cuenta_co_nota_creditoParametroFactuTransaccionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonid_transaccion_cuenta_co_nota_creditoParametroFactuTransaccionBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion_cuenta_co_nota_creditoParametroFactuTransaccionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonid_transaccion_cuenta_co_nota_ventaParametroFactuTransaccionUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion_cuenta_co_nota_ventaParametroFactuTransaccionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonid_transaccion_cuenta_co_nota_ventaParametroFactuTransaccionBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion_cuenta_co_nota_ventaParametroFactuTransaccionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonid_transaccion_cuenta_co_tarjetaParametroFactuTransaccionUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion_cuenta_co_tarjetaParametroFactuTransaccionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonid_transaccion_cuenta_co_tarjetaParametroFactuTransaccionBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion_cuenta_co_tarjetaParametroFactuTransaccionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonid_transaccion_cuenta_pa_facturaParametroFactuTransaccionUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion_cuenta_pa_facturaParametroFactuTransaccionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonid_transaccion_cuenta_pa_facturaParametroFactuTransaccionBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion_cuenta_pa_facturaParametroFactuTransaccionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonid_transaccion_cuenta_pa_nota_creditoParametroFactuTransaccionUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion_cuenta_pa_nota_creditoParametroFactuTransaccionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonid_transaccion_cuenta_pa_nota_creditoParametroFactuTransaccionBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion_cuenta_pa_nota_creditoParametroFactuTransaccionBusqueda"));
		}
		
		if(!this.conCargarMinimo) {
		//BYDAN_BUSQUEDAS
		
		
			this.jButtonFK_IdTransaccionCuentaCoFacturaParametroFactuTransaccion.addActionListener(new ButtonActionListener(this,"FK_IdTransaccionCuentaCoFacturaParametroFactuTransaccion"));

			this.jButtonFK_IdTransaccionCuentaCoNotaCreditoParametroFactuTransaccion.addActionListener(new ButtonActionListener(this,"FK_IdTransaccionCuentaCoNotaCreditoParametroFactuTransaccion"));

			this.jButtonFK_IdTransaccionCuentaCoNotaVentaParametroFactuTransaccion.addActionListener(new ButtonActionListener(this,"FK_IdTransaccionCuentaCoNotaVentaParametroFactuTransaccion"));

			this.jButtonFK_IdTransaccionCuentaCoTarjetaParametroFactuTransaccion.addActionListener(new ButtonActionListener(this,"FK_IdTransaccionCuentaCoTarjetaParametroFactuTransaccion"));

			this.jButtonFK_IdTransaccionCuentaPaFacturaParametroFactuTransaccion.addActionListener(new ButtonActionListener(this,"FK_IdTransaccionCuentaPaFacturaParametroFactuTransaccion"));

			this.jButtonFK_IdTransaccionCuentaPaNotaCreditoParametroFactuTransaccion.addActionListener(new ButtonActionListener(this,"FK_IdTransaccionCuentaPaNotaCreditoParametroFactuTransaccion"));

			this.jButtonFK_IdTransaccionInvenFacturaParametroFactuTransaccion.addActionListener(new ButtonActionListener(this,"FK_IdTransaccionInvenFacturaParametroFactuTransaccion"));

			this.jButtonFK_IdTransaccionInvenNotaCreditoParametroFactuTransaccion.addActionListener(new ButtonActionListener(this,"FK_IdTransaccionInvenNotaCreditoParametroFactuTransaccion"));

			this.jButtonFK_IdTransaccionInvenNotaVentaParametroFactuTransaccion.addActionListener(new ButtonActionListener(this,"FK_IdTransaccionInvenNotaVentaParametroFactuTransaccion"));
		
		
		
			//REPORTE DINAMICO
			
			if(this.jInternalFrameReporteDinamicoParametroFactuTransaccion!=null) {
				this.jInternalFrameReporteDinamicoParametroFactuTransaccion.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoParametroFactuTransaccion"));
				this.jInternalFrameReporteDinamicoParametroFactuTransaccion.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoParametroFactuTransaccion"));
				this.jInternalFrameReporteDinamicoParametroFactuTransaccion.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoParametroFactuTransaccion"));
			}
			
			//this.jButtonCerrarReporteDinamicoParametroFactuTransaccion.addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoParametroFactuTransaccion"));				
			//this.jButtonGenerarReporteDinamicoParametroFactuTransaccion.addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoParametroFactuTransaccion"));
			//this.jButtonGenerarExcelReporteDinamicoParametroFactuTransaccion.addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoParametroFactuTransaccion"));
				
				
			//IMPORTACION			
			if(this.jInternalFrameImportacionParametroFactuTransaccion!=null) {
				this.jInternalFrameImportacionParametroFactuTransaccion.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionParametroFactuTransaccion"));
				this.jInternalFrameImportacionParametroFactuTransaccion.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionParametroFactuTransaccion"));
				this.jInternalFrameImportacionParametroFactuTransaccion.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionParametroFactuTransaccion"));
			}
			
			//ORDER BY
			this.jButtonAbrirOrderByParametroFactuTransaccion.addActionListener (new ButtonActionListener(this,"AbrirOrderByParametroFactuTransaccion"));
			
			this.jButtonAbrirOrderByToolBarParametroFactuTransaccion.addActionListener (new ButtonActionListener(this,"AbrirOrderByToolBarParametroFactuTransaccion"));			
			
			if(this.jInternalFrameOrderByParametroFactuTransaccion!=null) {
				this.jInternalFrameOrderByParametroFactuTransaccion.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByParametroFactuTransaccion"));				
			}
			
			
		}
		
		
		
		if(!this.conCargarMinimo) {
			if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) { //if(this.conCargarFormDetalle) {
			;
			}
		}
		
		
		//TABBED PANE RELACIONES
		if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroFactuTransaccion.jTabbedPaneRelacionesParametroFactuTransaccion.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesParametroFactuTransaccion"));
		
		;
		}
		//TABBED PANE RELACIONES FIN(EXTRA TAB)		
	}
	
	/*
	public void initActions() {
		String sMapKey = "";
		InputMap inputMap =null;
		
		this.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
            public void internalFrameClosing(InternalFrameEvent event) {          	
            	try {
            		closingInternalFrameParametroFactuTransaccion();
				} catch (Exception e) {
					e.printStackTrace();
				}
            }
        });
		
		this.jInternalFrameDetalleFormParametroFactuTransaccion.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
	        public void internalFrameClosing(InternalFrameEvent event) {
	            JInternalFrameBase jInternalFrameDetalleFormParametroFactuTransaccion = (JInternalFrameBase)event.getSource();
	            	
	            ParametroFactuTransaccionBeanSwingJInternalFrame jInternalFrameParent=(ParametroFactuTransaccionBeanSwingJInternalFrame)jInternalFrameDetalleFormParametroFactuTransaccion.getjInternalFrameParent();
	                
	            try {
					jInternalFrameParent.jButtonCancelarParametroFactuTransaccionActionPerformed(null);
					
					//jInternalFrameParent.dispose();
					//jInternalFrameParent=null;
					
				} catch (Exception e) {
					e.printStackTrace();
				}
	        }
	    });
			
		this.jTableDatosParametroFactuTransaccion.getSelectionModel().addListSelectionListener (
	                new ListSelectionListener() {
	                    public void valueChanged(ListSelectionEvent e) {
							//BYDAN_DESHABILITADO
	                    	//try {jTableDatosParametroFactuTransaccionListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
	                    }
	                }
	     );
		
		this.jTableDatosParametroFactuTransaccion.addMouseListener(new MouseAdapter() {
			   public void mouseClicked(MouseEvent evt) {
				      if (evt.getClickCount() == 2) {
				    	  jButtonIdActionPerformed(null,jTableDatosParametroFactuTransaccion.getSelectedRow(),false,false);
				      }
				   }
		});
		
		this.jButtonNuevoParametroFactuTransaccion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoParametroFactuTransaccionActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoToolBarParametroFactuTransaccion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoParametroFactuTransaccionActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoParametroFactuTransaccion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoParametroFactuTransaccionActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoParametroFactuTransaccion";
		inputMap = this.jButtonNuevoParametroFactuTransaccion.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_N , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoParametroFactuTransaccion.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoParametroFactuTransaccionActionPerformed(evt,false);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonNuevoRelacionesParametroFactuTransaccion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoParametroFactuTransaccionActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoRelacionesToolBarParametroFactuTransaccion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoParametroFactuTransaccionActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoRelacionesParametroFactuTransaccion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoParametroFactuTransaccionActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoRelacionesParametroFactuTransaccion";
		inputMap = this.jButtonNuevoRelacionesParametroFactuTransaccion.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_R , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoRelacionesParametroFactuTransaccion.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoParametroFactuTransaccionActionPerformed(evt,true);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonModificarParametroFactuTransaccion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarParametroFactuTransaccionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonModificarToolBarParametroFactuTransaccion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarParametroFactuTransaccionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemModificarParametroFactuTransaccion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarParametroFactuTransaccionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ModificarParametroFactuTransaccion";
		inputMap = this.jButtonModificarParametroFactuTransaccion.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_M , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonModificarParametroFactuTransaccion.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonModificarParametroFactuTransaccionActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonActualizarParametroFactuTransaccion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarParametroFactuTransaccionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonActualizarToolBarParametroFactuTransaccion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarParametroFactuTransaccionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemActualizarParametroFactuTransaccion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarParametroFactuTransaccionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ActualizarParametroFactuTransaccion";
		inputMap = this.jButtonActualizarParametroFactuTransaccion.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonActualizarParametroFactuTransaccion.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonActualizarParametroFactuTransaccionActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonEliminarParametroFactuTransaccion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarParametroFactuTransaccionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonEliminarToolBarParametroFactuTransaccion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarParametroFactuTransaccionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
				
		this.jMenuItemEliminarParametroFactuTransaccion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarParametroFactuTransaccionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "EliminarParametroFactuTransaccion";
		inputMap = this.jButtonEliminarParametroFactuTransaccion.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_E , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonEliminarParametroFactuTransaccion.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonEliminarParametroFactuTransaccionActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCancelarParametroFactuTransaccion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarParametroFactuTransaccionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCancelarToolBarParametroFactuTransaccion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarParametroFactuTransaccionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCancelarParametroFactuTransaccion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarParametroFactuTransaccionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CancelarParametroFactuTransaccion";
		inputMap = this.jButtonCancelarParametroFactuTransaccion.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_Q , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonCancelarParametroFactuTransaccion.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCancelarParametroFactuTransaccionActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCerrarParametroFactuTransaccion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarParametroFactuTransaccionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCerrarToolBarParametroFactuTransaccion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarParametroFactuTransaccionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCerrarParametroFactuTransaccion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarParametroFactuTransaccionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemDetalleCerrarParametroFactuTransaccion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  //try {jButtonCerrarParametroFactuTransaccionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
					try {jButtonCancelarParametroFactuTransaccionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CerrarParametroFactuTransaccion";
		inputMap = this.jButtonCerrarParametroFactuTransaccion.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_C , KeyEvent.ALT_MASK), sMapKey);
			
		this.jButtonCerrarParametroFactuTransaccion.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCerrarParametroFactuTransaccionActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonGuardarCambiosParametroFactuTransaccion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosParametroFactuTransaccionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosToolBarParametroFactuTransaccion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosParametroFactuTransaccionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosParametroFactuTransaccion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosParametroFactuTransaccionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaParametroFactuTransaccion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosParametroFactuTransaccionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaToolBarParametroFactuTransaccion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosParametroFactuTransaccionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosTablaParametroFactuTransaccion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosParametroFactuTransaccionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "GuardarCambiosParametroFactuTransaccion";
		inputMap = this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonGuardarCambiosParametroFactuTransaccion.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonGuardarCambiosParametroFactuTransaccion.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonGuardarCambiosParametroFactuTransaccionActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonRecargarInformacionParametroFactuTransaccion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionParametroFactuTransaccionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonRecargarInformacionToolBarParametroFactuTransaccion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionParametroFactuTransaccionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemRecargarInformacionParametroFactuTransaccion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionParametroFactuTransaccionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		this.jButtonAnterioresParametroFactuTransaccion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresParametroFactuTransaccionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAnterioresToolBarParametroFactuTransaccion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresParametroFactuTransaccionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemAnterioresParametroFactuTransaccion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresParametroFactuTransaccionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesParametroFactuTransaccion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesParametroFactuTransaccionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesToolBarParametroFactuTransaccion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesParametroFactuTransaccionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemSiguientesParametroFactuTransaccion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesParametroFactuTransaccionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosParametroFactuTransaccion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosParametroFactuTransaccionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosToolBarParametroFactuTransaccion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosParametroFactuTransaccionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoGuardarCambiosParametroFactuTransaccion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosParametroFactuTransaccionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		//SELECCIONAR TODOS
		this.jCheckBoxSeleccionarTodosParametroFactuTransaccion.addItemListener(new ItemListener() {		
			public void itemStateChanged(ItemEvent evt) {
				try {jCheckBoxSeleccionarTodosParametroFactuTransaccionItemListener(evt);}catch(Exception e){e.printStackTrace();}
			}
		});

		this.jComboBoxTiposAccionesParametroFactuTransaccion.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposAccionesParametroFactuTransaccionActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jComboBoxTiposSeleccionarParametroFactuTransaccion.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposSeleccionarParametroFactuTransaccionActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jTextFieldValorCampoGeneralParametroFactuTransaccion.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jTextFieldValorCampoGeneralParametroFactuTransaccionActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonidParametroFactuTransaccionBusqueda.addActionListener(new ButtonActionListener(this,"idParametroFactuTransaccionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonid_empresaParametroFactuTransaccionUpdate.addActionListener(new ButtonActionListener(this,"id_empresaParametroFactuTransaccionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonid_empresaParametroFactuTransaccionBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaParametroFactuTransaccionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonid_sucursalParametroFactuTransaccionUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalParametroFactuTransaccionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonid_sucursalParametroFactuTransaccionBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalParametroFactuTransaccionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonid_transaccion_inven_facturaParametroFactuTransaccionUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion_inven_facturaParametroFactuTransaccionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonid_transaccion_inven_facturaParametroFactuTransaccionBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion_inven_facturaParametroFactuTransaccionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonid_transaccion_inven_nota_creditoParametroFactuTransaccionUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion_inven_nota_creditoParametroFactuTransaccionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonid_transaccion_inven_nota_creditoParametroFactuTransaccionBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion_inven_nota_creditoParametroFactuTransaccionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonid_transaccion_inven_nota_ventaParametroFactuTransaccionUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion_inven_nota_ventaParametroFactuTransaccionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonid_transaccion_inven_nota_ventaParametroFactuTransaccionBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion_inven_nota_ventaParametroFactuTransaccionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonid_transaccion_cuenta_co_facturaParametroFactuTransaccionUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion_cuenta_co_facturaParametroFactuTransaccionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonid_transaccion_cuenta_co_facturaParametroFactuTransaccionBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion_cuenta_co_facturaParametroFactuTransaccionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonid_transaccion_cuenta_co_nota_creditoParametroFactuTransaccionUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion_cuenta_co_nota_creditoParametroFactuTransaccionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonid_transaccion_cuenta_co_nota_creditoParametroFactuTransaccionBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion_cuenta_co_nota_creditoParametroFactuTransaccionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonid_transaccion_cuenta_co_nota_ventaParametroFactuTransaccionUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion_cuenta_co_nota_ventaParametroFactuTransaccionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonid_transaccion_cuenta_co_nota_ventaParametroFactuTransaccionBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion_cuenta_co_nota_ventaParametroFactuTransaccionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonid_transaccion_cuenta_co_tarjetaParametroFactuTransaccionUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion_cuenta_co_tarjetaParametroFactuTransaccionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonid_transaccion_cuenta_co_tarjetaParametroFactuTransaccionBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion_cuenta_co_tarjetaParametroFactuTransaccionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonid_transaccion_cuenta_pa_facturaParametroFactuTransaccionUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion_cuenta_pa_facturaParametroFactuTransaccionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonid_transaccion_cuenta_pa_facturaParametroFactuTransaccionBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion_cuenta_pa_facturaParametroFactuTransaccionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonid_transaccion_cuenta_pa_nota_creditoParametroFactuTransaccionUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion_cuenta_pa_nota_creditoParametroFactuTransaccionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jButtonid_transaccion_cuenta_pa_nota_creditoParametroFactuTransaccionBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion_cuenta_pa_nota_creditoParametroFactuTransaccionBusqueda"));
		
		
		this.jButtonFK_IdTransaccionCuentaCoFacturaParametroFactuTransaccion.addActionListener(new ButtonActionListener(this,"FK_IdTransaccionCuentaCoFacturaParametroFactuTransaccion"));

		this.jButtonFK_IdTransaccionCuentaCoNotaCreditoParametroFactuTransaccion.addActionListener(new ButtonActionListener(this,"FK_IdTransaccionCuentaCoNotaCreditoParametroFactuTransaccion"));

		this.jButtonFK_IdTransaccionCuentaCoNotaVentaParametroFactuTransaccion.addActionListener(new ButtonActionListener(this,"FK_IdTransaccionCuentaCoNotaVentaParametroFactuTransaccion"));

		this.jButtonFK_IdTransaccionCuentaCoTarjetaParametroFactuTransaccion.addActionListener(new ButtonActionListener(this,"FK_IdTransaccionCuentaCoTarjetaParametroFactuTransaccion"));

		this.jButtonFK_IdTransaccionCuentaPaFacturaParametroFactuTransaccion.addActionListener(new ButtonActionListener(this,"FK_IdTransaccionCuentaPaFacturaParametroFactuTransaccion"));

		this.jButtonFK_IdTransaccionCuentaPaNotaCreditoParametroFactuTransaccion.addActionListener(new ButtonActionListener(this,"FK_IdTransaccionCuentaPaNotaCreditoParametroFactuTransaccion"));

		this.jButtonFK_IdTransaccionInvenFacturaParametroFactuTransaccion.addActionListener(new ButtonActionListener(this,"FK_IdTransaccionInvenFacturaParametroFactuTransaccion"));

		this.jButtonFK_IdTransaccionInvenNotaCreditoParametroFactuTransaccion.addActionListener(new ButtonActionListener(this,"FK_IdTransaccionInvenNotaCreditoParametroFactuTransaccion"));

		this.jButtonFK_IdTransaccionInvenNotaVentaParametroFactuTransaccion.addActionListener(new ButtonActionListener(this,"FK_IdTransaccionInvenNotaVentaParametroFactuTransaccion"));

		
		//REPORTE DINAMICO
		this.jButtonCerrarReporteDinamicoParametroFactuTransaccion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarReporteDinamicoParametroFactuTransaccionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarReporteDinamicoParametroFactuTransaccion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarReporteDinamicoParametroFactuTransaccionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarExcelReporteDinamicoParametroFactuTransaccion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarExcelReporteDinamicoParametroFactuTransaccionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		//IMPORTACION
		this.jButtonCerrarImportacionParametroFactuTransaccion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarImportacionParametroFactuTransaccionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarImportacionParametroFactuTransaccion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarImportacionParametroFactuTransaccionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAbrirImportacionParametroFactuTransaccion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAbrirImportacionParametroFactuTransaccionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
	}
	*/
	
	
	public void jComboBoxTiposSeleccionarParametroFactuTransaccionActionListener(ActionEvent evt) throws Exception {    		
		try {			
			Reporte reporte=(Reporte)this.jComboBoxTiposSeleccionarParametroFactuTransaccion.getSelectedItem();
			
			//if(reporte.getsCodigo().equals("SELECCIONAR")) {
			//}					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
		}
	}	
	
	
	
	public void seleccionarTodosParametroFactuTransaccion(Boolean conSeleccionarTodos) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				for(ParametroFactuTransaccion parametrofactutransaccionAux:this.parametrofactutransaccionLogic.getParametroFactuTransaccions()) {
					parametrofactutransaccionAux.setIsSelected(conSeleccionarTodos);
				}			
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(ParametroFactuTransaccion parametrofactutransaccionAux:parametrofactutransaccions) {
					parametrofactutransaccionAux.setIsSelected(conSeleccionarTodos);
				}
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarTodosParametroFactuTransaccionItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingParametroFactuTransaccion(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			
			if(sTipoSeleccionar.equals("COLUMNAS")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(ParametroFactuTransaccion parametrofactutransaccionAux:this.parametrofactutransaccionLogic.getParametroFactuTransaccions()) {
						parametrofactutransaccionAux.setIsSelected(this.isSeleccionarTodos);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(ParametroFactuTransaccion parametrofactutransaccionAux:parametrofactutransaccions) {
						parametrofactutransaccionAux.setIsSelected(this.isSeleccionarTodos);
					}
				}
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					for(ParametroFactuTransaccion parametrofactutransaccionAux:this.parametrofactutransaccionLogic.getParametroFactuTransaccions()) {
					
					}	
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(ParametroFactuTransaccion parametrofactutransaccionAux:parametrofactutransaccions) {
						
					}
				}
			}
					
			if(existe) {
				this.inicializarActualizarBindingTablaParametroFactuTransaccion(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosParametroFactuTransaccion.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosParametroFactuTransaccion.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuTransaccion,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionadosParametroFactuTransaccionItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingParametroFactuTransaccion(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			int[] arrNumRowsSeleccionados=null;
			
			arrNumRowsSeleccionados=this.jTableDatosParametroFactuTransaccion.getSelectedRows();
			
			ParametroFactuTransaccion parametrofactutransaccionLocal=new ParametroFactuTransaccion();
			
			//this.seleccionarTodosParametroFactuTransaccion(false);
			
			for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrofactutransaccionLocal =(ParametroFactuTransaccion) this.parametrofactutransaccionLogic.getParametroFactuTransaccions().toArray()[this.jTableDatosParametroFactuTransaccion.convertRowIndexToModel(iNumRowSeleccionado)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					parametrofactutransaccionLocal =(ParametroFactuTransaccion) this.parametrofactutransaccions.toArray()[this.jTableDatosParametroFactuTransaccion.convertRowIndexToModel(iNumRowSeleccionado)];
				}
				
				parametrofactutransaccionLocal.setIsSelected(this.isSeleccionados);
			}
			
			/*
			if(sTipoSeleccionar.equals("SELECCIONAR")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(ParametroFactuTransaccion parametrofactutransaccionAux:this.parametrofactutransaccionLogic.getParametroFactuTransaccions()) {
						parametrofactutransaccionAux.setIsSelected(this.isSeleccionados);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(ParametroFactuTransaccion parametrofactutransaccionAux:parametrofactutransaccions) {
						parametrofactutransaccionAux.setIsSelected(this.isSeleccionados);
					}
				}
			}
			*/
			
			//if(existe) {
				this.inicializarActualizarBindingTablaParametroFactuTransaccion(false);
			/*
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			*/
			
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosParametroFactuTransaccion.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosParametroFactuTransaccion.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuTransaccion,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarActualParametroFactuTransaccionItemListener(ItemEvent evt,Long idActual) throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void ejecutarAuxiliarParametroFactuTransaccionParaAjaxPostBack() throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jTextFieldValorCampoGeneralParametroFactuTransaccionActionListener(ActionEvent evt) throws Exception {    		
		try {
			this.inicializarActualizarBindingParametroFactuTransaccion(false,false);
			
			//System.out.println(this.jTextFieldValorCampoGeneralParametroFactuTransaccion.getText());		
			
			Boolean existe=false;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(ParametroFactuTransaccion parametrofactutransaccionAux:this.parametrofactutransaccionLogic.getParametroFactuTransaccions()) {
				
				}	
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(ParametroFactuTransaccion parametrofactutransaccionAux:parametrofactutransaccions) {
					
				}
			}
								
			if(existe) {
				this.inicializarActualizarBindingTablaParametroFactuTransaccion(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jComboBoxTiposAccionesParametroFactuTransaccionActionListener(ActionEvent evt,Boolean esParaAccionDesdeFormulario) throws Exception {    				
		Boolean conSplash=true;
		
		try {							
		
			this.inicializarActualizarBindingParametroFactuTransaccion(false,false);
			
			Reporte reporte=new Reporte();
			
			this.esParaAccionDesdeFormularioParametroFactuTransaccion=esParaAccionDesdeFormulario;
			
			if(!esParaAccionDesdeFormulario) {
				
				reporte=(Reporte)this.jComboBoxTiposAccionesParametroFactuTransaccion.getSelectedItem();
				
			} else {
				reporte=(Reporte)this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxTiposAccionesFormularioParametroFactuTransaccion.getSelectedItem();
			}
			String sTipoAccionLocal=this.sTipoAccion;
			
			if(!esParaAccionDesdeFormulario) {
				sTipoAccionLocal=this.sTipoAccion;
			} else {
				sTipoAccionLocal=this.sTipoAccionFormulario;
			}
			
			if(sTipoAccionLocal.equals("GENERAR REPORTE")) {//reporte.getsCodigo().equals("GENERAR REPORTE")) {
				if(this.isPermisoReporteParametroFactuTransaccion) {				
					conSplash=true;//false;										
					
					//this.startProcessParametroFactuTransaccion(conSplash);
				
					this.generarReporteParametroFactuTransaccionsSeleccionados();
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesParametroFactuTransaccion.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxTiposAccionesFormularioParametroFactuTransaccion.setSelectedIndex(0);					
				}
			} else if(sTipoAccionLocal.equals("GENERAR REPORTE DINAMICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.mostrarReporteDinamicoParametroFactuTransaccionsSeleccionados();
				//this.jComboBoxTiposAccionesParametroFactuTransaccion.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("GENERAR_REPORTE_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoParametroFactuTransaccionsSeleccionados(false);
				//this.jComboBoxTiposAccionesParametroFactuTransaccion.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("GENERAR_REPORTE_TOTALES_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoParametroFactuTransaccionsSeleccionados(true);
				//this.jComboBoxTiposAccionesParametroFactuTransaccion.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessParametroFactuTransaccion();
				
				this.exportarParametroFactuTransaccionsSeleccionados();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesParametroFactuTransaccion.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxTiposAccionesFormularioParametroFactuTransaccion.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("IMPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				this.mostrarImportacionParametroFactuTransaccions();
				//this.importarParametroFactuTransaccions();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesParametroFactuTransaccion.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxTiposAccionesFormularioParametroFactuTransaccion.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS_EXCEL")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessParametroFactuTransaccion();
				//SE EXPORTA SEGUN TIPO ARCHIVO SELECCIONADO
				//this.exportarExcelParametroFactuTransaccionsSeleccionados();
				//this.jComboBoxTiposAccionesParametroFactuTransaccion.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("RECARGAR_FK")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {								
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE RECARGAR REFERENCIAS ?", "MANTENIMIENTO DE Parametro Transaccion ", JOptionPane.OK_CANCEL_OPTION) == 0) {
				
				//this.startProcessParametroFactuTransaccion();
				
					if(!esParaAccionDesdeFormulario || (esParaAccionDesdeFormulario && this.isEsNuevoParametroFactuTransaccion)) {
						this.esRecargarFks=true;
						this.cargarCombosForeignKeyParametroFactuTransaccion(false,false,false);
						this.esRecargarFks=false;
						
						JOptionPane.showMessageDialog(this,"PROCESO EJECUTADO CORRECTAMENTE","MANTENIMIENTO DE Parametro Transaccion ",JOptionPane.INFORMATION_MESSAGE);
					} else {
						JOptionPane.showMessageDialog(this,"ESTE PROCESO SOLO FUNCIONA AL INGRESAR UN NUEVO ELEMENTO","MANTENIMIENTO",JOptionPane.ERROR_MESSAGE);	
					}
					
					
				}
				
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesParametroFactuTransaccion.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxTiposAccionesFormularioParametroFactuTransaccion.setSelectedIndex(0);					
				}	
			} 			
			else if(ParametroFactuTransaccionBeanSwingJInternalFrame.EsProcesoReporte(reporte.getsCodigo())){
				if(this.isPermisoReporteParametroFactuTransaccion) {				
					if(this.tieneElementosSeleccionados()) {
						this.quitarFilaTotales();
						
						conSplash=false;
						
						//this.startProcessParametroFactuTransaccion(conSplash);
					
						//this.actualizarParametrosGeneralParametroFactuTransaccion();
						
						this.generarReporteProcesoAccionParametroFactuTransaccionsSeleccionados(reporte.getsCodigo());
						
						if(!esParaAccionDesdeFormulario) {
							
							this.jComboBoxTiposAccionesParametroFactuTransaccion.setSelectedIndex(0);					
							
						} else {
							this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxTiposAccionesFormularioParametroFactuTransaccion.setSelectedIndex(0);					
						}
					} else {
						JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
			} 
			else if(ParametroFactuTransaccionBeanSwingJInternalFrameAdditional.EsProcesoAccionNormal(reporte.getsCodigo())){
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR "+reporte.getsDescripcion()+" EN PROCESO Parametro Transaccion S SELECCIONADOS?", "MANTENIMIENTO DE Parametro Transaccion ", JOptionPane.OK_CANCEL_OPTION) == 0) {
						//this.startProcessParametroFactuTransaccion();
				
						this.actualizarParametrosGeneralParametroFactuTransaccion();
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {						
							this.parametrofactutransaccionReturnGeneral=parametrofactutransaccionLogic.procesarAccionParametroFactuTransaccionsWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,sTipoAccionLocal,this.parametrofactutransaccionLogic.getParametroFactuTransaccions(),this.parametrofactutransaccionParameterGeneral);
						
						} else if(Constantes.ISUSAEJBREMOTE) {
						
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
						this.procesarParametroFactuTransaccionReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesParametroFactuTransaccion.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxTiposAccionesFormularioParametroFactuTransaccion.setSelectedIndex(0);					
					}
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}				
			} 
			else {
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					this.actualizarParametrosGeneralParametroFactuTransaccion();
					
					ParametroFactuTransaccionBeanSwingJInternalFrameAdditional.ProcesarAccion(reporte.getsCodigo(),reporte.getsDescripcion(),this);
					
					this.procesarParametroFactuTransaccionReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesParametroFactuTransaccion.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxTiposAccionesFormularioParametroFactuTransaccion.setSelectedIndex(0);					
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}
			}
		} catch(Exception e) {
			this.esRecargarFks=false;
			
			FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
		
		}  finally {
      		//this.finishProcessParametroFactuTransaccion(conSplash);
      	}
	}
	
	public void jComboBoxTiposRelacionesParametroFactuTransaccionActionListener(ActionEvent evt) throws Exception {    				
		Boolean conSplash=true;
		
		try {			
			this.startProcessParametroFactuTransaccion();
			
			if(this.jInternalFrameDetalleFormParametroFactuTransaccion==null) { //if(!this.conCargarFormDetalle) {			
				this.inicializarFormDetalle();
			}
			
			ArrayList<ParametroFactuTransaccion> parametrofactutransaccionsSeleccionados=new ArrayList<ParametroFactuTransaccion>();		
			ParametroFactuTransaccion parametrofactutransaccion=new ParametroFactuTransaccion();
			
			int rowIndex=-1;//CON ESTO SE DESHABILITA SELECCION POR INDICE
			
			this.inicializarActualizarBindingParametroFactuTransaccion(false,false);
			
			Reporte reporte=new Reporte();
			
			
			reporte=(Reporte)this.jComboBoxTiposRelacionesParametroFactuTransaccion.getSelectedItem();
			
			
			
			
			parametrofactutransaccionsSeleccionados=this.getParametroFactuTransaccionsSeleccionados(true);
			//this.sTipoAccion;
			
			if(parametrofactutransaccionsSeleccionados.size()==1) {
				for(ParametroFactuTransaccion parametrofactutransaccionAux:parametrofactutransaccionsSeleccionados) {
					parametrofactutransaccion=parametrofactutransaccionAux;
				}
				
				if(this.sTipoAccion.equals("NONE")) {
				
				}
				
			} else {
				JOptionPane.showMessageDialog(this,"SELECCIONE SOLO UN REGISTRO","RELACIONES",JOptionPane.ERROR_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.finishProcessParametroFactuTransaccion();
			
      		//this.finishProcessParametroFactuTransaccion(conSplash);
      	}
	}
			
	public static Boolean EsProcesoReporte(String sTipoProceso) throws Exception {
		Boolean esProcesoAccionRepoorte=false;

		if(sTipoProceso.contains("REPORTE_")) {
			 esProcesoAccionRepoorte=true;
		}

		return esProcesoAccionRepoorte;
	}
	
	public void procesarParametroFactuTransaccionReturnGeneral() throws Exception {
		if(this.parametrofactutransaccionReturnGeneral.getConRetornoEstaProcesado()) {
			JOptionPane.showMessageDialog(this,this.parametrofactutransaccionReturnGeneral.getsMensajeProceso(),"PROCESO",JOptionPane.INFORMATION_MESSAGE);
		}
		
		if(this.parametrofactutransaccionReturnGeneral.getConMostrarMensaje()) {
			JOptionPane.showMessageDialog(this,this.parametrofactutransaccionReturnGeneral.getsMensajeProceso(),"PROCESO",FuncionesSwing.getColorSelectedBackground(this.parametrofactutransaccionReturnGeneral.getsTipoMensaje()));
		}
		
		if(this.parametrofactutransaccionReturnGeneral.getConRecargarInformacion()) {
			this.procesarBusqueda(this.sAccionBusqueda);
			
			this.inicializarActualizarBindingParametroFactuTransaccion(false);
		}
		
		if(this.parametrofactutransaccionReturnGeneral.getConRetornoLista() || this.parametrofactutransaccionReturnGeneral.getConRetornoObjeto()) {
			if(this.parametrofactutransaccionReturnGeneral.getConRetornoLista()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.parametrofactutransaccionLogic.setParametroFactuTransaccions(this.parametrofactutransaccionReturnGeneral.getParametroFactuTransaccions());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			if(this.parametrofactutransaccionReturnGeneral.getConRetornoObjeto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.parametrofactutransaccionLogic.setParametroFactuTransaccion(this.parametrofactutransaccionReturnGeneral.getParametroFactuTransaccion());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			this.inicializarActualizarBindingParametroFactuTransaccion(false);
		}
	}
	
	public void actualizarParametrosGeneralParametroFactuTransaccion() throws Exception {
		
		
	}
	
	public ArrayList<ParametroFactuTransaccion> getParametroFactuTransaccionsSeleccionados(Boolean conSeleccionarTodosAutomatico) throws Exception {
		ArrayList<ParametroFactuTransaccion> parametrofactutransaccionsSeleccionados=new ArrayList<ParametroFactuTransaccion>();
		Boolean existe=false;
		
		if(!this.esParaAccionDesdeFormularioParametroFactuTransaccion) {
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				
				for(ParametroFactuTransaccion parametrofactutransaccionAux:parametrofactutransaccionLogic.getParametroFactuTransaccions()) {
					if(parametrofactutransaccionAux.getIsSelected()) {
						parametrofactutransaccionsSeleccionados.add(parametrofactutransaccionAux);				
					}
				}
				
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(ParametroFactuTransaccion parametrofactutransaccionAux:this.parametrofactutransaccions) {
					if(parametrofactutransaccionAux.getIsSelected()) {
						parametrofactutransaccionsSeleccionados.add(parametrofactutransaccionAux);				
					}
				}
			}
			
			if(parametrofactutransaccionsSeleccionados.size()>0) {
				existe=true;
			}
			
			//SI NO ESTA NINGUNO SELECCIONADO SE SELECCIONA TODOS
			if(!existe) {
				if(conSeleccionarTodosAutomatico) {
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						parametrofactutransaccionsSeleccionados.addAll(this.parametrofactutransaccionLogic.getParametroFactuTransaccions());
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						parametrofactutransaccionsSeleccionados.addAll(this.parametrofactutransaccions);				
					}
				}
			}
		} else {
			parametrofactutransaccionsSeleccionados.add(this.parametrofactutransaccion);
		}
		
		return parametrofactutransaccionsSeleccionados;
	}
	
	public void actualizarVariablesTipoReporte(Boolean esReporteNormal,Boolean esReporteDinamico,Boolean esReporteAccionProceso,String sPath) {
		if(esReporteNormal) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=false;
			
		} else if(esReporteAccionProceso) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=true;
			
		} else if(esReporteDinamico) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=true;
			this.esReporteAccionProceso=false;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");			
		}
	}
	
	public void generarReporteParametroFactuTransaccionsSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoReporte.equals("NORMAL") || this.sTipoReporte.equals("FORMULARIO")) {
			existe=true;								
			this.generarReporteNormalParametroFactuTransaccionsSeleccionados();
			
		} else if(this.sTipoReporte.equals("DINAMICO")) {
			existe=true;
			this.mostrarReporteDinamicoParametroFactuTransaccionsSeleccionados();
			
		} else if(this.sTipoReporte.equals("GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoParametroFactuTransaccionsSeleccionados(false);
			
		} else if(this.sTipoReporte.equals("TOTALES_GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoParametroFactuTransaccionsSeleccionados(true);
		}
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE REPORTE VALIDO","REPORTE DE Parametro Transaccion ",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void generarReporteRelacionesParametroFactuTransaccionsSeleccionados() throws Exception {
		ArrayList<ParametroFactuTransaccion> parametrofactutransaccionsSeleccionados=new ArrayList<ParametroFactuTransaccion>();		
		
		parametrofactutransaccionsSeleccionados=this.getParametroFactuTransaccionsSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
					
		//this.sTipoReporteExtra="MasterRelaciones";
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		
		this.generarReporteParametroFactuTransaccions("Todos",parametrofactutransaccionsSeleccionados);
		
	}	
	
	public void generarReporteNormalParametroFactuTransaccionsSeleccionados() throws Exception {
		ArrayList<ParametroFactuTransaccion> parametrofactutransaccionsSeleccionados=new ArrayList<ParametroFactuTransaccion>();		
		
		parametrofactutransaccionsSeleccionados=this.getParametroFactuTransaccionsSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
								
		if(this.sTipoReporte.equals("FORMULARIO")) {
			this.sTipoReporteExtra="Vertical";					
		}
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.generarReporteParametroFactuTransaccions("Todos",parametrofactutransaccionsSeleccionados);
	}		
	
	public void generarReporteProcesoAccionParametroFactuTransaccionsSeleccionados(String sProcesoReporte) throws Exception {
		ArrayList<ParametroFactuTransaccion> parametrofactutransaccionsSeleccionados=new ArrayList<ParametroFactuTransaccion>();
		
		parametrofactutransaccionsSeleccionados=this.getParametroFactuTransaccionsSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(false,false,true,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.sTipoReporteExtra=sProcesoReporte.toLowerCase();
		
		this.esReporteAccionProceso=true;
		this.generarReporteParametroFactuTransaccions("Todos",parametrofactutransaccionsSeleccionados);
		this.esReporteAccionProceso=false;
	}
	
	
	public void mostrarReporteDinamicoParametroFactuTransaccionsSeleccionados() throws Exception {
		ArrayList<ParametroFactuTransaccion> parametrofactutransaccionsSeleccionados=new ArrayList<ParametroFactuTransaccion>();		
		
		
		this.abrirInicializarFrameReporteDinamicoParametroFactuTransaccion();
		
		
		parametrofactutransaccionsSeleccionados=this.getParametroFactuTransaccionsSeleccionados(true);
		
		this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirFrameReporteDinamicoParametroFactuTransaccion();
		
		
		//this.generarReporteParametroFactuTransaccions("Todos",parametrofactutransaccionsSeleccionados ,parametrofactutransaccionImplementable,parametrofactutransaccionImplementableHome);
	}
	
	public void mostrarImportacionParametroFactuTransaccions() throws Exception {
		//this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirInicializarFrameImportacionParametroFactuTransaccion();
		
		this.abrirFrameImportacionParametroFactuTransaccion();		
		
			
		//this.generarReporteParametroFactuTransaccions("Todos",parametrofactutransaccionsSeleccionados ,parametrofactutransaccionImplementable,parametrofactutransaccionImplementableHome);
	}
	
	public void importarParametroFactuTransaccions() throws Exception {		
	
	}
	
	public void exportarParametroFactuTransaccionsSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoArchivoReporte.equals("EXCEL")) {
			existe=true;
			this.exportarExcelParametroFactuTransaccionsSeleccionados();
			
		} else if(this.sTipoArchivoReporte.equals("TEXTO")) {
			existe=true;
			this.exportarTextoParametroFactuTransaccionsSeleccionados();
		
		} else if(this.sTipoArchivoReporte.equals("XML")) {
			existe=true;
			this.exportarXmlParametroFactuTransaccionsSeleccionados();
		} 
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE ARCHIVO VALIDO","EXPORTACION DE Parametro Transaccion ",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void exportarTextoParametroFactuTransaccionsSeleccionados() throws Exception {
		ArrayList<ParametroFactuTransaccion> parametrofactutransaccionsSeleccionados=new ArrayList<ParametroFactuTransaccion>();		
		
		parametrofactutransaccionsSeleccionados=this.getParametroFactuTransaccionsSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"parametrofactutransaccion."+"txt";//Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario);
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		BufferedWriter bufferedWriter = null;
		FileWriter fileWriter=null;
		
		fileWriter=new FileWriter(sPath);
		
		bufferedWriter = new BufferedWriter(fileWriter);
		
		try {
			if(conCabecera) {
				sFilaCabecera=this.getFilaCabeceraExportarParametroFactuTransaccion(sDelimiter);
				
				bufferedWriter.write(sFilaCabecera);
			}				
			
			for(ParametroFactuTransaccion parametrofactutransaccionAux:parametrofactutransaccionsSeleccionados) {
				sFilaDatos=this.getFilaDatosExportarParametroFactuTransaccion(parametrofactutransaccionAux,sDelimiter);
				
				bufferedWriter.write(sFilaDatos);
				
				//parametrofactutransaccionAux.setsDetalleGeneralEntityReporte(parametrofactutransaccionAux.toString());			
			}
			
			bufferedWriter.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.parametrofactutransaccionSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Parametro Transaccion ",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {
       		if (bufferedWriter != null) {
				bufferedWriter.close();
			}
		}
	}
	
	public String getFilaCabeceraExportarParametroFactuTransaccion(String sDelimiter) {
		String sFilaCabecera="";
		
		
		sFilaCabecera+=ParametroFactuTransaccionConstantesFunciones.LABEL_ID;

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuTransaccionConstantesFunciones.LABEL_VERSIONROW;
		}

		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuTransaccionConstantesFunciones.LABEL_IDEMPRESA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuTransaccionConstantesFunciones.LABEL_IDSUCURSAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONINVENFACTURA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONINVENNOTACREDITO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONINVENNOTAVENTA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONCUENTACOFACTURA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONCUENTACONOTACREDITO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONCUENTACONOTAVENTA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONCUENTACOTARJETA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONCUENTAPAFACTURA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONCUENTAPANOTACREDITO;
		
		return sFilaCabecera;
	}
	
	public String getFilaDatosExportarParametroFactuTransaccion(ParametroFactuTransaccion parametrofactutransaccion,String sDelimiter) {
		String sFilaDatos="";
		
		sFilaDatos+="\r\n";
		
		
		sFilaDatos+=parametrofactutransaccion.getId().toString();

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactutransaccion.getVersionRow().toString();
		}

		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactutransaccion.getempresa_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactutransaccion.getsucursal_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactutransaccion.gettransaccioninvenfactura_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactutransaccion.gettransaccioninvennotacredito_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactutransaccion.gettransaccioninvennotaventa_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactutransaccion.gettransaccioncuentacofactura_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactutransaccion.gettransaccioncuentaconotacredito_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactutransaccion.gettransaccioncuentaconotaventa_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactutransaccion.gettransaccioncuentacotarjeta_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactutransaccion.gettransaccioncuentapafactura_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactutransaccion.gettransaccioncuentapanotacredito_descripcion();
		
		return sFilaDatos;
	}
	
	//@SuppressWarnings("deprecation")
	public void exportarExcelParametroFactuTransaccionsSeleccionados() throws Exception {
		ArrayList<ParametroFactuTransaccion> parametrofactutransaccionsSeleccionados=new ArrayList<ParametroFactuTransaccion>();		
		
		parametrofactutransaccionsSeleccionados=this.getParametroFactuTransaccionsSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"parametrofactutransaccion.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		FileOutputStream fileOutputStream=null;
		
		try {
			HSSFWorkbook workbook = new HSSFWorkbook();
			HSSFSheet sheet = workbook.createSheet("ParametroFactuTransaccions");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			HSSFRow row = sheet.createRow(iRow);
			HSSFCell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");

			if(conCabecera) {
				this.getFilaCabeceraExportarExcelParametroFactuTransaccion(row);				
				iRow++;
			}				
			
			for(ParametroFactuTransaccion parametrofactutransaccionAux:parametrofactutransaccionsSeleccionados) {
				row = sheet.createRow(iRow);
				
				this.getFilaDatosExportarExcelParametroFactuTransaccion(parametrofactutransaccionAux,row);
				
				iRow++;
			}
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.parametrofactutransaccionSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Parametro Transaccion ",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}
	}		
	
	public void exportarXmlParametroFactuTransaccionsSeleccionados() throws Exception {
		ArrayList<ParametroFactuTransaccion> parametrofactutransaccionsSeleccionados=new ArrayList<ParametroFactuTransaccion>();		
		
		parametrofactutransaccionsSeleccionados=this.getParametroFactuTransaccionsSeleccionados(true);
		
		//String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		//Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		//String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"parametrofactutransaccion.xml";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		DocumentBuilderFactory documentBuilderFactory=null;
		DocumentBuilder documentBuilder =null;
		
		try {
			documentBuilderFactory = DocumentBuilderFactory.newInstance();
			documentBuilder = documentBuilderFactory.newDocumentBuilder();
	
			Document document = documentBuilder.newDocument();
			Element elementRoot = document.createElement("parametrofactutransaccions");
			
			document.appendChild(elementRoot);
		    			
												
			Element element = null;//document.createElement("parametrofactutransaccion");
			//elementRoot.appendChild(element);
		
			for(ParametroFactuTransaccion parametrofactutransaccionAux:parametrofactutransaccionsSeleccionados) {
				element = document.createElement("parametrofactutransaccion");
				elementRoot.appendChild(element);
			
				this.setFilaDatosExportarXmlParametroFactuTransaccion(parametrofactutransaccionAux,document,element);
			}
			
			TransformerFactory transformerFactory = TransformerFactory.newInstance();
			Transformer transformer = transformerFactory.newTransformer();
			DOMSource domSource = new DOMSource(document);
			
			StreamResult streamResult = new StreamResult(new File(sPath));
	
			transformer.transform(domSource, streamResult);
						
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.parametrofactutransaccionSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Parametro Transaccion ",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			       				
		}
	}	
	
	//@SuppressWarnings("deprecation")
	public void getFilaCabeceraExportarExcelParametroFactuTransaccion(HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuTransaccionConstantesFunciones.LABEL_ID);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuTransaccionConstantesFunciones.LABEL_VERSIONROW);
		}

		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuTransaccionConstantesFunciones.LABEL_IDEMPRESA);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuTransaccionConstantesFunciones.LABEL_IDSUCURSAL);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONINVENFACTURA);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONINVENNOTACREDITO);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONINVENNOTAVENTA);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONCUENTACOFACTURA);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONCUENTACONOTACREDITO);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONCUENTACONOTAVENTA);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONCUENTACOTARJETA);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONCUENTAPAFACTURA);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONCUENTAPANOTACREDITO);
	}
	
	//@SuppressWarnings("deprecation")
	public void getFilaDatosExportarExcelParametroFactuTransaccion(ParametroFactuTransaccion parametrofactutransaccion,HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactutransaccion.getId());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactutransaccion.getempresa_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactutransaccion.getsucursal_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactutransaccion.gettransaccioninvenfactura_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactutransaccion.gettransaccioninvennotacredito_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactutransaccion.gettransaccioninvennotaventa_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactutransaccion.gettransaccioncuentacofactura_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactutransaccion.gettransaccioncuentaconotacredito_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactutransaccion.gettransaccioncuentaconotaventa_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactutransaccion.gettransaccioncuentacotarjeta_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactutransaccion.gettransaccioncuentapafactura_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactutransaccion.gettransaccioncuentapanotacredito_descripcion());				
	}
	
	public void setFilaDatosExportarXmlParametroFactuTransaccion(ParametroFactuTransaccion parametrofactutransaccion,Document document,Element element) {
		/*
		Element lastname = document.createElement("lastname");
		lastname.appendChild(document.createTextNode("mook kim"));
		element.appendChild(lastname);
		*/
		

		Element elementId = document.createElement(ParametroFactuTransaccionConstantesFunciones.ID);
		elementId.appendChild(document.createTextNode(parametrofactutransaccion.getId().toString().trim()));
		element.appendChild(elementId);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){

		Element elementVersionRow = document.createElement(ParametroFactuTransaccionConstantesFunciones.VERSIONROW);
		elementVersionRow.appendChild(document.createTextNode(parametrofactutransaccion.getVersionRow().toString().trim()));
		element.appendChild(elementVersionRow);
		}


		Element elementempresa_descripcion = document.createElement(ParametroFactuTransaccionConstantesFunciones.IDEMPRESA);
		elementempresa_descripcion.appendChild(document.createTextNode(parametrofactutransaccion.getempresa_descripcion()));
		element.appendChild(elementempresa_descripcion);

		Element elementsucursal_descripcion = document.createElement(ParametroFactuTransaccionConstantesFunciones.IDSUCURSAL);
		elementsucursal_descripcion.appendChild(document.createTextNode(parametrofactutransaccion.getsucursal_descripcion()));
		element.appendChild(elementsucursal_descripcion);

		Element elementtransaccioninvenfactura_descripcion = document.createElement(ParametroFactuTransaccionConstantesFunciones.IDTRANSACCIONINVENFACTURA);
		elementtransaccioninvenfactura_descripcion.appendChild(document.createTextNode(parametrofactutransaccion.gettransaccioninvenfactura_descripcion()));
		element.appendChild(elementtransaccioninvenfactura_descripcion);

		Element elementtransaccioninvennotacredito_descripcion = document.createElement(ParametroFactuTransaccionConstantesFunciones.IDTRANSACCIONINVENNOTACREDITO);
		elementtransaccioninvennotacredito_descripcion.appendChild(document.createTextNode(parametrofactutransaccion.gettransaccioninvennotacredito_descripcion()));
		element.appendChild(elementtransaccioninvennotacredito_descripcion);

		Element elementtransaccioninvennotaventa_descripcion = document.createElement(ParametroFactuTransaccionConstantesFunciones.IDTRANSACCIONINVENNOTAVENTA);
		elementtransaccioninvennotaventa_descripcion.appendChild(document.createTextNode(parametrofactutransaccion.gettransaccioninvennotaventa_descripcion()));
		element.appendChild(elementtransaccioninvennotaventa_descripcion);

		Element elementtransaccioncuentacofactura_descripcion = document.createElement(ParametroFactuTransaccionConstantesFunciones.IDTRANSACCIONCUENTACOFACTURA);
		elementtransaccioncuentacofactura_descripcion.appendChild(document.createTextNode(parametrofactutransaccion.gettransaccioncuentacofactura_descripcion()));
		element.appendChild(elementtransaccioncuentacofactura_descripcion);

		Element elementtransaccioncuentaconotacredito_descripcion = document.createElement(ParametroFactuTransaccionConstantesFunciones.IDTRANSACCIONCUENTACONOTACREDITO);
		elementtransaccioncuentaconotacredito_descripcion.appendChild(document.createTextNode(parametrofactutransaccion.gettransaccioncuentaconotacredito_descripcion()));
		element.appendChild(elementtransaccioncuentaconotacredito_descripcion);

		Element elementtransaccioncuentaconotaventa_descripcion = document.createElement(ParametroFactuTransaccionConstantesFunciones.IDTRANSACCIONCUENTACONOTAVENTA);
		elementtransaccioncuentaconotaventa_descripcion.appendChild(document.createTextNode(parametrofactutransaccion.gettransaccioncuentaconotaventa_descripcion()));
		element.appendChild(elementtransaccioncuentaconotaventa_descripcion);

		Element elementtransaccioncuentacotarjeta_descripcion = document.createElement(ParametroFactuTransaccionConstantesFunciones.IDTRANSACCIONCUENTACOTARJETA);
		elementtransaccioncuentacotarjeta_descripcion.appendChild(document.createTextNode(parametrofactutransaccion.gettransaccioncuentacotarjeta_descripcion()));
		element.appendChild(elementtransaccioncuentacotarjeta_descripcion);

		Element elementtransaccioncuentapafactura_descripcion = document.createElement(ParametroFactuTransaccionConstantesFunciones.IDTRANSACCIONCUENTAPAFACTURA);
		elementtransaccioncuentapafactura_descripcion.appendChild(document.createTextNode(parametrofactutransaccion.gettransaccioncuentapafactura_descripcion()));
		element.appendChild(elementtransaccioncuentapafactura_descripcion);

		Element elementtransaccioncuentapanotacredito_descripcion = document.createElement(ParametroFactuTransaccionConstantesFunciones.IDTRANSACCIONCUENTAPANOTACREDITO);
		elementtransaccioncuentapanotacredito_descripcion.appendChild(document.createTextNode(parametrofactutransaccion.gettransaccioncuentapanotacredito_descripcion()));
		element.appendChild(elementtransaccioncuentapanotacredito_descripcion);
	}
	
	public void generarReporteGroupGenericoParametroFactuTransaccionsSeleccionados(Boolean soloTotales) throws Exception {
		ArrayList<ParametroFactuTransaccion> parametrofactutransaccionsSeleccionados=new ArrayList<ParametroFactuTransaccion>();
		
		parametrofactutransaccionsSeleccionados=this.getParametroFactuTransaccionsSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!soloTotales) {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_GENERICO;
		} else {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_TOTALES_GENERICO;
		}
		
		this.setColumnaDescripcionReporteGroupGenericoParametroFactuTransaccion(parametrofactutransaccionsSeleccionados);
		
		this.generarReporteParametroFactuTransaccions("Todos",parametrofactutransaccionsSeleccionados);
	}
	
	public void setColumnaDescripcionReporteGroupGenericoParametroFactuTransaccion(ArrayList<ParametroFactuTransaccion> parametrofactutransaccionsSeleccionados) throws Exception {    		
		try {
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			
			Boolean existe=false;
			
			for(ParametroFactuTransaccion parametrofactutransaccionAux:parametrofactutransaccionsSeleccionados) {
				parametrofactutransaccionAux.setsDetalleGeneralEntityReporte(parametrofactutransaccionAux.toString());
			
				if(sTipoSeleccionar.equals(ParametroFactuTransaccionConstantesFunciones.LABEL_IDEMPRESA)) {
					existe=true;
					parametrofactutransaccionAux.setsDescripcionGeneralEntityReporte1(parametrofactutransaccionAux.getempresa_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroFactuTransaccionConstantesFunciones.LABEL_IDSUCURSAL)) {
					existe=true;
					parametrofactutransaccionAux.setsDescripcionGeneralEntityReporte1(parametrofactutransaccionAux.getsucursal_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONINVENFACTURA)) {
					existe=true;
					parametrofactutransaccionAux.setsDescripcionGeneralEntityReporte1(parametrofactutransaccionAux.gettransaccioninvenfactura_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONINVENNOTACREDITO)) {
					existe=true;
					parametrofactutransaccionAux.setsDescripcionGeneralEntityReporte1(parametrofactutransaccionAux.gettransaccioninvennotacredito_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONINVENNOTAVENTA)) {
					existe=true;
					parametrofactutransaccionAux.setsDescripcionGeneralEntityReporte1(parametrofactutransaccionAux.gettransaccioninvennotaventa_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONCUENTACOFACTURA)) {
					existe=true;
					parametrofactutransaccionAux.setsDescripcionGeneralEntityReporte1(parametrofactutransaccionAux.gettransaccioncuentacofactura_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONCUENTACONOTACREDITO)) {
					existe=true;
					parametrofactutransaccionAux.setsDescripcionGeneralEntityReporte1(parametrofactutransaccionAux.gettransaccioncuentaconotacredito_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONCUENTACONOTAVENTA)) {
					existe=true;
					parametrofactutransaccionAux.setsDescripcionGeneralEntityReporte1(parametrofactutransaccionAux.gettransaccioncuentaconotaventa_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONCUENTACOTARJETA)) {
					existe=true;
					parametrofactutransaccionAux.setsDescripcionGeneralEntityReporte1(parametrofactutransaccionAux.gettransaccioncuentacotarjeta_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONCUENTAPAFACTURA)) {
					existe=true;
					parametrofactutransaccionAux.setsDescripcionGeneralEntityReporte1(parametrofactutransaccionAux.gettransaccioncuentapafactura_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroFactuTransaccionConstantesFunciones.LABEL_IDTRANSACCIONCUENTAPANOTACREDITO)) {
					existe=true;
					parametrofactutransaccionAux.setsDescripcionGeneralEntityReporte1(parametrofactutransaccionAux.gettransaccioncuentapanotacredito_descripcion());
				}
			}	
											
			if(!existe) {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}										
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuTransaccionConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void actualizarEstadoCeldasBotonesParametroFactuTransaccion(String sAccion,Boolean isGuardarCambiosEnLote,Boolean isEsMantenimientoRelacionado) throws Exception {
		if(sAccion=="n") {
			if(!this.esParaBusquedaForeignKey) {
				this.isVisibilidadCeldaNuevoParametroFactuTransaccion=true;
				this.isVisibilidadCeldaNuevoRelacionesParametroFactuTransaccion=true;
				this.isVisibilidadCeldaGuardarCambiosParametroFactuTransaccion=true;
			}
			
			this.isVisibilidadCeldaModificarParametroFactuTransaccion=false;
			this.isVisibilidadCeldaActualizarParametroFactuTransaccion=false;
			this.isVisibilidadCeldaEliminarParametroFactuTransaccion=false;
			this.isVisibilidadCeldaCancelarParametroFactuTransaccion=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarParametroFactuTransaccion=true;
				} else {
					this.isVisibilidadCeldaGuardarParametroFactuTransaccion=false;
				}
			}
		} else if(sAccion=="a") {
			this.isVisibilidadCeldaNuevoParametroFactuTransaccion=false;
			this.isVisibilidadCeldaNuevoRelacionesParametroFactuTransaccion=false;
			this.isVisibilidadCeldaGuardarCambiosParametroFactuTransaccion=false;
			this.isVisibilidadCeldaModificarParametroFactuTransaccion=false;
			this.isVisibilidadCeldaActualizarParametroFactuTransaccion=true;
			this.isVisibilidadCeldaEliminarParametroFactuTransaccion=false;
			this.isVisibilidadCeldaCancelarParametroFactuTransaccion=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarParametroFactuTransaccion=true;
				} else {
					this.isVisibilidadCeldaGuardarParametroFactuTransaccion=false;
				}
			}
		} else if(sAccion=="ae") {
			this.isVisibilidadCeldaNuevoParametroFactuTransaccion=false;
			this.isVisibilidadCeldaNuevoRelacionesParametroFactuTransaccion=false;
			this.isVisibilidadCeldaGuardarCambiosParametroFactuTransaccion=false;
			this.isVisibilidadCeldaModificarParametroFactuTransaccion=false;
			this.isVisibilidadCeldaActualizarParametroFactuTransaccion=true;
			this.isVisibilidadCeldaEliminarParametroFactuTransaccion=true;
			this.isVisibilidadCeldaCancelarParametroFactuTransaccion=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarParametroFactuTransaccion=true;
				} else {
					this.isVisibilidadCeldaGuardarParametroFactuTransaccion=false;
				}
			}
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {
			this.isVisibilidadCeldaNuevoParametroFactuTransaccion=false;
			this.isVisibilidadCeldaNuevoRelacionesParametroFactuTransaccion=false;
			this.isVisibilidadCeldaGuardarCambiosParametroFactuTransaccion=false;
			this.isVisibilidadCeldaModificarParametroFactuTransaccion=false;
			this.isVisibilidadCeldaActualizarParametroFactuTransaccion=true;
			this.isVisibilidadCeldaEliminarParametroFactuTransaccion=false;
			this.isVisibilidadCeldaCancelarParametroFactuTransaccion=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarParametroFactuTransaccion=false;
				} else {
					this.isVisibilidadCeldaGuardarParametroFactuTransaccion=false;
				}
			}
		} else if(sAccion=="c") {
			this.isVisibilidadCeldaNuevoParametroFactuTransaccion=true;
			this.isVisibilidadCeldaNuevoRelacionesParametroFactuTransaccion=true;
			this.isVisibilidadCeldaGuardarCambiosParametroFactuTransaccion=true;
			this.isVisibilidadCeldaModificarParametroFactuTransaccion=false;
			this.isVisibilidadCeldaActualizarParametroFactuTransaccion=false;
			this.isVisibilidadCeldaEliminarParametroFactuTransaccion=false;
			this.isVisibilidadCeldaCancelarParametroFactuTransaccion=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarParametroFactuTransaccion=true;
				} else {
					this.isVisibilidadCeldaGuardarParametroFactuTransaccion=false;
				}
			}
		} else if(sAccion=="t") {
			this.isVisibilidadCeldaNuevoParametroFactuTransaccion=false;
			this.isVisibilidadCeldaNuevoRelacionesParametroFactuTransaccion=false;
			this.isVisibilidadCeldaGuardarCambiosParametroFactuTransaccion=false;
			this.isVisibilidadCeldaActualizarParametroFactuTransaccion=false;
			this.isVisibilidadCeldaEliminarParametroFactuTransaccion=false;
			this.isVisibilidadCeldaCancelarParametroFactuTransaccion=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarParametroFactuTransaccion=false;
				} else {
					this.isVisibilidadCeldaGuardarParametroFactuTransaccion=false;
				}
			}
		}  else if(sAccion=="s"||sAccion=="s2") {
			this.isVisibilidadCeldaNuevoParametroFactuTransaccion=false;
			this.isVisibilidadCeldaNuevoRelacionesParametroFactuTransaccion=false;
			this.isVisibilidadCeldaGuardarCambiosParametroFactuTransaccion=false;
			this.isVisibilidadCeldaModificarParametroFactuTransaccion=true;
			this.isVisibilidadCeldaActualizarParametroFactuTransaccion=false;
			this.isVisibilidadCeldaEliminarParametroFactuTransaccion=false;
			this.isVisibilidadCeldaCancelarParametroFactuTransaccion=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarParametroFactuTransaccion=false;
				} else {
					this.isVisibilidadCeldaGuardarParametroFactuTransaccion=false;
				}
			}
		}
		
		//ACTUALIZA VISIBILIDAD PANELES
		if(ParametroFactuTransaccionJInternalFrame.CON_DATOS_FRAME && !this.esParaBusquedaForeignKey) {
			//SIEMPRE VISIBLE
			this.isVisibilidadCeldaNuevoParametroFactuTransaccion=true;
			this.isVisibilidadCeldaNuevoRelacionesParametroFactuTransaccion=true;
			this.isVisibilidadCeldaGuardarCambiosParametroFactuTransaccion=true;
		} else {
			this.actualizarEstadoPanelsParametroFactuTransaccion(sAccion);						
		}
		
		if(this.esParaBusquedaForeignKey) {
			this.isVisibilidadCeldaCopiarParametroFactuTransaccion=false;
			//this.isVisibilidadCeldaVerFormParametroFactuTransaccion=false;
			this.isVisibilidadCeldaDuplicarParametroFactuTransaccion=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONES
		if(!parametrofactutransaccionSessionBean.getConGuardarRelaciones()) {
			this.isVisibilidadCeldaNuevoRelacionesParametroFactuTransaccion=false;
		} else {
			this.isVisibilidadCeldaNuevoParametroFactuTransaccion=false;
			this.isVisibilidadCeldaGuardarCambiosParametroFactuTransaccion=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONADO
		if(parametrofactutransaccionSessionBean.getEsGuardarRelacionado()) {
			if(!parametrofactutransaccionSessionBean.getConGuardarRelaciones()) {	
				this.isVisibilidadCeldaNuevoRelacionesParametroFactuTransaccion=false;												
			}
			
			this.jButtonCerrarParametroFactuTransaccion.setVisible(false);
		}
		
		//SI NO TIENE MAXIMO DE RELACIONES PERMITIDAS
		if(!this.conMaximoRelaciones) {
			this.isVisibilidadCeldaNuevoRelacionesParametroFactuTransaccion=false;
		}
		
		if(!this.permiteMantenimiento(this.parametrofactutransaccion)) {
			this.isVisibilidadCeldaActualizarParametroFactuTransaccion=false;
			this.isVisibilidadCeldaEliminarParametroFactuTransaccion=false;
		}
		
		
		
	}
	
	public void actualizarEstadoCeldasBotonesConGuardarRelacionesParametroFactuTransaccion() {
	}
	
	public void actualizarEstadoPanelsParametroFactuTransaccion(String sAccion) {
		if(sAccion=="n") {
			if(this.jScrollPanelDatosEdicionParametroFactuTransaccion!=null) {
				this.jScrollPanelDatosEdicionParametroFactuTransaccion.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasParametroFactuTransaccion!=null) {
				this.jTabbedPaneBusquedasParametroFactuTransaccion.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosParametroFactuTransaccion!=null) {
				this.jScrollPanelDatosParametroFactuTransaccion.setVisible(true);
			}
			
			if(this.jPanelPaginacionParametroFactuTransaccion!=null) {
				this.jPanelPaginacionParametroFactuTransaccion.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesParametroFactuTransaccion!=null) {
				this.jPanelParametrosReportesParametroFactuTransaccion.setVisible(true);		    
			}
			
		} else if(sAccion=="a") {				
			if(this.jScrollPanelDatosEdicionParametroFactuTransaccion!=null) {
				this.jScrollPanelDatosEdicionParametroFactuTransaccion.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasParametroFactuTransaccion!=null) {
				this.jTabbedPaneBusquedasParametroFactuTransaccion.setVisible(false);			
			}
			
			
			
			if(this.jScrollPanelDatosParametroFactuTransaccion!=null) {
				this.jScrollPanelDatosParametroFactuTransaccion.setVisible(false);
			}
			
			if(this.jPanelPaginacionParametroFactuTransaccion!=null) {
				this.jPanelPaginacionParametroFactuTransaccion.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesParametroFactuTransaccion!=null) {
				this.jPanelParametrosReportesParametroFactuTransaccion.setVisible(false);
			}
						
		} else if(sAccion=="ae") {		
			if(this.jScrollPanelDatosEdicionParametroFactuTransaccion!=null) {
				this.jScrollPanelDatosEdicionParametroFactuTransaccion.setVisible(true);		
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasParametroFactuTransaccion!=null) {
				this.jTabbedPaneBusquedasParametroFactuTransaccion.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosParametroFactuTransaccion!=null) {
				this.jScrollPanelDatosParametroFactuTransaccion.setVisible(false);
			}
			
			if(this.jPanelPaginacionParametroFactuTransaccion!=null) {
				this.jPanelPaginacionParametroFactuTransaccion.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesParametroFactuTransaccion!=null) {
				this.jPanelParametrosReportesParametroFactuTransaccion.setVisible(false);
			}
						
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {	
			if(this.jScrollPanelDatosEdicionParametroFactuTransaccion!=null) {
				this.jScrollPanelDatosEdicionParametroFactuTransaccion.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasParametroFactuTransaccion!=null) {
				this.jTabbedPaneBusquedasParametroFactuTransaccion.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosParametroFactuTransaccion!=null) {
				this.jScrollPanelDatosParametroFactuTransaccion.setVisible(false);
			}
			
			if(this.jPanelPaginacionParametroFactuTransaccion!=null) {
				this.jPanelPaginacionParametroFactuTransaccion.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesParametroFactuTransaccion!=null) {
				this.jPanelParametrosReportesParametroFactuTransaccion.setVisible(false);
			}
						
		} else if(sAccion=="c") {	
			if(this.jScrollPanelDatosEdicionParametroFactuTransaccion!=null) {
				this.jScrollPanelDatosEdicionParametroFactuTransaccion.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasParametroFactuTransaccion!=null) {
				this.jTabbedPaneBusquedasParametroFactuTransaccion.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosParametroFactuTransaccion!=null) {
				this.jScrollPanelDatosParametroFactuTransaccion.setVisible(true);
			}
			
			if(this.jPanelPaginacionParametroFactuTransaccion!=null) {
				this.jPanelPaginacionParametroFactuTransaccion.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesParametroFactuTransaccion!=null) {
				this.jPanelParametrosReportesParametroFactuTransaccion.setVisible(true);
			}
						
		} else if(sAccion=="t") {
			
			if(this.jScrollPanelDatosEdicionParametroFactuTransaccion!=null) {
				this.jScrollPanelDatosEdicionParametroFactuTransaccion.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasParametroFactuTransaccion!=null) {
				this.jTabbedPaneBusquedasParametroFactuTransaccion.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosParametroFactuTransaccion!=null) {
				this.jScrollPanelDatosParametroFactuTransaccion.setVisible(true);
			}
			
			if(this.jPanelPaginacionParametroFactuTransaccion!=null) {
				this.jPanelPaginacionParametroFactuTransaccion.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesParametroFactuTransaccion!=null) {
				this.jPanelParametrosReportesParametroFactuTransaccion.setVisible(true);
			}
						
		}  else if(sAccion=="s"||sAccion=="s2") {
			if(this.jScrollPanelDatosEdicionParametroFactuTransaccion!=null) {
				this.jScrollPanelDatosEdicionParametroFactuTransaccion.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasParametroFactuTransaccion!=null) {
				this.jTabbedPaneBusquedasParametroFactuTransaccion.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosParametroFactuTransaccion!=null) {
				this.jScrollPanelDatosParametroFactuTransaccion.setVisible(true);
			}
			
			if(this.jPanelPaginacionParametroFactuTransaccion!=null) {
				this.jPanelPaginacionParametroFactuTransaccion.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesParametroFactuTransaccion!=null) {
				this.jPanelParametrosReportesParametroFactuTransaccion.setVisible(true);
			}
			
		} 
		
		if(sAccion.equals("relacionado") || this.parametrofactutransaccionSessionBean.getEsGuardarRelacionado()) {
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				if(this.jTabbedPaneBusquedasParametroFactuTransaccion!=null) {
					this.jTabbedPaneBusquedasParametroFactuTransaccion.setVisible(false);				
				}
				
			}
			
			if(this.jPanelParametrosReportesParametroFactuTransaccion!=null) {
				this.jPanelParametrosReportesParametroFactuTransaccion.setVisible(false);
			}
		
		} else if(sAccion.equals("no_relacionado") && !this.parametrofactutransaccionSessionBean.getEsGuardarRelacionado()) {
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasParametroFactuTransaccion!=null) {
				this.jTabbedPaneBusquedasParametroFactuTransaccion.setVisible(true);			
			}
			
			if(this.jPanelParametrosReportesParametroFactuTransaccion!=null) {
				this.jPanelParametrosReportesParametroFactuTransaccion.setVisible(true);
			}
		}
	}	
	
	

	public void setVisibilidadBusquedasParaEmpresa(Boolean isParaEmpresa){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEmpresaNegation=!isParaEmpresa;

			this.isVisibilidadFK_IdTransaccionCuentaCoFactura=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaCoFactura) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionCuentaCoFacturaParametroFactuTransaccion);}

			this.isVisibilidadFK_IdTransaccionCuentaCoNotaCredito=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaCoNotaCredito) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionCuentaCoNotaCreditoParametroFactuTransaccion);}

			this.isVisibilidadFK_IdTransaccionCuentaCoNotaVenta=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaCoNotaVenta) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionCuentaCoNotaVentaParametroFactuTransaccion);}

			this.isVisibilidadFK_IdTransaccionCuentaCoTarjeta=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaCoTarjeta) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionCuentaCoTarjetaParametroFactuTransaccion);}

			this.isVisibilidadFK_IdTransaccionCuentaPaFactura=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaPaFactura) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionCuentaPaFacturaParametroFactuTransaccion);}

			this.isVisibilidadFK_IdTransaccionCuentaPaNotaCredito=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaPaNotaCredito) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionCuentaPaNotaCreditoParametroFactuTransaccion);}

			this.isVisibilidadFK_IdTransaccionInvenFactura=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTransaccionInvenFactura) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionInvenFacturaParametroFactuTransaccion);}

			this.isVisibilidadFK_IdTransaccionInvenNotaCredito=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTransaccionInvenNotaCredito) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionInvenNotaCreditoParametroFactuTransaccion);}

			this.isVisibilidadFK_IdTransaccionInvenNotaVenta=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTransaccionInvenNotaVenta) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionInvenNotaVentaParametroFactuTransaccion);}
		}
		
	}

	public void setVisibilidadBusquedasParaSucursal(Boolean isParaSucursal){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaSucursalNegation=!isParaSucursal;

			this.isVisibilidadFK_IdTransaccionCuentaCoFactura=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaCoFactura) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionCuentaCoFacturaParametroFactuTransaccion);}

			this.isVisibilidadFK_IdTransaccionCuentaCoNotaCredito=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaCoNotaCredito) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionCuentaCoNotaCreditoParametroFactuTransaccion);}

			this.isVisibilidadFK_IdTransaccionCuentaCoNotaVenta=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaCoNotaVenta) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionCuentaCoNotaVentaParametroFactuTransaccion);}

			this.isVisibilidadFK_IdTransaccionCuentaCoTarjeta=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaCoTarjeta) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionCuentaCoTarjetaParametroFactuTransaccion);}

			this.isVisibilidadFK_IdTransaccionCuentaPaFactura=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaPaFactura) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionCuentaPaFacturaParametroFactuTransaccion);}

			this.isVisibilidadFK_IdTransaccionCuentaPaNotaCredito=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaPaNotaCredito) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionCuentaPaNotaCreditoParametroFactuTransaccion);}

			this.isVisibilidadFK_IdTransaccionInvenFactura=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTransaccionInvenFactura) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionInvenFacturaParametroFactuTransaccion);}

			this.isVisibilidadFK_IdTransaccionInvenNotaCredito=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTransaccionInvenNotaCredito) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionInvenNotaCreditoParametroFactuTransaccion);}

			this.isVisibilidadFK_IdTransaccionInvenNotaVenta=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTransaccionInvenNotaVenta) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionInvenNotaVentaParametroFactuTransaccion);}
		}
		
	}

	public void setVisibilidadBusquedasParaTransaccionInvenFactura(Boolean isParaTransaccionInvenFactura){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTransaccionInvenFacturaNegation=!isParaTransaccionInvenFactura;

			this.isVisibilidadFK_IdTransaccionCuentaCoFactura=isParaTransaccionInvenFacturaNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaCoFactura) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionCuentaCoFacturaParametroFactuTransaccion);}

			this.isVisibilidadFK_IdTransaccionCuentaCoNotaCredito=isParaTransaccionInvenFacturaNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaCoNotaCredito) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionCuentaCoNotaCreditoParametroFactuTransaccion);}

			this.isVisibilidadFK_IdTransaccionCuentaCoNotaVenta=isParaTransaccionInvenFacturaNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaCoNotaVenta) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionCuentaCoNotaVentaParametroFactuTransaccion);}

			this.isVisibilidadFK_IdTransaccionCuentaCoTarjeta=isParaTransaccionInvenFacturaNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaCoTarjeta) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionCuentaCoTarjetaParametroFactuTransaccion);}

			this.isVisibilidadFK_IdTransaccionCuentaPaFactura=isParaTransaccionInvenFacturaNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaPaFactura) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionCuentaPaFacturaParametroFactuTransaccion);}

			this.isVisibilidadFK_IdTransaccionCuentaPaNotaCredito=isParaTransaccionInvenFacturaNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaPaNotaCredito) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionCuentaPaNotaCreditoParametroFactuTransaccion);}

			this.isVisibilidadFK_IdTransaccionInvenFactura=isParaTransaccionInvenFactura;
			if(!this.isVisibilidadFK_IdTransaccionInvenFactura) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionInvenFacturaParametroFactuTransaccion);}

			this.isVisibilidadFK_IdTransaccionInvenNotaCredito=isParaTransaccionInvenFacturaNegation;
			if(!this.isVisibilidadFK_IdTransaccionInvenNotaCredito) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionInvenNotaCreditoParametroFactuTransaccion);}

			this.isVisibilidadFK_IdTransaccionInvenNotaVenta=isParaTransaccionInvenFacturaNegation;
			if(!this.isVisibilidadFK_IdTransaccionInvenNotaVenta) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionInvenNotaVentaParametroFactuTransaccion);}
		}
		
	}

	public void setVisibilidadBusquedasParaTransaccionInvenNotaCredito(Boolean isParaTransaccionInvenNotaCredito){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTransaccionInvenNotaCreditoNegation=!isParaTransaccionInvenNotaCredito;

			this.isVisibilidadFK_IdTransaccionCuentaCoFactura=isParaTransaccionInvenNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaCoFactura) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionCuentaCoFacturaParametroFactuTransaccion);}

			this.isVisibilidadFK_IdTransaccionCuentaCoNotaCredito=isParaTransaccionInvenNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaCoNotaCredito) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionCuentaCoNotaCreditoParametroFactuTransaccion);}

			this.isVisibilidadFK_IdTransaccionCuentaCoNotaVenta=isParaTransaccionInvenNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaCoNotaVenta) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionCuentaCoNotaVentaParametroFactuTransaccion);}

			this.isVisibilidadFK_IdTransaccionCuentaCoTarjeta=isParaTransaccionInvenNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaCoTarjeta) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionCuentaCoTarjetaParametroFactuTransaccion);}

			this.isVisibilidadFK_IdTransaccionCuentaPaFactura=isParaTransaccionInvenNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaPaFactura) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionCuentaPaFacturaParametroFactuTransaccion);}

			this.isVisibilidadFK_IdTransaccionCuentaPaNotaCredito=isParaTransaccionInvenNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaPaNotaCredito) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionCuentaPaNotaCreditoParametroFactuTransaccion);}

			this.isVisibilidadFK_IdTransaccionInvenFactura=isParaTransaccionInvenNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdTransaccionInvenFactura) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionInvenFacturaParametroFactuTransaccion);}

			this.isVisibilidadFK_IdTransaccionInvenNotaCredito=isParaTransaccionInvenNotaCredito;
			if(!this.isVisibilidadFK_IdTransaccionInvenNotaCredito) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionInvenNotaCreditoParametroFactuTransaccion);}

			this.isVisibilidadFK_IdTransaccionInvenNotaVenta=isParaTransaccionInvenNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdTransaccionInvenNotaVenta) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionInvenNotaVentaParametroFactuTransaccion);}
		}
		
	}

	public void setVisibilidadBusquedasParaTransaccionInvenNotaVenta(Boolean isParaTransaccionInvenNotaVenta){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTransaccionInvenNotaVentaNegation=!isParaTransaccionInvenNotaVenta;

			this.isVisibilidadFK_IdTransaccionCuentaCoFactura=isParaTransaccionInvenNotaVentaNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaCoFactura) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionCuentaCoFacturaParametroFactuTransaccion);}

			this.isVisibilidadFK_IdTransaccionCuentaCoNotaCredito=isParaTransaccionInvenNotaVentaNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaCoNotaCredito) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionCuentaCoNotaCreditoParametroFactuTransaccion);}

			this.isVisibilidadFK_IdTransaccionCuentaCoNotaVenta=isParaTransaccionInvenNotaVentaNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaCoNotaVenta) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionCuentaCoNotaVentaParametroFactuTransaccion);}

			this.isVisibilidadFK_IdTransaccionCuentaCoTarjeta=isParaTransaccionInvenNotaVentaNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaCoTarjeta) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionCuentaCoTarjetaParametroFactuTransaccion);}

			this.isVisibilidadFK_IdTransaccionCuentaPaFactura=isParaTransaccionInvenNotaVentaNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaPaFactura) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionCuentaPaFacturaParametroFactuTransaccion);}

			this.isVisibilidadFK_IdTransaccionCuentaPaNotaCredito=isParaTransaccionInvenNotaVentaNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaPaNotaCredito) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionCuentaPaNotaCreditoParametroFactuTransaccion);}

			this.isVisibilidadFK_IdTransaccionInvenFactura=isParaTransaccionInvenNotaVentaNegation;
			if(!this.isVisibilidadFK_IdTransaccionInvenFactura) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionInvenFacturaParametroFactuTransaccion);}

			this.isVisibilidadFK_IdTransaccionInvenNotaCredito=isParaTransaccionInvenNotaVentaNegation;
			if(!this.isVisibilidadFK_IdTransaccionInvenNotaCredito) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionInvenNotaCreditoParametroFactuTransaccion);}

			this.isVisibilidadFK_IdTransaccionInvenNotaVenta=isParaTransaccionInvenNotaVenta;
			if(!this.isVisibilidadFK_IdTransaccionInvenNotaVenta) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionInvenNotaVentaParametroFactuTransaccion);}
		}
		
	}

	public void setVisibilidadBusquedasParaTransaccionCuentaCoFactura(Boolean isParaTransaccionCuentaCoFactura){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTransaccionCuentaCoFacturaNegation=!isParaTransaccionCuentaCoFactura;

			this.isVisibilidadFK_IdTransaccionCuentaCoFactura=isParaTransaccionCuentaCoFactura;
			if(!this.isVisibilidadFK_IdTransaccionCuentaCoFactura) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionCuentaCoFacturaParametroFactuTransaccion);}

			this.isVisibilidadFK_IdTransaccionCuentaCoNotaCredito=isParaTransaccionCuentaCoFacturaNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaCoNotaCredito) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionCuentaCoNotaCreditoParametroFactuTransaccion);}

			this.isVisibilidadFK_IdTransaccionCuentaCoNotaVenta=isParaTransaccionCuentaCoFacturaNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaCoNotaVenta) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionCuentaCoNotaVentaParametroFactuTransaccion);}

			this.isVisibilidadFK_IdTransaccionCuentaCoTarjeta=isParaTransaccionCuentaCoFacturaNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaCoTarjeta) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionCuentaCoTarjetaParametroFactuTransaccion);}

			this.isVisibilidadFK_IdTransaccionCuentaPaFactura=isParaTransaccionCuentaCoFacturaNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaPaFactura) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionCuentaPaFacturaParametroFactuTransaccion);}

			this.isVisibilidadFK_IdTransaccionCuentaPaNotaCredito=isParaTransaccionCuentaCoFacturaNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaPaNotaCredito) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionCuentaPaNotaCreditoParametroFactuTransaccion);}

			this.isVisibilidadFK_IdTransaccionInvenFactura=isParaTransaccionCuentaCoFacturaNegation;
			if(!this.isVisibilidadFK_IdTransaccionInvenFactura) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionInvenFacturaParametroFactuTransaccion);}

			this.isVisibilidadFK_IdTransaccionInvenNotaCredito=isParaTransaccionCuentaCoFacturaNegation;
			if(!this.isVisibilidadFK_IdTransaccionInvenNotaCredito) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionInvenNotaCreditoParametroFactuTransaccion);}

			this.isVisibilidadFK_IdTransaccionInvenNotaVenta=isParaTransaccionCuentaCoFacturaNegation;
			if(!this.isVisibilidadFK_IdTransaccionInvenNotaVenta) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionInvenNotaVentaParametroFactuTransaccion);}
		}
		
	}

	public void setVisibilidadBusquedasParaTransaccionCuentaCoNotaCredito(Boolean isParaTransaccionCuentaCoNotaCredito){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTransaccionCuentaCoNotaCreditoNegation=!isParaTransaccionCuentaCoNotaCredito;

			this.isVisibilidadFK_IdTransaccionCuentaCoFactura=isParaTransaccionCuentaCoNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaCoFactura) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionCuentaCoFacturaParametroFactuTransaccion);}

			this.isVisibilidadFK_IdTransaccionCuentaCoNotaCredito=isParaTransaccionCuentaCoNotaCredito;
			if(!this.isVisibilidadFK_IdTransaccionCuentaCoNotaCredito) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionCuentaCoNotaCreditoParametroFactuTransaccion);}

			this.isVisibilidadFK_IdTransaccionCuentaCoNotaVenta=isParaTransaccionCuentaCoNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaCoNotaVenta) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionCuentaCoNotaVentaParametroFactuTransaccion);}

			this.isVisibilidadFK_IdTransaccionCuentaCoTarjeta=isParaTransaccionCuentaCoNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaCoTarjeta) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionCuentaCoTarjetaParametroFactuTransaccion);}

			this.isVisibilidadFK_IdTransaccionCuentaPaFactura=isParaTransaccionCuentaCoNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaPaFactura) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionCuentaPaFacturaParametroFactuTransaccion);}

			this.isVisibilidadFK_IdTransaccionCuentaPaNotaCredito=isParaTransaccionCuentaCoNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaPaNotaCredito) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionCuentaPaNotaCreditoParametroFactuTransaccion);}

			this.isVisibilidadFK_IdTransaccionInvenFactura=isParaTransaccionCuentaCoNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdTransaccionInvenFactura) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionInvenFacturaParametroFactuTransaccion);}

			this.isVisibilidadFK_IdTransaccionInvenNotaCredito=isParaTransaccionCuentaCoNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdTransaccionInvenNotaCredito) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionInvenNotaCreditoParametroFactuTransaccion);}

			this.isVisibilidadFK_IdTransaccionInvenNotaVenta=isParaTransaccionCuentaCoNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdTransaccionInvenNotaVenta) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionInvenNotaVentaParametroFactuTransaccion);}
		}
		
	}

	public void setVisibilidadBusquedasParaTransaccionCuentaCoNotaVenta(Boolean isParaTransaccionCuentaCoNotaVenta){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTransaccionCuentaCoNotaVentaNegation=!isParaTransaccionCuentaCoNotaVenta;

			this.isVisibilidadFK_IdTransaccionCuentaCoFactura=isParaTransaccionCuentaCoNotaVentaNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaCoFactura) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionCuentaCoFacturaParametroFactuTransaccion);}

			this.isVisibilidadFK_IdTransaccionCuentaCoNotaCredito=isParaTransaccionCuentaCoNotaVentaNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaCoNotaCredito) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionCuentaCoNotaCreditoParametroFactuTransaccion);}

			this.isVisibilidadFK_IdTransaccionCuentaCoNotaVenta=isParaTransaccionCuentaCoNotaVenta;
			if(!this.isVisibilidadFK_IdTransaccionCuentaCoNotaVenta) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionCuentaCoNotaVentaParametroFactuTransaccion);}

			this.isVisibilidadFK_IdTransaccionCuentaCoTarjeta=isParaTransaccionCuentaCoNotaVentaNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaCoTarjeta) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionCuentaCoTarjetaParametroFactuTransaccion);}

			this.isVisibilidadFK_IdTransaccionCuentaPaFactura=isParaTransaccionCuentaCoNotaVentaNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaPaFactura) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionCuentaPaFacturaParametroFactuTransaccion);}

			this.isVisibilidadFK_IdTransaccionCuentaPaNotaCredito=isParaTransaccionCuentaCoNotaVentaNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaPaNotaCredito) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionCuentaPaNotaCreditoParametroFactuTransaccion);}

			this.isVisibilidadFK_IdTransaccionInvenFactura=isParaTransaccionCuentaCoNotaVentaNegation;
			if(!this.isVisibilidadFK_IdTransaccionInvenFactura) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionInvenFacturaParametroFactuTransaccion);}

			this.isVisibilidadFK_IdTransaccionInvenNotaCredito=isParaTransaccionCuentaCoNotaVentaNegation;
			if(!this.isVisibilidadFK_IdTransaccionInvenNotaCredito) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionInvenNotaCreditoParametroFactuTransaccion);}

			this.isVisibilidadFK_IdTransaccionInvenNotaVenta=isParaTransaccionCuentaCoNotaVentaNegation;
			if(!this.isVisibilidadFK_IdTransaccionInvenNotaVenta) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionInvenNotaVentaParametroFactuTransaccion);}
		}
		
	}

	public void setVisibilidadBusquedasParaTransaccionCuentaCoTarjeta(Boolean isParaTransaccionCuentaCoTarjeta){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTransaccionCuentaCoTarjetaNegation=!isParaTransaccionCuentaCoTarjeta;

			this.isVisibilidadFK_IdTransaccionCuentaCoFactura=isParaTransaccionCuentaCoTarjetaNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaCoFactura) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionCuentaCoFacturaParametroFactuTransaccion);}

			this.isVisibilidadFK_IdTransaccionCuentaCoNotaCredito=isParaTransaccionCuentaCoTarjetaNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaCoNotaCredito) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionCuentaCoNotaCreditoParametroFactuTransaccion);}

			this.isVisibilidadFK_IdTransaccionCuentaCoNotaVenta=isParaTransaccionCuentaCoTarjetaNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaCoNotaVenta) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionCuentaCoNotaVentaParametroFactuTransaccion);}

			this.isVisibilidadFK_IdTransaccionCuentaCoTarjeta=isParaTransaccionCuentaCoTarjeta;
			if(!this.isVisibilidadFK_IdTransaccionCuentaCoTarjeta) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionCuentaCoTarjetaParametroFactuTransaccion);}

			this.isVisibilidadFK_IdTransaccionCuentaPaFactura=isParaTransaccionCuentaCoTarjetaNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaPaFactura) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionCuentaPaFacturaParametroFactuTransaccion);}

			this.isVisibilidadFK_IdTransaccionCuentaPaNotaCredito=isParaTransaccionCuentaCoTarjetaNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaPaNotaCredito) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionCuentaPaNotaCreditoParametroFactuTransaccion);}

			this.isVisibilidadFK_IdTransaccionInvenFactura=isParaTransaccionCuentaCoTarjetaNegation;
			if(!this.isVisibilidadFK_IdTransaccionInvenFactura) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionInvenFacturaParametroFactuTransaccion);}

			this.isVisibilidadFK_IdTransaccionInvenNotaCredito=isParaTransaccionCuentaCoTarjetaNegation;
			if(!this.isVisibilidadFK_IdTransaccionInvenNotaCredito) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionInvenNotaCreditoParametroFactuTransaccion);}

			this.isVisibilidadFK_IdTransaccionInvenNotaVenta=isParaTransaccionCuentaCoTarjetaNegation;
			if(!this.isVisibilidadFK_IdTransaccionInvenNotaVenta) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionInvenNotaVentaParametroFactuTransaccion);}
		}
		
	}

	public void setVisibilidadBusquedasParaTransaccionCuentaPaFactura(Boolean isParaTransaccionCuentaPaFactura){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTransaccionCuentaPaFacturaNegation=!isParaTransaccionCuentaPaFactura;

			this.isVisibilidadFK_IdTransaccionCuentaCoFactura=isParaTransaccionCuentaPaFacturaNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaCoFactura) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionCuentaCoFacturaParametroFactuTransaccion);}

			this.isVisibilidadFK_IdTransaccionCuentaCoNotaCredito=isParaTransaccionCuentaPaFacturaNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaCoNotaCredito) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionCuentaCoNotaCreditoParametroFactuTransaccion);}

			this.isVisibilidadFK_IdTransaccionCuentaCoNotaVenta=isParaTransaccionCuentaPaFacturaNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaCoNotaVenta) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionCuentaCoNotaVentaParametroFactuTransaccion);}

			this.isVisibilidadFK_IdTransaccionCuentaCoTarjeta=isParaTransaccionCuentaPaFacturaNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaCoTarjeta) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionCuentaCoTarjetaParametroFactuTransaccion);}

			this.isVisibilidadFK_IdTransaccionCuentaPaFactura=isParaTransaccionCuentaPaFactura;
			if(!this.isVisibilidadFK_IdTransaccionCuentaPaFactura) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionCuentaPaFacturaParametroFactuTransaccion);}

			this.isVisibilidadFK_IdTransaccionCuentaPaNotaCredito=isParaTransaccionCuentaPaFacturaNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaPaNotaCredito) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionCuentaPaNotaCreditoParametroFactuTransaccion);}

			this.isVisibilidadFK_IdTransaccionInvenFactura=isParaTransaccionCuentaPaFacturaNegation;
			if(!this.isVisibilidadFK_IdTransaccionInvenFactura) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionInvenFacturaParametroFactuTransaccion);}

			this.isVisibilidadFK_IdTransaccionInvenNotaCredito=isParaTransaccionCuentaPaFacturaNegation;
			if(!this.isVisibilidadFK_IdTransaccionInvenNotaCredito) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionInvenNotaCreditoParametroFactuTransaccion);}

			this.isVisibilidadFK_IdTransaccionInvenNotaVenta=isParaTransaccionCuentaPaFacturaNegation;
			if(!this.isVisibilidadFK_IdTransaccionInvenNotaVenta) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionInvenNotaVentaParametroFactuTransaccion);}
		}
		
	}

	public void setVisibilidadBusquedasParaTransaccionCuentaPaNotaCredito(Boolean isParaTransaccionCuentaPaNotaCredito){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTransaccionCuentaPaNotaCreditoNegation=!isParaTransaccionCuentaPaNotaCredito;

			this.isVisibilidadFK_IdTransaccionCuentaCoFactura=isParaTransaccionCuentaPaNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaCoFactura) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionCuentaCoFacturaParametroFactuTransaccion);}

			this.isVisibilidadFK_IdTransaccionCuentaCoNotaCredito=isParaTransaccionCuentaPaNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaCoNotaCredito) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionCuentaCoNotaCreditoParametroFactuTransaccion);}

			this.isVisibilidadFK_IdTransaccionCuentaCoNotaVenta=isParaTransaccionCuentaPaNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaCoNotaVenta) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionCuentaCoNotaVentaParametroFactuTransaccion);}

			this.isVisibilidadFK_IdTransaccionCuentaCoTarjeta=isParaTransaccionCuentaPaNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaCoTarjeta) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionCuentaCoTarjetaParametroFactuTransaccion);}

			this.isVisibilidadFK_IdTransaccionCuentaPaFactura=isParaTransaccionCuentaPaNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaPaFactura) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionCuentaPaFacturaParametroFactuTransaccion);}

			this.isVisibilidadFK_IdTransaccionCuentaPaNotaCredito=isParaTransaccionCuentaPaNotaCredito;
			if(!this.isVisibilidadFK_IdTransaccionCuentaPaNotaCredito) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionCuentaPaNotaCreditoParametroFactuTransaccion);}

			this.isVisibilidadFK_IdTransaccionInvenFactura=isParaTransaccionCuentaPaNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdTransaccionInvenFactura) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionInvenFacturaParametroFactuTransaccion);}

			this.isVisibilidadFK_IdTransaccionInvenNotaCredito=isParaTransaccionCuentaPaNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdTransaccionInvenNotaCredito) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionInvenNotaCreditoParametroFactuTransaccion);}

			this.isVisibilidadFK_IdTransaccionInvenNotaVenta=isParaTransaccionCuentaPaNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdTransaccionInvenNotaVenta) {this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(jPanelFK_IdTransaccionInvenNotaVentaParametroFactuTransaccion);}
		}
		
	}
	
	
	
	
	
	
	public void guardarDatosBusquedaSession() throws Exception {
		
		//ParametroFactuTransaccionSessionBean parametrofactutransaccionSessionBean=new ParametroFactuTransaccionSessionBean();
		
		if(this.parametrofactutransaccionSessionBean==null) {
			this.parametrofactutransaccionSessionBean=new ParametroFactuTransaccionSessionBean();
		}
		
		this.parametrofactutransaccionSessionBean.setsUltimaBusquedaParametroFactuTransaccion(this.getsAccionBusqueda());
		this.parametrofactutransaccionSessionBean.setiNumeroPaginacion(this.getiNumeroPaginacion());
		this.parametrofactutransaccionSessionBean.setiNumeroPaginacionPagina(this.getiNumeroPaginacionPagina());
		
		if(this.getsAccionBusqueda().equals("Todos")) {
			;
		}
		

		else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
			parametrofactutransaccionSessionBean.setid_empresa(this.getid_empresaFK_IdEmpresa());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
			parametrofactutransaccionSessionBean.setid_sucursal(this.getid_sucursalFK_IdSucursal());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTransaccionCuentaCoFactura")) {
			parametrofactutransaccionSessionBean.setid_transaccion_cuenta_co_factura(this.getid_transaccion_cuenta_co_facturaFK_IdTransaccionCuentaCoFactura());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTransaccionCuentaCoNotaCredito")) {
			parametrofactutransaccionSessionBean.setid_transaccion_cuenta_co_nota_credito(this.getid_transaccion_cuenta_co_nota_creditoFK_IdTransaccionCuentaCoNotaCredito());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTransaccionCuentaCoNotaVenta")) {
			parametrofactutransaccionSessionBean.setid_transaccion_cuenta_co_nota_venta(this.getid_transaccion_cuenta_co_nota_ventaFK_IdTransaccionCuentaCoNotaVenta());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTransaccionCuentaCoTarjeta")) {
			parametrofactutransaccionSessionBean.setid_transaccion_cuenta_co_tarjeta(this.getid_transaccion_cuenta_co_tarjetaFK_IdTransaccionCuentaCoTarjeta());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTransaccionCuentaPaFactura")) {
			parametrofactutransaccionSessionBean.setid_transaccion_cuenta_pa_factura(this.getid_transaccion_cuenta_pa_facturaFK_IdTransaccionCuentaPaFactura());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTransaccionCuentaPaNotaCredito")) {
			parametrofactutransaccionSessionBean.setid_transaccion_cuenta_pa_nota_credito(this.getid_transaccion_cuenta_pa_nota_creditoFK_IdTransaccionCuentaPaNotaCredito());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTransaccionInvenFactura")) {
			parametrofactutransaccionSessionBean.setid_transaccion_inven_factura(this.getid_transaccion_inven_facturaFK_IdTransaccionInvenFactura());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTransaccionInvenNotaCredito")) {
			parametrofactutransaccionSessionBean.setid_transaccion_inven_nota_credito(this.getid_transaccion_inven_nota_creditoFK_IdTransaccionInvenNotaCredito());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTransaccionInvenNotaVenta")) {
			parametrofactutransaccionSessionBean.setid_transaccion_inven_nota_venta(this.getid_transaccion_inven_nota_ventaFK_IdTransaccionInvenNotaVenta());	
		}
		
	}
	
	public void traerDatosBusquedaDesdeSession() throws Exception {
		//ParametroFactuTransaccionSessionBean parametrofactutransaccionSessionBean=new ParametroFactuTransaccionSessionBean();
		
		if(this.parametrofactutransaccionSessionBean==null) {
			this.parametrofactutransaccionSessionBean=new ParametroFactuTransaccionSessionBean();
		}
		
		if(this.parametrofactutransaccionSessionBean.getsUltimaBusquedaParametroFactuTransaccion()!=null&&!this.parametrofactutransaccionSessionBean.getsUltimaBusquedaParametroFactuTransaccion().equals("")) {
			this.setsAccionBusqueda(parametrofactutransaccionSessionBean.getsUltimaBusquedaParametroFactuTransaccion());
			this.setiNumeroPaginacion(parametrofactutransaccionSessionBean.getiNumeroPaginacion());
			this.setiNumeroPaginacionPagina(parametrofactutransaccionSessionBean.getiNumeroPaginacionPagina());		
				
			if(this.getsAccionBusqueda().equals("Todos")) {
				;
			}
			

			 else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
				this.setid_empresaFK_IdEmpresa(parametrofactutransaccionSessionBean.getid_empresa());
				parametrofactutransaccionSessionBean.setid_empresa(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
				this.setid_sucursalFK_IdSucursal(parametrofactutransaccionSessionBean.getid_sucursal());
				parametrofactutransaccionSessionBean.setid_sucursal(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTransaccionCuentaCoFactura")) {
				this.setid_transaccion_cuenta_co_facturaFK_IdTransaccionCuentaCoFactura(parametrofactutransaccionSessionBean.getid_transaccion_cuenta_co_factura());
				parametrofactutransaccionSessionBean.setid_transaccion_cuenta_co_factura(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTransaccionCuentaCoNotaCredito")) {
				this.setid_transaccion_cuenta_co_nota_creditoFK_IdTransaccionCuentaCoNotaCredito(parametrofactutransaccionSessionBean.getid_transaccion_cuenta_co_nota_credito());
				parametrofactutransaccionSessionBean.setid_transaccion_cuenta_co_nota_credito(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTransaccionCuentaCoNotaVenta")) {
				this.setid_transaccion_cuenta_co_nota_ventaFK_IdTransaccionCuentaCoNotaVenta(parametrofactutransaccionSessionBean.getid_transaccion_cuenta_co_nota_venta());
				parametrofactutransaccionSessionBean.setid_transaccion_cuenta_co_nota_venta(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTransaccionCuentaCoTarjeta")) {
				this.setid_transaccion_cuenta_co_tarjetaFK_IdTransaccionCuentaCoTarjeta(parametrofactutransaccionSessionBean.getid_transaccion_cuenta_co_tarjeta());
				parametrofactutransaccionSessionBean.setid_transaccion_cuenta_co_tarjeta(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTransaccionCuentaPaFactura")) {
				this.setid_transaccion_cuenta_pa_facturaFK_IdTransaccionCuentaPaFactura(parametrofactutransaccionSessionBean.getid_transaccion_cuenta_pa_factura());
				parametrofactutransaccionSessionBean.setid_transaccion_cuenta_pa_factura(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTransaccionCuentaPaNotaCredito")) {
				this.setid_transaccion_cuenta_pa_nota_creditoFK_IdTransaccionCuentaPaNotaCredito(parametrofactutransaccionSessionBean.getid_transaccion_cuenta_pa_nota_credito());
				parametrofactutransaccionSessionBean.setid_transaccion_cuenta_pa_nota_credito(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTransaccionInvenFactura")) {
				this.setid_transaccion_inven_facturaFK_IdTransaccionInvenFactura(parametrofactutransaccionSessionBean.getid_transaccion_inven_factura());
				parametrofactutransaccionSessionBean.setid_transaccion_inven_factura(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTransaccionInvenNotaCredito")) {
				this.setid_transaccion_inven_nota_creditoFK_IdTransaccionInvenNotaCredito(parametrofactutransaccionSessionBean.getid_transaccion_inven_nota_credito());
				parametrofactutransaccionSessionBean.setid_transaccion_inven_nota_credito(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTransaccionInvenNotaVenta")) {
				this.setid_transaccion_inven_nota_ventaFK_IdTransaccionInvenNotaVenta(parametrofactutransaccionSessionBean.getid_transaccion_inven_nota_venta());
				parametrofactutransaccionSessionBean.setid_transaccion_inven_nota_venta(-1L);
			}
		}
		
		this.parametrofactutransaccionSessionBean.setsUltimaBusquedaParametroFactuTransaccion("");
		this.parametrofactutransaccionSessionBean.setiNumeroPaginacion(ParametroFactuTransaccionConstantesFunciones.INUMEROPAGINACION);
		this.parametrofactutransaccionSessionBean.setiNumeroPaginacionPagina(0);
		
	}
	
	public void procesoActualizarFilaTotales(Boolean esCampoValor,String sTipo) {
		try {
			this.actualizarFilaTotales();
				
			this.traerValoresTablaTotales();
			
			this.inicializarActualizarBindingTablaParametroFactuTransaccion(false);
			
			
			
			
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	
	public void updateBusquedasFormularioParametroFactuTransaccion() {
		this.updateBorderResaltarBusquedasFormularioParametroFactuTransaccion();
		this.updateVisibilidadBusquedasFormularioParametroFactuTransaccion();
		this.updateHabilitarBusquedasFormularioParametroFactuTransaccion();
	}
	
	public void updateBorderResaltarBusquedasFormularioParametroFactuTransaccion() {					
	//BYDAN_BUSQUEDAS
		
	int index=0;
		
	if(this.jTabbedPaneBusquedasParametroFactuTransaccion.getComponents().length>0) {
	

		if(this.parametrofactutransaccionConstantesFunciones.resaltarFK_IdTransaccionCuentaCoFacturaParametroFactuTransaccion!=null) {
			index= this.jTabbedPaneBusquedasParametroFactuTransaccion.indexOfComponent(this.jPanelFK_IdTransaccionCuentaCoFacturaParametroFactuTransaccion);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuTransaccion.getComponent(index);
				jPanel.setBorder(this.parametrofactutransaccionConstantesFunciones.resaltarFK_IdTransaccionCuentaCoFacturaParametroFactuTransaccion);
			}
		}

		if(this.parametrofactutransaccionConstantesFunciones.resaltarFK_IdTransaccionCuentaCoNotaCreditoParametroFactuTransaccion!=null) {
			index= this.jTabbedPaneBusquedasParametroFactuTransaccion.indexOfComponent(this.jPanelFK_IdTransaccionCuentaCoNotaCreditoParametroFactuTransaccion);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuTransaccion.getComponent(index);
				jPanel.setBorder(this.parametrofactutransaccionConstantesFunciones.resaltarFK_IdTransaccionCuentaCoNotaCreditoParametroFactuTransaccion);
			}
		}

		if(this.parametrofactutransaccionConstantesFunciones.resaltarFK_IdTransaccionCuentaCoNotaVentaParametroFactuTransaccion!=null) {
			index= this.jTabbedPaneBusquedasParametroFactuTransaccion.indexOfComponent(this.jPanelFK_IdTransaccionCuentaCoNotaVentaParametroFactuTransaccion);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuTransaccion.getComponent(index);
				jPanel.setBorder(this.parametrofactutransaccionConstantesFunciones.resaltarFK_IdTransaccionCuentaCoNotaVentaParametroFactuTransaccion);
			}
		}

		if(this.parametrofactutransaccionConstantesFunciones.resaltarFK_IdTransaccionCuentaCoTarjetaParametroFactuTransaccion!=null) {
			index= this.jTabbedPaneBusquedasParametroFactuTransaccion.indexOfComponent(this.jPanelFK_IdTransaccionCuentaCoTarjetaParametroFactuTransaccion);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuTransaccion.getComponent(index);
				jPanel.setBorder(this.parametrofactutransaccionConstantesFunciones.resaltarFK_IdTransaccionCuentaCoTarjetaParametroFactuTransaccion);
			}
		}

		if(this.parametrofactutransaccionConstantesFunciones.resaltarFK_IdTransaccionCuentaPaFacturaParametroFactuTransaccion!=null) {
			index= this.jTabbedPaneBusquedasParametroFactuTransaccion.indexOfComponent(this.jPanelFK_IdTransaccionCuentaPaFacturaParametroFactuTransaccion);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuTransaccion.getComponent(index);
				jPanel.setBorder(this.parametrofactutransaccionConstantesFunciones.resaltarFK_IdTransaccionCuentaPaFacturaParametroFactuTransaccion);
			}
		}

		if(this.parametrofactutransaccionConstantesFunciones.resaltarFK_IdTransaccionCuentaPaNotaCreditoParametroFactuTransaccion!=null) {
			index= this.jTabbedPaneBusquedasParametroFactuTransaccion.indexOfComponent(this.jPanelFK_IdTransaccionCuentaPaNotaCreditoParametroFactuTransaccion);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuTransaccion.getComponent(index);
				jPanel.setBorder(this.parametrofactutransaccionConstantesFunciones.resaltarFK_IdTransaccionCuentaPaNotaCreditoParametroFactuTransaccion);
			}
		}

		if(this.parametrofactutransaccionConstantesFunciones.resaltarFK_IdTransaccionInvenFacturaParametroFactuTransaccion!=null) {
			index= this.jTabbedPaneBusquedasParametroFactuTransaccion.indexOfComponent(this.jPanelFK_IdTransaccionInvenFacturaParametroFactuTransaccion);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuTransaccion.getComponent(index);
				jPanel.setBorder(this.parametrofactutransaccionConstantesFunciones.resaltarFK_IdTransaccionInvenFacturaParametroFactuTransaccion);
			}
		}

		if(this.parametrofactutransaccionConstantesFunciones.resaltarFK_IdTransaccionInvenNotaCreditoParametroFactuTransaccion!=null) {
			index= this.jTabbedPaneBusquedasParametroFactuTransaccion.indexOfComponent(this.jPanelFK_IdTransaccionInvenNotaCreditoParametroFactuTransaccion);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuTransaccion.getComponent(index);
				jPanel.setBorder(this.parametrofactutransaccionConstantesFunciones.resaltarFK_IdTransaccionInvenNotaCreditoParametroFactuTransaccion);
			}
		}

		if(this.parametrofactutransaccionConstantesFunciones.resaltarFK_IdTransaccionInvenNotaVentaParametroFactuTransaccion!=null) {
			index= this.jTabbedPaneBusquedasParametroFactuTransaccion.indexOfComponent(this.jPanelFK_IdTransaccionInvenNotaVentaParametroFactuTransaccion);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuTransaccion.getComponent(index);
				jPanel.setBorder(this.parametrofactutransaccionConstantesFunciones.resaltarFK_IdTransaccionInvenNotaVentaParametroFactuTransaccion);
			}
		}
	}	
	
	}
	
	public void updateVisibilidadBusquedasFormularioParametroFactuTransaccion() {
	//BYDAN_BUSQUEDAS
	
	int index=0;
	JPanel jPanel=null;
		
	if(this.jTabbedPaneBusquedasParametroFactuTransaccion.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasParametroFactuTransaccion.indexOfComponent(this.jPanelFK_IdTransaccionCuentaCoFacturaParametroFactuTransaccion);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuTransaccion.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrofactutransaccionConstantesFunciones.mostrarFK_IdTransaccionCuentaCoFacturaParametroFactuTransaccion);
			if(!this.parametrofactutransaccionConstantesFunciones.mostrarFK_IdTransaccionCuentaCoFacturaParametroFactuTransaccion && index>-1) {
				this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroFactuTransaccion.indexOfComponent(this.jPanelFK_IdTransaccionCuentaCoNotaCreditoParametroFactuTransaccion);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuTransaccion.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrofactutransaccionConstantesFunciones.mostrarFK_IdTransaccionCuentaCoNotaCreditoParametroFactuTransaccion);
			if(!this.parametrofactutransaccionConstantesFunciones.mostrarFK_IdTransaccionCuentaCoNotaCreditoParametroFactuTransaccion && index>-1) {
				this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroFactuTransaccion.indexOfComponent(this.jPanelFK_IdTransaccionCuentaCoNotaVentaParametroFactuTransaccion);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuTransaccion.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrofactutransaccionConstantesFunciones.mostrarFK_IdTransaccionCuentaCoNotaVentaParametroFactuTransaccion);
			if(!this.parametrofactutransaccionConstantesFunciones.mostrarFK_IdTransaccionCuentaCoNotaVentaParametroFactuTransaccion && index>-1) {
				this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroFactuTransaccion.indexOfComponent(this.jPanelFK_IdTransaccionCuentaCoTarjetaParametroFactuTransaccion);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuTransaccion.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrofactutransaccionConstantesFunciones.mostrarFK_IdTransaccionCuentaCoTarjetaParametroFactuTransaccion);
			if(!this.parametrofactutransaccionConstantesFunciones.mostrarFK_IdTransaccionCuentaCoTarjetaParametroFactuTransaccion && index>-1) {
				this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroFactuTransaccion.indexOfComponent(this.jPanelFK_IdTransaccionCuentaPaFacturaParametroFactuTransaccion);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuTransaccion.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrofactutransaccionConstantesFunciones.mostrarFK_IdTransaccionCuentaPaFacturaParametroFactuTransaccion);
			if(!this.parametrofactutransaccionConstantesFunciones.mostrarFK_IdTransaccionCuentaPaFacturaParametroFactuTransaccion && index>-1) {
				this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroFactuTransaccion.indexOfComponent(this.jPanelFK_IdTransaccionCuentaPaNotaCreditoParametroFactuTransaccion);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuTransaccion.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrofactutransaccionConstantesFunciones.mostrarFK_IdTransaccionCuentaPaNotaCreditoParametroFactuTransaccion);
			if(!this.parametrofactutransaccionConstantesFunciones.mostrarFK_IdTransaccionCuentaPaNotaCreditoParametroFactuTransaccion && index>-1) {
				this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroFactuTransaccion.indexOfComponent(this.jPanelFK_IdTransaccionInvenFacturaParametroFactuTransaccion);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuTransaccion.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrofactutransaccionConstantesFunciones.mostrarFK_IdTransaccionInvenFacturaParametroFactuTransaccion);
			if(!this.parametrofactutransaccionConstantesFunciones.mostrarFK_IdTransaccionInvenFacturaParametroFactuTransaccion && index>-1) {
				this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroFactuTransaccion.indexOfComponent(this.jPanelFK_IdTransaccionInvenNotaCreditoParametroFactuTransaccion);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuTransaccion.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrofactutransaccionConstantesFunciones.mostrarFK_IdTransaccionInvenNotaCreditoParametroFactuTransaccion);
			if(!this.parametrofactutransaccionConstantesFunciones.mostrarFK_IdTransaccionInvenNotaCreditoParametroFactuTransaccion && index>-1) {
				this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroFactuTransaccion.indexOfComponent(this.jPanelFK_IdTransaccionInvenNotaVentaParametroFactuTransaccion);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuTransaccion.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrofactutransaccionConstantesFunciones.mostrarFK_IdTransaccionInvenNotaVentaParametroFactuTransaccion);
			if(!this.parametrofactutransaccionConstantesFunciones.mostrarFK_IdTransaccionInvenNotaVentaParametroFactuTransaccion && index>-1) {
				this.jTabbedPaneBusquedasParametroFactuTransaccion.remove(index);
			}
	}	
	
	}
	
	public void updateHabilitarBusquedasFormularioParametroFactuTransaccion() {
	
	//BYDAN_BUSQUEDAS		
		int index=0;
		JPanel jPanel=null;
			
		if(this.jTabbedPaneBusquedasParametroFactuTransaccion.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasParametroFactuTransaccion.indexOfComponent(this.jPanelFK_IdTransaccionCuentaCoFacturaParametroFactuTransaccion);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuTransaccion.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrofactutransaccionConstantesFunciones.activarFK_IdTransaccionCuentaCoFacturaParametroFactuTransaccion);
				this.jTabbedPaneBusquedasParametroFactuTransaccion.setEnabledAt(index,this.parametrofactutransaccionConstantesFunciones.activarFK_IdTransaccionCuentaCoFacturaParametroFactuTransaccion);
			}

			index= this.jTabbedPaneBusquedasParametroFactuTransaccion.indexOfComponent(this.jPanelFK_IdTransaccionCuentaCoNotaCreditoParametroFactuTransaccion);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuTransaccion.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrofactutransaccionConstantesFunciones.activarFK_IdTransaccionCuentaCoNotaCreditoParametroFactuTransaccion);
				this.jTabbedPaneBusquedasParametroFactuTransaccion.setEnabledAt(index,this.parametrofactutransaccionConstantesFunciones.activarFK_IdTransaccionCuentaCoNotaCreditoParametroFactuTransaccion);
			}

			index= this.jTabbedPaneBusquedasParametroFactuTransaccion.indexOfComponent(this.jPanelFK_IdTransaccionCuentaCoNotaVentaParametroFactuTransaccion);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuTransaccion.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrofactutransaccionConstantesFunciones.activarFK_IdTransaccionCuentaCoNotaVentaParametroFactuTransaccion);
				this.jTabbedPaneBusquedasParametroFactuTransaccion.setEnabledAt(index,this.parametrofactutransaccionConstantesFunciones.activarFK_IdTransaccionCuentaCoNotaVentaParametroFactuTransaccion);
			}

			index= this.jTabbedPaneBusquedasParametroFactuTransaccion.indexOfComponent(this.jPanelFK_IdTransaccionCuentaCoTarjetaParametroFactuTransaccion);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuTransaccion.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrofactutransaccionConstantesFunciones.activarFK_IdTransaccionCuentaCoTarjetaParametroFactuTransaccion);
				this.jTabbedPaneBusquedasParametroFactuTransaccion.setEnabledAt(index,this.parametrofactutransaccionConstantesFunciones.activarFK_IdTransaccionCuentaCoTarjetaParametroFactuTransaccion);
			}

			index= this.jTabbedPaneBusquedasParametroFactuTransaccion.indexOfComponent(this.jPanelFK_IdTransaccionCuentaPaFacturaParametroFactuTransaccion);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuTransaccion.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrofactutransaccionConstantesFunciones.activarFK_IdTransaccionCuentaPaFacturaParametroFactuTransaccion);
				this.jTabbedPaneBusquedasParametroFactuTransaccion.setEnabledAt(index,this.parametrofactutransaccionConstantesFunciones.activarFK_IdTransaccionCuentaPaFacturaParametroFactuTransaccion);
			}

			index= this.jTabbedPaneBusquedasParametroFactuTransaccion.indexOfComponent(this.jPanelFK_IdTransaccionCuentaPaNotaCreditoParametroFactuTransaccion);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuTransaccion.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrofactutransaccionConstantesFunciones.activarFK_IdTransaccionCuentaPaNotaCreditoParametroFactuTransaccion);
				this.jTabbedPaneBusquedasParametroFactuTransaccion.setEnabledAt(index,this.parametrofactutransaccionConstantesFunciones.activarFK_IdTransaccionCuentaPaNotaCreditoParametroFactuTransaccion);
			}

			index= this.jTabbedPaneBusquedasParametroFactuTransaccion.indexOfComponent(this.jPanelFK_IdTransaccionInvenFacturaParametroFactuTransaccion);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuTransaccion.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrofactutransaccionConstantesFunciones.activarFK_IdTransaccionInvenFacturaParametroFactuTransaccion);
				this.jTabbedPaneBusquedasParametroFactuTransaccion.setEnabledAt(index,this.parametrofactutransaccionConstantesFunciones.activarFK_IdTransaccionInvenFacturaParametroFactuTransaccion);
			}

			index= this.jTabbedPaneBusquedasParametroFactuTransaccion.indexOfComponent(this.jPanelFK_IdTransaccionInvenNotaCreditoParametroFactuTransaccion);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuTransaccion.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrofactutransaccionConstantesFunciones.activarFK_IdTransaccionInvenNotaCreditoParametroFactuTransaccion);
				this.jTabbedPaneBusquedasParametroFactuTransaccion.setEnabledAt(index,this.parametrofactutransaccionConstantesFunciones.activarFK_IdTransaccionInvenNotaCreditoParametroFactuTransaccion);
			}

			index= this.jTabbedPaneBusquedasParametroFactuTransaccion.indexOfComponent(this.jPanelFK_IdTransaccionInvenNotaVentaParametroFactuTransaccion);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuTransaccion.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrofactutransaccionConstantesFunciones.activarFK_IdTransaccionInvenNotaVentaParametroFactuTransaccion);
				this.jTabbedPaneBusquedasParametroFactuTransaccion.setEnabledAt(index,this.parametrofactutransaccionConstantesFunciones.activarFK_IdTransaccionInvenNotaVentaParametroFactuTransaccion);
			}
		}	
	
	}
	
	
	public void resaltarPanelBusquedaParametroFactuTransaccion(String sTipoBusqueda) {
		Boolean existe=false;
		//BYDAN_BUSQUEDAS
		
		int index=0;
		Border resaltar = Funciones2.getBorderResaltar(this.parametroGeneralUsuario,"TAB");

		if(sTipoBusqueda.equals("FK_IdTransaccionCuentaCoFactura")) {
			index= this.jTabbedPaneBusquedasParametroFactuTransaccion.indexOfComponent(this.jPanelFK_IdTransaccionCuentaCoFacturaParametroFactuTransaccion);

			this.jTabbedPaneBusquedasParametroFactuTransaccion.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuTransaccion.getComponent(index);

			this.parametrofactutransaccionConstantesFunciones.setResaltarFK_IdTransaccionCuentaCoFacturaParametroFactuTransaccion(resaltar);

			jPanel.setBorder(this.parametrofactutransaccionConstantesFunciones.resaltarFK_IdTransaccionCuentaCoFacturaParametroFactuTransaccion);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTransaccionCuentaCoNotaCredito")) {
			index= this.jTabbedPaneBusquedasParametroFactuTransaccion.indexOfComponent(this.jPanelFK_IdTransaccionCuentaCoNotaCreditoParametroFactuTransaccion);

			this.jTabbedPaneBusquedasParametroFactuTransaccion.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuTransaccion.getComponent(index);

			this.parametrofactutransaccionConstantesFunciones.setResaltarFK_IdTransaccionCuentaCoNotaCreditoParametroFactuTransaccion(resaltar);

			jPanel.setBorder(this.parametrofactutransaccionConstantesFunciones.resaltarFK_IdTransaccionCuentaCoNotaCreditoParametroFactuTransaccion);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTransaccionCuentaCoNotaVenta")) {
			index= this.jTabbedPaneBusquedasParametroFactuTransaccion.indexOfComponent(this.jPanelFK_IdTransaccionCuentaCoNotaVentaParametroFactuTransaccion);

			this.jTabbedPaneBusquedasParametroFactuTransaccion.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuTransaccion.getComponent(index);

			this.parametrofactutransaccionConstantesFunciones.setResaltarFK_IdTransaccionCuentaCoNotaVentaParametroFactuTransaccion(resaltar);

			jPanel.setBorder(this.parametrofactutransaccionConstantesFunciones.resaltarFK_IdTransaccionCuentaCoNotaVentaParametroFactuTransaccion);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTransaccionCuentaCoTarjeta")) {
			index= this.jTabbedPaneBusquedasParametroFactuTransaccion.indexOfComponent(this.jPanelFK_IdTransaccionCuentaCoTarjetaParametroFactuTransaccion);

			this.jTabbedPaneBusquedasParametroFactuTransaccion.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuTransaccion.getComponent(index);

			this.parametrofactutransaccionConstantesFunciones.setResaltarFK_IdTransaccionCuentaCoTarjetaParametroFactuTransaccion(resaltar);

			jPanel.setBorder(this.parametrofactutransaccionConstantesFunciones.resaltarFK_IdTransaccionCuentaCoTarjetaParametroFactuTransaccion);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTransaccionCuentaPaFactura")) {
			index= this.jTabbedPaneBusquedasParametroFactuTransaccion.indexOfComponent(this.jPanelFK_IdTransaccionCuentaPaFacturaParametroFactuTransaccion);

			this.jTabbedPaneBusquedasParametroFactuTransaccion.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuTransaccion.getComponent(index);

			this.parametrofactutransaccionConstantesFunciones.setResaltarFK_IdTransaccionCuentaPaFacturaParametroFactuTransaccion(resaltar);

			jPanel.setBorder(this.parametrofactutransaccionConstantesFunciones.resaltarFK_IdTransaccionCuentaPaFacturaParametroFactuTransaccion);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTransaccionCuentaPaNotaCredito")) {
			index= this.jTabbedPaneBusquedasParametroFactuTransaccion.indexOfComponent(this.jPanelFK_IdTransaccionCuentaPaNotaCreditoParametroFactuTransaccion);

			this.jTabbedPaneBusquedasParametroFactuTransaccion.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuTransaccion.getComponent(index);

			this.parametrofactutransaccionConstantesFunciones.setResaltarFK_IdTransaccionCuentaPaNotaCreditoParametroFactuTransaccion(resaltar);

			jPanel.setBorder(this.parametrofactutransaccionConstantesFunciones.resaltarFK_IdTransaccionCuentaPaNotaCreditoParametroFactuTransaccion);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTransaccionInvenFactura")) {
			index= this.jTabbedPaneBusquedasParametroFactuTransaccion.indexOfComponent(this.jPanelFK_IdTransaccionInvenFacturaParametroFactuTransaccion);

			this.jTabbedPaneBusquedasParametroFactuTransaccion.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuTransaccion.getComponent(index);

			this.parametrofactutransaccionConstantesFunciones.setResaltarFK_IdTransaccionInvenFacturaParametroFactuTransaccion(resaltar);

			jPanel.setBorder(this.parametrofactutransaccionConstantesFunciones.resaltarFK_IdTransaccionInvenFacturaParametroFactuTransaccion);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTransaccionInvenNotaCredito")) {
			index= this.jTabbedPaneBusquedasParametroFactuTransaccion.indexOfComponent(this.jPanelFK_IdTransaccionInvenNotaCreditoParametroFactuTransaccion);

			this.jTabbedPaneBusquedasParametroFactuTransaccion.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuTransaccion.getComponent(index);

			this.parametrofactutransaccionConstantesFunciones.setResaltarFK_IdTransaccionInvenNotaCreditoParametroFactuTransaccion(resaltar);

			jPanel.setBorder(this.parametrofactutransaccionConstantesFunciones.resaltarFK_IdTransaccionInvenNotaCreditoParametroFactuTransaccion);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTransaccionInvenNotaVenta")) {
			index= this.jTabbedPaneBusquedasParametroFactuTransaccion.indexOfComponent(this.jPanelFK_IdTransaccionInvenNotaVentaParametroFactuTransaccion);

			this.jTabbedPaneBusquedasParametroFactuTransaccion.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuTransaccion.getComponent(index);

			this.parametrofactutransaccionConstantesFunciones.setResaltarFK_IdTransaccionInvenNotaVentaParametroFactuTransaccion(resaltar);

			jPanel.setBorder(this.parametrofactutransaccionConstantesFunciones.resaltarFK_IdTransaccionInvenNotaVentaParametroFactuTransaccion);
			existe=true;
		}
		

		if(existe) {
			
			this.jTtoolBarParametroFactuTransaccion.setBorder(resaltar);
			
		}
	}	
	
	//NO FUNCIONA
	public void windowClosed(WindowEvent e) {	
	}
		
	public void windowClosing(WindowEvent e) {	    	    
	}

	public void windowOpened(WindowEvent e) {	    
	}

	public void windowIconified(WindowEvent e) {	    
	}

	public void windowDeiconified(WindowEvent e) {	    
	}

	public void windowActivated(WindowEvent e) {	    
	}

	public void windowDeactivated(WindowEvent e) {	    
	}

	public void windowGainedFocus(WindowEvent e) {	    
	}

	public void windowLostFocus(WindowEvent e) {	    
	}
	
	public void updateControlesFormularioParametroFactuTransaccion() throws Exception {

		if(this.jInternalFrameDetalleFormParametroFactuTransaccion==null) { //if(!this.conCargarFormDetalle) {			
			this.inicializarFormDetalle();
		}
		
		this.updateBorderResaltarControlesFormularioParametroFactuTransaccion();
		this.updateVisibilidadResaltarControlesFormularioParametroFactuTransaccion();
		this.updateHabilitarResaltarControlesFormularioParametroFactuTransaccion();
		
	}
	
	public void updateBorderResaltarControlesFormularioParametroFactuTransaccion() throws Exception {
		if(this.jInternalFrameDetalleFormParametroFactuTransaccion==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
	
		if(this.parametrofactutransaccionConstantesFunciones.resaltaridParametroFactuTransaccion!=null && this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) {this.jInternalFrameDetalleFormParametroFactuTransaccion.jLabelidParametroFactuTransaccion.setBorder(this.parametrofactutransaccionConstantesFunciones.resaltaridParametroFactuTransaccion);}
		if(this.parametrofactutransaccionConstantesFunciones.resaltarid_empresaParametroFactuTransaccion!=null && this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) {this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_empresaParametroFactuTransaccion.setBorder(this.parametrofactutransaccionConstantesFunciones.resaltarid_empresaParametroFactuTransaccion);}
		if(this.parametrofactutransaccionConstantesFunciones.resaltarid_sucursalParametroFactuTransaccion!=null && this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) {this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_sucursalParametroFactuTransaccion.setBorder(this.parametrofactutransaccionConstantesFunciones.resaltarid_sucursalParametroFactuTransaccion);}
		if(this.parametrofactutransaccionConstantesFunciones.resaltarid_transaccion_inven_facturaParametroFactuTransaccion!=null && this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) {this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_inven_facturaParametroFactuTransaccion.setBorder(this.parametrofactutransaccionConstantesFunciones.resaltarid_transaccion_inven_facturaParametroFactuTransaccion);}
		if(this.parametrofactutransaccionConstantesFunciones.resaltarid_transaccion_inven_nota_creditoParametroFactuTransaccion!=null && this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) {this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_inven_nota_creditoParametroFactuTransaccion.setBorder(this.parametrofactutransaccionConstantesFunciones.resaltarid_transaccion_inven_nota_creditoParametroFactuTransaccion);}
		if(this.parametrofactutransaccionConstantesFunciones.resaltarid_transaccion_inven_nota_ventaParametroFactuTransaccion!=null && this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) {this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_inven_nota_ventaParametroFactuTransaccion.setBorder(this.parametrofactutransaccionConstantesFunciones.resaltarid_transaccion_inven_nota_ventaParametroFactuTransaccion);}
		if(this.parametrofactutransaccionConstantesFunciones.resaltarid_transaccion_cuenta_co_facturaParametroFactuTransaccion!=null && this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) {this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_cuenta_co_facturaParametroFactuTransaccion.setBorder(this.parametrofactutransaccionConstantesFunciones.resaltarid_transaccion_cuenta_co_facturaParametroFactuTransaccion);}
		if(this.parametrofactutransaccionConstantesFunciones.resaltarid_transaccion_cuenta_co_nota_creditoParametroFactuTransaccion!=null && this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) {this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_cuenta_co_nota_creditoParametroFactuTransaccion.setBorder(this.parametrofactutransaccionConstantesFunciones.resaltarid_transaccion_cuenta_co_nota_creditoParametroFactuTransaccion);}
		if(this.parametrofactutransaccionConstantesFunciones.resaltarid_transaccion_cuenta_co_nota_ventaParametroFactuTransaccion!=null && this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) {this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_cuenta_co_nota_ventaParametroFactuTransaccion.setBorder(this.parametrofactutransaccionConstantesFunciones.resaltarid_transaccion_cuenta_co_nota_ventaParametroFactuTransaccion);}
		if(this.parametrofactutransaccionConstantesFunciones.resaltarid_transaccion_cuenta_co_tarjetaParametroFactuTransaccion!=null && this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) {this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_cuenta_co_tarjetaParametroFactuTransaccion.setBorder(this.parametrofactutransaccionConstantesFunciones.resaltarid_transaccion_cuenta_co_tarjetaParametroFactuTransaccion);}
		if(this.parametrofactutransaccionConstantesFunciones.resaltarid_transaccion_cuenta_pa_facturaParametroFactuTransaccion!=null && this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) {this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_cuenta_pa_facturaParametroFactuTransaccion.setBorder(this.parametrofactutransaccionConstantesFunciones.resaltarid_transaccion_cuenta_pa_facturaParametroFactuTransaccion);}
		if(this.parametrofactutransaccionConstantesFunciones.resaltarid_transaccion_cuenta_pa_nota_creditoParametroFactuTransaccion!=null && this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) {this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_cuenta_pa_nota_creditoParametroFactuTransaccion.setBorder(this.parametrofactutransaccionConstantesFunciones.resaltarid_transaccion_cuenta_pa_nota_creditoParametroFactuTransaccion);}
	}
	
	public void updateVisibilidadResaltarControlesFormularioParametroFactuTransaccion() throws Exception {		
		if(this.jInternalFrameDetalleFormParametroFactuTransaccion==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) {
	
		//this.jInternalFrameDetalleFormParametroFactuTransaccion.jLabelidParametroFactuTransaccion.setVisible(this.parametrofactutransaccionConstantesFunciones.mostraridParametroFactuTransaccion);
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jPanelidParametroFactuTransaccion.setVisible(this.parametrofactutransaccionConstantesFunciones.mostraridParametroFactuTransaccion);
		//this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_empresaParametroFactuTransaccion.setVisible(this.parametrofactutransaccionConstantesFunciones.mostrarid_empresaParametroFactuTransaccion);
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jPanelid_empresaParametroFactuTransaccion.setVisible(this.parametrofactutransaccionConstantesFunciones.mostrarid_empresaParametroFactuTransaccion);
		//this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_sucursalParametroFactuTransaccion.setVisible(this.parametrofactutransaccionConstantesFunciones.mostrarid_sucursalParametroFactuTransaccion);
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jPanelid_sucursalParametroFactuTransaccion.setVisible(this.parametrofactutransaccionConstantesFunciones.mostrarid_sucursalParametroFactuTransaccion);
		//this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_inven_facturaParametroFactuTransaccion.setVisible(this.parametrofactutransaccionConstantesFunciones.mostrarid_transaccion_inven_facturaParametroFactuTransaccion);
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jPanelid_transaccion_inven_facturaParametroFactuTransaccion.setVisible(this.parametrofactutransaccionConstantesFunciones.mostrarid_transaccion_inven_facturaParametroFactuTransaccion);
		//this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_inven_nota_creditoParametroFactuTransaccion.setVisible(this.parametrofactutransaccionConstantesFunciones.mostrarid_transaccion_inven_nota_creditoParametroFactuTransaccion);
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jPanelid_transaccion_inven_nota_creditoParametroFactuTransaccion.setVisible(this.parametrofactutransaccionConstantesFunciones.mostrarid_transaccion_inven_nota_creditoParametroFactuTransaccion);
		//this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_inven_nota_ventaParametroFactuTransaccion.setVisible(this.parametrofactutransaccionConstantesFunciones.mostrarid_transaccion_inven_nota_ventaParametroFactuTransaccion);
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jPanelid_transaccion_inven_nota_ventaParametroFactuTransaccion.setVisible(this.parametrofactutransaccionConstantesFunciones.mostrarid_transaccion_inven_nota_ventaParametroFactuTransaccion);
		//this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_cuenta_co_facturaParametroFactuTransaccion.setVisible(this.parametrofactutransaccionConstantesFunciones.mostrarid_transaccion_cuenta_co_facturaParametroFactuTransaccion);
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jPanelid_transaccion_cuenta_co_facturaParametroFactuTransaccion.setVisible(this.parametrofactutransaccionConstantesFunciones.mostrarid_transaccion_cuenta_co_facturaParametroFactuTransaccion);
		//this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_cuenta_co_nota_creditoParametroFactuTransaccion.setVisible(this.parametrofactutransaccionConstantesFunciones.mostrarid_transaccion_cuenta_co_nota_creditoParametroFactuTransaccion);
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jPanelid_transaccion_cuenta_co_nota_creditoParametroFactuTransaccion.setVisible(this.parametrofactutransaccionConstantesFunciones.mostrarid_transaccion_cuenta_co_nota_creditoParametroFactuTransaccion);
		//this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_cuenta_co_nota_ventaParametroFactuTransaccion.setVisible(this.parametrofactutransaccionConstantesFunciones.mostrarid_transaccion_cuenta_co_nota_ventaParametroFactuTransaccion);
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jPanelid_transaccion_cuenta_co_nota_ventaParametroFactuTransaccion.setVisible(this.parametrofactutransaccionConstantesFunciones.mostrarid_transaccion_cuenta_co_nota_ventaParametroFactuTransaccion);
		//this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_cuenta_co_tarjetaParametroFactuTransaccion.setVisible(this.parametrofactutransaccionConstantesFunciones.mostrarid_transaccion_cuenta_co_tarjetaParametroFactuTransaccion);
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jPanelid_transaccion_cuenta_co_tarjetaParametroFactuTransaccion.setVisible(this.parametrofactutransaccionConstantesFunciones.mostrarid_transaccion_cuenta_co_tarjetaParametroFactuTransaccion);
		//this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_cuenta_pa_facturaParametroFactuTransaccion.setVisible(this.parametrofactutransaccionConstantesFunciones.mostrarid_transaccion_cuenta_pa_facturaParametroFactuTransaccion);
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jPanelid_transaccion_cuenta_pa_facturaParametroFactuTransaccion.setVisible(this.parametrofactutransaccionConstantesFunciones.mostrarid_transaccion_cuenta_pa_facturaParametroFactuTransaccion);
		//this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_cuenta_pa_nota_creditoParametroFactuTransaccion.setVisible(this.parametrofactutransaccionConstantesFunciones.mostrarid_transaccion_cuenta_pa_nota_creditoParametroFactuTransaccion);
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jPanelid_transaccion_cuenta_pa_nota_creditoParametroFactuTransaccion.setVisible(this.parametrofactutransaccionConstantesFunciones.mostrarid_transaccion_cuenta_pa_nota_creditoParametroFactuTransaccion);
		}
	}
	
	public void updateHabilitarResaltarControlesFormularioParametroFactuTransaccion() throws Exception {
		if(this.jInternalFrameDetalleFormParametroFactuTransaccion==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormParametroFactuTransaccion!=null) {
	
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jLabelidParametroFactuTransaccion.setEnabled(this.parametrofactutransaccionConstantesFunciones.activaridParametroFactuTransaccion);
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_empresaParametroFactuTransaccion.setEnabled(this.parametrofactutransaccionConstantesFunciones.activarid_empresaParametroFactuTransaccion);
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_sucursalParametroFactuTransaccion.setEnabled(this.parametrofactutransaccionConstantesFunciones.activarid_sucursalParametroFactuTransaccion);
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_inven_facturaParametroFactuTransaccion.setEnabled(this.parametrofactutransaccionConstantesFunciones.activarid_transaccion_inven_facturaParametroFactuTransaccion);
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_inven_nota_creditoParametroFactuTransaccion.setEnabled(this.parametrofactutransaccionConstantesFunciones.activarid_transaccion_inven_nota_creditoParametroFactuTransaccion);
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_inven_nota_ventaParametroFactuTransaccion.setEnabled(this.parametrofactutransaccionConstantesFunciones.activarid_transaccion_inven_nota_ventaParametroFactuTransaccion);
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_cuenta_co_facturaParametroFactuTransaccion.setEnabled(this.parametrofactutransaccionConstantesFunciones.activarid_transaccion_cuenta_co_facturaParametroFactuTransaccion);
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_cuenta_co_nota_creditoParametroFactuTransaccion.setEnabled(this.parametrofactutransaccionConstantesFunciones.activarid_transaccion_cuenta_co_nota_creditoParametroFactuTransaccion);
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_cuenta_co_nota_ventaParametroFactuTransaccion.setEnabled(this.parametrofactutransaccionConstantesFunciones.activarid_transaccion_cuenta_co_nota_ventaParametroFactuTransaccion);
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_cuenta_co_tarjetaParametroFactuTransaccion.setEnabled(this.parametrofactutransaccionConstantesFunciones.activarid_transaccion_cuenta_co_tarjetaParametroFactuTransaccion);
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_cuenta_pa_facturaParametroFactuTransaccion.setEnabled(this.parametrofactutransaccionConstantesFunciones.activarid_transaccion_cuenta_pa_facturaParametroFactuTransaccion);
		this.jInternalFrameDetalleFormParametroFactuTransaccion.jComboBoxid_transaccion_cuenta_pa_nota_creditoParametroFactuTransaccion.setEnabled(this.parametrofactutransaccionConstantesFunciones.activarid_transaccion_cuenta_pa_nota_creditoParametroFactuTransaccion);
		}
	}
	
		
}