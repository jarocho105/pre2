/*
*AVISO LEGAL
Â© Copyright
*Este programa esta protegido por la ley de derechos de autor.
*La reproduccion o distribucion ilicita de este programa o de cualquiera de
*sus partes esta penado por la ley con severas sanciones civiles y penales,
*y seran objeto de todas las sanciones legales que correspondan.

*Su contenido no puede copiarse para fines comerciales o de otras,
*ni puede mostrarse, incluso en una version modificada, en otros sitios Web.
Solo esta permitido colocar hipervinculos al sitio web.
*/
package com.bydan.erp.facturacion.presentation.swing.jinternalframes;


import java.sql.Time;


import com.bydan.erp.seguridad.business.entity.Usuario;
import com.bydan.erp.seguridad.business.entity.ResumenUsuario;
import com.bydan.erp.seguridad.business.entity.Opcion;
import com.bydan.erp.seguridad.business.entity.PerfilOpcion;
import com.bydan.erp.seguridad.business.entity.PerfilCampo;
import com.bydan.erp.seguridad.business.entity.PerfilAccion;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralSg;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralUsuario;
import com.bydan.erp.seguridad.business.entity.Modulo;
import com.bydan.erp.seguridad.business.entity.Accion;

import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneralAdditional;
import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneral;


//import com.bydan.erp.seguridad.business.entity.PerfilAccion;


import com.bydan.erp.seguridad.util.SistemaConstantesFunciones;
import com.bydan.erp.seguridad.util.SistemaConstantesFuncionesAdditional;
import com.bydan.erp.seguridad.business.logic.SistemaLogicAdditional;

import com.bydan.erp.facturacion.util.ProformaConstantesFunciones;
import com.bydan.erp.facturacion.util.ProformaParameterReturnGeneral;
//import com.bydan.erp.facturacion.util.ProformaParameterGeneral;
//import com.bydan.erp.facturacion.presentation.report.source.ProformaBean;
import com.bydan.framework.erp.business.dataaccess.ConstantesSql;
import com.bydan.framework.erp.business.entity.Classe;
import com.bydan.framework.erp.business.entity.DatoGeneral;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterGeneral;
import com.bydan.framework.erp.business.entity.OrderBy;
import com.bydan.framework.erp.business.entity.DatoGeneralMinimo;
import com.bydan.framework.erp.business.entity.GeneralEntity;
import com.bydan.framework.erp.business.entity.Mensajes;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterReturnGeneral;
//import com.bydan.framework.erp.business.entity.MaintenanceType;
import com.bydan.framework.erp.util.MaintenanceType;
import com.bydan.framework.erp.util.FuncionesReporte;
import com.bydan.framework.erp.business.logic.DatosCliente;
import com.bydan.framework.erp.business.logic.Pagination;

import com.bydan.erp.facturacion.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralTotalModel;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralOrderByModel;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverter;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverterFromDate;
import com.bydan.framework.erp.presentation.desktop.swing.DateRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.DateEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.TextFieldRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.RunnableProceso;
import com.bydan.framework.erp.presentation.desktop.swing.*;
//import com.bydan.framework.erp.presentation.desktop.swing.TextFieldEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.HeaderRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.JInternalFrameBase;
import com.bydan.framework.erp.presentation.desktop.swing.FuncionesSwing;
import com.bydan.framework.erp.presentation.desktop.swing.MainJFrame;
import com.bydan.framework.erp.resources.imagenes.AuxiliarImagenes;
import com.bydan.erp.facturacion.resources.reportes.AuxiliarReportes;


import com.bydan.erp.facturacion.util.*;
import com.bydan.erp.facturacion.business.logic.*;

import com.bydan.erp.seguridad.business.logic.*;
import com.bydan.erp.contabilidad.business.logic.*;
import com.bydan.erp.nomina.business.logic.*;
import com.bydan.erp.cartera.business.logic.*;
import com.bydan.erp.inventario.business.logic.*;
import com.bydan.erp.comisiones.business.logic.*;

//EJB

//PARAMETROS


//EJB PARAMETROS

import com.bydan.framework.erp.business.logic.*;
import com.bydan.framework.erp.util.*;

import com.bydan.erp.facturacion.business.entity.*;
//import com.bydan.framework.erp.business.entity.ConexionBeanFace;
//import com.bydan.framework.erp.business.entity.Mensajes;


import com.bydan.erp.seguridad.presentation.swing.jinternalframes.*;
import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.*;
import com.bydan.erp.nomina.presentation.swing.jinternalframes.*;
import com.bydan.erp.cartera.presentation.swing.jinternalframes.*;
import com.bydan.erp.inventario.presentation.swing.jinternalframes.*;
import com.bydan.erp.comisiones.presentation.swing.jinternalframes.*;

import com.bydan.erp.seguridad.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.nomina.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.cartera.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.inventario.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.comisiones.presentation.swing.jinternalframes.auxiliar.*;






import javax.imageio.ImageIO;
import java.net.NetworkInterface;
import java.net.InterfaceAddress;
import java.net.InetAddress;
import javax.naming.InitialContext;
import java.lang.Long;
import java.util.Date;
import java.util.Enumeration;
import java.util.Iterator;
import java.util.Set;
import java.util.HashSet;
import java.util.List;
import java.util.ArrayList;
import java.io.Serializable;
import java.util.Hashtable;
import java.util.Collections;
import java.io.File;
import java.io.FileInputStream;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.BufferedReader;
import java.io.FileReader;
import java.util.HashMap;
import java.util.Map;
import java.io.PrintWriter;
import java.sql.SQLException;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.stream.StreamSource;

import org.xml.sax.EntityResolver;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;

import org.w3c.dom.Document;
import org.w3c.dom.Document;
import org.w3c.dom.NodeList;
import org.w3c.dom.Node;
import org.w3c.dom.Element;

import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.util.CellRangeAddress;

import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;


import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRRuntimeException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.engine.export.JRHtmlExporter;
import net.sf.jasperreports.j2ee.servlets.BaseHttpServlet;
import net.sf.jasperreports.engine.JRExporterParameter;
import net.sf.jasperreports.engine.data.JRBeanArrayDataSource;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;

import org.apache.log4j.Logger;

import com.bydan.framework.erp.business.entity.Reporte;


//VALIDACION
import org.hibernate.validator.ClassValidator;
import org.hibernate.validator.InvalidValue;

import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.JasperRunManager;
import net.sf.jasperreports.engine.export.JExcelApiExporter;
import net.sf.jasperreports.engine.export.JRCsvExporter;
import net.sf.jasperreports.engine.export.JRRtfExporter;
import net.sf.jasperreports.engine.export.JRXlsExporter;
import net.sf.jasperreports.engine.export.JRXlsExporterParameter;
import net.sf.jasperreports.engine.util.JRSaver;
import net.sf.jasperreports.engine.xml.JRXmlWriter;


import com.bydan.erp.facturacion.presentation.web.jsf.sessionbean.*;

import java.util.EventObject;
import javax.swing.*;
import javax.swing.border.Border;
import javax.swing.border.TitledBorder;
import javax.swing.border.EmptyBorder;
import javax.swing.event.*;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import java.awt.*;
import java.awt.event.*;

import org.jdesktop.beansbinding.Binding.SyncFailure;
import org.jdesktop.beansbinding.BindingListener;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.ELProperty;
import org.jdesktop.beansbinding.AutoBinding.UpdateStrategy;
import org.jdesktop.beansbinding.PropertyStateEvent;
import org.jdesktop.swingbinding.JComboBoxBinding;
import org.jdesktop.swingbinding.SwingBindings;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeEvent;

import com.toedter.calendar.JDateChooser;


import com.bydan.erp.seguridad.business.entity.*;
import com.bydan.erp.contabilidad.business.entity.*;
import com.bydan.erp.nomina.business.entity.*;
import com.bydan.erp.cartera.business.entity.*;
import com.bydan.erp.inventario.business.entity.*;
import com.bydan.erp.comisiones.business.entity.*;
import com.bydan.erp.seguridad.util.*;
import com.bydan.erp.contabilidad.util.*;
import com.bydan.erp.nomina.util.*;
import com.bydan.erp.cartera.util.*;
import com.bydan.erp.inventario.util.*;
import com.bydan.erp.comisiones.util.*;
import com.bydan.erp.seguridad.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.contabilidad.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.nomina.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.cartera.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.inventario.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.comisiones.presentation.web.jsf.sessionbean.*;


@SuppressWarnings("unused")
public class ProformaBeanSwingJInternalFrame extends ProformaJInternalFrame implements WindowListener,WindowFocusListener
{				
	
	public static final long serialVersionUID = 1L;
	
	public static Logger logger = Logger.getLogger(ProformaBeanSwingJInternalFrame.class);  
	
	public static ClassValidator<Proforma> proformaValidator = new ClassValidator<Proforma>(Proforma.class);
	
	public InvalidValue[] invalidValues=null;
		

	//Ejb Foreign Keys
	
	public Proforma proforma;	
	public Proforma proformaAux;
	public Proforma proformaAnterior;//USADO PARA MANEJAR FOCUS GAINED,LOST
	public Proforma proformaTotales;
	public Long idProformaActual;
	public Long iIdNuevoProforma=0L;
	public int rowIndexActual=0;
	
	
	
	
	public String sFinalQueryComboEmpresa="";

	public List<Empresa> empresasForeignKey;

	public List<Empresa> getempresasForeignKey() {
		return empresasForeignKey;
	}

	public void setempresasForeignKey(List<Empresa> empresasForeignKey) {
		this.empresasForeignKey = empresasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Empresa empresaForeignKey;

	public Empresa getempresaForeignKey() {
		return empresaForeignKey;
	}

	public void setempresaForeignKey(Empresa empresaForeignKey) {
		this.empresaForeignKey = empresaForeignKey;
	}

	public String sFinalQueryComboSucursal="";

	public List<Sucursal> sucursalsForeignKey;

	public List<Sucursal> getsucursalsForeignKey() {
		return sucursalsForeignKey;
	}

	public void setsucursalsForeignKey(List<Sucursal> sucursalsForeignKey) {
		this.sucursalsForeignKey = sucursalsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Sucursal sucursalForeignKey;

	public Sucursal getsucursalForeignKey() {
		return sucursalForeignKey;
	}

	public void setsucursalForeignKey(Sucursal sucursalForeignKey) {
		this.sucursalForeignKey = sucursalForeignKey;
	}

	public String sFinalQueryComboUsuario="";

	public List<Usuario> usuariosForeignKey;

	public List<Usuario> getusuariosForeignKey() {
		return usuariosForeignKey;
	}

	public void setusuariosForeignKey(List<Usuario> usuariosForeignKey) {
		this.usuariosForeignKey = usuariosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Usuario usuarioForeignKey;

	public Usuario getusuarioForeignKey() {
		return usuarioForeignKey;
	}

	public void setusuarioForeignKey(Usuario usuarioForeignKey) {
		this.usuarioForeignKey = usuarioForeignKey;
	}

	public String sFinalQueryComboEjercicio="";

	public List<Ejercicio> ejerciciosForeignKey;

	public List<Ejercicio> getejerciciosForeignKey() {
		return ejerciciosForeignKey;
	}

	public void setejerciciosForeignKey(List<Ejercicio> ejerciciosForeignKey) {
		this.ejerciciosForeignKey = ejerciciosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Ejercicio ejercicioForeignKey;

	public Ejercicio getejercicioForeignKey() {
		return ejercicioForeignKey;
	}

	public void setejercicioForeignKey(Ejercicio ejercicioForeignKey) {
		this.ejercicioForeignKey = ejercicioForeignKey;
	}

	public String sFinalQueryComboPeriodo="";

	public List<Periodo> periodosForeignKey;

	public List<Periodo> getperiodosForeignKey() {
		return periodosForeignKey;
	}

	public void setperiodosForeignKey(List<Periodo> periodosForeignKey) {
		this.periodosForeignKey = periodosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Periodo periodoForeignKey;

	public Periodo getperiodoForeignKey() {
		return periodoForeignKey;
	}

	public void setperiodoForeignKey(Periodo periodoForeignKey) {
		this.periodoForeignKey = periodoForeignKey;
	}

	public String sFinalQueryComboAnio="";

	public List<Anio> aniosForeignKey;

	public List<Anio> getaniosForeignKey() {
		return aniosForeignKey;
	}

	public void setaniosForeignKey(List<Anio> aniosForeignKey) {
		this.aniosForeignKey = aniosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Anio anioForeignKey;

	public Anio getanioForeignKey() {
		return anioForeignKey;
	}

	public void setanioForeignKey(Anio anioForeignKey) {
		this.anioForeignKey = anioForeignKey;
	}

	public String sFinalQueryComboMes="";

	public List<Mes> messForeignKey;

	public List<Mes> getmessForeignKey() {
		return messForeignKey;
	}

	public void setmessForeignKey(List<Mes> messForeignKey) {
		this.messForeignKey = messForeignKey;
	}

	//OBJETO FK ACTUAL
	public Mes mesForeignKey;

	public Mes getmesForeignKey() {
		return mesForeignKey;
	}

	public void setmesForeignKey(Mes mesForeignKey) {
		this.mesForeignKey = mesForeignKey;
	}

	public String sFinalQueryComboMoneda="";

	public List<Moneda> monedasForeignKey;

	public List<Moneda> getmonedasForeignKey() {
		return monedasForeignKey;
	}

	public void setmonedasForeignKey(List<Moneda> monedasForeignKey) {
		this.monedasForeignKey = monedasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Moneda monedaForeignKey;

	public Moneda getmonedaForeignKey() {
		return monedaForeignKey;
	}

	public void setmonedaForeignKey(Moneda monedaForeignKey) {
		this.monedaForeignKey = monedaForeignKey;
	}

	public String sFinalQueryComboEmpleado="";

	public List<Empleado> empleadosForeignKey;

	public List<Empleado> getempleadosForeignKey() {
		return empleadosForeignKey;
	}

	public void setempleadosForeignKey(List<Empleado> empleadosForeignKey) {
		this.empleadosForeignKey = empleadosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Empleado empleadoForeignKey;

	public Empleado getempleadoForeignKey() {
		return empleadoForeignKey;
	}

	public void setempleadoForeignKey(Empleado empleadoForeignKey) {
		this.empleadoForeignKey = empleadoForeignKey;
	}

	public String sFinalQueryComboFormato="";

	public List<Formato> formatosForeignKey;

	public List<Formato> getformatosForeignKey() {
		return formatosForeignKey;
	}

	public void setformatosForeignKey(List<Formato> formatosForeignKey) {
		this.formatosForeignKey = formatosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Formato formatoForeignKey;

	public Formato getformatoForeignKey() {
		return formatoForeignKey;
	}

	public void setformatoForeignKey(Formato formatoForeignKey) {
		this.formatoForeignKey = formatoForeignKey;
	}

	public String sFinalQueryComboEstadoProforma="";

	public List<EstadoProforma> estadoproformasForeignKey;

	public List<EstadoProforma> getestadoproformasForeignKey() {
		return estadoproformasForeignKey;
	}

	public void setestadoproformasForeignKey(List<EstadoProforma> estadoproformasForeignKey) {
		this.estadoproformasForeignKey = estadoproformasForeignKey;
	}

	//OBJETO FK ACTUAL
	public EstadoProforma estadoproformaForeignKey;

	public EstadoProforma getestadoproformaForeignKey() {
		return estadoproformaForeignKey;
	}

	public void setestadoproformaForeignKey(EstadoProforma estadoproformaForeignKey) {
		this.estadoproformaForeignKey = estadoproformaForeignKey;
	}

	public String sFinalQueryComboCliente="";

	public List<Cliente> clientesForeignKey;

	public List<Cliente> getclientesForeignKey() {
		return clientesForeignKey;
	}

	public void setclientesForeignKey(List<Cliente> clientesForeignKey) {
		this.clientesForeignKey = clientesForeignKey;
	}

	//OBJETO FK ACTUAL
	public Cliente clienteForeignKey;

	public Cliente getclienteForeignKey() {
		return clienteForeignKey;
	}

	public void setclienteForeignKey(Cliente clienteForeignKey) {
		this.clienteForeignKey = clienteForeignKey;
	}

	public String sFinalQueryComboTipoPrecio="";

	public List<TipoPrecio> tipopreciosForeignKey;

	public List<TipoPrecio> gettipopreciosForeignKey() {
		return tipopreciosForeignKey;
	}

	public void settipopreciosForeignKey(List<TipoPrecio> tipopreciosForeignKey) {
		this.tipopreciosForeignKey = tipopreciosForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoPrecio tipoprecioForeignKey;

	public TipoPrecio gettipoprecioForeignKey() {
		return tipoprecioForeignKey;
	}

	public void settipoprecioForeignKey(TipoPrecio tipoprecioForeignKey) {
		this.tipoprecioForeignKey = tipoprecioForeignKey;
	}

	public String sFinalQueryComboVendedor="";

	public List<Vendedor> vendedorsForeignKey;

	public List<Vendedor> getvendedorsForeignKey() {
		return vendedorsForeignKey;
	}

	public void setvendedorsForeignKey(List<Vendedor> vendedorsForeignKey) {
		this.vendedorsForeignKey = vendedorsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Vendedor vendedorForeignKey;

	public Vendedor getvendedorForeignKey() {
		return vendedorForeignKey;
	}

	public void setvendedorForeignKey(Vendedor vendedorForeignKey) {
		this.vendedorForeignKey = vendedorForeignKey;
	}

	public String sFinalQueryComboSubCliente="";

	public List<SubCliente> subclientesForeignKey;

	public List<SubCliente> getsubclientesForeignKey() {
		return subclientesForeignKey;
	}

	public void setsubclientesForeignKey(List<SubCliente> subclientesForeignKey) {
		this.subclientesForeignKey = subclientesForeignKey;
	}

	//OBJETO FK ACTUAL
	public SubCliente subclienteForeignKey;

	public SubCliente getsubclienteForeignKey() {
		return subclienteForeignKey;
	}

	public void setsubclienteForeignKey(SubCliente subclienteForeignKey) {
		this.subclienteForeignKey = subclienteForeignKey;
	}

	public String sFinalQueryComboTipoViaTransporte="";

	public List<TipoViaTransporte> tipoviatransportesForeignKey;

	public List<TipoViaTransporte> gettipoviatransportesForeignKey() {
		return tipoviatransportesForeignKey;
	}

	public void settipoviatransportesForeignKey(List<TipoViaTransporte> tipoviatransportesForeignKey) {
		this.tipoviatransportesForeignKey = tipoviatransportesForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoViaTransporte tipoviatransporteForeignKey;

	public TipoViaTransporte gettipoviatransporteForeignKey() {
		return tipoviatransporteForeignKey;
	}

	public void settipoviatransporteForeignKey(TipoViaTransporte tipoviatransporteForeignKey) {
		this.tipoviatransporteForeignKey = tipoviatransporteForeignKey;
	}

	public String sFinalQueryComboTransporte="";

	public List<Transporte> transportesForeignKey;

	public List<Transporte> gettransportesForeignKey() {
		return transportesForeignKey;
	}

	public void settransportesForeignKey(List<Transporte> transportesForeignKey) {
		this.transportesForeignKey = transportesForeignKey;
	}

	//OBJETO FK ACTUAL
	public Transporte transporteForeignKey;

	public Transporte gettransporteForeignKey() {
		return transporteForeignKey;
	}

	public void settransporteForeignKey(Transporte transporteForeignKey) {
		this.transporteForeignKey = transporteForeignKey;
	}

	public String sFinalQueryComboRutaTransporte="";

	public List<RutaTransporte> rutatransportesForeignKey;

	public List<RutaTransporte> getrutatransportesForeignKey() {
		return rutatransportesForeignKey;
	}

	public void setrutatransportesForeignKey(List<RutaTransporte> rutatransportesForeignKey) {
		this.rutatransportesForeignKey = rutatransportesForeignKey;
	}

	//OBJETO FK ACTUAL
	public RutaTransporte rutatransporteForeignKey;

	public RutaTransporte getrutatransporteForeignKey() {
		return rutatransporteForeignKey;
	}

	public void setrutatransporteForeignKey(RutaTransporte rutatransporteForeignKey) {
		this.rutatransporteForeignKey = rutatransporteForeignKey;
	}

	public String sFinalQueryComboCentroCosto="";

	public List<CentroCosto> centrocostosForeignKey;

	public List<CentroCosto> getcentrocostosForeignKey() {
		return centrocostosForeignKey;
	}

	public void setcentrocostosForeignKey(List<CentroCosto> centrocostosForeignKey) {
		this.centrocostosForeignKey = centrocostosForeignKey;
	}

	//OBJETO FK ACTUAL
	public CentroCosto centrocostoForeignKey;

	public CentroCosto getcentrocostoForeignKey() {
		return centrocostoForeignKey;
	}

	public void setcentrocostoForeignKey(CentroCosto centrocostoForeignKey) {
		this.centrocostoForeignKey = centrocostoForeignKey;
	}

	public String sFinalQueryComboTipoProforma="";

	public List<TipoProforma> tipoproformasForeignKey;

	public List<TipoProforma> gettipoproformasForeignKey() {
		return tipoproformasForeignKey;
	}

	public void settipoproformasForeignKey(List<TipoProforma> tipoproformasForeignKey) {
		this.tipoproformasForeignKey = tipoproformasForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoProforma tipoproformaForeignKey;

	public TipoProforma gettipoproformaForeignKey() {
		return tipoproformaForeignKey;
	}

	public void settipoproformaForeignKey(TipoProforma tipoproformaForeignKey) {
		this.tipoproformaForeignKey = tipoproformaForeignKey;
	}

	public String sFinalQueryComboConsignatario="";

	public List<Consignatario> consignatariosForeignKey;

	public List<Consignatario> getconsignatariosForeignKey() {
		return consignatariosForeignKey;
	}

	public void setconsignatariosForeignKey(List<Consignatario> consignatariosForeignKey) {
		this.consignatariosForeignKey = consignatariosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Consignatario consignatarioForeignKey;

	public Consignatario getconsignatarioForeignKey() {
		return consignatarioForeignKey;
	}

	public void setconsignatarioForeignKey(Consignatario consignatarioForeignKey) {
		this.consignatarioForeignKey = consignatarioForeignKey;
	}

	public String sFinalQueryComboTipoCambio="";

	public List<TipoCambio> tipocambiosForeignKey;

	public List<TipoCambio> gettipocambiosForeignKey() {
		return tipocambiosForeignKey;
	}

	public void settipocambiosForeignKey(List<TipoCambio> tipocambiosForeignKey) {
		this.tipocambiosForeignKey = tipocambiosForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoCambio tipocambioForeignKey;

	public TipoCambio gettipocambioForeignKey() {
		return tipocambioForeignKey;
	}

	public void settipocambioForeignKey(TipoCambio tipocambioForeignKey) {
		this.tipocambioForeignKey = tipocambioForeignKey;
	}

		
	
	
	
	//BUSQUEDA INTERNA FK
	public Long idEmpleadoActual=0L;

	public Long getidEmpleadoActual() {
		return idEmpleadoActual;
	}

	public void setidEmpleadoActual(Long idEmpleadoActual) {
		this.idEmpleadoActual= idEmpleadoActual;
	}
	public Long idClienteActual=0L;

	public Long getidClienteActual() {
		return idClienteActual;
	}

	public void setidClienteActual(Long idClienteActual) {
		this.idClienteActual= idClienteActual;
	}
	public Long idVendedorActual=0L;

	public Long getidVendedorActual() {
		return idVendedorActual;
	}

	public void setidVendedorActual(Long idVendedorActual) {
		this.idVendedorActual= idVendedorActual;
	}
	public Long idCentroCostoActual=0L;

	public Long getidCentroCostoActual() {
		return idCentroCostoActual;
	}

	public void setidCentroCostoActual(Long idCentroCostoActual) {
		this.idCentroCostoActual= idCentroCostoActual;
	}
	public Long idTipoCambioActual=0L;

	public Long getidTipoCambioActual() {
		return idTipoCambioActual;
	}

	public void setidTipoCambioActual(Long idTipoCambioActual) {
		this.idTipoCambioActual= idTipoCambioActual;
	}
	
	

	public Boolean isTienePermisosTerminoProforma=false;

	public Boolean getIsTienePermisosTerminoProforma() {
		return isTienePermisosTerminoProforma;
	}

	public void setIsTienePermisosTerminoProforma(Boolean isTienePermisosTerminoProforma) {
		this.isTienePermisosTerminoProforma= isTienePermisosTerminoProforma;
	}


	public Boolean isTienePermisosDetalleProforma=false;

	public Boolean getIsTienePermisosDetalleProforma() {
		return isTienePermisosDetalleProforma;
	}

	public void setIsTienePermisosDetalleProforma(Boolean isTienePermisosDetalleProforma) {
		this.isTienePermisosDetalleProforma= isTienePermisosDetalleProforma;
	}

	
	
	//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
	public String sFinalQueryGeneral="";
	public Boolean isEntroOnLoad=false;
	public Boolean isErrorGuardar=false;
	
	public Boolean isGuardarCambiosEnLote=false;
	public Boolean isCargarCombosDependencia=false;
	public Boolean isSeleccionarTodos=false;
	public Boolean isSeleccionados=false;
	public Boolean conGraficoReporte=false;
	
	public Boolean isPostAccionNuevo=false;
	public Boolean isPostAccionSinCerrar=false;
	public Boolean isPostAccionSinMensaje=false;
	
	
	public Boolean esControlTabla=false;
	
	public Boolean isPermisoTodoProforma;
	public Boolean isPermisoNuevoProforma;
	public Boolean isPermisoActualizarProforma;
	public Boolean isPermisoActualizarOriginalProforma;
	public Boolean isPermisoEliminarProforma;
	public Boolean isPermisoGuardarCambiosProforma;
	public Boolean isPermisoConsultaProforma;
	public Boolean isPermisoBusquedaProforma;
	public Boolean isPermisoReporteProforma;
	public Boolean isPermisoPaginacionMedioProforma;
	public Boolean isPermisoPaginacionAltoProforma;
	public Boolean isPermisoPaginacionTodoProforma;
	public Boolean isPermisoCopiarProforma;
	public Boolean isPermisoVerFormProforma;
	public Boolean isPermisoDuplicarProforma;
	public Boolean isPermisoOrdenProforma;
	
	
	public ArrayList<DatoGeneral> arrDatoGeneral;
	public ArrayList<String> arrDatoGeneralNo;
	ArrayList<Classe> classesActual=new ArrayList<Classe>();
	
	public List<Accion> accions;	
	public List<Accion> accionsFormulario;
	
	
	public ArrayList<DatoGeneralMinimo> arrDatoGeneralMinimos;
	
	public ArrayList<Reporte> tiposArchivosReportes;
	public ArrayList<Reporte> tiposArchivosReportesDinamico;
	public ArrayList<Reporte> tiposReportes;
	public ArrayList<Reporte> tiposReportesDinamico;
	public ArrayList<Reporte> tiposGraficosReportes;
	public ArrayList<Reporte> tiposPaginacion;
	public ArrayList<Reporte> tiposRelaciones;
	public ArrayList<Reporte> tiposAcciones;
	public ArrayList<Reporte> tiposAccionesFormulario;
	public ArrayList<Reporte> tiposSeleccionar;
	
	public ArrayList<Reporte> tiposColumnasSelect;
	public ArrayList<Reporte> tiposRelacionesSelect;
	
	
	public Integer iNumeroPaginacion;
	public Integer iNumeroPaginacionPagina;
	public Pagination pagination;
	public DatosCliente datosCliente;
	public DatosDeep datosDeep;
	public String sTipoArchivoReporte="";
	public String sTipoArchivoReporteDinamico="";
	public String sTipoReporte="";
	public String sTipoReporteDinamico="";
	public String sTipoGraficoReporte="";
	public String sTipoPaginacion="";
	public String sTipoRelacion="";
	public String sTipoAccion="";
	public String sTipoAccionFormulario="";
	public String sTipoSeleccionar="";	
	public String sDetalleReporte="";
	public Boolean isMostrarNumeroPaginacion;
	public String sTipoReporteExtra="";
	public String sValorCampoGeneral="";
	public Boolean esReporteDinamico=false;
	public Boolean esReporteAccionProceso=false;
	public Boolean esRecargarFks=false;
	public String sPathReporteDinamico="";
	
	public ProformaParameterReturnGeneral proformaReturnGeneral;
	public ProformaParameterReturnGeneral proformaParameterGeneral;
	
	

	public TerminoProformaLogic terminoproformaLogic=null;

	public TerminoProformaLogic getTerminoProformaLogic() {
		return terminoproformaLogic;
	}

	public void setTerminoProformaLogic(TerminoProformaLogic terminoproformaLogic) {
		this.terminoproformaLogic = terminoproformaLogic;
	}


	public DetalleProformaLogic detalleproformaLogic=null;

	public DetalleProformaLogic getDetalleProformaLogic() {
		return detalleproformaLogic;
	}

	public void setDetalleProformaLogic(DetalleProformaLogic detalleproformaLogic) {
		this.detalleproformaLogic = detalleproformaLogic;
	}
 	
	public JasperPrint jasperPrint = null;
	
	public Long lIdUsuarioSesion=0L;				
	
	public Boolean isEsNuevoProforma=false;
	public Boolean esParaAccionDesdeFormularioProforma=false;
	public Boolean isEsMantenimientoRelacionesRelacionadoUnico=false;
	public Boolean isEsMantenimientoRelaciones=false;
	public Boolean isEsMantenimientoRelacionado=false;	
	public Boolean isContieneImagenes=false;
		
	//public Boolean conTotales=false; //Viene heredado de JInternalFrameBase
	//public Boolean esParaBusquedaForeignKey=false;
	
	
	protected ProformaSessionBeanAdditional proformaSessionBeanAdditional=null;
	
	public ProformaSessionBeanAdditional getProformaSessionBeanAdditional() {
		return this.proformaSessionBeanAdditional;
	}
	
	public void setProformaSessionBeanAdditional(ProformaSessionBeanAdditional proformaSessionBeanAdditional) {
		try {
			this.proformaSessionBeanAdditional=proformaSessionBeanAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	protected ProformaBeanSwingJInternalFrameAdditional proformaBeanSwingJInternalFrameAdditional=null;
	//public class ProformaBeanSwingJInternalFrame
	
	public ProformaBeanSwingJInternalFrameAdditional getProformaBeanSwingJInternalFrameAdditional() {
		return this.proformaBeanSwingJInternalFrameAdditional;
	}
	
	public void setProformaBeanSwingJInternalFrameAdditional(ProformaBeanSwingJInternalFrameAdditional proformaBeanSwingJInternalFrameAdditional) {
		try {
			this.proformaBeanSwingJInternalFrameAdditional=proformaBeanSwingJInternalFrameAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	//ESTA EN PADRE
	
	//public ProformaLogic proformaLogic;
	public SistemaLogicAdditional sistemaLogicAdditional;
	
	
	public Proforma proformaBean;
	public ProformaConstantesFunciones proformaConstantesFunciones;
	//public ProformaParameterReturnGeneral proformaReturnGeneral;
	
	//FK
	
	public EmpresaLogic empresaLogic;
	public SucursalLogic sucursalLogic;
	public UsuarioLogic usuarioLogic;
	public EjercicioLogic ejercicioLogic;
	public PeriodoLogic periodoLogic;
	public AnioLogic anioLogic;
	public MesLogic mesLogic;
	public MonedaLogic monedaLogic;
	public EmpleadoLogic empleadoLogic;
	public FormatoLogic formatoLogic;
	public EstadoProformaLogic estadoproformaLogic;
	public ClienteLogic clienteLogic;
	public TipoPrecioLogic tipoprecioLogic;
	public VendedorLogic vendedorLogic;
	public SubClienteLogic subclienteLogic;
	public TipoViaTransporteLogic tipoviatransporteLogic;
	public TransporteLogic transporteLogic;
	public RutaTransporteLogic rutatransporteLogic;
	public CentroCostoLogic centrocostoLogic;
	public TipoProformaLogic tipoproformaLogic;
	public ConsignatarioLogic consignatarioLogic;
	public TipoCambioLogic tipocambioLogic;
	
	//PARAMETROS
	
	
	//public List<Proforma> proformas;	
	//public List<Proforma> proformasEliminados;
	//public List<Proforma> proformasAux;
	
	public String sAccionMantenimiento="";
	public String sAccionBusqueda="";
	public String sAccionAdicional="";
	public String sUltimaBusqueda="";
	
	public Mensaje mensaje;
	
	
	public String sVisibilidadTablaBusquedas="";					
	public String sVisibilidadTablaElementos="";	
	public String sVisibilidadTablaAcciones="";			
	
	public Boolean isVisibilidadCeldaNuevoProforma=false;
	public Boolean isVisibilidadCeldaDuplicarProforma=true;
	public Boolean isVisibilidadCeldaCopiarProforma=true;
	public Boolean isVisibilidadCeldaVerFormProforma=true;
	public Boolean isVisibilidadCeldaOrdenProforma=true;
	public Boolean isVisibilidadCeldaNuevoRelacionesProforma=false;
	public Boolean isVisibilidadCeldaModificarProforma=false;
	public Boolean isVisibilidadCeldaActualizarProforma=false;
	public Boolean isVisibilidadCeldaEliminarProforma=false;
	public Boolean isVisibilidadCeldaCancelarProforma=false;
	public Boolean isVisibilidadCeldaGuardarProforma=false;	
	public Boolean isVisibilidadCeldaGuardarCambiosProforma=false;	
	
	
	public Boolean isVisibilidadFK_IdAnio=false;
	public Boolean isVisibilidadFK_IdCentroCosto=false;
	public Boolean isVisibilidadFK_IdCliente=false;
	public Boolean isVisibilidadFK_IdConsignatario=false;
	public Boolean isVisibilidadFK_IdEjercicio=false;
	public Boolean isVisibilidadFK_IdEmpleado=false;
	public Boolean isVisibilidadFK_IdEmpresa=false;
	public Boolean isVisibilidadFK_IdEstadoProforma=false;
	public Boolean isVisibilidadFK_IdFormato=false;
	public Boolean isVisibilidadFK_IdMes=false;
	public Boolean isVisibilidadFK_IdMoneda=false;
	public Boolean isVisibilidadFK_IdPeriodo=false;
	public Boolean isVisibilidadFK_IdRutaTransporte=false;
	public Boolean isVisibilidadFK_IdSubCliente=false;
	public Boolean isVisibilidadFK_IdSucursal=false;
	public Boolean isVisibilidadFK_IdTipoCambio=false;
	public Boolean isVisibilidadFK_IdTipoPrecio=false;
	public Boolean isVisibilidadFK_IdTipoProforma=false;
	public Boolean isVisibilidadFK_IdTipoViaTransporte=false;
	public Boolean isVisibilidadFK_IdTransporte=false;
	public Boolean isVisibilidadFK_IdUsuario=false;
	public Boolean isVisibilidadFK_IdVendedor=false;
	
	public Long getiIdNuevoProforma() {
		return this.iIdNuevoProforma;
	}

	public void setiIdNuevoProforma(Long iIdNuevoProforma) {
		this.iIdNuevoProforma = iIdNuevoProforma;
	}
	
	public Long getidProformaActual() {
		return this.idProformaActual;
	}

	public void setidProformaActual(Long idProformaActual) {
		this.idProformaActual = idProformaActual;
	}
	
	public int getrowIndexActual() {
		return this.rowIndexActual;
	}

	public void setrowIndexActual(int rowIndexActual) {
		this.rowIndexActual=rowIndexActual;
	}
	
	
	public Proforma getproforma() {
		return this.proforma;
	}

	public void setproforma(Proforma proforma) {
		this.proforma = proforma;
	}
	
	public Proforma getproformaAux() {
		return this.proformaAux;
	}

	public void setproformaAux(Proforma proformaAux) {
		this.proformaAux = proformaAux;
	}				
	
	public Proforma getproformaAnterior() {
		return this.proformaAnterior;
	}

	public void setproformaAnterior(Proforma proformaAnterior) {
		this.proformaAnterior = proformaAnterior;
	}	
	
	public Proforma getproformaTotales() {
		return this.proformaTotales;
	}

	public void setproformaTotales(Proforma proformaTotales) {
		this.proformaTotales = proformaTotales;
	}	
	
	public Proforma getproformaBean() {
		return this.proformaBean;
	}

	public void setproformaBean(Proforma proformaBean) {
		this.proformaBean = proformaBean;
	}	
	
	public ProformaParameterReturnGeneral getproformaReturnGeneral() {
		return this.proformaReturnGeneral;
	}

	public void setproformaReturnGeneral(ProformaParameterReturnGeneral proformaReturnGeneral) {
		this.proformaReturnGeneral = proformaReturnGeneral;
	}	
	
	
	public Long id_anioFK_IdAnio=null;

	public Long getid_anioFK_IdAnio() {
		return this.id_anioFK_IdAnio;
	}

	public void setid_anioFK_IdAnio(Long id_anioFK_IdAnio) {
		this.id_anioFK_IdAnio = id_anioFK_IdAnio;
	}

	public Long id_centro_costoFK_IdCentroCosto=null;

	public Long getid_centro_costoFK_IdCentroCosto() {
		return this.id_centro_costoFK_IdCentroCosto;
	}

	public void setid_centro_costoFK_IdCentroCosto(Long id_centro_costoFK_IdCentroCosto) {
		this.id_centro_costoFK_IdCentroCosto = id_centro_costoFK_IdCentroCosto;
	}

	public Long id_clienteFK_IdCliente=-1L;

	public Long getid_clienteFK_IdCliente() {
		return this.id_clienteFK_IdCliente;
	}

	public void setid_clienteFK_IdCliente(Long id_clienteFK_IdCliente) {
		this.id_clienteFK_IdCliente = id_clienteFK_IdCliente;
	}

	public Long id_consignatarioFK_IdConsignatario=-1L;

	public Long getid_consignatarioFK_IdConsignatario() {
		return this.id_consignatarioFK_IdConsignatario;
	}

	public void setid_consignatarioFK_IdConsignatario(Long id_consignatarioFK_IdConsignatario) {
		this.id_consignatarioFK_IdConsignatario = id_consignatarioFK_IdConsignatario;
	}

	public Long id_ejercicioFK_IdEjercicio=-1L;

	public Long getid_ejercicioFK_IdEjercicio() {
		return this.id_ejercicioFK_IdEjercicio;
	}

	public void setid_ejercicioFK_IdEjercicio(Long id_ejercicioFK_IdEjercicio) {
		this.id_ejercicioFK_IdEjercicio = id_ejercicioFK_IdEjercicio;
	}

	public Long id_empleadoFK_IdEmpleado=-1L;

	public Long getid_empleadoFK_IdEmpleado() {
		return this.id_empleadoFK_IdEmpleado;
	}

	public void setid_empleadoFK_IdEmpleado(Long id_empleadoFK_IdEmpleado) {
		this.id_empleadoFK_IdEmpleado = id_empleadoFK_IdEmpleado;
	}

	public Long id_empresaFK_IdEmpresa=-1L;

	public Long getid_empresaFK_IdEmpresa() {
		return this.id_empresaFK_IdEmpresa;
	}

	public void setid_empresaFK_IdEmpresa(Long id_empresaFK_IdEmpresa) {
		this.id_empresaFK_IdEmpresa = id_empresaFK_IdEmpresa;
	}

	public Long id_estado_proformaFK_IdEstadoProforma=-1L;

	public Long getid_estado_proformaFK_IdEstadoProforma() {
		return this.id_estado_proformaFK_IdEstadoProforma;
	}

	public void setid_estado_proformaFK_IdEstadoProforma(Long id_estado_proformaFK_IdEstadoProforma) {
		this.id_estado_proformaFK_IdEstadoProforma = id_estado_proformaFK_IdEstadoProforma;
	}

	public Long id_formatoFK_IdFormato=null;

	public Long getid_formatoFK_IdFormato() {
		return this.id_formatoFK_IdFormato;
	}

	public void setid_formatoFK_IdFormato(Long id_formatoFK_IdFormato) {
		this.id_formatoFK_IdFormato = id_formatoFK_IdFormato;
	}

	public Long id_mesFK_IdMes=null;

	public Long getid_mesFK_IdMes() {
		return this.id_mesFK_IdMes;
	}

	public void setid_mesFK_IdMes(Long id_mesFK_IdMes) {
		this.id_mesFK_IdMes = id_mesFK_IdMes;
	}

	public Long id_monedaFK_IdMoneda=-1L;

	public Long getid_monedaFK_IdMoneda() {
		return this.id_monedaFK_IdMoneda;
	}

	public void setid_monedaFK_IdMoneda(Long id_monedaFK_IdMoneda) {
		this.id_monedaFK_IdMoneda = id_monedaFK_IdMoneda;
	}

	public Long id_periodoFK_IdPeriodo=-1L;

	public Long getid_periodoFK_IdPeriodo() {
		return this.id_periodoFK_IdPeriodo;
	}

	public void setid_periodoFK_IdPeriodo(Long id_periodoFK_IdPeriodo) {
		this.id_periodoFK_IdPeriodo = id_periodoFK_IdPeriodo;
	}

	public Long id_ruta_transporteFK_IdRutaTransporte=-1L;

	public Long getid_ruta_transporteFK_IdRutaTransporte() {
		return this.id_ruta_transporteFK_IdRutaTransporte;
	}

	public void setid_ruta_transporteFK_IdRutaTransporte(Long id_ruta_transporteFK_IdRutaTransporte) {
		this.id_ruta_transporteFK_IdRutaTransporte = id_ruta_transporteFK_IdRutaTransporte;
	}

	public Long id_sub_clienteFK_IdSubCliente=null;

	public Long getid_sub_clienteFK_IdSubCliente() {
		return this.id_sub_clienteFK_IdSubCliente;
	}

	public void setid_sub_clienteFK_IdSubCliente(Long id_sub_clienteFK_IdSubCliente) {
		this.id_sub_clienteFK_IdSubCliente = id_sub_clienteFK_IdSubCliente;
	}

	public Long id_sucursalFK_IdSucursal=-1L;

	public Long getid_sucursalFK_IdSucursal() {
		return this.id_sucursalFK_IdSucursal;
	}

	public void setid_sucursalFK_IdSucursal(Long id_sucursalFK_IdSucursal) {
		this.id_sucursalFK_IdSucursal = id_sucursalFK_IdSucursal;
	}

	public Long id_tipo_cambioFK_IdTipoCambio=null;

	public Long getid_tipo_cambioFK_IdTipoCambio() {
		return this.id_tipo_cambioFK_IdTipoCambio;
	}

	public void setid_tipo_cambioFK_IdTipoCambio(Long id_tipo_cambioFK_IdTipoCambio) {
		this.id_tipo_cambioFK_IdTipoCambio = id_tipo_cambioFK_IdTipoCambio;
	}

	public Long id_tipo_precioFK_IdTipoPrecio=-1L;

	public Long getid_tipo_precioFK_IdTipoPrecio() {
		return this.id_tipo_precioFK_IdTipoPrecio;
	}

	public void setid_tipo_precioFK_IdTipoPrecio(Long id_tipo_precioFK_IdTipoPrecio) {
		this.id_tipo_precioFK_IdTipoPrecio = id_tipo_precioFK_IdTipoPrecio;
	}

	public Long id_tipo_proformaFK_IdTipoProforma=-1L;

	public Long getid_tipo_proformaFK_IdTipoProforma() {
		return this.id_tipo_proformaFK_IdTipoProforma;
	}

	public void setid_tipo_proformaFK_IdTipoProforma(Long id_tipo_proformaFK_IdTipoProforma) {
		this.id_tipo_proformaFK_IdTipoProforma = id_tipo_proformaFK_IdTipoProforma;
	}

	public Long id_tipo_via_transporteFK_IdTipoViaTransporte=-1L;

	public Long getid_tipo_via_transporteFK_IdTipoViaTransporte() {
		return this.id_tipo_via_transporteFK_IdTipoViaTransporte;
	}

	public void setid_tipo_via_transporteFK_IdTipoViaTransporte(Long id_tipo_via_transporteFK_IdTipoViaTransporte) {
		this.id_tipo_via_transporteFK_IdTipoViaTransporte = id_tipo_via_transporteFK_IdTipoViaTransporte;
	}

	public Long id_transporteFK_IdTransporte=-1L;

	public Long getid_transporteFK_IdTransporte() {
		return this.id_transporteFK_IdTransporte;
	}

	public void setid_transporteFK_IdTransporte(Long id_transporteFK_IdTransporte) {
		this.id_transporteFK_IdTransporte = id_transporteFK_IdTransporte;
	}

	public Long id_usuarioFK_IdUsuario=-1L;

	public Long getid_usuarioFK_IdUsuario() {
		return this.id_usuarioFK_IdUsuario;
	}

	public void setid_usuarioFK_IdUsuario(Long id_usuarioFK_IdUsuario) {
		this.id_usuarioFK_IdUsuario = id_usuarioFK_IdUsuario;
	}

	public Long id_vendedorFK_IdVendedor=null;

	public Long getid_vendedorFK_IdVendedor() {
		return this.id_vendedorFK_IdVendedor;
	}

	public void setid_vendedorFK_IdVendedor(Long id_vendedorFK_IdVendedor) {
		this.id_vendedorFK_IdVendedor = id_vendedorFK_IdVendedor;
	}

		
	
	//ELEMENTOS TABLAS PARAMETOS
	
	
	
	
	
	
	//ELEMENTOS TABLAS PARAMETOS_FIN
	
	
	public ProformaLogic getProformaLogic()	{		
		return proformaLogic;
	}

	public void setProformaLogic(ProformaLogic proformaLogic) {
		this.proformaLogic = proformaLogic;
	}
	
	
	public void setsFinalQueryGeneral(String sFinalQueryGeneral) {
		this.sFinalQueryGeneral=sFinalQueryGeneral;
	}
	
	public String getsFinalQueryGeneral() {
		return this.sFinalQueryGeneral;
	}
		
	public Boolean getIsGuardarCambiosEnLote() {
		return isGuardarCambiosEnLote;
	}

	public void setIsGuardarCambiosEnLote(Boolean isGuardarCambiosEnLote) {
		this.isGuardarCambiosEnLote = isGuardarCambiosEnLote;
	}
	
	public Boolean getIsCargarCombosDependencia() {
		return isCargarCombosDependencia;
	}

	public void setIsCargarCombosDependencia(Boolean isCargarCombosDependencia) {
		this.isCargarCombosDependencia = isCargarCombosDependencia;
	}
	
	public Boolean getIsEsNuevoProforma() {
		return isEsNuevoProforma;
	}

	public void setIsEsNuevoProforma(Boolean isEsNuevoProforma) {
		this.isEsNuevoProforma = isEsNuevoProforma;
	}

	public Boolean getEsParaAccionDesdeFormularioProforma() {
		return esParaAccionDesdeFormularioProforma;
	}
	
	public void setEsParaAccionDesdeFormularioProforma(Boolean esParaAccionDesdeFormularioProforma) {
		this.esParaAccionDesdeFormularioProforma = esParaAccionDesdeFormularioProforma;
	}
	
	public Boolean getIsEsMantenimientoRelacionesRelacionadoUnico() {
		return isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public void setIsEsMantenimientoRelacionesRelacionadoUnico(Boolean isEsMantenimientoRelacionesRelacionadoUnico) {
		this.isEsMantenimientoRelacionesRelacionadoUnico = isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public Boolean getIsEsMantenimientoRelaciones() {
		return isEsMantenimientoRelaciones;
	}

	public void setIsEsMantenimientoRelaciones(Boolean isEsMantenimientoRelaciones) {
		this.isEsMantenimientoRelaciones = isEsMantenimientoRelaciones;
	}

	public Boolean getIsEsMantenimientoRelacionado() {
		return isEsMantenimientoRelacionado;
	}

	public void setIsEsMantenimientoRelacionado(Boolean isEsMantenimientoRelacionado) {
		this.isEsMantenimientoRelacionado = isEsMantenimientoRelacionado;
	}

	public Boolean getesParaBusquedaForeignKey() {
		return esParaBusquedaForeignKey;
	}

	public void setesParaBusquedaForeignKey(Boolean esParaBusquedaForeignKey) {
		this.esParaBusquedaForeignKey = esParaBusquedaForeignKey;
	}

	public Boolean getIsContieneImagenes() {
		return isContieneImagenes;
	}

	public void setIsContieneImagenes(Boolean isContieneImagenes) {
		this.isContieneImagenes = isContieneImagenes;
	}		
	
	
	public void cargarCombosEmpresasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.empresasForeignKey=new ArrayList<Empresa>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EmpresaLogic empresaLogic=new EmpresaLogic();

			//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

			if(this.proformaSessionBean==null) {
				this.proformaSessionBean=new ProformaSessionBean();
			}

			if(!this.proformaSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

					empresaLogic.getTodosEmpresasWithConnection(sFinalQuery,new Pagination());

					this.empresasForeignKey=empresaLogic.getEmpresas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEmpresa(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					empresaLogic.getEntityWithConnection(proformaSessionBean.getlidEmpresaActual());
					this.empresasForeignKey.add(empresaLogic.getEmpresa());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosSucursalsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.sucursalsForeignKey=new ArrayList<Sucursal>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			SucursalLogic sucursalLogic=new SucursalLogic();

			//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

			if(this.proformaSessionBean==null) {
				this.proformaSessionBean=new ProformaSessionBean();
			}

			if(!this.proformaSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

					sucursalLogic.getTodosSucursalsWithConnection(sFinalQuery,new Pagination());

					this.sucursalsForeignKey=sucursalLogic.getSucursals();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaSucursal(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					sucursalLogic.getEntityWithConnection(proformaSessionBean.getlidSucursalActual());
					this.sucursalsForeignKey.add(sucursalLogic.getSucursal());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosUsuariosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.usuariosForeignKey=new ArrayList<Usuario>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			UsuarioLogic usuarioLogic=new UsuarioLogic();

			//usuarioLogic.getUsuarioDataAccess().setIsForForeingKeyData(true);

			if(this.proformaSessionBean==null) {
				this.proformaSessionBean=new ProformaSessionBean();
			}

			if(!this.proformaSessionBean.getisBusquedaDesdeForeignKeySesionUsuario()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//usuarioLogic.getUsuarioDataAccess().setIsForForeingKeyData(true);

					usuarioLogic.getTodosUsuariosWithConnection(sFinalQuery,new Pagination());

					this.usuariosForeignKey=usuarioLogic.getUsuarios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaUsuario(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					usuarioLogic.getEntityWithConnection(proformaSessionBean.getlidUsuarioActual());
					this.usuariosForeignKey.add(usuarioLogic.getUsuario());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEjerciciosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.ejerciciosForeignKey=new ArrayList<Ejercicio>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EjercicioLogic ejercicioLogic=new EjercicioLogic();

			//ejercicioLogic.getEjercicioDataAccess().setIsForForeingKeyData(true);

			if(this.proformaSessionBean==null) {
				this.proformaSessionBean=new ProformaSessionBean();
			}

			if(!this.proformaSessionBean.getisBusquedaDesdeForeignKeySesionEjercicio()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//ejercicioLogic.getEjercicioDataAccess().setIsForForeingKeyData(true);

					ejercicioLogic.getTodosEjerciciosWithConnection(sFinalQuery,new Pagination());

					this.ejerciciosForeignKey=ejercicioLogic.getEjercicios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEjercicio(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					ejercicioLogic.getEntityWithConnection(proformaSessionBean.getlidEjercicioActual());
					this.ejerciciosForeignKey.add(ejercicioLogic.getEjercicio());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosPeriodosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.periodosForeignKey=new ArrayList<Periodo>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			PeriodoLogic periodoLogic=new PeriodoLogic();

			//periodoLogic.getPeriodoDataAccess().setIsForForeingKeyData(true);

			if(this.proformaSessionBean==null) {
				this.proformaSessionBean=new ProformaSessionBean();
			}

			if(!this.proformaSessionBean.getisBusquedaDesdeForeignKeySesionPeriodo()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//periodoLogic.getPeriodoDataAccess().setIsForForeingKeyData(true);

					periodoLogic.getTodosPeriodosWithConnection(sFinalQuery,new Pagination());

					this.periodosForeignKey=periodoLogic.getPeriodos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaPeriodo(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					periodoLogic.getEntityWithConnection(proformaSessionBean.getlidPeriodoActual());
					this.periodosForeignKey.add(periodoLogic.getPeriodo());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosAniosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.aniosForeignKey=new ArrayList<Anio>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			AnioLogic anioLogic=new AnioLogic();

			//anioLogic.getAnioDataAccess().setIsForForeingKeyData(true);

			if(this.proformaSessionBean==null) {
				this.proformaSessionBean=new ProformaSessionBean();
			}

			if(!this.proformaSessionBean.getisBusquedaDesdeForeignKeySesionAnio()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//anioLogic.getAnioDataAccess().setIsForForeingKeyData(true);

					anioLogic.getTodosAniosWithConnection(sFinalQuery,new Pagination());

					this.aniosForeignKey=anioLogic.getAnios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaAnio(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					anioLogic.getEntityWithConnection(proformaSessionBean.getlidAnioActual());
					this.aniosForeignKey.add(anioLogic.getAnio());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosMessForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.messForeignKey=new ArrayList<Mes>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			MesLogic mesLogic=new MesLogic();

			//mesLogic.getMesDataAccess().setIsForForeingKeyData(true);

			if(this.proformaSessionBean==null) {
				this.proformaSessionBean=new ProformaSessionBean();
			}

			if(!this.proformaSessionBean.getisBusquedaDesdeForeignKeySesionMes()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//mesLogic.getMesDataAccess().setIsForForeingKeyData(true);

					mesLogic.getTodosMessWithConnection(sFinalQuery,new Pagination());

					this.messForeignKey=mesLogic.getMess();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaMes(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					mesLogic.getEntityWithConnection(proformaSessionBean.getlidMesActual());
					this.messForeignKey.add(mesLogic.getMes());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosMonedasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.monedasForeignKey=new ArrayList<Moneda>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			MonedaLogic monedaLogic=new MonedaLogic();

			//monedaLogic.getMonedaDataAccess().setIsForForeingKeyData(true);

			if(this.proformaSessionBean==null) {
				this.proformaSessionBean=new ProformaSessionBean();
			}

			if(!this.proformaSessionBean.getisBusquedaDesdeForeignKeySesionMoneda()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//monedaLogic.getMonedaDataAccess().setIsForForeingKeyData(true);

					monedaLogic.getTodosMonedasWithConnection(sFinalQuery,new Pagination());

					this.monedasForeignKey=monedaLogic.getMonedas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaMoneda(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					monedaLogic.getEntityWithConnection(proformaSessionBean.getlidMonedaActual());
					this.monedasForeignKey.add(monedaLogic.getMoneda());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEmpleadosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.empleadosForeignKey=new ArrayList<Empleado>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EmpleadoLogic empleadoLogic=new EmpleadoLogic();

			//empleadoLogic.getEmpleadoDataAccess().setIsForForeingKeyData(true);

			if(this.proformaSessionBean==null) {
				this.proformaSessionBean=new ProformaSessionBean();
			}

			if(!this.proformaSessionBean.getisBusquedaDesdeForeignKeySesionEmpleado()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//empleadoLogic.getEmpleadoDataAccess().setIsForForeingKeyData(true);

					empleadoLogic.getTodosEmpleadosWithConnection(sFinalQuery,new Pagination());

					this.empleadosForeignKey=empleadoLogic.getEmpleados();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEmpleado(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					empleadoLogic.getEntityWithConnection(proformaSessionBean.getlidEmpleadoActual());
					this.empleadosForeignKey.add(empleadoLogic.getEmpleado());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosFormatosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.formatosForeignKey=new ArrayList<Formato>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			Formato formatoNulo = new Formato();

			FormatoLogic formatoLogic=new FormatoLogic();

			//formatoLogic.getFormatoDataAccess().setIsForForeingKeyData(true);

			if(this.proformaSessionBean==null) {
				this.proformaSessionBean=new ProformaSessionBean();
			}

			if(!this.proformaSessionBean.getisBusquedaDesdeForeignKeySesionFormato()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//formatoLogic.getFormatoDataAccess().setIsForForeingKeyData(true);

					formatoLogic.getTodosFormatosWithConnection(sFinalQuery,new Pagination());

					this.formatosForeignKey=formatoLogic.getFormatos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.formatosForeignKey.add(0, formatoNulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaFormato(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					formatoLogic.getEntityWithConnection(proformaSessionBean.getlidFormatoActual());
					this.formatosForeignKey.add(formatoLogic.getFormato());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEstadoProformasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.estadoproformasForeignKey=new ArrayList<EstadoProforma>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EstadoProformaLogic estadoproformaLogic=new EstadoProformaLogic();

			//estadoproformaLogic.getEstadoProformaDataAccess().setIsForForeingKeyData(true);

			if(this.proformaSessionBean==null) {
				this.proformaSessionBean=new ProformaSessionBean();
			}

			if(!this.proformaSessionBean.getisBusquedaDesdeForeignKeySesionEstadoProforma()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//estadoproformaLogic.getEstadoProformaDataAccess().setIsForForeingKeyData(true);

					estadoproformaLogic.getTodosEstadoProformasWithConnection(sFinalQuery,new Pagination());

					this.estadoproformasForeignKey=estadoproformaLogic.getEstadoProformas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEstadoProforma(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					estadoproformaLogic.getEntityWithConnection(proformaSessionBean.getlidEstadoProformaActual());
					this.estadoproformasForeignKey.add(estadoproformaLogic.getEstadoProforma());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosClientesForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.clientesForeignKey=new ArrayList<Cliente>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			ClienteLogic clienteLogic=new ClienteLogic();

			//clienteLogic.getClienteDataAccess().setIsForForeingKeyData(true);

			if(this.proformaSessionBean==null) {
				this.proformaSessionBean=new ProformaSessionBean();
			}

			if(!this.proformaSessionBean.getisBusquedaDesdeForeignKeySesionCliente()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//clienteLogic.getClienteDataAccess().setIsForForeingKeyData(true);

					clienteLogic.getTodosClientesWithConnection(sFinalQuery,new Pagination());

					this.clientesForeignKey=clienteLogic.getClientes();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCliente(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteLogic.getEntityWithConnection(proformaSessionBean.getlidClienteActual());
					this.clientesForeignKey.add(clienteLogic.getCliente());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoPreciosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipopreciosForeignKey=new ArrayList<TipoPrecio>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoPrecioLogic tipoprecioLogic=new TipoPrecioLogic();

			//tipoprecioLogic.getTipoPrecioDataAccess().setIsForForeingKeyData(true);

			if(this.proformaSessionBean==null) {
				this.proformaSessionBean=new ProformaSessionBean();
			}

			if(!this.proformaSessionBean.getisBusquedaDesdeForeignKeySesionTipoPrecio()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tipoprecioLogic.getTipoPrecioDataAccess().setIsForForeingKeyData(true);

					tipoprecioLogic.getTodosTipoPreciosWithConnection(sFinalQuery,new Pagination());

					this.tipopreciosForeignKey=tipoprecioLogic.getTipoPrecios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoPrecio(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipoprecioLogic.getEntityWithConnection(proformaSessionBean.getlidTipoPrecioActual());
					this.tipopreciosForeignKey.add(tipoprecioLogic.getTipoPrecio());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosVendedorsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.vendedorsForeignKey=new ArrayList<Vendedor>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			Vendedor vendedorNulo = new Vendedor();

			VendedorLogic vendedorLogic=new VendedorLogic();

			//vendedorLogic.getVendedorDataAccess().setIsForForeingKeyData(true);

			if(this.proformaSessionBean==null) {
				this.proformaSessionBean=new ProformaSessionBean();
			}

			if(!this.proformaSessionBean.getisBusquedaDesdeForeignKeySesionVendedor()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//vendedorLogic.getVendedorDataAccess().setIsForForeingKeyData(true);

					vendedorLogic.getTodosVendedorsWithConnection(sFinalQuery,new Pagination());

					this.vendedorsForeignKey=vendedorLogic.getVendedors();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.vendedorsForeignKey.add(0, vendedorNulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaVendedor(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					vendedorLogic.getEntityWithConnection(proformaSessionBean.getlidVendedorActual());
					this.vendedorsForeignKey.add(vendedorLogic.getVendedor());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosSubClientesForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.subclientesForeignKey=new ArrayList<SubCliente>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			SubCliente subclienteNulo = new SubCliente();

			SubClienteLogic subclienteLogic=new SubClienteLogic();

			//subclienteLogic.getSubClienteDataAccess().setIsForForeingKeyData(true);

			if(this.proformaSessionBean==null) {
				this.proformaSessionBean=new ProformaSessionBean();
			}

			if(!this.proformaSessionBean.getisBusquedaDesdeForeignKeySesionSubCliente()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//subclienteLogic.getSubClienteDataAccess().setIsForForeingKeyData(true);

					subclienteLogic.getTodosSubClientesWithConnection(sFinalQuery,new Pagination());

					this.subclientesForeignKey=subclienteLogic.getSubClientes();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.subclientesForeignKey.add(0, subclienteNulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaSubCliente(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					subclienteLogic.getEntityWithConnection(proformaSessionBean.getlidSubClienteActual());
					this.subclientesForeignKey.add(subclienteLogic.getSubCliente());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoViaTransportesForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipoviatransportesForeignKey=new ArrayList<TipoViaTransporte>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoViaTransporteLogic tipoviatransporteLogic=new TipoViaTransporteLogic();

			//tipoviatransporteLogic.getTipoViaTransporteDataAccess().setIsForForeingKeyData(true);

			if(this.proformaSessionBean==null) {
				this.proformaSessionBean=new ProformaSessionBean();
			}

			if(!this.proformaSessionBean.getisBusquedaDesdeForeignKeySesionTipoViaTransporte()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tipoviatransporteLogic.getTipoViaTransporteDataAccess().setIsForForeingKeyData(true);

					tipoviatransporteLogic.getTodosTipoViaTransportesWithConnection(sFinalQuery,new Pagination());

					this.tipoviatransportesForeignKey=tipoviatransporteLogic.getTipoViaTransportes();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoViaTransporte(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipoviatransporteLogic.getEntityWithConnection(proformaSessionBean.getlidTipoViaTransporteActual());
					this.tipoviatransportesForeignKey.add(tipoviatransporteLogic.getTipoViaTransporte());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTransportesForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.transportesForeignKey=new ArrayList<Transporte>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TransporteLogic transporteLogic=new TransporteLogic();

			//transporteLogic.getTransporteDataAccess().setIsForForeingKeyData(true);

			if(this.proformaSessionBean==null) {
				this.proformaSessionBean=new ProformaSessionBean();
			}

			if(!this.proformaSessionBean.getisBusquedaDesdeForeignKeySesionTransporte()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//transporteLogic.getTransporteDataAccess().setIsForForeingKeyData(true);

					transporteLogic.getTodosTransportesWithConnection(sFinalQuery,new Pagination());

					this.transportesForeignKey=transporteLogic.getTransportes();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTransporte(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					transporteLogic.getEntityWithConnection(proformaSessionBean.getlidTransporteActual());
					this.transportesForeignKey.add(transporteLogic.getTransporte());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosRutaTransportesForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.rutatransportesForeignKey=new ArrayList<RutaTransporte>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			RutaTransporteLogic rutatransporteLogic=new RutaTransporteLogic();

			//rutatransporteLogic.getRutaTransporteDataAccess().setIsForForeingKeyData(true);

			if(this.proformaSessionBean==null) {
				this.proformaSessionBean=new ProformaSessionBean();
			}

			if(!this.proformaSessionBean.getisBusquedaDesdeForeignKeySesionRutaTransporte()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//rutatransporteLogic.getRutaTransporteDataAccess().setIsForForeingKeyData(true);

					rutatransporteLogic.getTodosRutaTransportesWithConnection(sFinalQuery,new Pagination());

					this.rutatransportesForeignKey=rutatransporteLogic.getRutaTransportes();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaRutaTransporte(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					rutatransporteLogic.getEntityWithConnection(proformaSessionBean.getlidRutaTransporteActual());
					this.rutatransportesForeignKey.add(rutatransporteLogic.getRutaTransporte());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCentroCostosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.centrocostosForeignKey=new ArrayList<CentroCosto>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CentroCostoLogic centrocostoLogic=new CentroCostoLogic();

			//centrocostoLogic.getCentroCostoDataAccess().setIsForForeingKeyData(true);

			if(this.proformaSessionBean==null) {
				this.proformaSessionBean=new ProformaSessionBean();
			}

			if(!this.proformaSessionBean.getisBusquedaDesdeForeignKeySesionCentroCosto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//centrocostoLogic.getCentroCostoDataAccess().setIsForForeingKeyData(true);

					centrocostoLogic.getTodosCentroCostosWithConnection(sFinalQuery,new Pagination());

					this.centrocostosForeignKey=centrocostoLogic.getCentroCostos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCentroCosto(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					centrocostoLogic.getEntityWithConnection(proformaSessionBean.getlidCentroCostoActual());
					this.centrocostosForeignKey.add(centrocostoLogic.getCentroCosto());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoProformasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipoproformasForeignKey=new ArrayList<TipoProforma>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoProformaLogic tipoproformaLogic=new TipoProformaLogic();

			//tipoproformaLogic.getTipoProformaDataAccess().setIsForForeingKeyData(true);

			if(this.proformaSessionBean==null) {
				this.proformaSessionBean=new ProformaSessionBean();
			}

			if(!this.proformaSessionBean.getisBusquedaDesdeForeignKeySesionTipoProforma()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tipoproformaLogic.getTipoProformaDataAccess().setIsForForeingKeyData(true);

					tipoproformaLogic.getTodosTipoProformasWithConnection(sFinalQuery,new Pagination());

					this.tipoproformasForeignKey=tipoproformaLogic.getTipoProformas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoProforma(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipoproformaLogic.getEntityWithConnection(proformaSessionBean.getlidTipoProformaActual());
					this.tipoproformasForeignKey.add(tipoproformaLogic.getTipoProforma());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosConsignatariosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.consignatariosForeignKey=new ArrayList<Consignatario>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			ConsignatarioLogic consignatarioLogic=new ConsignatarioLogic();

			//consignatarioLogic.getConsignatarioDataAccess().setIsForForeingKeyData(true);

			if(this.proformaSessionBean==null) {
				this.proformaSessionBean=new ProformaSessionBean();
			}

			if(!this.proformaSessionBean.getisBusquedaDesdeForeignKeySesionConsignatario()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//consignatarioLogic.getConsignatarioDataAccess().setIsForForeingKeyData(true);

					consignatarioLogic.getTodosConsignatariosWithConnection(sFinalQuery,new Pagination());

					this.consignatariosForeignKey=consignatarioLogic.getConsignatarios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaConsignatario(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					consignatarioLogic.getEntityWithConnection(proformaSessionBean.getlidConsignatarioActual());
					this.consignatariosForeignKey.add(consignatarioLogic.getConsignatario());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoCambiosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipocambiosForeignKey=new ArrayList<TipoCambio>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoCambio tipocambioNulo = new TipoCambio();

			TipoCambioLogic tipocambioLogic=new TipoCambioLogic();

			//tipocambioLogic.getTipoCambioDataAccess().setIsForForeingKeyData(true);

			if(this.proformaSessionBean==null) {
				this.proformaSessionBean=new ProformaSessionBean();
			}

			if(!this.proformaSessionBean.getisBusquedaDesdeForeignKeySesionTipoCambio()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tipocambioLogic.getTipoCambioDataAccess().setIsForForeingKeyData(true);

					tipocambioLogic.getTodosTipoCambiosWithConnection(sFinalQuery,new Pagination());

					this.tipocambiosForeignKey=tipocambioLogic.getTipoCambios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.tipocambiosForeignKey.add(0, tipocambioNulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoCambio(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipocambioLogic.getEntityWithConnection(proformaSessionBean.getlidTipoCambioActual());
					this.tipocambiosForeignKey.add(tipocambioLogic.getTipoCambio());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	
	public void setActualEmpresaForeignKey(Long idEmpresaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(empresaTemp!=null) {

					if(this.proforma!=null) {
						this.proforma.setEmpresa(empresaTemp);
					}

					if(this.jInternalFrameDetalleFormProforma!=null) {
						this.jInternalFrameDetalleFormProforma.jComboBoxid_empresaProforma.setSelectedItem(empresaTemp);
					}
				} else {
					//jComboBoxid_empresaProforma.setSelectedItem(empresaTemp);
					if(this.jInternalFrameDetalleFormProforma!=null) {
						if(this.jInternalFrameDetalleFormProforma.jComboBoxid_empresaProforma.getItemCount()>0) {
							this.jInternalFrameDetalleFormProforma.jComboBoxid_empresaProforma.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEmpresaForeignKeyDescripcion(Long idEmpresaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}


			sDescripcion=EmpresaConstantesFunciones.getEmpresaDescripcion(empresaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEmpresaForeignKeyGenerico(Long idEmpresaSeleccionado,JComboBox jComboBoxid_empresaProformaGenerico)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(empresaTemp!=null) {
				jComboBoxid_empresaProformaGenerico.setSelectedItem(empresaTemp);
			} else {
				if(jComboBoxid_empresaProformaGenerico!=null && jComboBoxid_empresaProformaGenerico.getItemCount()>0) {
					jComboBoxid_empresaProformaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualSucursalForeignKey(Long idSucursalSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(sucursalTemp!=null) {

					if(this.proforma!=null) {
						this.proforma.setSucursal(sucursalTemp);
					}

					if(this.jInternalFrameDetalleFormProforma!=null) {
						this.jInternalFrameDetalleFormProforma.jComboBoxid_sucursalProforma.setSelectedItem(sucursalTemp);
					}
				} else {
					//jComboBoxid_sucursalProforma.setSelectedItem(sucursalTemp);
					if(this.jInternalFrameDetalleFormProforma!=null) {
						if(this.jInternalFrameDetalleFormProforma.jComboBoxid_sucursalProforma.getItemCount()>0) {
							this.jInternalFrameDetalleFormProforma.jComboBoxid_sucursalProforma.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualSucursalForeignKeyDescripcion(Long idSucursalSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}


			sDescripcion=SucursalConstantesFunciones.getSucursalDescripcion(sucursalTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualSucursalForeignKeyGenerico(Long idSucursalSeleccionado,JComboBox jComboBoxid_sucursalProformaGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sucursalTemp!=null) {
				jComboBoxid_sucursalProformaGenerico.setSelectedItem(sucursalTemp);
			} else {
				if(jComboBoxid_sucursalProformaGenerico!=null && jComboBoxid_sucursalProformaGenerico.getItemCount()>0) {
					jComboBoxid_sucursalProformaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualUsuarioForeignKey(Long idUsuarioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Usuario  usuarioTemp=null;

			for(Usuario usuarioAux:usuariosForeignKey) {
				if(usuarioAux.getId()!=null && usuarioAux.getId().equals(idUsuarioSeleccionado)) {
					usuarioTemp=usuarioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(usuarioTemp!=null) {

					if(this.proforma!=null) {
						this.proforma.setUsuario(usuarioTemp);
					}

					if(this.jInternalFrameDetalleFormProforma!=null) {
						this.jInternalFrameDetalleFormProforma.jComboBoxid_usuarioProforma.setSelectedItem(usuarioTemp);
					}
				} else {
					//jComboBoxid_usuarioProforma.setSelectedItem(usuarioTemp);
					if(this.jInternalFrameDetalleFormProforma!=null) {
						if(this.jInternalFrameDetalleFormProforma.jComboBoxid_usuarioProforma.getItemCount()>0) {
							this.jInternalFrameDetalleFormProforma.jComboBoxid_usuarioProforma.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualUsuarioForeignKeyDescripcion(Long idUsuarioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Usuario  usuarioTemp=null;

			for(Usuario usuarioAux:usuariosForeignKey) {
				if(usuarioAux.getId()!=null && usuarioAux.getId().equals(idUsuarioSeleccionado)) {
					usuarioTemp=usuarioAux;
					break;
				}
			}


			sDescripcion=UsuarioConstantesFunciones.getUsuarioDescripcion(usuarioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualUsuarioForeignKeyGenerico(Long idUsuarioSeleccionado,JComboBox jComboBoxid_usuarioProformaGenerico)throws Exception
	{
		try
		{
			Usuario  usuarioTemp=null;

			for(Usuario usuarioAux:usuariosForeignKey) {
				if(usuarioAux.getId()!=null && usuarioAux.getId().equals(idUsuarioSeleccionado)) {
					usuarioTemp=usuarioAux;
					break;
				}
			}

			if(usuarioTemp!=null) {
				jComboBoxid_usuarioProformaGenerico.setSelectedItem(usuarioTemp);
			} else {
				if(jComboBoxid_usuarioProformaGenerico!=null && jComboBoxid_usuarioProformaGenerico.getItemCount()>0) {
					jComboBoxid_usuarioProformaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEjercicioForeignKey(Long idEjercicioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Ejercicio  ejercicioTemp=null;

			for(Ejercicio ejercicioAux:ejerciciosForeignKey) {
				if(ejercicioAux.getId()!=null && ejercicioAux.getId().equals(idEjercicioSeleccionado)) {
					ejercicioTemp=ejercicioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(ejercicioTemp!=null) {

					if(this.proforma!=null) {
						this.proforma.setEjercicio(ejercicioTemp);
					}

					if(this.jInternalFrameDetalleFormProforma!=null) {
						this.jInternalFrameDetalleFormProforma.jComboBoxid_ejercicioProforma.setSelectedItem(ejercicioTemp);
					}
				} else {
					//jComboBoxid_ejercicioProforma.setSelectedItem(ejercicioTemp);
					if(this.jInternalFrameDetalleFormProforma!=null) {
						if(this.jInternalFrameDetalleFormProforma.jComboBoxid_ejercicioProforma.getItemCount()>0) {
							this.jInternalFrameDetalleFormProforma.jComboBoxid_ejercicioProforma.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEjercicioForeignKeyDescripcion(Long idEjercicioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Ejercicio  ejercicioTemp=null;

			for(Ejercicio ejercicioAux:ejerciciosForeignKey) {
				if(ejercicioAux.getId()!=null && ejercicioAux.getId().equals(idEjercicioSeleccionado)) {
					ejercicioTemp=ejercicioAux;
					break;
				}
			}


			sDescripcion=EjercicioConstantesFunciones.getEjercicioDescripcion(ejercicioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEjercicioForeignKeyGenerico(Long idEjercicioSeleccionado,JComboBox jComboBoxid_ejercicioProformaGenerico)throws Exception
	{
		try
		{
			Ejercicio  ejercicioTemp=null;

			for(Ejercicio ejercicioAux:ejerciciosForeignKey) {
				if(ejercicioAux.getId()!=null && ejercicioAux.getId().equals(idEjercicioSeleccionado)) {
					ejercicioTemp=ejercicioAux;
					break;
				}
			}

			if(ejercicioTemp!=null) {
				jComboBoxid_ejercicioProformaGenerico.setSelectedItem(ejercicioTemp);
			} else {
				if(jComboBoxid_ejercicioProformaGenerico!=null && jComboBoxid_ejercicioProformaGenerico.getItemCount()>0) {
					jComboBoxid_ejercicioProformaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualPeriodoForeignKey(Long idPeriodoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Periodo  periodoTemp=null;

			for(Periodo periodoAux:periodosForeignKey) {
				if(periodoAux.getId()!=null && periodoAux.getId().equals(idPeriodoSeleccionado)) {
					periodoTemp=periodoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(periodoTemp!=null) {

					if(this.proforma!=null) {
						this.proforma.setPeriodo(periodoTemp);
					}

					if(this.jInternalFrameDetalleFormProforma!=null) {
						this.jInternalFrameDetalleFormProforma.jComboBoxid_periodoProforma.setSelectedItem(periodoTemp);
					}
				} else {
					//jComboBoxid_periodoProforma.setSelectedItem(periodoTemp);
					if(this.jInternalFrameDetalleFormProforma!=null) {
						if(this.jInternalFrameDetalleFormProforma.jComboBoxid_periodoProforma.getItemCount()>0) {
							this.jInternalFrameDetalleFormProforma.jComboBoxid_periodoProforma.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualPeriodoForeignKeyDescripcion(Long idPeriodoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Periodo  periodoTemp=null;

			for(Periodo periodoAux:periodosForeignKey) {
				if(periodoAux.getId()!=null && periodoAux.getId().equals(idPeriodoSeleccionado)) {
					periodoTemp=periodoAux;
					break;
				}
			}


			sDescripcion=PeriodoConstantesFunciones.getPeriodoDescripcion(periodoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualPeriodoForeignKeyGenerico(Long idPeriodoSeleccionado,JComboBox jComboBoxid_periodoProformaGenerico)throws Exception
	{
		try
		{
			Periodo  periodoTemp=null;

			for(Periodo periodoAux:periodosForeignKey) {
				if(periodoAux.getId()!=null && periodoAux.getId().equals(idPeriodoSeleccionado)) {
					periodoTemp=periodoAux;
					break;
				}
			}

			if(periodoTemp!=null) {
				jComboBoxid_periodoProformaGenerico.setSelectedItem(periodoTemp);
			} else {
				if(jComboBoxid_periodoProformaGenerico!=null && jComboBoxid_periodoProformaGenerico.getItemCount()>0) {
					jComboBoxid_periodoProformaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualAnioForeignKey(Long idAnioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Anio  anioTemp=null;

			for(Anio anioAux:aniosForeignKey) {
				if(anioAux.getId()!=null && anioAux.getId().equals(idAnioSeleccionado)) {
					anioTemp=anioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(anioTemp!=null) {

					if(this.proforma!=null) {
						this.proforma.setAnio(anioTemp);
					}

					if(this.jInternalFrameDetalleFormProforma!=null) {
						this.jInternalFrameDetalleFormProforma.jComboBoxid_anioProforma.setSelectedItem(anioTemp);
					}
				} else {
					//jComboBoxid_anioProforma.setSelectedItem(anioTemp);
					if(this.jInternalFrameDetalleFormProforma!=null) {
						if(this.jInternalFrameDetalleFormProforma.jComboBoxid_anioProforma.getItemCount()>0) {
							this.jInternalFrameDetalleFormProforma.jComboBoxid_anioProforma.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualAnioForeignKeyDescripcion(Long idAnioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Anio  anioTemp=null;

			for(Anio anioAux:aniosForeignKey) {
				if(anioAux.getId()!=null && anioAux.getId().equals(idAnioSeleccionado)) {
					anioTemp=anioAux;
					break;
				}
			}


			sDescripcion=AnioConstantesFunciones.getAnioDescripcion(anioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualAnioForeignKeyGenerico(Long idAnioSeleccionado,JComboBox jComboBoxid_anioProformaGenerico)throws Exception
	{
		try
		{
			Anio  anioTemp=null;

			for(Anio anioAux:aniosForeignKey) {
				if(anioAux.getId()!=null && anioAux.getId().equals(idAnioSeleccionado)) {
					anioTemp=anioAux;
					break;
				}
			}

			if(anioTemp!=null) {
				jComboBoxid_anioProformaGenerico.setSelectedItem(anioTemp);
			} else {
				if(jComboBoxid_anioProformaGenerico!=null && jComboBoxid_anioProformaGenerico.getItemCount()>0) {
					jComboBoxid_anioProformaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualMesForeignKey(Long idMesSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Mes  mesTemp=null;

			for(Mes mesAux:messForeignKey) {
				if(mesAux.getId()!=null && mesAux.getId().equals(idMesSeleccionado)) {
					mesTemp=mesAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(mesTemp!=null) {

					if(this.proforma!=null) {
						this.proforma.setMes(mesTemp);
					}

					if(this.jInternalFrameDetalleFormProforma!=null) {
						this.jInternalFrameDetalleFormProforma.jComboBoxid_mesProforma.setSelectedItem(mesTemp);
					}
				} else {
					//jComboBoxid_mesProforma.setSelectedItem(mesTemp);
					if(this.jInternalFrameDetalleFormProforma!=null) {
						if(this.jInternalFrameDetalleFormProforma.jComboBoxid_mesProforma.getItemCount()>0) {
							this.jInternalFrameDetalleFormProforma.jComboBoxid_mesProforma.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualMesForeignKeyDescripcion(Long idMesSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Mes  mesTemp=null;

			for(Mes mesAux:messForeignKey) {
				if(mesAux.getId()!=null && mesAux.getId().equals(idMesSeleccionado)) {
					mesTemp=mesAux;
					break;
				}
			}


			sDescripcion=MesConstantesFunciones.getMesDescripcion(mesTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualMesForeignKeyGenerico(Long idMesSeleccionado,JComboBox jComboBoxid_mesProformaGenerico)throws Exception
	{
		try
		{
			Mes  mesTemp=null;

			for(Mes mesAux:messForeignKey) {
				if(mesAux.getId()!=null && mesAux.getId().equals(idMesSeleccionado)) {
					mesTemp=mesAux;
					break;
				}
			}

			if(mesTemp!=null) {
				jComboBoxid_mesProformaGenerico.setSelectedItem(mesTemp);
			} else {
				if(jComboBoxid_mesProformaGenerico!=null && jComboBoxid_mesProformaGenerico.getItemCount()>0) {
					jComboBoxid_mesProformaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualMonedaForeignKey(Long idMonedaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Moneda  monedaTemp=null;

			for(Moneda monedaAux:monedasForeignKey) {
				if(monedaAux.getId()!=null && monedaAux.getId().equals(idMonedaSeleccionado)) {
					monedaTemp=monedaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(monedaTemp!=null) {

					if(this.proforma!=null) {
						this.proforma.setMoneda(monedaTemp);
					}

					if(this.jInternalFrameDetalleFormProforma!=null) {
						this.jInternalFrameDetalleFormProforma.jComboBoxid_monedaProforma.setSelectedItem(monedaTemp);
					}
				} else {
					//jComboBoxid_monedaProforma.setSelectedItem(monedaTemp);
					if(this.jInternalFrameDetalleFormProforma!=null) {
						if(this.jInternalFrameDetalleFormProforma.jComboBoxid_monedaProforma.getItemCount()>0) {
							this.jInternalFrameDetalleFormProforma.jComboBoxid_monedaProforma.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualMonedaForeignKeyDescripcion(Long idMonedaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Moneda  monedaTemp=null;

			for(Moneda monedaAux:monedasForeignKey) {
				if(monedaAux.getId()!=null && monedaAux.getId().equals(idMonedaSeleccionado)) {
					monedaTemp=monedaAux;
					break;
				}
			}


			sDescripcion=MonedaConstantesFunciones.getMonedaDescripcion(monedaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualMonedaForeignKeyGenerico(Long idMonedaSeleccionado,JComboBox jComboBoxid_monedaProformaGenerico)throws Exception
	{
		try
		{
			Moneda  monedaTemp=null;

			for(Moneda monedaAux:monedasForeignKey) {
				if(monedaAux.getId()!=null && monedaAux.getId().equals(idMonedaSeleccionado)) {
					monedaTemp=monedaAux;
					break;
				}
			}

			if(monedaTemp!=null) {
				jComboBoxid_monedaProformaGenerico.setSelectedItem(monedaTemp);
			} else {
				if(jComboBoxid_monedaProformaGenerico!=null && jComboBoxid_monedaProformaGenerico.getItemCount()>0) {
					jComboBoxid_monedaProformaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEmpleadoForeignKey(Long idEmpleadoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Empleado  empleadoTemp=null;

			for(Empleado empleadoAux:empleadosForeignKey) {
				if(empleadoAux.getId()!=null && empleadoAux.getId().equals(idEmpleadoSeleccionado)) {
					empleadoTemp=empleadoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(empleadoTemp!=null) {

					if(this.proforma!=null) {
						this.proforma.setEmpleado(empleadoTemp);
					}

					if(this.jInternalFrameDetalleFormProforma!=null) {
						this.jInternalFrameDetalleFormProforma.jComboBoxid_empleadoProforma.setSelectedItem(empleadoTemp);
					}
				} else {
					//jComboBoxid_empleadoProforma.setSelectedItem(empleadoTemp);
					if(this.jInternalFrameDetalleFormProforma!=null) {
						if(this.jInternalFrameDetalleFormProforma.jComboBoxid_empleadoProforma.getItemCount()>0) {
							this.jInternalFrameDetalleFormProforma.jComboBoxid_empleadoProforma.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdEmpleado") || sFormularioTipoBusqueda.equals("Todos")){
					if(empleadoTemp!=null && jComboBoxid_empleadoFK_IdEmpleadoProforma!=null) {
						jComboBoxid_empleadoFK_IdEmpleadoProforma.setSelectedItem(empleadoTemp);
					} else {
						if(jComboBoxid_empleadoFK_IdEmpleadoProforma!=null) {
							//jComboBoxid_empleadoFK_IdEmpleadoProforma.setSelectedItem(empleadoTemp);
							if(jComboBoxid_empleadoFK_IdEmpleadoProforma.getItemCount()>0) {
								jComboBoxid_empleadoFK_IdEmpleadoProforma.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEmpleadoForeignKeyDescripcion(Long idEmpleadoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Empleado  empleadoTemp=null;

			for(Empleado empleadoAux:empleadosForeignKey) {
				if(empleadoAux.getId()!=null && empleadoAux.getId().equals(idEmpleadoSeleccionado)) {
					empleadoTemp=empleadoAux;
					break;
				}
			}


			sDescripcion=EmpleadoConstantesFunciones.getEmpleadoDescripcion(empleadoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEmpleadoForeignKeyGenerico(Long idEmpleadoSeleccionado,JComboBox jComboBoxid_empleadoProformaGenerico)throws Exception
	{
		try
		{
			Empleado  empleadoTemp=null;

			for(Empleado empleadoAux:empleadosForeignKey) {
				if(empleadoAux.getId()!=null && empleadoAux.getId().equals(idEmpleadoSeleccionado)) {
					empleadoTemp=empleadoAux;
					break;
				}
			}

			if(empleadoTemp!=null) {
				jComboBoxid_empleadoProformaGenerico.setSelectedItem(empleadoTemp);
			} else {
				if(jComboBoxid_empleadoProformaGenerico!=null && jComboBoxid_empleadoProformaGenerico.getItemCount()>0) {
					jComboBoxid_empleadoProformaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualFormatoForeignKey(Long idFormatoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Formato  formatoTemp=null;

			for(Formato formatoAux:formatosForeignKey) {
				if(formatoAux.getId()!=null && formatoAux.getId().equals(idFormatoSeleccionado)) {
					formatoTemp=formatoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(formatoTemp!=null) {

					if(this.proforma!=null) {
						this.proforma.setFormato(formatoTemp);
					}

					if(this.jInternalFrameDetalleFormProforma!=null) {
						this.jInternalFrameDetalleFormProforma.jComboBoxid_formatoProforma.setSelectedItem(formatoTemp);
					}
				} else {
					//jComboBoxid_formatoProforma.setSelectedItem(formatoTemp);
					if(this.jInternalFrameDetalleFormProforma!=null) {
						if(this.jInternalFrameDetalleFormProforma.jComboBoxid_formatoProforma.getItemCount()>0) {
							this.jInternalFrameDetalleFormProforma.jComboBoxid_formatoProforma.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdFormato") || sFormularioTipoBusqueda.equals("Todos")){
					if(formatoTemp!=null && jComboBoxid_formatoFK_IdFormatoProforma!=null) {
						jComboBoxid_formatoFK_IdFormatoProforma.setSelectedItem(formatoTemp);
					} else {
						if(jComboBoxid_formatoFK_IdFormatoProforma!=null) {
							//jComboBoxid_formatoFK_IdFormatoProforma.setSelectedItem(formatoTemp);
							if(jComboBoxid_formatoFK_IdFormatoProforma.getItemCount()>0) {
								jComboBoxid_formatoFK_IdFormatoProforma.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualFormatoForeignKeyDescripcion(Long idFormatoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Formato  formatoTemp=null;

			for(Formato formatoAux:formatosForeignKey) {
				if(formatoAux.getId()!=null && formatoAux.getId().equals(idFormatoSeleccionado)) {
					formatoTemp=formatoAux;
					break;
				}
			}


			sDescripcion=FormatoConstantesFunciones.getFormatoDescripcion(formatoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualFormatoForeignKeyGenerico(Long idFormatoSeleccionado,JComboBox jComboBoxid_formatoProformaGenerico)throws Exception
	{
		try
		{
			Formato  formatoTemp=null;

			for(Formato formatoAux:formatosForeignKey) {
				if(formatoAux.getId()!=null && formatoAux.getId().equals(idFormatoSeleccionado)) {
					formatoTemp=formatoAux;
					break;
				}
			}

			if(formatoTemp!=null) {
				jComboBoxid_formatoProformaGenerico.setSelectedItem(formatoTemp);
			} else {
				if(jComboBoxid_formatoProformaGenerico!=null && jComboBoxid_formatoProformaGenerico.getItemCount()>0) {
					jComboBoxid_formatoProformaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEstadoProformaForeignKey(Long idEstadoProformaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			EstadoProforma  estadoproformaTemp=null;

			for(EstadoProforma estadoproformaAux:estadoproformasForeignKey) {
				if(estadoproformaAux.getId()!=null && estadoproformaAux.getId().equals(idEstadoProformaSeleccionado)) {
					estadoproformaTemp=estadoproformaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(estadoproformaTemp!=null) {

					if(this.proforma!=null) {
						this.proforma.setEstadoProforma(estadoproformaTemp);
					}

					if(this.jInternalFrameDetalleFormProforma!=null) {
						this.jInternalFrameDetalleFormProforma.jComboBoxid_estado_proformaProforma.setSelectedItem(estadoproformaTemp);
					}
				} else {
					//jComboBoxid_estado_proformaProforma.setSelectedItem(estadoproformaTemp);
					if(this.jInternalFrameDetalleFormProforma!=null) {
						if(this.jInternalFrameDetalleFormProforma.jComboBoxid_estado_proformaProforma.getItemCount()>0) {
							this.jInternalFrameDetalleFormProforma.jComboBoxid_estado_proformaProforma.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdEstadoProforma") || sFormularioTipoBusqueda.equals("Todos")){
					if(estadoproformaTemp!=null && jComboBoxid_estado_proformaFK_IdEstadoProformaProforma!=null) {
						jComboBoxid_estado_proformaFK_IdEstadoProformaProforma.setSelectedItem(estadoproformaTemp);
					} else {
						if(jComboBoxid_estado_proformaFK_IdEstadoProformaProforma!=null) {
							//jComboBoxid_estado_proformaFK_IdEstadoProformaProforma.setSelectedItem(estadoproformaTemp);
							if(jComboBoxid_estado_proformaFK_IdEstadoProformaProforma.getItemCount()>0) {
								jComboBoxid_estado_proformaFK_IdEstadoProformaProforma.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEstadoProformaForeignKeyDescripcion(Long idEstadoProformaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			EstadoProforma  estadoproformaTemp=null;

			for(EstadoProforma estadoproformaAux:estadoproformasForeignKey) {
				if(estadoproformaAux.getId()!=null && estadoproformaAux.getId().equals(idEstadoProformaSeleccionado)) {
					estadoproformaTemp=estadoproformaAux;
					break;
				}
			}


			sDescripcion=EstadoProformaConstantesFunciones.getEstadoProformaDescripcion(estadoproformaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEstadoProformaForeignKeyGenerico(Long idEstadoProformaSeleccionado,JComboBox jComboBoxid_estado_proformaProformaGenerico)throws Exception
	{
		try
		{
			EstadoProforma  estadoproformaTemp=null;

			for(EstadoProforma estadoproformaAux:estadoproformasForeignKey) {
				if(estadoproformaAux.getId()!=null && estadoproformaAux.getId().equals(idEstadoProformaSeleccionado)) {
					estadoproformaTemp=estadoproformaAux;
					break;
				}
			}

			if(estadoproformaTemp!=null) {
				jComboBoxid_estado_proformaProformaGenerico.setSelectedItem(estadoproformaTemp);
			} else {
				if(jComboBoxid_estado_proformaProformaGenerico!=null && jComboBoxid_estado_proformaProformaGenerico.getItemCount()>0) {
					jComboBoxid_estado_proformaProformaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualClienteForeignKey(Long idClienteSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Cliente  clienteTemp=null;

			for(Cliente clienteAux:clientesForeignKey) {
				if(clienteAux.getId()!=null && clienteAux.getId().equals(idClienteSeleccionado)) {
					clienteTemp=clienteAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(clienteTemp!=null) {

					if(this.proforma!=null) {
						this.proforma.setCliente(clienteTemp);
					}

					if(this.jInternalFrameDetalleFormProforma!=null) {
						this.jInternalFrameDetalleFormProforma.jComboBoxid_clienteProforma.setSelectedItem(clienteTemp);
					}
				} else {
					//jComboBoxid_clienteProforma.setSelectedItem(clienteTemp);
					if(this.jInternalFrameDetalleFormProforma!=null) {
						if(this.jInternalFrameDetalleFormProforma.jComboBoxid_clienteProforma.getItemCount()>0) {
							this.jInternalFrameDetalleFormProforma.jComboBoxid_clienteProforma.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdCliente") || sFormularioTipoBusqueda.equals("Todos")){
					if(clienteTemp!=null && jComboBoxid_clienteFK_IdClienteProforma!=null) {
						jComboBoxid_clienteFK_IdClienteProforma.setSelectedItem(clienteTemp);
					} else {
						if(jComboBoxid_clienteFK_IdClienteProforma!=null) {
							//jComboBoxid_clienteFK_IdClienteProforma.setSelectedItem(clienteTemp);
							if(jComboBoxid_clienteFK_IdClienteProforma.getItemCount()>0) {
								jComboBoxid_clienteFK_IdClienteProforma.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualClienteForeignKeyDescripcion(Long idClienteSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Cliente  clienteTemp=null;

			for(Cliente clienteAux:clientesForeignKey) {
				if(clienteAux.getId()!=null && clienteAux.getId().equals(idClienteSeleccionado)) {
					clienteTemp=clienteAux;
					break;
				}
			}


			sDescripcion=ClienteConstantesFunciones.getClienteDescripcion(clienteTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualClienteForeignKeyGenerico(Long idClienteSeleccionado,JComboBox jComboBoxid_clienteProformaGenerico)throws Exception
	{
		try
		{
			Cliente  clienteTemp=null;

			for(Cliente clienteAux:clientesForeignKey) {
				if(clienteAux.getId()!=null && clienteAux.getId().equals(idClienteSeleccionado)) {
					clienteTemp=clienteAux;
					break;
				}
			}

			if(clienteTemp!=null) {
				jComboBoxid_clienteProformaGenerico.setSelectedItem(clienteTemp);
			} else {
				if(jComboBoxid_clienteProformaGenerico!=null && jComboBoxid_clienteProformaGenerico.getItemCount()>0) {
					jComboBoxid_clienteProformaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoPrecioForeignKey(Long idTipoPrecioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoPrecio  tipoprecioTemp=null;

			for(TipoPrecio tipoprecioAux:tipopreciosForeignKey) {
				if(tipoprecioAux.getId()!=null && tipoprecioAux.getId().equals(idTipoPrecioSeleccionado)) {
					tipoprecioTemp=tipoprecioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipoprecioTemp!=null) {

					if(this.proforma!=null) {
						this.proforma.setTipoPrecio(tipoprecioTemp);
					}

					if(this.jInternalFrameDetalleFormProforma!=null) {
						this.jInternalFrameDetalleFormProforma.jComboBoxid_tipo_precioProforma.setSelectedItem(tipoprecioTemp);
					}
				} else {
					//jComboBoxid_tipo_precioProforma.setSelectedItem(tipoprecioTemp);
					if(this.jInternalFrameDetalleFormProforma!=null) {
						if(this.jInternalFrameDetalleFormProforma.jComboBoxid_tipo_precioProforma.getItemCount()>0) {
							this.jInternalFrameDetalleFormProforma.jComboBoxid_tipo_precioProforma.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoPrecio") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipoprecioTemp!=null && jComboBoxid_tipo_precioFK_IdTipoPrecioProforma!=null) {
						jComboBoxid_tipo_precioFK_IdTipoPrecioProforma.setSelectedItem(tipoprecioTemp);
					} else {
						if(jComboBoxid_tipo_precioFK_IdTipoPrecioProforma!=null) {
							//jComboBoxid_tipo_precioFK_IdTipoPrecioProforma.setSelectedItem(tipoprecioTemp);
							if(jComboBoxid_tipo_precioFK_IdTipoPrecioProforma.getItemCount()>0) {
								jComboBoxid_tipo_precioFK_IdTipoPrecioProforma.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoPrecioForeignKeyDescripcion(Long idTipoPrecioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoPrecio  tipoprecioTemp=null;

			for(TipoPrecio tipoprecioAux:tipopreciosForeignKey) {
				if(tipoprecioAux.getId()!=null && tipoprecioAux.getId().equals(idTipoPrecioSeleccionado)) {
					tipoprecioTemp=tipoprecioAux;
					break;
				}
			}


			sDescripcion=TipoPrecioConstantesFunciones.getTipoPrecioDescripcion(tipoprecioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoPrecioForeignKeyGenerico(Long idTipoPrecioSeleccionado,JComboBox jComboBoxid_tipo_precioProformaGenerico)throws Exception
	{
		try
		{
			TipoPrecio  tipoprecioTemp=null;

			for(TipoPrecio tipoprecioAux:tipopreciosForeignKey) {
				if(tipoprecioAux.getId()!=null && tipoprecioAux.getId().equals(idTipoPrecioSeleccionado)) {
					tipoprecioTemp=tipoprecioAux;
					break;
				}
			}

			if(tipoprecioTemp!=null) {
				jComboBoxid_tipo_precioProformaGenerico.setSelectedItem(tipoprecioTemp);
			} else {
				if(jComboBoxid_tipo_precioProformaGenerico!=null && jComboBoxid_tipo_precioProformaGenerico.getItemCount()>0) {
					jComboBoxid_tipo_precioProformaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualVendedorForeignKey(Long idVendedorSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Vendedor  vendedorTemp=null;

			for(Vendedor vendedorAux:vendedorsForeignKey) {
				if(vendedorAux.getId()!=null && vendedorAux.getId().equals(idVendedorSeleccionado)) {
					vendedorTemp=vendedorAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(vendedorTemp!=null) {

					if(this.proforma!=null) {
						this.proforma.setVendedor(vendedorTemp);
					}

					if(this.jInternalFrameDetalleFormProforma!=null) {
						this.jInternalFrameDetalleFormProforma.jComboBoxid_vendedorProforma.setSelectedItem(vendedorTemp);
					}
				} else {
					//jComboBoxid_vendedorProforma.setSelectedItem(vendedorTemp);
					if(this.jInternalFrameDetalleFormProforma!=null) {
						if(this.jInternalFrameDetalleFormProforma.jComboBoxid_vendedorProforma.getItemCount()>0) {
							this.jInternalFrameDetalleFormProforma.jComboBoxid_vendedorProforma.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdVendedor") || sFormularioTipoBusqueda.equals("Todos")){
					if(vendedorTemp!=null && jComboBoxid_vendedorFK_IdVendedorProforma!=null) {
						jComboBoxid_vendedorFK_IdVendedorProforma.setSelectedItem(vendedorTemp);
					} else {
						if(jComboBoxid_vendedorFK_IdVendedorProforma!=null) {
							//jComboBoxid_vendedorFK_IdVendedorProforma.setSelectedItem(vendedorTemp);
							if(jComboBoxid_vendedorFK_IdVendedorProforma.getItemCount()>0) {
								jComboBoxid_vendedorFK_IdVendedorProforma.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualVendedorForeignKeyDescripcion(Long idVendedorSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Vendedor  vendedorTemp=null;

			for(Vendedor vendedorAux:vendedorsForeignKey) {
				if(vendedorAux.getId()!=null && vendedorAux.getId().equals(idVendedorSeleccionado)) {
					vendedorTemp=vendedorAux;
					break;
				}
			}


			sDescripcion=VendedorConstantesFunciones.getVendedorDescripcion(vendedorTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualVendedorForeignKeyGenerico(Long idVendedorSeleccionado,JComboBox jComboBoxid_vendedorProformaGenerico)throws Exception
	{
		try
		{
			Vendedor  vendedorTemp=null;

			for(Vendedor vendedorAux:vendedorsForeignKey) {
				if(vendedorAux.getId()!=null && vendedorAux.getId().equals(idVendedorSeleccionado)) {
					vendedorTemp=vendedorAux;
					break;
				}
			}

			if(vendedorTemp!=null) {
				jComboBoxid_vendedorProformaGenerico.setSelectedItem(vendedorTemp);
			} else {
				if(jComboBoxid_vendedorProformaGenerico!=null && jComboBoxid_vendedorProformaGenerico.getItemCount()>0) {
					jComboBoxid_vendedorProformaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualSubClienteForeignKey(Long idSubClienteSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			SubCliente  subclienteTemp=null;

			for(SubCliente subclienteAux:subclientesForeignKey) {
				if(subclienteAux.getId()!=null && subclienteAux.getId().equals(idSubClienteSeleccionado)) {
					subclienteTemp=subclienteAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(subclienteTemp!=null) {

					if(this.proforma!=null) {
						this.proforma.setSubCliente(subclienteTemp);
					}

					if(this.jInternalFrameDetalleFormProforma!=null) {
						this.jInternalFrameDetalleFormProforma.jComboBoxid_sub_clienteProforma.setSelectedItem(subclienteTemp);
					}
				} else {
					//jComboBoxid_sub_clienteProforma.setSelectedItem(subclienteTemp);
					if(this.jInternalFrameDetalleFormProforma!=null) {
						if(this.jInternalFrameDetalleFormProforma.jComboBoxid_sub_clienteProforma.getItemCount()>0) {
							this.jInternalFrameDetalleFormProforma.jComboBoxid_sub_clienteProforma.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdSubCliente") || sFormularioTipoBusqueda.equals("Todos")){
					if(subclienteTemp!=null && jComboBoxid_sub_clienteFK_IdSubClienteProforma!=null) {
						jComboBoxid_sub_clienteFK_IdSubClienteProforma.setSelectedItem(subclienteTemp);
					} else {
						if(jComboBoxid_sub_clienteFK_IdSubClienteProforma!=null) {
							//jComboBoxid_sub_clienteFK_IdSubClienteProforma.setSelectedItem(subclienteTemp);
							if(jComboBoxid_sub_clienteFK_IdSubClienteProforma.getItemCount()>0) {
								jComboBoxid_sub_clienteFK_IdSubClienteProforma.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualSubClienteForeignKeyDescripcion(Long idSubClienteSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			SubCliente  subclienteTemp=null;

			for(SubCliente subclienteAux:subclientesForeignKey) {
				if(subclienteAux.getId()!=null && subclienteAux.getId().equals(idSubClienteSeleccionado)) {
					subclienteTemp=subclienteAux;
					break;
				}
			}


			sDescripcion=SubClienteConstantesFunciones.getSubClienteDescripcion(subclienteTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualSubClienteForeignKeyGenerico(Long idSubClienteSeleccionado,JComboBox jComboBoxid_sub_clienteProformaGenerico)throws Exception
	{
		try
		{
			SubCliente  subclienteTemp=null;

			for(SubCliente subclienteAux:subclientesForeignKey) {
				if(subclienteAux.getId()!=null && subclienteAux.getId().equals(idSubClienteSeleccionado)) {
					subclienteTemp=subclienteAux;
					break;
				}
			}

			if(subclienteTemp!=null) {
				jComboBoxid_sub_clienteProformaGenerico.setSelectedItem(subclienteTemp);
			} else {
				if(jComboBoxid_sub_clienteProformaGenerico!=null && jComboBoxid_sub_clienteProformaGenerico.getItemCount()>0) {
					jComboBoxid_sub_clienteProformaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoViaTransporteForeignKey(Long idTipoViaTransporteSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoViaTransporte  tipoviatransporteTemp=null;

			for(TipoViaTransporte tipoviatransporteAux:tipoviatransportesForeignKey) {
				if(tipoviatransporteAux.getId()!=null && tipoviatransporteAux.getId().equals(idTipoViaTransporteSeleccionado)) {
					tipoviatransporteTemp=tipoviatransporteAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipoviatransporteTemp!=null) {

					if(this.proforma!=null) {
						this.proforma.setTipoViaTransporte(tipoviatransporteTemp);
					}

					if(this.jInternalFrameDetalleFormProforma!=null) {
						this.jInternalFrameDetalleFormProforma.jComboBoxid_tipo_via_transporteProforma.setSelectedItem(tipoviatransporteTemp);
					}
				} else {
					//jComboBoxid_tipo_via_transporteProforma.setSelectedItem(tipoviatransporteTemp);
					if(this.jInternalFrameDetalleFormProforma!=null) {
						if(this.jInternalFrameDetalleFormProforma.jComboBoxid_tipo_via_transporteProforma.getItemCount()>0) {
							this.jInternalFrameDetalleFormProforma.jComboBoxid_tipo_via_transporteProforma.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoViaTransporte") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipoviatransporteTemp!=null && jComboBoxid_tipo_via_transporteFK_IdTipoViaTransporteProforma!=null) {
						jComboBoxid_tipo_via_transporteFK_IdTipoViaTransporteProforma.setSelectedItem(tipoviatransporteTemp);
					} else {
						if(jComboBoxid_tipo_via_transporteFK_IdTipoViaTransporteProforma!=null) {
							//jComboBoxid_tipo_via_transporteFK_IdTipoViaTransporteProforma.setSelectedItem(tipoviatransporteTemp);
							if(jComboBoxid_tipo_via_transporteFK_IdTipoViaTransporteProforma.getItemCount()>0) {
								jComboBoxid_tipo_via_transporteFK_IdTipoViaTransporteProforma.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoViaTransporteForeignKeyDescripcion(Long idTipoViaTransporteSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoViaTransporte  tipoviatransporteTemp=null;

			for(TipoViaTransporte tipoviatransporteAux:tipoviatransportesForeignKey) {
				if(tipoviatransporteAux.getId()!=null && tipoviatransporteAux.getId().equals(idTipoViaTransporteSeleccionado)) {
					tipoviatransporteTemp=tipoviatransporteAux;
					break;
				}
			}


			sDescripcion=TipoViaTransporteConstantesFunciones.getTipoViaTransporteDescripcion(tipoviatransporteTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoViaTransporteForeignKeyGenerico(Long idTipoViaTransporteSeleccionado,JComboBox jComboBoxid_tipo_via_transporteProformaGenerico)throws Exception
	{
		try
		{
			TipoViaTransporte  tipoviatransporteTemp=null;

			for(TipoViaTransporte tipoviatransporteAux:tipoviatransportesForeignKey) {
				if(tipoviatransporteAux.getId()!=null && tipoviatransporteAux.getId().equals(idTipoViaTransporteSeleccionado)) {
					tipoviatransporteTemp=tipoviatransporteAux;
					break;
				}
			}

			if(tipoviatransporteTemp!=null) {
				jComboBoxid_tipo_via_transporteProformaGenerico.setSelectedItem(tipoviatransporteTemp);
			} else {
				if(jComboBoxid_tipo_via_transporteProformaGenerico!=null && jComboBoxid_tipo_via_transporteProformaGenerico.getItemCount()>0) {
					jComboBoxid_tipo_via_transporteProformaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTransporteForeignKey(Long idTransporteSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Transporte  transporteTemp=null;

			for(Transporte transporteAux:transportesForeignKey) {
				if(transporteAux.getId()!=null && transporteAux.getId().equals(idTransporteSeleccionado)) {
					transporteTemp=transporteAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(transporteTemp!=null) {

					if(this.proforma!=null) {
						this.proforma.setTransporte(transporteTemp);
					}

					if(this.jInternalFrameDetalleFormProforma!=null) {
						this.jInternalFrameDetalleFormProforma.jComboBoxid_transporteProforma.setSelectedItem(transporteTemp);
					}
				} else {
					//jComboBoxid_transporteProforma.setSelectedItem(transporteTemp);
					if(this.jInternalFrameDetalleFormProforma!=null) {
						if(this.jInternalFrameDetalleFormProforma.jComboBoxid_transporteProforma.getItemCount()>0) {
							this.jInternalFrameDetalleFormProforma.jComboBoxid_transporteProforma.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTransporte") || sFormularioTipoBusqueda.equals("Todos")){
					if(transporteTemp!=null && jComboBoxid_transporteFK_IdTransporteProforma!=null) {
						jComboBoxid_transporteFK_IdTransporteProforma.setSelectedItem(transporteTemp);
					} else {
						if(jComboBoxid_transporteFK_IdTransporteProforma!=null) {
							//jComboBoxid_transporteFK_IdTransporteProforma.setSelectedItem(transporteTemp);
							if(jComboBoxid_transporteFK_IdTransporteProforma.getItemCount()>0) {
								jComboBoxid_transporteFK_IdTransporteProforma.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTransporteForeignKeyDescripcion(Long idTransporteSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Transporte  transporteTemp=null;

			for(Transporte transporteAux:transportesForeignKey) {
				if(transporteAux.getId()!=null && transporteAux.getId().equals(idTransporteSeleccionado)) {
					transporteTemp=transporteAux;
					break;
				}
			}


			sDescripcion=TransporteConstantesFunciones.getTransporteDescripcion(transporteTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTransporteForeignKeyGenerico(Long idTransporteSeleccionado,JComboBox jComboBoxid_transporteProformaGenerico)throws Exception
	{
		try
		{
			Transporte  transporteTemp=null;

			for(Transporte transporteAux:transportesForeignKey) {
				if(transporteAux.getId()!=null && transporteAux.getId().equals(idTransporteSeleccionado)) {
					transporteTemp=transporteAux;
					break;
				}
			}

			if(transporteTemp!=null) {
				jComboBoxid_transporteProformaGenerico.setSelectedItem(transporteTemp);
			} else {
				if(jComboBoxid_transporteProformaGenerico!=null && jComboBoxid_transporteProformaGenerico.getItemCount()>0) {
					jComboBoxid_transporteProformaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualRutaTransporteForeignKey(Long idRutaTransporteSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			RutaTransporte  rutatransporteTemp=null;

			for(RutaTransporte rutatransporteAux:rutatransportesForeignKey) {
				if(rutatransporteAux.getId()!=null && rutatransporteAux.getId().equals(idRutaTransporteSeleccionado)) {
					rutatransporteTemp=rutatransporteAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(rutatransporteTemp!=null) {

					if(this.proforma!=null) {
						this.proforma.setRutaTransporte(rutatransporteTemp);
					}

					if(this.jInternalFrameDetalleFormProforma!=null) {
						this.jInternalFrameDetalleFormProforma.jComboBoxid_ruta_transporteProforma.setSelectedItem(rutatransporteTemp);
					}
				} else {
					//jComboBoxid_ruta_transporteProforma.setSelectedItem(rutatransporteTemp);
					if(this.jInternalFrameDetalleFormProforma!=null) {
						if(this.jInternalFrameDetalleFormProforma.jComboBoxid_ruta_transporteProforma.getItemCount()>0) {
							this.jInternalFrameDetalleFormProforma.jComboBoxid_ruta_transporteProforma.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdRutaTransporte") || sFormularioTipoBusqueda.equals("Todos")){
					if(rutatransporteTemp!=null && jComboBoxid_ruta_transporteFK_IdRutaTransporteProforma!=null) {
						jComboBoxid_ruta_transporteFK_IdRutaTransporteProforma.setSelectedItem(rutatransporteTemp);
					} else {
						if(jComboBoxid_ruta_transporteFK_IdRutaTransporteProforma!=null) {
							//jComboBoxid_ruta_transporteFK_IdRutaTransporteProforma.setSelectedItem(rutatransporteTemp);
							if(jComboBoxid_ruta_transporteFK_IdRutaTransporteProforma.getItemCount()>0) {
								jComboBoxid_ruta_transporteFK_IdRutaTransporteProforma.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualRutaTransporteForeignKeyDescripcion(Long idRutaTransporteSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			RutaTransporte  rutatransporteTemp=null;

			for(RutaTransporte rutatransporteAux:rutatransportesForeignKey) {
				if(rutatransporteAux.getId()!=null && rutatransporteAux.getId().equals(idRutaTransporteSeleccionado)) {
					rutatransporteTemp=rutatransporteAux;
					break;
				}
			}


			sDescripcion=RutaTransporteConstantesFunciones.getRutaTransporteDescripcion(rutatransporteTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualRutaTransporteForeignKeyGenerico(Long idRutaTransporteSeleccionado,JComboBox jComboBoxid_ruta_transporteProformaGenerico)throws Exception
	{
		try
		{
			RutaTransporte  rutatransporteTemp=null;

			for(RutaTransporte rutatransporteAux:rutatransportesForeignKey) {
				if(rutatransporteAux.getId()!=null && rutatransporteAux.getId().equals(idRutaTransporteSeleccionado)) {
					rutatransporteTemp=rutatransporteAux;
					break;
				}
			}

			if(rutatransporteTemp!=null) {
				jComboBoxid_ruta_transporteProformaGenerico.setSelectedItem(rutatransporteTemp);
			} else {
				if(jComboBoxid_ruta_transporteProformaGenerico!=null && jComboBoxid_ruta_transporteProformaGenerico.getItemCount()>0) {
					jComboBoxid_ruta_transporteProformaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCentroCostoForeignKey(Long idCentroCostoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			CentroCosto  centrocostoTemp=null;

			for(CentroCosto centrocostoAux:centrocostosForeignKey) {
				if(centrocostoAux.getId()!=null && centrocostoAux.getId().equals(idCentroCostoSeleccionado)) {
					centrocostoTemp=centrocostoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(centrocostoTemp!=null) {

					if(this.proforma!=null) {
						this.proforma.setCentroCosto(centrocostoTemp);
					}

					if(this.jInternalFrameDetalleFormProforma!=null) {
						this.jInternalFrameDetalleFormProforma.jComboBoxid_centro_costoProforma.setSelectedItem(centrocostoTemp);
					}
				} else {
					//jComboBoxid_centro_costoProforma.setSelectedItem(centrocostoTemp);
					if(this.jInternalFrameDetalleFormProforma!=null) {
						if(this.jInternalFrameDetalleFormProforma.jComboBoxid_centro_costoProforma.getItemCount()>0) {
							this.jInternalFrameDetalleFormProforma.jComboBoxid_centro_costoProforma.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdCentroCosto") || sFormularioTipoBusqueda.equals("Todos")){
					if(centrocostoTemp!=null && jComboBoxid_centro_costoFK_IdCentroCostoProforma!=null) {
						jComboBoxid_centro_costoFK_IdCentroCostoProforma.setSelectedItem(centrocostoTemp);
					} else {
						if(jComboBoxid_centro_costoFK_IdCentroCostoProforma!=null) {
							//jComboBoxid_centro_costoFK_IdCentroCostoProforma.setSelectedItem(centrocostoTemp);
							if(jComboBoxid_centro_costoFK_IdCentroCostoProforma.getItemCount()>0) {
								jComboBoxid_centro_costoFK_IdCentroCostoProforma.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCentroCostoForeignKeyDescripcion(Long idCentroCostoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			CentroCosto  centrocostoTemp=null;

			for(CentroCosto centrocostoAux:centrocostosForeignKey) {
				if(centrocostoAux.getId()!=null && centrocostoAux.getId().equals(idCentroCostoSeleccionado)) {
					centrocostoTemp=centrocostoAux;
					break;
				}
			}


			sDescripcion=CentroCostoConstantesFunciones.getCentroCostoDescripcion(centrocostoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCentroCostoForeignKeyGenerico(Long idCentroCostoSeleccionado,JComboBox jComboBoxid_centro_costoProformaGenerico)throws Exception
	{
		try
		{
			CentroCosto  centrocostoTemp=null;

			for(CentroCosto centrocostoAux:centrocostosForeignKey) {
				if(centrocostoAux.getId()!=null && centrocostoAux.getId().equals(idCentroCostoSeleccionado)) {
					centrocostoTemp=centrocostoAux;
					break;
				}
			}

			if(centrocostoTemp!=null) {
				jComboBoxid_centro_costoProformaGenerico.setSelectedItem(centrocostoTemp);
			} else {
				if(jComboBoxid_centro_costoProformaGenerico!=null && jComboBoxid_centro_costoProformaGenerico.getItemCount()>0) {
					jComboBoxid_centro_costoProformaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoProformaForeignKey(Long idTipoProformaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoProforma  tipoproformaTemp=null;

			for(TipoProforma tipoproformaAux:tipoproformasForeignKey) {
				if(tipoproformaAux.getId()!=null && tipoproformaAux.getId().equals(idTipoProformaSeleccionado)) {
					tipoproformaTemp=tipoproformaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipoproformaTemp!=null) {

					if(this.proforma!=null) {
						this.proforma.setTipoProforma(tipoproformaTemp);
					}

					if(this.jInternalFrameDetalleFormProforma!=null) {
						this.jInternalFrameDetalleFormProforma.jComboBoxid_tipo_proformaProforma.setSelectedItem(tipoproformaTemp);
					}
				} else {
					//jComboBoxid_tipo_proformaProforma.setSelectedItem(tipoproformaTemp);
					if(this.jInternalFrameDetalleFormProforma!=null) {
						if(this.jInternalFrameDetalleFormProforma.jComboBoxid_tipo_proformaProforma.getItemCount()>0) {
							this.jInternalFrameDetalleFormProforma.jComboBoxid_tipo_proformaProforma.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoProforma") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipoproformaTemp!=null && jComboBoxid_tipo_proformaFK_IdTipoProformaProforma!=null) {
						jComboBoxid_tipo_proformaFK_IdTipoProformaProforma.setSelectedItem(tipoproformaTemp);
					} else {
						if(jComboBoxid_tipo_proformaFK_IdTipoProformaProforma!=null) {
							//jComboBoxid_tipo_proformaFK_IdTipoProformaProforma.setSelectedItem(tipoproformaTemp);
							if(jComboBoxid_tipo_proformaFK_IdTipoProformaProforma.getItemCount()>0) {
								jComboBoxid_tipo_proformaFK_IdTipoProformaProforma.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoProformaForeignKeyDescripcion(Long idTipoProformaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoProforma  tipoproformaTemp=null;

			for(TipoProforma tipoproformaAux:tipoproformasForeignKey) {
				if(tipoproformaAux.getId()!=null && tipoproformaAux.getId().equals(idTipoProformaSeleccionado)) {
					tipoproformaTemp=tipoproformaAux;
					break;
				}
			}


			sDescripcion=TipoProformaConstantesFunciones.getTipoProformaDescripcion(tipoproformaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoProformaForeignKeyGenerico(Long idTipoProformaSeleccionado,JComboBox jComboBoxid_tipo_proformaProformaGenerico)throws Exception
	{
		try
		{
			TipoProforma  tipoproformaTemp=null;

			for(TipoProforma tipoproformaAux:tipoproformasForeignKey) {
				if(tipoproformaAux.getId()!=null && tipoproformaAux.getId().equals(idTipoProformaSeleccionado)) {
					tipoproformaTemp=tipoproformaAux;
					break;
				}
			}

			if(tipoproformaTemp!=null) {
				jComboBoxid_tipo_proformaProformaGenerico.setSelectedItem(tipoproformaTemp);
			} else {
				if(jComboBoxid_tipo_proformaProformaGenerico!=null && jComboBoxid_tipo_proformaProformaGenerico.getItemCount()>0) {
					jComboBoxid_tipo_proformaProformaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualConsignatarioForeignKey(Long idConsignatarioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Consignatario  consignatarioTemp=null;

			for(Consignatario consignatarioAux:consignatariosForeignKey) {
				if(consignatarioAux.getId()!=null && consignatarioAux.getId().equals(idConsignatarioSeleccionado)) {
					consignatarioTemp=consignatarioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(consignatarioTemp!=null) {

					if(this.proforma!=null) {
						this.proforma.setConsignatario(consignatarioTemp);
					}

					if(this.jInternalFrameDetalleFormProforma!=null) {
						this.jInternalFrameDetalleFormProforma.jComboBoxid_consignatarioProforma.setSelectedItem(consignatarioTemp);
					}
				} else {
					//jComboBoxid_consignatarioProforma.setSelectedItem(consignatarioTemp);
					if(this.jInternalFrameDetalleFormProforma!=null) {
						if(this.jInternalFrameDetalleFormProforma.jComboBoxid_consignatarioProforma.getItemCount()>0) {
							this.jInternalFrameDetalleFormProforma.jComboBoxid_consignatarioProforma.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdConsignatario") || sFormularioTipoBusqueda.equals("Todos")){
					if(consignatarioTemp!=null && jComboBoxid_consignatarioFK_IdConsignatarioProforma!=null) {
						jComboBoxid_consignatarioFK_IdConsignatarioProforma.setSelectedItem(consignatarioTemp);
					} else {
						if(jComboBoxid_consignatarioFK_IdConsignatarioProforma!=null) {
							//jComboBoxid_consignatarioFK_IdConsignatarioProforma.setSelectedItem(consignatarioTemp);
							if(jComboBoxid_consignatarioFK_IdConsignatarioProforma.getItemCount()>0) {
								jComboBoxid_consignatarioFK_IdConsignatarioProforma.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualConsignatarioForeignKeyDescripcion(Long idConsignatarioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Consignatario  consignatarioTemp=null;

			for(Consignatario consignatarioAux:consignatariosForeignKey) {
				if(consignatarioAux.getId()!=null && consignatarioAux.getId().equals(idConsignatarioSeleccionado)) {
					consignatarioTemp=consignatarioAux;
					break;
				}
			}


			sDescripcion=ConsignatarioConstantesFunciones.getConsignatarioDescripcion(consignatarioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualConsignatarioForeignKeyGenerico(Long idConsignatarioSeleccionado,JComboBox jComboBoxid_consignatarioProformaGenerico)throws Exception
	{
		try
		{
			Consignatario  consignatarioTemp=null;

			for(Consignatario consignatarioAux:consignatariosForeignKey) {
				if(consignatarioAux.getId()!=null && consignatarioAux.getId().equals(idConsignatarioSeleccionado)) {
					consignatarioTemp=consignatarioAux;
					break;
				}
			}

			if(consignatarioTemp!=null) {
				jComboBoxid_consignatarioProformaGenerico.setSelectedItem(consignatarioTemp);
			} else {
				if(jComboBoxid_consignatarioProformaGenerico!=null && jComboBoxid_consignatarioProformaGenerico.getItemCount()>0) {
					jComboBoxid_consignatarioProformaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoCambioForeignKey(Long idTipoCambioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoCambio  tipocambioTemp=null;

			for(TipoCambio tipocambioAux:tipocambiosForeignKey) {
				if(tipocambioAux.getId()!=null && tipocambioAux.getId().equals(idTipoCambioSeleccionado)) {
					tipocambioTemp=tipocambioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipocambioTemp!=null) {

					if(this.proforma!=null) {
						this.proforma.setTipoCambio(tipocambioTemp);
					}

					if(this.jInternalFrameDetalleFormProforma!=null) {
						this.jInternalFrameDetalleFormProforma.jComboBoxid_tipo_cambioProforma.setSelectedItem(tipocambioTemp);
					}
				} else {
					//jComboBoxid_tipo_cambioProforma.setSelectedItem(tipocambioTemp);
					if(this.jInternalFrameDetalleFormProforma!=null) {
						if(this.jInternalFrameDetalleFormProforma.jComboBoxid_tipo_cambioProforma.getItemCount()>0) {
							this.jInternalFrameDetalleFormProforma.jComboBoxid_tipo_cambioProforma.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoCambio") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipocambioTemp!=null && jComboBoxid_tipo_cambioFK_IdTipoCambioProforma!=null) {
						jComboBoxid_tipo_cambioFK_IdTipoCambioProforma.setSelectedItem(tipocambioTemp);
					} else {
						if(jComboBoxid_tipo_cambioFK_IdTipoCambioProforma!=null) {
							//jComboBoxid_tipo_cambioFK_IdTipoCambioProforma.setSelectedItem(tipocambioTemp);
							if(jComboBoxid_tipo_cambioFK_IdTipoCambioProforma.getItemCount()>0) {
								jComboBoxid_tipo_cambioFK_IdTipoCambioProforma.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoCambioForeignKeyDescripcion(Long idTipoCambioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoCambio  tipocambioTemp=null;

			for(TipoCambio tipocambioAux:tipocambiosForeignKey) {
				if(tipocambioAux.getId()!=null && tipocambioAux.getId().equals(idTipoCambioSeleccionado)) {
					tipocambioTemp=tipocambioAux;
					break;
				}
			}


			sDescripcion=TipoCambioConstantesFunciones.getTipoCambioDescripcion(tipocambioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoCambioForeignKeyGenerico(Long idTipoCambioSeleccionado,JComboBox jComboBoxid_tipo_cambioProformaGenerico)throws Exception
	{
		try
		{
			TipoCambio  tipocambioTemp=null;

			for(TipoCambio tipocambioAux:tipocambiosForeignKey) {
				if(tipocambioAux.getId()!=null && tipocambioAux.getId().equals(idTipoCambioSeleccionado)) {
					tipocambioTemp=tipocambioAux;
					break;
				}
			}

			if(tipocambioTemp!=null) {
				jComboBoxid_tipo_cambioProformaGenerico.setSelectedItem(tipocambioTemp);
			} else {
				if(jComboBoxid_tipo_cambioProformaGenerico!=null && jComboBoxid_tipo_cambioProformaGenerico.getItemCount()>0) {
					jComboBoxid_tipo_cambioProformaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	
	
	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEmpresaForeignKey(Proforma proforma,JComboBox jComboBoxid_empresaProformaGenerico)throws Exception
	{
		try
		{
			Empresa  empresaAux=new Empresa();

			if(jComboBoxid_empresaProformaGenerico==null) {
				empresaAux=(Empresa)this.jInternalFrameDetalleFormProforma.jComboBoxid_empresaProforma.getSelectedItem();
			} else {
				empresaAux=(Empresa)jComboBoxid_empresaProformaGenerico.getSelectedItem();
			}

			if(empresaAux!=null && empresaAux.getId()!=null) {
				proforma.setid_empresa(empresaAux.getId());
				proforma.setempresa_descripcion(ProformaConstantesFunciones.getEmpresaDescripcion(empresaAux));
				proforma.setEmpresa(empresaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarSucursalForeignKey(Proforma proforma,JComboBox jComboBoxid_sucursalProformaGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalAux=new Sucursal();

			if(jComboBoxid_sucursalProformaGenerico==null) {
				sucursalAux=(Sucursal)this.jInternalFrameDetalleFormProforma.jComboBoxid_sucursalProforma.getSelectedItem();
			} else {
				sucursalAux=(Sucursal)jComboBoxid_sucursalProformaGenerico.getSelectedItem();
			}

			if(sucursalAux!=null && sucursalAux.getId()!=null) {
				proforma.setid_sucursal(sucursalAux.getId());
				proforma.setsucursal_descripcion(ProformaConstantesFunciones.getSucursalDescripcion(sucursalAux));
				proforma.setSucursal(sucursalAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarUsuarioForeignKey(Proforma proforma,JComboBox jComboBoxid_usuarioProformaGenerico)throws Exception
	{
		try
		{
			Usuario  usuarioAux=new Usuario();

			if(jComboBoxid_usuarioProformaGenerico==null) {
				usuarioAux=(Usuario)this.jInternalFrameDetalleFormProforma.jComboBoxid_usuarioProforma.getSelectedItem();
			} else {
				usuarioAux=(Usuario)jComboBoxid_usuarioProformaGenerico.getSelectedItem();
			}

			if(usuarioAux!=null && usuarioAux.getId()!=null) {
				proforma.setid_usuario(usuarioAux.getId());
				proforma.setusuario_descripcion(ProformaConstantesFunciones.getUsuarioDescripcion(usuarioAux));
				proforma.setUsuario(usuarioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEjercicioForeignKey(Proforma proforma,JComboBox jComboBoxid_ejercicioProformaGenerico)throws Exception
	{
		try
		{
			Ejercicio  ejercicioAux=new Ejercicio();

			if(jComboBoxid_ejercicioProformaGenerico==null) {
				ejercicioAux=(Ejercicio)this.jInternalFrameDetalleFormProforma.jComboBoxid_ejercicioProforma.getSelectedItem();
			} else {
				ejercicioAux=(Ejercicio)jComboBoxid_ejercicioProformaGenerico.getSelectedItem();
			}

			if(ejercicioAux!=null && ejercicioAux.getId()!=null) {
				proforma.setid_ejercicio(ejercicioAux.getId());
				proforma.setejercicio_descripcion(ProformaConstantesFunciones.getEjercicioDescripcion(ejercicioAux));
				proforma.setEjercicio(ejercicioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarPeriodoForeignKey(Proforma proforma,JComboBox jComboBoxid_periodoProformaGenerico)throws Exception
	{
		try
		{
			Periodo  periodoAux=new Periodo();

			if(jComboBoxid_periodoProformaGenerico==null) {
				periodoAux=(Periodo)this.jInternalFrameDetalleFormProforma.jComboBoxid_periodoProforma.getSelectedItem();
			} else {
				periodoAux=(Periodo)jComboBoxid_periodoProformaGenerico.getSelectedItem();
			}

			if(periodoAux!=null && periodoAux.getId()!=null) {
				if(periodoAux.getid_estado_periodo().equals(0L)) {
					throw new Exception("Periodo INACTIVO, NO PUEDE GUARDAR LA INFORMACION CONSULTE CON EL ADMINISTRADOR");
				}

				proforma.setid_periodo(periodoAux.getId());
				proforma.setperiodo_descripcion(ProformaConstantesFunciones.getPeriodoDescripcion(periodoAux));
				proforma.setPeriodo(periodoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarAnioForeignKey(Proforma proforma,JComboBox jComboBoxid_anioProformaGenerico)throws Exception
	{
		try
		{
			Anio  anioAux=new Anio();

			if(jComboBoxid_anioProformaGenerico==null) {
				anioAux=(Anio)this.jInternalFrameDetalleFormProforma.jComboBoxid_anioProforma.getSelectedItem();
			} else {
				anioAux=(Anio)jComboBoxid_anioProformaGenerico.getSelectedItem();
			}

			if(anioAux!=null) {
				proforma.setid_anio(anioAux.getId());
				proforma.setanio_descripcion(ProformaConstantesFunciones.getAnioDescripcion(anioAux));
				proforma.setAnio(anioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarMesForeignKey(Proforma proforma,JComboBox jComboBoxid_mesProformaGenerico)throws Exception
	{
		try
		{
			Mes  mesAux=new Mes();

			if(jComboBoxid_mesProformaGenerico==null) {
				mesAux=(Mes)this.jInternalFrameDetalleFormProforma.jComboBoxid_mesProforma.getSelectedItem();
			} else {
				mesAux=(Mes)jComboBoxid_mesProformaGenerico.getSelectedItem();
			}

			if(mesAux!=null) {
				proforma.setid_mes(mesAux.getId());
				proforma.setmes_descripcion(ProformaConstantesFunciones.getMesDescripcion(mesAux));
				proforma.setMes(mesAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarMonedaForeignKey(Proforma proforma,JComboBox jComboBoxid_monedaProformaGenerico)throws Exception
	{
		try
		{
			Moneda  monedaAux=new Moneda();

			if(jComboBoxid_monedaProformaGenerico==null) {
				monedaAux=(Moneda)this.jInternalFrameDetalleFormProforma.jComboBoxid_monedaProforma.getSelectedItem();
			} else {
				monedaAux=(Moneda)jComboBoxid_monedaProformaGenerico.getSelectedItem();
			}

			if(monedaAux!=null && monedaAux.getId()!=null) {
				proforma.setid_moneda(monedaAux.getId());
				proforma.setmoneda_descripcion(ProformaConstantesFunciones.getMonedaDescripcion(monedaAux));
				proforma.setMoneda(monedaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEmpleadoForeignKey(Proforma proforma,JComboBox jComboBoxid_empleadoProformaGenerico)throws Exception
	{
		try
		{
			Empleado  empleadoAux=new Empleado();

			if(jComboBoxid_empleadoProformaGenerico==null) {
				empleadoAux=(Empleado)this.jInternalFrameDetalleFormProforma.jComboBoxid_empleadoProforma.getSelectedItem();
			} else {
				empleadoAux=(Empleado)jComboBoxid_empleadoProformaGenerico.getSelectedItem();
			}

			if(empleadoAux!=null && empleadoAux.getId()!=null) {
				proforma.setid_empleado(empleadoAux.getId());
				proforma.setempleado_descripcion(ProformaConstantesFunciones.getEmpleadoDescripcion(empleadoAux));
				proforma.setEmpleado(empleadoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarFormatoForeignKey(Proforma proforma,JComboBox jComboBoxid_formatoProformaGenerico)throws Exception
	{
		try
		{
			Formato  formatoAux=new Formato();

			if(jComboBoxid_formatoProformaGenerico==null) {
				formatoAux=(Formato)this.jInternalFrameDetalleFormProforma.jComboBoxid_formatoProforma.getSelectedItem();
			} else {
				formatoAux=(Formato)jComboBoxid_formatoProformaGenerico.getSelectedItem();
			}

			if(formatoAux!=null) {
				proforma.setid_formato(formatoAux.getId());
				proforma.setformato_descripcion(ProformaConstantesFunciones.getFormatoDescripcion(formatoAux));
				proforma.setFormato(formatoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEstadoProformaForeignKey(Proforma proforma,JComboBox jComboBoxid_estado_proformaProformaGenerico)throws Exception
	{
		try
		{
			EstadoProforma  estadoproformaAux=new EstadoProforma();

			if(jComboBoxid_estado_proformaProformaGenerico==null) {
				estadoproformaAux=(EstadoProforma)this.jInternalFrameDetalleFormProforma.jComboBoxid_estado_proformaProforma.getSelectedItem();
			} else {
				estadoproformaAux=(EstadoProforma)jComboBoxid_estado_proformaProformaGenerico.getSelectedItem();
			}

			if(estadoproformaAux!=null && estadoproformaAux.getId()!=null) {
				proforma.setid_estado_proforma(estadoproformaAux.getId());
				proforma.setestadoproforma_descripcion(ProformaConstantesFunciones.getEstadoProformaDescripcion(estadoproformaAux));
				proforma.setEstadoProforma(estadoproformaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarClienteForeignKey(Proforma proforma,JComboBox jComboBoxid_clienteProformaGenerico)throws Exception
	{
		try
		{
			Cliente  clienteAux=new Cliente();

			if(jComboBoxid_clienteProformaGenerico==null) {
				clienteAux=(Cliente)this.jInternalFrameDetalleFormProforma.jComboBoxid_clienteProforma.getSelectedItem();
			} else {
				clienteAux=(Cliente)jComboBoxid_clienteProformaGenerico.getSelectedItem();
			}

			if(clienteAux!=null && clienteAux.getId()!=null) {
				proforma.setid_cliente(clienteAux.getId());
				proforma.setcliente_descripcion(ProformaConstantesFunciones.getClienteDescripcion(clienteAux));
				proforma.setCliente(clienteAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoPrecioForeignKey(Proforma proforma,JComboBox jComboBoxid_tipo_precioProformaGenerico)throws Exception
	{
		try
		{
			TipoPrecio  tipoprecioAux=new TipoPrecio();

			if(jComboBoxid_tipo_precioProformaGenerico==null) {
				tipoprecioAux=(TipoPrecio)this.jInternalFrameDetalleFormProforma.jComboBoxid_tipo_precioProforma.getSelectedItem();
			} else {
				tipoprecioAux=(TipoPrecio)jComboBoxid_tipo_precioProformaGenerico.getSelectedItem();
			}

			if(tipoprecioAux!=null && tipoprecioAux.getId()!=null) {
				proforma.setid_tipo_precio(tipoprecioAux.getId());
				proforma.settipoprecio_descripcion(ProformaConstantesFunciones.getTipoPrecioDescripcion(tipoprecioAux));
				proforma.setTipoPrecio(tipoprecioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarVendedorForeignKey(Proforma proforma,JComboBox jComboBoxid_vendedorProformaGenerico)throws Exception
	{
		try
		{
			Vendedor  vendedorAux=new Vendedor();

			if(jComboBoxid_vendedorProformaGenerico==null) {
				vendedorAux=(Vendedor)this.jInternalFrameDetalleFormProforma.jComboBoxid_vendedorProforma.getSelectedItem();
			} else {
				vendedorAux=(Vendedor)jComboBoxid_vendedorProformaGenerico.getSelectedItem();
			}

			if(vendedorAux!=null) {
				proforma.setid_vendedor(vendedorAux.getId());
				proforma.setvendedor_descripcion(ProformaConstantesFunciones.getVendedorDescripcion(vendedorAux));
				proforma.setVendedor(vendedorAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarSubClienteForeignKey(Proforma proforma,JComboBox jComboBoxid_sub_clienteProformaGenerico)throws Exception
	{
		try
		{
			SubCliente  subclienteAux=new SubCliente();

			if(jComboBoxid_sub_clienteProformaGenerico==null) {
				subclienteAux=(SubCliente)this.jInternalFrameDetalleFormProforma.jComboBoxid_sub_clienteProforma.getSelectedItem();
			} else {
				subclienteAux=(SubCliente)jComboBoxid_sub_clienteProformaGenerico.getSelectedItem();
			}

			if(subclienteAux!=null) {
				proforma.setid_sub_cliente(subclienteAux.getId());
				proforma.setsubcliente_descripcion(ProformaConstantesFunciones.getSubClienteDescripcion(subclienteAux));
				proforma.setSubCliente(subclienteAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoViaTransporteForeignKey(Proforma proforma,JComboBox jComboBoxid_tipo_via_transporteProformaGenerico)throws Exception
	{
		try
		{
			TipoViaTransporte  tipoviatransporteAux=new TipoViaTransporte();

			if(jComboBoxid_tipo_via_transporteProformaGenerico==null) {
				tipoviatransporteAux=(TipoViaTransporte)this.jInternalFrameDetalleFormProforma.jComboBoxid_tipo_via_transporteProforma.getSelectedItem();
			} else {
				tipoviatransporteAux=(TipoViaTransporte)jComboBoxid_tipo_via_transporteProformaGenerico.getSelectedItem();
			}

			if(tipoviatransporteAux!=null && tipoviatransporteAux.getId()!=null) {
				proforma.setid_tipo_via_transporte(tipoviatransporteAux.getId());
				proforma.settipoviatransporte_descripcion(ProformaConstantesFunciones.getTipoViaTransporteDescripcion(tipoviatransporteAux));
				proforma.setTipoViaTransporte(tipoviatransporteAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTransporteForeignKey(Proforma proforma,JComboBox jComboBoxid_transporteProformaGenerico)throws Exception
	{
		try
		{
			Transporte  transporteAux=new Transporte();

			if(jComboBoxid_transporteProformaGenerico==null) {
				transporteAux=(Transporte)this.jInternalFrameDetalleFormProforma.jComboBoxid_transporteProforma.getSelectedItem();
			} else {
				transporteAux=(Transporte)jComboBoxid_transporteProformaGenerico.getSelectedItem();
			}

			if(transporteAux!=null && transporteAux.getId()!=null) {
				proforma.setid_transporte(transporteAux.getId());
				proforma.settransporte_descripcion(ProformaConstantesFunciones.getTransporteDescripcion(transporteAux));
				proforma.setTransporte(transporteAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarRutaTransporteForeignKey(Proforma proforma,JComboBox jComboBoxid_ruta_transporteProformaGenerico)throws Exception
	{
		try
		{
			RutaTransporte  rutatransporteAux=new RutaTransporte();

			if(jComboBoxid_ruta_transporteProformaGenerico==null) {
				rutatransporteAux=(RutaTransporte)this.jInternalFrameDetalleFormProforma.jComboBoxid_ruta_transporteProforma.getSelectedItem();
			} else {
				rutatransporteAux=(RutaTransporte)jComboBoxid_ruta_transporteProformaGenerico.getSelectedItem();
			}

			if(rutatransporteAux!=null && rutatransporteAux.getId()!=null) {
				proforma.setid_ruta_transporte(rutatransporteAux.getId());
				proforma.setrutatransporte_descripcion(ProformaConstantesFunciones.getRutaTransporteDescripcion(rutatransporteAux));
				proforma.setRutaTransporte(rutatransporteAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCentroCostoForeignKey(Proforma proforma,JComboBox jComboBoxid_centro_costoProformaGenerico)throws Exception
	{
		try
		{
			CentroCosto  centrocostoAux=new CentroCosto();

			if(jComboBoxid_centro_costoProformaGenerico==null) {
				centrocostoAux=(CentroCosto)this.jInternalFrameDetalleFormProforma.jComboBoxid_centro_costoProforma.getSelectedItem();
			} else {
				centrocostoAux=(CentroCosto)jComboBoxid_centro_costoProformaGenerico.getSelectedItem();
			}

			if(centrocostoAux!=null) {
				proforma.setid_centro_costo(centrocostoAux.getId());
				proforma.setcentrocosto_descripcion(ProformaConstantesFunciones.getCentroCostoDescripcion(centrocostoAux));
				proforma.setCentroCosto(centrocostoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoProformaForeignKey(Proforma proforma,JComboBox jComboBoxid_tipo_proformaProformaGenerico)throws Exception
	{
		try
		{
			TipoProforma  tipoproformaAux=new TipoProforma();

			if(jComboBoxid_tipo_proformaProformaGenerico==null) {
				tipoproformaAux=(TipoProforma)this.jInternalFrameDetalleFormProforma.jComboBoxid_tipo_proformaProforma.getSelectedItem();
			} else {
				tipoproformaAux=(TipoProforma)jComboBoxid_tipo_proformaProformaGenerico.getSelectedItem();
			}

			if(tipoproformaAux!=null && tipoproformaAux.getId()!=null) {
				proforma.setid_tipo_proforma(tipoproformaAux.getId());
				proforma.settipoproforma_descripcion(ProformaConstantesFunciones.getTipoProformaDescripcion(tipoproformaAux));
				proforma.setTipoProforma(tipoproformaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarConsignatarioForeignKey(Proforma proforma,JComboBox jComboBoxid_consignatarioProformaGenerico)throws Exception
	{
		try
		{
			Consignatario  consignatarioAux=new Consignatario();

			if(jComboBoxid_consignatarioProformaGenerico==null) {
				consignatarioAux=(Consignatario)this.jInternalFrameDetalleFormProforma.jComboBoxid_consignatarioProforma.getSelectedItem();
			} else {
				consignatarioAux=(Consignatario)jComboBoxid_consignatarioProformaGenerico.getSelectedItem();
			}

			if(consignatarioAux!=null && consignatarioAux.getId()!=null) {
				proforma.setid_consignatario(consignatarioAux.getId());
				proforma.setconsignatario_descripcion(ProformaConstantesFunciones.getConsignatarioDescripcion(consignatarioAux));
				proforma.setConsignatario(consignatarioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoCambioForeignKey(Proforma proforma,JComboBox jComboBoxid_tipo_cambioProformaGenerico)throws Exception
	{
		try
		{
			TipoCambio  tipocambioAux=new TipoCambio();

			if(jComboBoxid_tipo_cambioProformaGenerico==null) {
				tipocambioAux=(TipoCambio)this.jInternalFrameDetalleFormProforma.jComboBoxid_tipo_cambioProforma.getSelectedItem();
			} else {
				tipocambioAux=(TipoCambio)jComboBoxid_tipo_cambioProformaGenerico.getSelectedItem();
			}

			if(tipocambioAux!=null) {
				proforma.setid_tipo_cambio(tipocambioAux.getId());
				proforma.settipocambio_descripcion(ProformaConstantesFunciones.getTipoCambioDescripcion(tipocambioAux));
				proforma.setTipoCambio(tipocambioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	


		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEmpresasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEmpresa=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ProformaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormProforma!=null) { 
							this.jInternalFrameDetalleFormProforma.jComboBoxid_empresaProforma.removeAllItems();

							for(Empresa empresa:this.empresasForeignKey) {
								this.jInternalFrameDetalleFormProforma.jComboBoxid_empresaProforma.addItem(empresa);
							}
						}
					}

					if(this.jInternalFrameDetalleFormProforma!=null) { 
					}

					if(!ProformaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameSucursalsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingSucursal=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ProformaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormProforma!=null) { 
							this.jInternalFrameDetalleFormProforma.jComboBoxid_sucursalProforma.removeAllItems();

							for(Sucursal sucursal:this.sucursalsForeignKey) {
								this.jInternalFrameDetalleFormProforma.jComboBoxid_sucursalProforma.addItem(sucursal);
							}
						}
					}

					if(this.jInternalFrameDetalleFormProforma!=null) { 
					}

					if(!ProformaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameUsuariosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingUsuario=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ProformaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormProforma!=null) { 
							this.jInternalFrameDetalleFormProforma.jComboBoxid_usuarioProforma.removeAllItems();

							for(Usuario usuario:this.usuariosForeignKey) {
								this.jInternalFrameDetalleFormProforma.jComboBoxid_usuarioProforma.addItem(usuario);
							}
						}
					}

					if(this.jInternalFrameDetalleFormProforma!=null) { 
					}

					if(!ProformaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEjerciciosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEjercicio=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ProformaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormProforma!=null) { 
							this.jInternalFrameDetalleFormProforma.jComboBoxid_ejercicioProforma.removeAllItems();

							for(Ejercicio ejercicio:this.ejerciciosForeignKey) {
								this.jInternalFrameDetalleFormProforma.jComboBoxid_ejercicioProforma.addItem(ejercicio);
							}
						}
					}

					if(this.jInternalFrameDetalleFormProforma!=null) { 
					}

					if(!ProformaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFramePeriodosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingPeriodo=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ProformaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormProforma!=null) { 
							this.jInternalFrameDetalleFormProforma.jComboBoxid_periodoProforma.removeAllItems();

							for(Periodo periodo:this.periodosForeignKey) {
								this.jInternalFrameDetalleFormProforma.jComboBoxid_periodoProforma.addItem(periodo);
							}
						}
					}

					if(this.jInternalFrameDetalleFormProforma!=null) { 
					}

					if(!ProformaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameAniosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingAnio=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ProformaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormProforma!=null) { 
							this.jInternalFrameDetalleFormProforma.jComboBoxid_anioProforma.removeAllItems();

							for(Anio anio:this.aniosForeignKey) {
								this.jInternalFrameDetalleFormProforma.jComboBoxid_anioProforma.addItem(anio);
							}
						}
					}

					if(this.jInternalFrameDetalleFormProforma!=null) { 
					}

					if(!ProformaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameMessForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingMes=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ProformaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormProforma!=null) { 
							this.jInternalFrameDetalleFormProforma.jComboBoxid_mesProforma.removeAllItems();

							for(Mes mes:this.messForeignKey) {
								this.jInternalFrameDetalleFormProforma.jComboBoxid_mesProforma.addItem(mes);
							}
						}
					}

					if(this.jInternalFrameDetalleFormProforma!=null) { 
					}

					if(!ProformaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameMonedasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingMoneda=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ProformaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormProforma!=null) { 
							this.jInternalFrameDetalleFormProforma.jComboBoxid_monedaProforma.removeAllItems();

							for(Moneda moneda:this.monedasForeignKey) {
								this.jInternalFrameDetalleFormProforma.jComboBoxid_monedaProforma.addItem(moneda);
							}
						}
					}

					if(this.jInternalFrameDetalleFormProforma!=null) { 
					}

					if(!ProformaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEmpleadosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEmpleado=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ProformaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormProforma!=null) { 
							this.jInternalFrameDetalleFormProforma.jComboBoxid_empleadoProforma.removeAllItems();

							for(Empleado empleado:this.empleadosForeignKey) {
								this.jInternalFrameDetalleFormProforma.jComboBoxid_empleadoProforma.addItem(empleado);
							}
						}
					}

					if(this.jInternalFrameDetalleFormProforma!=null) { 
					}

					if(!ProformaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdEmpleado") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ProformaJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_empleadoFK_IdEmpleadoProforma.removeAllItems();

							for(Empleado empleado:this.empleadosForeignKey) {
								this.jComboBoxid_empleadoFK_IdEmpleadoProforma.addItem(empleado);
							}
						}

						if(!ProformaJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameFormatosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingFormato=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ProformaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormProforma!=null) { 
							this.jInternalFrameDetalleFormProforma.jComboBoxid_formatoProforma.removeAllItems();

							for(Formato formato:this.formatosForeignKey) {
								this.jInternalFrameDetalleFormProforma.jComboBoxid_formatoProforma.addItem(formato);
							}
						}
					}

					if(this.jInternalFrameDetalleFormProforma!=null) { 
					}

					if(!ProformaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdFormato") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ProformaJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_formatoFK_IdFormatoProforma.removeAllItems();

							for(Formato formato:this.formatosForeignKey) {
								this.jComboBoxid_formatoFK_IdFormatoProforma.addItem(formato);
							}
						}

						if(!ProformaJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEstadoProformasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEstadoProforma=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ProformaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormProforma!=null) { 
							this.jInternalFrameDetalleFormProforma.jComboBoxid_estado_proformaProforma.removeAllItems();

							for(EstadoProforma estadoproforma:this.estadoproformasForeignKey) {
								this.jInternalFrameDetalleFormProforma.jComboBoxid_estado_proformaProforma.addItem(estadoproforma);
							}
						}
					}

					if(this.jInternalFrameDetalleFormProforma!=null) { 
					}

					if(!ProformaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdEstadoProforma") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ProformaJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_estado_proformaFK_IdEstadoProformaProforma.removeAllItems();

							for(EstadoProforma estadoproforma:this.estadoproformasForeignKey) {
								this.jComboBoxid_estado_proformaFK_IdEstadoProformaProforma.addItem(estadoproforma);
							}
						}

						if(!ProformaJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameClientesForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCliente=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ProformaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormProforma!=null) { 
							this.jInternalFrameDetalleFormProforma.jComboBoxid_clienteProforma.removeAllItems();

							for(Cliente cliente:this.clientesForeignKey) {
								this.jInternalFrameDetalleFormProforma.jComboBoxid_clienteProforma.addItem(cliente);
							}
						}
					}

					if(this.jInternalFrameDetalleFormProforma!=null) { 
					}

					if(!ProformaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdCliente") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ProformaJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_clienteFK_IdClienteProforma.removeAllItems();

							for(Cliente cliente:this.clientesForeignKey) {
								this.jComboBoxid_clienteFK_IdClienteProforma.addItem(cliente);
							}
						}

						if(!ProformaJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoPreciosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoPrecio=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ProformaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormProforma!=null) { 
							this.jInternalFrameDetalleFormProforma.jComboBoxid_tipo_precioProforma.removeAllItems();

							for(TipoPrecio tipoprecio:this.tipopreciosForeignKey) {
								this.jInternalFrameDetalleFormProforma.jComboBoxid_tipo_precioProforma.addItem(tipoprecio);
							}
						}
					}

					if(this.jInternalFrameDetalleFormProforma!=null) { 
					}

					if(!ProformaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoPrecio") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ProformaJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_precioFK_IdTipoPrecioProforma.removeAllItems();

							for(TipoPrecio tipoprecio:this.tipopreciosForeignKey) {
								this.jComboBoxid_tipo_precioFK_IdTipoPrecioProforma.addItem(tipoprecio);
							}
						}

						if(!ProformaJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameVendedorsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingVendedor=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ProformaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormProforma!=null) { 
							this.jInternalFrameDetalleFormProforma.jComboBoxid_vendedorProforma.removeAllItems();

							for(Vendedor vendedor:this.vendedorsForeignKey) {
								this.jInternalFrameDetalleFormProforma.jComboBoxid_vendedorProforma.addItem(vendedor);
							}
						}
					}

					if(this.jInternalFrameDetalleFormProforma!=null) { 
					}

					if(!ProformaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdVendedor") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ProformaJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_vendedorFK_IdVendedorProforma.removeAllItems();

							for(Vendedor vendedor:this.vendedorsForeignKey) {
								this.jComboBoxid_vendedorFK_IdVendedorProforma.addItem(vendedor);
							}
						}

						if(!ProformaJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameSubClientesForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingSubCliente=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ProformaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormProforma!=null) { 
							this.jInternalFrameDetalleFormProforma.jComboBoxid_sub_clienteProforma.removeAllItems();

							for(SubCliente subcliente:this.subclientesForeignKey) {
								this.jInternalFrameDetalleFormProforma.jComboBoxid_sub_clienteProforma.addItem(subcliente);
							}
						}
					}

					if(this.jInternalFrameDetalleFormProforma!=null) { 
					}

					if(!ProformaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdSubCliente") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ProformaJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_sub_clienteFK_IdSubClienteProforma.removeAllItems();

							for(SubCliente subcliente:this.subclientesForeignKey) {
								this.jComboBoxid_sub_clienteFK_IdSubClienteProforma.addItem(subcliente);
							}
						}

						if(!ProformaJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoViaTransportesForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoViaTransporte=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ProformaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormProforma!=null) { 
							this.jInternalFrameDetalleFormProforma.jComboBoxid_tipo_via_transporteProforma.removeAllItems();

							for(TipoViaTransporte tipoviatransporte:this.tipoviatransportesForeignKey) {
								this.jInternalFrameDetalleFormProforma.jComboBoxid_tipo_via_transporteProforma.addItem(tipoviatransporte);
							}
						}
					}

					if(this.jInternalFrameDetalleFormProforma!=null) { 
					}

					if(!ProformaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoViaTransporte") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ProformaJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_via_transporteFK_IdTipoViaTransporteProforma.removeAllItems();

							for(TipoViaTransporte tipoviatransporte:this.tipoviatransportesForeignKey) {
								this.jComboBoxid_tipo_via_transporteFK_IdTipoViaTransporteProforma.addItem(tipoviatransporte);
							}
						}

						if(!ProformaJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTransportesForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTransporte=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ProformaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormProforma!=null) { 
							this.jInternalFrameDetalleFormProforma.jComboBoxid_transporteProforma.removeAllItems();

							for(Transporte transporte:this.transportesForeignKey) {
								this.jInternalFrameDetalleFormProforma.jComboBoxid_transporteProforma.addItem(transporte);
							}
						}
					}

					if(this.jInternalFrameDetalleFormProforma!=null) { 
					}

					if(!ProformaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTransporte") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ProformaJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_transporteFK_IdTransporteProforma.removeAllItems();

							for(Transporte transporte:this.transportesForeignKey) {
								this.jComboBoxid_transporteFK_IdTransporteProforma.addItem(transporte);
							}
						}

						if(!ProformaJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameRutaTransportesForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingRutaTransporte=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ProformaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormProforma!=null) { 
							this.jInternalFrameDetalleFormProforma.jComboBoxid_ruta_transporteProforma.removeAllItems();

							for(RutaTransporte rutatransporte:this.rutatransportesForeignKey) {
								this.jInternalFrameDetalleFormProforma.jComboBoxid_ruta_transporteProforma.addItem(rutatransporte);
							}
						}
					}

					if(this.jInternalFrameDetalleFormProforma!=null) { 
					}

					if(!ProformaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdRutaTransporte") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ProformaJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_ruta_transporteFK_IdRutaTransporteProforma.removeAllItems();

							for(RutaTransporte rutatransporte:this.rutatransportesForeignKey) {
								this.jComboBoxid_ruta_transporteFK_IdRutaTransporteProforma.addItem(rutatransporte);
							}
						}

						if(!ProformaJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCentroCostosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCentroCosto=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ProformaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormProforma!=null) { 
							this.jInternalFrameDetalleFormProforma.jComboBoxid_centro_costoProforma.removeAllItems();

							for(CentroCosto centrocosto:this.centrocostosForeignKey) {
								this.jInternalFrameDetalleFormProforma.jComboBoxid_centro_costoProforma.addItem(centrocosto);
							}
						}
					}

					if(this.jInternalFrameDetalleFormProforma!=null) { 
					}

					if(!ProformaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdCentroCosto") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ProformaJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_centro_costoFK_IdCentroCostoProforma.removeAllItems();

							for(CentroCosto centrocosto:this.centrocostosForeignKey) {
								this.jComboBoxid_centro_costoFK_IdCentroCostoProforma.addItem(centrocosto);
							}
						}

						if(!ProformaJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoProformasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoProforma=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ProformaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormProforma!=null) { 
							this.jInternalFrameDetalleFormProforma.jComboBoxid_tipo_proformaProforma.removeAllItems();

							for(TipoProforma tipoproforma:this.tipoproformasForeignKey) {
								this.jInternalFrameDetalleFormProforma.jComboBoxid_tipo_proformaProforma.addItem(tipoproforma);
							}
						}
					}

					if(this.jInternalFrameDetalleFormProforma!=null) { 
					}

					if(!ProformaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoProforma") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ProformaJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_proformaFK_IdTipoProformaProforma.removeAllItems();

							for(TipoProforma tipoproforma:this.tipoproformasForeignKey) {
								this.jComboBoxid_tipo_proformaFK_IdTipoProformaProforma.addItem(tipoproforma);
							}
						}

						if(!ProformaJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameConsignatariosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingConsignatario=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ProformaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormProforma!=null) { 
							this.jInternalFrameDetalleFormProforma.jComboBoxid_consignatarioProforma.removeAllItems();

							for(Consignatario consignatario:this.consignatariosForeignKey) {
								this.jInternalFrameDetalleFormProforma.jComboBoxid_consignatarioProforma.addItem(consignatario);
							}
						}
					}

					if(this.jInternalFrameDetalleFormProforma!=null) { 
					}

					if(!ProformaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdConsignatario") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ProformaJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_consignatarioFK_IdConsignatarioProforma.removeAllItems();

							for(Consignatario consignatario:this.consignatariosForeignKey) {
								this.jComboBoxid_consignatarioFK_IdConsignatarioProforma.addItem(consignatario);
							}
						}

						if(!ProformaJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoCambiosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoCambio=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ProformaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormProforma!=null) { 
							this.jInternalFrameDetalleFormProforma.jComboBoxid_tipo_cambioProforma.removeAllItems();

							for(TipoCambio tipocambio:this.tipocambiosForeignKey) {
								this.jInternalFrameDetalleFormProforma.jComboBoxid_tipo_cambioProforma.addItem(tipocambio);
							}
						}
					}

					if(this.jInternalFrameDetalleFormProforma!=null) { 
					}

					if(!ProformaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoCambio") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ProformaJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_cambioFK_IdTipoCambioProforma.removeAllItems();

							for(TipoCambio tipocambio:this.tipocambiosForeignKey) {
								this.jComboBoxid_tipo_cambioFK_IdTipoCambioProforma.addItem(tipocambio);
							}
						}

						if(!ProformaJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

	


		public void setSelectedItemCombosFrameEmpresaForeignKey(Empresa empresa,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormProforma!=null) {
							this.jInternalFrameDetalleFormProforma.jComboBoxid_empresaProforma.setSelectedItem(empresa);
						}
					} else {
						if(this.jInternalFrameDetalleFormProforma!=null) {
							this.jInternalFrameDetalleFormProforma.jComboBoxid_empresaProforma.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameSucursalForeignKey(Sucursal sucursal,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormProforma!=null) {
							this.jInternalFrameDetalleFormProforma.jComboBoxid_sucursalProforma.setSelectedItem(sucursal);
						}
					} else {
						if(this.jInternalFrameDetalleFormProforma!=null) {
							this.jInternalFrameDetalleFormProforma.jComboBoxid_sucursalProforma.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameUsuarioForeignKey(Usuario usuario,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormProforma!=null) {
							this.jInternalFrameDetalleFormProforma.jComboBoxid_usuarioProforma.setSelectedItem(usuario);
						}
					} else {
						if(this.jInternalFrameDetalleFormProforma!=null) {
							this.jInternalFrameDetalleFormProforma.jComboBoxid_usuarioProforma.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEjercicioForeignKey(Ejercicio ejercicio,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormProforma!=null) {
							this.jInternalFrameDetalleFormProforma.jComboBoxid_ejercicioProforma.setSelectedItem(ejercicio);
						}
					} else {
						if(this.jInternalFrameDetalleFormProforma!=null) {
							this.jInternalFrameDetalleFormProforma.jComboBoxid_ejercicioProforma.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFramePeriodoForeignKey(Periodo periodo,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormProforma!=null) {
							this.jInternalFrameDetalleFormProforma.jComboBoxid_periodoProforma.setSelectedItem(periodo);
						}
					} else {
						if(this.jInternalFrameDetalleFormProforma!=null) {
							this.jInternalFrameDetalleFormProforma.jComboBoxid_periodoProforma.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameAnioForeignKey(Anio anio,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormProforma!=null) {
							this.jInternalFrameDetalleFormProforma.jComboBoxid_anioProforma.setSelectedItem(anio);
						}
					} else {
						if(this.jInternalFrameDetalleFormProforma!=null) {
							this.jInternalFrameDetalleFormProforma.jComboBoxid_anioProforma.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameMesForeignKey(Mes mes,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormProforma!=null) {
							this.jInternalFrameDetalleFormProforma.jComboBoxid_mesProforma.setSelectedItem(mes);
						}
					} else {
						if(this.jInternalFrameDetalleFormProforma!=null) {
							this.jInternalFrameDetalleFormProforma.jComboBoxid_mesProforma.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameMonedaForeignKey(Moneda moneda,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormProforma!=null) {
							this.jInternalFrameDetalleFormProforma.jComboBoxid_monedaProforma.setSelectedItem(moneda);
						}
					} else {
						if(this.jInternalFrameDetalleFormProforma!=null) {
							this.jInternalFrameDetalleFormProforma.jComboBoxid_monedaProforma.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEmpleadoForeignKey(Empleado empleado,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormProforma!=null) {
							this.jInternalFrameDetalleFormProforma.jComboBoxid_empleadoProforma.setSelectedItem(empleado);
						}
					} else {
						if(this.jInternalFrameDetalleFormProforma!=null) {
							this.jInternalFrameDetalleFormProforma.jComboBoxid_empleadoProforma.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_empleadoFK_IdEmpleadoProforma.setSelectedItem(empleado);
						} else {
							this.jComboBoxid_empleadoFK_IdEmpleadoProforma.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameFormatoForeignKey(Formato formato,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormProforma!=null) {
							this.jInternalFrameDetalleFormProforma.jComboBoxid_formatoProforma.setSelectedItem(formato);
						}
					} else {
						if(this.jInternalFrameDetalleFormProforma!=null) {
							this.jInternalFrameDetalleFormProforma.jComboBoxid_formatoProforma.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_formatoFK_IdFormatoProforma.setSelectedItem(formato);
						} else {
							this.jComboBoxid_formatoFK_IdFormatoProforma.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEstadoProformaForeignKey(EstadoProforma estadoproforma,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormProforma!=null) {
							this.jInternalFrameDetalleFormProforma.jComboBoxid_estado_proformaProforma.setSelectedItem(estadoproforma);
						}
					} else {
						if(this.jInternalFrameDetalleFormProforma!=null) {
							this.jInternalFrameDetalleFormProforma.jComboBoxid_estado_proformaProforma.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_estado_proformaFK_IdEstadoProformaProforma.setSelectedItem(estadoproforma);
						} else {
							this.jComboBoxid_estado_proformaFK_IdEstadoProformaProforma.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameClienteForeignKey(Cliente cliente,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormProforma!=null) {
							this.jInternalFrameDetalleFormProforma.jComboBoxid_clienteProforma.setSelectedItem(cliente);
						}
					} else {
						if(this.jInternalFrameDetalleFormProforma!=null) {
							this.jInternalFrameDetalleFormProforma.jComboBoxid_clienteProforma.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_clienteFK_IdClienteProforma.setSelectedItem(cliente);
						} else {
							this.jComboBoxid_clienteFK_IdClienteProforma.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoPrecioForeignKey(TipoPrecio tipoprecio,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormProforma!=null) {
							this.jInternalFrameDetalleFormProforma.jComboBoxid_tipo_precioProforma.setSelectedItem(tipoprecio);
						}
					} else {
						if(this.jInternalFrameDetalleFormProforma!=null) {
							this.jInternalFrameDetalleFormProforma.jComboBoxid_tipo_precioProforma.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_precioFK_IdTipoPrecioProforma.setSelectedItem(tipoprecio);
						} else {
							this.jComboBoxid_tipo_precioFK_IdTipoPrecioProforma.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameVendedorForeignKey(Vendedor vendedor,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormProforma!=null) {
							this.jInternalFrameDetalleFormProforma.jComboBoxid_vendedorProforma.setSelectedItem(vendedor);
						}
					} else {
						if(this.jInternalFrameDetalleFormProforma!=null) {
							this.jInternalFrameDetalleFormProforma.jComboBoxid_vendedorProforma.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_vendedorFK_IdVendedorProforma.setSelectedItem(vendedor);
						} else {
							this.jComboBoxid_vendedorFK_IdVendedorProforma.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameSubClienteForeignKey(SubCliente subcliente,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormProforma!=null) {
							this.jInternalFrameDetalleFormProforma.jComboBoxid_sub_clienteProforma.setSelectedItem(subcliente);
						}
					} else {
						if(this.jInternalFrameDetalleFormProforma!=null) {
							this.jInternalFrameDetalleFormProforma.jComboBoxid_sub_clienteProforma.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_sub_clienteFK_IdSubClienteProforma.setSelectedItem(subcliente);
						} else {
							this.jComboBoxid_sub_clienteFK_IdSubClienteProforma.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoViaTransporteForeignKey(TipoViaTransporte tipoviatransporte,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormProforma!=null) {
							this.jInternalFrameDetalleFormProforma.jComboBoxid_tipo_via_transporteProforma.setSelectedItem(tipoviatransporte);
						}
					} else {
						if(this.jInternalFrameDetalleFormProforma!=null) {
							this.jInternalFrameDetalleFormProforma.jComboBoxid_tipo_via_transporteProforma.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_via_transporteFK_IdTipoViaTransporteProforma.setSelectedItem(tipoviatransporte);
						} else {
							this.jComboBoxid_tipo_via_transporteFK_IdTipoViaTransporteProforma.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTransporteForeignKey(Transporte transporte,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormProforma!=null) {
							this.jInternalFrameDetalleFormProforma.jComboBoxid_transporteProforma.setSelectedItem(transporte);
						}
					} else {
						if(this.jInternalFrameDetalleFormProforma!=null) {
							this.jInternalFrameDetalleFormProforma.jComboBoxid_transporteProforma.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_transporteFK_IdTransporteProforma.setSelectedItem(transporte);
						} else {
							this.jComboBoxid_transporteFK_IdTransporteProforma.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameRutaTransporteForeignKey(RutaTransporte rutatransporte,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormProforma!=null) {
							this.jInternalFrameDetalleFormProforma.jComboBoxid_ruta_transporteProforma.setSelectedItem(rutatransporte);
						}
					} else {
						if(this.jInternalFrameDetalleFormProforma!=null) {
							this.jInternalFrameDetalleFormProforma.jComboBoxid_ruta_transporteProforma.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_ruta_transporteFK_IdRutaTransporteProforma.setSelectedItem(rutatransporte);
						} else {
							this.jComboBoxid_ruta_transporteFK_IdRutaTransporteProforma.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCentroCostoForeignKey(CentroCosto centrocosto,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormProforma!=null) {
							this.jInternalFrameDetalleFormProforma.jComboBoxid_centro_costoProforma.setSelectedItem(centrocosto);
						}
					} else {
						if(this.jInternalFrameDetalleFormProforma!=null) {
							this.jInternalFrameDetalleFormProforma.jComboBoxid_centro_costoProforma.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_centro_costoFK_IdCentroCostoProforma.setSelectedItem(centrocosto);
						} else {
							this.jComboBoxid_centro_costoFK_IdCentroCostoProforma.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoProformaForeignKey(TipoProforma tipoproforma,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormProforma!=null) {
							this.jInternalFrameDetalleFormProforma.jComboBoxid_tipo_proformaProforma.setSelectedItem(tipoproforma);
						}
					} else {
						if(this.jInternalFrameDetalleFormProforma!=null) {
							this.jInternalFrameDetalleFormProforma.jComboBoxid_tipo_proformaProforma.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_proformaFK_IdTipoProformaProforma.setSelectedItem(tipoproforma);
						} else {
							this.jComboBoxid_tipo_proformaFK_IdTipoProformaProforma.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameConsignatarioForeignKey(Consignatario consignatario,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormProforma!=null) {
							this.jInternalFrameDetalleFormProforma.jComboBoxid_consignatarioProforma.setSelectedItem(consignatario);
						}
					} else {
						if(this.jInternalFrameDetalleFormProforma!=null) {
							this.jInternalFrameDetalleFormProforma.jComboBoxid_consignatarioProforma.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_consignatarioFK_IdConsignatarioProforma.setSelectedItem(consignatario);
						} else {
							this.jComboBoxid_consignatarioFK_IdConsignatarioProforma.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoCambioForeignKey(TipoCambio tipocambio,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormProforma!=null) {
							this.jInternalFrameDetalleFormProforma.jComboBoxid_tipo_cambioProforma.setSelectedItem(tipocambio);
						}
					} else {
						if(this.jInternalFrameDetalleFormProforma!=null) {
							this.jInternalFrameDetalleFormProforma.jComboBoxid_tipo_cambioProforma.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_cambioFK_IdTipoCambioProforma.setSelectedItem(tipocambio);
						} else {
							this.jComboBoxid_tipo_cambioFK_IdTipoCambioProforma.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

	


	
	public void refrescarForeignKeysDescripcionesProforma() throws Exception {
		//SI FUNCIONA DEEPLOAD ESTO VA AL ULTIMO
		if(Constantes.ISUSAEJBLOGICLAYER) {
			ProformaConstantesFunciones.refrescarForeignKeysDescripcionesProforma(this.proformaLogic.getProformas());
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			ProformaConstantesFunciones.refrescarForeignKeysDescripcionesProforma(this.proformas);
		}
		
		/*
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		classes.add(new Classe(Empresa.class));
		classes.add(new Classe(Sucursal.class));
		classes.add(new Classe(Usuario.class));
		classes.add(new Classe(Ejercicio.class));
		classes.add(new Classe(Periodo.class));
		classes.add(new Classe(Anio.class));
		classes.add(new Classe(Mes.class));
		classes.add(new Classe(Moneda.class));
		classes.add(new Classe(Empleado.class));
		classes.add(new Classe(Formato.class));
		classes.add(new Classe(EstadoProforma.class));
		classes.add(new Classe(Cliente.class));
		classes.add(new Classe(TipoPrecio.class));
		classes.add(new Classe(Vendedor.class));
		classes.add(new Classe(SubCliente.class));
		classes.add(new Classe(TipoViaTransporte.class));
		classes.add(new Classe(Transporte.class));
		classes.add(new Classe(RutaTransporte.class));
		classes.add(new Classe(CentroCosto.class));
		classes.add(new Classe(TipoProforma.class));
		classes.add(new Classe(Consignatario.class));
		classes.add(new Classe(TipoCambio.class));
			
		if(Constantes.ISUSAEJBLOGICLAYER) {
			//USA LOS OBJETOS DE LOGIC DIRECTAMENTE
			//proformaLogic.setProformas(this.proformas);
			proformaLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
	
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		*/				
	}	
	
	
	
	public Integer getiNumeroPaginacion() {
		return iNumeroPaginacion;
	}

	public void setiNumeroPaginacion(Integer iNumeroPaginacion) {
		this.iNumeroPaginacion= iNumeroPaginacion;
	}
	
	public Integer getiNumeroPaginacionPagina() {
		return iNumeroPaginacionPagina;
	}

	public void setiNumeroPaginacionPagina(Integer iNumeroPaginacionPagina) {
		this.iNumeroPaginacionPagina= iNumeroPaginacionPagina;
	}
	
	
	public Boolean getIsSeleccionarTodos() {
		return this.isSeleccionarTodos;
	}

	public void setIsSeleccionarTodos(Boolean isSeleccionarTodos) {
		this.isSeleccionarTodos= isSeleccionarTodos;
	}
	
	public Boolean getEsControlTabla() {
		return this.esControlTabla;
	}

	public void setEsControlTabla(Boolean esControlTabla) {
		this.esControlTabla= esControlTabla;
	}
	
	public Boolean getIsSeleccionados() {
		return this.isSeleccionados;
	}

	public void setIsSeleccionados(Boolean isSeleccionados) {
		this.isSeleccionados= isSeleccionados;
	}
	
	public Boolean getIsPostAccionNuevo() {
		return this.isPostAccionNuevo;
	}

	public void setIsPostAccionNuevo(Boolean isPostAccionNuevo) {
		this.isPostAccionNuevo= isPostAccionNuevo;
	}
	
	public Boolean getIsPostAccionSinCerrar() {
		return this.isPostAccionSinCerrar;
	}

	public void setIsPostAccionSinCerrar(Boolean isPostAccionSinCerrar) {
		this.isPostAccionSinCerrar= isPostAccionSinCerrar;
	}
	
	public Boolean getIsPostAccionSinMensaje() {
		return this.isPostAccionSinMensaje;
	}

	public void setIsPostAccionSinMensaje(Boolean isPostAccionSinMensaje) {
		this.isPostAccionSinMensaje= isPostAccionSinMensaje;
	}
	
	public Boolean getConGraficoReporte() {
		return this.conGraficoReporte;
	}

	public void setConGraficoReporte(Boolean conGraficoReporte) {
		this.conGraficoReporte= conGraficoReporte;
	}
	
	
	public ArrayList<Reporte> gettiposArchivosReportes() {
		return this.tiposArchivosReportes;
	}
	
	public void settiposArchivosReportes(ArrayList<Reporte> tiposArchivosReportes) {
		this.tiposArchivosReportes = tiposArchivosReportes;
	}
	
	//TIPOS ARCHIVOS DINAMICOS
	public ArrayList<Reporte> gettiposArchivosReportesDinamico() {
		return this.tiposArchivosReportesDinamico;
	}
	
	public void settiposArchivosReportesDinamico(ArrayList<Reporte> tiposArchivosReportesDinamico) {
		this.tiposArchivosReportesDinamico = tiposArchivosReportesDinamico;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportes() {
		return this.tiposReportes;
	}
	
	public void settiposReportes(ArrayList<Reporte> tiposReportes) {
		this.tiposReportes = tiposReportes;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportesDinamico() {
		return this.tiposReportesDinamico;
	}
	
	public void settiposReportesDinamico(ArrayList<Reporte> tiposReportesDinamico) {
		this.tiposReportesDinamico = tiposReportesDinamico;
	}
	
	//TIPOS GRAFICOS REPORTES
	public ArrayList<Reporte> gettiposGraficosReportes() {
		return this.tiposGraficosReportes;
	}
	
	public void settiposGraficosReportes(ArrayList<Reporte> tiposGraficosReportes) {
		this.tiposGraficosReportes = tiposGraficosReportes;
	}
	
	public ArrayList<Reporte> gettiposPaginacion() {
		return this.tiposPaginacion;
	}
	
	public void settiposPaginacion(ArrayList<Reporte> tiposPaginacion) {
		this.tiposPaginacion = tiposPaginacion;
	}
	
	public ArrayList<Reporte> gettiposRelaciones() {
		return this.tiposRelaciones;
	}
	
	public void settiposRelaciones(ArrayList<Reporte> tiposRelaciones) {
		this.tiposRelaciones= tiposRelaciones;
	}
	
	public ArrayList<Reporte> gettiposAcciones() {
		return this.tiposAcciones;
	}
	
	public void settiposAcciones(ArrayList<Reporte> tiposAcciones) {
		this.tiposAcciones = tiposAcciones;
	}
	
	public ArrayList<Reporte> gettiposAccionesFormulario() {
		return this.tiposAccionesFormulario;
	}
	
	public void settiposAccionesFormulario(ArrayList<Reporte> tiposAccionesFormulario) {
		this.tiposAccionesFormulario = tiposAccionesFormulario;
	}
	
	public ArrayList<Reporte> gettiposSeleccionar() {
		return this.tiposSeleccionar;
	}
	
	public void settiposSeleccionar(ArrayList<Reporte> tiposSeleccionar) {
		this.tiposSeleccionar = tiposSeleccionar;
	}
	
	public ArrayList<Reporte> gettiposColumnasSelect() {
		return this.tiposColumnasSelect;
	}
	
	public void settiposColumnasSelect(ArrayList<Reporte> tiposColumnasSelect) {
		this.tiposColumnasSelect = tiposColumnasSelect;
	}
		
	public ArrayList<Reporte> gettiposRelacionesSelect() {
		return this.tiposRelacionesSelect;
	}
	
	public void settiposRelacionesSelect(ArrayList<Reporte> tiposRelacionesSelect) {
		this.tiposRelacionesSelect = tiposRelacionesSelect;
	}
	
	public Long getIIdUsuarioSesion() {
		return lIdUsuarioSesion;
	}

	public void setIIdUsuarioSesion(Long lIdUsuarioSesion) {
		this.lIdUsuarioSesion = lIdUsuarioSesion;
	}
	
	
	public List<Accion> getAccions() {
		return this.accions;
	}

	public void setAccions(List<Accion> accions) {
		this.accions = accions;
	}
	
	public List<Accion> getAccionsFormulario() {
		return this.accionsFormulario;
	}

	public void setAccionsFormulario(List<Accion> accionsFormulario) {
		this.accionsFormulario = accionsFormulario;
	}
	
	public String getsAccionMantenimiento() {
		return sAccionMantenimiento;
	}

	public void setsAccionMantenimiento(String sAccionMantenimiento) {
		this.sAccionMantenimiento = sAccionMantenimiento;
	}

	public String getsAccionBusqueda() {
		return sAccionBusqueda;
	}

	public void setsAccionBusqueda(String sAccionBusqueda) {
		this.sAccionBusqueda = sAccionBusqueda;
	}

	public String getsAccionAdicional() {
		return sAccionAdicional;
	}

	public void setsAccionAdicional(String sAccionAdicional) {
		this.sAccionAdicional = sAccionAdicional;
	}

	public String getsUltimaBusqueda() {
		return sUltimaBusqueda;
	}

	public void setsUltimaBusqueda(String sUltimaBusqueda) {
		this.sUltimaBusqueda = sUltimaBusqueda;
	}
	
	public String getsTipoArchivoReporte() {
		return sTipoArchivoReporte;
	}

	public void setsTipoArchivoReporte(String sTipoArchivoReporte) {
		this.sTipoArchivoReporte = sTipoArchivoReporte;
	}
	
	public String getsTipoArchivoReporteDinamico() {
		return sTipoArchivoReporteDinamico;
	}

	public void setsTipoArchivoReporteDinamico(String sTipoArchivoReporteDinamico) {
		this.sTipoArchivoReporteDinamico = sTipoArchivoReporteDinamico;
	}
	
	public String getsTipoReporte() {
		return sTipoReporte;
	}

	public void setsTipoReporte(String sTipoReporte) {
		this.sTipoReporte = sTipoReporte;
	}
	
	public String getsTipoReporteDinamico() {
		return sTipoReporteDinamico;
	}

	public void setsTipoReporteDinamico(String sTipoReporteDinamico) {
		this.sTipoReporteDinamico = sTipoReporteDinamico;
	}
	
	public String getsTipoGraficoReporte() {
		return sTipoGraficoReporte;
	}

	public void setsTipoGraficoReporte(String sTipoGraficoReporte) {
		this.sTipoGraficoReporte = sTipoGraficoReporte;
	}
	
	public String getsTipoPaginacion() {
		return sTipoPaginacion;
	}

	public void setsTipoPaginacion(String sTipoPaginacion) {
		this.sTipoPaginacion = sTipoPaginacion;
	}
	
	public String getsTipoRelacion() {
		return sTipoRelacion;
	}

	public void setsTipoRelacion(String sTipoRelacion) {
		this.sTipoRelacion = sTipoRelacion;
	}
	
	public String getsTipoAccion() {
		return sTipoAccion;
	}

	public void setsTipoAccion(String sTipoAccion) {
		this.sTipoAccion = sTipoAccion;
	}
	
	public String getsTipoAccionFormulario() {
		return sTipoAccionFormulario;
	}

	public void setsTipoAccionFormulario(String sTipoAccionFormulario) {
		this.sTipoAccionFormulario = sTipoAccionFormulario;
	}
	
	public String getsTipoSeleccionar() {
		return sTipoSeleccionar;
	}

	public void setsTipoSeleccionar(String sTipoSeleccionar) {
		this.sTipoSeleccionar = sTipoSeleccionar;
	}
	
	public String getsValorCampoGeneral() {
		return sValorCampoGeneral;
	}

	public void setsValorCampoGeneral(String sValorCampoGeneral) {
		this.sValorCampoGeneral = sValorCampoGeneral;
	}			

	public String getsDetalleReporte() {
		return sDetalleReporte;
	}

	public void setsDetalleReporte(String sDetalleReporte) {
		this.sDetalleReporte = sDetalleReporte;
	}
	
	
	public String getsTipoReporteExtra() {
		return sTipoReporteExtra;
	}

	public void setsTipoReporteExtra(String sTipoReporteExtra) {
		this.sTipoReporteExtra = sTipoReporteExtra;
	}
	
	public Boolean getesReporteDinamico() {
		return esReporteDinamico;
	}	
	
	public void setesReporteDinamico(Boolean esReporteDinamico) {
		this.esReporteDinamico = esReporteDinamico;
	}
	
	public Boolean getesRecargarFks() {
		return esRecargarFks;
	}	
	
	public void setesRecargarFks(Boolean esRecargarFks) {
		this.esRecargarFks = esRecargarFks;
	}
	
	public Boolean getesReporteAccionProceso() {
		return esReporteAccionProceso;
	}	
	
	public void setesReporteAccionProceso(Boolean esReporteAccionProceso) {
		this.esReporteAccionProceso= esReporteAccionProceso;
	}
		
	public ProformaParameterReturnGeneral getProformaParameterGeneral() {
		return this.proformaParameterGeneral;
	}
	
	public void setProformaParameterGeneral(ProformaParameterReturnGeneral proformaParameterGeneral) {
		this.proformaParameterGeneral = proformaParameterGeneral;
	}
	
	public String getsPathReporteDinamico() {
		return sPathReporteDinamico;
	}

	public void setsPathReporteDinamico(String sPathReporteDinamico) {
		this.sPathReporteDinamico = sPathReporteDinamico;
	}
		
	public Boolean getisMostrarNumeroPaginacion() {
		return isMostrarNumeroPaginacion;
	}

	public void setisMostrarNumeroPaginacion(Boolean isMostrarNumeroPaginacion) {
		this.isMostrarNumeroPaginacion = isMostrarNumeroPaginacion;
	}
	
	public Mensaje getMensaje() {
		return mensaje;
	}

	public void setMensaje(Mensaje mensaje) {
		this.mensaje = mensaje;
	}
	
	public Boolean getIsPermisoTodoProforma() {
		return isPermisoTodoProforma;
	}

	public void setIsPermisoTodoProforma(Boolean isPermisoTodoProforma) {
		this.isPermisoTodoProforma = isPermisoTodoProforma;
	}

	public Boolean getIsPermisoNuevoProforma() {
		return isPermisoNuevoProforma;
	}

	public void setIsPermisoNuevoProforma(Boolean isPermisoNuevoProforma) {
		this.isPermisoNuevoProforma = isPermisoNuevoProforma;
	}

	public Boolean getIsPermisoActualizarProforma() {
		return isPermisoActualizarProforma;
	}

	public void setIsPermisoActualizarProforma(Boolean isPermisoActualizarProforma) {
		this.isPermisoActualizarProforma = isPermisoActualizarProforma;
	}

	public Boolean getIsPermisoEliminarProforma() {
		return isPermisoEliminarProforma;
	}

	public void setIsPermisoEliminarProforma(Boolean isPermisoEliminarProforma) {
		this.isPermisoEliminarProforma = isPermisoEliminarProforma;
	}

	public Boolean getIsPermisoGuardarCambiosProforma() {
		return isPermisoGuardarCambiosProforma;
	}

	public void setIsPermisoGuardarCambiosProforma(Boolean isPermisoGuardarCambiosProforma) {
		this.isPermisoGuardarCambiosProforma = isPermisoGuardarCambiosProforma;
	}
	
	public Boolean getIsPermisoConsultaProforma() {
		return isPermisoConsultaProforma;
	}

	public void setIsPermisoConsultaProforma(Boolean isPermisoConsultaProforma) {
		this.isPermisoConsultaProforma = isPermisoConsultaProforma;
	}

	public Boolean getIsPermisoBusquedaProforma() {
		return isPermisoBusquedaProforma;
	}

	public void setIsPermisoBusquedaProforma(Boolean isPermisoBusquedaProforma) {
		this.isPermisoBusquedaProforma = isPermisoBusquedaProforma;
	}

	public Boolean getIsPermisoReporteProforma() {
		return isPermisoReporteProforma;
	}

	public void setIsPermisoReporteProforma(Boolean isPermisoReporteProforma) {
		this.isPermisoReporteProforma = isPermisoReporteProforma;
	}
	
	public Boolean getIsPermisoPaginacionMedioProforma() {
		return isPermisoPaginacionMedioProforma;
	}

	public void setIsPermisoPaginacionMedioProforma(Boolean isPermisoPaginacionMedioProforma) {
		this.isPermisoPaginacionMedioProforma = isPermisoPaginacionMedioProforma;
	}
	
	public Boolean getIsPermisoPaginacionTodoProforma() {
		return isPermisoPaginacionTodoProforma;
	}

	public void setIsPermisoPaginacionTodoProforma(Boolean isPermisoPaginacionTodoProforma) {
		this.isPermisoPaginacionTodoProforma = isPermisoPaginacionTodoProforma;
	}
	
	public Boolean getIsPermisoPaginacionAltoProforma() {
		return isPermisoPaginacionAltoProforma;
	}

	public void setIsPermisoPaginacionAltoProforma(Boolean isPermisoPaginacionAltoProforma) {
		this.isPermisoPaginacionAltoProforma = isPermisoPaginacionAltoProforma;
	}
	
	public Boolean getIsPermisoCopiarProforma() {
		return isPermisoCopiarProforma;
	}

	public void setIsPermisoCopiarProforma(Boolean isPermisoCopiarProforma) {
		this.isPermisoCopiarProforma = isPermisoCopiarProforma;
	}
	
	public Boolean getIsPermisoVerFormProforma() {
		return isPermisoVerFormProforma;
	}

	public void setIsPermisoVerFormProforma(Boolean isPermisoVerFormProforma) {
		this.isPermisoVerFormProforma = isPermisoVerFormProforma;
	}
	
	public Boolean getIsPermisoDuplicarProforma() {
		return isPermisoDuplicarProforma;
	}

	public void setIsPermisoDuplicarProforma(Boolean isPermisoDuplicarProforma) {
		this.isPermisoDuplicarProforma = isPermisoDuplicarProforma;
	}
	
	public Boolean getIsPermisoOrdenProforma() {
		return isPermisoOrdenProforma;
	}

	public void setIsPermisoOrdenProforma(Boolean isPermisoOrdenProforma) {
		this.isPermisoOrdenProforma = isPermisoOrdenProforma;
	}
	
	public String getsVisibilidadTablaBusquedas() {
		return sVisibilidadTablaBusquedas;
	}

	public void setsVisibilidadTablaBusquedas(String sVisibilidadTablaBusquedas) {
		this.sVisibilidadTablaBusquedas = sVisibilidadTablaBusquedas;
	}
	
	public String getsVisibilidadTablaElementos() {
		return sVisibilidadTablaElementos;
	}

	public void setsVisibilidadTablaElementos(String sVisibilidadTablaElementos) {
		this.sVisibilidadTablaElementos = sVisibilidadTablaElementos;
	}

	public String getsVisibilidadTablaAcciones() {
		return sVisibilidadTablaAcciones;
	}

	public void setsVisibilidadTablaAcciones(String sVisibilidadTablaAcciones) {
		this.sVisibilidadTablaAcciones = sVisibilidadTablaAcciones;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoProforma() {
		return isVisibilidadCeldaNuevoProforma;
	}

	public void setIsVisibilidadCeldaNuevoProforma(Boolean isVisibilidadCeldaNuevoProforma) {
		this.isVisibilidadCeldaNuevoProforma = isVisibilidadCeldaNuevoProforma;
	}
	
	public Boolean getIsVisibilidadCeldaDuplicarProforma() {
		return isVisibilidadCeldaDuplicarProforma;
	}

	public void setIsVisibilidadCeldaDuplicarProforma(Boolean isVisibilidadCeldaDuplicarProforma) {
		this.isVisibilidadCeldaDuplicarProforma = isVisibilidadCeldaDuplicarProforma;
	}
	
	public Boolean getIsVisibilidadCeldaCopiarProforma() {
		return isVisibilidadCeldaCopiarProforma;
	}

	public void setIsVisibilidadCeldaCopiarProforma(Boolean isVisibilidadCeldaCopiarProforma) {
		this.isVisibilidadCeldaCopiarProforma = isVisibilidadCeldaCopiarProforma;
	}
	
	public Boolean getIsVisibilidadCeldaVerFormProforma() {
		return isVisibilidadCeldaVerFormProforma;
	}

	public void setIsVisibilidadCeldaVerFormProforma(Boolean isVisibilidadCeldaVerFormProforma) {
		this.isVisibilidadCeldaVerFormProforma = isVisibilidadCeldaVerFormProforma;
	}
	
	public Boolean getIsVisibilidadCeldaOrdenProforma() {
		return isVisibilidadCeldaOrdenProforma;
	}

	public void setIsVisibilidadCeldaOrdenProforma(Boolean isVisibilidadCeldaOrdenProforma) {
		this.isVisibilidadCeldaOrdenProforma = isVisibilidadCeldaOrdenProforma;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoRelacionesProforma() {
		return isVisibilidadCeldaNuevoRelacionesProforma;
	}

	public void setIsVisibilidadCeldaNuevoRelacionesProforma(Boolean isVisibilidadCeldaNuevoRelacionesProforma) {
		this.isVisibilidadCeldaNuevoRelacionesProforma = isVisibilidadCeldaNuevoRelacionesProforma;
	}
	
	public Boolean getIsVisibilidadCeldaModificarProforma() {
		return isVisibilidadCeldaModificarProforma;
	}

	public void setIsVisibilidadCeldaModificarProforma(Boolean isVisibilidadCeldaModificarProforma) {
		this.isVisibilidadCeldaModificarProforma = isVisibilidadCeldaModificarProforma;
	}
	
	public Boolean getIsVisibilidadCeldaActualizarProforma() {
		return isVisibilidadCeldaActualizarProforma;
	}

	public void setIsVisibilidadCeldaActualizarProforma(Boolean isVisibilidadCeldaActualizarProforma) {
		this.isVisibilidadCeldaActualizarProforma = isVisibilidadCeldaActualizarProforma;
	}

	public Boolean getIsVisibilidadCeldaEliminarProforma() {
		return isVisibilidadCeldaEliminarProforma;
	}

	public void setIsVisibilidadCeldaEliminarProforma(Boolean isVisibilidadCeldaEliminarProforma) {
		this.isVisibilidadCeldaEliminarProforma = isVisibilidadCeldaEliminarProforma;
	}

	public Boolean getIsVisibilidadCeldaCancelarProforma() {
		return isVisibilidadCeldaCancelarProforma;
	}

	public void setIsVisibilidadCeldaCancelarProforma(Boolean isVisibilidadCeldaCancelarProforma) {
		this.isVisibilidadCeldaCancelarProforma = isVisibilidadCeldaCancelarProforma;
	}

	public Boolean getIsVisibilidadCeldaGuardarProforma() {
		return isVisibilidadCeldaGuardarProforma;
	}

	public void setIsVisibilidadCeldaGuardarProforma(Boolean isVisibilidadCeldaGuardarProforma) {
		this.isVisibilidadCeldaGuardarProforma = isVisibilidadCeldaGuardarProforma;
	}
	
	public Boolean getIsVisibilidadCeldaGuardarCambiosProforma() {
		return isVisibilidadCeldaGuardarCambiosProforma;
	}

	public void setIsVisibilidadCeldaGuardarCambiosProforma(Boolean isVisibilidadCeldaGuardarCambiosProforma) {
		this.isVisibilidadCeldaGuardarCambiosProforma = isVisibilidadCeldaGuardarCambiosProforma;
	}
		
	public ProformaSessionBean getproformaSessionBean() {
		return this.proformaSessionBean;
	}
	
	public void setproformaSessionBean(ProformaSessionBean proformaSessionBean) {
		this.proformaSessionBean=proformaSessionBean;
	}
	
	
	public Boolean getisVisibilidadFK_IdAnio() {
		return this.isVisibilidadFK_IdAnio;
	}

	public void setisVisibilidadFK_IdAnio(Boolean isVisibilidadFK_IdAnio) {
		this.isVisibilidadFK_IdAnio=isVisibilidadFK_IdAnio;
	}

	public Boolean getisVisibilidadFK_IdCentroCosto() {
		return this.isVisibilidadFK_IdCentroCosto;
	}

	public void setisVisibilidadFK_IdCentroCosto(Boolean isVisibilidadFK_IdCentroCosto) {
		this.isVisibilidadFK_IdCentroCosto=isVisibilidadFK_IdCentroCosto;
	}

	public Boolean getisVisibilidadFK_IdCliente() {
		return this.isVisibilidadFK_IdCliente;
	}

	public void setisVisibilidadFK_IdCliente(Boolean isVisibilidadFK_IdCliente) {
		this.isVisibilidadFK_IdCliente=isVisibilidadFK_IdCliente;
	}

	public Boolean getisVisibilidadFK_IdConsignatario() {
		return this.isVisibilidadFK_IdConsignatario;
	}

	public void setisVisibilidadFK_IdConsignatario(Boolean isVisibilidadFK_IdConsignatario) {
		this.isVisibilidadFK_IdConsignatario=isVisibilidadFK_IdConsignatario;
	}

	public Boolean getisVisibilidadFK_IdEjercicio() {
		return this.isVisibilidadFK_IdEjercicio;
	}

	public void setisVisibilidadFK_IdEjercicio(Boolean isVisibilidadFK_IdEjercicio) {
		this.isVisibilidadFK_IdEjercicio=isVisibilidadFK_IdEjercicio;
	}

	public Boolean getisVisibilidadFK_IdEmpleado() {
		return this.isVisibilidadFK_IdEmpleado;
	}

	public void setisVisibilidadFK_IdEmpleado(Boolean isVisibilidadFK_IdEmpleado) {
		this.isVisibilidadFK_IdEmpleado=isVisibilidadFK_IdEmpleado;
	}

	public Boolean getisVisibilidadFK_IdEmpresa() {
		return this.isVisibilidadFK_IdEmpresa;
	}

	public void setisVisibilidadFK_IdEmpresa(Boolean isVisibilidadFK_IdEmpresa) {
		this.isVisibilidadFK_IdEmpresa=isVisibilidadFK_IdEmpresa;
	}

	public Boolean getisVisibilidadFK_IdEstadoProforma() {
		return this.isVisibilidadFK_IdEstadoProforma;
	}

	public void setisVisibilidadFK_IdEstadoProforma(Boolean isVisibilidadFK_IdEstadoProforma) {
		this.isVisibilidadFK_IdEstadoProforma=isVisibilidadFK_IdEstadoProforma;
	}

	public Boolean getisVisibilidadFK_IdFormato() {
		return this.isVisibilidadFK_IdFormato;
	}

	public void setisVisibilidadFK_IdFormato(Boolean isVisibilidadFK_IdFormato) {
		this.isVisibilidadFK_IdFormato=isVisibilidadFK_IdFormato;
	}

	public Boolean getisVisibilidadFK_IdMes() {
		return this.isVisibilidadFK_IdMes;
	}

	public void setisVisibilidadFK_IdMes(Boolean isVisibilidadFK_IdMes) {
		this.isVisibilidadFK_IdMes=isVisibilidadFK_IdMes;
	}

	public Boolean getisVisibilidadFK_IdMoneda() {
		return this.isVisibilidadFK_IdMoneda;
	}

	public void setisVisibilidadFK_IdMoneda(Boolean isVisibilidadFK_IdMoneda) {
		this.isVisibilidadFK_IdMoneda=isVisibilidadFK_IdMoneda;
	}

	public Boolean getisVisibilidadFK_IdPeriodo() {
		return this.isVisibilidadFK_IdPeriodo;
	}

	public void setisVisibilidadFK_IdPeriodo(Boolean isVisibilidadFK_IdPeriodo) {
		this.isVisibilidadFK_IdPeriodo=isVisibilidadFK_IdPeriodo;
	}

	public Boolean getisVisibilidadFK_IdRutaTransporte() {
		return this.isVisibilidadFK_IdRutaTransporte;
	}

	public void setisVisibilidadFK_IdRutaTransporte(Boolean isVisibilidadFK_IdRutaTransporte) {
		this.isVisibilidadFK_IdRutaTransporte=isVisibilidadFK_IdRutaTransporte;
	}

	public Boolean getisVisibilidadFK_IdSubCliente() {
		return this.isVisibilidadFK_IdSubCliente;
	}

	public void setisVisibilidadFK_IdSubCliente(Boolean isVisibilidadFK_IdSubCliente) {
		this.isVisibilidadFK_IdSubCliente=isVisibilidadFK_IdSubCliente;
	}

	public Boolean getisVisibilidadFK_IdSucursal() {
		return this.isVisibilidadFK_IdSucursal;
	}

	public void setisVisibilidadFK_IdSucursal(Boolean isVisibilidadFK_IdSucursal) {
		this.isVisibilidadFK_IdSucursal=isVisibilidadFK_IdSucursal;
	}

	public Boolean getisVisibilidadFK_IdTipoCambio() {
		return this.isVisibilidadFK_IdTipoCambio;
	}

	public void setisVisibilidadFK_IdTipoCambio(Boolean isVisibilidadFK_IdTipoCambio) {
		this.isVisibilidadFK_IdTipoCambio=isVisibilidadFK_IdTipoCambio;
	}

	public Boolean getisVisibilidadFK_IdTipoPrecio() {
		return this.isVisibilidadFK_IdTipoPrecio;
	}

	public void setisVisibilidadFK_IdTipoPrecio(Boolean isVisibilidadFK_IdTipoPrecio) {
		this.isVisibilidadFK_IdTipoPrecio=isVisibilidadFK_IdTipoPrecio;
	}

	public Boolean getisVisibilidadFK_IdTipoProforma() {
		return this.isVisibilidadFK_IdTipoProforma;
	}

	public void setisVisibilidadFK_IdTipoProforma(Boolean isVisibilidadFK_IdTipoProforma) {
		this.isVisibilidadFK_IdTipoProforma=isVisibilidadFK_IdTipoProforma;
	}

	public Boolean getisVisibilidadFK_IdTipoViaTransporte() {
		return this.isVisibilidadFK_IdTipoViaTransporte;
	}

	public void setisVisibilidadFK_IdTipoViaTransporte(Boolean isVisibilidadFK_IdTipoViaTransporte) {
		this.isVisibilidadFK_IdTipoViaTransporte=isVisibilidadFK_IdTipoViaTransporte;
	}

	public Boolean getisVisibilidadFK_IdTransporte() {
		return this.isVisibilidadFK_IdTransporte;
	}

	public void setisVisibilidadFK_IdTransporte(Boolean isVisibilidadFK_IdTransporte) {
		this.isVisibilidadFK_IdTransporte=isVisibilidadFK_IdTransporte;
	}

	public Boolean getisVisibilidadFK_IdUsuario() {
		return this.isVisibilidadFK_IdUsuario;
	}

	public void setisVisibilidadFK_IdUsuario(Boolean isVisibilidadFK_IdUsuario) {
		this.isVisibilidadFK_IdUsuario=isVisibilidadFK_IdUsuario;
	}

	public Boolean getisVisibilidadFK_IdVendedor() {
		return this.isVisibilidadFK_IdVendedor;
	}

	public void setisVisibilidadFK_IdVendedor(Boolean isVisibilidadFK_IdVendedor) {
		this.isVisibilidadFK_IdVendedor=isVisibilidadFK_IdVendedor;
	}

	
	
	public void setVariablesFormularioToObjetoActualForeignKeysProforma(Proforma proforma)throws Exception {
		try {
			
				this.setActualParaGuardarEmpresaForeignKey(proforma,null);
				this.setActualParaGuardarSucursalForeignKey(proforma,null);
				this.setActualParaGuardarUsuarioForeignKey(proforma,null);
				this.setActualParaGuardarEjercicioForeignKey(proforma,null);
				this.setActualParaGuardarPeriodoForeignKey(proforma,null);
				this.setActualParaGuardarAnioForeignKey(proforma,null);
				this.setActualParaGuardarMesForeignKey(proforma,null);
				this.setActualParaGuardarMonedaForeignKey(proforma,null);
				this.setActualParaGuardarEmpleadoForeignKey(proforma,null);
				this.setActualParaGuardarFormatoForeignKey(proforma,null);
				this.setActualParaGuardarEstadoProformaForeignKey(proforma,null);
				this.setActualParaGuardarClienteForeignKey(proforma,null);
				this.setActualParaGuardarTipoPrecioForeignKey(proforma,null);
				this.setActualParaGuardarVendedorForeignKey(proforma,null);
				this.setActualParaGuardarSubClienteForeignKey(proforma,null);
				this.setActualParaGuardarTipoViaTransporteForeignKey(proforma,null);
				this.setActualParaGuardarTransporteForeignKey(proforma,null);
				this.setActualParaGuardarRutaTransporteForeignKey(proforma,null);
				this.setActualParaGuardarCentroCostoForeignKey(proforma,null);
				this.setActualParaGuardarTipoProformaForeignKey(proforma,null);
				this.setActualParaGuardarConsignatarioForeignKey(proforma,null);
				this.setActualParaGuardarTipoCambioForeignKey(proforma,null);
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarLicenciaCliente(DatosCliente datosCliente) throws Exception {
		Boolean existe=false;
			
		try {
				InputStream reportFile=null;
				
				String sPath=this.parametroGeneralUsuario.getpath_exportar()+"erp_bydan/license/license.xml";
				
				reportFile = new FileInputStream(sPath);
				
				Document documentBuilder=null;
				
				if(this.constantes2.DOCUMENT_BUILDER==null) {
					documentBuilder=Funciones2.parseXml(reportFile);
				} else {
					documentBuilder=this.constantes2.DOCUMENT_BUILDER;
				}
				
				//GlobalSeguridad.readXml(documentBuilder);
				
				String sNamePCServerLicencia="";
				String sClaveSistemaLicencia="";
				Date dFechaServerLicencia=null;
				
				//CARGAR ELEMENTOS DE LICENCIA
				NodeList nodeList = documentBuilder.getElementsByTagName("Licencia");
				
				for (int iIndice = 0; iIndice < nodeList.getLength(); iIndice++) {
					Node node = nodeList.item(iIndice);
				
					if (node.getNodeType() == Node.ELEMENT_NODE) {
						Element element = (Element) node;
						 
						sNamePCServerLicencia=element.getElementsByTagName("NombrePc").item(0).getTextContent();
						sClaveSistemaLicencia=element.getElementsByTagName("ClaveSistema").item(0).getTextContent();
						
						existe=true;
						break;
					}
				}														
			
				
			if(existe) {
				datosCliente.setsClaveSistema(sClaveSistemaLicencia);
				
				if(!datosCliente.getsNamePCServer().equals(sNamePCServerLicencia)
					&& !datosCliente.getsNamePCServer().equals("")) {
					
					datosCliente.setsNamePCServer(sNamePCServerLicencia);
				}
			} else {
				throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
			}
		} catch(Exception e) {
			throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
		}						
	}
	
	public void cargarDatosCliente() throws Exception {
		String sPrimerMacAddress="";		
		String sHostName="";		 
		String sHostIp="";		  
		String sHostUser="";
		
		
		sPrimerMacAddress=FuncionesNetwork.getPrimerMacAddress();		
		sHostName=FuncionesNetwork.getHostName();		 
		sHostIp=FuncionesNetwork.getHostIp();		  
		sHostUser=FuncionesNetwork.getHostUser();
		
		
		this.datosCliente=new DatosCliente();
		if(lIdUsuarioSesion!=null){datosCliente.setIdUsuario(this.lIdUsuarioSesion);}
		
		//SERVIDOR WEB Y TALVEZ SERVIDOR SWING WINDOWS
		this.datosCliente.setsUsuarioPCServer(sHostUser);
		this.datosCliente.setsNamePCServer(sHostName);
		this.datosCliente.setsIPPCServer(sHostIp);
		this.datosCliente.setsMacAddressPCServer(sPrimerMacAddress);
			
			//CLIENTE SWING WINDOWS
			this.datosCliente.setIsClienteWeb(false);
			
			this.datosCliente.setsUsuarioPC(sHostUser);
			this.datosCliente.setsNamePC(sHostName);
			this.datosCliente.setsIPPC(sHostIp);
			this.datosCliente.setsMacAddressPC(sPrimerMacAddress);	
			
			
			//this.cargarLicenciaCliente(this.datosCliente);
			
	}
	
	public void bugActualizarReferenciaActual(Proforma proforma,Proforma proformaAux) throws Exception {
		//ARCHITECTURE		
		//EL ID NEGATIVO GUARDADO EN ORIGINAL SIRVE PARA VERIFICAR Y ACTUALIZAR EL REGISTRO NUEVO (ID,VERSIONROW)
		this.setCamposBaseDesdeOriginalProforma(proforma);
					
		//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
		proformaAux.setId(proforma.getId());
		proformaAux.setVersionRow(proforma.getVersionRow());					
	}
	
	public void ejecutarMantenimiento(MaintenanceType maintenanceType)throws Exception {	
		try	{								
			
			//this.startProcessProforma();
		
			int intSelectedRow = this.jTableDatosProforma.getSelectedRow();	       
			
			//PUEDE SER -1 CUANDO SE ELIMINA EN GUARDAR CAMBIOS
			if(intSelectedRow>=0 && maintenanceType!=MaintenanceType.GUARDARCAMBIOS) {
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
					
				//ARCHITECTURE
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proforma =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
					this.proforma =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
				}
				
				//ARCHITECTURE
				
				if(ProformaJInternalFrame.ISBINDING_MANUAL_TABLA) {
					//this.setVariablesFormularioToObjetoActualProforma(this.proforma,true);
				}
				
				this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
			}
			
			//LUEGO DE TRAER DATOS CORRESPONDIENTES QUE COINCIDA LISTA TABLA QUITO FILA TOTALES
			if(this.conTotales) {
				//MEJOR LO DEJO, SI EXISTE EXCEPCION SE PIEDE FILA TOTALES Y ORDEN INDICE FILA ACTUAL
				//this.quitarFilaTotales();
			}
			
			this.cargarDatosCliente();
			
			this.datosDeep=new DatosDeep();
			
			//SE CAMBIA ESTADOS CON ERROR, ENTONCES SE EJECUTA ANTES
			//this.invalidValues = proformaValidator.getInvalidValues(this.proforma);
			
			//if(this.invalidValues==null || this.invalidValues.length<=0) {
			
			proformaLogic.setDatosCliente(datosCliente);
			proformaLogic.setIsConDeep(false);
			
			if(maintenanceType==MaintenanceType.NUEVO) {
				proformaAux=new  Proforma();
				
				proformaAux.setIsNew(true);
				proformaAux.setIsChanged(true);
				
				proformaAux.setProformaOriginal(this.proforma);
				
				proformaAux.setId(this.proforma.getId());	
				proformaAux.setVersionRow(this.proforma.getVersionRow());	
				proformaAux.setid_empresa(this.proforma.getid_empresa());	
				proformaAux.setid_sucursal(this.proforma.getid_sucursal());	
				proformaAux.setid_usuario(this.proforma.getid_usuario());	
				proformaAux.setid_ejercicio(this.proforma.getid_ejercicio());	
				proformaAux.setid_periodo(this.proforma.getid_periodo());	
				proformaAux.setid_anio(this.proforma.getid_anio());	
				proformaAux.setid_mes(this.proforma.getid_mes());	
				proformaAux.setnumero_pre_impreso(this.proforma.getnumero_pre_impreso());	
				proformaAux.setfecha_emision(this.proforma.getfecha_emision());	
				proformaAux.setdias(this.proforma.getdias());	
				proformaAux.setfecha_vencimiento(this.proforma.getfecha_vencimiento());	
				proformaAux.setid_moneda(this.proforma.getid_moneda());	
				proformaAux.setcotizacion(this.proforma.getcotizacion());	
				proformaAux.setid_empleado(this.proforma.getid_empleado());	
				
				if(this.proforma.getid_formato()!=null && this.proforma.getid_formato()>0L) {
					proformaAux.setid_formato(this.proforma.getid_formato());
				} else {
					proformaAux.setid_formato(null);
				}	
				proformaAux.setid_estado_proforma(this.proforma.getid_estado_proforma());	
				proformaAux.setdireccion(this.proforma.getdireccion());	
				proformaAux.setid_cliente(this.proforma.getid_cliente());	
				proformaAux.setruc(this.proforma.getruc());	
				proformaAux.setes_oferta(this.proforma.getes_oferta());	
				proformaAux.settelefono(this.proforma.gettelefono());	
				proformaAux.setid_tipo_precio(this.proforma.getid_tipo_precio());	
				
				if(this.proforma.getid_vendedor()!=null && this.proforma.getid_vendedor()>0L) {
					proformaAux.setid_vendedor(this.proforma.getid_vendedor());
				} else {
					proformaAux.setid_vendedor(null);
				}	
				
				if(this.proforma.getid_sub_cliente()!=null && this.proforma.getid_sub_cliente()>0L) {
					proformaAux.setid_sub_cliente(this.proforma.getid_sub_cliente());
				} else {
					proformaAux.setid_sub_cliente(null);
				}	
				proformaAux.setid_tipo_via_transporte(this.proforma.getid_tipo_via_transporte());	
				proformaAux.setid_transporte(this.proforma.getid_transporte());	
				proformaAux.setid_ruta_transporte(this.proforma.getid_ruta_transporte());	
				proformaAux.setdescripcion(this.proforma.getdescripcion());	
				proformaAux.setdescuento_porcentaje(this.proforma.getdescuento_porcentaje());	
				proformaAux.setmonto_con_iva(this.proforma.getmonto_con_iva());	
				proformaAux.setsuman(this.proforma.getsuman());	
				proformaAux.setdescuento_valor(this.proforma.getdescuento_valor());	
				proformaAux.setmonto_sin_iva(this.proforma.getmonto_sin_iva());	
				proformaAux.setdescuento_general(this.proforma.getdescuento_general());	
				proformaAux.setflete(this.proforma.getflete());	
				proformaAux.setultimo_costo(this.proforma.getultimo_costo());	
				proformaAux.setsubtotal(this.proforma.getsubtotal());	
				proformaAux.setotros_cargos(this.proforma.getotros_cargos());	
				proformaAux.setmargen_utilidad(this.proforma.getmargen_utilidad());	
				proformaAux.setiva(this.proforma.getiva());	
				proformaAux.setfinanciamiento(this.proforma.getfinanciamiento());	
				proformaAux.settotal(this.proforma.gettotal());	
				proformaAux.setotros_valores(this.proforma.getotros_valores());	
				proformaAux.setanticipo(this.proforma.getanticipo());	
				proformaAux.setice(this.proforma.getice());	
				proformaAux.setmonto_retencion(this.proforma.getmonto_retencion());	
				proformaAux.setfecha(this.proforma.getfecha());	
				proformaAux.setfecha_servidor(this.proforma.getfecha_servidor());	
				proformaAux.sethora_inicio(this.proforma.gethora_inicio());	
				proformaAux.sethora_fin(this.proforma.gethora_fin());	
				proformaAux.setid_centro_costo(this.proforma.getid_centro_costo());	
				proformaAux.setid_tipo_proforma(this.proforma.getid_tipo_proforma());	
				proformaAux.setid_consignatario(this.proforma.getid_consignatario());	
				
				if(this.proforma.getid_tipo_cambio()!=null && this.proforma.getid_tipo_cambio()>0L) {
					proformaAux.setid_tipo_cambio(this.proforma.getid_tipo_cambio());
				} else {
					proformaAux.setid_tipo_cambio(null);
				}	
								
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.proformaSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.proformaSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(proformaAux,proformaLogic.getProformas());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(proformaAux,proformas);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote  && !this.proformaSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.proformaSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						proformaLogic.saveProformas();//WithConnection
						//proformaLogic.getSetVersionRowProformas();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE		
					
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.proforma,proformaAux);
					
					this.refrescarForeignKeysDescripcionesProforma();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.proformaSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
							this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.terminoproformaLogic.getTerminoProformas().addAll(this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.terminoproformasEliminados);
							this.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.detalleproformaLogic.getDetalleProformas().addAll(this.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.detalleproformasEliminados);
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
							this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.terminoproformas.addAll(this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.terminoproformasEliminados);
							this.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.detalleproformas.addAll(this.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.detalleproformasEliminados);
						}
						//ARCHITECTURE	
						
						if(!this.proformaSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
								if(this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.jInternalFrameDetalleFormTerminoProforma.detalleterminoproformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.jInternalFrameDetalleFormTerminoProforma.detalleterminoproformaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.jInternalFrameDetalleFormTerminoProforma.detalleterminoproformaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.quitarFilaTotales();*/}
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
								if(this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.jInternalFrameDetalleFormTerminoProforma.detalleterminoproformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.jInternalFrameDetalleFormTerminoProforma.detalleterminoproformaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.jInternalFrameDetalleFormTerminoProforma.detalleterminoproformaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.quitarFilaTotales();*/}	
							}
							//ARCHITECTURE
												
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								proformaLogic.saveProformaRelaciones(proformaAux,this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.terminoproformaLogic.getTerminoProformas(),this.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.detalleproformaLogic.getDetalleProformas());//WithConnection
								//proformaLogic.getSetVersionRowProformas();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.proforma,proformaAux);
					
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.terminoproformaLogic.setTerminoProformas(new ArrayList<TerminoProforma>());
							this.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.detalleproformaLogic.setDetalleProformas(new ArrayList<DetalleProforma>());
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.terminoproformas= new ArrayList<TerminoProforma>();
							this.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.detalleproformas= new ArrayList<DetalleProforma>();
							}
							//ARCHITECTURE	
						} else {
							
							

							if(this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.quitarFilaTotales();}
							proformaAux.setTerminoProformas(this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.terminoproformaLogic.getTerminoProformas());

							if(this.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.quitarFilaTotales();}
							proformaAux.setDetalleProformas(this.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.detalleproformaLogic.getDetalleProformas());
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.proformaSessionBean.getEstaModoGuardarRelaciones() 
									|| this.proformaSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(proformaAux,proformaLogic.getProformas());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(proformaAux,proformas);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.proforma,proformaAux);												
						}
					}
				}
			} else if(maintenanceType==MaintenanceType.ACTUALIZAR) {
				proformaAux=new  Proforma();
				
				//PUEDE QUE SE ACTUALIZE ALGUN REGISTRO NUEVO
				if(!this.proformaSessionBean.getEsGuardarRelacionado() 
					|| (this.proformaSessionBean.getEsGuardarRelacionado() && this.proforma.getId()>=0)) {
						
					proformaAux.setIsNew(false);
				}
				
				proformaAux.setIsDeleted(false);
			
				proformaAux.setId(this.proforma.getId());	
				proformaAux.setVersionRow(this.proforma.getVersionRow());	
				proformaAux.setid_empresa(this.proforma.getid_empresa());	
				proformaAux.setid_sucursal(this.proforma.getid_sucursal());	
				proformaAux.setid_usuario(this.proforma.getid_usuario());	
				proformaAux.setid_ejercicio(this.proforma.getid_ejercicio());	
				proformaAux.setid_periodo(this.proforma.getid_periodo());	
				proformaAux.setid_anio(this.proforma.getid_anio());	
				proformaAux.setid_mes(this.proforma.getid_mes());	
				proformaAux.setnumero_pre_impreso(this.proforma.getnumero_pre_impreso());	
				proformaAux.setfecha_emision(this.proforma.getfecha_emision());	
				proformaAux.setdias(this.proforma.getdias());	
				proformaAux.setfecha_vencimiento(this.proforma.getfecha_vencimiento());	
				proformaAux.setid_moneda(this.proforma.getid_moneda());	
				proformaAux.setcotizacion(this.proforma.getcotizacion());	
				proformaAux.setid_empleado(this.proforma.getid_empleado());	
				
				if(this.proforma.getid_formato()!=null && this.proforma.getid_formato()>0L) {
					proformaAux.setid_formato(this.proforma.getid_formato());
				} else {
					proformaAux.setid_formato(null);
				}	
				proformaAux.setid_estado_proforma(this.proforma.getid_estado_proforma());	
				proformaAux.setdireccion(this.proforma.getdireccion());	
				proformaAux.setid_cliente(this.proforma.getid_cliente());	
				proformaAux.setruc(this.proforma.getruc());	
				proformaAux.setes_oferta(this.proforma.getes_oferta());	
				proformaAux.settelefono(this.proforma.gettelefono());	
				proformaAux.setid_tipo_precio(this.proforma.getid_tipo_precio());	
				
				if(this.proforma.getid_vendedor()!=null && this.proforma.getid_vendedor()>0L) {
					proformaAux.setid_vendedor(this.proforma.getid_vendedor());
				} else {
					proformaAux.setid_vendedor(null);
				}	
				
				if(this.proforma.getid_sub_cliente()!=null && this.proforma.getid_sub_cliente()>0L) {
					proformaAux.setid_sub_cliente(this.proforma.getid_sub_cliente());
				} else {
					proformaAux.setid_sub_cliente(null);
				}	
				proformaAux.setid_tipo_via_transporte(this.proforma.getid_tipo_via_transporte());	
				proformaAux.setid_transporte(this.proforma.getid_transporte());	
				proformaAux.setid_ruta_transporte(this.proforma.getid_ruta_transporte());	
				proformaAux.setdescripcion(this.proforma.getdescripcion());	
				proformaAux.setdescuento_porcentaje(this.proforma.getdescuento_porcentaje());	
				proformaAux.setmonto_con_iva(this.proforma.getmonto_con_iva());	
				proformaAux.setsuman(this.proforma.getsuman());	
				proformaAux.setdescuento_valor(this.proforma.getdescuento_valor());	
				proformaAux.setmonto_sin_iva(this.proforma.getmonto_sin_iva());	
				proformaAux.setdescuento_general(this.proforma.getdescuento_general());	
				proformaAux.setflete(this.proforma.getflete());	
				proformaAux.setultimo_costo(this.proforma.getultimo_costo());	
				proformaAux.setsubtotal(this.proforma.getsubtotal());	
				proformaAux.setotros_cargos(this.proforma.getotros_cargos());	
				proformaAux.setmargen_utilidad(this.proforma.getmargen_utilidad());	
				proformaAux.setiva(this.proforma.getiva());	
				proformaAux.setfinanciamiento(this.proforma.getfinanciamiento());	
				proformaAux.settotal(this.proforma.gettotal());	
				proformaAux.setotros_valores(this.proforma.getotros_valores());	
				proformaAux.setanticipo(this.proforma.getanticipo());	
				proformaAux.setice(this.proforma.getice());	
				proformaAux.setmonto_retencion(this.proforma.getmonto_retencion());	
				proformaAux.setfecha(this.proforma.getfecha());	
				proformaAux.setfecha_servidor(this.proforma.getfecha_servidor());	
				proformaAux.sethora_inicio(this.proforma.gethora_inicio());	
				proformaAux.sethora_fin(this.proforma.gethora_fin());	
				proformaAux.setid_centro_costo(this.proforma.getid_centro_costo());	
				proformaAux.setid_tipo_proforma(this.proforma.getid_tipo_proforma());	
				proformaAux.setid_consignatario(this.proforma.getid_consignatario());	
				
				if(this.proforma.getid_tipo_cambio()!=null && this.proforma.getid_tipo_cambio()>0L) {
					proformaAux.setid_tipo_cambio(this.proforma.getid_tipo_cambio());
				} else {
					proformaAux.setid_tipo_cambio(null);
				}	
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(proformaAux,proformaLogic.getProformas());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(proformaAux,proformas);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote && !this.proformaSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.proformaSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						proformaLogic.saveProformas();//WithConnection
						//proformaLogic.getSetVersionRowProformas();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
					
					//TALVEZ ESTA DEMAS POR SER UPDATE
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.proforma,proformaAux);
					
					this.refrescarForeignKeysDescripcionesProforma();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.proformaSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
							this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.terminoproformaLogic.getTerminoProformas().addAll(this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.terminoproformasEliminados);
							this.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.detalleproformaLogic.getDetalleProformas().addAll(this.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.detalleproformasEliminados);
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
							this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.terminoproformas.addAll(this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.terminoproformasEliminados);
							this.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.detalleproformas.addAll(this.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.detalleproformasEliminados);
						}
						//ARCHITECTURE
						
						if(!this.proformaSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
								if(this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.jInternalFrameDetalleFormTerminoProforma.detalleterminoproformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.jInternalFrameDetalleFormTerminoProforma.detalleterminoproformaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.jInternalFrameDetalleFormTerminoProforma.detalleterminoproformaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.quitarFilaTotales();*/}
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
								if(this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.jInternalFrameDetalleFormTerminoProforma.detalleterminoproformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.jInternalFrameDetalleFormTerminoProforma.detalleterminoproformaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.jInternalFrameDetalleFormTerminoProforma.detalleterminoproformaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.quitarFilaTotales();*/}	
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								proformaLogic.saveProformaRelaciones(proformaAux,this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.terminoproformaLogic.getTerminoProformas(),this.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.detalleproformaLogic.getDetalleProformas());//WithConnection
								//proformaLogic.getSetVersionRowProformas();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.proforma,proformaAux);
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.terminoproformaLogic.setTerminoProformas(new ArrayList<TerminoProforma>());
							this.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.detalleproformaLogic.setDetalleProformas(new ArrayList<DetalleProforma>());
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.terminoproformas= new ArrayList<TerminoProforma>();
							this.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.detalleproformas= new ArrayList<DetalleProforma>();
							}
							//ARCHITECTURE
						} else {
							
							

							if(this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.quitarFilaTotales();}
							proformaAux.setTerminoProformas(this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.terminoproformaLogic.getTerminoProformas());

							if(this.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.quitarFilaTotales();}
							proformaAux.setDetalleProformas(this.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.detalleproformaLogic.getDetalleProformas());
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.proformaSessionBean.getEstaModoGuardarRelaciones() 
									|| this.proformaSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(proformaAux,proformaLogic.getProformas());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(proformaAux,proformas);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.proforma,proformaAux);
					
						}
					}
				}				
			} else if(maintenanceType==MaintenanceType.ELIMINAR) {
				proformaAux=new  Proforma();
				
				proformaAux.setIsNew(false);
				proformaAux.setIsChanged(false);
				
				proformaAux.setIsDeleted(true);
				
				proformaAux.setId(this.proforma.getId());	
				proformaAux.setVersionRow(this.proforma.getVersionRow());	
				proformaAux.setid_empresa(this.proforma.getid_empresa());	
				proformaAux.setid_sucursal(this.proforma.getid_sucursal());	
				proformaAux.setid_usuario(this.proforma.getid_usuario());	
				proformaAux.setid_ejercicio(this.proforma.getid_ejercicio());	
				proformaAux.setid_periodo(this.proforma.getid_periodo());	
				proformaAux.setid_anio(this.proforma.getid_anio());	
				proformaAux.setid_mes(this.proforma.getid_mes());	
				proformaAux.setnumero_pre_impreso(this.proforma.getnumero_pre_impreso());	
				proformaAux.setfecha_emision(this.proforma.getfecha_emision());	
				proformaAux.setdias(this.proforma.getdias());	
				proformaAux.setfecha_vencimiento(this.proforma.getfecha_vencimiento());	
				proformaAux.setid_moneda(this.proforma.getid_moneda());	
				proformaAux.setcotizacion(this.proforma.getcotizacion());	
				proformaAux.setid_empleado(this.proforma.getid_empleado());	
				
				if(this.proforma.getid_formato()!=null && this.proforma.getid_formato()>0L) {
					proformaAux.setid_formato(this.proforma.getid_formato());
				} else {
					proformaAux.setid_formato(null);
				}	
				proformaAux.setid_estado_proforma(this.proforma.getid_estado_proforma());	
				proformaAux.setdireccion(this.proforma.getdireccion());	
				proformaAux.setid_cliente(this.proforma.getid_cliente());	
				proformaAux.setruc(this.proforma.getruc());	
				proformaAux.setes_oferta(this.proforma.getes_oferta());	
				proformaAux.settelefono(this.proforma.gettelefono());	
				proformaAux.setid_tipo_precio(this.proforma.getid_tipo_precio());	
				
				if(this.proforma.getid_vendedor()!=null && this.proforma.getid_vendedor()>0L) {
					proformaAux.setid_vendedor(this.proforma.getid_vendedor());
				} else {
					proformaAux.setid_vendedor(null);
				}	
				
				if(this.proforma.getid_sub_cliente()!=null && this.proforma.getid_sub_cliente()>0L) {
					proformaAux.setid_sub_cliente(this.proforma.getid_sub_cliente());
				} else {
					proformaAux.setid_sub_cliente(null);
				}	
				proformaAux.setid_tipo_via_transporte(this.proforma.getid_tipo_via_transporte());	
				proformaAux.setid_transporte(this.proforma.getid_transporte());	
				proformaAux.setid_ruta_transporte(this.proforma.getid_ruta_transporte());	
				proformaAux.setdescripcion(this.proforma.getdescripcion());	
				proformaAux.setdescuento_porcentaje(this.proforma.getdescuento_porcentaje());	
				proformaAux.setmonto_con_iva(this.proforma.getmonto_con_iva());	
				proformaAux.setsuman(this.proforma.getsuman());	
				proformaAux.setdescuento_valor(this.proforma.getdescuento_valor());	
				proformaAux.setmonto_sin_iva(this.proforma.getmonto_sin_iva());	
				proformaAux.setdescuento_general(this.proforma.getdescuento_general());	
				proformaAux.setflete(this.proforma.getflete());	
				proformaAux.setultimo_costo(this.proforma.getultimo_costo());	
				proformaAux.setsubtotal(this.proforma.getsubtotal());	
				proformaAux.setotros_cargos(this.proforma.getotros_cargos());	
				proformaAux.setmargen_utilidad(this.proforma.getmargen_utilidad());	
				proformaAux.setiva(this.proforma.getiva());	
				proformaAux.setfinanciamiento(this.proforma.getfinanciamiento());	
				proformaAux.settotal(this.proforma.gettotal());	
				proformaAux.setotros_valores(this.proforma.getotros_valores());	
				proformaAux.setanticipo(this.proforma.getanticipo());	
				proformaAux.setice(this.proforma.getice());	
				proformaAux.setmonto_retencion(this.proforma.getmonto_retencion());	
				proformaAux.setfecha(this.proforma.getfecha());	
				proformaAux.setfecha_servidor(this.proforma.getfecha_servidor());	
				proformaAux.sethora_inicio(this.proforma.gethora_inicio());	
				proformaAux.sethora_fin(this.proforma.gethora_fin());	
				proformaAux.setid_centro_costo(this.proforma.getid_centro_costo());	
				proformaAux.setid_tipo_proforma(this.proforma.getid_tipo_proforma());	
				proformaAux.setid_consignatario(this.proforma.getid_consignatario());	
				
				if(this.proforma.getid_tipo_cambio()!=null && this.proforma.getid_tipo_cambio()>0L) {
					proformaAux.setid_tipo_cambio(this.proforma.getid_tipo_cambio());
				} else {
					proformaAux.setid_tipo_cambio(null);
				}	
				
				if(this.proformaSessionBean.getEsGuardarRelacionado()) {
					//ELEMENTO ACTUAL NO SE HA INGRESADO AL SISTEMA, NO SE PUEDE ELIMINAR ALGO QUE NO EXISTE
					if(this.proformaAux.getId()>=0) {	
						this.proformasEliminados.add(proformaAux);											
					}
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					actualizarLista(proformaAux,proformaLogic.getProformas());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(proformaAux,proformas);
				}
				//ARCHITECTURE
				
				
				if(!isGuardarCambiosEnLote && !this.proformaSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.proformaSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						proformaLogic.saveProformas();//WithConnection
						//proformaLogic.getSetVersionRowProformas();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.proformaSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
							this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.terminoproformaLogic.getTerminoProformas().addAll(this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.terminoproformasEliminados);
							this.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.detalleproformaLogic.getDetalleProformas().addAll(this.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.detalleproformasEliminados);
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
							this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.terminoproformas.addAll(this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.terminoproformasEliminados);
							this.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.detalleproformas.addAll(this.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.detalleproformasEliminados);
						}
						//ARCHITECTURE
						
						
						if(!this.proformaSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
								if(this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.jInternalFrameDetalleFormTerminoProforma.detalleterminoproformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.jInternalFrameDetalleFormTerminoProforma.detalleterminoproformaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.jInternalFrameDetalleFormTerminoProforma.detalleterminoproformaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.quitarFilaTotales();*/}
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
								if(this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.jInternalFrameDetalleFormTerminoProforma.detalleterminoproformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.jInternalFrameDetalleFormTerminoProforma.detalleterminoproformaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.jInternalFrameDetalleFormTerminoProforma.detalleterminoproformaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.quitarFilaTotales();*/}	
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								proformaLogic.saveProformaRelaciones(proformaAux,this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.terminoproformaLogic.getTerminoProformas(),this.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.detalleproformaLogic.getDetalleProformas());//WithConnection
								//proformaLogic.getSetVersionRowProformas();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.terminoproformaLogic.setTerminoProformas(new ArrayList<TerminoProforma>());
							this.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.detalleproformaLogic.setDetalleProformas(new ArrayList<DetalleProforma>());
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.terminoproformas= new ArrayList<TerminoProforma>();
							this.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.detalleproformas= new ArrayList<DetalleProforma>();
							}
							//ARCHITECTURE
						}
					}  else {
							
						

							if(this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.quitarFilaTotales();}
							proformaAux.setTerminoProformas(this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.terminoproformaLogic.getTerminoProformas());

							if(this.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.quitarFilaTotales();}
							proformaAux.setDetalleProformas(this.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.detalleproformaLogic.getDetalleProformas());
								
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							if(this.proformaSessionBean.getEstaModoGuardarRelaciones() 
								|| this.proformaSessionBean.getEsGuardarRelacionado())	{
								actualizarLista(proformaAux,proformaLogic.getProformas());
							}
						} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
							actualizarLista(proformaAux,proformas);
						}
						//ARCHITECTURE
					}
				}				
			} else if(maintenanceType==MaintenanceType.GUARDARCAMBIOS) {		
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.getProformas().addAll(this.proformasEliminados);
					
					proformaLogic.saveProformas();//WithConnection
					//proformaLogic.getSetVersionRowProformas();//WithConnection
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}	
				//ARCHITECTURE
				this.refrescarForeignKeysDescripcionesProforma();
				
				this.proformasEliminados= new ArrayList<Proforma>();		
			}
			
			if(this.proformaSessionBean.getEsGuardarRelacionado()) {
				 this.crearFilaTotales();
			}
			
			
									
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.proformaSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				if(!this.isPostAccionSinMensaje) {
					JOptionPane.showMessageDialog(this,"Proforma GUARDADO CORRECTAMENTE","MANTENIMIENTO DE Proforma",JOptionPane.INFORMATION_MESSAGE);
					if(maintenanceType==MaintenanceType.NUEVO || maintenanceType==MaintenanceType.ACTUALIZAR) {
						//CUANDO ES NUEVO SE PIERDE REFERENCIA NO SE PORQUE
						this.proforma=proformaAux;
					}
				}
			}
			
			this.isErrorGuardar=false;
			
			this.inicializarInvalidValues();
		/*
		} else {
			this.mostrarInvalidValues();	
		}
		*/
			
		} catch(Exception e) {
			this.isErrorGuardar=true;
			
			this.crearFilaTotales();
			
			throw e;
		} finally {
      		//this.finishProcessProforma();
      	}
		
	}	
	
	public void actualizarRelaciones(Proforma proformaLocal) throws Exception {
		
		if(this.proformaSessionBean.getConGuardarRelaciones()) {			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
			
				proformaLocal.setTerminoProformas(this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.terminoproformaLogic.getTerminoProformas());
				proformaLocal.setDetalleProformas(this.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.detalleproformaLogic.getDetalleProformas());
			
			} else {
			
				proformaLocal.setTerminoProformas(this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.terminoproformas);
				proformaLocal.setDetalleProformas(this.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.detalleproformas);	
			}
		}
	}
	
	public void actualizarRelacionFkPadreActual(Proforma proformaLocal) throws Exception {	
		if(this.proformaSessionBean.getEsGuardarRelacionado()) {			
			
		
			if(this.jInternalFrameParent.getClass().equals(EmpresaDetalleFormJInternalFrame.class)) {
				EmpresaBeanSwingJInternalFrame empresaBeanSwingJInternalFrameLocal=(EmpresaBeanSwingJInternalFrame) ((EmpresaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				empresaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEmpresa(empresaBeanSwingJInternalFrameLocal.getempresa(),true);
				empresaBeanSwingJInternalFrameLocal.actualizarLista(empresaBeanSwingJInternalFrameLocal.empresa,this.empresasForeignKey);

				empresaBeanSwingJInternalFrameLocal.actualizarRelaciones(empresaBeanSwingJInternalFrameLocal.empresa);

				proformaLocal.setEmpresa(empresaBeanSwingJInternalFrameLocal.empresa);

				this.addItemDefectoCombosForeignKeyEmpresa();
				this.cargarCombosFrameEmpresasForeignKey("Formulario");
				this.setActualEmpresaForeignKey(empresaBeanSwingJInternalFrameLocal.empresa.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(SucursalDetalleFormJInternalFrame.class)) {
				SucursalBeanSwingJInternalFrame sucursalBeanSwingJInternalFrameLocal=(SucursalBeanSwingJInternalFrame) ((SucursalDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				sucursalBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoSucursal(sucursalBeanSwingJInternalFrameLocal.getsucursal(),true);
				sucursalBeanSwingJInternalFrameLocal.actualizarLista(sucursalBeanSwingJInternalFrameLocal.sucursal,this.sucursalsForeignKey);

				sucursalBeanSwingJInternalFrameLocal.actualizarRelaciones(sucursalBeanSwingJInternalFrameLocal.sucursal);

				proformaLocal.setSucursal(sucursalBeanSwingJInternalFrameLocal.sucursal);

				this.addItemDefectoCombosForeignKeySucursal();
				this.cargarCombosFrameSucursalsForeignKey("Formulario");
				this.setActualSucursalForeignKey(sucursalBeanSwingJInternalFrameLocal.sucursal.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(UsuarioDetalleFormJInternalFrame.class)) {
				UsuarioBeanSwingJInternalFrame usuarioBeanSwingJInternalFrameLocal=(UsuarioBeanSwingJInternalFrame) ((UsuarioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				usuarioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoUsuario(usuarioBeanSwingJInternalFrameLocal.getusuario(),true);
				usuarioBeanSwingJInternalFrameLocal.actualizarLista(usuarioBeanSwingJInternalFrameLocal.usuario,this.usuariosForeignKey);

				usuarioBeanSwingJInternalFrameLocal.actualizarRelaciones(usuarioBeanSwingJInternalFrameLocal.usuario);

				proformaLocal.setUsuario(usuarioBeanSwingJInternalFrameLocal.usuario);

				this.addItemDefectoCombosForeignKeyUsuario();
				this.cargarCombosFrameUsuariosForeignKey("Formulario");
				this.setActualUsuarioForeignKey(usuarioBeanSwingJInternalFrameLocal.usuario.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EjercicioDetalleFormJInternalFrame.class)) {
				EjercicioBeanSwingJInternalFrame ejercicioBeanSwingJInternalFrameLocal=(EjercicioBeanSwingJInternalFrame) ((EjercicioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				ejercicioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEjercicio(ejercicioBeanSwingJInternalFrameLocal.getejercicio(),true);
				ejercicioBeanSwingJInternalFrameLocal.actualizarLista(ejercicioBeanSwingJInternalFrameLocal.ejercicio,this.ejerciciosForeignKey);

				ejercicioBeanSwingJInternalFrameLocal.actualizarRelaciones(ejercicioBeanSwingJInternalFrameLocal.ejercicio);

				proformaLocal.setEjercicio(ejercicioBeanSwingJInternalFrameLocal.ejercicio);

				this.addItemDefectoCombosForeignKeyEjercicio();
				this.cargarCombosFrameEjerciciosForeignKey("Formulario");
				this.setActualEjercicioForeignKey(ejercicioBeanSwingJInternalFrameLocal.ejercicio.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(PeriodoDetalleFormJInternalFrame.class)) {
				PeriodoBeanSwingJInternalFrame periodoBeanSwingJInternalFrameLocal=(PeriodoBeanSwingJInternalFrame) ((PeriodoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				periodoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoPeriodo(periodoBeanSwingJInternalFrameLocal.getperiodo(),true);
				periodoBeanSwingJInternalFrameLocal.actualizarLista(periodoBeanSwingJInternalFrameLocal.periodo,this.periodosForeignKey);

				periodoBeanSwingJInternalFrameLocal.actualizarRelaciones(periodoBeanSwingJInternalFrameLocal.periodo);

				proformaLocal.setPeriodo(periodoBeanSwingJInternalFrameLocal.periodo);

				this.addItemDefectoCombosForeignKeyPeriodo();
				this.cargarCombosFramePeriodosForeignKey("Formulario");
				this.setActualPeriodoForeignKey(periodoBeanSwingJInternalFrameLocal.periodo.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(AnioDetalleFormJInternalFrame.class)) {
				AnioBeanSwingJInternalFrame anioBeanSwingJInternalFrameLocal=(AnioBeanSwingJInternalFrame) ((AnioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				anioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoAnio(anioBeanSwingJInternalFrameLocal.getanio(),true);
				anioBeanSwingJInternalFrameLocal.actualizarLista(anioBeanSwingJInternalFrameLocal.anio,this.aniosForeignKey);

				anioBeanSwingJInternalFrameLocal.actualizarRelaciones(anioBeanSwingJInternalFrameLocal.anio);

				proformaLocal.setAnio(anioBeanSwingJInternalFrameLocal.anio);

				this.addItemDefectoCombosForeignKeyAnio();
				this.cargarCombosFrameAniosForeignKey("Formulario");
				this.setActualAnioForeignKey(anioBeanSwingJInternalFrameLocal.anio.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(MesDetalleFormJInternalFrame.class)) {
				MesBeanSwingJInternalFrame mesBeanSwingJInternalFrameLocal=(MesBeanSwingJInternalFrame) ((MesDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				mesBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoMes(mesBeanSwingJInternalFrameLocal.getmes(),true);
				mesBeanSwingJInternalFrameLocal.actualizarLista(mesBeanSwingJInternalFrameLocal.mes,this.messForeignKey);

				mesBeanSwingJInternalFrameLocal.actualizarRelaciones(mesBeanSwingJInternalFrameLocal.mes);

				proformaLocal.setMes(mesBeanSwingJInternalFrameLocal.mes);

				this.addItemDefectoCombosForeignKeyMes();
				this.cargarCombosFrameMessForeignKey("Formulario");
				this.setActualMesForeignKey(mesBeanSwingJInternalFrameLocal.mes.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(MonedaDetalleFormJInternalFrame.class)) {
				MonedaBeanSwingJInternalFrame monedaBeanSwingJInternalFrameLocal=(MonedaBeanSwingJInternalFrame) ((MonedaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				monedaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoMoneda(monedaBeanSwingJInternalFrameLocal.getmoneda(),true);
				monedaBeanSwingJInternalFrameLocal.actualizarLista(monedaBeanSwingJInternalFrameLocal.moneda,this.monedasForeignKey);

				monedaBeanSwingJInternalFrameLocal.actualizarRelaciones(monedaBeanSwingJInternalFrameLocal.moneda);

				proformaLocal.setMoneda(monedaBeanSwingJInternalFrameLocal.moneda);

				this.addItemDefectoCombosForeignKeyMoneda();
				this.cargarCombosFrameMonedasForeignKey("Formulario");
				this.setActualMonedaForeignKey(monedaBeanSwingJInternalFrameLocal.moneda.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EmpleadoDetalleFormJInternalFrame.class)) {
				EmpleadoBeanSwingJInternalFrame empleadoBeanSwingJInternalFrameLocal=(EmpleadoBeanSwingJInternalFrame) ((EmpleadoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				empleadoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEmpleado(empleadoBeanSwingJInternalFrameLocal.getempleado(),true);
				empleadoBeanSwingJInternalFrameLocal.actualizarLista(empleadoBeanSwingJInternalFrameLocal.empleado,this.empleadosForeignKey);

				empleadoBeanSwingJInternalFrameLocal.actualizarRelaciones(empleadoBeanSwingJInternalFrameLocal.empleado);

				proformaLocal.setEmpleado(empleadoBeanSwingJInternalFrameLocal.empleado);

				this.addItemDefectoCombosForeignKeyEmpleado();
				this.cargarCombosFrameEmpleadosForeignKey("Formulario");
				this.setActualEmpleadoForeignKey(empleadoBeanSwingJInternalFrameLocal.empleado.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(FormatoDetalleFormJInternalFrame.class)) {
				FormatoBeanSwingJInternalFrame formatoBeanSwingJInternalFrameLocal=(FormatoBeanSwingJInternalFrame) ((FormatoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				formatoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoFormato(formatoBeanSwingJInternalFrameLocal.getformato(),true);
				formatoBeanSwingJInternalFrameLocal.actualizarLista(formatoBeanSwingJInternalFrameLocal.formato,this.formatosForeignKey);

				formatoBeanSwingJInternalFrameLocal.actualizarRelaciones(formatoBeanSwingJInternalFrameLocal.formato);

				proformaLocal.setFormato(formatoBeanSwingJInternalFrameLocal.formato);

				this.addItemDefectoCombosForeignKeyFormato();
				this.cargarCombosFrameFormatosForeignKey("Formulario");
				this.setActualFormatoForeignKey(formatoBeanSwingJInternalFrameLocal.formato.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EstadoProformaDetalleFormJInternalFrame.class)) {
				EstadoProformaBeanSwingJInternalFrame estadoproformaBeanSwingJInternalFrameLocal=(EstadoProformaBeanSwingJInternalFrame) ((EstadoProformaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				estadoproformaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEstadoProforma(estadoproformaBeanSwingJInternalFrameLocal.getestadoproforma(),true);
				estadoproformaBeanSwingJInternalFrameLocal.actualizarLista(estadoproformaBeanSwingJInternalFrameLocal.estadoproforma,this.estadoproformasForeignKey);

				estadoproformaBeanSwingJInternalFrameLocal.actualizarRelaciones(estadoproformaBeanSwingJInternalFrameLocal.estadoproforma);

				proformaLocal.setEstadoProforma(estadoproformaBeanSwingJInternalFrameLocal.estadoproforma);

				this.addItemDefectoCombosForeignKeyEstadoProforma();
				this.cargarCombosFrameEstadoProformasForeignKey("Formulario");
				this.setActualEstadoProformaForeignKey(estadoproformaBeanSwingJInternalFrameLocal.estadoproforma.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(ClienteDetalleFormJInternalFrame.class)) {
				ClienteBeanSwingJInternalFrame clienteBeanSwingJInternalFrameLocal=(ClienteBeanSwingJInternalFrame) ((ClienteDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				clienteBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCliente(clienteBeanSwingJInternalFrameLocal.getcliente(),true);
				clienteBeanSwingJInternalFrameLocal.actualizarLista(clienteBeanSwingJInternalFrameLocal.cliente,this.clientesForeignKey);

				clienteBeanSwingJInternalFrameLocal.actualizarRelaciones(clienteBeanSwingJInternalFrameLocal.cliente);

				proformaLocal.setCliente(clienteBeanSwingJInternalFrameLocal.cliente);

				this.addItemDefectoCombosForeignKeyCliente();
				this.cargarCombosFrameClientesForeignKey("Formulario");
				this.setActualClienteForeignKey(clienteBeanSwingJInternalFrameLocal.cliente.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoPrecioDetalleFormJInternalFrame.class)) {
				TipoPrecioBeanSwingJInternalFrame tipoprecioBeanSwingJInternalFrameLocal=(TipoPrecioBeanSwingJInternalFrame) ((TipoPrecioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipoprecioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoPrecio(tipoprecioBeanSwingJInternalFrameLocal.gettipoprecio(),true);
				tipoprecioBeanSwingJInternalFrameLocal.actualizarLista(tipoprecioBeanSwingJInternalFrameLocal.tipoprecio,this.tipopreciosForeignKey);

				tipoprecioBeanSwingJInternalFrameLocal.actualizarRelaciones(tipoprecioBeanSwingJInternalFrameLocal.tipoprecio);

				proformaLocal.setTipoPrecio(tipoprecioBeanSwingJInternalFrameLocal.tipoprecio);

				this.addItemDefectoCombosForeignKeyTipoPrecio();
				this.cargarCombosFrameTipoPreciosForeignKey("Formulario");
				this.setActualTipoPrecioForeignKey(tipoprecioBeanSwingJInternalFrameLocal.tipoprecio.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(VendedorDetalleFormJInternalFrame.class)) {
				VendedorBeanSwingJInternalFrame vendedorBeanSwingJInternalFrameLocal=(VendedorBeanSwingJInternalFrame) ((VendedorDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				vendedorBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoVendedor(vendedorBeanSwingJInternalFrameLocal.getvendedor(),true);
				vendedorBeanSwingJInternalFrameLocal.actualizarLista(vendedorBeanSwingJInternalFrameLocal.vendedor,this.vendedorsForeignKey);

				vendedorBeanSwingJInternalFrameLocal.actualizarRelaciones(vendedorBeanSwingJInternalFrameLocal.vendedor);

				proformaLocal.setVendedor(vendedorBeanSwingJInternalFrameLocal.vendedor);

				this.addItemDefectoCombosForeignKeyVendedor();
				this.cargarCombosFrameVendedorsForeignKey("Formulario");
				this.setActualVendedorForeignKey(vendedorBeanSwingJInternalFrameLocal.vendedor.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(SubClienteDetalleFormJInternalFrame.class)) {
				SubClienteBeanSwingJInternalFrame subclienteBeanSwingJInternalFrameLocal=(SubClienteBeanSwingJInternalFrame) ((SubClienteDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				subclienteBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoSubCliente(subclienteBeanSwingJInternalFrameLocal.getsubcliente(),true);
				subclienteBeanSwingJInternalFrameLocal.actualizarLista(subclienteBeanSwingJInternalFrameLocal.subcliente,this.subclientesForeignKey);

				subclienteBeanSwingJInternalFrameLocal.actualizarRelaciones(subclienteBeanSwingJInternalFrameLocal.subcliente);

				proformaLocal.setSubCliente(subclienteBeanSwingJInternalFrameLocal.subcliente);

				this.addItemDefectoCombosForeignKeySubCliente();
				this.cargarCombosFrameSubClientesForeignKey("Formulario");
				this.setActualSubClienteForeignKey(subclienteBeanSwingJInternalFrameLocal.subcliente.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoViaTransporteDetalleFormJInternalFrame.class)) {
				TipoViaTransporteBeanSwingJInternalFrame tipoviatransporteBeanSwingJInternalFrameLocal=(TipoViaTransporteBeanSwingJInternalFrame) ((TipoViaTransporteDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipoviatransporteBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoViaTransporte(tipoviatransporteBeanSwingJInternalFrameLocal.gettipoviatransporte(),true);
				tipoviatransporteBeanSwingJInternalFrameLocal.actualizarLista(tipoviatransporteBeanSwingJInternalFrameLocal.tipoviatransporte,this.tipoviatransportesForeignKey);

				tipoviatransporteBeanSwingJInternalFrameLocal.actualizarRelaciones(tipoviatransporteBeanSwingJInternalFrameLocal.tipoviatransporte);

				proformaLocal.setTipoViaTransporte(tipoviatransporteBeanSwingJInternalFrameLocal.tipoviatransporte);

				this.addItemDefectoCombosForeignKeyTipoViaTransporte();
				this.cargarCombosFrameTipoViaTransportesForeignKey("Formulario");
				this.setActualTipoViaTransporteForeignKey(tipoviatransporteBeanSwingJInternalFrameLocal.tipoviatransporte.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TransporteDetalleFormJInternalFrame.class)) {
				TransporteBeanSwingJInternalFrame transporteBeanSwingJInternalFrameLocal=(TransporteBeanSwingJInternalFrame) ((TransporteDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				transporteBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTransporte(transporteBeanSwingJInternalFrameLocal.gettransporte(),true);
				transporteBeanSwingJInternalFrameLocal.actualizarLista(transporteBeanSwingJInternalFrameLocal.transporte,this.transportesForeignKey);

				transporteBeanSwingJInternalFrameLocal.actualizarRelaciones(transporteBeanSwingJInternalFrameLocal.transporte);

				proformaLocal.setTransporte(transporteBeanSwingJInternalFrameLocal.transporte);

				this.addItemDefectoCombosForeignKeyTransporte();
				this.cargarCombosFrameTransportesForeignKey("Formulario");
				this.setActualTransporteForeignKey(transporteBeanSwingJInternalFrameLocal.transporte.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(RutaTransporteDetalleFormJInternalFrame.class)) {
				RutaTransporteBeanSwingJInternalFrame rutatransporteBeanSwingJInternalFrameLocal=(RutaTransporteBeanSwingJInternalFrame) ((RutaTransporteDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				rutatransporteBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoRutaTransporte(rutatransporteBeanSwingJInternalFrameLocal.getrutatransporte(),true);
				rutatransporteBeanSwingJInternalFrameLocal.actualizarLista(rutatransporteBeanSwingJInternalFrameLocal.rutatransporte,this.rutatransportesForeignKey);

				rutatransporteBeanSwingJInternalFrameLocal.actualizarRelaciones(rutatransporteBeanSwingJInternalFrameLocal.rutatransporte);

				proformaLocal.setRutaTransporte(rutatransporteBeanSwingJInternalFrameLocal.rutatransporte);

				this.addItemDefectoCombosForeignKeyRutaTransporte();
				this.cargarCombosFrameRutaTransportesForeignKey("Formulario");
				this.setActualRutaTransporteForeignKey(rutatransporteBeanSwingJInternalFrameLocal.rutatransporte.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CentroCostoDetalleFormJInternalFrame.class)) {
				CentroCostoBeanSwingJInternalFrame centrocostoBeanSwingJInternalFrameLocal=(CentroCostoBeanSwingJInternalFrame) ((CentroCostoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				centrocostoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCentroCosto(centrocostoBeanSwingJInternalFrameLocal.getcentrocosto(),true);
				centrocostoBeanSwingJInternalFrameLocal.actualizarLista(centrocostoBeanSwingJInternalFrameLocal.centrocosto,this.centrocostosForeignKey);

				centrocostoBeanSwingJInternalFrameLocal.actualizarRelaciones(centrocostoBeanSwingJInternalFrameLocal.centrocosto);

				proformaLocal.setCentroCosto(centrocostoBeanSwingJInternalFrameLocal.centrocosto);

				this.addItemDefectoCombosForeignKeyCentroCosto();
				this.cargarCombosFrameCentroCostosForeignKey("Formulario");
				this.setActualCentroCostoForeignKey(centrocostoBeanSwingJInternalFrameLocal.centrocosto.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoProformaDetalleFormJInternalFrame.class)) {
				TipoProformaBeanSwingJInternalFrame tipoproformaBeanSwingJInternalFrameLocal=(TipoProformaBeanSwingJInternalFrame) ((TipoProformaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipoproformaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoProforma(tipoproformaBeanSwingJInternalFrameLocal.gettipoproforma(),true);
				tipoproformaBeanSwingJInternalFrameLocal.actualizarLista(tipoproformaBeanSwingJInternalFrameLocal.tipoproforma,this.tipoproformasForeignKey);

				tipoproformaBeanSwingJInternalFrameLocal.actualizarRelaciones(tipoproformaBeanSwingJInternalFrameLocal.tipoproforma);

				proformaLocal.setTipoProforma(tipoproformaBeanSwingJInternalFrameLocal.tipoproforma);

				this.addItemDefectoCombosForeignKeyTipoProforma();
				this.cargarCombosFrameTipoProformasForeignKey("Formulario");
				this.setActualTipoProformaForeignKey(tipoproformaBeanSwingJInternalFrameLocal.tipoproforma.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(ConsignatarioDetalleFormJInternalFrame.class)) {
				ConsignatarioBeanSwingJInternalFrame consignatarioBeanSwingJInternalFrameLocal=(ConsignatarioBeanSwingJInternalFrame) ((ConsignatarioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				consignatarioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoConsignatario(consignatarioBeanSwingJInternalFrameLocal.getconsignatario(),true);
				consignatarioBeanSwingJInternalFrameLocal.actualizarLista(consignatarioBeanSwingJInternalFrameLocal.consignatario,this.consignatariosForeignKey);

				consignatarioBeanSwingJInternalFrameLocal.actualizarRelaciones(consignatarioBeanSwingJInternalFrameLocal.consignatario);

				proformaLocal.setConsignatario(consignatarioBeanSwingJInternalFrameLocal.consignatario);

				this.addItemDefectoCombosForeignKeyConsignatario();
				this.cargarCombosFrameConsignatariosForeignKey("Formulario");
				this.setActualConsignatarioForeignKey(consignatarioBeanSwingJInternalFrameLocal.consignatario.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoCambioDetalleFormJInternalFrame.class)) {
				TipoCambioBeanSwingJInternalFrame tipocambioBeanSwingJInternalFrameLocal=(TipoCambioBeanSwingJInternalFrame) ((TipoCambioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipocambioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoCambio(tipocambioBeanSwingJInternalFrameLocal.gettipocambio(),true);
				tipocambioBeanSwingJInternalFrameLocal.actualizarLista(tipocambioBeanSwingJInternalFrameLocal.tipocambio,this.tipocambiosForeignKey);

				tipocambioBeanSwingJInternalFrameLocal.actualizarRelaciones(tipocambioBeanSwingJInternalFrameLocal.tipocambio);

				proformaLocal.setTipoCambio(tipocambioBeanSwingJInternalFrameLocal.tipocambio);

				this.addItemDefectoCombosForeignKeyTipoCambio();
				this.cargarCombosFrameTipoCambiosForeignKey("Formulario");
				this.setActualTipoCambioForeignKey(tipocambioBeanSwingJInternalFrameLocal.tipocambio.getId(),false,"Formulario");
			}
		
		}
	}
	
	public Boolean validarProformaActual() throws Exception {
		Boolean estaValidado=false;
		this.inicializarInvalidValues();
		
		/*
		int intSelectedRow = this.jTableDatosProforma.getSelectedRow();
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.proforma =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
			this.proforma =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
		}
		//ARCHITECTURE
		*/
		
		this.invalidValues = proformaValidator.getInvalidValues(this.proforma);
					
		if(this.invalidValues==null || this.invalidValues.length<=0) {
			estaValidado=true;
		} else {
			this.mostrarInvalidValues();	
		}
		
		return estaValidado;
	}
	
	public void actualizarLista(Proforma proforma,List<Proforma> proformas) throws Exception {
		try	{		
			ProformaConstantesFunciones.actualizarLista(proforma,proformas,this.proformaSessionBean.getEsGuardarRelacionado());		
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void actualizarSelectedLista(Proforma proforma,List<Proforma> proformas) throws Exception {
		try	{			
			ProformaConstantesFunciones.actualizarSelectedLista(proforma,proformas);
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public Boolean tieneElementosSeleccionados() throws Exception {
		Boolean tiene=false;
		
		List<Proforma> proformasLocal=null;
		
		try	{			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				proformasLocal=this.proformaLogic.getProformas();
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				proformasLocal=this.proformas;
			}
			//ARCHITECTURE
		
			for(Proforma proformaLocal:proformasLocal) {
				if(this.permiteMantenimiento(proformaLocal) && proformaLocal.getIsSelected()) {
					tiene=true;
					break;
				}
			}
		} catch(Exception e) {
			throw e;
		}
		
		return tiene;
	}			
	
	public void mostrarInvalidValues() throws Exception {
		String sMensaje="";
				
		for (InvalidValue invalidValue : this.invalidValues) {
			sMensaje+="\r\n"+ProformaConstantesFunciones.getProformaLabelDesdeNombre(invalidValue.getPropertyName())+"->"+invalidValue.getMessage();
			
			//MOSTRAR CAMPOS INVALIDOS
			if(invalidValue.getPropertyName().equals(ProformaConstantesFunciones.IDEMPRESA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProforma.jLabelid_empresaProforma,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProformaConstantesFunciones.IDSUCURSAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProforma.jLabelid_sucursalProforma,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProformaConstantesFunciones.IDUSUARIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProforma.jLabelid_usuarioProforma,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProformaConstantesFunciones.IDEJERCICIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProforma.jLabelid_ejercicioProforma,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProformaConstantesFunciones.IDPERIODO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProforma.jLabelid_periodoProforma,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProformaConstantesFunciones.IDANIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProforma.jLabelid_anioProforma,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProformaConstantesFunciones.IDMES)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProforma.jLabelid_mesProforma,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProformaConstantesFunciones.NUMEROPREIMPRESO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProforma.jLabelnumero_pre_impresoProforma,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProformaConstantesFunciones.FECHAEMISION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProforma.jLabelfecha_emisionProforma,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProformaConstantesFunciones.DIAS)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProforma.jLabeldiasProforma,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProformaConstantesFunciones.FECHAVENCIMIENTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProforma.jLabelfecha_vencimientoProforma,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProformaConstantesFunciones.IDMONEDA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProforma.jLabelid_monedaProforma,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProformaConstantesFunciones.COTIZACION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProforma.jLabelcotizacionProforma,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProformaConstantesFunciones.IDEMPLEADO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProforma.jLabelid_empleadoProforma,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProformaConstantesFunciones.IDFORMATO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProforma.jLabelid_formatoProforma,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProformaConstantesFunciones.IDESTADOPROFORMA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProforma.jLabelid_estado_proformaProforma,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProformaConstantesFunciones.DIRECCION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProforma.jLabeldireccionProforma,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProformaConstantesFunciones.IDCLIENTE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProforma.jLabelid_clienteProforma,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProformaConstantesFunciones.RUC)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProforma.jLabelrucProforma,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProformaConstantesFunciones.ESOFERTA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProforma.jLabeles_ofertaProforma,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProformaConstantesFunciones.TELEFONO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProforma.jLabeltelefonoProforma,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProformaConstantesFunciones.IDTIPOPRECIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProforma.jLabelid_tipo_precioProforma,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProformaConstantesFunciones.IDVENDEDOR)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProforma.jLabelid_vendedorProforma,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProformaConstantesFunciones.IDSUBCLIENTE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProforma.jLabelid_sub_clienteProforma,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProformaConstantesFunciones.IDTIPOVIATRANSPORTE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProforma.jLabelid_tipo_via_transporteProforma,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProformaConstantesFunciones.IDTRANSPORTE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProforma.jLabelid_transporteProforma,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProformaConstantesFunciones.IDRUTATRANSPORTE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProforma.jLabelid_ruta_transporteProforma,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProformaConstantesFunciones.DESCRIPCION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProforma.jLabeldescripcionProforma,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProformaConstantesFunciones.DESCUENTOPORCENTAJE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProforma.jLabeldescuento_porcentajeProforma,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProformaConstantesFunciones.MONTOCONIVA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProforma.jLabelmonto_con_ivaProforma,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProformaConstantesFunciones.SUMAN)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProforma.jLabelsumanProforma,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProformaConstantesFunciones.DESCUENTOVALOR)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProforma.jLabeldescuento_valorProforma,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProformaConstantesFunciones.MONTOSINIVA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProforma.jLabelmonto_sin_ivaProforma,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProformaConstantesFunciones.DESCUENTOGENERAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProforma.jLabeldescuento_generalProforma,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProformaConstantesFunciones.FLETE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProforma.jLabelfleteProforma,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProformaConstantesFunciones.ULTIMOCOSTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProforma.jLabelultimo_costoProforma,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProformaConstantesFunciones.SUBTOTAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProforma.jLabelsubtotalProforma,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProformaConstantesFunciones.OTROSCARGOS)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProforma.jLabelotros_cargosProforma,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProformaConstantesFunciones.MARGENUTILIDAD)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProforma.jLabelmargen_utilidadProforma,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProformaConstantesFunciones.IVA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProforma.jLabelivaProforma,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProformaConstantesFunciones.FINANCIAMIENTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProforma.jLabelfinanciamientoProforma,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProformaConstantesFunciones.TOTAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProforma.jLabeltotalProforma,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProformaConstantesFunciones.OTROSVALORES)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProforma.jLabelotros_valoresProforma,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProformaConstantesFunciones.ANTICIPO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProforma.jLabelanticipoProforma,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProformaConstantesFunciones.ICE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProforma.jLabeliceProforma,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProformaConstantesFunciones.MONTORETENCION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProforma.jLabelmonto_retencionProforma,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProformaConstantesFunciones.FECHA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProforma.jLabelfechaProforma,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProformaConstantesFunciones.FECHASERVIDOR)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProforma.jLabelfecha_servidorProforma,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProformaConstantesFunciones.HORAINICIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProforma.jLabelhora_inicioProforma,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProformaConstantesFunciones.HORAFIN)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProforma.jLabelhora_finProforma,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProformaConstantesFunciones.IDCENTROCOSTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProforma.jLabelid_centro_costoProforma,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProformaConstantesFunciones.IDTIPOPROFORMA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProforma.jLabelid_tipo_proformaProforma,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProformaConstantesFunciones.IDCONSIGNATARIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProforma.jLabelid_consignatarioProforma,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ProformaConstantesFunciones.IDTIPOCAMBIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProforma.jLabelid_tipo_cambioProforma,invalidValue.getMessage());}
        }
		
		
		if(!sMensaje.equals("")) {
			//JOptionPane.showMessageDialog(this,sMensaje,"VALIDACION ",JOptionPane.ERROR_MESSAGE);
			throw new Exception(sMensaje);			
		}
		
		/*
		System.out.println(invalidValue);
        System.out.println("message=" + invalidValue.getMessage());
        System.out.println("propertyName=" + invalidValue.getPropertyName());
        System.out.println("propertyPath=" + invalidValue.getPropertyPath());
        System.out.println("value=" + invalidValue.getValue());
        */
	}		
	
	public void inicializarInvalidValues() throws Exception {
		String sMensaje="";	
		
		if(this.jInternalFrameDetalleFormProforma!=null) {
		
		//MOSTRAR CAMPOS INVALIDOS
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProforma.jLabelid_empresaProforma,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProforma.jLabelid_sucursalProforma,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProforma.jLabelid_usuarioProforma,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProforma.jLabelid_ejercicioProforma,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProforma.jLabelid_periodoProforma,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProforma.jLabelid_anioProforma,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProforma.jLabelid_mesProforma,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProforma.jLabelnumero_pre_impresoProforma,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProforma.jLabelfecha_emisionProforma,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProforma.jLabeldiasProforma,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProforma.jLabelfecha_vencimientoProforma,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProforma.jLabelid_monedaProforma,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProforma.jLabelcotizacionProforma,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProforma.jLabelid_empleadoProforma,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProforma.jLabelid_formatoProforma,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProforma.jLabelid_estado_proformaProforma,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProforma.jLabeldireccionProforma,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProforma.jLabelid_clienteProforma,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProforma.jLabelrucProforma,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProforma.jLabeles_ofertaProforma,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProforma.jLabeltelefonoProforma,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProforma.jLabelid_tipo_precioProforma,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProforma.jLabelid_vendedorProforma,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProforma.jLabelid_sub_clienteProforma,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProforma.jLabelid_tipo_via_transporteProforma,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProforma.jLabelid_transporteProforma,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProforma.jLabelid_ruta_transporteProforma,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProforma.jLabeldescripcionProforma,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProforma.jLabeldescuento_porcentajeProforma,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProforma.jLabelmonto_con_ivaProforma,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProforma.jLabelsumanProforma,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProforma.jLabeldescuento_valorProforma,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProforma.jLabelmonto_sin_ivaProforma,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProforma.jLabeldescuento_generalProforma,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProforma.jLabelfleteProforma,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProforma.jLabelultimo_costoProforma,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProforma.jLabelsubtotalProforma,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProforma.jLabelotros_cargosProforma,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProforma.jLabelmargen_utilidadProforma,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProforma.jLabelivaProforma,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProforma.jLabelfinanciamientoProforma,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProforma.jLabeltotalProforma,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProforma.jLabelotros_valoresProforma,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProforma.jLabelanticipoProforma,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProforma.jLabeliceProforma,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProforma.jLabelmonto_retencionProforma,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProforma.jLabelfechaProforma,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProforma.jLabelfecha_servidorProforma,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProforma.jLabelhora_inicioProforma,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProforma.jLabelhora_finProforma,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProforma.jLabelid_centro_costoProforma,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProforma.jLabelid_tipo_proformaProforma,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProforma.jLabelid_consignatarioProforma,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormProforma.jLabelid_tipo_cambioProforma,"");
		
		}
	}
	
	
	
	public void actualizarObjetoPadreFk(String sTipo)  throws Exception {
		if(sTipo.equals("XXXAuxiliar")) {
		
		}
		
		 else  if(sTipo.equals("TerminoProforma")) {
			if(this.proforma==null) {
				this.proforma= new Proforma();
			}

			if(this.proformaSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoProforma
				this.setVariablesFormularioToObjetoActualProforma(this.proforma,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);

				this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.getterminoproforma().setProforma(this.proforma);
			}

			return;
		}
		 else  if(sTipo.equals("DetalleProforma")) {
			if(this.proforma==null) {
				this.proforma= new Proforma();
			}

			if(this.proformaSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoProforma
				this.setVariablesFormularioToObjetoActualProforma(this.proforma,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);

				this.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.getdetalleproforma().setProforma(this.proforma);
			}

			return;
		}
	}
	
	public void nuevoPreparar() throws Exception {
		this.nuevoPreparar(false);
	}
	
	public void nuevoPreparar(Boolean esNuevoGuardarCambios) throws Exception {
		this.iIdNuevoProforma--;	
		
		
		this.proformaAux=new Proforma();
		
		this.proformaAux.setId(this.iIdNuevoProforma);
		this.proformaAux.setIsChanged(true);
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.proformaLogic.getProformas().add(this.proformaAux);
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.proformas.add(this.proformaAux);
		}
		//ARCHITECTURE
		
		this.proforma=this.proformaAux;
		
		if(ProformaJInternalFrame.ISBINDING_MANUAL_TABLA) {
			this.setVariablesObjetoActualToFormularioProforma(this.proforma);
			this.setVariablesObjetoActualToFormularioForeignKeyProforma(this.proforma);
		}
				
		//this.setDefaultControlesProforma();
		
		this.inicializarInvalidValues();
				
		//SELECCIONA ITEM DEFECTO-->SET O SELECTED INDEX
		this.setItemDefectoCombosForeignKeyProforma();
		
		
		//INICIALIZA VARIABLES COMBOS GLOBALES A FORMULARIO(ParametroGeneralUsuario)
		this.setVariablesGlobalesCombosForeignKeyProforma();
		
		//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
		//this.setVariablesGlobalesAuxiliaresCombosForeignKeyProforma();
		
		//SI TIENE FOREIGN KEY CON CAMPO esDefecto=true, SE ACTUALIZA A OBJETO ACTUAL
		this.setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualProforma(this.proformaBean,this.proforma,false,false);
		
		//ACTUALIZA VALORES PARA EL OBJETO ACTUAL ANTES DE ENVIARLO A ACTUALIZAR
		this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
				
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		if(this.jInternalFrameParent!=null) {
			this.jInternalFrameParent.actualizarObjetoPadreFk(ProformaConstantesFunciones.CLASSNAME);
		}	
		
		
		if(this.proformaSessionBean.getConGuardarRelaciones()) {
			classes=ProformaConstantesFunciones.getClassesRelationshipsOfProforma(new ArrayList<Classe>(),DeepLoadType.NONE);
		}
		
		this.classesActual=new ArrayList<Classe>();
		this.classesActual.addAll(classes);
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {						
			this.proformaReturnGeneral=proformaLogic.procesarEventosProformasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,EventoGlobalTipo.FORM_RECARGAR,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.proformaLogic.getProformas(),this.proforma,this.proformaParameterGeneral,this.isEsNuevoProforma,classes);//this.proformaLogic.getProforma()
						
		} else if(Constantes.ISUSAEJBREMOTE) {
						
		} else if(Constantes.ISUSAEJBHOME) {
		}
		//ARCHITECTURE
		
		//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
		//this.setVariablesObjetoReturnGeneralToBeanProforma(this.proformaReturnGeneral,this.proformaBean,false);
		
		if(this.proformaReturnGeneral.getConRecargarPropiedades()) {
			//INICIALIZA VARIABLES COMBOS NORMALES (FK)
			this.setVariablesObjetoActualToFormularioForeignKeyProforma(this.proformaReturnGeneral.getProforma());
			
			//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
			this.setVariablesObjetoActualToFormularioProforma(this.proformaReturnGeneral.getProforma());
		}
		
		if(this.proformaReturnGeneral.getConRecargarRelaciones()) {
			//INICIALIZA VARIABLES RELACIONES A FORMULARIO
			this.setVariablesRelacionesObjetoActualToFormularioProforma(this.proformaReturnGeneral.getProforma(),classes);//this.proformaBean);	
		}
			
		//ACTUALIZA VARIABLES FORMULARIO A OBJETO ACTUAL (PARA NUEVO TABLA O GUARDAR CAMBIOS
		if(esNuevoGuardarCambios) {
			this.setVariablesFormularioToObjetoActualProforma(this.proforma,false);
		}
		
		//INICIALIZA VARIABLES COMBOS DEFAULT DEL PROYECTO(|DEFAULT para FK)
		//this.setVariablesDefaultCombosForeignKeyProforma();
		
		//INICIALIZA VARIABLES COMBOS PARAMETRO DEL PROYECTO(|VALORPARAM Era para ParametroModulo, ahora en logic)
		//this.setVariablesParametroCombosForeignKeyProforma();						
		
		if(!esNuevoGuardarCambios) {
			//INICIALIZA VARIABLES POR OPCION MENU
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			ProformaBeanSwingJInternalFrameAdditional.RecargarFormProforma(this,"NUEVO_PREPARAR","",this.arrDatoGeneral);
		
			//NO FUNCIONA BINDINGS			
			this.inicializarActualizarBindingProforma(false);
						
			if(proformaSessionBean.getConGuardarRelaciones()) {
				//DEBERIA YA ESTAR CARGADO LOS COMBOS Y SI SE NECESITA ALGO MAS SE DEBE CREAR FUNCION LIMITADA
				//SI DEBE TRAER Y RESETEAR TABLA
				

				if(this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.terminoproformaSessionBean.getEsGuardarRelacionado() && TerminoProformaJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonTerminoProformaActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.detalleproformaSessionBean.getEsGuardarRelacionado() && DetalleProformaJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonDetalleProformaActionPerformed(null,-1,false,true,null);
				}				
			}
				
			//SI ES MANUAL
			if(ProformaJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualProforma();
			}
			
			this.actualizarVisualTableDatosProforma();
			
			this.jTableDatosProforma.setRowSelectionInterval(this.getIndiceNuevoProforma(), this.getIndiceNuevoProforma());
			
			this.seleccionarFilaTablaProformaActual();
						
			this.actualizarEstadoCeldasBotonesProforma("a", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		}		
	}
	
	public void habilitarDeshabilitarControlesProforma(Boolean isHabilitar) throws Exception {
		
		this.jInternalFrameDetalleFormProforma.jTextFieldnumero_pre_impresoProforma.setEnabled(isHabilitar && this.proformaConstantesFunciones.activarnumero_pre_impresoProforma);
		this.jInternalFrameDetalleFormProforma.jDateChooserfecha_emisionProforma.setEnabled(isHabilitar && this.proformaConstantesFunciones.activarfecha_emisionProforma);
		this.jInternalFrameDetalleFormProforma.jTextFielddiasProforma.setEnabled(isHabilitar && this.proformaConstantesFunciones.activardiasProforma);
		this.jInternalFrameDetalleFormProforma.jDateChooserfecha_vencimientoProforma.setEnabled(isHabilitar && this.proformaConstantesFunciones.activarfecha_vencimientoProforma);
		this.jInternalFrameDetalleFormProforma.jTextFieldcotizacionProforma.setEnabled(isHabilitar && this.proformaConstantesFunciones.activarcotizacionProforma);
		this.jInternalFrameDetalleFormProforma.jTextAreadireccionProforma.setEnabled(isHabilitar && this.proformaConstantesFunciones.activardireccionProforma);
		this.jInternalFrameDetalleFormProforma.jTextFieldrucProforma.setEnabled(isHabilitar && this.proformaConstantesFunciones.activarrucProforma);
		this.jInternalFrameDetalleFormProforma.jCheckBoxes_ofertaProforma.setEnabled(isHabilitar && this.proformaConstantesFunciones.activares_ofertaProforma);
		this.jInternalFrameDetalleFormProforma.jTextFieldtelefonoProforma.setEnabled(isHabilitar && this.proformaConstantesFunciones.activartelefonoProforma);
		this.jInternalFrameDetalleFormProforma.jTextAreadescripcionProforma.setEnabled(isHabilitar && this.proformaConstantesFunciones.activardescripcionProforma);
		this.jInternalFrameDetalleFormProforma.jTextFielddescuento_porcentajeProforma.setEnabled(isHabilitar && this.proformaConstantesFunciones.activardescuento_porcentajeProforma);
		this.jInternalFrameDetalleFormProforma.jTextFieldmonto_con_ivaProforma.setEnabled(isHabilitar && this.proformaConstantesFunciones.activarmonto_con_ivaProforma);
		this.jInternalFrameDetalleFormProforma.jTextFieldsumanProforma.setEnabled(isHabilitar && this.proformaConstantesFunciones.activarsumanProforma);
		this.jInternalFrameDetalleFormProforma.jTextFielddescuento_valorProforma.setEnabled(isHabilitar && this.proformaConstantesFunciones.activardescuento_valorProforma);
		this.jInternalFrameDetalleFormProforma.jTextFieldmonto_sin_ivaProforma.setEnabled(isHabilitar && this.proformaConstantesFunciones.activarmonto_sin_ivaProforma);
		this.jInternalFrameDetalleFormProforma.jTextFielddescuento_generalProforma.setEnabled(isHabilitar && this.proformaConstantesFunciones.activardescuento_generalProforma);
		this.jInternalFrameDetalleFormProforma.jTextFieldfleteProforma.setEnabled(isHabilitar && this.proformaConstantesFunciones.activarfleteProforma);
		this.jInternalFrameDetalleFormProforma.jTextFieldultimo_costoProforma.setEnabled(isHabilitar && this.proformaConstantesFunciones.activarultimo_costoProforma);
		this.jInternalFrameDetalleFormProforma.jTextFieldsubtotalProforma.setEnabled(isHabilitar && this.proformaConstantesFunciones.activarsubtotalProforma);
		this.jInternalFrameDetalleFormProforma.jTextFieldotros_cargosProforma.setEnabled(isHabilitar && this.proformaConstantesFunciones.activarotros_cargosProforma);
		this.jInternalFrameDetalleFormProforma.jTextFieldmargen_utilidadProforma.setEnabled(isHabilitar && this.proformaConstantesFunciones.activarmargen_utilidadProforma);
		this.jInternalFrameDetalleFormProforma.jTextFieldivaProforma.setEnabled(isHabilitar && this.proformaConstantesFunciones.activarivaProforma);
		this.jInternalFrameDetalleFormProforma.jTextFieldfinanciamientoProforma.setEnabled(isHabilitar && this.proformaConstantesFunciones.activarfinanciamientoProforma);
		this.jInternalFrameDetalleFormProforma.jTextFieldtotalProforma.setEnabled(isHabilitar && this.proformaConstantesFunciones.activartotalProforma);
		this.jInternalFrameDetalleFormProforma.jTextFieldotros_valoresProforma.setEnabled(isHabilitar && this.proformaConstantesFunciones.activarotros_valoresProforma);
		this.jInternalFrameDetalleFormProforma.jTextFieldanticipoProforma.setEnabled(isHabilitar && this.proformaConstantesFunciones.activaranticipoProforma);//
		this.jInternalFrameDetalleFormProforma.jTextFieldiceProforma.setEnabled(isHabilitar && this.proformaConstantesFunciones.activariceProforma);//
		this.jInternalFrameDetalleFormProforma.jTextFieldmonto_retencionProforma.setEnabled(isHabilitar && this.proformaConstantesFunciones.activarmonto_retencionProforma);//
		this.jInternalFrameDetalleFormProforma.jDateChooserfechaProforma.setEnabled(isHabilitar && this.proformaConstantesFunciones.activarfechaProforma);//
		this.jInternalFrameDetalleFormProforma.jDateChooserfecha_servidorProforma.setEnabled(isHabilitar && this.proformaConstantesFunciones.activarfecha_servidorProforma);//
		this.jInternalFrameDetalleFormProforma.jSpinnerhora_inicioProforma.setEnabled(isHabilitar && this.proformaConstantesFunciones.activarhora_inicioProforma);//
		this.jInternalFrameDetalleFormProforma.jSpinnerhora_finProforma.setEnabled(isHabilitar && this.proformaConstantesFunciones.activarhora_finProforma);	
		//
		this.jInternalFrameDetalleFormProforma.jComboBoxid_empresaProforma.setEnabled(isHabilitar && this.proformaConstantesFunciones.activarid_empresaProforma);//
		this.jInternalFrameDetalleFormProforma.jComboBoxid_sucursalProforma.setEnabled(isHabilitar && this.proformaConstantesFunciones.activarid_sucursalProforma);//
		this.jInternalFrameDetalleFormProforma.jComboBoxid_usuarioProforma.setEnabled(isHabilitar && this.proformaConstantesFunciones.activarid_usuarioProforma);//
		this.jInternalFrameDetalleFormProforma.jComboBoxid_ejercicioProforma.setEnabled(isHabilitar && this.proformaConstantesFunciones.activarid_ejercicioProforma);//
		this.jInternalFrameDetalleFormProforma.jComboBoxid_periodoProforma.setEnabled(isHabilitar && this.proformaConstantesFunciones.activarid_periodoProforma);//
		this.jInternalFrameDetalleFormProforma.jComboBoxid_anioProforma.setEnabled(isHabilitar && this.proformaConstantesFunciones.activarid_anioProforma);//
		this.jInternalFrameDetalleFormProforma.jComboBoxid_mesProforma.setEnabled(isHabilitar && this.proformaConstantesFunciones.activarid_mesProforma);//
		this.jInternalFrameDetalleFormProforma.jComboBoxid_monedaProforma.setEnabled(isHabilitar && this.proformaConstantesFunciones.activarid_monedaProforma);
		this.jInternalFrameDetalleFormProforma.jComboBoxid_empleadoProforma.setEnabled(isHabilitar && this.proformaConstantesFunciones.activarid_empleadoProforma);
		this.jInternalFrameDetalleFormProforma.jComboBoxid_formatoProforma.setEnabled(isHabilitar && this.proformaConstantesFunciones.activarid_formatoProforma);
		this.jInternalFrameDetalleFormProforma.jComboBoxid_estado_proformaProforma.setEnabled(isHabilitar && this.proformaConstantesFunciones.activarid_estado_proformaProforma);
		this.jInternalFrameDetalleFormProforma.jComboBoxid_clienteProforma.setEnabled(isHabilitar && this.proformaConstantesFunciones.activarid_clienteProforma);
		this.jInternalFrameDetalleFormProforma.jComboBoxid_tipo_precioProforma.setEnabled(isHabilitar && this.proformaConstantesFunciones.activarid_tipo_precioProforma);
		this.jInternalFrameDetalleFormProforma.jComboBoxid_vendedorProforma.setEnabled(isHabilitar && this.proformaConstantesFunciones.activarid_vendedorProforma);
		this.jInternalFrameDetalleFormProforma.jComboBoxid_sub_clienteProforma.setEnabled(isHabilitar && this.proformaConstantesFunciones.activarid_sub_clienteProforma);
		this.jInternalFrameDetalleFormProforma.jComboBoxid_tipo_via_transporteProforma.setEnabled(isHabilitar && this.proformaConstantesFunciones.activarid_tipo_via_transporteProforma);
		this.jInternalFrameDetalleFormProforma.jComboBoxid_transporteProforma.setEnabled(isHabilitar && this.proformaConstantesFunciones.activarid_transporteProforma);
		this.jInternalFrameDetalleFormProforma.jComboBoxid_ruta_transporteProforma.setEnabled(isHabilitar && this.proformaConstantesFunciones.activarid_ruta_transporteProforma);//
		this.jInternalFrameDetalleFormProforma.jComboBoxid_centro_costoProforma.setEnabled(isHabilitar && this.proformaConstantesFunciones.activarid_centro_costoProforma);//
		this.jInternalFrameDetalleFormProforma.jComboBoxid_tipo_proformaProforma.setEnabled(isHabilitar && this.proformaConstantesFunciones.activarid_tipo_proformaProforma);//
		this.jInternalFrameDetalleFormProforma.jComboBoxid_consignatarioProforma.setEnabled(isHabilitar && this.proformaConstantesFunciones.activarid_consignatarioProforma);//
		this.jInternalFrameDetalleFormProforma.jComboBoxid_tipo_cambioProforma.setEnabled(isHabilitar && this.proformaConstantesFunciones.activarid_tipo_cambioProforma);
	};
	
	public void setDefaultControlesProforma() throws Exception {
			
	};
	
	
	public void habilitarDeshabilitarTipoMantenimientoProforma(Boolean esRelaciones) throws Exception {
		if(esRelaciones) {
			//this.proformaSessionBean.setConGuardarRelaciones(true);			
			this.proformaSessionBean.setEstaModoGuardarRelaciones(true);				
			this.jInternalFrameDetalleFormProforma.jTabbedPaneRelacionesProforma.setVisible(true);
			
			

			if(this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.terminoproformaSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.detalleproformaSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}		
		} else {
			//this.proformaSessionBean.setConGuardarRelaciones(false);			
			this.proformaSessionBean.setEstaModoGuardarRelaciones(false);						
			this.jInternalFrameDetalleFormProforma.jTabbedPaneRelacionesProforma.setVisible(false);
			
			

			if(this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.terminoproformaSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.detalleproformaSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}
		}
	};
	
	public int getIndiceNuevoProforma() throws Exception {
		int iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(Proforma proformaAux:this.proformaLogic.getProformas()) {
				if(proformaAux.getId().equals(this.iIdNuevoProforma)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(Proforma proformaAux:this.proformas) {
				if(proformaAux.getId().equals(this.iIdNuevoProforma)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndice-1;
		}
		
		return iIndice;
	}
	
	public int getIndiceActualProforma(Proforma proforma,Integer iIndiceActual) throws Exception {
		Integer iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(Proforma proformaAux:this.proformaLogic.getProformas()) {
				if(proformaAux.getId().equals(proforma.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(Proforma proformaAux:this.proformas) {
				if(proformaAux.getId().equals(proforma.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndiceActual;
		}
		
		return iIndice;
	}
	
	public void setCamposBaseDesdeOriginalProforma(Proforma proformaOriginal) throws Exception {
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(Proforma proformaAux:this.proformaLogic.getProformas()) {
				if(proformaAux.getProformaOriginal().getId().equals(proformaOriginal.getId())) {
					existe=true;
					proformaOriginal.setId(proformaAux.getId());
					proformaOriginal.setVersionRow(proformaAux.getVersionRow());
					break;
				}
				
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(Proforma proformaAux:this.proformas) {
				if(proformaAux.getProformaOriginal().getId().equals(proformaOriginal.getId())) {
					existe=true;
					proformaOriginal.setId(proformaAux.getId());
					proformaOriginal.setVersionRow(proformaAux.getVersionRow());
					break;
				}				
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
		}
	}
	
	public void cancelarNuevosProforma(Boolean esParaCancelar) throws Exception {
		proformasAux=new ArrayList<Proforma>();
		proformaAux=new Proforma();
		
		if(!this.proformaSessionBean.getEsGuardarRelacionado()) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(Proforma proformaAux:this.proformaLogic.getProformas()) {
					if(proformaAux.getId()<0) {
						proformasAux.add(proformaAux);
					}		
				}
				this.iIdNuevoProforma=0L;
				this.proformaLogic.getProformas().removeAll(proformasAux);
					
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(Proforma proformaAux:this.proformas) {
					if(proformaAux.getId()<0) {
						proformasAux.add(proformaAux);
					}		
				}
				this.iIdNuevoProforma=0L;
				this.proformas.removeAll(proformasAux);
			}	
		} else {			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				if(esParaCancelar && this.isEsNuevoProforma 
					&& this.proformaLogic.getProformas().size()>0
					) {
					proformaAux=this.proformaLogic.getProformas().get(this.proformaLogic.getProformas().size() - 1);
				
					if(proformaAux.getId()<0) {
						this.proformaLogic.getProformas().remove(proformaAux);
					}
				}
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				if(esParaCancelar && this.isEsNuevoProforma && this.proformas.size()>0) {
					proformaAux=this.proformas.get(this.proformas.size() - 1);
				
					if(proformaAux.getId()<0) {
						this.proformas.remove(proformaAux);
					}
				}
			}	
		}
	}
	
	public void cancelarNuevoProforma(Boolean esParaCancelar) throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			if(proforma.getId()<0) {
				this.proformaLogic.getProformas().remove(this.proforma);
			}					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			if(proforma.getId()<0) {
				this.proformas.remove(this.proforma);
			}
		}			
	}
	
	public void setEstadosInicialesProforma(List<Proforma> proformasAux) throws Exception {
		ProformaConstantesFunciones.setEstadosInicialesProforma(proformasAux);
	}
	
	public void setEstadosInicialesProforma(Proforma proformaAux) throws Exception {
		ProformaConstantesFunciones.setEstadosInicialesProforma(proformaAux);		
	}
	
	public void nuevo() throws Exception {
		try	{
			//ESTA VALIDADO EN FUNCION ACTUALIZAR
			//if(this.validarProformaActual()) {
				this.ejecutarMantenimiento(MaintenanceType.NUEVO);
				
				this.actualizarEstadoCeldasBotonesProforma("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
				
			//}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void actualizar() throws Exception {
		try	{
			if(this.validarProformaActual()) {
				if(!this.isEsNuevoProforma) {
					this.ejecutarMantenimiento(MaintenanceType.ACTUALIZAR);
					
					this.actualizarEstadoCeldasBotonesProforma("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
					
				} else {					
					this.nuevo();
					this.isEsNuevoProforma=false;
				}
				
				//SE CANCELA AL FINAL DEL PROCESO JBUTTONACTUALIZAR
				//this.cancelar(false);
			}		
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void eliminar() throws Exception {
		try	{	
			if(this.validarProformaActual()) {
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE ELIMINAR EL/LA Proforma ?", "MANTENIMIENTO DE Proforma", JOptionPane.OK_CANCEL_OPTION) == 0) {
					this.ejecutarMantenimiento(MaintenanceType.ELIMINAR);			
					this.actualizarEstadoCeldasBotonesProforma("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
				}
			
			}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void guardarCambios() throws Exception {
		try	{
			this.ejecutarMantenimiento(MaintenanceType.GUARDARCAMBIOS);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarAsignar(Proforma proforma) throws Exception {
		ProformaConstantesFunciones.seleccionarAsignar(this.proforma,proforma);
	}
	
	public void seleccionar() throws Exception {
		try	{
			//ACTUALIZO EL PERMISO ACTUALIZAR CON EL PERMISO ACTUALIZAR ORIGINAL ESTE PERMISO SE UTILIZA PARA EL NUEVO TAMBIEN
			this.isPermisoActualizarProforma=this.isPermisoActualizarOriginalProforma;
			
			
			this.seleccionarAsignar(proforma);
			
			

			idEmpleadoActual=proforma.getid_empleado();
			this.seleccionarEmpleadoActual();

			idClienteActual=proforma.getid_cliente();
			this.seleccionarClienteActual();

			idVendedorActual=proforma.getid_vendedor();
			this.seleccionarVendedorActual();

			idCentroCostoActual=proforma.getid_centro_costo();
			this.seleccionarCentroCostoActual();

			idTipoCambioActual=proforma.getid_tipo_cambio();
			this.seleccionarTipoCambioActual();
			
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			ProformaConstantesFunciones.quitarEspaciosProforma(this.proforma,this.arrDatoGeneral);
			
			
			this.actualizarEstadoCeldasBotonesProforma("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarBusqueda(Long id) throws Exception {
		try	{
			this.proformaSessionBean.setsFuncionBusquedaRapida(this.proformaSessionBean.getsFuncionBusquedaRapida().replace("TO_REPLACE", id.toString()));
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
		}
	}
	
	
	//BUSQUEDA INTERNA FK
	public void seleccionarEmpleadoActual() throws Exception {
		try	{
			Empleado empleadoAux=new Empleado();

			if(this.idEmpleadoActual != null && this.idEmpleadoActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					empleadoLogic.getEntityWithConnection(this.idEmpleadoActual);
					empleadoAux= empleadoLogic.getEmpleado();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				empleadosForeignKey=new ArrayList<Empleado>();
				empleadosForeignKey.add(empleadoAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	public void seleccionarClienteActual() throws Exception {
		try	{
			Cliente clienteAux=new Cliente();

			if(this.idClienteActual != null && this.idClienteActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteLogic.getEntityWithConnection(this.idClienteActual);
					clienteAux= clienteLogic.getCliente();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				clientesForeignKey=new ArrayList<Cliente>();
				clientesForeignKey.add(clienteAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	public void seleccionarVendedorActual() throws Exception {
		try	{
			Vendedor vendedorAux=new Vendedor();

			if(this.idVendedorActual != null && this.idVendedorActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					vendedorLogic.getEntityWithConnection(this.idVendedorActual);
					vendedorAux= vendedorLogic.getVendedor();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				vendedorsForeignKey=new ArrayList<Vendedor>();
				vendedorsForeignKey.add(vendedorAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	public void seleccionarCentroCostoActual() throws Exception {
		try	{
			CentroCosto centrocostoAux=new CentroCosto();

			if(this.idCentroCostoActual != null && this.idCentroCostoActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					centrocostoLogic.getEntityWithConnection(this.idCentroCostoActual);
					centrocostoAux= centrocostoLogic.getCentroCosto();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				centrocostosForeignKey=new ArrayList<CentroCosto>();
				centrocostosForeignKey.add(centrocostoAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	public void seleccionarTipoCambioActual() throws Exception {
		try	{
			TipoCambio tipocambioAux=new TipoCambio();

			if(this.idTipoCambioActual != null && this.idTipoCambioActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipocambioLogic.getEntityWithConnection(this.idTipoCambioActual);
					tipocambioAux= tipocambioLogic.getTipoCambio();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				tipocambiosForeignKey=new ArrayList<TipoCambio>();
				tipocambiosForeignKey.add(tipocambioAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	
	public void cancelar() throws Exception {
		this.cancelar(true);
	}
	
	public void cancelar(Boolean esParaCancelar) throws Exception {
		try {
														
			
			//SE UTILIZA COLUMNA ELIMINAR EN TABLA
			if(this.isEsNuevoProforma) {
				//NO CANCELA TODOS NUEVOS POR FUNCIONALIDAD GUARDAR CAMBIOS
				//this.cancelarNuevosProforma(esParaCancelar);				
				this.cancelarNuevoProforma(esParaCancelar);								
			}
			
			this.proforma=new Proforma();
			
			this.inicializarProforma();
			
			this.actualizarEstadoCeldasBotonesProforma("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void inicializarProforma() throws Exception {
		try {
			ProformaConstantesFunciones.inicializarProforma(this.proforma);
			
			} catch(Exception e) {
			throw e;
		}
	}
	
	public void anteriores()throws Exception {
		try	{
			//this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			
			if(this.iNumeroPaginacionPagina-this.iNumeroPaginacion<this.iNumeroPaginacion) {
				this.iNumeroPaginacionPagina=0;		
			} else {
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			}
			
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void siguientes()throws Exception {
		try	{			
			if(this.proformaLogic.getProformas().size()>0) {
					
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina+this.iNumeroPaginacion;
			}
				
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void generarReporteProformas(String sAccionBusqueda,List<Proforma> proformasParaReportes) throws Exception {
		//HttpSession httpSession = httpServletRequest.getSession();
		Long iIdUsuarioSesion=0L;	
		
		
		if(usuarioActual==null) {
			this.usuarioActual=new Usuario();
		}
		
		iIdUsuarioSesion=usuarioActual.getId();
		
		String sPathReportes="";
		
		InputStream reportFile=null;
		InputStream imageFile=null;
			
		imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		String sPathReporteFinal="";
		
		if(!esReporteAccionProceso) {
			if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
				if(!this.esReporteDinamico) {
					sPathReporteFinal="Proforma"+this.sTipoReporteExtra+"Design.jasper";
					reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
				} else {
					sPathReporteFinal=this.sPathReporteDinamico;
					reportFile = new FileInputStream(sPathReporteFinal);
				}
			} else {
				sPathReporteFinal="ProformaMasterRelaciones"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);
				//sPathReportes=reportFile.getPath().replace("ProformaMasterRelacionesDesign.jasper", "");
			}
		} else {
				sPathReporteFinal="Proforma"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
		}
		
		if(reportFile==null) {
			throw new JRRuntimeException(sPathReporteFinal+" no existe");
		}
		
		String sUsuario="";
		
		if(usuarioActual!=null) {
			sUsuario=usuarioActual.getuser_name();
		}
		
		Map<String, Object> parameters = new HashMap<String, Object>();
		parameters.put("usuario", sUsuario);
		
		parameters.put("titulo", Funciones.GetTituloSistemaReporte(this.parametroGeneralSg,this.moduloActual,this.usuarioActual));
		parameters.put("subtitulo", "Reporte De  Proformas");		
		parameters.put("busquedapor", ProformaConstantesFunciones.getNombreIndice(sAccionBusqueda)+sDetalleReporte);
		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			parameters.put("SUBREPORT_DIR", sPathReportes);
		}
		
		parameters.put("con_grafico", this.conGraficoReporte);
		
		JasperReport jasperReport = (JasperReport)JRLoader.loadObject(reportFile);
				
		this.cargarDatosCliente();
		
		ArrayList<Classe> classes=new ArrayList<Classe>();		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			
			classes.add(new Classe(TerminoProforma.class));
			classes.add(new Classe(DetalleProforma.class));
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {		
				try	{
					
					ProformaLogic proformaLogicAuxiliar=new ProformaLogic();
					proformaLogicAuxiliar.setDatosCliente(proformaLogic.getDatosCliente());				
					proformaLogicAuxiliar.setProformas(proformasParaReportes);
					
					proformaLogicAuxiliar.cargarRelacionesLoteForeignKeyProformaWithConnection(); //deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes, "");
					
					proformasParaReportes=proformaLogicAuxiliar.getProformas();
					
					//proformaLogic.getNewConnexionToDeep();
					
					//for (Proforma proforma:proformasParaReportes) {
					//	proformaLogic.deepLoad(proforma, false, DeepLoadType.INCLUDE, classes);
					//}						
					//proformaLogic.commitNewConnexionToDeep();
					
						
				} catch(Exception e) {
					throw e;
					
				} finally {
					//proformaLogic.closeNewConnexionToDeep();
				}
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
			//ARCHITECTURE		
			
		
			
			

			InputStream reportFileTerminoProforma = AuxiliarReportes.class.getResourceAsStream("TerminoProformaDetalleRelacionesDesign.jasper");
			parameters.put("subreport_terminoproforma", reportFileTerminoProforma);

			InputStream reportFileDetalleProforma = AuxiliarReportes.class.getResourceAsStream("DetalleProformaDetalleRelacionesDesign.jasper");
			parameters.put("subreport_detalleproforma", reportFileDetalleProforma);
		} else {
			//FK DEBERIA TRAERSE DE ANTEMANO
			
		}
								
		
		//CLASSES PARA REPORTES OBJETOS RELACIONADOS
		if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
			classes=new ArrayList<Classe>();
		}
		
		JRBeanArrayDataSource jrbeanArrayDataSourceProforma=null;
		
		if(this.sTipoReporteExtra!=null && !this.sTipoReporteExtra.equals("")) {
			ProformaConstantesFunciones.S_TIPOREPORTE_EXTRA=this.sTipoReporteExtra;
		} else {
			ProformaConstantesFunciones.S_TIPOREPORTE_EXTRA="";
		}
		
		jrbeanArrayDataSourceProforma=new JRBeanArrayDataSource(ProformaJInternalFrame.TraerProformaBeans(proformasParaReportes,classes).toArray());
		
		jasperPrint = JasperFillManager.fillReport(jasperReport,parameters,jrbeanArrayDataSourceProforma);
				
		
		String sPathDest=Constantes.SUNIDAD_ARCHIVOS+":/"+Constantes.SCONTEXTSERVER+"/"+ProformaConstantesFunciones.SCHEMA+"/reportes";
		
		File filePathDest = new File(sPathDest);
		
		if(!filePathDest.exists()) {
			filePathDest.mkdirs();				
		}
				
		String sDestFileName=sPathDest+"/"+ProformaConstantesFunciones.CLASSNAME;
				
		if(this.sTipoArchivoReporte=="VISUALIZAR") {
			JasperViewer jasperViewer = new JasperViewer(jasperPrint,false) ;
			jasperViewer.setVisible(true) ; 

		} else if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML") {	
			//JasperFillManager.fillReportToFile(reportFile.getAbsolutePath(),parameters, new JRBeanArrayDataSource(ProformaBean.TraerProformaBeans(proformasParaReportes).toArray()));
							
			if(this.sTipoArchivoReporte=="HTML") {
				sDestFileName+=".html";
				JasperExportManager.exportReportToHtmlFile(jasperPrint,sDestFileName);
					
			} else if(this.sTipoArchivoReporte=="PDF") {
				sDestFileName+=".pdf";
				JasperExportManager.exportReportToPdfFile(jasperPrint,sDestFileName);
			} else {
				sDestFileName+=".xml";
				JasperExportManager.exportReportToXmlFile(jasperPrint,sDestFileName, false);
			}	
			
		} else if(this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {
				
			if(this.sTipoArchivoReporte=="WORD") {
				sDestFileName+=".rtf";
					
				JRRtfExporter exporter = new JRRtfExporter();
		
				exporter.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporter.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
		
				exporter.exportReport();
				
			} else	{
				sDestFileName+=".xls";
					
				JRXlsExporter exporterXls = new JRXlsExporter();
		
				exporterXls.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporterXls.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
				exporterXls.setParameter(JRXlsExporterParameter.IS_ONE_PAGE_PER_SHEET, Boolean.TRUE);
		
				exporterXls.exportReport();
			}
			
		} else if(this.sTipoArchivoReporte=="EXCEL2"||this.sTipoArchivoReporte=="EXCEL2_2") {
			//sDestFileName+=".xlsx";
			
			if(this.sTipoReporte.equals("NORMAL")) {
				this.generarExcelReporteProformas(sAccionBusqueda,sTipoArchivoReporte,proformasParaReportes);
			
			} else if(this.sTipoReporte.equals("FORMULARIO")){
				this.generarExcelReporteVerticalProformas(sAccionBusqueda,sTipoArchivoReporte,proformasParaReportes,false);
			
			} else if(this.sTipoReporte.equals("DINAMICO")){
				
				if(this.sTipoReporteDinamico.equals("NORMAL")) {
					
					this.jButtonGenerarExcelReporteDinamicoProformaActionPerformed(null);
					//this.generarExcelReporteProformas(sAccionBusqueda,sTipoArchivoReporte,proformasParaReportes);
					
				
				} else if(this.sTipoReporteDinamico.equals("FORMULARIO")){
					this.generarExcelReporteVerticalProformas(sAccionBusqueda,sTipoArchivoReporte,proformasParaReportes,true);
				
				} else if(this.sTipoReporteDinamico.equals("RELACIONES")){
					this.generarExcelReporteRelacionesProformas(sAccionBusqueda,sTipoArchivoReporte,proformasParaReportes,true);
				}
				
			} else if(this.sTipoReporte.equals("RELACIONES")){
				this.generarExcelReporteRelacionesProformas(sAccionBusqueda,sTipoArchivoReporte,proformasParaReportes,false);
			}
		}
		
		if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML"||this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {				
			JOptionPane.showMessageDialog(this,"REPORTE "+sDestFileName+" GENERADO SATISFACTORIAMENTE","REPORTES ",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteProformas(String sAccionBusqueda,String sTipoArchivoReporte,List<Proforma> proformasParaReportes) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"proforma";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("Proformas");
         
        int iRow = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderProforma("NORMAL",row,workbook);
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux=null;
		
		int i=0;
		
      	for(Proforma proforma : proformasParaReportes) {            
			row = sheet.createRow(iRow++);
			iCell = 0;
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				cellStyleDataAux=cellStyleData;
			}
			
			ProformaConstantesFunciones.generarExcelReporteDataProforma("NORMAL",row,workbook,proforma,cellStyleDataAux);
		
			
			/*
            Cell cell0 = row.createCell(0);
            cell0.setCellValue(country.getName());
            Cell cell1 = row.createCell(1);
            cell1.setCellValue(country.getShortCode());
			*/
			
			i++;
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.proformaSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Proforma",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteHeaderProforma(String sTipo,Row row,Workbook workbook) {
		
		ProformaConstantesFunciones.generarExcelReporteHeaderProforma(sTipo,row,workbook);
		
		/*
		Cell cell=null;
		int iCell=0;
		
		CellStyle cellStyle = workbook.createCellStyle();
		cellStyle.setFillBackgroundColor(IndexedColors.GREEN.getIndex());
		cellStyle.setFillPattern(CellStyle.ALIGN_FILL);
		*/
		
	}
	
	public void generarExcelReporteVerticalProformas(String sAccionBusqueda,String sTipoArchivoReporte,List<Proforma> proformasParaReportes,Boolean paraDinamico) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"proforma_vertical";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("Proformas");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		CellStyle cellStyle = Funciones2.getStyleTitulo(workbook,"ZEBRA");;
		
		CellStyle cellStyleTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL_VERTICAL");
		
		
		for(Proforma proforma : proformasParaReportes) {
			row = sheet.createRow(iRow++);
			iRowLast=iRow - 1;
			
			cell = row.createCell(0);
			cell.setCellValue(ProformaConstantesFunciones.getProformaDescripcion(proforma));
			cell.setCellStyle(cellStyleTitulo);
			
			sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
	
			


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProformaConstantesFunciones.LABEL_IDEMPRESA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProformaConstantesFunciones.LABEL_IDEMPRESA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(proforma.getempresa_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProformaConstantesFunciones.LABEL_IDSUCURSAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProformaConstantesFunciones.LABEL_IDSUCURSAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(proforma.getsucursal_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProformaConstantesFunciones.LABEL_IDUSUARIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProformaConstantesFunciones.LABEL_IDUSUARIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(proforma.getusuario_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProformaConstantesFunciones.LABEL_IDEJERCICIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProformaConstantesFunciones.LABEL_IDEJERCICIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(proforma.getejercicio_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProformaConstantesFunciones.LABEL_IDPERIODO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProformaConstantesFunciones.LABEL_IDPERIODO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(proforma.getperiodo_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProformaConstantesFunciones.LABEL_IDANIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProformaConstantesFunciones.LABEL_IDANIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(proforma.getanio_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProformaConstantesFunciones.LABEL_IDMES))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProformaConstantesFunciones.LABEL_IDMES);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(proforma.getmes_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProformaConstantesFunciones.LABEL_NUMEROPREIMPRESO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProformaConstantesFunciones.LABEL_NUMEROPREIMPRESO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(proforma.getnumero_pre_impreso());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProformaConstantesFunciones.LABEL_FECHAEMISION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProformaConstantesFunciones.LABEL_FECHAEMISION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(proforma.getfecha_emision());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProformaConstantesFunciones.LABEL_DIAS))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProformaConstantesFunciones.LABEL_DIAS);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(proforma.getdias());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProformaConstantesFunciones.LABEL_FECHAVENCIMIENTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProformaConstantesFunciones.LABEL_FECHAVENCIMIENTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(proforma.getfecha_vencimiento());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProformaConstantesFunciones.LABEL_IDMONEDA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProformaConstantesFunciones.LABEL_IDMONEDA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(proforma.getmoneda_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProformaConstantesFunciones.LABEL_COTIZACION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProformaConstantesFunciones.LABEL_COTIZACION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(proforma.getcotizacion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProformaConstantesFunciones.LABEL_IDEMPLEADO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProformaConstantesFunciones.LABEL_IDEMPLEADO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(proforma.getempleado_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProformaConstantesFunciones.LABEL_IDFORMATO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProformaConstantesFunciones.LABEL_IDFORMATO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(proforma.getformato_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProformaConstantesFunciones.LABEL_IDESTADOPROFORMA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProformaConstantesFunciones.LABEL_IDESTADOPROFORMA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(proforma.getestadoproforma_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProformaConstantesFunciones.LABEL_DIRECCION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProformaConstantesFunciones.LABEL_DIRECCION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(proforma.getdireccion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProformaConstantesFunciones.LABEL_IDCLIENTE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProformaConstantesFunciones.LABEL_IDCLIENTE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(proforma.getcliente_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProformaConstantesFunciones.LABEL_RUC))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProformaConstantesFunciones.LABEL_RUC);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(proforma.getruc());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProformaConstantesFunciones.LABEL_ESOFERTA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProformaConstantesFunciones.LABEL_ESOFERTA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(proforma.getes_oferta()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProformaConstantesFunciones.LABEL_TELEFONO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProformaConstantesFunciones.LABEL_TELEFONO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(proforma.gettelefono());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProformaConstantesFunciones.LABEL_IDTIPOPRECIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProformaConstantesFunciones.LABEL_IDTIPOPRECIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(proforma.gettipoprecio_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProformaConstantesFunciones.LABEL_IDVENDEDOR))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProformaConstantesFunciones.LABEL_IDVENDEDOR);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(proforma.getvendedor_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProformaConstantesFunciones.LABEL_IDSUBCLIENTE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProformaConstantesFunciones.LABEL_IDSUBCLIENTE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(proforma.getsubcliente_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProformaConstantesFunciones.LABEL_IDTIPOVIATRANSPORTE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProformaConstantesFunciones.LABEL_IDTIPOVIATRANSPORTE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(proforma.gettipoviatransporte_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProformaConstantesFunciones.LABEL_IDTRANSPORTE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProformaConstantesFunciones.LABEL_IDTRANSPORTE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(proforma.gettransporte_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProformaConstantesFunciones.LABEL_IDRUTATRANSPORTE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProformaConstantesFunciones.LABEL_IDRUTATRANSPORTE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(proforma.getrutatransporte_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProformaConstantesFunciones.LABEL_DESCRIPCION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProformaConstantesFunciones.LABEL_DESCRIPCION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(proforma.getdescripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProformaConstantesFunciones.LABEL_DESCUENTOPORCENTAJE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProformaConstantesFunciones.LABEL_DESCUENTOPORCENTAJE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(proforma.getdescuento_porcentaje());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProformaConstantesFunciones.LABEL_MONTOCONIVA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProformaConstantesFunciones.LABEL_MONTOCONIVA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(proforma.getmonto_con_iva());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProformaConstantesFunciones.LABEL_SUMAN))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProformaConstantesFunciones.LABEL_SUMAN);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(proforma.getsuman());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProformaConstantesFunciones.LABEL_DESCUENTOVALOR))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProformaConstantesFunciones.LABEL_DESCUENTOVALOR);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(proforma.getdescuento_valor());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProformaConstantesFunciones.LABEL_MONTOSINIVA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProformaConstantesFunciones.LABEL_MONTOSINIVA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(proforma.getmonto_sin_iva());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProformaConstantesFunciones.LABEL_DESCUENTOGENERAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProformaConstantesFunciones.LABEL_DESCUENTOGENERAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(proforma.getdescuento_general());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProformaConstantesFunciones.LABEL_FLETE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProformaConstantesFunciones.LABEL_FLETE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(proforma.getflete());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProformaConstantesFunciones.LABEL_ULTIMOCOSTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProformaConstantesFunciones.LABEL_ULTIMOCOSTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(proforma.getultimo_costo());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProformaConstantesFunciones.LABEL_SUBTOTAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProformaConstantesFunciones.LABEL_SUBTOTAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(proforma.getsubtotal());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProformaConstantesFunciones.LABEL_OTROSCARGOS))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProformaConstantesFunciones.LABEL_OTROSCARGOS);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(proforma.getotros_cargos());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProformaConstantesFunciones.LABEL_MARGENUTILIDAD))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProformaConstantesFunciones.LABEL_MARGENUTILIDAD);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(proforma.getmargen_utilidad());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProformaConstantesFunciones.LABEL_IVA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProformaConstantesFunciones.LABEL_IVA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(proforma.getiva());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProformaConstantesFunciones.LABEL_FINANCIAMIENTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProformaConstantesFunciones.LABEL_FINANCIAMIENTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(proforma.getfinanciamiento());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProformaConstantesFunciones.LABEL_TOTAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProformaConstantesFunciones.LABEL_TOTAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(proforma.gettotal());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProformaConstantesFunciones.LABEL_OTROSVALORES))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProformaConstantesFunciones.LABEL_OTROSVALORES);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(proforma.getotros_valores());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProformaConstantesFunciones.LABEL_ANTICIPO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProformaConstantesFunciones.LABEL_ANTICIPO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(proforma.getanticipo());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProformaConstantesFunciones.LABEL_ICE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProformaConstantesFunciones.LABEL_ICE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(proforma.getice());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProformaConstantesFunciones.LABEL_MONTORETENCION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProformaConstantesFunciones.LABEL_MONTORETENCION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(proforma.getmonto_retencion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProformaConstantesFunciones.LABEL_FECHA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProformaConstantesFunciones.LABEL_FECHA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(proforma.getfecha());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProformaConstantesFunciones.LABEL_FECHASERVIDOR))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProformaConstantesFunciones.LABEL_FECHASERVIDOR);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(proforma.getfecha_servidor());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProformaConstantesFunciones.LABEL_HORAINICIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProformaConstantesFunciones.LABEL_HORAINICIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(proforma.gethora_inicio());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProformaConstantesFunciones.LABEL_HORAFIN))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProformaConstantesFunciones.LABEL_HORAFIN);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(proforma.gethora_fin());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProformaConstantesFunciones.LABEL_IDCENTROCOSTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProformaConstantesFunciones.LABEL_IDCENTROCOSTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(proforma.getcentrocosto_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProformaConstantesFunciones.LABEL_IDTIPOPROFORMA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProformaConstantesFunciones.LABEL_IDTIPOPROFORMA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(proforma.gettipoproforma_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProformaConstantesFunciones.LABEL_IDCONSIGNATARIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProformaConstantesFunciones.LABEL_IDCONSIGNATARIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(proforma.getconsignatario_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ProformaConstantesFunciones.LABEL_IDTIPOCAMBIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ProformaConstantesFunciones.LABEL_IDTIPOCAMBIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(proforma.gettipocambio_descripcion());


			}						
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.proformaSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Proforma",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteRelacionesProformas(String sAccionBusqueda,String sTipoArchivoReporte,List<Proforma> proformasParaReportes,Boolean paraDinamico) throws Exception {
		
		ArrayList<Classe> classes=new ArrayList<Classe>();
		List<Proforma> proformasRespaldo=null;
		
		classes=ProformaConstantesFunciones.getClassesRelationshipsOfProforma(new ArrayList<Classe>(),DeepLoadType.NONE,false);
					
		this.datosDeep=new DatosDeep();
		
		this.datosDeep.setIsDeep(false);
		this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
		this.datosDeep.setClases(classes);
			
		this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
		this.datosCliente.setIsConDeep(true);	
		this.datosCliente.setIsConExportar(false);
		
						
		this.proformaLogic.setDatosCliente(this.datosCliente);
		this.proformaLogic.setDatosDeep(this.datosDeep);
		this.proformaLogic.setIsConDeep(true);
		
		proformasRespaldo=this.proformaLogic.getProformas();
		
		this.proformaLogic.setProformas(proformasParaReportes);	
		this.proformaLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
		
		proformasParaReportes=this.proformaLogic.getProformas();
		this.proformaLogic.setProformas(proformasRespaldo);
		
		
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"proforma_relacion";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("Proformas");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderProforma("NORMAL",row,workbook);
		
		int i=0;
		int i2=0;
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL");
		CellStyle cellStyleDataZebra = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux =null;
		CellStyle cellStyleDataAuxHijo =null;
		
		for(Proforma proforma : proformasParaReportes) {			
			if(i!=0) {
				row = sheet.createRow(iRow++);				
				this.generarExcelReporteHeaderProforma("NORMAL",row,workbook);
			}
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				//cellStyleDataAux=cellStyleData;
			}
			
			row = sheet.createRow(iRow++);						
			ProformaConstantesFunciones.generarExcelReporteDataProforma("NORMAL",row,workbook,proforma,cellStyleDataAux);
		
			
			


				//TerminoProforma
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(TerminoProformaConstantesFunciones.SCLASSWEBTITULO))) {

				if(proforma.getTerminoProformas()!=null && proforma.getTerminoProformas().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(TerminoProformaConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					TerminoProformaConstantesFunciones.generarExcelReporteHeaderTerminoProforma("RELACIONADO",row,workbook);
				}

				if(proforma.getTerminoProformas()!=null) {
					i2=0;
					for(TerminoProforma terminoproforma : proforma.getTerminoProformas()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						TerminoProformaConstantesFunciones.generarExcelReporteDataTerminoProforma("RELACIONADO",row,workbook,terminoproforma,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//DetalleProforma
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(DetalleProformaConstantesFunciones.SCLASSWEBTITULO))) {

				if(proforma.getDetalleProformas()!=null && proforma.getDetalleProformas().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(DetalleProformaConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					DetalleProformaConstantesFunciones.generarExcelReporteHeaderDetalleProforma("RELACIONADO",row,workbook);
				}

				if(proforma.getDetalleProformas()!=null) {
					i2=0;
					for(DetalleProforma detalleproforma : proforma.getDetalleProformas()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						DetalleProformaConstantesFunciones.generarExcelReporteDataDetalleProforma("RELACIONADO",row,workbook,detalleproforma,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}
			
			i++;
        }
        
		/*
		row = sheet.createRow(iRow++);
		iRowLast=iRow - 1;
			
		cell = row.createCell(0);
		cell.setCellValue(ProformaConstantesFunciones.getProformaDescripcion(proforma));
		cell.setCellStyle(cellStyleTitulo);
			
		sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
		*/
		
			
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.proformaSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Proforma",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	
	public Boolean existeColumnaReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoProforma.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoProforma.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public Boolean existeRelacionReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoProforma.getjListRelacionesSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoProforma.getjListRelacionesSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public void startProcessProforma() throws Exception {		
		this.startProcessProforma(true);
	}
	
	public void startProcessProforma(Boolean conSplash) throws Exception {		
		//FuncionesSwing.enableDisablePanels(false,this.jTabbedPaneBusquedasProforma ,this.jPanelParametrosReportesProforma, this.jScrollPanelDatosProforma,this.jPanelPaginacionProforma, this.jScrollPanelDatosEdicionProforma, this.jPanelAccionesProforma,this.jPanelAccionesFormularioProforma,this.jmenuBarProforma,this.jmenuBarDetalleProforma,this.jTtoolBarProforma,this.jTtoolBarDetalleProforma);		
		
		final JTabbedPane jTabbedPaneBusquedasProforma=this.jTabbedPaneBusquedasProforma; 
		
		final JPanel jPanelParametrosReportesProforma=this.jPanelParametrosReportesProforma;
		//final JScrollPane jScrollPanelDatosProforma=this.jScrollPanelDatosProforma;
		final JTable jTableDatosProforma=this.jTableDatosProforma;		
		final JPanel jPanelPaginacionProforma=this.jPanelPaginacionProforma;
		//final JScrollPane jScrollPanelDatosEdicionProforma=this.jScrollPanelDatosEdicionProforma;
		final JPanel jPanelAccionesProforma=this.jPanelAccionesProforma;
		
		JPanel jPanelCamposAuxiliarProforma=new JPanelMe();
		JPanel jPanelAccionesFormularioAuxiliarProforma=new JPanelMe();
		
		if(this.jInternalFrameDetalleFormProforma!=null) {
			jPanelCamposAuxiliarProforma=this.jInternalFrameDetalleFormProforma.jPanelCamposProforma;
			jPanelAccionesFormularioAuxiliarProforma=this.jInternalFrameDetalleFormProforma.jPanelAccionesFormularioProforma;
		}
		
		final JPanel jPanelCamposProforma=jPanelCamposAuxiliarProforma;
		final JPanel jPanelAccionesFormularioProforma=jPanelAccionesFormularioAuxiliarProforma;
		
		
		final JMenuBar jmenuBarProforma=this.jmenuBarProforma;
		final JToolBar jTtoolBarProforma=this.jTtoolBarProforma;		
		
		
		JMenuBar jmenuBarDetalleAuxiliarProforma=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarProforma=new JToolBar();		
		
		if(this.jInternalFrameDetalleFormProforma!=null) {
			jmenuBarDetalleAuxiliarProforma=this.jInternalFrameDetalleFormProforma.jmenuBarDetalleProforma;
			jTtoolBarDetalleAuxiliarProforma=this.jInternalFrameDetalleFormProforma.jTtoolBarDetalleProforma;
		}
		
		final JMenuBar jmenuBarDetalleProforma=jmenuBarDetalleAuxiliarProforma;
		final JToolBar jTtoolBarDetalleProforma=jTtoolBarDetalleAuxiliarProforma;		
		
		
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("START");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasProforma;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesProforma;
			processRunnable.jTableDatos=jTableDatosProforma;
			processRunnable.jPanelCampos=jPanelCamposProforma;
			processRunnable.jPanelPaginacion=jPanelPaginacionProforma;
			processRunnable.jPanelAcciones=jPanelAccionesProforma;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioProforma;
			
			
			processRunnable.jmenuBar=jmenuBarProforma;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleProforma;
			processRunnable.jTtoolBar=jTtoolBarProforma;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleProforma;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasProforma ,jPanelParametrosReportesProforma,jTableDatosProforma, /*jScrollPanelDatosProforma,*/jPanelCamposProforma,jPanelPaginacionProforma, /*jScrollPanelDatosEdicionProforma,*/ jPanelAccionesProforma,jPanelAccionesFormularioProforma,jmenuBarProforma,jmenuBarDetalleProforma,jTtoolBarProforma,jTtoolBarDetalleProforma);
		
			startProcess();//this.
		}
						
		/*
		if(conSplash) {
			SwingUtilities.invokeLater(new Runnable() {
			      public void run() {
			    	  try {
							FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasProforma ,jPanelParametrosReportesProforma, jScrollPanelDatosProforma,jPanelPaginacionProforma, jScrollPanelDatosEdicionProforma, jPanelAccionesProforma,jPanelAccionesFormularioProforma,jmenuBarProforma,jmenuBarDetalleProforma,jTtoolBarProforma,jTtoolBarDetalleProforma);
						
							startProcess();//this.
							
						} catch (Exception e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
			      }
			});
		}
		*/
	}
	
	public void finishProcessProforma() {// throws Exception 
		this.finishProcessProforma(true);
	}
	
	public void finishProcessProforma(Boolean conSplash) {// throws Exception 
		//FuncionesSwing.enableDisablePanels(true,this.jTabbedPaneBusquedasProforma ,this.jPanelParametrosReportesProforma, this.jScrollPanelDatosProforma,this.jPanelPaginacionProforma, this.jScrollPanelDatosEdicionProforma, this.jPanelAccionesProforma,this.jPanelAccionesFormularioProforma,this.jmenuBarProforma,this.jmenuBarDetalleProforma,this.jTtoolBarProforma,this.jTtoolBarDetalleProforma);		
		
		final JTabbedPane jTabbedPaneBusquedasProforma=this.jTabbedPaneBusquedasProforma; 
		
		final JPanel jPanelParametrosReportesProforma=this.jPanelParametrosReportesProforma;
		//final JScrollPane jScrollPanelDatosProforma=this.jScrollPanelDatosProforma;
		final JTable jTableDatosProforma=this.jTableDatosProforma;		
		final JPanel jPanelPaginacionProforma=this.jPanelPaginacionProforma;
		//final JScrollPane jScrollPanelDatosEdicionProforma=this.jScrollPanelDatosEdicionProforma;
		final JPanel jPanelAccionesProforma=this.jPanelAccionesProforma;
		
		JPanel jPanelCamposAuxiliarProforma=new JPanel();
		JPanel jPanelAccionesFormularioAuxiliarProforma=new JPanel();
		
		if(this.jInternalFrameDetalleFormProforma!=null) {
			jPanelCamposAuxiliarProforma=this.jInternalFrameDetalleFormProforma.jPanelCamposProforma;
			jPanelAccionesFormularioAuxiliarProforma=this.jInternalFrameDetalleFormProforma.jPanelAccionesFormularioProforma;
		}
		
		final JPanel jPanelCamposProforma=jPanelCamposAuxiliarProforma;
		final JPanel jPanelAccionesFormularioProforma=jPanelAccionesFormularioAuxiliarProforma;
		
		
		final JMenuBar jmenuBarProforma=this.jmenuBarProforma;		
		final JToolBar jTtoolBarProforma=this.jTtoolBarProforma;
				
		JMenuBar jmenuBarDetalleAuxiliarProforma=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarProforma=new JToolBar();
		
		if(this.jInternalFrameDetalleFormProforma!=null) {
			jmenuBarDetalleAuxiliarProforma=this.jInternalFrameDetalleFormProforma.jmenuBarDetalleProforma;
			jTtoolBarDetalleAuxiliarProforma=this.jInternalFrameDetalleFormProforma.jTtoolBarDetalleProforma;		
		}
		
		final JMenuBar jmenuBarDetalleProforma=jmenuBarDetalleAuxiliarProforma;
		final JToolBar jTtoolBarDetalleProforma=jTtoolBarDetalleAuxiliarProforma;
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("END");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasProforma;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesProforma;
			processRunnable.jTableDatos=jTableDatosProforma;
			processRunnable.jPanelCampos=jPanelCamposProforma;
			processRunnable.jPanelPaginacion=jPanelPaginacionProforma;
			processRunnable.jPanelAcciones=jPanelAccionesProforma;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioProforma;
			
			
			processRunnable.jmenuBar=jmenuBarProforma;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleProforma;
			processRunnable.jTtoolBar=jTtoolBarProforma;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleProforma;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			if(conSplash) {
				SwingUtilities.invokeLater(new RunnableProceso(true,this,jTabbedPaneBusquedasProforma ,jPanelParametrosReportesProforma, jTableDatosProforma,/*jScrollPanelDatosProforma,*/jPanelCamposProforma,jPanelPaginacionProforma, /*jScrollPanelDatosEdicionProforma,*/ jPanelAccionesProforma,jPanelAccionesFormularioProforma,jmenuBarProforma,jmenuBarDetalleProforma,jTtoolBarProforma,jTtoolBarDetalleProforma));
			}
		}						
	}
	
	/*
	public void habilitarDeshabilitarControlesProforma(Boolean esHabilitar,Boolean conDetalle) {
		this.habilitarDeshabilitarToolBarProforma(esHabilitar,conDetalle);
		this.habilitarDeshabilitarMenuProforma(esHabilitar,conDetalle);
	}
	
	public void habilitarDeshabilitarToolBarProforma(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jTtoolBarProforma,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jTtoolBarDetalleProforma,esHabilitar,1,1);
		}
	}
	
	public void habilitarDeshabilitarMenuProforma(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jmenuBarProforma,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jmenuBarDetalleProforma,esHabilitar,1,1);
		}
	}
	*/
	
	
	
	public void procesarBusqueda(String sAccionBusqueda) throws Exception {		
		String  finalQueryPaginacion=this.proformaConstantesFunciones.getsFinalQueryProforma();
		String  finalQueryPaginacionTodos=this.proformaConstantesFunciones.getsFinalQueryProforma();
		
		Boolean esBusqueda=false;
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!sAccionBusqueda.equals("Todos"))	{
			esBusqueda=true;
		}
		
		this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
		this.arrDatoGeneralNo= new  ArrayList<String>();
		
		ArrayList<String> arrColumnasGlobalesNo=ProformaConstantesFunciones.getArrayColumnasGlobalesNoProforma(this.arrDatoGeneral);
		ArrayList<String> arrColumnasGlobales=ProformaConstantesFunciones.getArrayColumnasGlobalesProforma(this.arrDatoGeneral,arrColumnasGlobalesNo);
		
			
		String  finalQueryGlobal="";
		
		finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,!esBusqueda,esBusqueda,arrColumnasGlobales,ProformaConstantesFunciones.TABLENAME);
		
		String sOrderBy="";
		
		
		sOrderBy=Funciones2.getFinalQueryOrderBy(this.arrOrderBy);
		
		
		if(!sOrderBy.equals("")) {			
			finalQueryPaginacion=sOrderBy;
			finalQueryPaginacionTodos=sOrderBy;
		}
		
		
		//INICIALIZA ELIMINADOS
		this.proformasEliminados= new ArrayList<Proforma>();
		
		if(!this.isEntroOnLoad) {
			this.onLoad();
		}/* else {
			this.isEntroOnLoad=false;
		}*/
		
		
		
				
		try	{		
			
			//this.startProcessProforma();
		
				///*ProformaSessionBean*/this.proformaSessionBean=new ProformaSessionBean();
			
			if(this.proformaSessionBean==null) {
				this.proformaSessionBean=new ProformaSessionBean();
			}
			
			//ACTUALIZA EL TAMANIO DE PAGINACION DESDE EL COMBO
			if(this.sTipoPaginacion!=null && !this.sTipoPaginacion.equals("")) {
				if(!this.sTipoPaginacion.equals("TODOS")) {
					this.iNumeroPaginacion=Integer.parseInt(this.sTipoPaginacion);
				} else {
					this.iNumeroPaginacion=-1;
					this.iNumeroPaginacionPagina=-1;
				}
			} else {
				if(this.iNumeroPaginacion==null || (this.iNumeroPaginacion!=null && this.iNumeroPaginacion<=0)) {
					this.iNumeroPaginacion=ProformaConstantesFunciones.INUMEROPAGINACION;
				}
			}
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);
			
			this.cargarDatosCliente();
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			classes=ProformaConstantesFunciones.getClassesForeignKeysOfProforma(new ArrayList<Classe>(),DeepLoadType.NONE);
			
		
			this.datosDeep=new DatosDeep();
			this.datosDeep.setIsDeep(false);
			this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
			this.datosDeep.setClases(classes);
			
			this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
			this.datosCliente.setIsConDeep(true);
			
			if(false) {//this.conExportar
				this.datosCliente.setIsConExportar(true);
				this.datosCliente.setDatosExportarParametros(Funciones2.getTipoExportar(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getcon_exportar_cabecera(),Funciones2.getTipoDelimiter(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getpath_exportar()+"/proforma."+Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario));
			} else {
				this.datosCliente.setIsConExportar(false);
			}
			
			proformasAux= new ArrayList<Proforma>();
			
				
			proformaLogic.setDatosCliente(this.datosCliente);
			proformaLogic.setDatosDeep(this.datosDeep);
			proformaLogic.setIsConDeep(true);
			
			
			proformaLogic.getProformaDataAccess().setIsForForeingsKeysDataRelationships(true);
			
			if(sAccionBusqueda.equals("Todos") || sAccionBusqueda.equals("Query"))	{	
				if(sAccionBusqueda.equals("Todos")) {
					//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
					//this.sFinalQueryGeneral="";
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacionTodos );
					
					proformaLogic.getTodosProformas(finalQueryGlobal,pagination);
					
					//proformaLogic.getTodosProformasWithConnection(finalQueryGlobal,pagination);										
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
				
				if(proformaLogic.getProformas()==null|| proformaLogic.getProformas().size()==0)	{
					
				
				}
				
				if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(-1);
						this.pagination.setiMaxResults(-1);
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							proformasAux= new ArrayList<Proforma>();
							proformasAux.addAll(proformaLogic.getProformas());						
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							proformasAux= new ArrayList<Proforma>();
							proformasAux.addAll(proformas);
						}
						//ARCHITECTURE
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							proformaLogic.getTodosProformas(finalQueryGlobal+"",this.pagination);												
							
							//proformaLogic.getTodosProformasWithConnection(finalQueryGlobal+"",this.pagination);												
						} else if(Constantes.ISUSAEJBREMOTE) {
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
					}
					
					this.generarReporteProformas("Todos",proformaLogic.getProformas() );
					
					if(false) {//isMostrarTodosResultadosReporte						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							proformaLogic.setProformas(new ArrayList<Proforma>());					
							proformaLogic.getProformas().addAll(proformasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							proformas=new ArrayList<Proforma>();
							proformas.addAll(proformasAux);
						}
						//ARCHITECTURE
						
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);														
					}
				}
			}
			else if(sAccionBusqueda.equals("PorId")) {
				Long idProforma=0L;
				
				if(this.idActual!=null && this.idActual!=0L) {
					idProforma=this.idActual;
				
				} else if(this.idProformaActual!=null && this.idProformaActual!=0L) {
					idProforma=idProformaActual;
				}
				
					
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndicePorId(idProforma);
				
				this.proformas=new ArrayList<Proforma>();
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {					
					proformaLogic.getEntity(idProforma);
					
					//proformaLogic.getEntityWithConnection(idProforma);
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
								
				if(Constantes.ISUSAEJBLOGICLAYER) {
					proformaLogic.setProformas(new ArrayList<Proforma>());
					proformaLogic.getProformas().add(proformaLogic.getProforma());
				
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.proformas=new ArrayList<Proforma>();
					this.proformas.add(proforma);
				}
				
				if(proformaLogic.getProforma()==null)	{
					
				
				}			
			}
			
		
			else if(sAccionBusqueda.equals("FK_IdCentroCosto")) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdCentroCosto(id_centro_costoFK_IdCentroCosto);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					proformaLogic.getProformasFK_IdCentroCosto(finalQueryGlobal,pagination,id_centro_costoFK_IdCentroCosto);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdCentroCosto(id_centro_costoFK_IdCentroCosto);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdCentroCosto(id_centro_costoFK_IdCentroCosto);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=proformaLogic.getProformas()==null||proformaLogic.getProformas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=proformas==null|| proformas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						proformasAux=new ArrayList<Proforma>();
						proformasAux.addAll(proformaLogic.getProformas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							proformasAux=new ArrayList<Proforma>();
							proformasAux.addAll(proformas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							proformaLogic.getProformasFK_IdCentroCosto(finalQueryGlobal,pagination,id_centro_costoFK_IdCentroCosto);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdCentroCosto(id_centro_costoFK_IdCentroCosto);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdCentroCosto(id_centro_costoFK_IdCentroCosto);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteProformas("FK_IdCentroCosto",proformaLogic.getProformas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteProformas("FK_IdCentroCosto",proformas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						proformaLogic.setProformas(new ArrayList<Proforma>());
						proformaLogic.getProformas().addAll(proformasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							proformas=new ArrayList<Proforma>();
							proformas.addAll(proformasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdCliente")) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					proformaLogic.getProformasFK_IdCliente(finalQueryGlobal,pagination,id_clienteFK_IdCliente);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=proformaLogic.getProformas()==null||proformaLogic.getProformas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=proformas==null|| proformas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						proformasAux=new ArrayList<Proforma>();
						proformasAux.addAll(proformaLogic.getProformas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							proformasAux=new ArrayList<Proforma>();
							proformasAux.addAll(proformas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							proformaLogic.getProformasFK_IdCliente(finalQueryGlobal,pagination,id_clienteFK_IdCliente);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteProformas("FK_IdCliente",proformaLogic.getProformas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteProformas("FK_IdCliente",proformas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						proformaLogic.setProformas(new ArrayList<Proforma>());
						proformaLogic.getProformas().addAll(proformasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							proformas=new ArrayList<Proforma>();
							proformas.addAll(proformasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdConsignatario")) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdConsignatario(id_consignatarioFK_IdConsignatario);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					proformaLogic.getProformasFK_IdConsignatario(finalQueryGlobal,pagination,id_consignatarioFK_IdConsignatario);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdConsignatario(id_consignatarioFK_IdConsignatario);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdConsignatario(id_consignatarioFK_IdConsignatario);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=proformaLogic.getProformas()==null||proformaLogic.getProformas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=proformas==null|| proformas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						proformasAux=new ArrayList<Proforma>();
						proformasAux.addAll(proformaLogic.getProformas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							proformasAux=new ArrayList<Proforma>();
							proformasAux.addAll(proformas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							proformaLogic.getProformasFK_IdConsignatario(finalQueryGlobal,pagination,id_consignatarioFK_IdConsignatario);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdConsignatario(id_consignatarioFK_IdConsignatario);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdConsignatario(id_consignatarioFK_IdConsignatario);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteProformas("FK_IdConsignatario",proformaLogic.getProformas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteProformas("FK_IdConsignatario",proformas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						proformaLogic.setProformas(new ArrayList<Proforma>());
						proformaLogic.getProformas().addAll(proformasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							proformas=new ArrayList<Proforma>();
							proformas.addAll(proformasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEjercicio")) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					proformaLogic.getProformasFK_IdEjercicio(finalQueryGlobal,pagination,id_ejercicioFK_IdEjercicio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=proformaLogic.getProformas()==null||proformaLogic.getProformas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=proformas==null|| proformas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						proformasAux=new ArrayList<Proforma>();
						proformasAux.addAll(proformaLogic.getProformas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							proformasAux=new ArrayList<Proforma>();
							proformasAux.addAll(proformas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							proformaLogic.getProformasFK_IdEjercicio(finalQueryGlobal,pagination,id_ejercicioFK_IdEjercicio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteProformas("FK_IdEjercicio",proformaLogic.getProformas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteProformas("FK_IdEjercicio",proformas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						proformaLogic.setProformas(new ArrayList<Proforma>());
						proformaLogic.getProformas().addAll(proformasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							proformas=new ArrayList<Proforma>();
							proformas.addAll(proformasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEmpleado")) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdEmpleado(id_empleadoFK_IdEmpleado);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					proformaLogic.getProformasFK_IdEmpleado(finalQueryGlobal,pagination,id_empleadoFK_IdEmpleado);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdEmpleado(id_empleadoFK_IdEmpleado);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdEmpleado(id_empleadoFK_IdEmpleado);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=proformaLogic.getProformas()==null||proformaLogic.getProformas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=proformas==null|| proformas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						proformasAux=new ArrayList<Proforma>();
						proformasAux.addAll(proformaLogic.getProformas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							proformasAux=new ArrayList<Proforma>();
							proformasAux.addAll(proformas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							proformaLogic.getProformasFK_IdEmpleado(finalQueryGlobal,pagination,id_empleadoFK_IdEmpleado);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdEmpleado(id_empleadoFK_IdEmpleado);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdEmpleado(id_empleadoFK_IdEmpleado);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteProformas("FK_IdEmpleado",proformaLogic.getProformas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteProformas("FK_IdEmpleado",proformas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						proformaLogic.setProformas(new ArrayList<Proforma>());
						proformaLogic.getProformas().addAll(proformasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							proformas=new ArrayList<Proforma>();
							proformas.addAll(proformasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEmpresa")) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					proformaLogic.getProformasFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=proformaLogic.getProformas()==null||proformaLogic.getProformas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=proformas==null|| proformas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						proformasAux=new ArrayList<Proforma>();
						proformasAux.addAll(proformaLogic.getProformas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							proformasAux=new ArrayList<Proforma>();
							proformasAux.addAll(proformas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							proformaLogic.getProformasFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteProformas("FK_IdEmpresa",proformaLogic.getProformas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteProformas("FK_IdEmpresa",proformas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						proformaLogic.setProformas(new ArrayList<Proforma>());
						proformaLogic.getProformas().addAll(proformasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							proformas=new ArrayList<Proforma>();
							proformas.addAll(proformasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEstadoProforma")) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdEstadoProforma(id_estado_proformaFK_IdEstadoProforma);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					proformaLogic.getProformasFK_IdEstadoProforma(finalQueryGlobal,pagination,id_estado_proformaFK_IdEstadoProforma);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdEstadoProforma(id_estado_proformaFK_IdEstadoProforma);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdEstadoProforma(id_estado_proformaFK_IdEstadoProforma);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=proformaLogic.getProformas()==null||proformaLogic.getProformas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=proformas==null|| proformas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						proformasAux=new ArrayList<Proforma>();
						proformasAux.addAll(proformaLogic.getProformas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							proformasAux=new ArrayList<Proforma>();
							proformasAux.addAll(proformas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							proformaLogic.getProformasFK_IdEstadoProforma(finalQueryGlobal,pagination,id_estado_proformaFK_IdEstadoProforma);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdEstadoProforma(id_estado_proformaFK_IdEstadoProforma);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdEstadoProforma(id_estado_proformaFK_IdEstadoProforma);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteProformas("FK_IdEstadoProforma",proformaLogic.getProformas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteProformas("FK_IdEstadoProforma",proformas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						proformaLogic.setProformas(new ArrayList<Proforma>());
						proformaLogic.getProformas().addAll(proformasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							proformas=new ArrayList<Proforma>();
							proformas.addAll(proformasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdFormato")) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdFormato(id_formatoFK_IdFormato);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					proformaLogic.getProformasFK_IdFormato(finalQueryGlobal,pagination,id_formatoFK_IdFormato);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdFormato(id_formatoFK_IdFormato);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdFormato(id_formatoFK_IdFormato);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=proformaLogic.getProformas()==null||proformaLogic.getProformas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=proformas==null|| proformas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						proformasAux=new ArrayList<Proforma>();
						proformasAux.addAll(proformaLogic.getProformas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							proformasAux=new ArrayList<Proforma>();
							proformasAux.addAll(proformas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							proformaLogic.getProformasFK_IdFormato(finalQueryGlobal,pagination,id_formatoFK_IdFormato);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdFormato(id_formatoFK_IdFormato);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdFormato(id_formatoFK_IdFormato);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteProformas("FK_IdFormato",proformaLogic.getProformas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteProformas("FK_IdFormato",proformas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						proformaLogic.setProformas(new ArrayList<Proforma>());
						proformaLogic.getProformas().addAll(proformasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							proformas=new ArrayList<Proforma>();
							proformas.addAll(proformasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdMoneda")) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdMoneda(id_monedaFK_IdMoneda);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					proformaLogic.getProformasFK_IdMoneda(finalQueryGlobal,pagination,id_monedaFK_IdMoneda);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdMoneda(id_monedaFK_IdMoneda);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdMoneda(id_monedaFK_IdMoneda);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=proformaLogic.getProformas()==null||proformaLogic.getProformas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=proformas==null|| proformas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						proformasAux=new ArrayList<Proforma>();
						proformasAux.addAll(proformaLogic.getProformas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							proformasAux=new ArrayList<Proforma>();
							proformasAux.addAll(proformas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							proformaLogic.getProformasFK_IdMoneda(finalQueryGlobal,pagination,id_monedaFK_IdMoneda);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdMoneda(id_monedaFK_IdMoneda);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdMoneda(id_monedaFK_IdMoneda);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteProformas("FK_IdMoneda",proformaLogic.getProformas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteProformas("FK_IdMoneda",proformas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						proformaLogic.setProformas(new ArrayList<Proforma>());
						proformaLogic.getProformas().addAll(proformasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							proformas=new ArrayList<Proforma>();
							proformas.addAll(proformasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdPeriodo")) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					proformaLogic.getProformasFK_IdPeriodo(finalQueryGlobal,pagination,id_periodoFK_IdPeriodo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=proformaLogic.getProformas()==null||proformaLogic.getProformas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=proformas==null|| proformas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						proformasAux=new ArrayList<Proforma>();
						proformasAux.addAll(proformaLogic.getProformas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							proformasAux=new ArrayList<Proforma>();
							proformasAux.addAll(proformas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							proformaLogic.getProformasFK_IdPeriodo(finalQueryGlobal,pagination,id_periodoFK_IdPeriodo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteProformas("FK_IdPeriodo",proformaLogic.getProformas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteProformas("FK_IdPeriodo",proformas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						proformaLogic.setProformas(new ArrayList<Proforma>());
						proformaLogic.getProformas().addAll(proformasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							proformas=new ArrayList<Proforma>();
							proformas.addAll(proformasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdRutaTransporte")) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdRutaTransporte(id_ruta_transporteFK_IdRutaTransporte);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					proformaLogic.getProformasFK_IdRutaTransporte(finalQueryGlobal,pagination,id_ruta_transporteFK_IdRutaTransporte);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdRutaTransporte(id_ruta_transporteFK_IdRutaTransporte);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdRutaTransporte(id_ruta_transporteFK_IdRutaTransporte);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=proformaLogic.getProformas()==null||proformaLogic.getProformas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=proformas==null|| proformas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						proformasAux=new ArrayList<Proforma>();
						proformasAux.addAll(proformaLogic.getProformas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							proformasAux=new ArrayList<Proforma>();
							proformasAux.addAll(proformas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							proformaLogic.getProformasFK_IdRutaTransporte(finalQueryGlobal,pagination,id_ruta_transporteFK_IdRutaTransporte);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdRutaTransporte(id_ruta_transporteFK_IdRutaTransporte);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdRutaTransporte(id_ruta_transporteFK_IdRutaTransporte);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteProformas("FK_IdRutaTransporte",proformaLogic.getProformas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteProformas("FK_IdRutaTransporte",proformas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						proformaLogic.setProformas(new ArrayList<Proforma>());
						proformaLogic.getProformas().addAll(proformasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							proformas=new ArrayList<Proforma>();
							proformas.addAll(proformasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdSubCliente")) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdSubCliente(id_sub_clienteFK_IdSubCliente);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					proformaLogic.getProformasFK_IdSubCliente(finalQueryGlobal,pagination,id_sub_clienteFK_IdSubCliente);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdSubCliente(id_sub_clienteFK_IdSubCliente);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdSubCliente(id_sub_clienteFK_IdSubCliente);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=proformaLogic.getProformas()==null||proformaLogic.getProformas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=proformas==null|| proformas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						proformasAux=new ArrayList<Proforma>();
						proformasAux.addAll(proformaLogic.getProformas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							proformasAux=new ArrayList<Proforma>();
							proformasAux.addAll(proformas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							proformaLogic.getProformasFK_IdSubCliente(finalQueryGlobal,pagination,id_sub_clienteFK_IdSubCliente);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdSubCliente(id_sub_clienteFK_IdSubCliente);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdSubCliente(id_sub_clienteFK_IdSubCliente);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteProformas("FK_IdSubCliente",proformaLogic.getProformas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteProformas("FK_IdSubCliente",proformas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						proformaLogic.setProformas(new ArrayList<Proforma>());
						proformaLogic.getProformas().addAll(proformasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							proformas=new ArrayList<Proforma>();
							proformas.addAll(proformasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdSucursal")) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					proformaLogic.getProformasFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=proformaLogic.getProformas()==null||proformaLogic.getProformas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=proformas==null|| proformas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						proformasAux=new ArrayList<Proforma>();
						proformasAux.addAll(proformaLogic.getProformas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							proformasAux=new ArrayList<Proforma>();
							proformasAux.addAll(proformas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							proformaLogic.getProformasFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteProformas("FK_IdSucursal",proformaLogic.getProformas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteProformas("FK_IdSucursal",proformas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						proformaLogic.setProformas(new ArrayList<Proforma>());
						proformaLogic.getProformas().addAll(proformasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							proformas=new ArrayList<Proforma>();
							proformas.addAll(proformasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoCambio")) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdTipoCambio(id_tipo_cambioFK_IdTipoCambio);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					proformaLogic.getProformasFK_IdTipoCambio(finalQueryGlobal,pagination,id_tipo_cambioFK_IdTipoCambio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdTipoCambio(id_tipo_cambioFK_IdTipoCambio);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdTipoCambio(id_tipo_cambioFK_IdTipoCambio);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=proformaLogic.getProformas()==null||proformaLogic.getProformas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=proformas==null|| proformas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						proformasAux=new ArrayList<Proforma>();
						proformasAux.addAll(proformaLogic.getProformas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							proformasAux=new ArrayList<Proforma>();
							proformasAux.addAll(proformas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							proformaLogic.getProformasFK_IdTipoCambio(finalQueryGlobal,pagination,id_tipo_cambioFK_IdTipoCambio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdTipoCambio(id_tipo_cambioFK_IdTipoCambio);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdTipoCambio(id_tipo_cambioFK_IdTipoCambio);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteProformas("FK_IdTipoCambio",proformaLogic.getProformas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteProformas("FK_IdTipoCambio",proformas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						proformaLogic.setProformas(new ArrayList<Proforma>());
						proformaLogic.getProformas().addAll(proformasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							proformas=new ArrayList<Proforma>();
							proformas.addAll(proformasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoPrecio")) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdTipoPrecio(id_tipo_precioFK_IdTipoPrecio);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					proformaLogic.getProformasFK_IdTipoPrecio(finalQueryGlobal,pagination,id_tipo_precioFK_IdTipoPrecio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdTipoPrecio(id_tipo_precioFK_IdTipoPrecio);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdTipoPrecio(id_tipo_precioFK_IdTipoPrecio);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=proformaLogic.getProformas()==null||proformaLogic.getProformas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=proformas==null|| proformas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						proformasAux=new ArrayList<Proforma>();
						proformasAux.addAll(proformaLogic.getProformas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							proformasAux=new ArrayList<Proforma>();
							proformasAux.addAll(proformas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							proformaLogic.getProformasFK_IdTipoPrecio(finalQueryGlobal,pagination,id_tipo_precioFK_IdTipoPrecio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdTipoPrecio(id_tipo_precioFK_IdTipoPrecio);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdTipoPrecio(id_tipo_precioFK_IdTipoPrecio);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteProformas("FK_IdTipoPrecio",proformaLogic.getProformas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteProformas("FK_IdTipoPrecio",proformas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						proformaLogic.setProformas(new ArrayList<Proforma>());
						proformaLogic.getProformas().addAll(proformasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							proformas=new ArrayList<Proforma>();
							proformas.addAll(proformasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoProforma")) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdTipoProforma(id_tipo_proformaFK_IdTipoProforma);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					proformaLogic.getProformasFK_IdTipoProforma(finalQueryGlobal,pagination,id_tipo_proformaFK_IdTipoProforma);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdTipoProforma(id_tipo_proformaFK_IdTipoProforma);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdTipoProforma(id_tipo_proformaFK_IdTipoProforma);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=proformaLogic.getProformas()==null||proformaLogic.getProformas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=proformas==null|| proformas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						proformasAux=new ArrayList<Proforma>();
						proformasAux.addAll(proformaLogic.getProformas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							proformasAux=new ArrayList<Proforma>();
							proformasAux.addAll(proformas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							proformaLogic.getProformasFK_IdTipoProforma(finalQueryGlobal,pagination,id_tipo_proformaFK_IdTipoProforma);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdTipoProforma(id_tipo_proformaFK_IdTipoProforma);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdTipoProforma(id_tipo_proformaFK_IdTipoProforma);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteProformas("FK_IdTipoProforma",proformaLogic.getProformas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteProformas("FK_IdTipoProforma",proformas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						proformaLogic.setProformas(new ArrayList<Proforma>());
						proformaLogic.getProformas().addAll(proformasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							proformas=new ArrayList<Proforma>();
							proformas.addAll(proformasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoViaTransporte")) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdTipoViaTransporte(id_tipo_via_transporteFK_IdTipoViaTransporte);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					proformaLogic.getProformasFK_IdTipoViaTransporte(finalQueryGlobal,pagination,id_tipo_via_transporteFK_IdTipoViaTransporte);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdTipoViaTransporte(id_tipo_via_transporteFK_IdTipoViaTransporte);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdTipoViaTransporte(id_tipo_via_transporteFK_IdTipoViaTransporte);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=proformaLogic.getProformas()==null||proformaLogic.getProformas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=proformas==null|| proformas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						proformasAux=new ArrayList<Proforma>();
						proformasAux.addAll(proformaLogic.getProformas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							proformasAux=new ArrayList<Proforma>();
							proformasAux.addAll(proformas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							proformaLogic.getProformasFK_IdTipoViaTransporte(finalQueryGlobal,pagination,id_tipo_via_transporteFK_IdTipoViaTransporte);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdTipoViaTransporte(id_tipo_via_transporteFK_IdTipoViaTransporte);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdTipoViaTransporte(id_tipo_via_transporteFK_IdTipoViaTransporte);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteProformas("FK_IdTipoViaTransporte",proformaLogic.getProformas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteProformas("FK_IdTipoViaTransporte",proformas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						proformaLogic.setProformas(new ArrayList<Proforma>());
						proformaLogic.getProformas().addAll(proformasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							proformas=new ArrayList<Proforma>();
							proformas.addAll(proformasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTransporte")) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdTransporte(id_transporteFK_IdTransporte);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					proformaLogic.getProformasFK_IdTransporte(finalQueryGlobal,pagination,id_transporteFK_IdTransporte);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdTransporte(id_transporteFK_IdTransporte);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdTransporte(id_transporteFK_IdTransporte);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=proformaLogic.getProformas()==null||proformaLogic.getProformas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=proformas==null|| proformas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						proformasAux=new ArrayList<Proforma>();
						proformasAux.addAll(proformaLogic.getProformas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							proformasAux=new ArrayList<Proforma>();
							proformasAux.addAll(proformas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							proformaLogic.getProformasFK_IdTransporte(finalQueryGlobal,pagination,id_transporteFK_IdTransporte);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdTransporte(id_transporteFK_IdTransporte);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdTransporte(id_transporteFK_IdTransporte);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteProformas("FK_IdTransporte",proformaLogic.getProformas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteProformas("FK_IdTransporte",proformas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						proformaLogic.setProformas(new ArrayList<Proforma>());
						proformaLogic.getProformas().addAll(proformasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							proformas=new ArrayList<Proforma>();
							proformas.addAll(proformasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdUsuario")) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdUsuario(id_usuarioFK_IdUsuario);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					proformaLogic.getProformasFK_IdUsuario(finalQueryGlobal,pagination,id_usuarioFK_IdUsuario);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdUsuario(id_usuarioFK_IdUsuario);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdUsuario(id_usuarioFK_IdUsuario);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=proformaLogic.getProformas()==null||proformaLogic.getProformas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=proformas==null|| proformas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						proformasAux=new ArrayList<Proforma>();
						proformasAux.addAll(proformaLogic.getProformas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							proformasAux=new ArrayList<Proforma>();
							proformasAux.addAll(proformas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							proformaLogic.getProformasFK_IdUsuario(finalQueryGlobal,pagination,id_usuarioFK_IdUsuario);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdUsuario(id_usuarioFK_IdUsuario);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdUsuario(id_usuarioFK_IdUsuario);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteProformas("FK_IdUsuario",proformaLogic.getProformas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteProformas("FK_IdUsuario",proformas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						proformaLogic.setProformas(new ArrayList<Proforma>());
						proformaLogic.getProformas().addAll(proformasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							proformas=new ArrayList<Proforma>();
							proformas.addAll(proformasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdVendedor")) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdVendedor(id_vendedorFK_IdVendedor);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					proformaLogic.getProformasFK_IdVendedor(finalQueryGlobal,pagination,id_vendedorFK_IdVendedor);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdVendedor(id_vendedorFK_IdVendedor);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdVendedor(id_vendedorFK_IdVendedor);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=proformaLogic.getProformas()==null||proformaLogic.getProformas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=proformas==null|| proformas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						proformasAux=new ArrayList<Proforma>();
						proformasAux.addAll(proformaLogic.getProformas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							proformasAux=new ArrayList<Proforma>();
							proformasAux.addAll(proformas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							proformaLogic.getProformasFK_IdVendedor(finalQueryGlobal,pagination,id_vendedorFK_IdVendedor);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdVendedor(id_vendedorFK_IdVendedor);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ProformaConstantesFunciones.getDetalleIndiceFK_IdVendedor(id_vendedorFK_IdVendedor);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteProformas("FK_IdVendedor",proformaLogic.getProformas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteProformas("FK_IdVendedor",proformas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						proformaLogic.setProformas(new ArrayList<Proforma>());
						proformaLogic.getProformas().addAll(proformasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							proformas=new ArrayList<Proforma>();
							proformas.addAll(proformasAux);
						}
						//ARCHITECTURE
					}
				}

			} 
		
		
		
		this.redimensionarTablaDatos();
		//this.refrescarForeignKeysDescripcionesProforma();
		
		
		if(this.conTotales) {
			this.crearFilaTotales();
		}		
		} catch (JRException e) {
			throw e;
		} catch(Exception e) {
			throw e;
      	} finally {
      		//this.finishProcessProforma();
      	}
		
	}				
	
	public void redimensionarTablaDatos() throws Exception {
		int iSizeTabla=0;
				
		iSizeTabla=this.getSizeTablaDatos();
		
		//ARCHITECTURE
		/*
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=proformaLogic.getProformas().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=proformas.size();
		}
		*/
		//ARCHITECTURE
											
		this.redimensionarTablaDatos(iSizeTabla);		
	}
	
	public Integer getSizeTablaDatos() throws Exception {
		Integer iSizeTabla=0;
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=proformaLogic.getProformas().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=proformas.size();
		}
		//ARCHITECTURE
											
		return iSizeTabla;		
	}
	
			
	public Boolean permiteMantenimiento(Proforma proforma) {
		Boolean permite=true;
		
		if(this.proforma.getsType().equals(Constantes2.S_TOTALES)) {
			permite=false;
		}
		
		return permite;
	}
	
	public void traerValoresTablaTotales() throws Exception {
	}
	
	
	public void traerValoresTablaOrderBy() throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.arrOrderBy=ProformaConstantesFunciones.getOrderByListaProforma();							
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.arrOrderBy=ProformaConstantesFunciones.getOrderByListaProforma();
		}		
	}
	
	
	public Boolean existeFilaTotales() throws Exception {
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(Proforma proforma:proformaLogic.getProformas()) {
				if(proforma.getsType().equals(Constantes2.S_TOTALES)) {
					proformaTotales=proforma;
					existe=true;
					break;
				}
			}
								
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(Proforma proforma:this.proformas) {
				if(proforma.getsType().equals(Constantes2.S_TOTALES)) {
					proformaTotales=proforma;
					existe=true;
					break;
				}
			}
		}
		
		return existe;
	}
	
	public void crearFilaTotales() throws Exception {
		Boolean existe=false;
		
		existe=this.existeFilaTotales();
		
		if(!existe) {
			//SI NO ES UNO A UNO SE CREA FILA TOTALES
			this.proformaAux=new Proforma();
			this.proformaAux.setsType(Constantes2.S_TOTALES);
			this.proformaAux.setIsNew(false);
			this.proformaAux.setIsChanged(false);
			this.proformaAux.setIsDeleted(false);
				
			if(Constantes.ISUSAEJBLOGICLAYER) {
				ProformaConstantesFunciones.TotalizarValoresFilaProforma(this.proformaLogic.getProformas(),this.proformaAux);
				
				this.proformaLogic.getProformas().add(this.proformaAux);
				
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				ProformaConstantesFunciones.TotalizarValoresFilaProforma(this.proformas,this.proformaAux);
				
				this.proformas.add(this.proformaAux);
			}
		}
	}
	
	public void quitarFilaTotales() throws Exception {
		proformaTotales=new Proforma();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.proformaLogic.getProformas().remove(proformaTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.proformas.remove(proformaTotales);
			}
		}
	}
	
	public void actualizarFilaTotales() throws Exception {
		proformaTotales=new Proforma();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(Proforma proforma:proformaLogic.getProformas()) {
				if(proforma.getsType().equals(Constantes2.S_TOTALES)) {
					proformaTotales=proforma;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				ProformaConstantesFunciones.TotalizarValoresFilaProforma(this.proformaLogic.getProformas(),proformaTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(Proforma proforma:this.proformas) {
				if(proforma.getsType().equals(Constantes2.S_TOTALES)) {
					proformaTotales=proforma;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				ProformaConstantesFunciones.TotalizarValoresFilaProforma(this.proformas,proformaTotales);
			}
		}
	}		
	
	public void recargarInformacion()throws Exception {
		try {
			sAccionBusqueda="Todos";
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
		}	
	}		
	
	
	public void getProformasFK_IdAnio()throws Exception {
		try {
			sAccionBusqueda="FK_IdAnio";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getProformasFK_IdCentroCosto()throws Exception {
		try {
			sAccionBusqueda="FK_IdCentroCosto";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getProformasFK_IdCliente()throws Exception {
		try {
			sAccionBusqueda="FK_IdCliente";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getProformasFK_IdConsignatario()throws Exception {
		try {
			sAccionBusqueda="FK_IdConsignatario";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getProformasFK_IdEjercicio()throws Exception {
		try {
			sAccionBusqueda="FK_IdEjercicio";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getProformasFK_IdEmpleado()throws Exception {
		try {
			sAccionBusqueda="FK_IdEmpleado";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getProformasFK_IdEmpresa()throws Exception {
		try {
			sAccionBusqueda="FK_IdEmpresa";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getProformasFK_IdEstadoProforma()throws Exception {
		try {
			sAccionBusqueda="FK_IdEstadoProforma";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getProformasFK_IdFormato()throws Exception {
		try {
			sAccionBusqueda="FK_IdFormato";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getProformasFK_IdMes()throws Exception {
		try {
			sAccionBusqueda="FK_IdMes";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getProformasFK_IdMoneda()throws Exception {
		try {
			sAccionBusqueda="FK_IdMoneda";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getProformasFK_IdPeriodo()throws Exception {
		try {
			sAccionBusqueda="FK_IdPeriodo";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getProformasFK_IdRutaTransporte()throws Exception {
		try {
			sAccionBusqueda="FK_IdRutaTransporte";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getProformasFK_IdSubCliente()throws Exception {
		try {
			sAccionBusqueda="FK_IdSubCliente";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getProformasFK_IdSucursal()throws Exception {
		try {
			sAccionBusqueda="FK_IdSucursal";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getProformasFK_IdTipoCambio()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoCambio";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getProformasFK_IdTipoPrecio()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoPrecio";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getProformasFK_IdTipoProforma()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoProforma";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getProformasFK_IdTipoViaTransporte()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoViaTransporte";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getProformasFK_IdTransporte()throws Exception {
		try {
			sAccionBusqueda="FK_IdTransporte";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getProformasFK_IdUsuario()throws Exception {
		try {
			sAccionBusqueda="FK_IdUsuario";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getProformasFK_IdVendedor()throws Exception {
		try {
			sAccionBusqueda="FK_IdVendedor";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	
	
	public void getProformasFK_IdAnio(String sFinalQuery,Long id_anio)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					proformaLogic.getProformasFK_IdAnio(sFinalQuery,this.pagination,id_anio);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getProformasFK_IdCentroCosto(String sFinalQuery,Long id_centro_costo)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					proformaLogic.getProformasFK_IdCentroCosto(sFinalQuery,this.pagination,id_centro_costo);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getProformasFK_IdCliente(String sFinalQuery,Long id_cliente)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					proformaLogic.getProformasFK_IdCliente(sFinalQuery,this.pagination,id_cliente);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getProformasFK_IdConsignatario(String sFinalQuery,Long id_consignatario)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					proformaLogic.getProformasFK_IdConsignatario(sFinalQuery,this.pagination,id_consignatario);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getProformasFK_IdEjercicio(String sFinalQuery,Long id_ejercicio)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					proformaLogic.getProformasFK_IdEjercicio(sFinalQuery,this.pagination,id_ejercicio);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getProformasFK_IdEmpleado(String sFinalQuery,Long id_empleado)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					proformaLogic.getProformasFK_IdEmpleado(sFinalQuery,this.pagination,id_empleado);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getProformasFK_IdEmpresa(String sFinalQuery,Long id_empresa)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					proformaLogic.getProformasFK_IdEmpresa(sFinalQuery,this.pagination,id_empresa);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getProformasFK_IdEstadoProforma(String sFinalQuery,Long id_estado_proforma)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					proformaLogic.getProformasFK_IdEstadoProforma(sFinalQuery,this.pagination,id_estado_proforma);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getProformasFK_IdFormato(String sFinalQuery,Long id_formato)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					proformaLogic.getProformasFK_IdFormato(sFinalQuery,this.pagination,id_formato);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getProformasFK_IdMes(String sFinalQuery,Long id_mes)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					proformaLogic.getProformasFK_IdMes(sFinalQuery,this.pagination,id_mes);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getProformasFK_IdMoneda(String sFinalQuery,Long id_moneda)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					proformaLogic.getProformasFK_IdMoneda(sFinalQuery,this.pagination,id_moneda);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getProformasFK_IdPeriodo(String sFinalQuery,Long id_periodo)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					proformaLogic.getProformasFK_IdPeriodo(sFinalQuery,this.pagination,id_periodo);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getProformasFK_IdRutaTransporte(String sFinalQuery,Long id_ruta_transporte)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					proformaLogic.getProformasFK_IdRutaTransporte(sFinalQuery,this.pagination,id_ruta_transporte);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getProformasFK_IdSubCliente(String sFinalQuery,Long id_sub_cliente)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					proformaLogic.getProformasFK_IdSubCliente(sFinalQuery,this.pagination,id_sub_cliente);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getProformasFK_IdSucursal(String sFinalQuery,Long id_sucursal)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					proformaLogic.getProformasFK_IdSucursal(sFinalQuery,this.pagination,id_sucursal);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getProformasFK_IdTipoCambio(String sFinalQuery,Long id_tipo_cambio)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					proformaLogic.getProformasFK_IdTipoCambio(sFinalQuery,this.pagination,id_tipo_cambio);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getProformasFK_IdTipoPrecio(String sFinalQuery,Long id_tipo_precio)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					proformaLogic.getProformasFK_IdTipoPrecio(sFinalQuery,this.pagination,id_tipo_precio);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getProformasFK_IdTipoProforma(String sFinalQuery,Long id_tipo_proforma)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					proformaLogic.getProformasFK_IdTipoProforma(sFinalQuery,this.pagination,id_tipo_proforma);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getProformasFK_IdTipoViaTransporte(String sFinalQuery,Long id_tipo_via_transporte)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					proformaLogic.getProformasFK_IdTipoViaTransporte(sFinalQuery,this.pagination,id_tipo_via_transporte);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getProformasFK_IdTransporte(String sFinalQuery,Long id_transporte)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					proformaLogic.getProformasFK_IdTransporte(sFinalQuery,this.pagination,id_transporte);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getProformasFK_IdUsuario(String sFinalQuery,Long id_usuario)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					proformaLogic.getProformasFK_IdUsuario(sFinalQuery,this.pagination,id_usuario);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getProformasFK_IdVendedor(String sFinalQuery,Long id_vendedor)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					proformaLogic.getProformasFK_IdVendedor(sFinalQuery,this.pagination,id_vendedor);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	
	public void onLoad()throws Exception {		
		try {		
			isEntroOnLoad=true;
			//INTENTA TRAER DATOS DE BUSQUEDA ANTERIOR
			this.traerDatosBusquedaDesdeSession();
					
			//SINO SE CUMPLE VIENE DE PADRE FOREIGN O BUSQUEDA ANTIGUA
			if(this.sAccionBusqueda.equals("")) {
				this.sAccionBusqueda="Todos";
			}
								
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch (Exception e) {
			throw e;
		}
	}		
	
	public void inicializarPermisosProforma() {
		this.isPermisoTodoProforma=false;
		this.isPermisoNuevoProforma=false;
		this.isPermisoActualizarProforma=false;
		this.isPermisoActualizarOriginalProforma=false;
		this.isPermisoEliminarProforma=false;
		this.isPermisoGuardarCambiosProforma=false;
		this.isPermisoConsultaProforma=false;
		this.isPermisoBusquedaProforma=false;
		this.isPermisoReporteProforma=false;		
		this.isPermisoOrdenProforma=false;		
		this.isPermisoPaginacionMedioProforma=false;		
		this.isPermisoPaginacionAltoProforma=false;
		this.isPermisoPaginacionTodoProforma=false;
		this.isPermisoCopiarProforma=false;		
		this.isPermisoVerFormProforma=false;		
		this.isPermisoDuplicarProforma=false;		
		this.isPermisoOrdenProforma=false;		
	}
	
	public void setPermisosUsuarioProforma(Boolean isPermiso) {
		this.isPermisoTodoProforma=isPermiso;
		this.isPermisoNuevoProforma=isPermiso;
		this.isPermisoActualizarProforma=isPermiso;
		this.isPermisoActualizarOriginalProforma=isPermiso;
		this.isPermisoEliminarProforma=isPermiso;
		this.isPermisoGuardarCambiosProforma=isPermiso;
		this.isPermisoConsultaProforma=isPermiso;
		this.isPermisoBusquedaProforma=isPermiso;
		this.isPermisoReporteProforma=isPermiso;
		this.isPermisoOrdenProforma=isPermiso;		
		this.isPermisoPaginacionMedioProforma=isPermiso;		
		this.isPermisoPaginacionAltoProforma=isPermiso;		
		this.isPermisoPaginacionTodoProforma=isPermiso;		
		this.isPermisoCopiarProforma=isPermiso;		
		this.isPermisoVerFormProforma=isPermiso;		
		this.isPermisoDuplicarProforma=isPermiso;
		this.isPermisoOrdenProforma=isPermiso;
	}
	
	public void setPermisosMantenimientoUsuarioProforma(Boolean isPermiso) {
		//this.isPermisoTodoProforma=isPermiso;
		this.isPermisoNuevoProforma=isPermiso;
		this.isPermisoActualizarProforma=isPermiso;
		this.isPermisoActualizarOriginalProforma=isPermiso;
		this.isPermisoEliminarProforma=isPermiso;
		this.isPermisoGuardarCambiosProforma=isPermiso;
		//this.isPermisoConsultaProforma=isPermiso;
		//this.isPermisoBusquedaProforma=isPermiso;
		//this.isPermisoReporteProforma=isPermiso;
		//this.isPermisoOrdenProforma=isPermiso;		
		//this.isPermisoPaginacionMedioProforma=isPermiso;		
		//this.isPermisoPaginacionAltoProforma=isPermiso;		
		//this.isPermisoPaginacionTodoProforma=isPermiso;		
		//this.isPermisoCopiarProforma=isPermiso;		
		//this.isPermisoDuplicarProforma=isPermiso;
		//this.isPermisoOrdenProforma=isPermiso;
	}
	
	public void inicializarSetPermisosUsuarioProformaClasesRelacionadas() throws Exception {
		ArrayList<String> arrPaginas=new ArrayList<String>();		
		ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
		
		arrPaginas.add(TerminoProformaConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(DetalleProformaConstantesFunciones.SNOMBREOPCION);
		
		if(ProformaJInternalFrame.CON_LLAMADA_SIMPLE) {
			this.opcionsRelacionadas.addAll(this.sistemaReturnGeneral.getOpcionsRelacionadas());
			
		} else {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				opcionsFinal=sistemaLogicAdditional.tienePermisosOpcionesEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, arrPaginas);
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
			
			this.opcionsRelacionadas.addAll(opcionsFinal);
		}
		
		

		this.isTienePermisosTerminoProforma=false;
		this.isTienePermisosTerminoProforma=this.verificarGetPermisosUsuarioOpcionProformaClaseRelacionada(this.opcionsRelacionadas,TerminoProformaConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosDetalleProforma=false;
		this.isTienePermisosDetalleProforma=this.verificarGetPermisosUsuarioOpcionProformaClaseRelacionada(this.opcionsRelacionadas,DetalleProformaConstantesFunciones.SNOMBREOPCION);
		
	}
	
	public Boolean tienePermisosUsuarioEnPaginaWebProforma(String sPagina) throws Exception {
		Boolean tienePermisos=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			tienePermisos=sistemaLogicAdditional.tienePermisosEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, sPagina);
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		
		return tienePermisos;
	}
	
	public void inicializarSetPermisosUsuarioProformaClasesRelacionadas(Boolean conPermiso) throws Exception {
		
		this.isTienePermisosTerminoProforma=conPermiso;
		this.isTienePermisosDetalleProforma=conPermiso;
	}
	
	public Boolean verificarGetPermisosUsuarioProformaClaseRelacionada(ArrayList<String> arrPaginasFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioClaseRelacionada(arrPaginasFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public Boolean verificarGetPermisosUsuarioOpcionProformaClaseRelacionada(List<Opcion> opcionsFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioOpcionClaseRelacionada(opcionsFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public void actualizarTabsSetPermisosUsuarioProformaClasesRelacionadas() throws Exception {
		

		if(!this.isTienePermisosTerminoProforma && this.jInternalFrameDetalleFormProforma!=null && this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormProforma.jTabbedPaneRelacionesProforma.remove(this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosDetalleProforma && this.jInternalFrameDetalleFormProforma!=null && this.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormProforma.jTabbedPaneRelacionesProforma.remove(this.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.getContentPane());
		}
	}
	
	public void setPermisosUsuarioProforma() throws Exception {
		
		PerfilOpcion perfilOpcionUsuario=new PerfilOpcion();		
		Long idOpcion=this.opcionActual.getId();
		
		if(ProformaJInternalFrame.CON_LLAMADA_SIMPLE) {
			perfilOpcionUsuario=this.sistemaReturnGeneral.getPerfilOpcion();
			
		} else {
			if(this.proformaSessionBean.getEsGuardarRelacionado()) {
				idOpcion=0L;
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				perfilOpcionUsuario=sistemaLogicAdditional.traerPermisosPaginaWebPerfilOpcion(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, ProformaConstantesFunciones.SNOMBREOPCION,idOpcion);				
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
		}
		
		if(perfilOpcionUsuario!=null && perfilOpcionUsuario.getId()>0) {
			this.isPermisoNuevoProforma=perfilOpcionUsuario.getingreso()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarProforma=perfilOpcionUsuario.getmodificacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarOriginalProforma=this.isPermisoActualizarProforma;
			this.isPermisoEliminarProforma=perfilOpcionUsuario.geteliminacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoGuardarCambiosProforma=perfilOpcionUsuario.getguardar_cambios()||perfilOpcionUsuario.gettodo();
			this.isPermisoConsultaProforma=perfilOpcionUsuario.getconsulta()||perfilOpcionUsuario.gettodo();
			this.isPermisoBusquedaProforma=perfilOpcionUsuario.getbusqueda()||perfilOpcionUsuario.gettodo();
			this.isPermisoTodoProforma=perfilOpcionUsuario.gettodo()||perfilOpcionUsuario.gettodo();
			this.isPermisoReporteProforma=perfilOpcionUsuario.getreporte()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenProforma=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionMedioProforma=perfilOpcionUsuario.getpaginacion_medio()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionAltoProforma=perfilOpcionUsuario.getpaginacion_alto()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionTodoProforma=perfilOpcionUsuario.getpaginacion_todo()||perfilOpcionUsuario.gettodo();
			this.isPermisoCopiarProforma=perfilOpcionUsuario.getcopiar()||perfilOpcionUsuario.gettodo();
			this.isPermisoVerFormProforma=true;//perfilOpcionUsuario.getver_form()||perfilOpcionUsuario.gettodo();
			this.isPermisoDuplicarProforma=perfilOpcionUsuario.getduplicar()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenProforma=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			
			if(this.proformaSessionBean.getEsGuardarRelacionado()) {
				this.opcionActual.setId(perfilOpcionUsuario.getid_opcion());
				
				this.jTableDatosProforma.setToolTipText(this.jTableDatosProforma.getToolTipText()+"_"+perfilOpcionUsuario.getid_opcion());		
			}
		} else {
			this.setPermisosUsuarioProforma(false);
		}
		
		//SI SE NECESITA PONER TODOS LOS PERMISOS POR DEFECTO
		//
		
	}
	
	public void setAccionesUsuarioProforma(Boolean esParaAccionesFormulario) throws Exception {		
		Reporte reporte=null;
		
		if(!esParaAccionesFormulario) {
			this.accions=new ArrayList<Accion>();
			
			if(ProformaJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accions=this.sistemaReturnGeneral.getAccions();
				
				
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accions=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,false);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accions.size()>0) {			
				for(Accion accion:this.accions) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
		
		
					this.tiposAcciones.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAcciones.add(reporte);
			
		} else {
			//ACCIONES FORMULARIO
			this.accionsFormulario=new ArrayList<Accion>();
			
			if(ProformaJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accionsFormulario=this.sistemaReturnGeneral.getAccionsFormulario();
			
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accionsFormulario=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,true);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accionsFormulario.size()>0) {			
				for(Accion accion:this.accionsFormulario) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
					
					this.tiposAccionesFormulario.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAccionesFormulario.add(reporte);
		}				
	}	 	
	
	public void setRelacionesUsuarioProforma() throws Exception {
		Reporte reporte=null;
		
		

		if(this.isTienePermisosTerminoProforma && this.proformaConstantesFunciones.mostrarTerminoProformaProforma && !ProformaConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Termino Proforma");
			reporte.setsDescripcion("Termino Proforma");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosDetalleProforma && this.proformaConstantesFunciones.mostrarDetalleProformaProforma && !ProformaConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Detalle Proforma");
			reporte.setsDescripcion("Detalle Proforma");
			this.tiposRelaciones.add(reporte);
		}
		
		
		//ORDENAR ALFABETICAMENTE
		Collections.sort(this.tiposRelaciones, new ReporteComparator());
		/*
		reporte=new Reporte();
		reporte.setsCodigo(accion.getcodigo());
		reporte.setsDescripcion(accion.getnombre());
			
		this.tiposRelaciones.add(reporte);
		*/
	}	
	
		
	@SuppressWarnings({ "unchecked", "rawtypes" } )
	public void inicializarCombosForeignKeyProformaListas()throws Exception {
		try	{						
			
				this.empresasForeignKey=new ArrayList();
				this.sucursalsForeignKey=new ArrayList();
				this.usuariosForeignKey=new ArrayList();
				this.ejerciciosForeignKey=new ArrayList();
				this.periodosForeignKey=new ArrayList();
				this.aniosForeignKey=new ArrayList();
				this.messForeignKey=new ArrayList();
				this.monedasForeignKey=new ArrayList();
				this.empleadosForeignKey=new ArrayList();
				this.formatosForeignKey=new ArrayList();
				this.estadoproformasForeignKey=new ArrayList();
				this.clientesForeignKey=new ArrayList();
				this.tipopreciosForeignKey=new ArrayList();
				this.vendedorsForeignKey=new ArrayList();
				this.subclientesForeignKey=new ArrayList();
				this.tipoviatransportesForeignKey=new ArrayList();
				this.transportesForeignKey=new ArrayList();
				this.rutatransportesForeignKey=new ArrayList();
				this.centrocostosForeignKey=new ArrayList();
				this.tipoproformasForeignKey=new ArrayList();
				this.consignatariosForeignKey=new ArrayList();
				this.tipocambiosForeignKey=new ArrayList();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void cargarCombosTodosForeignKeyProformaListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			String sFinalQueryCombo="";
			
			Modulo  moduloActualAux=new Modulo();
			
			if(ProformaJInternalFrame.ISLOAD_FKLOTE) {
				this.cargarCombosLoteForeignKeyProformaListas(false);
			} else {
			
				this.cargarCombosForeignKeyEmpresaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeySucursalListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyUsuarioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEjercicioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyPeriodoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyAnioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyMesListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyMonedaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEmpleadoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyFormatoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEstadoProformaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyClienteListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoPrecioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyVendedorListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeySubClienteListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoViaTransporteListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTransporteListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyRutaTransporteListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCentroCostoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoProformaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyConsignatarioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoCambioListas(cargarCombosDependencia,sFinalQueryCombo);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	

	public void cargarCombosForeignKeyEmpresaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EmpresaConstantesFunciones.SFINALQUERY;

				this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeySucursalListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=SucursalConstantesFunciones.SFINALQUERY;

				this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyUsuarioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.usuariosForeignKey==null||this.usuariosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=UsuarioConstantesFunciones.getArrayColumnasGlobalesUsuario(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,UsuarioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=UsuarioConstantesFunciones.SFINALQUERY;

				this.cargarCombosUsuariosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEjercicioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.ejerciciosForeignKey==null||this.ejerciciosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EjercicioConstantesFunciones.getArrayColumnasGlobalesEjercicio(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EjercicioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EjercicioConstantesFunciones.SFINALQUERY;

				this.cargarCombosEjerciciosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyPeriodoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.periodosForeignKey==null||this.periodosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=PeriodoConstantesFunciones.getArrayColumnasGlobalesPeriodo(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PeriodoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=PeriodoConstantesFunciones.SFINALQUERY;

				this.cargarCombosPeriodosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyAnioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.aniosForeignKey==null||this.aniosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=AnioConstantesFunciones.getArrayColumnasGlobalesAnio(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,AnioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=AnioConstantesFunciones.SFINALQUERY;

				this.cargarCombosAniosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyMesListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.messForeignKey==null||this.messForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=MesConstantesFunciones.getArrayColumnasGlobalesMes(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,MesConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=MesConstantesFunciones.SFINALQUERY;

				this.cargarCombosMessForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyMonedaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.monedasForeignKey==null||this.monedasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=MonedaConstantesFunciones.getArrayColumnasGlobalesMoneda(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,MonedaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=MonedaConstantesFunciones.SFINALQUERY;

				this.cargarCombosMonedasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEmpleadoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.empleadosForeignKey==null||this.empleadosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EmpleadoConstantesFunciones.getArrayColumnasGlobalesEmpleado(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpleadoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EmpleadoConstantesFunciones.SFINALQUERY;

				this.cargarCombosEmpleadosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyFormatoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.formatosForeignKey==null||this.formatosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=FormatoConstantesFunciones.getArrayColumnasGlobalesFormato(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,FormatoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=FormatoConstantesFunciones.SFINALQUERY;

				this.cargarCombosFormatosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEstadoProformaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.estadoproformasForeignKey==null||this.estadoproformasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EstadoProformaConstantesFunciones.getArrayColumnasGlobalesEstadoProforma(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EstadoProformaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EstadoProformaConstantesFunciones.SFINALQUERY;

				this.cargarCombosEstadoProformasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyClienteListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.clientesForeignKey==null||this.clientesForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=ClienteConstantesFunciones.getArrayColumnasGlobalesCliente(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ClienteConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=ClienteConstantesFunciones.SFINALQUERY;

				this.cargarCombosClientesForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoPrecioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipopreciosForeignKey==null||this.tipopreciosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoPrecioConstantesFunciones.getArrayColumnasGlobalesTipoPrecio(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoPrecioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoPrecioConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoPreciosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyVendedorListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.vendedorsForeignKey==null||this.vendedorsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=VendedorConstantesFunciones.getArrayColumnasGlobalesVendedor(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,VendedorConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=VendedorConstantesFunciones.SFINALQUERY;

				this.cargarCombosVendedorsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeySubClienteListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.subclientesForeignKey==null||this.subclientesForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=SubClienteConstantesFunciones.getArrayColumnasGlobalesSubCliente(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SubClienteConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=SubClienteConstantesFunciones.SFINALQUERY;

				this.cargarCombosSubClientesForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoViaTransporteListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipoviatransportesForeignKey==null||this.tipoviatransportesForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoViaTransporteConstantesFunciones.getArrayColumnasGlobalesTipoViaTransporte(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoViaTransporteConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoViaTransporteConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoViaTransportesForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransporteListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.transportesForeignKey==null||this.transportesForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TransporteConstantesFunciones.getArrayColumnasGlobalesTransporte(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransporteConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TransporteConstantesFunciones.SFINALQUERY;

				this.cargarCombosTransportesForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyRutaTransporteListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.rutatransportesForeignKey==null||this.rutatransportesForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=RutaTransporteConstantesFunciones.getArrayColumnasGlobalesRutaTransporte(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,RutaTransporteConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=RutaTransporteConstantesFunciones.SFINALQUERY;

				this.cargarCombosRutaTransportesForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCentroCostoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.centrocostosForeignKey==null||this.centrocostosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CentroCostoConstantesFunciones.getArrayColumnasGlobalesCentroCosto(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CentroCostoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CentroCostoConstantesFunciones.SFINALQUERY;

				this.cargarCombosCentroCostosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoProformaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipoproformasForeignKey==null||this.tipoproformasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoProformaConstantesFunciones.getArrayColumnasGlobalesTipoProforma(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoProformaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoProformaConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoProformasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyConsignatarioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.consignatariosForeignKey==null||this.consignatariosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=ConsignatarioConstantesFunciones.getArrayColumnasGlobalesConsignatario(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ConsignatarioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=ConsignatarioConstantesFunciones.SFINALQUERY;

				this.cargarCombosConsignatariosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoCambioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipocambiosForeignKey==null||this.tipocambiosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoCambioConstantesFunciones.getArrayColumnasGlobalesTipoCambio(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoCambioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoCambioConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoCambiosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarCombosLoteForeignKeyProformaListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			Modulo  moduloActualAux=new Modulo();
			
			
			ProformaParameterReturnGeneral proformaReturnGeneral=new ProformaParameterReturnGeneral();
						
			


				String finalQueryGlobalEmpresa="";

				if(((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0) && this.proformaConstantesFunciones.cargarid_empresaProforma)
					 || (this.esRecargarFks && this.proformaConstantesFunciones.cargarid_empresaProforma)) {

					if(!this.proformaSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEmpresa=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

						finalQueryGlobalEmpresa=Funciones.GetFinalQueryAppend(finalQueryGlobalEmpresa, "");
						finalQueryGlobalEmpresa+=EmpresaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEmpresa=" WHERE " + ConstantesSql.ID + "="+proformaSessionBean.getlidEmpresaActual();
					}
				} else {
					finalQueryGlobalEmpresa="NONE";
				}


				String finalQueryGlobalSucursal="";

				if(((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0) && this.proformaConstantesFunciones.cargarid_sucursalProforma)
					 || (this.esRecargarFks && this.proformaConstantesFunciones.cargarid_sucursalProforma)) {

					if(!this.proformaSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalSucursal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

						finalQueryGlobalSucursal=Funciones.GetFinalQueryAppend(finalQueryGlobalSucursal, "");
						finalQueryGlobalSucursal+=SucursalConstantesFunciones.SFINALQUERY;

						//this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalSucursal=" WHERE " + ConstantesSql.ID + "="+proformaSessionBean.getlidSucursalActual();
					}
				} else {
					finalQueryGlobalSucursal="NONE";
				}


				String finalQueryGlobalUsuario="";

				if(((this.usuariosForeignKey==null||this.usuariosForeignKey.size()<=0) && this.proformaConstantesFunciones.cargarid_usuarioProforma)
					 || (this.esRecargarFks && this.proformaConstantesFunciones.cargarid_usuarioProforma)) {

					if(!this.proformaSessionBean.getisBusquedaDesdeForeignKeySesionUsuario()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=UsuarioConstantesFunciones.getArrayColumnasGlobalesUsuario(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalUsuario=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,UsuarioConstantesFunciones.TABLENAME);

						finalQueryGlobalUsuario=Funciones.GetFinalQueryAppend(finalQueryGlobalUsuario, "");
						finalQueryGlobalUsuario+=UsuarioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosUsuariosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalUsuario=" WHERE " + ConstantesSql.ID + "="+proformaSessionBean.getlidUsuarioActual();
					}
				} else {
					finalQueryGlobalUsuario="NONE";
				}


				String finalQueryGlobalEjercicio="";

				if(((this.ejerciciosForeignKey==null||this.ejerciciosForeignKey.size()<=0) && this.proformaConstantesFunciones.cargarid_ejercicioProforma)
					 || (this.esRecargarFks && this.proformaConstantesFunciones.cargarid_ejercicioProforma)) {

					if(!this.proformaSessionBean.getisBusquedaDesdeForeignKeySesionEjercicio()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EjercicioConstantesFunciones.getArrayColumnasGlobalesEjercicio(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEjercicio=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EjercicioConstantesFunciones.TABLENAME);

						finalQueryGlobalEjercicio=Funciones.GetFinalQueryAppend(finalQueryGlobalEjercicio, "");
						finalQueryGlobalEjercicio+=EjercicioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEjerciciosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEjercicio=" WHERE " + ConstantesSql.ID + "="+proformaSessionBean.getlidEjercicioActual();
					}
				} else {
					finalQueryGlobalEjercicio="NONE";
				}


				String finalQueryGlobalPeriodo="";

				if(((this.periodosForeignKey==null||this.periodosForeignKey.size()<=0) && this.proformaConstantesFunciones.cargarid_periodoProforma)
					 || (this.esRecargarFks && this.proformaConstantesFunciones.cargarid_periodoProforma)) {

					if(!this.proformaSessionBean.getisBusquedaDesdeForeignKeySesionPeriodo()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=PeriodoConstantesFunciones.getArrayColumnasGlobalesPeriodo(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalPeriodo=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PeriodoConstantesFunciones.TABLENAME);

						finalQueryGlobalPeriodo=Funciones.GetFinalQueryAppend(finalQueryGlobalPeriodo, "");
						finalQueryGlobalPeriodo+=PeriodoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosPeriodosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalPeriodo=" WHERE " + ConstantesSql.ID + "="+proformaSessionBean.getlidPeriodoActual();
					}
				} else {
					finalQueryGlobalPeriodo="NONE";
				}


				String finalQueryGlobalAnio="";

				if(((this.aniosForeignKey==null||this.aniosForeignKey.size()<=0) && this.proformaConstantesFunciones.cargarid_anioProforma)
					 || (this.esRecargarFks && this.proformaConstantesFunciones.cargarid_anioProforma)) {

					if(!this.proformaSessionBean.getisBusquedaDesdeForeignKeySesionAnio()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=AnioConstantesFunciones.getArrayColumnasGlobalesAnio(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalAnio=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,AnioConstantesFunciones.TABLENAME);

						finalQueryGlobalAnio=Funciones.GetFinalQueryAppend(finalQueryGlobalAnio, "");
						finalQueryGlobalAnio+=AnioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosAniosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalAnio=" WHERE " + ConstantesSql.ID + "="+proformaSessionBean.getlidAnioActual();
					}
				} else {
					finalQueryGlobalAnio="NONE";
				}


				String finalQueryGlobalMes="";

				if(((this.messForeignKey==null||this.messForeignKey.size()<=0) && this.proformaConstantesFunciones.cargarid_mesProforma)
					 || (this.esRecargarFks && this.proformaConstantesFunciones.cargarid_mesProforma)) {

					if(!this.proformaSessionBean.getisBusquedaDesdeForeignKeySesionMes()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=MesConstantesFunciones.getArrayColumnasGlobalesMes(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalMes=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,MesConstantesFunciones.TABLENAME);

						finalQueryGlobalMes=Funciones.GetFinalQueryAppend(finalQueryGlobalMes, "");
						finalQueryGlobalMes+=MesConstantesFunciones.SFINALQUERY;

						//this.cargarCombosMessForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalMes=" WHERE " + ConstantesSql.ID + "="+proformaSessionBean.getlidMesActual();
					}
				} else {
					finalQueryGlobalMes="NONE";
				}


				String finalQueryGlobalMoneda="";

				if(((this.monedasForeignKey==null||this.monedasForeignKey.size()<=0) && this.proformaConstantesFunciones.cargarid_monedaProforma)
					 || (this.esRecargarFks && this.proformaConstantesFunciones.cargarid_monedaProforma)) {

					if(!this.proformaSessionBean.getisBusquedaDesdeForeignKeySesionMoneda()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=MonedaConstantesFunciones.getArrayColumnasGlobalesMoneda(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalMoneda=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,MonedaConstantesFunciones.TABLENAME);

						finalQueryGlobalMoneda=Funciones.GetFinalQueryAppend(finalQueryGlobalMoneda, "");
						finalQueryGlobalMoneda+=MonedaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosMonedasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalMoneda=" WHERE " + ConstantesSql.ID + "="+proformaSessionBean.getlidMonedaActual();
					}
				} else {
					finalQueryGlobalMoneda="NONE";
				}


				String finalQueryGlobalEmpleado="";

				if(((this.empleadosForeignKey==null||this.empleadosForeignKey.size()<=0) && this.proformaConstantesFunciones.cargarid_empleadoProforma)
					 || (this.esRecargarFks && this.proformaConstantesFunciones.cargarid_empleadoProforma)) {

					if(!this.proformaSessionBean.getisBusquedaDesdeForeignKeySesionEmpleado()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EmpleadoConstantesFunciones.getArrayColumnasGlobalesEmpleado(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEmpleado=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpleadoConstantesFunciones.TABLENAME);

						finalQueryGlobalEmpleado=Funciones.GetFinalQueryAppend(finalQueryGlobalEmpleado, "");
						finalQueryGlobalEmpleado+=EmpleadoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEmpleadosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEmpleado=" WHERE " + ConstantesSql.ID + "="+proformaSessionBean.getlidEmpleadoActual();
					}
				} else {
					finalQueryGlobalEmpleado="NONE";
				}


				String finalQueryGlobalFormato="";

				if(((this.formatosForeignKey==null||this.formatosForeignKey.size()<=0) && this.proformaConstantesFunciones.cargarid_formatoProforma)
					 || (this.esRecargarFks && this.proformaConstantesFunciones.cargarid_formatoProforma)) {

					if(!this.proformaSessionBean.getisBusquedaDesdeForeignKeySesionFormato()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=FormatoConstantesFunciones.getArrayColumnasGlobalesFormato(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalFormato=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,FormatoConstantesFunciones.TABLENAME);

						finalQueryGlobalFormato=Funciones.GetFinalQueryAppend(finalQueryGlobalFormato, "");
						finalQueryGlobalFormato+=FormatoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosFormatosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalFormato=" WHERE " + ConstantesSql.ID + "="+proformaSessionBean.getlidFormatoActual();
					}
				} else {
					finalQueryGlobalFormato="NONE";
				}


				String finalQueryGlobalEstadoProforma="";

				if(((this.estadoproformasForeignKey==null||this.estadoproformasForeignKey.size()<=0) && this.proformaConstantesFunciones.cargarid_estado_proformaProforma)
					 || (this.esRecargarFks && this.proformaConstantesFunciones.cargarid_estado_proformaProforma)) {

					if(!this.proformaSessionBean.getisBusquedaDesdeForeignKeySesionEstadoProforma()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EstadoProformaConstantesFunciones.getArrayColumnasGlobalesEstadoProforma(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEstadoProforma=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EstadoProformaConstantesFunciones.TABLENAME);

						finalQueryGlobalEstadoProforma=Funciones.GetFinalQueryAppend(finalQueryGlobalEstadoProforma, "");
						finalQueryGlobalEstadoProforma+=EstadoProformaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEstadoProformasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEstadoProforma=" WHERE " + ConstantesSql.ID + "="+proformaSessionBean.getlidEstadoProformaActual();
					}
				} else {
					finalQueryGlobalEstadoProforma="NONE";
				}


				String finalQueryGlobalCliente="";

				if(((this.clientesForeignKey==null||this.clientesForeignKey.size()<=0) && this.proformaConstantesFunciones.cargarid_clienteProforma)
					 || (this.esRecargarFks && this.proformaConstantesFunciones.cargarid_clienteProforma)) {

					if(!this.proformaSessionBean.getisBusquedaDesdeForeignKeySesionCliente()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=ClienteConstantesFunciones.getArrayColumnasGlobalesCliente(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCliente=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ClienteConstantesFunciones.TABLENAME);

						finalQueryGlobalCliente=Funciones.GetFinalQueryAppend(finalQueryGlobalCliente, "");
						finalQueryGlobalCliente+=ClienteConstantesFunciones.SFINALQUERY;

						//this.cargarCombosClientesForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCliente=" WHERE " + ConstantesSql.ID + "="+proformaSessionBean.getlidClienteActual();
					}
				} else {
					finalQueryGlobalCliente="NONE";
				}


				String finalQueryGlobalTipoPrecio="";

				if(((this.tipopreciosForeignKey==null||this.tipopreciosForeignKey.size()<=0) && this.proformaConstantesFunciones.cargarid_tipo_precioProforma)
					 || (this.esRecargarFks && this.proformaConstantesFunciones.cargarid_tipo_precioProforma)) {

					if(!this.proformaSessionBean.getisBusquedaDesdeForeignKeySesionTipoPrecio()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoPrecioConstantesFunciones.getArrayColumnasGlobalesTipoPrecio(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoPrecio=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoPrecioConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoPrecio=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoPrecio, "");
						finalQueryGlobalTipoPrecio+=TipoPrecioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoPreciosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoPrecio=" WHERE " + ConstantesSql.ID + "="+proformaSessionBean.getlidTipoPrecioActual();
					}
				} else {
					finalQueryGlobalTipoPrecio="NONE";
				}


				String finalQueryGlobalVendedor="";

				if(((this.vendedorsForeignKey==null||this.vendedorsForeignKey.size()<=0) && this.proformaConstantesFunciones.cargarid_vendedorProforma)
					 || (this.esRecargarFks && this.proformaConstantesFunciones.cargarid_vendedorProforma)) {

					if(!this.proformaSessionBean.getisBusquedaDesdeForeignKeySesionVendedor()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=VendedorConstantesFunciones.getArrayColumnasGlobalesVendedor(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalVendedor=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,VendedorConstantesFunciones.TABLENAME);

						finalQueryGlobalVendedor=Funciones.GetFinalQueryAppend(finalQueryGlobalVendedor, "");
						finalQueryGlobalVendedor+=VendedorConstantesFunciones.SFINALQUERY;

						//this.cargarCombosVendedorsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalVendedor=" WHERE " + ConstantesSql.ID + "="+proformaSessionBean.getlidVendedorActual();
					}
				} else {
					finalQueryGlobalVendedor="NONE";
				}


				String finalQueryGlobalSubCliente="";

				if(((this.subclientesForeignKey==null||this.subclientesForeignKey.size()<=0) && this.proformaConstantesFunciones.cargarid_sub_clienteProforma)
					 || (this.esRecargarFks && this.proformaConstantesFunciones.cargarid_sub_clienteProforma)) {

					if(!this.proformaSessionBean.getisBusquedaDesdeForeignKeySesionSubCliente()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=SubClienteConstantesFunciones.getArrayColumnasGlobalesSubCliente(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalSubCliente=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SubClienteConstantesFunciones.TABLENAME);

						finalQueryGlobalSubCliente=Funciones.GetFinalQueryAppend(finalQueryGlobalSubCliente, "");
						finalQueryGlobalSubCliente+=SubClienteConstantesFunciones.SFINALQUERY;

						//this.cargarCombosSubClientesForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalSubCliente=" WHERE " + ConstantesSql.ID + "="+proformaSessionBean.getlidSubClienteActual();
					}
				} else {
					finalQueryGlobalSubCliente="NONE";
				}


				String finalQueryGlobalTipoViaTransporte="";

				if(((this.tipoviatransportesForeignKey==null||this.tipoviatransportesForeignKey.size()<=0) && this.proformaConstantesFunciones.cargarid_tipo_via_transporteProforma)
					 || (this.esRecargarFks && this.proformaConstantesFunciones.cargarid_tipo_via_transporteProforma)) {

					if(!this.proformaSessionBean.getisBusquedaDesdeForeignKeySesionTipoViaTransporte()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoViaTransporteConstantesFunciones.getArrayColumnasGlobalesTipoViaTransporte(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoViaTransporte=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoViaTransporteConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoViaTransporte=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoViaTransporte, "");
						finalQueryGlobalTipoViaTransporte+=TipoViaTransporteConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoViaTransportesForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoViaTransporte=" WHERE " + ConstantesSql.ID + "="+proformaSessionBean.getlidTipoViaTransporteActual();
					}
				} else {
					finalQueryGlobalTipoViaTransporte="NONE";
				}


				String finalQueryGlobalTransporte="";

				if(((this.transportesForeignKey==null||this.transportesForeignKey.size()<=0) && this.proformaConstantesFunciones.cargarid_transporteProforma)
					 || (this.esRecargarFks && this.proformaConstantesFunciones.cargarid_transporteProforma)) {

					if(!this.proformaSessionBean.getisBusquedaDesdeForeignKeySesionTransporte()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TransporteConstantesFunciones.getArrayColumnasGlobalesTransporte(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTransporte=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransporteConstantesFunciones.TABLENAME);

						finalQueryGlobalTransporte=Funciones.GetFinalQueryAppend(finalQueryGlobalTransporte, "");
						finalQueryGlobalTransporte+=TransporteConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTransportesForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTransporte=" WHERE " + ConstantesSql.ID + "="+proformaSessionBean.getlidTransporteActual();
					}
				} else {
					finalQueryGlobalTransporte="NONE";
				}


				String finalQueryGlobalRutaTransporte="";

				if(((this.rutatransportesForeignKey==null||this.rutatransportesForeignKey.size()<=0) && this.proformaConstantesFunciones.cargarid_ruta_transporteProforma)
					 || (this.esRecargarFks && this.proformaConstantesFunciones.cargarid_ruta_transporteProforma)) {

					if(!this.proformaSessionBean.getisBusquedaDesdeForeignKeySesionRutaTransporte()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=RutaTransporteConstantesFunciones.getArrayColumnasGlobalesRutaTransporte(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalRutaTransporte=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,RutaTransporteConstantesFunciones.TABLENAME);

						finalQueryGlobalRutaTransporte=Funciones.GetFinalQueryAppend(finalQueryGlobalRutaTransporte, "");
						finalQueryGlobalRutaTransporte+=RutaTransporteConstantesFunciones.SFINALQUERY;

						//this.cargarCombosRutaTransportesForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalRutaTransporte=" WHERE " + ConstantesSql.ID + "="+proformaSessionBean.getlidRutaTransporteActual();
					}
				} else {
					finalQueryGlobalRutaTransporte="NONE";
				}


				String finalQueryGlobalCentroCosto="";

				if(((this.centrocostosForeignKey==null||this.centrocostosForeignKey.size()<=0) && this.proformaConstantesFunciones.cargarid_centro_costoProforma)
					 || (this.esRecargarFks && this.proformaConstantesFunciones.cargarid_centro_costoProforma)) {

					if(!this.proformaSessionBean.getisBusquedaDesdeForeignKeySesionCentroCosto()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=CentroCostoConstantesFunciones.getArrayColumnasGlobalesCentroCosto(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCentroCosto=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CentroCostoConstantesFunciones.TABLENAME);

						finalQueryGlobalCentroCosto=Funciones.GetFinalQueryAppend(finalQueryGlobalCentroCosto, "");
						finalQueryGlobalCentroCosto+=CentroCostoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCentroCostosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCentroCosto=" WHERE " + ConstantesSql.ID + "="+proformaSessionBean.getlidCentroCostoActual();
					}
				} else {
					finalQueryGlobalCentroCosto="NONE";
				}


				String finalQueryGlobalTipoProforma="";

				if(((this.tipoproformasForeignKey==null||this.tipoproformasForeignKey.size()<=0) && this.proformaConstantesFunciones.cargarid_tipo_proformaProforma)
					 || (this.esRecargarFks && this.proformaConstantesFunciones.cargarid_tipo_proformaProforma)) {

					if(!this.proformaSessionBean.getisBusquedaDesdeForeignKeySesionTipoProforma()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoProformaConstantesFunciones.getArrayColumnasGlobalesTipoProforma(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoProforma=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoProformaConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoProforma=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoProforma, "");
						finalQueryGlobalTipoProforma+=TipoProformaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoProformasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoProforma=" WHERE " + ConstantesSql.ID + "="+proformaSessionBean.getlidTipoProformaActual();
					}
				} else {
					finalQueryGlobalTipoProforma="NONE";
				}


				String finalQueryGlobalConsignatario="";

				if(((this.consignatariosForeignKey==null||this.consignatariosForeignKey.size()<=0) && this.proformaConstantesFunciones.cargarid_consignatarioProforma)
					 || (this.esRecargarFks && this.proformaConstantesFunciones.cargarid_consignatarioProforma)) {

					if(!this.proformaSessionBean.getisBusquedaDesdeForeignKeySesionConsignatario()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=ConsignatarioConstantesFunciones.getArrayColumnasGlobalesConsignatario(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalConsignatario=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ConsignatarioConstantesFunciones.TABLENAME);

						finalQueryGlobalConsignatario=Funciones.GetFinalQueryAppend(finalQueryGlobalConsignatario, "");
						finalQueryGlobalConsignatario+=ConsignatarioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosConsignatariosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalConsignatario=" WHERE " + ConstantesSql.ID + "="+proformaSessionBean.getlidConsignatarioActual();
					}
				} else {
					finalQueryGlobalConsignatario="NONE";
				}


				String finalQueryGlobalTipoCambio="";

				if(((this.tipocambiosForeignKey==null||this.tipocambiosForeignKey.size()<=0) && this.proformaConstantesFunciones.cargarid_tipo_cambioProforma)
					 || (this.esRecargarFks && this.proformaConstantesFunciones.cargarid_tipo_cambioProforma)) {

					if(!this.proformaSessionBean.getisBusquedaDesdeForeignKeySesionTipoCambio()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoCambioConstantesFunciones.getArrayColumnasGlobalesTipoCambio(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoCambio=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoCambioConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoCambio=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoCambio, "");
						finalQueryGlobalTipoCambio+=TipoCambioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoCambiosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoCambio=" WHERE " + ConstantesSql.ID + "="+proformaSessionBean.getlidTipoCambioActual();
					}
				} else {
					finalQueryGlobalTipoCambio="NONE";
				}
			
			//ARCHITECTURE			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				proformaReturnGeneral=proformaLogic.cargarCombosLoteForeignKeyProforma(finalQueryGlobalEmpresa,finalQueryGlobalSucursal,finalQueryGlobalUsuario,finalQueryGlobalEjercicio,finalQueryGlobalPeriodo,finalQueryGlobalAnio,finalQueryGlobalMes,finalQueryGlobalMoneda,finalQueryGlobalEmpleado,finalQueryGlobalFormato,finalQueryGlobalEstadoProforma,finalQueryGlobalCliente,finalQueryGlobalTipoPrecio,finalQueryGlobalVendedor,finalQueryGlobalSubCliente,finalQueryGlobalTipoViaTransporte,finalQueryGlobalTransporte,finalQueryGlobalRutaTransporte,finalQueryGlobalCentroCosto,finalQueryGlobalTipoProforma,finalQueryGlobalConsignatario,finalQueryGlobalTipoCambio);//WithConnection
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}			
			//ARCHITECTURE
			
			

			if(!finalQueryGlobalEmpresa.equals("NONE")) {
				this.empresasForeignKey=proformaReturnGeneral.getempresasForeignKey();
			}

			if(!finalQueryGlobalSucursal.equals("NONE")) {
				this.sucursalsForeignKey=proformaReturnGeneral.getsucursalsForeignKey();
			}

			if(!finalQueryGlobalUsuario.equals("NONE")) {
				this.usuariosForeignKey=proformaReturnGeneral.getusuariosForeignKey();
			}

			if(!finalQueryGlobalEjercicio.equals("NONE")) {
				this.ejerciciosForeignKey=proformaReturnGeneral.getejerciciosForeignKey();
			}

			if(!finalQueryGlobalPeriodo.equals("NONE")) {
				this.periodosForeignKey=proformaReturnGeneral.getperiodosForeignKey();
			}

			if(!finalQueryGlobalAnio.equals("NONE")) {
				this.aniosForeignKey=proformaReturnGeneral.getaniosForeignKey();
			}

			if(!finalQueryGlobalMes.equals("NONE")) {
				this.messForeignKey=proformaReturnGeneral.getmessForeignKey();
			}

			if(!finalQueryGlobalMoneda.equals("NONE")) {
				this.monedasForeignKey=proformaReturnGeneral.getmonedasForeignKey();
			}

			if(!finalQueryGlobalEmpleado.equals("NONE")) {
				this.empleadosForeignKey=proformaReturnGeneral.getempleadosForeignKey();
			}

			if(!finalQueryGlobalFormato.equals("NONE")) {
				this.formatosForeignKey=proformaReturnGeneral.getformatosForeignKey();
			}

			if(!finalQueryGlobalEstadoProforma.equals("NONE")) {
				this.estadoproformasForeignKey=proformaReturnGeneral.getestadoproformasForeignKey();
			}

			if(!finalQueryGlobalCliente.equals("NONE")) {
				this.clientesForeignKey=proformaReturnGeneral.getclientesForeignKey();
			}

			if(!finalQueryGlobalTipoPrecio.equals("NONE")) {
				this.tipopreciosForeignKey=proformaReturnGeneral.gettipopreciosForeignKey();
			}

			if(!finalQueryGlobalVendedor.equals("NONE")) {
				this.vendedorsForeignKey=proformaReturnGeneral.getvendedorsForeignKey();
			}

			if(!finalQueryGlobalSubCliente.equals("NONE")) {
				this.subclientesForeignKey=proformaReturnGeneral.getsubclientesForeignKey();
			}

			if(!finalQueryGlobalTipoViaTransporte.equals("NONE")) {
				this.tipoviatransportesForeignKey=proformaReturnGeneral.gettipoviatransportesForeignKey();
			}

			if(!finalQueryGlobalTransporte.equals("NONE")) {
				this.transportesForeignKey=proformaReturnGeneral.gettransportesForeignKey();
			}

			if(!finalQueryGlobalRutaTransporte.equals("NONE")) {
				this.rutatransportesForeignKey=proformaReturnGeneral.getrutatransportesForeignKey();
			}

			if(!finalQueryGlobalCentroCosto.equals("NONE")) {
				this.centrocostosForeignKey=proformaReturnGeneral.getcentrocostosForeignKey();
			}

			if(!finalQueryGlobalTipoProforma.equals("NONE")) {
				this.tipoproformasForeignKey=proformaReturnGeneral.gettipoproformasForeignKey();
			}

			if(!finalQueryGlobalConsignatario.equals("NONE")) {
				this.consignatariosForeignKey=proformaReturnGeneral.getconsignatariosForeignKey();
			}

			if(!finalQueryGlobalTipoCambio.equals("NONE")) {
				this.tipocambiosForeignKey=proformaReturnGeneral.gettipocambiosForeignKey();
			}
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void addItemDefectoCombosTodosForeignKeyProforma()throws Exception {
		try {
			
			this.addItemDefectoCombosForeignKeyEmpresa();
			this.addItemDefectoCombosForeignKeySucursal();
			this.addItemDefectoCombosForeignKeyUsuario();
			this.addItemDefectoCombosForeignKeyEjercicio();
			this.addItemDefectoCombosForeignKeyPeriodo();
			this.addItemDefectoCombosForeignKeyAnio();
			this.addItemDefectoCombosForeignKeyMes();
			this.addItemDefectoCombosForeignKeyMoneda();
			this.addItemDefectoCombosForeignKeyEmpleado();
			this.addItemDefectoCombosForeignKeyFormato();
			this.addItemDefectoCombosForeignKeyEstadoProforma();
			this.addItemDefectoCombosForeignKeyCliente();
			this.addItemDefectoCombosForeignKeyTipoPrecio();
			this.addItemDefectoCombosForeignKeyVendedor();
			this.addItemDefectoCombosForeignKeySubCliente();
			this.addItemDefectoCombosForeignKeyTipoViaTransporte();
			this.addItemDefectoCombosForeignKeyTransporte();
			this.addItemDefectoCombosForeignKeyRutaTransporte();
			this.addItemDefectoCombosForeignKeyCentroCosto();
			this.addItemDefectoCombosForeignKeyTipoProforma();
			this.addItemDefectoCombosForeignKeyConsignatario();
			this.addItemDefectoCombosForeignKeyTipoCambio();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	



	public void addItemDefectoCombosForeignKeyEmpresa()throws Exception {
		try {
			if(this.proformaSessionBean==null) {
				this.proformaSessionBean=new ProformaSessionBean();
			}

			if(!this.proformaSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				Empresa empresa=new Empresa();
				EmpresaConstantesFunciones.setEmpresaDescripcion(empresa,Constantes.SMENSAJE_ESCOJA_OPCION);
				empresa.setId(null);

				if(!EmpresaConstantesFunciones.ExisteEnLista(this.empresasForeignKey,empresa,true)) {

					this.empresasForeignKey.add(0,empresa);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeySucursal()throws Exception {
		try {

			if(!this.proformaSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				Sucursal sucursal=new Sucursal();
				SucursalConstantesFunciones.setSucursalDescripcion(sucursal,Constantes.SMENSAJE_ESCOJA_OPCION);
				sucursal.setId(null);

				if(!SucursalConstantesFunciones.ExisteEnLista(this.sucursalsForeignKey,sucursal,true)) {

					this.sucursalsForeignKey.add(0,sucursal);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyUsuario()throws Exception {
		try {

			if(!this.proformaSessionBean.getisBusquedaDesdeForeignKeySesionUsuario()) {
				Usuario usuario=new Usuario();
				UsuarioConstantesFunciones.setUsuarioDescripcion(usuario,Constantes.SMENSAJE_ESCOJA_OPCION);
				usuario.setId(null);

				if(!UsuarioConstantesFunciones.ExisteEnLista(this.usuariosForeignKey,usuario,true)) {

					this.usuariosForeignKey.add(0,usuario);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEjercicio()throws Exception {
		try {

			if(!this.proformaSessionBean.getisBusquedaDesdeForeignKeySesionEjercicio()) {
				Ejercicio ejercicio=new Ejercicio();
				EjercicioConstantesFunciones.setEjercicioDescripcion(ejercicio,Constantes.SMENSAJE_ESCOJA_OPCION);
				ejercicio.setId(null);

				if(!EjercicioConstantesFunciones.ExisteEnLista(this.ejerciciosForeignKey,ejercicio,true)) {

					this.ejerciciosForeignKey.add(0,ejercicio);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyPeriodo()throws Exception {
		try {

			if(!this.proformaSessionBean.getisBusquedaDesdeForeignKeySesionPeriodo()) {
				Periodo periodo=new Periodo();
				PeriodoConstantesFunciones.setPeriodoDescripcion(periodo,Constantes.SMENSAJE_ESCOJA_OPCION);
				periodo.setId(null);

				if(!PeriodoConstantesFunciones.ExisteEnLista(this.periodosForeignKey,periodo,true)) {

					this.periodosForeignKey.add(0,periodo);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyAnio()throws Exception {
		try {

			if(!this.proformaSessionBean.getisBusquedaDesdeForeignKeySesionAnio()) {
				Anio anio=new Anio();
				AnioConstantesFunciones.setAnioDescripcion(anio,Constantes.SMENSAJE_ESCOJA_OPCION);
				anio.setId(null);

				if(!AnioConstantesFunciones.ExisteEnLista(this.aniosForeignKey,anio,true)) {

					this.aniosForeignKey.add(0,anio);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyMes()throws Exception {
		try {

			if(!this.proformaSessionBean.getisBusquedaDesdeForeignKeySesionMes()) {
				Mes mes=new Mes();
				MesConstantesFunciones.setMesDescripcion(mes,Constantes.SMENSAJE_ESCOJA_OPCION);
				mes.setId(null);

				if(!MesConstantesFunciones.ExisteEnLista(this.messForeignKey,mes,true)) {

					this.messForeignKey.add(0,mes);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyMoneda()throws Exception {
		try {

			if(!this.proformaSessionBean.getisBusquedaDesdeForeignKeySesionMoneda()) {
				Moneda moneda=new Moneda();
				MonedaConstantesFunciones.setMonedaDescripcion(moneda,Constantes.SMENSAJE_ESCOJA_OPCION);
				moneda.setId(null);

				if(!MonedaConstantesFunciones.ExisteEnLista(this.monedasForeignKey,moneda,true)) {

					this.monedasForeignKey.add(0,moneda);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEmpleado()throws Exception {
		try {

			if(!this.proformaSessionBean.getisBusquedaDesdeForeignKeySesionEmpleado()) {
				Empleado empleado=new Empleado();
				EmpleadoConstantesFunciones.setEmpleadoDescripcion(empleado,Constantes.SMENSAJE_ESCOJA_OPCION);
				empleado.setId(null);

				if(!EmpleadoConstantesFunciones.ExisteEnLista(this.empleadosForeignKey,empleado,true)) {

					this.empleadosForeignKey.add(0,empleado);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyFormato()throws Exception {
		try {

			if(!this.proformaSessionBean.getisBusquedaDesdeForeignKeySesionFormato()) {
				Formato formato=new Formato();
				FormatoConstantesFunciones.setFormatoDescripcion(formato,Constantes.SMENSAJE_ESCOJA_OPCION);
				formato.setId(null);

				if(!FormatoConstantesFunciones.ExisteEnLista(this.formatosForeignKey,formato,true)) {

					this.formatosForeignKey.add(0,formato);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEstadoProforma()throws Exception {
		try {

			if(!this.proformaSessionBean.getisBusquedaDesdeForeignKeySesionEstadoProforma()) {
				EstadoProforma estadoproforma=new EstadoProforma();
				EstadoProformaConstantesFunciones.setEstadoProformaDescripcion(estadoproforma,Constantes.SMENSAJE_ESCOJA_OPCION);
				estadoproforma.setId(null);

				if(!EstadoProformaConstantesFunciones.ExisteEnLista(this.estadoproformasForeignKey,estadoproforma,true)) {

					this.estadoproformasForeignKey.add(0,estadoproforma);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCliente()throws Exception {
		try {

			if(!this.proformaSessionBean.getisBusquedaDesdeForeignKeySesionCliente()) {
				Cliente cliente=new Cliente();
				ClienteConstantesFunciones.setClienteDescripcion(cliente,Constantes.SMENSAJE_ESCOJA_OPCION);
				cliente.setId(null);

				if(!ClienteConstantesFunciones.ExisteEnLista(this.clientesForeignKey,cliente,true)) {

					this.clientesForeignKey.add(0,cliente);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoPrecio()throws Exception {
		try {

			if(!this.proformaSessionBean.getisBusquedaDesdeForeignKeySesionTipoPrecio()) {
				TipoPrecio tipoprecio=new TipoPrecio();
				TipoPrecioConstantesFunciones.setTipoPrecioDescripcion(tipoprecio,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipoprecio.setId(null);

				if(!TipoPrecioConstantesFunciones.ExisteEnLista(this.tipopreciosForeignKey,tipoprecio,true)) {

					this.tipopreciosForeignKey.add(0,tipoprecio);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyVendedor()throws Exception {
		try {

			if(!this.proformaSessionBean.getisBusquedaDesdeForeignKeySesionVendedor()) {
				Vendedor vendedor=new Vendedor();
				VendedorConstantesFunciones.setVendedorDescripcion(vendedor,Constantes.SMENSAJE_ESCOJA_OPCION);
				vendedor.setId(null);

				if(!VendedorConstantesFunciones.ExisteEnLista(this.vendedorsForeignKey,vendedor,true)) {

					this.vendedorsForeignKey.add(0,vendedor);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeySubCliente()throws Exception {
		try {

			if(!this.proformaSessionBean.getisBusquedaDesdeForeignKeySesionSubCliente()) {
				SubCliente subcliente=new SubCliente();
				SubClienteConstantesFunciones.setSubClienteDescripcion(subcliente,Constantes.SMENSAJE_ESCOJA_OPCION);
				subcliente.setId(null);

				if(!SubClienteConstantesFunciones.ExisteEnLista(this.subclientesForeignKey,subcliente,true)) {

					this.subclientesForeignKey.add(0,subcliente);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoViaTransporte()throws Exception {
		try {

			if(!this.proformaSessionBean.getisBusquedaDesdeForeignKeySesionTipoViaTransporte()) {
				TipoViaTransporte tipoviatransporte=new TipoViaTransporte();
				TipoViaTransporteConstantesFunciones.setTipoViaTransporteDescripcion(tipoviatransporte,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipoviatransporte.setId(null);

				if(!TipoViaTransporteConstantesFunciones.ExisteEnLista(this.tipoviatransportesForeignKey,tipoviatransporte,true)) {

					this.tipoviatransportesForeignKey.add(0,tipoviatransporte);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTransporte()throws Exception {
		try {

			if(!this.proformaSessionBean.getisBusquedaDesdeForeignKeySesionTransporte()) {
				Transporte transporte=new Transporte();
				TransporteConstantesFunciones.setTransporteDescripcion(transporte,Constantes.SMENSAJE_ESCOJA_OPCION);
				transporte.setId(null);

				if(!TransporteConstantesFunciones.ExisteEnLista(this.transportesForeignKey,transporte,true)) {

					this.transportesForeignKey.add(0,transporte);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyRutaTransporte()throws Exception {
		try {

			if(!this.proformaSessionBean.getisBusquedaDesdeForeignKeySesionRutaTransporte()) {
				RutaTransporte rutatransporte=new RutaTransporte();
				RutaTransporteConstantesFunciones.setRutaTransporteDescripcion(rutatransporte,Constantes.SMENSAJE_ESCOJA_OPCION);
				rutatransporte.setId(null);

				if(!RutaTransporteConstantesFunciones.ExisteEnLista(this.rutatransportesForeignKey,rutatransporte,true)) {

					this.rutatransportesForeignKey.add(0,rutatransporte);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCentroCosto()throws Exception {
		try {

			if(!this.proformaSessionBean.getisBusquedaDesdeForeignKeySesionCentroCosto()) {
				CentroCosto centrocosto=new CentroCosto();
				CentroCostoConstantesFunciones.setCentroCostoDescripcion(centrocosto,Constantes.SMENSAJE_ESCOJA_OPCION);
				centrocosto.setId(null);

				if(!CentroCostoConstantesFunciones.ExisteEnLista(this.centrocostosForeignKey,centrocosto,true)) {

					this.centrocostosForeignKey.add(0,centrocosto);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoProforma()throws Exception {
		try {

			if(!this.proformaSessionBean.getisBusquedaDesdeForeignKeySesionTipoProforma()) {
				TipoProforma tipoproforma=new TipoProforma();
				TipoProformaConstantesFunciones.setTipoProformaDescripcion(tipoproforma,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipoproforma.setId(null);

				if(!TipoProformaConstantesFunciones.ExisteEnLista(this.tipoproformasForeignKey,tipoproforma,true)) {

					this.tipoproformasForeignKey.add(0,tipoproforma);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyConsignatario()throws Exception {
		try {

			if(!this.proformaSessionBean.getisBusquedaDesdeForeignKeySesionConsignatario()) {
				Consignatario consignatario=new Consignatario();
				ConsignatarioConstantesFunciones.setConsignatarioDescripcion(consignatario,Constantes.SMENSAJE_ESCOJA_OPCION);
				consignatario.setId(null);

				if(!ConsignatarioConstantesFunciones.ExisteEnLista(this.consignatariosForeignKey,consignatario,true)) {

					this.consignatariosForeignKey.add(0,consignatario);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoCambio()throws Exception {
		try {

			if(!this.proformaSessionBean.getisBusquedaDesdeForeignKeySesionTipoCambio()) {
				TipoCambio tipocambio=new TipoCambio();
				TipoCambioConstantesFunciones.setTipoCambioDescripcion(tipocambio,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipocambio.setId(null);

				if(!TipoCambioConstantesFunciones.ExisteEnLista(this.tipocambiosForeignKey,tipocambio,true)) {

					this.tipocambiosForeignKey.add(0,tipocambio);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void initActionsCombosTodosForeignKeyProforma()throws Exception {
		try {
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void initActionsCombosTodosForeignKeyProforma(String sFormularioTipoBusqueda)throws Exception {
		try {
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	


	
	


	
	public void setVariablesGlobalesCombosForeignKeyProforma()throws Exception {	
		try {
			if(this.parametroGeneralUsuario!=null && this.parametroGeneralUsuario.getId()>0) {
			
				this.setActualEmpresaForeignKey(this.parametroGeneralUsuario.getid_empresa(),false,"Formulario");
				this.setActualSucursalForeignKey(this.parametroGeneralUsuario.getid_sucursal(),false,"Formulario");
				this.setActualUsuarioForeignKey(this.parametroGeneralUsuario.getid_usuario(),false,"Formulario");
				this.setActualEjercicioForeignKey(this.parametroGeneralUsuario.getid_ejercicio(),false,"Formulario");
				this.setActualPeriodoForeignKey(this.parametroGeneralUsuario.getid_periodo(),false,"Formulario");
				this.setActualMonedaForeignKey(this.parametroGeneralUsuario.getid_moneda(),false,"Formulario");
			
			
				this.proforma.setfecha_emision(this.parametroGeneralUsuario.getfecha_sistema());
				this.proforma.setfecha_vencimiento(this.parametroGeneralUsuario.getfecha_sistema());
				this.proforma.setfecha(this.parametroGeneralUsuario.getfecha_sistema());
				this.proforma.setfecha_servidor(this.parametroGeneralUsuario.getfecha_sistema());
			}
			
			//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
			this.setVariablesGlobalesAuxiliaresCombosForeignKeyProforma();
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToFormularioForeignKeyProforma(Proforma proforma)throws Exception {	
		try {
			
			this.setActualEmpleadoForeignKey(proforma.getid_empleado(),false,"Formulario");
			this.setActualFormatoForeignKey(proforma.getid_formato(),false,"Formulario");
			this.setActualEstadoProformaForeignKey(proforma.getid_estado_proforma(),false,"Formulario");
			this.setActualClienteForeignKey(proforma.getid_cliente(),false,"Formulario");
			this.setActualTipoPrecioForeignKey(proforma.getid_tipo_precio(),false,"Formulario");
			this.setActualVendedorForeignKey(proforma.getid_vendedor(),false,"Formulario");
			this.setActualSubClienteForeignKey(proforma.getid_sub_cliente(),false,"Formulario");
			this.setActualTipoViaTransporteForeignKey(proforma.getid_tipo_via_transporte(),false,"Formulario");
			this.setActualTransporteForeignKey(proforma.getid_transporte(),false,"Formulario");
			this.setActualRutaTransporteForeignKey(proforma.getid_ruta_transporte(),false,"Formulario");
			this.setActualCentroCostoForeignKey(proforma.getid_centro_costo(),false,"Formulario");
			this.setActualTipoProformaForeignKey(proforma.getid_tipo_proforma(),false,"Formulario");
			this.setActualConsignatarioForeignKey(proforma.getid_consignatario(),false,"Formulario");
			this.setActualTipoCambioForeignKey(proforma.getid_tipo_cambio(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToListasForeignKeyProforma(Proforma proforma,String sTipoEvento)throws Exception {	
		try {
			
			

				if(proforma.getEmpleado()!=null && !sTipoEvento.equals("id_empleadoProforma")) { //sTipoEvento Evita Bucle Infinito

					this.empleadosForeignKey=new ArrayList<Empleado>();
					this.empleadosForeignKey.add(proforma.getEmpleado());

					this.addItemDefectoCombosForeignKeyEmpleado();
					this.cargarCombosFrameEmpleadosForeignKey("Todos");
				}

				if(proforma.getCliente()!=null && !sTipoEvento.equals("id_clienteProforma")) { //sTipoEvento Evita Bucle Infinito

					this.clientesForeignKey=new ArrayList<Cliente>();
					this.clientesForeignKey.add(proforma.getCliente());

					this.addItemDefectoCombosForeignKeyCliente();
					this.cargarCombosFrameClientesForeignKey("Todos");
				}

				if(proforma.getVendedor()!=null && !sTipoEvento.equals("id_vendedorProforma")) { //sTipoEvento Evita Bucle Infinito

					this.vendedorsForeignKey=new ArrayList<Vendedor>();
					this.vendedorsForeignKey.add(proforma.getVendedor());

					this.addItemDefectoCombosForeignKeyVendedor();
					this.cargarCombosFrameVendedorsForeignKey("Todos");
				}

				if(proforma.getCentroCosto()!=null && !sTipoEvento.equals("id_centro_costoProforma")) { //sTipoEvento Evita Bucle Infinito

					this.centrocostosForeignKey=new ArrayList<CentroCosto>();
					this.centrocostosForeignKey.add(proforma.getCentroCosto());

					this.addItemDefectoCombosForeignKeyCentroCosto();
					this.cargarCombosFrameCentroCostosForeignKey("Todos");
				}

				if(proforma.getTipoCambio()!=null && !sTipoEvento.equals("id_tipo_cambioProforma")) { //sTipoEvento Evita Bucle Infinito

					this.tipocambiosForeignKey=new ArrayList<TipoCambio>();
					this.tipocambiosForeignKey.add(proforma.getTipoCambio());

					this.addItemDefectoCombosForeignKeyTipoCambio();
					this.cargarCombosFrameTipoCambiosForeignKey("Todos");
				}
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	/*
	public void setVariablesCombosFromBeanForeignKeyProforma()throws Exception {	
		try {
			
			this.setActualEmpleadoForeignKey(this.proformaConstantesFunciones.getid_empleado(),false,"Formulario");
			this.setActualFormatoForeignKey(this.proformaConstantesFunciones.getid_formato(),false,"Formulario");
			this.setActualEstadoProformaForeignKey(this.proformaConstantesFunciones.getid_estado_proforma(),false,"Formulario");
			this.setActualClienteForeignKey(this.proformaConstantesFunciones.getid_cliente(),false,"Formulario");
			this.setActualTipoPrecioForeignKey(this.proformaConstantesFunciones.getid_tipo_precio(),false,"Formulario");
			this.setActualVendedorForeignKey(this.proformaConstantesFunciones.getid_vendedor(),false,"Formulario");
			this.setActualSubClienteForeignKey(this.proformaConstantesFunciones.getid_sub_cliente(),false,"Formulario");
			this.setActualTipoViaTransporteForeignKey(this.proformaConstantesFunciones.getid_tipo_via_transporte(),false,"Formulario");
			this.setActualTransporteForeignKey(this.proformaConstantesFunciones.getid_transporte(),false,"Formulario");
			this.setActualRutaTransporteForeignKey(this.proformaConstantesFunciones.getid_ruta_transporte(),false,"Formulario");
			this.setActualCentroCostoForeignKey(this.proformaConstantesFunciones.getid_centro_costo(),false,"Formulario");
			this.setActualTipoProformaForeignKey(this.proformaConstantesFunciones.getid_tipo_proforma(),false,"Formulario");
			this.setActualConsignatarioForeignKey(this.proformaConstantesFunciones.getid_consignatario(),false,"Formulario");
			this.setActualTipoCambioForeignKey(this.proformaConstantesFunciones.getid_tipo_cambio(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	*/
	
	public void setVariablesGlobalesAuxiliaresCombosForeignKeyProforma()throws Exception {	
		try {
			

				this.setActualUsuarioForeignKey(this.usuarioActual.getId(),false,"Formulario");

				if(this.jInternalFrameDetalleFormProforma!=null) {
					Ejercicio ejercicioActual=(Ejercicio)this.jInternalFrameDetalleFormProforma.jComboBoxid_ejercicioProforma.getSelectedItem();
					this.setActualAnioForeignKey(ejercicioActual.getid_anio(),false,"Formulario");
				}

				if(this.jInternalFrameDetalleFormProforma!=null) {
					Periodo periodoActual=(Periodo)this.jInternalFrameDetalleFormProforma.jComboBoxid_periodoProforma.getSelectedItem();
					this.setActualMesForeignKey(periodoActual.getid_mes(),false,"Formulario");
				}
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesDefaultCombosForeignKeyProforma()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesParametroCombosForeignKeyProforma()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void cargarCombosParametroProforma()throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			//this.cargarDatosCliente();
			
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
		
	public void cargarCombosFrameForeignKeyProforma()throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey("Todos");
			this.cargarCombosFrameSucursalsForeignKey("Todos");
			this.cargarCombosFrameUsuariosForeignKey("Todos");
			this.cargarCombosFrameEjerciciosForeignKey("Todos");
			this.cargarCombosFramePeriodosForeignKey("Todos");
			this.cargarCombosFrameAniosForeignKey("Todos");
			this.cargarCombosFrameMessForeignKey("Todos");
			this.cargarCombosFrameMonedasForeignKey("Todos");
			this.cargarCombosFrameEmpleadosForeignKey("Todos");
			this.cargarCombosFrameFormatosForeignKey("Todos");
			this.cargarCombosFrameEstadoProformasForeignKey("Todos");
			this.cargarCombosFrameClientesForeignKey("Todos");
			this.cargarCombosFrameTipoPreciosForeignKey("Todos");
			this.cargarCombosFrameVendedorsForeignKey("Todos");
			this.cargarCombosFrameSubClientesForeignKey("Todos");
			this.cargarCombosFrameTipoViaTransportesForeignKey("Todos");
			this.cargarCombosFrameTransportesForeignKey("Todos");
			this.cargarCombosFrameRutaTransportesForeignKey("Todos");
			this.cargarCombosFrameCentroCostosForeignKey("Todos");
			this.cargarCombosFrameTipoProformasForeignKey("Todos");
			this.cargarCombosFrameConsignatariosForeignKey("Todos");
			this.cargarCombosFrameTipoCambiosForeignKey("Todos");

		} catch(Exception e) {
			throw e;
		}		
	}		
	
	public void cargarCombosFrameForeignKeyProforma(String sFormularioTipoBusqueda)throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameSucursalsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameUsuariosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEjerciciosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFramePeriodosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameAniosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameMessForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameMonedasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEmpleadosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameFormatosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEstadoProformasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameClientesForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoPreciosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameVendedorsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameSubClientesForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoViaTransportesForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTransportesForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameRutaTransportesForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCentroCostosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoProformasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameConsignatariosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoCambiosForeignKey(sFormularioTipoBusqueda);

		} catch(Exception e) {
			throw e;
		}		
	}	
	
	public void setItemDefectoCombosForeignKeyProforma()throws Exception {
		try {
			



			if(this.jInternalFrameDetalleFormProforma.jComboBoxid_empresaProforma!=null && this.jInternalFrameDetalleFormProforma.jComboBoxid_empresaProforma.getItemCount()>0) {
				this.jInternalFrameDetalleFormProforma.jComboBoxid_empresaProforma.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormProforma.jComboBoxid_sucursalProforma!=null && this.jInternalFrameDetalleFormProforma.jComboBoxid_sucursalProforma.getItemCount()>0) {
				this.jInternalFrameDetalleFormProforma.jComboBoxid_sucursalProforma.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormProforma.jComboBoxid_usuarioProforma!=null && this.jInternalFrameDetalleFormProforma.jComboBoxid_usuarioProforma.getItemCount()>0) {
				this.jInternalFrameDetalleFormProforma.jComboBoxid_usuarioProforma.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormProforma.jComboBoxid_ejercicioProforma!=null && this.jInternalFrameDetalleFormProforma.jComboBoxid_ejercicioProforma.getItemCount()>0) {
				this.jInternalFrameDetalleFormProforma.jComboBoxid_ejercicioProforma.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormProforma.jComboBoxid_periodoProforma!=null && this.jInternalFrameDetalleFormProforma.jComboBoxid_periodoProforma.getItemCount()>0) {
				this.jInternalFrameDetalleFormProforma.jComboBoxid_periodoProforma.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormProforma.jComboBoxid_anioProforma!=null && this.jInternalFrameDetalleFormProforma.jComboBoxid_anioProforma.getItemCount()>0) {
				this.jInternalFrameDetalleFormProforma.jComboBoxid_anioProforma.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormProforma.jComboBoxid_mesProforma!=null && this.jInternalFrameDetalleFormProforma.jComboBoxid_mesProforma.getItemCount()>0) {
				this.jInternalFrameDetalleFormProforma.jComboBoxid_mesProforma.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormProforma.jComboBoxid_monedaProforma!=null && this.jInternalFrameDetalleFormProforma.jComboBoxid_monedaProforma.getItemCount()>0) {
				this.jInternalFrameDetalleFormProforma.jComboBoxid_monedaProforma.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormProforma.jComboBoxid_empleadoProforma!=null && this.jInternalFrameDetalleFormProforma.jComboBoxid_empleadoProforma.getItemCount()>0) {
				this.jInternalFrameDetalleFormProforma.jComboBoxid_empleadoProforma.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormProforma.jComboBoxid_formatoProforma!=null && this.jInternalFrameDetalleFormProforma.jComboBoxid_formatoProforma.getItemCount()>0) {
				this.jInternalFrameDetalleFormProforma.jComboBoxid_formatoProforma.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormProforma.jComboBoxid_estado_proformaProforma!=null && this.jInternalFrameDetalleFormProforma.jComboBoxid_estado_proformaProforma.getItemCount()>0) {
				this.jInternalFrameDetalleFormProforma.jComboBoxid_estado_proformaProforma.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormProforma.jComboBoxid_clienteProforma!=null && this.jInternalFrameDetalleFormProforma.jComboBoxid_clienteProforma.getItemCount()>0) {
				this.jInternalFrameDetalleFormProforma.jComboBoxid_clienteProforma.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormProforma.jComboBoxid_tipo_precioProforma!=null && this.jInternalFrameDetalleFormProforma.jComboBoxid_tipo_precioProforma.getItemCount()>0) {
				this.jInternalFrameDetalleFormProforma.jComboBoxid_tipo_precioProforma.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormProforma.jComboBoxid_vendedorProforma!=null && this.jInternalFrameDetalleFormProforma.jComboBoxid_vendedorProforma.getItemCount()>0) {
				this.jInternalFrameDetalleFormProforma.jComboBoxid_vendedorProforma.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormProforma.jComboBoxid_sub_clienteProforma!=null && this.jInternalFrameDetalleFormProforma.jComboBoxid_sub_clienteProforma.getItemCount()>0) {
				this.jInternalFrameDetalleFormProforma.jComboBoxid_sub_clienteProforma.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormProforma.jComboBoxid_tipo_via_transporteProforma!=null && this.jInternalFrameDetalleFormProforma.jComboBoxid_tipo_via_transporteProforma.getItemCount()>0) {
				this.jInternalFrameDetalleFormProforma.jComboBoxid_tipo_via_transporteProforma.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormProforma.jComboBoxid_transporteProforma!=null && this.jInternalFrameDetalleFormProforma.jComboBoxid_transporteProforma.getItemCount()>0) {
				this.jInternalFrameDetalleFormProforma.jComboBoxid_transporteProforma.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormProforma.jComboBoxid_ruta_transporteProforma!=null && this.jInternalFrameDetalleFormProforma.jComboBoxid_ruta_transporteProforma.getItemCount()>0) {
				this.jInternalFrameDetalleFormProforma.jComboBoxid_ruta_transporteProforma.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormProforma.jComboBoxid_centro_costoProforma!=null && this.jInternalFrameDetalleFormProforma.jComboBoxid_centro_costoProforma.getItemCount()>0) {
				this.jInternalFrameDetalleFormProforma.jComboBoxid_centro_costoProforma.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormProforma.jComboBoxid_tipo_proformaProforma!=null && this.jInternalFrameDetalleFormProforma.jComboBoxid_tipo_proformaProforma.getItemCount()>0) {
				this.jInternalFrameDetalleFormProforma.jComboBoxid_tipo_proformaProforma.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormProforma.jComboBoxid_consignatarioProforma!=null && this.jInternalFrameDetalleFormProforma.jComboBoxid_consignatarioProforma.getItemCount()>0) {
				this.jInternalFrameDetalleFormProforma.jComboBoxid_consignatarioProforma.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormProforma.jComboBoxid_tipo_cambioProforma!=null && this.jInternalFrameDetalleFormProforma.jComboBoxid_tipo_cambioProforma.getItemCount()>0) {
				this.jInternalFrameDetalleFormProforma.jComboBoxid_tipo_cambioProforma.setSelectedIndex(0);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	












































	
	

	public ProformaBeanSwingJInternalFrame() throws Exception {
		super(false,PaginaTipo.PRINCIPAL);
	}
	
	public ProformaBeanSwingJInternalFrame(Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
	}
	
	public ProformaBeanSwingJInternalFrame(Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
		
		this.proformaSessionBean=new ProformaSessionBean(); 
		this.proformaConstantesFunciones=new ProformaConstantesFunciones(); 
		this.proformaBean=new Proforma();//(this.proformaConstantesFunciones); 		
		this.proformaReturnGeneral=new ProformaParameterReturnGeneral(); 
		
		this.proformaSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
		this.proformaSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
				
	}
	
	public ProformaBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,cargarTodosDatos);
	}
		
	public ProformaBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,false,false,cargarRelaciones,cargarTodosDatos);
	}	
	
	public ProformaBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,PaginaTipo paginaTipo,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos) throws Exception //Boolean esParaBusquedaForeignKey
    {
		super(jdesktopPane,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		try {
			
			this.permiteRecargarForm=false;
			
			this.startProcessProforma(true);
			
			Boolean esParaBusquedaForeignKey=false;//ANTES USADO COMO PARAMETRO DEL CONSTRUCTOR
			
			if(paginaTipo.equals(PaginaTipo.BUSQUEDA)) {
				esParaBusquedaForeignKey=true;
			}
			
			//OBLIGA VALIDA CON GUARDAR RELACIONES, TAMBIEN EN SWING
			conGuardarRelaciones=true;
			
			
			//SE ASIGNA EN CLASE PADRE
			/*
			this.parametroGeneralSg=parametroGeneralSg;		
			this.parametroGeneralUsuario=parametroGeneralUsuario;	
			this.usuarioActual=usuarioActual;
			this.moduloActual=moduloActual;
			*/						
			
			long start_time=0;
			long end_time=0;
			
			if(Constantes2.ISDEVELOPING2) {
				start_time = System.currentTimeMillis();
			}
			
			if(!cargarTodosDatos) {
				this.sAccionBusqueda="NINGUNO";
			}
			
			this.proformaConstantesFunciones=new ProformaConstantesFunciones(); 
			this.proformaBean=new Proforma();//this.proformaConstantesFunciones); 			
			this.proformaReturnGeneral=new ProformaParameterReturnGeneral(); 
		
			ProformaBeanSwingJInternalFrameAdditional.CargaInicialInicio(this, "NORMAL", null);
			
			this.setTitle(Funciones.GetTituloSistema(this.parametroGeneralSg,this.moduloActual,this.usuarioActual,"Proforma Mantenimiento",paginaTipo));			
			
			this.conTotales=false;
			
			this.conTotales=true;
			
			
			this.proforma=new Proforma();
			this.proformas = new ArrayList<Proforma>();
			this.proformasAux = new ArrayList<Proforma>();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic=new ProformaLogic();
				this.proformaLogic.getNewConnexionToDeep("");
			}
			
			//this.proformaSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
			//this.proformaSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
			
			this.jDesktopPane=jdesktopPane;
			
			if(this.jDesktopPane.getClass().equals(JDesktopPaneMe.class)) {
				this.constantes2=((JDesktopPaneMe)this.jDesktopPane).constantes2;
			}
			
			if(!Constantes.CON_VARIAS_VENTANAS) {
    			MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameDetalleFormProforma);
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameReporteDinamicoProforma!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoProforma);	
					}
					
					if(this.jInternalFrameImportacionProforma!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionProforma);							
					}
					
				}
				
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameOrderByProforma!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameOrderByProforma);					
					}
					
				}
			}
			
			//DETALLE DATOS
			if(this.jInternalFrameDetalleFormProforma!=null) { //this.conCargarFormDetalle) {
				this.jDesktopPane.add(this.jInternalFrameDetalleFormProforma);
				this.jInternalFrameDetalleFormProforma.setVisible(false);
				this.jInternalFrameDetalleFormProforma.setSelected(false);						
			}
			
			if(!this.conCargarMinimo) {
				
				//REPORTE DINAMICO
				if(this.jInternalFrameReporteDinamicoProforma!=null) {
					this.jDesktopPane.add(this.jInternalFrameReporteDinamicoProforma);
					this.jInternalFrameReporteDinamicoProforma.setVisible(false);
					this.jInternalFrameReporteDinamicoProforma.setSelected(false);
				}
				
				//IMPORTACION
				if(this.jInternalFrameImportacionProforma!=null) {
					this.jDesktopPane.add(this.jInternalFrameImportacionProforma);
					this.jInternalFrameImportacionProforma.setVisible(false);
					this.jInternalFrameImportacionProforma.setSelected(false);
				}
				
				
			}
			
			
			if(!this.conCargarMinimo) {
				
				if(this.jInternalFrameOrderByProforma!=null) {
					this.jDesktopPane.add(this.jInternalFrameOrderByProforma);
					this.jInternalFrameOrderByProforma.setVisible(false);
					this.jInternalFrameOrderByProforma.setSelected(false);				
				}
				
			}
			
			
			//this.esParaBusquedaForeignKey=false;
			this.esParaBusquedaForeignKey=esParaBusquedaForeignKey;
			
			this.invalidValues=new InvalidValue[0];
			
			
			
			this.idProformaActual=0L;
			this.rowIndexActual=0;
			
			
			this.iNumeroPaginacionPagina=0;
			this.iNumeroPaginacion=ProformaConstantesFunciones.INUMEROPAGINACION;
			this.pagination=new Pagination();
			this.datosCliente=new DatosCliente();
			this.lIdUsuarioSesion=0L;	
			this.sTipoArchivoReporte="";
			this.sTipoArchivoReporteDinamico="";
			this.sTipoReporte="";
			this.sTipoReporteDinamico="";
			this.sTipoPaginacion="";
			this.sTipoRelacion="";
			this.sTipoAccion="";
			this.sTipoAccionFormulario="";
			this.sTipoSeleccionar="";			
			this.sDetalleReporte="";
			this.sTipoReporteExtra="";
			this.sValorCampoGeneral="";
			this.sPathReporteDinamico="";			
			
			this.isMostrarNumeroPaginacion=false;
			this.isSeleccionarTodos=false;
			this.isSeleccionados=false;
			this.conGraficoReporte=false;
			this.isPostAccionNuevo=false;
			this.isPostAccionSinCerrar=false;
			this.isPostAccionSinMensaje=false;
			this.esReporteDinamico=false;
			this.esRecargarFks=false;
			this.esReporteAccionProceso=false;
			
			this.proformaReturnGeneral=new ProformaParameterReturnGeneral();
			
			this.proformaParameterGeneral=new ProformaParameterReturnGeneral();
			
			
			
			this.sistemaLogicAdditional=new SistemaLogicAdditional();
			
			this.sistemaLogicAdditional.setConnexion(this.proformaLogic.getConnexion());			
			
			
			
			
			
			
			
			//VERIFICAR GLOBAL
			this.cargarDatosCliente();			
			
			
			if(!this.proformaSessionBean.getEsGuardarRelacionado()) {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarLicenciaCliente(this.datosCliente,this.moduloActual,this.usuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_CONTROLGLOBAL);
					}
					
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}			
			
			//VERIFICAR GLOBAL
			
			//VERIFICAR SESSION ACTUAL
			//this.cargarDatosCliente();
			
			this.sistemaReturnGeneral=new SistemaParameterReturnGeneral();
			
			SistemaParameterReturnGeneralAdditional.inicializarSinSeguridad(this.sistemaReturnGeneral);
			
			if(ProformaJInternalFrame.CON_LLAMADA_SIMPLE) {
				if(this.proformaSessionBean.getEsGuardarRelacionado()) {
					this.opcionActual.setId(0L);
					
					//idOpcion=0L;					
				}
				
				ArrayList<String> arrPaginas=new ArrayList<String>();		
				ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
				
				arrPaginas.add(TerminoProformaConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(DetalleProformaConstantesFunciones.SNOMBREOPCION);
		
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					//this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActualWithConnection(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,ProformaConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.proformaSessionBean.getEsGuardarRelacionado(),this.proformaSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,ProformaConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.proformaSessionBean.getEsGuardarRelacionado(),this.proformaSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					if(!this.sistemaReturnGeneral.getEsValidado()) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
					//FALTA
				}
			} else { 
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			} 
			//VERIFICAR SESSION ACTUAL
			
			
			this.sVisibilidadTablaBusquedas="table-row";
			this.sVisibilidadTablaElementos="none";
			this.sVisibilidadTablaAcciones="none";
			
			this.isVisibilidadCeldaNuevoProforma=false;
			this.isVisibilidadCeldaDuplicarProforma=true;
			this.isVisibilidadCeldaCopiarProforma=true;
			this.isVisibilidadCeldaVerFormProforma=true;
			this.isVisibilidadCeldaOrdenProforma=true;
			this.isVisibilidadCeldaNuevoRelacionesProforma=false;
			this.isVisibilidadCeldaModificarProforma=false;
			this.isVisibilidadCeldaActualizarProforma=false;
			this.isVisibilidadCeldaEliminarProforma=false;
			this.isVisibilidadCeldaCancelarProforma=false;
			this.isVisibilidadCeldaGuardarProforma=false;
			this.isVisibilidadCeldaGuardarCambiosProforma=false;
			
			
			this.isVisibilidadFK_IdAnio=true;
			this.isVisibilidadFK_IdCentroCosto=true;
			this.isVisibilidadFK_IdCliente=true;
			this.isVisibilidadFK_IdConsignatario=true;
			this.isVisibilidadFK_IdEjercicio=true;
			this.isVisibilidadFK_IdEmpleado=true;
			this.isVisibilidadFK_IdEmpresa=true;
			this.isVisibilidadFK_IdEstadoProforma=true;
			this.isVisibilidadFK_IdFormato=true;
			this.isVisibilidadFK_IdMes=true;
			this.isVisibilidadFK_IdMoneda=true;
			this.isVisibilidadFK_IdPeriodo=true;
			this.isVisibilidadFK_IdRutaTransporte=true;
			this.isVisibilidadFK_IdSubCliente=true;
			this.isVisibilidadFK_IdSucursal=true;
			this.isVisibilidadFK_IdTipoCambio=true;
			this.isVisibilidadFK_IdTipoPrecio=true;
			this.isVisibilidadFK_IdTipoProforma=true;
			this.isVisibilidadFK_IdTipoViaTransporte=true;
			this.isVisibilidadFK_IdTransporte=true;
			this.isVisibilidadFK_IdUsuario=true;
			this.isVisibilidadFK_IdVendedor=true;
			
			//ELEMENTOS TABLAS PARAMETOS
			
			
			
			//ELEMENTOS TABLAS PARAMETOS_FIN
			
			//this.actualizarEstadoCeldasBotonesProforma("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
						
			
			
			this.inicializarPermisosProforma();
			
			//INICIALIZAR FALSE, TALVEZ COMENTAR
			this.setPermisosUsuarioProforma(false);
			
			this.setPermisosUsuarioProforma();
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.proformaSessionBean.getEsGuardarRelacionado() 
				|| (this.proformaSessionBean.getEsGuardarRelacionado() && this.proformaSessionBean.getConGuardarRelaciones())) {
				
				this.inicializarSetPermisosUsuarioProformaClasesRelacionadas();
			}
			
			if(this.proformaSessionBean.getConGuardarRelaciones()) {
				this.actualizarTabsSetPermisosUsuarioProformaClasesRelacionadas();
			}
			
			
			
			//SOLO SE EJECUTA LA PRIMERA VEZ, BINDINGS SI FUNCIONA
			if(!ProformaJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingBotonesPermisosProforma();
			} else {
				this.inicializarActualizarBindingBotonesPermisosManualProforma();
			}
			
			if(!this.isPermisoBusquedaProforma) {
				//BYDAN_BUSQUEDAS
				
				this.jTabbedPaneBusquedasProforma.setVisible(false);				
				
			}
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.proformaSessionBean.getEsGuardarRelacionado()) {				
				this.tiposArchivosReportes=Funciones.getListTiposArchivosReportes();
				this.tiposArchivosReportesDinamico=Funciones.getListTiposArchivosReportes();
				this.tiposReportes=Funciones.getListTiposReportes(true);
				this.tiposReportesDinamico=Funciones.getListTiposReportesDinamico(true);
				
				
				this.tiposReportes.add(new Reporte("RELACIONES","RELACIONES"));
				this.tiposReportesDinamico.add(new Reporte("RELACIONES","RELACIONES"));
				
				this.tiposGraficosReportes=Funciones2.getListTiposGraficosReportes();
				this.tiposPaginacion=Funciones2.getListTiposPaginacion(this.isPermisoPaginacionMedioProforma,this.isPermisoPaginacionMedioProforma,this.isPermisoPaginacionTodoProforma);
				this.tiposSeleccionar=Funciones2.getListTiposSeleccionar();
				this.tiposSeleccionar.addAll(ProformaConstantesFunciones.getTiposSeleccionarProforma());
				
				this.tiposColumnasSelect=ProformaConstantesFunciones.getTiposSeleccionarProforma(true);
				
				this.tiposRelacionesSelect=new ArrayList<Reporte>();								
				
				this.cargarTiposRelacionesSelectProforma();				
				//this.tiposRelacionesSelect=ProformaConstantesFunciones.getTiposRelacionesProforma(true);
				
			} else {
				this.tiposArchivosReportes=new ArrayList<Reporte>();
				this.tiposArchivosReportesDinamico=new ArrayList<Reporte>();
				this.tiposReportes=new ArrayList<Reporte>();
				this.tiposReportesDinamico=new ArrayList<Reporte>();
				this.tiposGraficosReportes=new ArrayList<Reporte>();
				this.tiposPaginacion=new ArrayList<Reporte>();
				this.tiposSeleccionar=new ArrayList<Reporte>();			
				this.tiposColumnasSelect=new ArrayList<Reporte>();	
				this.tiposRelacionesSelect=new ArrayList<Reporte>();	
			}
						
			
			//FUNCIONALIDAD_RELACIONADO
			//if(!this.proformaSessionBean.getEsGuardarRelacionado()) {
				//SE ENCUENTRA MAS ADELANTE CON ACCIONES POR USUARIO
				//ACCIONES GENERALES Y POR USUARIO
				this.tiposRelaciones=Funciones2.getListTiposRelaciones();
				this.setRelacionesUsuarioProforma();
				
				this.tiposAcciones=Funciones2.getListTiposAcciones(true,false,true);
				this.setAccionesUsuarioProforma(false);	
				
				this.tiposAccionesFormulario=Funciones2.getListTiposAccionesFormulario(true,false,true);							
				this.setAccionesUsuarioProforma(true);	
				
				this.inicializarActualizarBindingtiposArchivosReportesAccionesProforma() ;
			
			/*
			} else {
				this.tiposAcciones=new ArrayList<Reporte>();
				this.tiposAccionesFormulario=new ArrayList<Reporte>();
			}
			*/						
			
			this.inicializarInvalidValues();
						
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			
			
			this.arrOrderBy= new  ArrayList<OrderBy>();
			
			
			this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
			
			
			this.traerValoresTablaOrderBy();			
			
			
			this.isGuardarCambiosEnLote=false;
			this.isCargarCombosDependencia=false;
			
			
			this.terminoproformaLogic=new TerminoProformaLogic();
			this.detalleproformaLogic=new DetalleProformaLogic(); 
			jasperPrint = null;												
			
			//FK
			
			this.empresaLogic=new EmpresaLogic();
			this.sucursalLogic=new SucursalLogic();
			this.usuarioLogic=new UsuarioLogic();
			this.ejercicioLogic=new EjercicioLogic();
			this.periodoLogic=new PeriodoLogic();
			this.anioLogic=new AnioLogic();
			this.mesLogic=new MesLogic();
			this.monedaLogic=new MonedaLogic();
			this.empleadoLogic=new EmpleadoLogic();
			this.formatoLogic=new FormatoLogic();
			this.estadoproformaLogic=new EstadoProformaLogic();
			this.clienteLogic=new ClienteLogic();
			this.tipoprecioLogic=new TipoPrecioLogic();
			this.vendedorLogic=new VendedorLogic();
			this.subclienteLogic=new SubClienteLogic();
			this.tipoviatransporteLogic=new TipoViaTransporteLogic();
			this.transporteLogic=new TransporteLogic();
			this.rutatransporteLogic=new RutaTransporteLogic();
			this.centrocostoLogic=new CentroCostoLogic();
			this.tipoproformaLogic=new TipoProformaLogic();
			this.consignatarioLogic=new ConsignatarioLogic();
			this.tipocambioLogic=new TipoCambioLogic();
			
			//PARAMETROS
			
			
			/*
			if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {		
				hashtableEnv =  Funciones.getHashtableEnv();		
				initialContext = new InitialContext(hashtableEnv);	
			}
			*/
			/*
			if(Constantes.ISUSAEJBREMOTE) {
				proformaImplementable= (ProformaImplementable) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+ProformaConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBREMOTE);
			} else if(Constantes.ISUSAEJBHOME) {
				proformaImplementableHome= (ProformaImplementableHome) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+ProformaConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBLOCAL);
			}			
			*/
			
			
			this.proformas= new ArrayList<Proforma>();
			this.proformasEliminados= new ArrayList<Proforma>();
						
			this.isEsNuevoProforma=false;
			this.esParaAccionDesdeFormularioProforma=false;
			this.isEsMantenimientoRelacionesRelacionadoUnico=false;
			this.isEsMantenimientoRelaciones=false;
			this.isEsMantenimientoRelacionado=false;
			this.isContieneImagenes=false;
			
			
			
			
			//BUSQUEDA INTERNA FK
			this.idEmpleadoActual=0L;
			this.idClienteActual=0L;
			this.idVendedorActual=0L;
			this.idCentroCostoActual=0L;
			this.idTipoCambioActual=0L;
			
			//INICIALIZAR LISTAS FK
			
			this.empresasForeignKey=new ArrayList<Empresa>() ;
			this.sucursalsForeignKey=new ArrayList<Sucursal>() ;
			this.usuariosForeignKey=new ArrayList<Usuario>() ;
			this.ejerciciosForeignKey=new ArrayList<Ejercicio>() ;
			this.periodosForeignKey=new ArrayList<Periodo>() ;
			this.aniosForeignKey=new ArrayList<Anio>() ;
			this.messForeignKey=new ArrayList<Mes>() ;
			this.monedasForeignKey=new ArrayList<Moneda>() ;
			this.empleadosForeignKey=new ArrayList<Empleado>() ;
			this.formatosForeignKey=new ArrayList<Formato>() ;
			this.estadoproformasForeignKey=new ArrayList<EstadoProforma>() ;
			this.clientesForeignKey=new ArrayList<Cliente>() ;
			this.tipopreciosForeignKey=new ArrayList<TipoPrecio>() ;
			this.vendedorsForeignKey=new ArrayList<Vendedor>() ;
			this.subclientesForeignKey=new ArrayList<SubCliente>() ;
			this.tipoviatransportesForeignKey=new ArrayList<TipoViaTransporte>() ;
			this.transportesForeignKey=new ArrayList<Transporte>() ;
			this.rutatransportesForeignKey=new ArrayList<RutaTransporte>() ;
			this.centrocostosForeignKey=new ArrayList<CentroCosto>() ;
			this.tipoproformasForeignKey=new ArrayList<TipoProforma>() ;
			this.consignatariosForeignKey=new ArrayList<Consignatario>() ;
			this.tipocambiosForeignKey=new ArrayList<TipoCambio>() ;
			
			
			
			
			if(blncargarCombostrForeignKey) {
				this.cargarCombosForeignKeyProforma(this.isCargarCombosDependencia);
			}
			
			this.cargarCombosParametroProforma();
			
			
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.proformaSessionBean.getEsGuardarRelacionado()) {
				this.onLoad();
			}
						
			ProformaBeanSwingJInternalFrameAdditional.RecargarVentanaSegunOpcion(this,opcionActual);
			
			/*
			if(blnCargarInformacionInicial) {
				this.recargarInformacion();
			}
			*/
			//this.iNumeroPaginacionPagina=0;
			//this.iNumeroPaginacion=ProformaConstantesFunciones.INUMEROPAGINACION;
			
			this.actualizarEstadoCeldasBotonesProforma("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			//SOLO LA PRIMERA VEZ HACE LOS BINDINGS, SOLO AHI FUNCIONA
			this.inicializarActualizarBindingProforma(true); 
			
			//SE REDIMENSIONA SINO NO SE ACTUALIZA
			this.redimensionarTablaDatos();
			
			
			this.initActions();
			
			;
						
			if(this.jInternalFrameDetalleFormProforma!=null) {//if(this.conCargarFormDetalle) {
				this.cargarMenuRelaciones();
			}
			
			//OBLIGA CARGAR DETALLE, MEJOR DESHABILITAR, FALTA TALVEZ PONER EN SELECCIONAR
			//MAYBE
			//this.updateControlesFormularioProforma();
			
			if(!this.conCargarMinimo) {
				this.updateBusquedasFormularioProforma();
			}
			
			ProformaBeanSwingJInternalFrameAdditional.CargaInicial(this, "NORMAL", null);
			
			
			//SE REALIZA ESTO PARA QUE SE PUEDA RECORRER TAB SIN IMPORTAR ORDEN
			Boolean existeTabBusqueda=false;
			
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				
				for(int i=0; i<this.jTabbedPaneBusquedasProforma.getTabCount(); i++) {
					this.jTabbedPaneBusquedasProforma.setSelectedIndex(i);
						
					if(!existeTabBusqueda) {
						existeTabBusqueda=true;
					}
				}
					
				if(existeTabBusqueda) {
					this.jTabbedPaneBusquedasProforma.setSelectedIndex(0);
				}	
				
				
			}
			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.commitNewConnexionToDeep();
			}
			
			
			if(Constantes2.ISDEVELOPING2) {
				end_time = System.currentTimeMillis();			
				String sTipo="Load Ventana";
				Funciones2.getMensajeTiempoEjecucion(start_time, end_time, sTipo,false);
			}  
			
			this.finishProcessProforma(true);
			
			this.dEnd=(double)System.currentTimeMillis();
			
			this.dDif=this.dEnd - this.dStart;
			
			if(Constantes.ISDEVELOPING) {
				System.out.println("Tiempo(ms) Carga Proforma: " + this.dDif); 
			}
			
			this.permiteRecargarForm=true;
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.closeNewConnexionToDeep();
			}
		}	 
    }
	
	public void cargarTiposRelacionesSelectProforma() {
		Reporte reporte=new Reporte();
		
	

		reporte=new Reporte();
		reporte.setsCodigo(TerminoProformaConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(TerminoProformaConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(DetalleProformaConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(DetalleProformaConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);
	}
	
	
	
	public void jTabbedPaneChangeListenerGeneral(String sTipo,ChangeEvent evt) { 	  
		Boolean procesaCargarParteTab=false;
			
		try {
			int iIndex=0;		    			
			String sTitle="";
			
			//TABBED PANE RELACIONES
			if(sTipo.equals("RelacionesProforma")) {
				iIndex=this.jInternalFrameDetalleFormProforma.jTabbedPaneRelacionesProforma.getSelectedIndex();		    
			
				sTitle=this.jInternalFrameDetalleFormProforma.jTabbedPaneRelacionesProforma.getTitleAt(iIndex);
				
				Integer intSelectedRow = 0;	
			
				intSelectedRow = this.jTableDatosProforma.getSelectedRow();	
				
				

				if(sTitle.equals("Detalle Proformas")) {
					if(!DetalleProformaJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessProforma();

						this.cargarParteTabPanelRelacionadaDetalleProforma(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Termino Proformas")) {
					if(!TerminoProformaJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessProforma();

						this.cargarParteTabPanelRelacionadaTerminoProforma(iIndex,intSelectedRow);
					}
					
				}
				
			}
			
			//TABBED PANE RELACIONES FIN(EXTRA TAB)
			;
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		} finally {
			if(procesaCargarParteTab) {				
				this.finishProcessProforma();	
			}
		}
    }
	
	

	public void cargarParteTabPanelRelacionadaDetalleProforma(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormProforma.cargarSessionConBeanSwingJInternalFrameDetalleProforma(false,true,iIndex);
		this.jButtonDetalleProformaActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaDetalleProforma();

		//this.jTabbedPaneRelacionesProforma.updateUI();
		//this.jTabbedPaneRelacionesProforma.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesProforma.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaTerminoProforma(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormProforma.cargarSessionConBeanSwingJInternalFrameTerminoProforma(false,true,iIndex);
		this.jButtonTerminoProformaActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaTerminoProforma();

		//this.jTabbedPaneRelacionesProforma.updateUI();
		//this.jTabbedPaneRelacionesProforma.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesProforma.setSelectedIndex(iIndex);


	}
	
	public void jButtonRelacionActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
				 if(sTipo.equals("TerminoProforma")) {
				int row=this.jTableDatosProforma.getSelectedRow();
				jButtonTerminoProformaActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("DetalleProforma")) {
				int row=this.jTableDatosProforma.getSelectedRow();
				jButtonDetalleProformaActionPerformed(evt,row,true,false,null);
				}
  		} catch(Exception e) {
  			e.printStackTrace();
  		}
    }
	
	public void cargarMenuRelaciones() {	
		JMenuItem jmenuItem= new JMenuItem("General");
		String sLabelMenu="";
		
		if(!this.proformaSessionBean.getEsGuardarRelacionado()) {
			for(Reporte reporte:this.tiposRelaciones) {
			

				if(reporte.getsCodigo().equals("Termino Proforma")) {

					if(this.isTienePermisosTerminoProforma && this.proformaConstantesFunciones.mostrarTerminoProformaProforma && !ProformaConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Termino Proformas"+"("+TerminoProformaConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Termino Proformas");

						if(proformaConstantesFunciones.resaltarTerminoProformaProforma!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(proformaConstantesFunciones.resaltarTerminoProformaProforma);
						}

						jmenuItem.setEnabled(this.proformaConstantesFunciones.activarTerminoProformaProforma);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"TerminoProforma"));

						

						this.jInternalFrameDetalleFormProforma.jmenuDetalleProforma.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Detalle Proforma")) {

					if(this.isTienePermisosDetalleProforma && this.proformaConstantesFunciones.mostrarDetalleProformaProforma && !ProformaConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Detalle Proformas"+"("+DetalleProformaConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Detalle Proformas");

						if(proformaConstantesFunciones.resaltarDetalleProformaProforma!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(proformaConstantesFunciones.resaltarDetalleProformaProforma);
						}

						jmenuItem.setEnabled(this.proformaConstantesFunciones.activarDetalleProformaProforma);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"DetalleProforma"));

						

						this.jInternalFrameDetalleFormProforma.jmenuDetalleProforma.add(jmenuItem);

						
					}

					continue;
				}
			}
		}
	}		
	
	public void cargarCombosForeignKeyProforma(Boolean cargarCombosDependencia) throws Exception {   
		this.cargarCombosForeignKeyProforma(cargarCombosDependencia,true,true);
	}
	
	//CARGAR COMBOS EN LOTE
	public void cargarCombosForeignKeyProforma(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales) throws Exception {   
		this.cargarCombosTodosForeignKeyProformaListas(cargarCombosDependencia);
				
		this.addItemDefectoCombosTodosForeignKeyProforma();
		
		this.cargarCombosFrameForeignKeyProforma();						
		
		if(conInitActions) {
			this.initActionsCombosTodosForeignKeyProforma();
		}
		
		if(conSetVariablesGlobales) {
			this.setVariablesGlobalesCombosForeignKeyProforma();
		}
	}
	
	

	public void cargarCombosForeignKeyAnio(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyAnioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyAnio();
				this.cargarCombosFrameAniosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaAnio(this.aniosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyMes(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyMesListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyMes();
				this.cargarCombosFrameMessForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaMes(this.messForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEmpleado(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyEmpleadoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyEmpleado();
				this.cargarCombosFrameEmpleadosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaEmpleado(this.empleadosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyFormato(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyFormatoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyFormato();
				this.cargarCombosFrameFormatosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaFormato(this.formatosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEstadoProforma(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyEstadoProformaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyEstadoProforma();
				this.cargarCombosFrameEstadoProformasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaEstadoProforma(this.estadoproformasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCliente(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyClienteListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCliente();
				this.cargarCombosFrameClientesForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaCliente(this.clientesForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoPrecio(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoPrecioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoPrecio();
				this.cargarCombosFrameTipoPreciosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTipoPrecio(this.tipopreciosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyVendedor(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyVendedorListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyVendedor();
				this.cargarCombosFrameVendedorsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaVendedor(this.vendedorsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeySubCliente(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeySubClienteListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeySubCliente();
				this.cargarCombosFrameSubClientesForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaSubCliente(this.subclientesForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoViaTransporte(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoViaTransporteListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoViaTransporte();
				this.cargarCombosFrameTipoViaTransportesForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTipoViaTransporte(this.tipoviatransportesForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransporte(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTransporteListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTransporte();
				this.cargarCombosFrameTransportesForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTransporte(this.transportesForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyRutaTransporte(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyRutaTransporteListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyRutaTransporte();
				this.cargarCombosFrameRutaTransportesForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaRutaTransporte(this.rutatransportesForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCentroCosto(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCentroCostoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCentroCosto();
				this.cargarCombosFrameCentroCostosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaCentroCosto(this.centrocostosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoProforma(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoProformaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoProforma();
				this.cargarCombosFrameTipoProformasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTipoProforma(this.tipoproformasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyConsignatario(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyConsignatarioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyConsignatario();
				this.cargarCombosFrameConsignatariosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaConsignatario(this.consignatariosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoCambio(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoCambioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoCambio();
				this.cargarCombosFrameTipoCambiosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTipoCambio(this.tipocambiosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void jButtonNuevoProformaActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.FORM_RECARGAR;
			String sTipo="NUEVO_NORMAL";
			
			this.estaModoNuevo=true;
			
			if(this.proformaSessionBean.getConGuardarRelaciones()) {
				this.dStart=(double)System.currentTimeMillis();
			}
				
			//if(this.esUsoDesdeHijo) {
			//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			//}
											
			if(this.jInternalFrameDetalleFormProforma==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}			
				
			ProformaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.proforma,new Object(),this.proformaParameterGeneral,this.proformaReturnGeneral);
			
			
			if(jTableDatosProforma.getRowCount()>=1) {
				jTableDatosProforma.removeRowSelectionInterval(0, jTableDatosProforma.getRowCount()-1);						
			}
			
			this.isEsNuevoProforma=true;
			
			//ESTABLECE SI ES RELACIONADO O NO 
			this.habilitarDeshabilitarTipoMantenimientoProforma(esRelaciones);
			
			this.nuevoPreparar(false); 
			this.habilitarDeshabilitarControlesProforma(true);			
			//this.proforma=new Proforma();
			//this.proforma.setIsChanged(true);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesProforma(false) ;						
			 
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualProforma() ;
			
			if(ProformaJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleProforma(esRelaciones);
			}
					
			//Se Duplica, sin sentido
			//this.actualizarInformacion("EVENTO_NUEVO",false,this.proforma);	
			this.actualizarInformacion("INFO_PADRE",false,this.proforma);				
			
			ProformaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.proforma,new Object(),this.proformaParameterGeneral,this.proformaReturnGeneral);
			
			if(this.proformaSessionBean.getConGuardarRelaciones()) {
				this.dEnd=(double)System.currentTimeMillis();					
				this.dDif=this.dEnd - this.dStart;
					
				if(Constantes.ISDEVELOPING) {
					System.out.println("Tiempo(ms) Nuevo Preparar Proforma: " + this.dDif); 
				}
			}
			
			//false para que pueda generar eventos
			this.estaModoNuevo=false;
							
			//Con this.estaModoNuevo=false;, se permite actualizar y usar eventos control al mismo tiempo (FuncionTipo.LAST)			
			ProformaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.LAST,ControlTipo.FORM,EventoTipo.CLIC,EventoSubTipo.NEW,sTipo,this.proforma,new Object(),this.proformaParameterGeneral,this.proformaReturnGeneral);
			
		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;			
		}
	}
	
	public void jButtonDuplicarProformaActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			Boolean soloDuplicarUno=false;
			Boolean conSeleccionarFilaTabla=false;
			
			this.estaModoNuevo=true;
			this.estaModoDuplicar=true;
			
			ArrayList<Proforma> proformasSeleccionados=new ArrayList<Proforma>();
			int intSelectedRow =-1;
			Integer iNumRowsSeleccionados=0;
			int[] arrNumRowsSeleccionados=null;
			
			//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
			if(conSeleccionarFilaTabla) {
				arrNumRowsSeleccionados=this.jTableDatosProforma.getSelectedRows();
				iNumRowsSeleccionados=this.jTableDatosProforma.getSelectedRows().length;			
			}
			
			proformasSeleccionados=this.getProformasSeleccionados(false);
				
			if((soloDuplicarUno && iNumRowsSeleccionados.equals(1)) || !soloDuplicarUno) {
				//LO HACE NUEVOPREPARAR
				//this.iIdNuevoProforma--;			
				//Proforma proformaAux= new Proforma();			
				//proformaAux.setId(this.iIdNuevoProforma);																
				
				//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
				//Proforma proformaOrigen=new Proforma();
				//for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {				
				
				for(Proforma proformaOrigen : proformasSeleccionados) {
					if(conSeleccionarFilaTabla) {
						if(!soloDuplicarUno) {
							//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
							//intSelectedRow =iNumRowSeleccionado;
						} else {
							intSelectedRow = this.jTableDatosProforma.getSelectedRow();
						}
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							proformaOrigen =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							proformaOrigen =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
						}
					}
					
					this.aumentarTamanioFilaNuevaTablaProforma();
					
					if(this.conTotales) {
						this.quitarFilaTotales();
					}
					
					this.nuevoPreparar(true);
					
					this.proforma.setsType("DUPLICADO");
					
					this.setCopiarVariablesObjetosProforma(proformaOrigen,this.proforma,true,true);
					
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
					
					//LO HACE NUEVOPREPARAR
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.proformaLogic.getProformas().add(this.proformaAux);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.proformas.add(this.proformaAux);				
					}
					*/
				}
				
				this.inicializarActualizarBindingTablaProforma(false);
				
				this.jTableDatosProforma.setRowSelectionInterval(this.getIndiceNuevoProforma(), this.getIndiceNuevoProforma());
				
				int iLastRow =  this.jTableDatosProforma.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosProforma.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosProforma.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaProforma(false);
				}
			} else {
				throw new Exception("DEBE ESTAR SELECCIONADO 1 REGISTRO");
			}
			
		} catch(Exception e) {			
			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
		
		} finally {
			this.estaModoNuevo=false;
			this.estaModoDuplicar=false;
		}
	}
	
	public void jButtonCopiarProformaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			Boolean conSeleccionarFilaTabla=false;
			Integer iNumRowsSeleccionados=0;
			int[] intSelectedRows =null;
			int intSelectedRow =0;
			
			this.estaModoCopiar=true;
			
			ArrayList<Proforma> proformasSeleccionados=new ArrayList<Proforma>();									
		
			Proforma proformaOrigen=new Proforma();
			Proforma proformaDestino=new Proforma();
				
			proformasSeleccionados=this.getProformasSeleccionados(false);
			
			if(conSeleccionarFilaTabla) {
				iNumRowsSeleccionados=this.jTableDatosProforma.getSelectedRows().length;	
			}
			
			if(iNumRowsSeleccionados.equals(2) || proformasSeleccionados.size()==2) {
				if(conSeleccionarFilaTabla) {
					intSelectedRows =this.jTableDatosProforma.getSelectedRows();
					intSelectedRow = intSelectedRows[0];	
									
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						proformaOrigen =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						proformaOrigen =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					intSelectedRow = intSelectedRows[1];
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						proformaDestino =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						proformaDestino =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				}
				
				proformaOrigen =proformasSeleccionados.get(0);
				proformaDestino =proformasSeleccionados.get(1);
				
				this.setCopiarVariablesObjetosProforma(proformaOrigen,proformaDestino,true,false);
				
				proformaDestino.setsType("DUPLICADO");
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(proformaDestino,proformaLogic.getProformas());					
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(proformaDestino,proformas);
				}
				//ARCHITECTURE
				
				this.inicializarActualizarBindingTablaProforma(false);
				
				//this.jTableDatosProforma.setRowSelectionInterval(this.getIndiceNuevoProforma(), this.getIndiceNuevoProforma());
				
				int iLastRow =  this.jTableDatosProforma.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosProforma.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosProforma.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					//this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaProforma(false);
				}
			} else {
				throw new Exception("DEBEN ESTAR SELECCIONADOS 2 REGISTROS");
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.estaModoCopiar=false;
		}
	}
	
	public void jButtonVerFormProformaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormProforma==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.jInternalFrameDetalleFormProforma.setSelected(true);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonMostrarOcultarProformaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			Boolean isVisible=this.jPanelParametrosReportesProforma.isVisible();
			
			//BYDAN_BUSQUEDAS
			
			this.jTabbedPaneBusquedasProforma.setVisible(!isVisible);			
			
			
			this.jPanelParametrosReportesProforma.setVisible(!isVisible);
			this.jPanelPaginacionProforma.setVisible(!isVisible);
			this.jPanelAccionesProforma.setVisible(!isVisible);
							
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarProformaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.closingInternalFrameProforma();
			
			//if(this.jInternalFrameParent==null) {
				//this.dispose();
			/*} else {
				this.setVisible(false);
	        	this.setSelected(false);	
			}*/			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarReporteDinamicoProformaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameReporteDinamicoProforma();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarImportacionProformaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameImportacionProforma();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonAbrirOrderByProformaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			
			this.abrirInicializarFrameOrderByProforma();
			
			this.abrirFrameOrderByProforma();
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarOrderByProformaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameOrderByProforma();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void abrirFrameDetalleProforma(Boolean esRelaciones) throws Exception {	    	        
	    try {
			//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
			//this.jDesktopPane.add(jInternalFrameDetalleFormProforma);
			
			if(!esRelaciones) {
				if(this.jInternalFrameDetalleFormProforma.isMaximum()) {
					this.jInternalFrameDetalleFormProforma.setMaximum(false);
				}								
				
	    		this.jInternalFrameDetalleFormProforma.setSize(this.jInternalFrameDetalleFormProforma.iWidthFormulario,this.jInternalFrameDetalleFormProforma.iHeightFormulario);
	    	} else {
				if(this.iWidthScroll<this.jInternalFrameDetalleFormProforma.iWidthFormularioMaximo) {
	    			this.jInternalFrameDetalleFormProforma.setSize(this.iWidthScroll,this.iHeightScroll);
				} else {
					if(!this.jInternalFrameDetalleFormProforma.isMaximum()) {
						this.jInternalFrameDetalleFormProforma.setMaximum(true);
					}
				}
				
				if(this.jInternalFrameDetalleFormProforma.jContentPaneDetalleProforma.getWidth() > this.getWidth()) {
					this.jInternalFrameDetalleFormProforma.jTabbedPaneRelacionesProforma.setMinimumSize(new Dimension(this.jInternalFrameDetalleFormProforma.jContentPaneDetalleProforma.getWidth(),ProformaConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormProforma.jTabbedPaneRelacionesProforma.setMaximumSize(new Dimension(this.jInternalFrameDetalleFormProforma.jContentPaneDetalleProforma.getWidth(),ProformaConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormProforma.jTabbedPaneRelacionesProforma.setPreferredSize(new Dimension(this.jInternalFrameDetalleFormProforma.jContentPaneDetalleProforma.getWidth(),ProformaConstantesFunciones.ALTO_TABPANE_RELACIONES));
					
					Dimension dimension=new Dimension(); 
					
					

					if(DetalleProformaJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaDetalleProforma();
					}

					if(TerminoProformaJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaTerminoProforma();
					}
					
				}
	    	}
			
		
	       	this.jInternalFrameDetalleFormProforma.setVisible(true);
	        this.jInternalFrameDetalleFormProforma.setSelected(true);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirInicializarFrameOrderByProforma() throws Exception {	    	        
	    try {
			if(this.jInternalFrameOrderByProforma==null) {
				
				if(!this.conCargarMinimo) {
					this.jInternalFrameOrderByProforma=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByProforma,false,this);
				} else {
					this.jInternalFrameOrderByProforma=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByProforma,true,this);
				}
				
				this.jDesktopPane.add(this.jInternalFrameOrderByProforma);
				this.jInternalFrameOrderByProforma.setVisible(false);
				this.jInternalFrameOrderByProforma.setSelected(false);
				
				this.jInternalFrameOrderByProforma.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByProforma"));
				
				this.inicializarActualizarBindingTablaOrderByProforma();
			}
		} catch (final Exception e) {
			
		}
	}
	
	
	
	public void abrirInicializarFrameImportacionProforma() throws Exception {	    	        
	    try {
			if(this.jInternalFrameImportacionProforma==null) {
				
				this.jInternalFrameImportacionProforma=new ImportacionJInternalFrame(ProformaConstantesFunciones.SCLASSWEBTITULO,this);			
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionProforma);							
				
				this.jDesktopPane.add(this.jInternalFrameImportacionProforma);
				this.jInternalFrameImportacionProforma.setVisible(false);
				this.jInternalFrameImportacionProforma.setSelected(false);


				this.jInternalFrameImportacionProforma.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionProforma"));
				this.jInternalFrameImportacionProforma.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionProforma"));
				this.jInternalFrameImportacionProforma.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionProforma"));


			}
		} catch (final Exception e) {
			
		}
	}		
	
	
	
	public void abrirInicializarFrameReporteDinamicoProforma() throws Exception {	    	        
	    try {
			
			if(this.jInternalFrameReporteDinamicoProforma==null) {
				this.jInternalFrameReporteDinamicoProforma=new ReporteDinamicoJInternalFrame(ProformaConstantesFunciones.SCLASSWEBTITULO,this);	
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoProforma);	
	
	
				this.jDesktopPane.add(this.jInternalFrameReporteDinamicoProforma);
				this.jInternalFrameReporteDinamicoProforma.setVisible(false);
				this.jInternalFrameReporteDinamicoProforma.setSelected(false);
	
	
	
				this.jInternalFrameReporteDinamicoProforma.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoProforma"));
				this.jInternalFrameReporteDinamicoProforma.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoProforma"));
				this.jInternalFrameReporteDinamicoProforma.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoProforma"));
	
				this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualProforma();
			}

		} catch (final Exception e) {
			
		}
	}	
	
	
	
		

	public void redimensionarTablaPanelRelacionadaDetalleProforma() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.jScrollPanelDatosDetalleProforma.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormProforma.jContentPaneDetalleProforma.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.jScrollPanelDatosDetalleProforma.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.jScrollPanelDatosDetalleProforma.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.jScrollPanelDatosDetalleProforma.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaTerminoProforma() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.jScrollPanelDatosTerminoProforma.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormProforma.jContentPaneDetalleProforma.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.jScrollPanelDatosTerminoProforma.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.jScrollPanelDatosTerminoProforma.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.jScrollPanelDatosTerminoProforma.setPreferredSize(dimension);


	}
					
	public void cerrarFrameDetalleProforma() throws Exception {	    	        
	    try {
			//this.jDesktopPane.add(jInternalFrameDetalleFormProforma);
			
	       	this.jInternalFrameDetalleFormProforma.setVisible(false);
	        this.jInternalFrameDetalleFormProforma.setSelected(false);
			
			//this.jInternalFrameDetalleFormProforma.dispose();
			//this.jInternalFrameDetalleFormProforma=null;
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirFrameReporteDinamicoProforma() throws Exception {	    	        
	    try {
			
			this.jInternalFrameReporteDinamicoProforma.setVisible(true);
	        this.jInternalFrameReporteDinamicoProforma.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void abrirFrameImportacionProforma() throws Exception {	    	        		
	    try {			
			this.jInternalFrameImportacionProforma.setVisible(true);
	        this.jInternalFrameImportacionProforma.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
	    }		
	}	
	
	
	
	
	
	public void abrirFrameOrderByProforma() throws Exception {	    	        		
	    try {
			this.jInternalFrameOrderByProforma.setVisible(true);
	        this.jInternalFrameOrderByProforma.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameOrderByProforma() throws Exception {	    	        		
	    try {			
			this.jInternalFrameOrderByProforma.setVisible(false);
	        this.jInternalFrameOrderByProforma.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameReporteDinamicoProforma() throws Exception {			
	    try {
			this.jInternalFrameReporteDinamicoProforma.setVisible(false);
	        this.jInternalFrameReporteDinamicoProforma.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameImportacionProforma() throws Exception {	    	        		
	    try {
			this.jInternalFrameImportacionProforma.setVisible(false);
	        this.jInternalFrameImportacionProforma.setSelected(false);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	

				public void abrirFrameTreeVendedor(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeVendedor);
						VendedorBeanSwingJInternalFrame vendedorBeanSwingJInternalFrame=new VendedorBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						vendedorBeanSwingJInternalFrame.setJInternalFrameParent(this);
						vendedorBeanSwingJInternalFrame.jInternalFrameTreeVendedor.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							vendedorBeanSwingJInternalFrame.jInternalFrameTreeVendedor.sTipoBusqueda="Vendedor";
						}

						vendedorBeanSwingJInternalFrame.getTodosVendedorArbol();
						vendedorBeanSwingJInternalFrame.jInternalFrameTreeVendedor.setVendedors(vendedorBeanSwingJInternalFrame.vendedorsArbol);
						vendedorBeanSwingJInternalFrame.jInternalFrameTreeVendedor.CargarTreeVendedor();
						vendedorBeanSwingJInternalFrame.jInternalFrameTreeVendedor.setVisible(true);
						vendedorBeanSwingJInternalFrame.jInternalFrameTreeVendedor.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						vendedorBeanSwingJInternalFrame.jInternalFrameTreeVendedor.jInternalFrameParent=this;
						TitledBorder titledBorderProforma=(TitledBorder)this.jScrollPanelDatosProforma.getBorder();
						TitledBorder titledBorderVendedor=(TitledBorder)vendedorBeanSwingJInternalFrame.jScrollPanelDatosVendedor.getBorder();

						titledBorderVendedor.setTitle(titledBorderProforma.getTitle() + " -> Vendedor");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,vendedorBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(vendedorBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeVendedor(VendedorBeanSwingJInternalFrame jInternalFrameTreeVendedor) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeVendedor);
						jInternalFrameTreeVendedor.setVisible(false);
						jInternalFrameTreeVendedor.setSelected(false);
						//jInternalFrameTreeVendedor.dispose();
						//jInternalFrameTreeVendedor=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}

				public void abrirFrameTreeCentroCosto(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeCentroCosto);
						CentroCostoBeanSwingJInternalFrame centrocostoBeanSwingJInternalFrame=new CentroCostoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						centrocostoBeanSwingJInternalFrame.setJInternalFrameParent(this);
						centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.sTipoBusqueda="CentroCosto";
						}

						centrocostoBeanSwingJInternalFrame.getTodosCentroCostoArbol();
						centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.setCentroCostos(centrocostoBeanSwingJInternalFrame.centrocostosArbol);
						centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.CargarTreeCentroCosto();
						centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.setVisible(true);
						centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.jInternalFrameParent=this;
						TitledBorder titledBorderProforma=(TitledBorder)this.jScrollPanelDatosProforma.getBorder();
						TitledBorder titledBorderCentroCosto=(TitledBorder)centrocostoBeanSwingJInternalFrame.jScrollPanelDatosCentroCosto.getBorder();

						titledBorderCentroCosto.setTitle(titledBorderProforma.getTitle() + " -> Centro Costo");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,centrocostoBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(centrocostoBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeCentroCosto(CentroCostoBeanSwingJInternalFrame jInternalFrameTreeCentroCosto) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeCentroCosto);
						jInternalFrameTreeCentroCosto.setVisible(false);
						jInternalFrameTreeCentroCosto.setSelected(false);
						//jInternalFrameTreeCentroCosto.dispose();
						//jInternalFrameTreeCentroCosto=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}
	
	public void jButtonModificarProformaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.modificarProforma(evt,-1,false);
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void modificarProforma(ActionEvent evt,int rowIndex,Boolean esRelaciones) throws Exception {   
		try {
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosProforma.getSelectedRow();
			}
			
			this.habilitarDeshabilitarControlesProforma(true);
			//this.isEsNuevoProforma=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proforma =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.proforma =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.actualizarEstadoCeldasBotonesProforma("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesProforma(false) ;
			
			if(proformaSessionBean.getConGuardarRelaciones()) {
			

				if(this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.terminoproformaSessionBean.getEsGuardarRelacionado() && TerminoProformaJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonTerminoProformaActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.detalleproformaSessionBean.getEsGuardarRelacionado() && DetalleProformaJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonDetalleProformaActionPerformed(null,intSelectedRow,false,true,null);
				}
			}
			
			if(ProformaJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleProforma(esRelaciones);
			}
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualProforma(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarFilaTablaProformaActual() { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL
			Integer intSelectedRow = this.jTableDatosProforma.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proforma =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.proforma =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void seleccionarProforma(ActionEvent evt,int rowIndex) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormProforma==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosProforma.getSelectedRow();
			}
			
			//this.habilitarDeshabilitarControlesProforma(true);
			//this.isEsNuevoProforma=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proforma =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.proforma =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.jInternalFrameParent.setIdCombosCodigoDesdeBusquedaForeignKey(this.proforma.getId(),this.sTipoBusqueda);
			
			this.dispose();
			
			//this.actualizarEstadoCeldasBotonesProforma("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			/*
			this.inicializarActualizarBindingBotonesProforma(false) ;
			
			if(ProformaJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleProforma(esRelaciones);
			}
			*/
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualProforma(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void setIdCombosCodigoDesdeBusquedaForeignKey(Long id,String sType)throws Exception{
		
		try {
			
			if(sType.equals("Empleado")) {
				if(!this.proformaConstantesFunciones.cargarid_empleadoProforma) {
					this.cargarCombosEmpleadosForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingProforma(false,false);
					this.cargarCombosFrameEmpleadosForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_empleado (id);

				this.recargarComboTablaEmpleado(this.empleadosForeignKey);

			}
			
			if(sType.equals("Cliente")) {
				if(!this.proformaConstantesFunciones.cargarid_clienteProforma) {
					this.cargarCombosClientesForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingProforma(false,false);
					this.cargarCombosFrameClientesForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_cliente (id);

				this.recargarComboTablaCliente(this.clientesForeignKey);

			}
			
			if(sType.equals("Vendedor")) {
				if(!this.proformaConstantesFunciones.cargarid_vendedorProforma) {
					this.cargarCombosVendedorsForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingProforma(false,false);
					this.cargarCombosFrameVendedorsForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_vendedor (id);

				this.recargarComboTablaVendedor(this.vendedorsForeignKey);

			}
			
			if(sType.equals("CentroCosto")) {
				if(!this.proformaConstantesFunciones.cargarid_centro_costoProforma) {
					this.cargarCombosCentroCostosForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingProforma(false,false);
					this.cargarCombosFrameCentroCostosForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_centro_costo (id);

				this.recargarComboTablaCentroCosto(this.centrocostosForeignKey);

			}
			
			if(sType.equals("TipoCambio")) {
				if(!this.proformaConstantesFunciones.cargarid_tipo_cambioProforma) {
					this.cargarCombosTipoCambiosForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingProforma(false,false);
					this.cargarCombosFrameTipoCambiosForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_tipo_cambio (id);

				this.recargarComboTablaTipoCambio(this.tipocambiosForeignKey);

			}
		} catch(Exception e) {
			throw e;
		}
	}
	
						
	
	public void recargarComboTablaAnio(List<Anio> aniosForeignKey)throws Exception{
		TableColumn tableColumnAnio=this.jTableDatosProforma.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProforma,ProformaConstantesFunciones.LABEL_IDANIO));
		TableCellEditor tableCellEditorAnio =tableColumnAnio.getCellEditor();

		AnioTableCell anioTableCellFk=(AnioTableCell)tableCellEditorAnio;

		if(anioTableCellFk!=null) {
			anioTableCellFk.setaniosForeignKey(aniosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosProforma.getSelectedRow();

		//if(intSelectedRow<=0) {
			//anioTableCellFk.setRowActual(intSelectedRow);
			//anioTableCellFk.setaniosForeignKeyActual(aniosForeignKey);
		//}


		if(anioTableCellFk!=null) {
			anioTableCellFk.RecargarAniosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaMes(List<Mes> messForeignKey)throws Exception{
		TableColumn tableColumnMes=this.jTableDatosProforma.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProforma,ProformaConstantesFunciones.LABEL_IDMES));
		TableCellEditor tableCellEditorMes =tableColumnMes.getCellEditor();

		MesTableCell mesTableCellFk=(MesTableCell)tableCellEditorMes;

		if(mesTableCellFk!=null) {
			mesTableCellFk.setmessForeignKey(messForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosProforma.getSelectedRow();

		//if(intSelectedRow<=0) {
			//mesTableCellFk.setRowActual(intSelectedRow);
			//mesTableCellFk.setmessForeignKeyActual(messForeignKey);
		//}


		if(mesTableCellFk!=null) {
			mesTableCellFk.RecargarMessForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
		
	
	public void recargarComboTablaEmpleado(List<Empleado> empleadosForeignKey)throws Exception{
		TableColumn tableColumnEmpleado=this.jTableDatosProforma.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProforma,ProformaConstantesFunciones.LABEL_IDEMPLEADO));
		TableCellEditor tableCellEditorEmpleado =tableColumnEmpleado.getCellEditor();

		EmpleadoTableCell empleadoTableCellFk=(EmpleadoTableCell)tableCellEditorEmpleado;

		if(empleadoTableCellFk!=null) {
			empleadoTableCellFk.setempleadosForeignKey(empleadosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosProforma.getSelectedRow();

		//if(intSelectedRow<=0) {
			//empleadoTableCellFk.setRowActual(intSelectedRow);
			//empleadoTableCellFk.setempleadosForeignKeyActual(empleadosForeignKey);
		//}


		if(empleadoTableCellFk!=null) {
			empleadoTableCellFk.RecargarEmpleadosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaFormato(List<Formato> formatosForeignKey)throws Exception{
		TableColumn tableColumnFormato=this.jTableDatosProforma.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProforma,ProformaConstantesFunciones.LABEL_IDFORMATO));
		TableCellEditor tableCellEditorFormato =tableColumnFormato.getCellEditor();

		FormatoTableCell formatoTableCellFk=(FormatoTableCell)tableCellEditorFormato;

		if(formatoTableCellFk!=null) {
			formatoTableCellFk.setformatosForeignKey(formatosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosProforma.getSelectedRow();

		//if(intSelectedRow<=0) {
			//formatoTableCellFk.setRowActual(intSelectedRow);
			//formatoTableCellFk.setformatosForeignKeyActual(formatosForeignKey);
		//}


		if(formatoTableCellFk!=null) {
			formatoTableCellFk.RecargarFormatosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaEstadoProforma(List<EstadoProforma> estadoproformasForeignKey)throws Exception{
		TableColumn tableColumnEstadoProforma=this.jTableDatosProforma.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProforma,ProformaConstantesFunciones.LABEL_IDESTADOPROFORMA));
		TableCellEditor tableCellEditorEstadoProforma =tableColumnEstadoProforma.getCellEditor();

		EstadoProformaTableCell estadoproformaTableCellFk=(EstadoProformaTableCell)tableCellEditorEstadoProforma;

		if(estadoproformaTableCellFk!=null) {
			estadoproformaTableCellFk.setestadoproformasForeignKey(estadoproformasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosProforma.getSelectedRow();

		//if(intSelectedRow<=0) {
			//estadoproformaTableCellFk.setRowActual(intSelectedRow);
			//estadoproformaTableCellFk.setestadoproformasForeignKeyActual(estadoproformasForeignKey);
		//}


		if(estadoproformaTableCellFk!=null) {
			estadoproformaTableCellFk.RecargarEstadoProformasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCliente(List<Cliente> clientesForeignKey)throws Exception{
		TableColumn tableColumnCliente=this.jTableDatosProforma.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProforma,ProformaConstantesFunciones.LABEL_IDCLIENTE));
		TableCellEditor tableCellEditorCliente =tableColumnCliente.getCellEditor();

		ClienteTableCell clienteTableCellFk=(ClienteTableCell)tableCellEditorCliente;

		if(clienteTableCellFk!=null) {
			clienteTableCellFk.setclientesForeignKey(clientesForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosProforma.getSelectedRow();

		//if(intSelectedRow<=0) {
			//clienteTableCellFk.setRowActual(intSelectedRow);
			//clienteTableCellFk.setclientesForeignKeyActual(clientesForeignKey);
		//}


		if(clienteTableCellFk!=null) {
			clienteTableCellFk.RecargarClientesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoPrecio(List<TipoPrecio> tipopreciosForeignKey)throws Exception{
		TableColumn tableColumnTipoPrecio=this.jTableDatosProforma.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProforma,ProformaConstantesFunciones.LABEL_IDTIPOPRECIO));
		TableCellEditor tableCellEditorTipoPrecio =tableColumnTipoPrecio.getCellEditor();

		TipoPrecioTableCell tipoprecioTableCellFk=(TipoPrecioTableCell)tableCellEditorTipoPrecio;

		if(tipoprecioTableCellFk!=null) {
			tipoprecioTableCellFk.settipopreciosForeignKey(tipopreciosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosProforma.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipoprecioTableCellFk.setRowActual(intSelectedRow);
			//tipoprecioTableCellFk.settipopreciosForeignKeyActual(tipopreciosForeignKey);
		//}


		if(tipoprecioTableCellFk!=null) {
			tipoprecioTableCellFk.RecargarTipoPreciosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaVendedor(List<Vendedor> vendedorsForeignKey)throws Exception{
		TableColumn tableColumnVendedor=this.jTableDatosProforma.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProforma,ProformaConstantesFunciones.LABEL_IDVENDEDOR));
		TableCellEditor tableCellEditorVendedor =tableColumnVendedor.getCellEditor();

		VendedorTableCell vendedorTableCellFk=(VendedorTableCell)tableCellEditorVendedor;

		if(vendedorTableCellFk!=null) {
			vendedorTableCellFk.setvendedorsForeignKey(vendedorsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosProforma.getSelectedRow();

		//if(intSelectedRow<=0) {
			//vendedorTableCellFk.setRowActual(intSelectedRow);
			//vendedorTableCellFk.setvendedorsForeignKeyActual(vendedorsForeignKey);
		//}


		if(vendedorTableCellFk!=null) {
			vendedorTableCellFk.RecargarVendedorsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaSubCliente(List<SubCliente> subclientesForeignKey)throws Exception{
		TableColumn tableColumnSubCliente=this.jTableDatosProforma.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProforma,ProformaConstantesFunciones.LABEL_IDSUBCLIENTE));
		TableCellEditor tableCellEditorSubCliente =tableColumnSubCliente.getCellEditor();

		SubClienteTableCell subclienteTableCellFk=(SubClienteTableCell)tableCellEditorSubCliente;

		if(subclienteTableCellFk!=null) {
			subclienteTableCellFk.setsubclientesForeignKey(subclientesForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosProforma.getSelectedRow();

		//if(intSelectedRow<=0) {
			//subclienteTableCellFk.setRowActual(intSelectedRow);
			//subclienteTableCellFk.setsubclientesForeignKeyActual(subclientesForeignKey);
		//}


		if(subclienteTableCellFk!=null) {
			subclienteTableCellFk.RecargarSubClientesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoViaTransporte(List<TipoViaTransporte> tipoviatransportesForeignKey)throws Exception{
		TableColumn tableColumnTipoViaTransporte=this.jTableDatosProforma.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProforma,ProformaConstantesFunciones.LABEL_IDTIPOVIATRANSPORTE));
		TableCellEditor tableCellEditorTipoViaTransporte =tableColumnTipoViaTransporte.getCellEditor();

		TipoViaTransporteTableCell tipoviatransporteTableCellFk=(TipoViaTransporteTableCell)tableCellEditorTipoViaTransporte;

		if(tipoviatransporteTableCellFk!=null) {
			tipoviatransporteTableCellFk.settipoviatransportesForeignKey(tipoviatransportesForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosProforma.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipoviatransporteTableCellFk.setRowActual(intSelectedRow);
			//tipoviatransporteTableCellFk.settipoviatransportesForeignKeyActual(tipoviatransportesForeignKey);
		//}


		if(tipoviatransporteTableCellFk!=null) {
			tipoviatransporteTableCellFk.RecargarTipoViaTransportesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTransporte(List<Transporte> transportesForeignKey)throws Exception{
		TableColumn tableColumnTransporte=this.jTableDatosProforma.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProforma,ProformaConstantesFunciones.LABEL_IDTRANSPORTE));
		TableCellEditor tableCellEditorTransporte =tableColumnTransporte.getCellEditor();

		TransporteTableCell transporteTableCellFk=(TransporteTableCell)tableCellEditorTransporte;

		if(transporteTableCellFk!=null) {
			transporteTableCellFk.settransportesForeignKey(transportesForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosProforma.getSelectedRow();

		//if(intSelectedRow<=0) {
			//transporteTableCellFk.setRowActual(intSelectedRow);
			//transporteTableCellFk.settransportesForeignKeyActual(transportesForeignKey);
		//}


		if(transporteTableCellFk!=null) {
			transporteTableCellFk.RecargarTransportesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaRutaTransporte(List<RutaTransporte> rutatransportesForeignKey)throws Exception{
		TableColumn tableColumnRutaTransporte=this.jTableDatosProforma.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProforma,ProformaConstantesFunciones.LABEL_IDRUTATRANSPORTE));
		TableCellEditor tableCellEditorRutaTransporte =tableColumnRutaTransporte.getCellEditor();

		RutaTransporteTableCell rutatransporteTableCellFk=(RutaTransporteTableCell)tableCellEditorRutaTransporte;

		if(rutatransporteTableCellFk!=null) {
			rutatransporteTableCellFk.setrutatransportesForeignKey(rutatransportesForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosProforma.getSelectedRow();

		//if(intSelectedRow<=0) {
			//rutatransporteTableCellFk.setRowActual(intSelectedRow);
			//rutatransporteTableCellFk.setrutatransportesForeignKeyActual(rutatransportesForeignKey);
		//}


		if(rutatransporteTableCellFk!=null) {
			rutatransporteTableCellFk.RecargarRutaTransportesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCentroCosto(List<CentroCosto> centrocostosForeignKey)throws Exception{
		TableColumn tableColumnCentroCosto=this.jTableDatosProforma.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProforma,ProformaConstantesFunciones.LABEL_IDCENTROCOSTO));
		TableCellEditor tableCellEditorCentroCosto =tableColumnCentroCosto.getCellEditor();

		CentroCostoTableCell centrocostoTableCellFk=(CentroCostoTableCell)tableCellEditorCentroCosto;

		if(centrocostoTableCellFk!=null) {
			centrocostoTableCellFk.setcentrocostosForeignKey(centrocostosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosProforma.getSelectedRow();

		//if(intSelectedRow<=0) {
			//centrocostoTableCellFk.setRowActual(intSelectedRow);
			//centrocostoTableCellFk.setcentrocostosForeignKeyActual(centrocostosForeignKey);
		//}


		if(centrocostoTableCellFk!=null) {
			centrocostoTableCellFk.RecargarCentroCostosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoProforma(List<TipoProforma> tipoproformasForeignKey)throws Exception{
		TableColumn tableColumnTipoProforma=this.jTableDatosProforma.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProforma,ProformaConstantesFunciones.LABEL_IDTIPOPROFORMA));
		TableCellEditor tableCellEditorTipoProforma =tableColumnTipoProforma.getCellEditor();

		TipoProformaTableCell tipoproformaTableCellFk=(TipoProformaTableCell)tableCellEditorTipoProforma;

		if(tipoproformaTableCellFk!=null) {
			tipoproformaTableCellFk.settipoproformasForeignKey(tipoproformasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosProforma.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipoproformaTableCellFk.setRowActual(intSelectedRow);
			//tipoproformaTableCellFk.settipoproformasForeignKeyActual(tipoproformasForeignKey);
		//}


		if(tipoproformaTableCellFk!=null) {
			tipoproformaTableCellFk.RecargarTipoProformasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaConsignatario(List<Consignatario> consignatariosForeignKey)throws Exception{
		TableColumn tableColumnConsignatario=this.jTableDatosProforma.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProforma,ProformaConstantesFunciones.LABEL_IDCONSIGNATARIO));
		TableCellEditor tableCellEditorConsignatario =tableColumnConsignatario.getCellEditor();

		ConsignatarioTableCell consignatarioTableCellFk=(ConsignatarioTableCell)tableCellEditorConsignatario;

		if(consignatarioTableCellFk!=null) {
			consignatarioTableCellFk.setconsignatariosForeignKey(consignatariosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosProforma.getSelectedRow();

		//if(intSelectedRow<=0) {
			//consignatarioTableCellFk.setRowActual(intSelectedRow);
			//consignatarioTableCellFk.setconsignatariosForeignKeyActual(consignatariosForeignKey);
		//}


		if(consignatarioTableCellFk!=null) {
			consignatarioTableCellFk.RecargarConsignatariosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoCambio(List<TipoCambio> tipocambiosForeignKey)throws Exception{
		TableColumn tableColumnTipoCambio=this.jTableDatosProforma.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProforma,ProformaConstantesFunciones.LABEL_IDTIPOCAMBIO));
		TableCellEditor tableCellEditorTipoCambio =tableColumnTipoCambio.getCellEditor();

		TipoCambioTableCell tipocambioTableCellFk=(TipoCambioTableCell)tableCellEditorTipoCambio;

		if(tipocambioTableCellFk!=null) {
			tipocambioTableCellFk.settipocambiosForeignKey(tipocambiosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosProforma.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipocambioTableCellFk.setRowActual(intSelectedRow);
			//tipocambioTableCellFk.settipocambiosForeignKeyActual(tipocambiosForeignKey);
		//}


		if(tipocambioTableCellFk!=null) {
			tipocambioTableCellFk.RecargarTipoCambiosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	

	public void setCombosCodigoDesdeBusquedaid_empleado (Long id) throws Exception {
		this.setActualEmpleadoForeignKey(id,true,"Todos");

	};
	

	public void setCombosCodigoDesdeBusquedaid_cliente (Long id) throws Exception {
		this.setActualClienteForeignKey(id,true,"Todos");

	};
	

	public void setCombosCodigoDesdeBusquedaid_vendedor (Long id) throws Exception {
		this.setActualVendedorForeignKey(id,true,"Todos");

	};
	

	public void setCombosCodigoDesdeBusquedaid_centro_costo (Long id) throws Exception {
		this.setActualCentroCostoForeignKey(id,true,"Todos");

	};
	

	public void setCombosCodigoDesdeBusquedaid_tipo_cambio (Long id) throws Exception {
		this.setActualTipoCambioForeignKey(id,true,"Todos");

	};
	
	public void jButtonActualizarProformaActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingParametrosReportesProforma(false);
			
			//if(!this.isEsNuevoProforma) {								
				int intSelectedRow = this.jTableDatosProforma.getSelectedRow();	
				
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proforma =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.proforma =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
			//}
				
			if(ProformaJInternalFrame.ISBINDING_MANUAL_TABLA) {
				this.setVariablesFormularioToObjetoActualProforma(this.proforma,true);
				this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
				
			}
			
			if(this.permiteMantenimiento(this.proforma)) {	
				this.actualizar();
				
				if(!this.isGuardarCambiosEnLote && !this.proformaSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
					
					this.isEsNuevoProforma=true;
					this.inicializarActualizarBindingTablaProforma(false);
					this.isEsNuevoProforma=false;
				
				} else {					
					
					//PARA RELACIONADO ACTUALIZAR FILA TOTALES
					this.isEsNuevoProforma=true;
					this.procesoActualizarFilaTotales(false,"MANTENIMIENTO");
					this.isEsNuevoProforma=false;
				}
						
								
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesProforma(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualProforma(false);
				
				this.habilitarDeshabilitarControlesProforma(false);
			
												
				
				if(ProformaJInternalFrame.CON_DATOS_FRAME) {
					if(!this.isPostAccionSinCerrar) {
						this.cerrarFrameDetalleProforma();
					}
				}
				
				if(this.isPostAccionNuevo) {
					this.jButtonNuevoProformaActionPerformed(evt,proformaSessionBean.getConGuardarRelaciones());
				} else {
					if(this.isPostAccionSinCerrar) {
						Integer intSelectedRowActual=this.getIndiceActualProforma(this.proforma,intSelectedRow);
						
						if(intSelectedRow>-1) {
							this.jTableDatosProforma.setRowSelectionInterval(intSelectedRowActual, intSelectedRowActual);
							this.jButtonIdActionPerformed(evt,intSelectedRowActual,proformaSessionBean.getConGuardarRelaciones(),false);
						}
					}
				}
				
				this.cancelar(false);
				
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.commitNewConnexionToDeep();
			}
			
			
			if(this.jInternalFrameParent!=null) { //&& this.isEsMantenimientoRelacionado) {
				Boolean esUsoDesdeHijoLocal=true;
				String sTipo="Formulario";
				Boolean conIrServidorAplicacionParent=false;
				Long id=this.proforma.getId();
				ArrayList<String> arrClasses=new ArrayList<String>();
				
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();
				
				generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
				generalEntityParameterGeneral.setsDominio("Formulario");
				generalEntityParameterGeneral.setsDominioTipo(Proforma.class.getName());
				
				this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Proforma.class.getName(),sTipo,"FORMULARIO",esControlTabla,conIrServidorAplicacionParent,
					id,this, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.FORM,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
					evt,generalEntityParameterGeneral,this);
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonEliminarProformaActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.getNewConnexionToDeep("");
			}
			
			int intSelectedRow = this.jTableDatosProforma.getSelectedRow();	       
							
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proforma =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
				this.proforma.setIsDeleted(true);
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.proforma =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
				this.proforma.setIsDeleted(true);
			}
			//ARCHITECTURE
			
			if(this.permiteMantenimiento(this.proforma)) {
				this.eliminar();
				
				if(!this.isGuardarCambiosEnLote && !this.proformaSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
				}
				
				((ProformaModel) this.jTableDatosProforma.getModel()).fireTableRowsDeleted(intSelectedRow,intSelectedRow);
				
				this.isEsNuevoProforma=true;
				this.inicializarActualizarBindingTablaProforma(false);
				this.isEsNuevoProforma=false;									
					
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesProforma(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualProforma(false);
				
				this.habilitarDeshabilitarControlesProforma(false);
				
				
				
				if(ProformaJInternalFrame.CON_DATOS_FRAME) {
					this.cerrarFrameDetalleProforma();
				}
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.closeNewConnexionToDeep();
			}
		}		
	}
		
	public void jButtonCancelarProformaActionPerformed(ActionEvent evt) throws Exception {                                         	   	       
	  	try {
			if(jTableDatosProforma.getRowCount()>=1) {
				jTableDatosProforma.removeRowSelectionInterval(0, jTableDatosProforma.getRowCount()-1);						
			}
						
			this.invalidValues=new InvalidValue[0];
			this.habilitarDeshabilitarControlesProforma(false);
			this.cancelar(true);			
			this.inicializarActualizarBindingTablaProforma(false);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesProforma(false) ;
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualProforma(false) ;
			
			this.isEsNuevoProforma=false;
			
			if(ProformaJInternalFrame.CON_DATOS_FRAME) {
				this.cerrarFrameDetalleProforma();
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonGuardarCambiosProformaActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.getNewConnexionToDeep("");
			}
			
			//this.estaModoGuardarCambios=true;
			
	    	this.guardarCambios();
			
			if(!this.isErrorGuardar) {
				this.procesarBusqueda(this.sAccionBusqueda);
				
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingProforma(false);
				
				//SI ES MANUAL
				if(ProformaJInternalFrame.ISBINDING_MANUAL) {				
					//this.inicializarActualizarBindingManualProforma();				
				}
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.closeNewConnexionToDeep();
			}
			
			//this.estaModoGuardarCambios=false;
		}
	}
	
	public void jButtonNuevoGuardarCambiosProformaActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			this.estaModoNuevo=true;
			this.estaModoNuevoGuardarCambios=true;
			
			//LO HACE NUEVOPREPARAR
			//this.iIdNuevoProforma--;			
			//Proforma proformaAux= new Proforma();			
			//proformaAux.setId(this.iIdNuevoProforma);
			
			if(this.jInternalFrameDetalleFormProforma==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.aumentarTamanioFilaNuevaTablaProforma();
			
			if(this.conTotales) {
				this.quitarFilaTotales();
			}
			
			this.nuevoPreparar(true);
			
			this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
			
			this.proforma.setsType("NUEVO_GUARDAR_CAMBIOS");
			
			//LO HACE NUEVOPREPARAR
			/*
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				this.proformaLogic.getProformas().add(this.proformaAux);
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				this.proformas.add(this.proformaAux);				
			}
			*/
			
			this.inicializarActualizarBindingTablaProforma(false);
			
			this.jTableDatosProforma.setRowSelectionInterval(this.getIndiceNuevoProforma(), this.getIndiceNuevoProforma());
			
			int iLastRow =  this.jTableDatosProforma.getRowCount () - 1;
			Rectangle rectangle = this.jTableDatosProforma.getCellRect(iLastRow, 0, true);
			
			this.jTableDatosProforma.scrollRectToVisible(rectangle);
			
			//FILA TOTALES
			if(this.conTotales) {
				this.crearFilaTotales();
				
				this.inicializarActualizarBindingTablaProforma(false);
			}

		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;
			this.estaModoNuevoGuardarCambios=false;
		}
	}		
	
	public void jButtonRecargarInformacionProformaActionPerformed(ActionEvent evt) throws Exception {    		
		try {
			this.iNumeroPaginacionPagina=0;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingProforma(false,false);
			
	    	this.recargarInformacion();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingProforma(false);
			
			//SI ES MANUAL
			if(ProformaJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualProforma();
			}
			
			//this.abrirFrameTreeProforma();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.closeNewConnexionToDeep();
			}
		}	
	}
	
	
	public void jButtonGenerarImportacionProformaActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedReader bufferedReader = null;
		String sXmlStringFile="";
		String sPath="";
		this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
		DatoGeneralMinimo datoGeneralMinimo=new DatoGeneralMinimo();
		String sLine="";
		
		try {			
			if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR IMPORTACION DE ProformaS ?", "MANTENIMIENTO DE Proforma", JOptionPane.OK_CANCEL_OPTION) == 0) {
				bufferedReader = new BufferedReader(new FileReader(this.jInternalFrameImportacionProforma.getFileImportacion().getAbsolutePath()));
								
				while ((sLine = bufferedReader.readLine()) != null) {
					datoGeneralMinimo=new DatoGeneralMinimo();
					datoGeneralMinimo.setsDescripcion(sLine);
					
					this.arrDatoGeneralMinimos.add(datoGeneralMinimo);
				}
				
				this.actualizarParametrosGeneralProforma();
						
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {						
					this.proformaReturnGeneral=proformaLogic.procesarImportacionProformasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this.arrDatoGeneralMinimos,this.proformaParameterGeneral);
						
				} else if(Constantes.ISUSAEJBREMOTE) {
						
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
						
				this.procesarProformaReturnGeneral();
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedReader != null) {
				bufferedReader.close();
			}	
		}				
	}
	
	
	
	public void jButtonAbrirImportacionProformaActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {
			int iReturnArchivo = this.jInternalFrameImportacionProforma.getjFileChooserImportacion().showOpenDialog(this);
 
            if (iReturnArchivo == JFileChooser.APPROVE_OPTION) {
            	this.jInternalFrameImportacionProforma.setFileImportacion(this.jInternalFrameImportacionProforma.getjFileChooserImportacion().getSelectedFile());
            	
				this.jInternalFrameImportacionProforma.getjTextFieldPathArchivoImportacion().setText(this.jInternalFrameImportacionProforma.getFileImportacion().getName());
				
				//System.out.println("ARCHIVO ESCOGIDO: "+this.fileImportacionProforma.getName());
				
            } else {
                //System.out.println("CANCELAR SELECCION");
				this.jInternalFrameImportacionProforma.getjTextFieldPathArchivoImportacion().setText("SELECCION CANCELADA");
            }			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}		
	}
	
	
	public void jButtonGenerarReporteDinamicoProformaActionPerformed(ActionEvent evt) throws Exception {    		
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {	
		
		ArrayList<Proforma> proformasSeleccionados=new ArrayList<Proforma>();		

		proformasSeleccionados=this.getProformasSeleccionados(true);
		
		
		this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoProforma.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();
		
		this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoProforma.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
		
		
		this.sTipoArchivoReporte=this.sTipoArchivoReporteDinamico;
		
		//this.sTipoReporteExtra="Base";
		
			InputStream reportFile=null;
			InputStream imageFile=null;
			
			imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		
			reportFile = AuxiliarReportes.class.getResourceAsStream("ProformaBaseDesign.jrxml");	
			
			sPath=this.parametroGeneralUsuario.getpath_exportar()+"ProformaBaseDesign.jrxml";
			
			sXmlStringFile=Funciones2.getStringFromInputStream(reportFile);
						
			bufferedWriter = new BufferedWriter(new FileWriter(sPath));
			
			
			sXmlStringFile=this.actualizarReporteDinamico(sXmlStringFile);
			
			
			bufferedWriter.write(sXmlStringFile);
			
			bufferedWriter.close();
			
			try{JasperCompileManager.compileReportToFile(sPath);}catch(Exception e){e.printStackTrace();}
			
			this.actualizarVariablesTipoReporte(false,true,false,sPath);
			
			/*
			this.esReporteDinamico=true;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");
			this.sTipoReporteExtra="";
			*/
			
			this.generarReporteProformas("Todos",proformasSeleccionados );

			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.proformaSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				//DEBE APARECER EL REPORTE DIRECTAMENTE
				//JOptionPane.showMessageDialog(this,"GENERADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Proforma",JOptionPane.INFORMATION_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}
	}		
	
	
	public String actualizarReporteDinamico(String sXmlStringFile) {				
		Reporte reporte=new Reporte();
		Integer iAnchoMaximoVertical=535;//781,782
		Integer iAnchoMaximoHorizontal=782;
		Integer iAnchoSum=0;
		Integer iAnchoColumna=0;
		
		Integer iAnchoMargenes=60;
		String sWidthGrafico="535";
		
		for(int index:this.jInternalFrameReporteDinamicoProforma.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoProforma.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case ProformaConstantesFunciones.LABEL_IDEMPRESA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Empresa_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Empresa_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Empresa_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Empresa_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProformaConstantesFunciones.LABEL_IDSUCURSAL:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Sucursal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Sucursal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Sucursal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Sucursal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProformaConstantesFunciones.LABEL_IDUSUARIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Usuario_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Usuario_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Usuario_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Usuario_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProformaConstantesFunciones.LABEL_IDEJERCICIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Ejercicio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Ejercicio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Ejercicio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Ejercicio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProformaConstantesFunciones.LABEL_IDPERIODO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Periodo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Periodo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Periodo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Periodo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProformaConstantesFunciones.LABEL_IDANIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Anio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Anio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Anio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Anio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProformaConstantesFunciones.LABEL_IDMES:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Mes_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Mes_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Mes_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Mes_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProformaConstantesFunciones.LABEL_NUMEROPREIMPRESO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_meroPreImpreso_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_meroPreImpreso_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_meroPreImpreso_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_meroPreImpreso_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProformaConstantesFunciones.LABEL_FECHAEMISION:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_chaEmision_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_chaEmision_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_chaEmision_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_chaEmision_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProformaConstantesFunciones.LABEL_DIAS:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_as_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_as_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_as_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_as_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProformaConstantesFunciones.LABEL_FECHAVENCIMIENTO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_chaVencimiento_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_chaVencimiento_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_chaVencimiento_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_chaVencimiento_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProformaConstantesFunciones.LABEL_IDMONEDA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Moneda_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Moneda_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Moneda_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Moneda_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProformaConstantesFunciones.LABEL_COTIZACION:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_tizacion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_tizacion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_tizacion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_tizacion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProformaConstantesFunciones.LABEL_IDEMPLEADO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Empleado_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Empleado_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Empleado_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Empleado_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProformaConstantesFunciones.LABEL_IDFORMATO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Formato_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Formato_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Formato_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Formato_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProformaConstantesFunciones.LABEL_IDESTADOPROFORMA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_EstadoProforma_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_EstadoProforma_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_EstadoProforma_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_EstadoProforma_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProformaConstantesFunciones.LABEL_DIRECCION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_reccion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_reccion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_reccion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_reccion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProformaConstantesFunciones.LABEL_IDCLIENTE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Cliente_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Cliente_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Cliente_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Cliente_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProformaConstantesFunciones.LABEL_RUC:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_c_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_c_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_c_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_c_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProformaConstantesFunciones.LABEL_ESOFERTA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Oferta_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Oferta_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Oferta_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Oferta_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProformaConstantesFunciones.LABEL_TELEFONO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_lefono_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_lefono_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_lefono_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_lefono_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProformaConstantesFunciones.LABEL_IDTIPOPRECIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoPrecio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoPrecio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoPrecio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoPrecio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProformaConstantesFunciones.LABEL_IDVENDEDOR:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Vendedor_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Vendedor_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Vendedor_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Vendedor_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProformaConstantesFunciones.LABEL_IDSUBCLIENTE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_SubCliente_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_SubCliente_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_SubCliente_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_SubCliente_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProformaConstantesFunciones.LABEL_IDTIPOVIATRANSPORTE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoViaTransporte_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoViaTransporte_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoViaTransporte_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoViaTransporte_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProformaConstantesFunciones.LABEL_IDTRANSPORTE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Transporte_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Transporte_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Transporte_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Transporte_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProformaConstantesFunciones.LABEL_IDRUTATRANSPORTE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_RutaTransporte_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_RutaTransporte_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_RutaTransporte_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_RutaTransporte_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProformaConstantesFunciones.LABEL_DESCRIPCION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_scripcion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_scripcion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_scripcion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_scripcion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProformaConstantesFunciones.LABEL_DESCUENTOPORCENTAJE:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_scuentoPorcentaje_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_scuentoPorcentaje_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_scuentoPorcentaje_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_scuentoPorcentaje_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProformaConstantesFunciones.LABEL_MONTOCONIVA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ntoConIva_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ntoConIva_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ntoConIva_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ntoConIva_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProformaConstantesFunciones.LABEL_SUMAN:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_man_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_man_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_man_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_man_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProformaConstantesFunciones.LABEL_DESCUENTOVALOR:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_scuentoValor_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_scuentoValor_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_scuentoValor_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_scuentoValor_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProformaConstantesFunciones.LABEL_MONTOSINIVA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ntoSinIva_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ntoSinIva_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ntoSinIva_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ntoSinIva_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProformaConstantesFunciones.LABEL_DESCUENTOGENERAL:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_scuentoGeneral_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_scuentoGeneral_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_scuentoGeneral_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_scuentoGeneral_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProformaConstantesFunciones.LABEL_FLETE:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ete_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ete_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ete_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ete_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProformaConstantesFunciones.LABEL_ULTIMOCOSTO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_timoCosto_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_timoCosto_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_timoCosto_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_timoCosto_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProformaConstantesFunciones.LABEL_SUBTOTAL:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_btotal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_btotal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_btotal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_btotal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProformaConstantesFunciones.LABEL_OTROSCARGOS:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_rosCargos_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_rosCargos_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_rosCargos_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_rosCargos_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProformaConstantesFunciones.LABEL_MARGENUTILIDAD:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_rgenUtilidad_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_rgenUtilidad_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_rgenUtilidad_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_rgenUtilidad_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProformaConstantesFunciones.LABEL_IVA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_a_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_a_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_a_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_a_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProformaConstantesFunciones.LABEL_FINANCIAMIENTO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_nanciamiento_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_nanciamiento_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_nanciamiento_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_nanciamiento_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProformaConstantesFunciones.LABEL_TOTAL:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_tal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_tal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_tal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_tal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProformaConstantesFunciones.LABEL_OTROSVALORES:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_rosValores_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_rosValores_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_rosValores_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_rosValores_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProformaConstantesFunciones.LABEL_ANTICIPO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ticipo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ticipo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ticipo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ticipo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProformaConstantesFunciones.LABEL_ICE:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_e_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_e_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_e_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_e_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProformaConstantesFunciones.LABEL_MONTORETENCION:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ntoRetencion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ntoRetencion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ntoRetencion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ntoRetencion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProformaConstantesFunciones.LABEL_FECHA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_cha_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_cha_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_cha_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_cha_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProformaConstantesFunciones.LABEL_FECHASERVIDOR:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_chaServidor_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_chaServidor_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_chaServidor_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_chaServidor_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProformaConstantesFunciones.LABEL_HORAINICIO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_raInicio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_raInicio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_raInicio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_raInicio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProformaConstantesFunciones.LABEL_HORAFIN:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_raFin_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_raFin_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_raFin_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_raFin_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProformaConstantesFunciones.LABEL_IDCENTROCOSTO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_CentroCosto_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_CentroCosto_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_CentroCosto_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_CentroCosto_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProformaConstantesFunciones.LABEL_IDTIPOPROFORMA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoProforma_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoProforma_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoProforma_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoProforma_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProformaConstantesFunciones.LABEL_IDCONSIGNATARIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Consignatario_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Consignatario_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Consignatario_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Consignatario_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ProformaConstantesFunciones.LABEL_IDTIPOCAMBIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoCambio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoCambio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoCambio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoCambio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;
					
				default :
					break;
			}
		}
		
		iAnchoSum+=iAnchoMargenes;
		
		if(iAnchoSum>iAnchoMaximoVertical) {
			sXmlStringFile=sXmlStringFile.replace("595", "842");
			//sXmlStringFile=sXmlStringFile.replace("842", "595");
			sXmlStringFile=sXmlStringFile.replace("535", "782");
			sXmlStringFile=sXmlStringFile.replace("Portrait", "Landscape");			
			sWidthGrafico="782";
		
		} else {
			sXmlStringFile=sXmlStringFile.replace("842", "595");
			//sXmlStringFile=sXmlStringFile.replace("595", "842");
			sXmlStringFile=sXmlStringFile.replace("782", "535");
			sXmlStringFile=sXmlStringFile.replace("Landscape", "Portrait");
			sWidthGrafico="535";
		}
		
		if(this.jInternalFrameReporteDinamicoProforma.getjCheckBoxConGraficoDinamico().isSelected()) {
			sXmlStringFile=this.actualizarGraficoReporteDinamico(sXmlStringFile,sWidthGrafico);
		} else {
			sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "30");
		}
		
		return sXmlStringFile;
	}
	
	
	
	public String actualizarGraficoReporteDinamico(String sXmlStringFile,String sWidthGrafico) {		
		String strGrafico="";		
		String sTipo="NORMAL";
		String strCategorySeries="";
		String sNombreCampoCategoria="";
		String sNombreCampoCategoriaValor="";
		Reporte reporte=new Reporte();
		Reporte reporteCategoriaValor=new Reporte();
		Reporte reporteTipoGraficoReporte=new Reporte();
		Boolean existe=false;
		
		sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "280");
		
		//CATEGORIA GRAFICO				
		reporte=((Reporte)this.jInternalFrameReporteDinamicoProforma.getjComboBoxColumnaCategoriaGrafico().getSelectedItem());
				
		//TIPO GRAFICO REPORTE
		reporteTipoGraficoReporte=((Reporte)this.jInternalFrameReporteDinamicoProforma.getjComboBoxTiposGraficosReportesDinamico().getSelectedItem());
		
		String sTipoGraficoReporte=reporteTipoGraficoReporte.getsCodigo();
		
		switch(reporte.getsCodigo()) {
			
				case ProformaConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoria="id_empresa";
					break;

				case ProformaConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoria="id_sucursal";
					break;

				case ProformaConstantesFunciones.LABEL_IDUSUARIO:
					sNombreCampoCategoria="id_usuario";
					break;

				case ProformaConstantesFunciones.LABEL_IDEJERCICIO:
					sNombreCampoCategoria="id_ejercicio";
					break;

				case ProformaConstantesFunciones.LABEL_IDPERIODO:
					sNombreCampoCategoria="id_periodo";
					break;

				case ProformaConstantesFunciones.LABEL_IDANIO:
					sNombreCampoCategoria="id_anio";
					break;

				case ProformaConstantesFunciones.LABEL_IDMES:
					sNombreCampoCategoria="id_mes";
					break;

				case ProformaConstantesFunciones.LABEL_NUMEROPREIMPRESO:
					sNombreCampoCategoria="numero_pre_impreso";
					break;

				case ProformaConstantesFunciones.LABEL_FECHAEMISION:
					sNombreCampoCategoria="fecha_emision";
					break;

				case ProformaConstantesFunciones.LABEL_DIAS:
					sNombreCampoCategoria="dias";
					break;

				case ProformaConstantesFunciones.LABEL_FECHAVENCIMIENTO:
					sNombreCampoCategoria="fecha_vencimiento";
					break;

				case ProformaConstantesFunciones.LABEL_IDMONEDA:
					sNombreCampoCategoria="id_moneda";
					break;

				case ProformaConstantesFunciones.LABEL_COTIZACION:
					sNombreCampoCategoria="cotizacion";
					break;

				case ProformaConstantesFunciones.LABEL_IDEMPLEADO:
					sNombreCampoCategoria="id_empleado";
					break;

				case ProformaConstantesFunciones.LABEL_IDFORMATO:
					sNombreCampoCategoria="id_formato";
					break;

				case ProformaConstantesFunciones.LABEL_IDESTADOPROFORMA:
					sNombreCampoCategoria="id_estado_proforma";
					break;

				case ProformaConstantesFunciones.LABEL_DIRECCION:
					sNombreCampoCategoria="direccion";
					break;

				case ProformaConstantesFunciones.LABEL_IDCLIENTE:
					sNombreCampoCategoria="id_cliente";
					break;

				case ProformaConstantesFunciones.LABEL_RUC:
					sNombreCampoCategoria="ruc";
					break;

				case ProformaConstantesFunciones.LABEL_ESOFERTA:
					sNombreCampoCategoria="es_oferta";
					break;

				case ProformaConstantesFunciones.LABEL_TELEFONO:
					sNombreCampoCategoria="telefono";
					break;

				case ProformaConstantesFunciones.LABEL_IDTIPOPRECIO:
					sNombreCampoCategoria="id_tipo_precio";
					break;

				case ProformaConstantesFunciones.LABEL_IDVENDEDOR:
					sNombreCampoCategoria="id_vendedor";
					break;

				case ProformaConstantesFunciones.LABEL_IDSUBCLIENTE:
					sNombreCampoCategoria="id_sub_cliente";
					break;

				case ProformaConstantesFunciones.LABEL_IDTIPOVIATRANSPORTE:
					sNombreCampoCategoria="id_tipo_via_transporte";
					break;

				case ProformaConstantesFunciones.LABEL_IDTRANSPORTE:
					sNombreCampoCategoria="id_transporte";
					break;

				case ProformaConstantesFunciones.LABEL_IDRUTATRANSPORTE:
					sNombreCampoCategoria="id_ruta_transporte";
					break;

				case ProformaConstantesFunciones.LABEL_DESCRIPCION:
					sNombreCampoCategoria="descripcion";
					break;

				case ProformaConstantesFunciones.LABEL_DESCUENTOPORCENTAJE:
					sNombreCampoCategoria="descuento_porcentaje";
					break;

				case ProformaConstantesFunciones.LABEL_MONTOCONIVA:
					sNombreCampoCategoria="monto_con_iva";
					break;

				case ProformaConstantesFunciones.LABEL_SUMAN:
					sNombreCampoCategoria="suman";
					break;

				case ProformaConstantesFunciones.LABEL_DESCUENTOVALOR:
					sNombreCampoCategoria="descuento_valor";
					break;

				case ProformaConstantesFunciones.LABEL_MONTOSINIVA:
					sNombreCampoCategoria="monto_sin_iva";
					break;

				case ProformaConstantesFunciones.LABEL_DESCUENTOGENERAL:
					sNombreCampoCategoria="descuento_general";
					break;

				case ProformaConstantesFunciones.LABEL_FLETE:
					sNombreCampoCategoria="flete";
					break;

				case ProformaConstantesFunciones.LABEL_ULTIMOCOSTO:
					sNombreCampoCategoria="ultimo_costo";
					break;

				case ProformaConstantesFunciones.LABEL_SUBTOTAL:
					sNombreCampoCategoria="subtotal";
					break;

				case ProformaConstantesFunciones.LABEL_OTROSCARGOS:
					sNombreCampoCategoria="otros_cargos";
					break;

				case ProformaConstantesFunciones.LABEL_MARGENUTILIDAD:
					sNombreCampoCategoria="margen_utilidad";
					break;

				case ProformaConstantesFunciones.LABEL_IVA:
					sNombreCampoCategoria="iva";
					break;

				case ProformaConstantesFunciones.LABEL_FINANCIAMIENTO:
					sNombreCampoCategoria="financiamiento";
					break;

				case ProformaConstantesFunciones.LABEL_TOTAL:
					sNombreCampoCategoria="total";
					break;

				case ProformaConstantesFunciones.LABEL_OTROSVALORES:
					sNombreCampoCategoria="otros_valores";
					break;

				case ProformaConstantesFunciones.LABEL_ANTICIPO:
					sNombreCampoCategoria="anticipo";
					break;

				case ProformaConstantesFunciones.LABEL_ICE:
					sNombreCampoCategoria="ice";
					break;

				case ProformaConstantesFunciones.LABEL_MONTORETENCION:
					sNombreCampoCategoria="monto_retencion";
					break;

				case ProformaConstantesFunciones.LABEL_FECHA:
					sNombreCampoCategoria="fecha";
					break;

				case ProformaConstantesFunciones.LABEL_FECHASERVIDOR:
					sNombreCampoCategoria="fecha_servidor";
					break;

				case ProformaConstantesFunciones.LABEL_HORAINICIO:
					sNombreCampoCategoria="hora_inicio";
					break;

				case ProformaConstantesFunciones.LABEL_HORAFIN:
					sNombreCampoCategoria="hora_fin";
					break;

				case ProformaConstantesFunciones.LABEL_IDCENTROCOSTO:
					sNombreCampoCategoria="id_centro_costo";
					break;

				case ProformaConstantesFunciones.LABEL_IDTIPOPROFORMA:
					sNombreCampoCategoria="id_tipo_proforma";
					break;

				case ProformaConstantesFunciones.LABEL_IDCONSIGNATARIO:
					sNombreCampoCategoria="id_consignatario";
					break;

				case ProformaConstantesFunciones.LABEL_IDTIPOCAMBIO:
					sNombreCampoCategoria="id_tipo_cambio";
					break;
					
			default :
				break;
		}		
		//CATEGORIA GRAFICO
		
		//CATEGORIA VALOR				
		reporteCategoriaValor=((Reporte)this.jInternalFrameReporteDinamicoProforma.getjComboBoxColumnaCategoriaValor().getSelectedItem());
		
		switch(reporteCategoriaValor.getsCodigo()) {
			
				case ProformaConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoriaValor="id_empresa";
					break;

				case ProformaConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoriaValor="id_sucursal";
					break;

				case ProformaConstantesFunciones.LABEL_IDUSUARIO:
					sNombreCampoCategoriaValor="id_usuario";
					break;

				case ProformaConstantesFunciones.LABEL_IDEJERCICIO:
					sNombreCampoCategoriaValor="id_ejercicio";
					break;

				case ProformaConstantesFunciones.LABEL_IDPERIODO:
					sNombreCampoCategoriaValor="id_periodo";
					break;

				case ProformaConstantesFunciones.LABEL_IDANIO:
					sNombreCampoCategoriaValor="id_anio";
					break;

				case ProformaConstantesFunciones.LABEL_IDMES:
					sNombreCampoCategoriaValor="id_mes";
					break;

				case ProformaConstantesFunciones.LABEL_NUMEROPREIMPRESO:
					sNombreCampoCategoriaValor="numero_pre_impreso";
					break;

				case ProformaConstantesFunciones.LABEL_FECHAEMISION:
					sNombreCampoCategoriaValor="fecha_emision";
					break;

				case ProformaConstantesFunciones.LABEL_DIAS:
					sNombreCampoCategoriaValor="dias";
					break;

				case ProformaConstantesFunciones.LABEL_FECHAVENCIMIENTO:
					sNombreCampoCategoriaValor="fecha_vencimiento";
					break;

				case ProformaConstantesFunciones.LABEL_IDMONEDA:
					sNombreCampoCategoriaValor="id_moneda";
					break;

				case ProformaConstantesFunciones.LABEL_COTIZACION:
					sNombreCampoCategoriaValor="cotizacion";
					break;

				case ProformaConstantesFunciones.LABEL_IDEMPLEADO:
					sNombreCampoCategoriaValor="id_empleado";
					break;

				case ProformaConstantesFunciones.LABEL_IDFORMATO:
					sNombreCampoCategoriaValor="id_formato";
					break;

				case ProformaConstantesFunciones.LABEL_IDESTADOPROFORMA:
					sNombreCampoCategoriaValor="id_estado_proforma";
					break;

				case ProformaConstantesFunciones.LABEL_DIRECCION:
					sNombreCampoCategoriaValor="direccion";
					break;

				case ProformaConstantesFunciones.LABEL_IDCLIENTE:
					sNombreCampoCategoriaValor="id_cliente";
					break;

				case ProformaConstantesFunciones.LABEL_RUC:
					sNombreCampoCategoriaValor="ruc";
					break;

				case ProformaConstantesFunciones.LABEL_ESOFERTA:
					sNombreCampoCategoriaValor="es_oferta";
					break;

				case ProformaConstantesFunciones.LABEL_TELEFONO:
					sNombreCampoCategoriaValor="telefono";
					break;

				case ProformaConstantesFunciones.LABEL_IDTIPOPRECIO:
					sNombreCampoCategoriaValor="id_tipo_precio";
					break;

				case ProformaConstantesFunciones.LABEL_IDVENDEDOR:
					sNombreCampoCategoriaValor="id_vendedor";
					break;

				case ProformaConstantesFunciones.LABEL_IDSUBCLIENTE:
					sNombreCampoCategoriaValor="id_sub_cliente";
					break;

				case ProformaConstantesFunciones.LABEL_IDTIPOVIATRANSPORTE:
					sNombreCampoCategoriaValor="id_tipo_via_transporte";
					break;

				case ProformaConstantesFunciones.LABEL_IDTRANSPORTE:
					sNombreCampoCategoriaValor="id_transporte";
					break;

				case ProformaConstantesFunciones.LABEL_IDRUTATRANSPORTE:
					sNombreCampoCategoriaValor="id_ruta_transporte";
					break;

				case ProformaConstantesFunciones.LABEL_DESCRIPCION:
					sNombreCampoCategoriaValor="descripcion";
					break;

				case ProformaConstantesFunciones.LABEL_DESCUENTOPORCENTAJE:
					sNombreCampoCategoriaValor="descuento_porcentaje";
					break;

				case ProformaConstantesFunciones.LABEL_MONTOCONIVA:
					sNombreCampoCategoriaValor="monto_con_iva";
					break;

				case ProformaConstantesFunciones.LABEL_SUMAN:
					sNombreCampoCategoriaValor="suman";
					break;

				case ProformaConstantesFunciones.LABEL_DESCUENTOVALOR:
					sNombreCampoCategoriaValor="descuento_valor";
					break;

				case ProformaConstantesFunciones.LABEL_MONTOSINIVA:
					sNombreCampoCategoriaValor="monto_sin_iva";
					break;

				case ProformaConstantesFunciones.LABEL_DESCUENTOGENERAL:
					sNombreCampoCategoriaValor="descuento_general";
					break;

				case ProformaConstantesFunciones.LABEL_FLETE:
					sNombreCampoCategoriaValor="flete";
					break;

				case ProformaConstantesFunciones.LABEL_ULTIMOCOSTO:
					sNombreCampoCategoriaValor="ultimo_costo";
					break;

				case ProformaConstantesFunciones.LABEL_SUBTOTAL:
					sNombreCampoCategoriaValor="subtotal";
					break;

				case ProformaConstantesFunciones.LABEL_OTROSCARGOS:
					sNombreCampoCategoriaValor="otros_cargos";
					break;

				case ProformaConstantesFunciones.LABEL_MARGENUTILIDAD:
					sNombreCampoCategoriaValor="margen_utilidad";
					break;

				case ProformaConstantesFunciones.LABEL_IVA:
					sNombreCampoCategoriaValor="iva";
					break;

				case ProformaConstantesFunciones.LABEL_FINANCIAMIENTO:
					sNombreCampoCategoriaValor="financiamiento";
					break;

				case ProformaConstantesFunciones.LABEL_TOTAL:
					sNombreCampoCategoriaValor="total";
					break;

				case ProformaConstantesFunciones.LABEL_OTROSVALORES:
					sNombreCampoCategoriaValor="otros_valores";
					break;

				case ProformaConstantesFunciones.LABEL_ANTICIPO:
					sNombreCampoCategoriaValor="anticipo";
					break;

				case ProformaConstantesFunciones.LABEL_ICE:
					sNombreCampoCategoriaValor="ice";
					break;

				case ProformaConstantesFunciones.LABEL_MONTORETENCION:
					sNombreCampoCategoriaValor="monto_retencion";
					break;

				case ProformaConstantesFunciones.LABEL_FECHA:
					sNombreCampoCategoriaValor="fecha";
					break;

				case ProformaConstantesFunciones.LABEL_FECHASERVIDOR:
					sNombreCampoCategoriaValor="fecha_servidor";
					break;

				case ProformaConstantesFunciones.LABEL_HORAINICIO:
					sNombreCampoCategoriaValor="hora_inicio";
					break;

				case ProformaConstantesFunciones.LABEL_HORAFIN:
					sNombreCampoCategoriaValor="hora_fin";
					break;

				case ProformaConstantesFunciones.LABEL_IDCENTROCOSTO:
					sNombreCampoCategoriaValor="id_centro_costo";
					break;

				case ProformaConstantesFunciones.LABEL_IDTIPOPROFORMA:
					sNombreCampoCategoriaValor="id_tipo_proforma";
					break;

				case ProformaConstantesFunciones.LABEL_IDCONSIGNATARIO:
					sNombreCampoCategoriaValor="id_consignatario";
					break;

				case ProformaConstantesFunciones.LABEL_IDTIPOCAMBIO:
					sNombreCampoCategoriaValor="id_tipo_cambio";
					break;
					
			default :
				break;
		}	
		//CATEGORIA VALOR
		
		//VALORES GRAFICO
		for(int index:this.jInternalFrameReporteDinamicoProforma.getjListColumnasValoresGrafico().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoProforma.getjListColumnasValoresGrafico().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case ProformaConstantesFunciones.LABEL_IDEMPRESA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Empresa",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_empresa");
					break;

				case ProformaConstantesFunciones.LABEL_IDSUCURSAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Sucursal",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_sucursal");
					break;

				case ProformaConstantesFunciones.LABEL_IDUSUARIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Usuario",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_usuario");
					break;

				case ProformaConstantesFunciones.LABEL_IDEJERCICIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Ejercicio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_ejercicio");
					break;

				case ProformaConstantesFunciones.LABEL_IDPERIODO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Periodo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_periodo");
					break;

				case ProformaConstantesFunciones.LABEL_IDANIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Anio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_anio");
					break;

				case ProformaConstantesFunciones.LABEL_IDMES:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Mes",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_mes");
					break;

				case ProformaConstantesFunciones.LABEL_NUMEROPREIMPRESO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Nro PreImpreso",sNombreCampoCategoria,sNombreCampoCategoriaValor,"numero_pre_impreso");
					break;

				case ProformaConstantesFunciones.LABEL_FECHAEMISION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"F Emision",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha_emision");
					break;

				case ProformaConstantesFunciones.LABEL_DIAS:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Nro Dias",sNombreCampoCategoria,sNombreCampoCategoriaValor,"dias");
					break;

				case ProformaConstantesFunciones.LABEL_FECHAVENCIMIENTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"F Vencimiento",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha_vencimiento");
					break;

				case ProformaConstantesFunciones.LABEL_IDMONEDA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Moneda",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_moneda");
					break;

				case ProformaConstantesFunciones.LABEL_COTIZACION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cotizacion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"cotizacion");
					break;

				case ProformaConstantesFunciones.LABEL_IDEMPLEADO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Empleado",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_empleado");
					break;

				case ProformaConstantesFunciones.LABEL_IDFORMATO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Formato",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_formato");
					break;

				case ProformaConstantesFunciones.LABEL_IDESTADOPROFORMA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Estado",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_estado_proforma");
					break;

				case ProformaConstantesFunciones.LABEL_DIRECCION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Direccion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"direccion");
					break;

				case ProformaConstantesFunciones.LABEL_IDCLIENTE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cliente",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cliente");
					break;

				case ProformaConstantesFunciones.LABEL_RUC:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Ruc",sNombreCampoCategoria,sNombreCampoCategoriaValor,"ruc");
					break;

				case ProformaConstantesFunciones.LABEL_ESOFERTA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Es Oferta",sNombreCampoCategoria,sNombreCampoCategoriaValor,"es_oferta");
					break;

				case ProformaConstantesFunciones.LABEL_TELEFONO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Telefono",sNombreCampoCategoria,sNombreCampoCategoriaValor,"telefono");
					break;

				case ProformaConstantesFunciones.LABEL_IDTIPOPRECIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tipo Precio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_precio");
					break;

				case ProformaConstantesFunciones.LABEL_IDVENDEDOR:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Vendedor",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_vendedor");
					break;

				case ProformaConstantesFunciones.LABEL_IDSUBCLIENTE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Contacto",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_sub_cliente");
					break;

				case ProformaConstantesFunciones.LABEL_IDTIPOVIATRANSPORTE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Forma Envio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_via_transporte");
					break;

				case ProformaConstantesFunciones.LABEL_IDTRANSPORTE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Transporte",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_transporte");
					break;

				case ProformaConstantesFunciones.LABEL_IDRUTATRANSPORTE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Ruta",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_ruta_transporte");
					break;

				case ProformaConstantesFunciones.LABEL_DESCRIPCION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Descripcion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"descripcion");
					break;

				case ProformaConstantesFunciones.LABEL_DESCUENTOPORCENTAJE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Dscto %",sNombreCampoCategoria,sNombreCampoCategoriaValor,"descuento_porcentaje");
					break;

				case ProformaConstantesFunciones.LABEL_MONTOCONIVA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Monto Con Iva",sNombreCampoCategoria,sNombreCampoCategoriaValor,"monto_con_iva");
					break;

				case ProformaConstantesFunciones.LABEL_SUMAN:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Suman",sNombreCampoCategoria,sNombreCampoCategoriaValor,"suman");
					break;

				case ProformaConstantesFunciones.LABEL_DESCUENTOVALOR:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Dscto Valor",sNombreCampoCategoria,sNombreCampoCategoriaValor,"descuento_valor");
					break;

				case ProformaConstantesFunciones.LABEL_MONTOSINIVA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Monto Sin Iva",sNombreCampoCategoria,sNombreCampoCategoriaValor,"monto_sin_iva");
					break;

				case ProformaConstantesFunciones.LABEL_DESCUENTOGENERAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Dscto General",sNombreCampoCategoria,sNombreCampoCategoriaValor,"descuento_general");
					break;

				case ProformaConstantesFunciones.LABEL_FLETE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Flete",sNombreCampoCategoria,sNombreCampoCategoriaValor,"flete");
					break;

				case ProformaConstantesFunciones.LABEL_ULTIMOCOSTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Ultimo Costo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"ultimo_costo");
					break;

				case ProformaConstantesFunciones.LABEL_SUBTOTAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Subtotal",sNombreCampoCategoria,sNombreCampoCategoriaValor,"subtotal");
					break;

				case ProformaConstantesFunciones.LABEL_OTROSCARGOS:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Otros Cargos",sNombreCampoCategoria,sNombreCampoCategoriaValor,"otros_cargos");
					break;

				case ProformaConstantesFunciones.LABEL_MARGENUTILIDAD:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Margen Utilidad",sNombreCampoCategoria,sNombreCampoCategoriaValor,"margen_utilidad");
					break;

				case ProformaConstantesFunciones.LABEL_IVA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Iva",sNombreCampoCategoria,sNombreCampoCategoriaValor,"iva");
					break;

				case ProformaConstantesFunciones.LABEL_FINANCIAMIENTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Financiamiento",sNombreCampoCategoria,sNombreCampoCategoriaValor,"financiamiento");
					break;

				case ProformaConstantesFunciones.LABEL_TOTAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Total",sNombreCampoCategoria,sNombreCampoCategoriaValor,"total");
					break;

				case ProformaConstantesFunciones.LABEL_OTROSVALORES:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Otros Valores",sNombreCampoCategoria,sNombreCampoCategoriaValor,"otros_valores");
					break;

				case ProformaConstantesFunciones.LABEL_ANTICIPO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Anticipo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"anticipo");
					break;

				case ProformaConstantesFunciones.LABEL_ICE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Ice",sNombreCampoCategoria,sNombreCampoCategoriaValor,"ice");
					break;

				case ProformaConstantesFunciones.LABEL_MONTORETENCION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Monto Retencion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"monto_retencion");
					break;

				case ProformaConstantesFunciones.LABEL_FECHA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fecha",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha");
					break;

				case ProformaConstantesFunciones.LABEL_FECHASERVIDOR:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fecha Servidor",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha_servidor");
					break;

				case ProformaConstantesFunciones.LABEL_HORAINICIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Hora Inicio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"hora_inicio");
					break;

				case ProformaConstantesFunciones.LABEL_HORAFIN:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Hora Fin",sNombreCampoCategoria,sNombreCampoCategoriaValor,"hora_fin");
					break;

				case ProformaConstantesFunciones.LABEL_IDCENTROCOSTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Centro Costo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_centro_costo");
					break;

				case ProformaConstantesFunciones.LABEL_IDTIPOPROFORMA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tipo Proforma",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_proforma");
					break;

				case ProformaConstantesFunciones.LABEL_IDCONSIGNATARIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Consignatario",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_consignatario");
					break;

				case ProformaConstantesFunciones.LABEL_IDTIPOCAMBIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"T. Cambio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_cambio");
					break;
					
				default :
					break;
			}
		}
		//VALORES GRAFICO
		//if(sTipoGraficoReporte.equals("BARRAS") || sTipoGraficoReporte.equals("BARRAS_3D") || sTipoGraficoReporte.equals("BARRAS_XY") ||
		//   sTipoGraficoReporte.equals("PASTEL") || sTipoGraficoReporte.equals("PASTEL_3D") || sTipoGraficoReporte.equals("APILADO")) {
			
			existe=true;
			strGrafico=FuncionesReporte.getStringGraficoReporte(sTipoGraficoReporte,sWidthGrafico,strCategorySeries);			
		//}
		
		if(existe) {
			sXmlStringFile=sXmlStringFile.replace("<!--GRAFICO-->", strGrafico);
		}												
		
		return sXmlStringFile;
	}
	
	
	//@SuppressWarnings("deprecation")
	
	public void jButtonGenerarExcelReporteDinamicoProformaActionPerformed(ActionEvent evt) throws Exception {		
		ArrayList<Proforma> proformasSeleccionados=new ArrayList<Proforma>();		
		
		proformasSeleccionados=this.getProformasSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"proforma";//.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		Boolean existeFilas=false;
		
		Workbook workbook = null;
		FileOutputStream fileOutputStream=null;
		Reporte reporte=new Reporte();
		
		try {
			
			if(sTipoArchivoReporte=="EXCEL2") {
				workbook = new HSSFWorkbook();
				sPath+=".xls";
			
			} else if(sTipoArchivoReporte=="EXCEL2_2") {
				workbook = new XSSFWorkbook();
				sPath+=".xlsx";			
			}
		
			Sheet sheet = workbook.createSheet("Proformas");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			Row row = sheet.createRow(iRow);
			Cell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");
			
			for(int index:this.jInternalFrameReporteDinamicoProforma.getjListColumnasSelectReporte().getSelectedIndices()) {
				reporte=(Reporte)this.jInternalFrameReporteDinamicoProforma.getjListColumnasSelectReporte().getModel().getElementAt(index);
				
				switch(reporte.getsCodigo()) {
					
				case ProformaConstantesFunciones.LABEL_IDEMPRESA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProformaConstantesFunciones.LABEL_IDEMPRESA);
					iRow++;

					for(Proforma proforma:proformasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(proforma.getempresa_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProformaConstantesFunciones.LABEL_IDSUCURSAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProformaConstantesFunciones.LABEL_IDSUCURSAL);
					iRow++;

					for(Proforma proforma:proformasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(proforma.getsucursal_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProformaConstantesFunciones.LABEL_IDUSUARIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProformaConstantesFunciones.LABEL_IDUSUARIO);
					iRow++;

					for(Proforma proforma:proformasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(proforma.getusuario_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProformaConstantesFunciones.LABEL_IDEJERCICIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProformaConstantesFunciones.LABEL_IDEJERCICIO);
					iRow++;

					for(Proforma proforma:proformasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(proforma.getejercicio_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProformaConstantesFunciones.LABEL_IDPERIODO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProformaConstantesFunciones.LABEL_IDPERIODO);
					iRow++;

					for(Proforma proforma:proformasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(proforma.getperiodo_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProformaConstantesFunciones.LABEL_IDANIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProformaConstantesFunciones.LABEL_IDANIO);
					iRow++;

					for(Proforma proforma:proformasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(proforma.getanio_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProformaConstantesFunciones.LABEL_IDMES:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProformaConstantesFunciones.LABEL_IDMES);
					iRow++;

					for(Proforma proforma:proformasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(proforma.getmes_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProformaConstantesFunciones.LABEL_NUMEROPREIMPRESO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProformaConstantesFunciones.LABEL_NUMEROPREIMPRESO);
					iRow++;

					for(Proforma proforma:proformasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(proforma.getnumero_pre_impreso());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProformaConstantesFunciones.LABEL_FECHAEMISION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProformaConstantesFunciones.LABEL_FECHAEMISION);
					iRow++;

					for(Proforma proforma:proformasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(proforma.getfecha_emision());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProformaConstantesFunciones.LABEL_DIAS:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProformaConstantesFunciones.LABEL_DIAS);
					iRow++;

					for(Proforma proforma:proformasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(proforma.getdias());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProformaConstantesFunciones.LABEL_FECHAVENCIMIENTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProformaConstantesFunciones.LABEL_FECHAVENCIMIENTO);
					iRow++;

					for(Proforma proforma:proformasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(proforma.getfecha_vencimiento());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProformaConstantesFunciones.LABEL_IDMONEDA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProformaConstantesFunciones.LABEL_IDMONEDA);
					iRow++;

					for(Proforma proforma:proformasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(proforma.getmoneda_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProformaConstantesFunciones.LABEL_COTIZACION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProformaConstantesFunciones.LABEL_COTIZACION);
					iRow++;

					for(Proforma proforma:proformasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(proforma.getcotizacion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProformaConstantesFunciones.LABEL_IDEMPLEADO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProformaConstantesFunciones.LABEL_IDEMPLEADO);
					iRow++;

					for(Proforma proforma:proformasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(proforma.getempleado_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProformaConstantesFunciones.LABEL_IDFORMATO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProformaConstantesFunciones.LABEL_IDFORMATO);
					iRow++;

					for(Proforma proforma:proformasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(proforma.getformato_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProformaConstantesFunciones.LABEL_IDESTADOPROFORMA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProformaConstantesFunciones.LABEL_IDESTADOPROFORMA);
					iRow++;

					for(Proforma proforma:proformasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(proforma.getestadoproforma_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProformaConstantesFunciones.LABEL_DIRECCION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProformaConstantesFunciones.LABEL_DIRECCION);
					iRow++;

					for(Proforma proforma:proformasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(proforma.getdireccion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProformaConstantesFunciones.LABEL_IDCLIENTE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProformaConstantesFunciones.LABEL_IDCLIENTE);
					iRow++;

					for(Proforma proforma:proformasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(proforma.getcliente_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProformaConstantesFunciones.LABEL_RUC:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProformaConstantesFunciones.LABEL_RUC);
					iRow++;

					for(Proforma proforma:proformasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(proforma.getruc());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProformaConstantesFunciones.LABEL_ESOFERTA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProformaConstantesFunciones.LABEL_ESOFERTA);
					iRow++;

					for(Proforma proforma:proformasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(proforma.getes_oferta());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProformaConstantesFunciones.LABEL_TELEFONO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProformaConstantesFunciones.LABEL_TELEFONO);
					iRow++;

					for(Proforma proforma:proformasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(proforma.gettelefono());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProformaConstantesFunciones.LABEL_IDTIPOPRECIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProformaConstantesFunciones.LABEL_IDTIPOPRECIO);
					iRow++;

					for(Proforma proforma:proformasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(proforma.gettipoprecio_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProformaConstantesFunciones.LABEL_IDVENDEDOR:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProformaConstantesFunciones.LABEL_IDVENDEDOR);
					iRow++;

					for(Proforma proforma:proformasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(proforma.getvendedor_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProformaConstantesFunciones.LABEL_IDSUBCLIENTE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProformaConstantesFunciones.LABEL_IDSUBCLIENTE);
					iRow++;

					for(Proforma proforma:proformasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(proforma.getsubcliente_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProformaConstantesFunciones.LABEL_IDTIPOVIATRANSPORTE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProformaConstantesFunciones.LABEL_IDTIPOVIATRANSPORTE);
					iRow++;

					for(Proforma proforma:proformasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(proforma.gettipoviatransporte_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProformaConstantesFunciones.LABEL_IDTRANSPORTE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProformaConstantesFunciones.LABEL_IDTRANSPORTE);
					iRow++;

					for(Proforma proforma:proformasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(proforma.gettransporte_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProformaConstantesFunciones.LABEL_IDRUTATRANSPORTE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProformaConstantesFunciones.LABEL_IDRUTATRANSPORTE);
					iRow++;

					for(Proforma proforma:proformasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(proforma.getrutatransporte_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProformaConstantesFunciones.LABEL_DESCRIPCION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProformaConstantesFunciones.LABEL_DESCRIPCION);
					iRow++;

					for(Proforma proforma:proformasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(proforma.getdescripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProformaConstantesFunciones.LABEL_DESCUENTOPORCENTAJE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProformaConstantesFunciones.LABEL_DESCUENTOPORCENTAJE);
					iRow++;

					for(Proforma proforma:proformasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(proforma.getdescuento_porcentaje());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProformaConstantesFunciones.LABEL_MONTOCONIVA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProformaConstantesFunciones.LABEL_MONTOCONIVA);
					iRow++;

					for(Proforma proforma:proformasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(proforma.getmonto_con_iva());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProformaConstantesFunciones.LABEL_SUMAN:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProformaConstantesFunciones.LABEL_SUMAN);
					iRow++;

					for(Proforma proforma:proformasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(proforma.getsuman());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProformaConstantesFunciones.LABEL_DESCUENTOVALOR:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProformaConstantesFunciones.LABEL_DESCUENTOVALOR);
					iRow++;

					for(Proforma proforma:proformasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(proforma.getdescuento_valor());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProformaConstantesFunciones.LABEL_MONTOSINIVA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProformaConstantesFunciones.LABEL_MONTOSINIVA);
					iRow++;

					for(Proforma proforma:proformasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(proforma.getmonto_sin_iva());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProformaConstantesFunciones.LABEL_DESCUENTOGENERAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProformaConstantesFunciones.LABEL_DESCUENTOGENERAL);
					iRow++;

					for(Proforma proforma:proformasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(proforma.getdescuento_general());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProformaConstantesFunciones.LABEL_FLETE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProformaConstantesFunciones.LABEL_FLETE);
					iRow++;

					for(Proforma proforma:proformasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(proforma.getflete());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProformaConstantesFunciones.LABEL_ULTIMOCOSTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProformaConstantesFunciones.LABEL_ULTIMOCOSTO);
					iRow++;

					for(Proforma proforma:proformasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(proforma.getultimo_costo());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProformaConstantesFunciones.LABEL_SUBTOTAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProformaConstantesFunciones.LABEL_SUBTOTAL);
					iRow++;

					for(Proforma proforma:proformasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(proforma.getsubtotal());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProformaConstantesFunciones.LABEL_OTROSCARGOS:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProformaConstantesFunciones.LABEL_OTROSCARGOS);
					iRow++;

					for(Proforma proforma:proformasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(proforma.getotros_cargos());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProformaConstantesFunciones.LABEL_MARGENUTILIDAD:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProformaConstantesFunciones.LABEL_MARGENUTILIDAD);
					iRow++;

					for(Proforma proforma:proformasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(proforma.getmargen_utilidad());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProformaConstantesFunciones.LABEL_IVA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProformaConstantesFunciones.LABEL_IVA);
					iRow++;

					for(Proforma proforma:proformasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(proforma.getiva());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProformaConstantesFunciones.LABEL_FINANCIAMIENTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProformaConstantesFunciones.LABEL_FINANCIAMIENTO);
					iRow++;

					for(Proforma proforma:proformasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(proforma.getfinanciamiento());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProformaConstantesFunciones.LABEL_TOTAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProformaConstantesFunciones.LABEL_TOTAL);
					iRow++;

					for(Proforma proforma:proformasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(proforma.gettotal());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProformaConstantesFunciones.LABEL_OTROSVALORES:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProformaConstantesFunciones.LABEL_OTROSVALORES);
					iRow++;

					for(Proforma proforma:proformasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(proforma.getotros_valores());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProformaConstantesFunciones.LABEL_ANTICIPO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProformaConstantesFunciones.LABEL_ANTICIPO);
					iRow++;

					for(Proforma proforma:proformasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(proforma.getanticipo());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProformaConstantesFunciones.LABEL_ICE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProformaConstantesFunciones.LABEL_ICE);
					iRow++;

					for(Proforma proforma:proformasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(proforma.getice());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProformaConstantesFunciones.LABEL_MONTORETENCION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProformaConstantesFunciones.LABEL_MONTORETENCION);
					iRow++;

					for(Proforma proforma:proformasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(proforma.getmonto_retencion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProformaConstantesFunciones.LABEL_FECHA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProformaConstantesFunciones.LABEL_FECHA);
					iRow++;

					for(Proforma proforma:proformasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(proforma.getfecha());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProformaConstantesFunciones.LABEL_FECHASERVIDOR:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProformaConstantesFunciones.LABEL_FECHASERVIDOR);
					iRow++;

					for(Proforma proforma:proformasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(proforma.getfecha_servidor());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProformaConstantesFunciones.LABEL_HORAINICIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProformaConstantesFunciones.LABEL_HORAINICIO);
					iRow++;

					for(Proforma proforma:proformasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(proforma.gethora_inicio());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProformaConstantesFunciones.LABEL_HORAFIN:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProformaConstantesFunciones.LABEL_HORAFIN);
					iRow++;

					for(Proforma proforma:proformasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(proforma.gethora_fin());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProformaConstantesFunciones.LABEL_IDCENTROCOSTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProformaConstantesFunciones.LABEL_IDCENTROCOSTO);
					iRow++;

					for(Proforma proforma:proformasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(proforma.getcentrocosto_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProformaConstantesFunciones.LABEL_IDTIPOPROFORMA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProformaConstantesFunciones.LABEL_IDTIPOPROFORMA);
					iRow++;

					for(Proforma proforma:proformasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(proforma.gettipoproforma_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProformaConstantesFunciones.LABEL_IDCONSIGNATARIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProformaConstantesFunciones.LABEL_IDCONSIGNATARIO);
					iRow++;

					for(Proforma proforma:proformasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(proforma.getconsignatario_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ProformaConstantesFunciones.LABEL_IDTIPOCAMBIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ProformaConstantesFunciones.LABEL_IDTIPOCAMBIO);
					iRow++;

					for(Proforma proforma:proformasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(proforma.gettipocambio_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;
					
					default :
						break;
				}
			}
			
			
			//if(conCabecera) {
			//	this.getFilaCabeceraExportarExcelProforma(row);				
			//	iRow++;
			//}				
			
			//for(Proforma proformaAux:proformasSeleccionados) {
			//	row = sheet.createRow(iRow);
				
			//	this.getFilaDatosExportarExcelProforma(proformaAux,row);
				
			//	iRow++;
			//}
			
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.proformaSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Proforma",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}				
	}	
	
	
	
	
	public void buscarPorId(Long idActual) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.getNewConnexionToDeep("");
			}
			
			this.idActual=idActual;
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda("PorId");
				    	
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingProforma(false);
			
			//SI ES MANUAL
			if(ProformaJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualProforma();
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger);
			
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonAnterioresProformaActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion-=this.iNumeroPaginacion;
			/*
			if(this.iNumeroPaginacion<0) {
				this.iNumeroPaginacion=0;
			}
			*/
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.getNewConnexionToDeep("");
			}
			
			this.anteriores();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingProforma(false);
			
			//SI ES MANUAL
			if(ProformaJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualProforma();
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonSiguientesProformaActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion+=this.iNumeroPaginacion;
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.getNewConnexionToDeep("");
			}
			
			this.siguientes();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingProforma(false);
			
			//SI ES MANUAL
			if(ProformaJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualProforma();
			}		
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void aumentarTamanioFilaNuevaTablaProforma() throws Exception {		
		Dimension dimensionMinimum=this.jTableDatosProforma.getMinimumSize();
		Dimension dimensionMaximum=this.jTableDatosProforma.getMaximumSize();
		Dimension dimensionPreferred=this.jTableDatosProforma.getPreferredSize();
	
		double iHeightConFilaNueva=dimensionPreferred.getHeight();
		
		iHeightConFilaNueva+=this.jTableDatosProforma.getRowHeight();
		
		dimensionMinimum.setSize(dimensionMinimum.getWidth(),iHeightConFilaNueva);
		dimensionMaximum.setSize(dimensionMaximum.getWidth(),iHeightConFilaNueva);
		dimensionPreferred.setSize(dimensionPreferred.getWidth(),iHeightConFilaNueva);
		
		this.jTableDatosProforma.setMinimumSize(dimensionMinimum);
		this.jTableDatosProforma.setMaximumSize(dimensionMaximum);
		this.jTableDatosProforma.setPreferredSize(dimensionPreferred);	
	}
	
	public void inicializarActualizarBindingProforma(Boolean esInicializar) throws Exception {
		this.inicializarActualizarBindingProforma(esInicializar,true);
	}
	
	public void inicializarActualizarBindingProforma(Boolean esInicializar,Boolean conTabla) throws Exception {		
		if(conTabla) {
			this.inicializarActualizarBindingTablaProforma(esInicializar);
		}
		
		this.inicializarActualizarBindingBotonesProforma(esInicializar);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.proformaSessionBean.getEsGuardarRelacionado()) {
			try{this.inicializarActualizarBindingBusquedasProforma(esInicializar);}catch(Exception e){e.printStackTrace();}
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesProforma(esInicializar) ;
			
			this.inicializarActualizarBindingParametrosReportesProforma(esInicializar) ;
		}
		
		if(esInicializar) {
			if( !ProformaJInternalFrame.ISBINDING_MANUAL_TABLA ||
			   	!ProformaJInternalFrame.ISBINDING_MANUAL) {
			   	
			}
		}
	}
	
	public void inicializarActualizarBindingManualProforma() throws Exception {		
		//NO SE NECESITA HACER BINDING OTRA VEZ
		//this.inicializarActualizarBindingTablaProforma();
		
		this.inicializarActualizarBindingBotonesManualProforma(true);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.proformaSessionBean.getEsGuardarRelacionado()) {
			
			this.inicializarActualizarBindingBusquedasManualProforma();			
			
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesProforma() ;
			
			this.inicializarActualizarBindingParametrosReportesPostAccionesManualProforma(false) ;			
			
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesPostAccionesManualProforma(Boolean esSetControles) throws Exception {
		try	{					
			if(!esSetControles) {
				this.isSeleccionarTodos=this.jCheckBoxSeleccionarTodosProforma.isSelected();
				this.isSeleccionados=this.jCheckBoxSeleccionadosProforma.isSelected();
				
				
				this.conGraficoReporte=this.jCheckBoxConGraficoReporteProforma.isSelected();															
				
				
				if(this.jInternalFrameDetalleFormProforma!=null) {
				this.isPostAccionNuevo=this.jInternalFrameDetalleFormProforma.jCheckBoxPostAccionNuevoProforma.isSelected();
				this.isPostAccionSinCerrar=this.jInternalFrameDetalleFormProforma.jCheckBoxPostAccionSinCerrarProforma.isSelected();
				this.isPostAccionSinMensaje=this.jInternalFrameDetalleFormProforma.jCheckBoxPostAccionSinMensajeProforma.isSelected();
				}
			
			} else {
				this.jCheckBoxSeleccionarTodosProforma.setSelected(this.isSeleccionarTodos);
				this.jCheckBoxSeleccionadosProforma.setSelected(this.isSeleccionados);
				
				
				this.jCheckBoxConGraficoReporteProforma.setSelected(this.conGraficoReporte);				
				
				
				if(this.jInternalFrameDetalleFormProforma!=null) {
				this.jInternalFrameDetalleFormProforma.jCheckBoxPostAccionNuevoProforma.setSelected(this.isPostAccionNuevo);
				this.jInternalFrameDetalleFormProforma.jCheckBoxPostAccionSinCerrarProforma.setSelected(this.isPostAccionSinCerrar);
				this.jInternalFrameDetalleFormProforma.jCheckBoxPostAccionSinMensajeProforma.setSelected(this.isPostAccionSinMensaje);
				}
			}
			
			
			if(this.jComboBoxTiposPaginacionProforma.getSelectedItem()!=null) {
				this.sTipoPaginacion=((Reporte)this.jComboBoxTiposPaginacionProforma.getSelectedItem()).getsCodigo();			
			}
			
			
			
			if(this.jInternalFrameDetalleFormProforma!=null) {
			this.sTipoAccionFormulario=((Reporte)this.jInternalFrameDetalleFormProforma.jComboBoxTiposAccionesFormularioProforma.getSelectedItem()).getsCodigo();
			}
			
			
			
			if(!this.conCargarMinimo) {
				this.sTipoArchivoReporte=((Reporte)this.jComboBoxTiposArchivosReportesProforma.getSelectedItem()).getsCodigo();			
				
				if(this.jInternalFrameReporteDinamicoProforma!=null) {
					this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoProforma.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
				}
				
				this.sTipoRelacion=((Reporte)this.jComboBoxTiposRelacionesProforma.getSelectedItem()).getsCodigo();
									
				this.sTipoAccion=((Reporte)this.jComboBoxTiposAccionesProforma.getSelectedItem()).getsCodigo();
													
				this.sTipoSeleccionar=((Reporte)this.jComboBoxTiposSeleccionarProforma.getSelectedItem()).getsCodigo();
									
				this.sTipoReporte=((Reporte)this.jComboBoxTiposReportesProforma.getSelectedItem()).getsCodigo();							
					
				if(this.jInternalFrameReporteDinamicoProforma!=null) {
					this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoProforma.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();							
				}
				
				this.sTipoGraficoReporte=((Reporte)this.jComboBoxTiposGraficosReportesProforma.getSelectedItem()).getsCodigo();											
			}			
			
			this.sValorCampoGeneral=this.jTextFieldValorCampoGeneralProforma.getText();						
			
			
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesProforma(Boolean esInicializar) throws Exception {
		try	{	
			if(ProformaJInternalFrame.ISBINDING_MANUAL) {
				this. inicializarActualizarBindingParametrosReportesPostAccionesManualProforma(false);
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public void inicializarActualizarBindingtiposArchivosReportesAccionesProforma() throws Exception {
		try	{
			if(ProformaJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingtiposArchivosReportesAccionesManualProforma();
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleProforma() throws Exception {
		//TIPOS ACCIONES FORMULARIO	
		this.jInternalFrameDetalleFormProforma.jComboBoxTiposAccionesFormularioProforma.removeAllItems();
				
		for(Reporte reporte:this.tiposAccionesFormulario) {
			this.jInternalFrameDetalleFormProforma.jComboBoxTiposAccionesFormularioProforma.addItem(reporte);
		}
		
		//TIPOS ACCIONES FORMULARIO
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualProforma() throws Exception {
		try	{
			
			//TIPOS ARCHIVOS REPORTES
			this.jComboBoxTiposArchivosReportesProforma.removeAllItems();
				
			for(Reporte reporte:this.tiposArchivosReportes) {
				this.jComboBoxTiposArchivosReportesProforma.addItem(reporte);
			}
			
			
				
			//TIPOS REPORTES
			this.jComboBoxTiposReportesProforma.removeAllItems();
				
			for(Reporte reporte:this.tiposReportes) {
				this.jComboBoxTiposReportesProforma.addItem(reporte);
			}
			
			
			//TIPOS GRAFICOS REPORTES
			this.jComboBoxTiposGraficosReportesProforma.removeAllItems();
				
			for(Reporte reporte:this.tiposGraficosReportes) {
				this.jComboBoxTiposGraficosReportesProforma.addItem(reporte);
			}
			
			
			//TIPOS PAGINACION
			this.jComboBoxTiposPaginacionProforma.removeAllItems();
				
			for(Reporte reporte:this.tiposPaginacion) {
				this.jComboBoxTiposPaginacionProforma.addItem(reporte);
			}
			
			
			if(!this.proformaSessionBean.getEsGuardarRelacionado()) {
				this.jComboBoxTiposPaginacionProforma.setSelectedItem(Funciones2.getTipoPaginacionDefecto("NORMAL",this.tiposPaginacion));
			} else {
				this.jComboBoxTiposPaginacionProforma.setSelectedItem(Funciones2.getTipoPaginacionDefecto("RELACIONADO",this.tiposPaginacion));
			}
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposRelacionesProforma.removeAllItems();
				
			for(Reporte reporte:this.tiposRelaciones) {
				this.jComboBoxTiposRelacionesProforma.addItem(reporte);
			}
			
			//TIPOS ACCIONES
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposAccionesProforma.removeAllItems();
				
			for(Reporte reporte:this.tiposAcciones) {
				this.jComboBoxTiposAccionesProforma.addItem(reporte);
			}
			
			//TIPOS ACCIONES			
			
			
			
			//TIPOS ACCIONES FORMULARIO	
			if(this.jInternalFrameDetalleFormProforma!=null) { //if(this.conCargarFormDetalle) {
				this.jInternalFrameDetalleFormProforma.jComboBoxTiposAccionesFormularioProforma.removeAllItems();
				
				for(Reporte reporte:this.tiposAccionesFormulario) {
					this.jInternalFrameDetalleFormProforma.jComboBoxTiposAccionesFormularioProforma.addItem(reporte);
				}
				
			}
			//TIPOS ACCIONES FORMULARIO
			
			
			
			//TIPOS SELECCIONAR
			this.jComboBoxTiposSeleccionarProforma.removeAllItems();
				
			for(Reporte reporte:this.tiposSeleccionar) {
				this.jComboBoxTiposSeleccionarProforma.addItem(reporte);
			}
			
			
			if(this.tiposSeleccionar!=null && this.tiposSeleccionar.size()>1) {
				this.jComboBoxTiposSeleccionarProforma.setSelectedIndex(1);
			}
				
			//REPORTE DINAMICO
			this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualProforma();
							
			//TIPOS COLUMNAS SELECT
			//TIPOS SELECCIONAR
			
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualProforma() throws Exception {
		try	{
			DefaultListModel<Reporte> defaultListModel=new DefaultListModel<Reporte>();
			
			
			//TIPOS ARCHIVOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoProforma!=null) {
				this.jInternalFrameReporteDinamicoProforma.getjComboBoxTiposArchivosReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposArchivosReportesDinamico) {
					this.jInternalFrameReporteDinamicoProforma.getjComboBoxTiposArchivosReportesDinamico().addItem(reporte);
				}
				
			}
			
			//TIPOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoProforma!=null) {
				this.jInternalFrameReporteDinamicoProforma.getjComboBoxTiposReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposReportesDinamico) {
					this.jInternalFrameReporteDinamicoProforma.getjComboBoxTiposReportesDinamico().addItem(reporte);
				}
				
			}
			
			defaultListModel=new DefaultListModel<Reporte>();
			
			if(this.jInternalFrameReporteDinamicoProforma!=null) {
				
				if(this.jInternalFrameReporteDinamicoProforma.getjListColumnasSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoProforma.getjListColumnasSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposColumnasSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoProforma.getjListColumnasSelectReporte().setModel(defaultListModel);									
						
				}	
					
				//TIPOS RELACIONES SELECT
				//TIPOS SELECCIONAR
				defaultListModel=new DefaultListModel<Reporte>();
				if(this.jInternalFrameReporteDinamicoProforma.getjListRelacionesSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoProforma.getjListRelacionesSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposRelacionesSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoProforma.getjListRelacionesSelectReporte().setModel(defaultListModel);									
						
				}	
				
				
				//TIPOS COLUMNAS CATEGORIA DINAMICO
				if(this.jInternalFrameReporteDinamicoProforma.getjComboBoxColumnaCategoriaGrafico()!=null) {
					this.jInternalFrameReporteDinamicoProforma.getjComboBoxColumnaCategoriaGrafico().removeAllItems();
						
					ArrayList<Reporte> tiposColumnasCategoria=ProformaConstantesFunciones.getTiposSeleccionarProforma(true,true,false,true,true);
						
					for(Reporte reporte:tiposColumnasCategoria) {//this.tiposSeleccionar
						this.jInternalFrameReporteDinamicoProforma.getjComboBoxColumnaCategoriaGrafico().addItem(reporte);
					}
					
				}
					
				//TIPOS COLUMNAS CATEGORIA VALOR DINAMICO
				if(this.jInternalFrameReporteDinamicoProforma.getjComboBoxColumnaCategoriaValor()!=null) {
					this.jInternalFrameReporteDinamicoProforma.getjComboBoxColumnaCategoriaValor().removeAllItems();
						
					ArrayList<Reporte> tiposColumnasCategoriaValor=ProformaConstantesFunciones.getTiposSeleccionarProforma(false,false,true,false,false);
						
					for(Reporte reporte:tiposColumnasCategoriaValor) {//this.tiposSeleccionar
						this.jInternalFrameReporteDinamicoProforma.getjComboBoxColumnaCategoriaValor().addItem(reporte);
					}
					
				}
					
				//TIPOS COLUMNAS VALOR
				defaultListModel=new DefaultListModel<Reporte>();
					
				if(this.jInternalFrameReporteDinamicoProforma.getjListColumnasValoresGrafico()!=null) {
					this.jInternalFrameReporteDinamicoProforma.getjListColumnasValoresGrafico().removeAll();
						
					ArrayList<Reporte> tiposColumnasValor=ProformaConstantesFunciones.getTiposSeleccionarProforma(false,false,true,false,false);
						
					for(Reporte reporte:tiposColumnasValor) {//this.tiposSeleccionar
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoProforma.getjListColumnasValoresGrafico().setModel(defaultListModel);									
						
				}
					
				//TIPOS GRAFICOS REPORTES DINAMICOS
				if(this.jInternalFrameReporteDinamicoProforma.getjComboBoxTiposGraficosReportesDinamico()!=null) {
					this.jInternalFrameReporteDinamicoProforma.getjComboBoxTiposGraficosReportesDinamico().removeAllItems();
						
					for(Reporte reporte:this.tiposGraficosReportes) {
						this.jInternalFrameReporteDinamicoProforma.getjComboBoxTiposGraficosReportesDinamico().addItem(reporte);
					}
					
				}
			
			
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	
	
	public void inicializarActualizarBindingBusquedasManualProforma()  throws Exception {				
		//BYDAN_BUSQUEDAS		
		
		if(this.jComboBoxid_centro_costoFK_IdCentroCostoProforma.getSelectedItem()!=null){this.id_centro_costoFK_IdCentroCosto=((CentroCosto)this.jComboBoxid_centro_costoFK_IdCentroCostoProforma.getSelectedItem()).getId();}
		if(this.jComboBoxid_clienteFK_IdClienteProforma.getSelectedItem()!=null){this.id_clienteFK_IdCliente=((Cliente)this.jComboBoxid_clienteFK_IdClienteProforma.getSelectedItem()).getId();}
		if(this.jComboBoxid_consignatarioFK_IdConsignatarioProforma.getSelectedItem()!=null){this.id_consignatarioFK_IdConsignatario=((Consignatario)this.jComboBoxid_consignatarioFK_IdConsignatarioProforma.getSelectedItem()).getId();}
		if(this.jComboBoxid_empleadoFK_IdEmpleadoProforma.getSelectedItem()!=null){this.id_empleadoFK_IdEmpleado=((Empleado)this.jComboBoxid_empleadoFK_IdEmpleadoProforma.getSelectedItem()).getId();}
		if(this.jComboBoxid_estado_proformaFK_IdEstadoProformaProforma.getSelectedItem()!=null){this.id_estado_proformaFK_IdEstadoProforma=((EstadoProforma)this.jComboBoxid_estado_proformaFK_IdEstadoProformaProforma.getSelectedItem()).getId();}
		if(this.jComboBoxid_formatoFK_IdFormatoProforma.getSelectedItem()!=null){this.id_formatoFK_IdFormato=((Formato)this.jComboBoxid_formatoFK_IdFormatoProforma.getSelectedItem()).getId();}
		if(this.jComboBoxid_ruta_transporteFK_IdRutaTransporteProforma.getSelectedItem()!=null){this.id_ruta_transporteFK_IdRutaTransporte=((RutaTransporte)this.jComboBoxid_ruta_transporteFK_IdRutaTransporteProforma.getSelectedItem()).getId();}
		if(this.jComboBoxid_sub_clienteFK_IdSubClienteProforma.getSelectedItem()!=null){this.id_sub_clienteFK_IdSubCliente=((SubCliente)this.jComboBoxid_sub_clienteFK_IdSubClienteProforma.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_cambioFK_IdTipoCambioProforma.getSelectedItem()!=null){this.id_tipo_cambioFK_IdTipoCambio=((TipoCambio)this.jComboBoxid_tipo_cambioFK_IdTipoCambioProforma.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_precioFK_IdTipoPrecioProforma.getSelectedItem()!=null){this.id_tipo_precioFK_IdTipoPrecio=((TipoPrecio)this.jComboBoxid_tipo_precioFK_IdTipoPrecioProforma.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_proformaFK_IdTipoProformaProforma.getSelectedItem()!=null){this.id_tipo_proformaFK_IdTipoProforma=((TipoProforma)this.jComboBoxid_tipo_proformaFK_IdTipoProformaProforma.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_via_transporteFK_IdTipoViaTransporteProforma.getSelectedItem()!=null){this.id_tipo_via_transporteFK_IdTipoViaTransporte=((TipoViaTransporte)this.jComboBoxid_tipo_via_transporteFK_IdTipoViaTransporteProforma.getSelectedItem()).getId();}
		if(this.jComboBoxid_transporteFK_IdTransporteProforma.getSelectedItem()!=null){this.id_transporteFK_IdTransporte=((Transporte)this.jComboBoxid_transporteFK_IdTransporteProforma.getSelectedItem()).getId();}
		if(this.jComboBoxid_vendedorFK_IdVendedorProforma.getSelectedItem()!=null){this.id_vendedorFK_IdVendedor=((Vendedor)this.jComboBoxid_vendedorFK_IdVendedorProforma.getSelectedItem()).getId();}
		
	}
	
	
	
	
	public void inicializarActualizarBindingBusquedasProforma(Boolean esInicializar) throws Exception {				
		if(ProformaJInternalFrame.ISBINDING_MANUAL) {
			
			this.inicializarActualizarBindingBusquedasManualProforma();			
			
		} else {
		}
	}		
		
	public void inicializarActualizarBindingTablaProforma() throws Exception {
		this.inicializarActualizarBindingTablaProforma(false);
	}
	
	
	public void inicializarActualizarBindingTablaOrderByProforma() {
		//TABLA OrderBy	
		TableColumn tableColumn=new TableColumn();
		Integer iWidthTableDefinicionOrderBy=0;			
			
		this.jInternalFrameOrderByProforma.getjTableDatosOrderBy().setModel(new TablaGeneralOrderByModel(this.arrOrderBy));
					
		//DEFINIR RENDERERS OrderBy
		tableColumn=this.jInternalFrameOrderByProforma.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByProforma.getjTableDatosOrderBy(),OrderBy.ISSELECTED));			
		//tableColumn.addPropertyChangeListener(new ProformaPropertyChangeListener());
					
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		iWidthTableDefinicionOrderBy+=50;
					
		tableColumn=this.jInternalFrameOrderByProforma.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByProforma.getjTableDatosOrderBy(),OrderBy.NOMBRE));
		//tableColumn.addPropertyChangeListener(new ProformaPropertyChangeListener());
					
		tableColumn.setPreferredWidth(150); 	 
		tableColumn.setWidth(150); 	 
		tableColumn.setMinWidth(150);
		tableColumn.setMaxWidth(150);
				
		iWidthTableDefinicionOrderBy+=150;
					
		//tableColumn=this.jTableDatosProformaOrderBy.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProformaOrderBy,OrderBy.NOMBREDB));			
		////tableColumn.addPropertyChangeListener(new ProformaPropertyChangeListener());
								
		tableColumn=this.jInternalFrameOrderByProforma.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByProforma.getjTableDatosOrderBy(),OrderBy.ESDESC));
		//tableColumn.addPropertyChangeListener(new ProformaPropertyChangeListener());
												
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		((AbstractTableModel) this.jInternalFrameOrderByProforma.getjTableDatosOrderBy().getModel()).fireTableDataChanged();
				
		iWidthTableDefinicionOrderBy+=50;
	}
	
	
	
	public void inicializarActualizarBindingTablaProforma(Boolean esInicializar) throws Exception {
		Boolean isNoExiste=false;
		Integer iCountNumeroColumnasNormal=0;
		Integer iCountNumeroColumnasFk=0;
		
		this.iWidthTableDefinicion=0;
		
		int iSizeTabla=0;
		
		iSizeTabla=this.getSizeTablaDatos();
		
	if(esInicializar || ConstantesSwing.FORZAR_INICIALIZAR_TABLA) {//esInicializar
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			isNoExiste=proformaLogic.getProformas().size()==0;
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			isNoExiste=proformas.size()==0;
		}
		//ARCHITECTURE
			
		if(isNoExiste) {
			if(this.iNumeroPaginacion-this.iNumeroPaginacion>0) {
				this.iNumeroPaginacion-=this.iNumeroPaginacion;
			}
		}
		
		TableColumn tableColumn=new TableColumn();
		
		if(ProformaJInternalFrame.ISBINDING_MANUAL_TABLA) {
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.jTableDatosProforma.setModel(new ProformaModel(this.proformaLogic.getProformas(),this));
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.jTableDatosProforma.setModel(new ProformaModel(this.proformas,this));
			}
			//ARCHITECTURE
			
							
			
			
			if(this.jInternalFrameOrderByProforma!=null && this.jInternalFrameOrderByProforma.getjTableDatosOrderBy()!=null) {
				this.inicializarActualizarBindingTablaOrderByProforma();
			}
			
								
			//DEFINIR RENDERERS
			tableColumn=this.jTableDatosProforma.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProforma,Constantes2.S_SELECCIONAR));
			//tableColumn.addPropertyChangeListener(new ProformaPropertyChangeListener());
			tableColumn.setCellRenderer(new BooleanRenderer(true,"Seleccionar "+ProformaConstantesFunciones.SCLASSWEBTITULO,proformaConstantesFunciones.resaltarSeleccionarProforma,iSizeTabla,true,false,"","",this));
			tableColumn.setCellEditor(new BooleanEditorRenderer(true,"Seleccionar "+ProformaConstantesFunciones.SCLASSWEBTITULO,proformaConstantesFunciones.resaltarSeleccionarProforma,false,"","",this));			
			
			tableColumn.setPreferredWidth(50); 	 
			tableColumn.setWidth(50); 	 
			tableColumn.setMinWidth(50); 
			tableColumn.setMaxWidth(50); 
			
			this.iWidthTableDefinicion+=50;
			
			


			tableColumn=this.jTableDatosProforma.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProforma,ProformaConstantesFunciones.LABEL_ID));

		if(this.proformaConstantesFunciones.mostraridProforma && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProformaConstantesFunciones.LABEL_ID,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.proformaConstantesFunciones.resaltaridProforma,this.proformaConstantesFunciones.activaridProforma,iSizeTabla,this,true,"idProforma","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.proformaConstantesFunciones.resaltaridProforma,this.proformaConstantesFunciones.activaridProforma,this,true,"idProforma","BASICO",false));

			tableColumn.setPreferredWidth(50);
			tableColumn.setWidth(50);
			tableColumn.setMinWidth(50);
			tableColumn.setMaxWidth(50);

			this.iWidthTableDefinicion+=50;
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProforma.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProforma,ProformaConstantesFunciones.LABEL_IDEMPRESA));

		if(this.proformaConstantesFunciones.mostrarid_empresaProforma && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProformaConstantesFunciones.LABEL_IDEMPRESA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new EmpresaTableCell(this.empresasForeignKey,this.proformaConstantesFunciones.resaltarid_empresaProforma,this,this.proformaConstantesFunciones.activarid_empresaProforma,iSizeTabla));
			tableColumn.setCellEditor(new EmpresaTableCell(this.empresasForeignKey,this.proformaConstantesFunciones.resaltarid_empresaProforma,this,this.proformaConstantesFunciones.activarid_empresaProforma,false,"id_empresaProforma","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ProformaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProforma.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProforma,ProformaConstantesFunciones.LABEL_IDSUCURSAL));

		if(this.proformaConstantesFunciones.mostrarid_sucursalProforma && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProformaConstantesFunciones.LABEL_IDSUCURSAL,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new SucursalTableCell(this.sucursalsForeignKey,this.proformaConstantesFunciones.resaltarid_sucursalProforma,this,this.proformaConstantesFunciones.activarid_sucursalProforma,iSizeTabla));
			tableColumn.setCellEditor(new SucursalTableCell(this.sucursalsForeignKey,this.proformaConstantesFunciones.resaltarid_sucursalProforma,this,this.proformaConstantesFunciones.activarid_sucursalProforma,false,"id_sucursalProforma","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ProformaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProforma.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProforma,ProformaConstantesFunciones.LABEL_IDUSUARIO));

		if(this.proformaConstantesFunciones.mostrarid_usuarioProforma && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProformaConstantesFunciones.LABEL_IDUSUARIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new UsuarioTableCell(this.usuariosForeignKey,this.proformaConstantesFunciones.resaltarid_usuarioProforma,this,this.proformaConstantesFunciones.activarid_usuarioProforma,iSizeTabla));
			tableColumn.setCellEditor(new UsuarioTableCell(this.usuariosForeignKey,this.proformaConstantesFunciones.resaltarid_usuarioProforma,this,this.proformaConstantesFunciones.activarid_usuarioProforma,false,"id_usuarioProforma","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ProformaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProforma.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProforma,ProformaConstantesFunciones.LABEL_IDEJERCICIO));

		if(this.proformaConstantesFunciones.mostrarid_ejercicioProforma && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProformaConstantesFunciones.LABEL_IDEJERCICIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new EjercicioTableCell(this.ejerciciosForeignKey,this.proformaConstantesFunciones.resaltarid_ejercicioProforma,this,this.proformaConstantesFunciones.activarid_ejercicioProforma,iSizeTabla));
			tableColumn.setCellEditor(new EjercicioTableCell(this.ejerciciosForeignKey,this.proformaConstantesFunciones.resaltarid_ejercicioProforma,this,this.proformaConstantesFunciones.activarid_ejercicioProforma,false,"id_ejercicioProforma","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ProformaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProforma.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProforma,ProformaConstantesFunciones.LABEL_IDPERIODO));

		if(this.proformaConstantesFunciones.mostrarid_periodoProforma && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProformaConstantesFunciones.LABEL_IDPERIODO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new PeriodoTableCell(this.periodosForeignKey,this.proformaConstantesFunciones.resaltarid_periodoProforma,this,this.proformaConstantesFunciones.activarid_periodoProforma,iSizeTabla));
			tableColumn.setCellEditor(new PeriodoTableCell(this.periodosForeignKey,this.proformaConstantesFunciones.resaltarid_periodoProforma,this,this.proformaConstantesFunciones.activarid_periodoProforma,false,"id_periodoProforma","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ProformaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProforma.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProforma,ProformaConstantesFunciones.LABEL_IDANIO));

		if(this.proformaConstantesFunciones.mostrarid_anioProforma && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProformaConstantesFunciones.LABEL_IDANIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new AnioTableCell(this.aniosForeignKey,this.proformaConstantesFunciones.resaltarid_anioProforma,this,this.proformaConstantesFunciones.activarid_anioProforma,iSizeTabla));
			tableColumn.setCellEditor(new AnioTableCell(this.aniosForeignKey,this.proformaConstantesFunciones.resaltarid_anioProforma,this,this.proformaConstantesFunciones.activarid_anioProforma,true,"id_anioProforma","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ProformaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProforma.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProforma,ProformaConstantesFunciones.LABEL_IDMES));

		if(this.proformaConstantesFunciones.mostrarid_mesProforma && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProformaConstantesFunciones.LABEL_IDMES,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new MesTableCell(this.messForeignKey,this.proformaConstantesFunciones.resaltarid_mesProforma,this,this.proformaConstantesFunciones.activarid_mesProforma,iSizeTabla));
			tableColumn.setCellEditor(new MesTableCell(this.messForeignKey,this.proformaConstantesFunciones.resaltarid_mesProforma,this,this.proformaConstantesFunciones.activarid_mesProforma,true,"id_mesProforma","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ProformaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProforma.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProforma,ProformaConstantesFunciones.LABEL_NUMEROPREIMPRESO));

		if(this.proformaConstantesFunciones.mostrarnumero_pre_impresoProforma && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProformaConstantesFunciones.LABEL_NUMEROPREIMPRESO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.proformaConstantesFunciones.resaltarnumero_pre_impresoProforma,this.proformaConstantesFunciones.activarnumero_pre_impresoProforma,iSizeTabla,this,true,"numero_pre_impresoProforma","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.proformaConstantesFunciones.resaltarnumero_pre_impresoProforma,this.proformaConstantesFunciones.activarnumero_pre_impresoProforma,this,true,"numero_pre_impresoProforma","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ProformaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProforma.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProforma,ProformaConstantesFunciones.LABEL_FECHAEMISION));

		if(this.proformaConstantesFunciones.mostrarfecha_emisionProforma && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProformaConstantesFunciones.LABEL_FECHAEMISION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new DateRenderer(this.proformaConstantesFunciones.resaltarfecha_emisionProforma,this.proformaConstantesFunciones.activarfecha_emisionProforma,iSizeTabla,this,true,"fecha_emisionProforma","BASICO"));
			tableColumn.setCellEditor(new DateEditorRenderer(this.proformaConstantesFunciones.resaltarfecha_emisionProforma,this.proformaConstantesFunciones.activarfecha_emisionProforma,this,true,"fecha_emisionProforma","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30);
			//tableColumn.addPropertyChangeListener(new ProformaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProforma.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProforma,ProformaConstantesFunciones.LABEL_DIAS));

		if(this.proformaConstantesFunciones.mostrardiasProforma && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProformaConstantesFunciones.LABEL_DIAS,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.proformaConstantesFunciones.resaltardiasProforma,this.proformaConstantesFunciones.activardiasProforma,iSizeTabla,this,true,"diasProforma","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.proformaConstantesFunciones.resaltardiasProforma,this.proformaConstantesFunciones.activardiasProforma,this,true,"diasProforma","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ProformaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProforma.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProforma,ProformaConstantesFunciones.LABEL_FECHAVENCIMIENTO));

		if(this.proformaConstantesFunciones.mostrarfecha_vencimientoProforma && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProformaConstantesFunciones.LABEL_FECHAVENCIMIENTO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new DateRenderer(this.proformaConstantesFunciones.resaltarfecha_vencimientoProforma,this.proformaConstantesFunciones.activarfecha_vencimientoProforma,iSizeTabla,this,true,"fecha_vencimientoProforma","BASICO"));
			tableColumn.setCellEditor(new DateEditorRenderer(this.proformaConstantesFunciones.resaltarfecha_vencimientoProforma,this.proformaConstantesFunciones.activarfecha_vencimientoProforma,this,true,"fecha_vencimientoProforma","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30);
			//tableColumn.addPropertyChangeListener(new ProformaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProforma.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProforma,ProformaConstantesFunciones.LABEL_IDMONEDA));

		if(this.proformaConstantesFunciones.mostrarid_monedaProforma && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProformaConstantesFunciones.LABEL_IDMONEDA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new MonedaTableCell(this.monedasForeignKey,this.proformaConstantesFunciones.resaltarid_monedaProforma,this,this.proformaConstantesFunciones.activarid_monedaProforma,iSizeTabla));
			tableColumn.setCellEditor(new MonedaTableCell(this.monedasForeignKey,this.proformaConstantesFunciones.resaltarid_monedaProforma,this,this.proformaConstantesFunciones.activarid_monedaProforma,false,"id_monedaProforma","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ProformaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProforma.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProforma,ProformaConstantesFunciones.LABEL_COTIZACION));

		if(this.proformaConstantesFunciones.mostrarcotizacionProforma && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProformaConstantesFunciones.LABEL_COTIZACION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.proformaConstantesFunciones.resaltarcotizacionProforma,this.proformaConstantesFunciones.activarcotizacionProforma,iSizeTabla,this,true,"cotizacionProforma","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.proformaConstantesFunciones.resaltarcotizacionProforma,this.proformaConstantesFunciones.activarcotizacionProforma,this,true,"cotizacionProforma","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ProformaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProforma.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProforma,ProformaConstantesFunciones.LABEL_IDEMPLEADO));

		if(this.proformaConstantesFunciones.mostrarid_empleadoProforma && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProformaConstantesFunciones.LABEL_IDEMPLEADO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new EmpleadoTableCell(this.empleadosForeignKey,this.proformaConstantesFunciones.resaltarid_empleadoProforma,this,this.proformaConstantesFunciones.activarid_empleadoProforma,iSizeTabla));
			tableColumn.setCellEditor(new EmpleadoTableCell(this.empleadosForeignKey,this.proformaConstantesFunciones.resaltarid_empleadoProforma,this,this.proformaConstantesFunciones.activarid_empleadoProforma,true,"id_empleadoProforma","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100);
			//tableColumn.addPropertyChangeListener(new ProformaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProforma.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProforma,ProformaConstantesFunciones.LABEL_IDFORMATO));

		if(this.proformaConstantesFunciones.mostrarid_formatoProforma && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProformaConstantesFunciones.LABEL_IDFORMATO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new FormatoTableCell(this.formatosForeignKey,this.proformaConstantesFunciones.resaltarid_formatoProforma,this,this.proformaConstantesFunciones.activarid_formatoProforma,iSizeTabla));
			tableColumn.setCellEditor(new FormatoTableCell(this.formatosForeignKey,this.proformaConstantesFunciones.resaltarid_formatoProforma,this,this.proformaConstantesFunciones.activarid_formatoProforma,true,"id_formatoProforma","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ProformaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProforma.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProforma,ProformaConstantesFunciones.LABEL_IDESTADOPROFORMA));

		if(this.proformaConstantesFunciones.mostrarid_estado_proformaProforma && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProformaConstantesFunciones.LABEL_IDESTADOPROFORMA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new EstadoProformaTableCell(this.estadoproformasForeignKey,this.proformaConstantesFunciones.resaltarid_estado_proformaProforma,this,this.proformaConstantesFunciones.activarid_estado_proformaProforma,iSizeTabla));
			tableColumn.setCellEditor(new EstadoProformaTableCell(this.estadoproformasForeignKey,this.proformaConstantesFunciones.resaltarid_estado_proformaProforma,this,this.proformaConstantesFunciones.activarid_estado_proformaProforma,true,"id_estado_proformaProforma","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ProformaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProforma.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProforma,ProformaConstantesFunciones.LABEL_DIRECCION));

		if(this.proformaConstantesFunciones.mostrardireccionProforma && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProformaConstantesFunciones.LABEL_DIRECCION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.proformaConstantesFunciones.resaltardireccionProforma,this.proformaConstantesFunciones.activardireccionProforma,iSizeTabla,this,true,"direccionProforma","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.proformaConstantesFunciones.resaltardireccionProforma,this.proformaConstantesFunciones.activardireccionProforma,this,true,"direccionProforma","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ProformaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProforma.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProforma,ProformaConstantesFunciones.LABEL_IDCLIENTE));

		if(this.proformaConstantesFunciones.mostrarid_clienteProforma && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProformaConstantesFunciones.LABEL_IDCLIENTE,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new ClienteTableCell(this.clientesForeignKey,this.proformaConstantesFunciones.resaltarid_clienteProforma,this,this.proformaConstantesFunciones.activarid_clienteProforma,iSizeTabla));
			tableColumn.setCellEditor(new ClienteTableCell(this.clientesForeignKey,this.proformaConstantesFunciones.resaltarid_clienteProforma,this,this.proformaConstantesFunciones.activarid_clienteProforma,true,"id_clienteProforma","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75);
			//tableColumn.addPropertyChangeListener(new ProformaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProforma.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProforma,ProformaConstantesFunciones.LABEL_RUC));

		if(this.proformaConstantesFunciones.mostrarrucProforma && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProformaConstantesFunciones.LABEL_RUC,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.proformaConstantesFunciones.resaltarrucProforma,this.proformaConstantesFunciones.activarrucProforma,iSizeTabla,this,true,"rucProforma","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.proformaConstantesFunciones.resaltarrucProforma,this.proformaConstantesFunciones.activarrucProforma,this,true,"rucProforma","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ProformaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProforma.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProforma,ProformaConstantesFunciones.LABEL_ESOFERTA));

		if(this.proformaConstantesFunciones.mostrares_ofertaProforma && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProformaConstantesFunciones.LABEL_ESOFERTA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.proformaConstantesFunciones.resaltares_ofertaProforma,this.proformaConstantesFunciones.activares_ofertaProforma,iSizeTabla));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.proformaConstantesFunciones.resaltares_ofertaProforma,this.proformaConstantesFunciones.activares_ofertaProforma,this,true,"es_ofertaProforma","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ProformaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProforma.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProforma,ProformaConstantesFunciones.LABEL_TELEFONO));

		if(this.proformaConstantesFunciones.mostrartelefonoProforma && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProformaConstantesFunciones.LABEL_TELEFONO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.proformaConstantesFunciones.resaltartelefonoProforma,this.proformaConstantesFunciones.activartelefonoProforma,iSizeTabla,this,true,"telefonoProforma","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.proformaConstantesFunciones.resaltartelefonoProforma,this.proformaConstantesFunciones.activartelefonoProforma,this,true,"telefonoProforma","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ProformaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProforma.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProforma,ProformaConstantesFunciones.LABEL_IDTIPOPRECIO));

		if(this.proformaConstantesFunciones.mostrarid_tipo_precioProforma && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProformaConstantesFunciones.LABEL_IDTIPOPRECIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoPrecioTableCell(this.tipopreciosForeignKey,this.proformaConstantesFunciones.resaltarid_tipo_precioProforma,this,this.proformaConstantesFunciones.activarid_tipo_precioProforma,iSizeTabla));
			tableColumn.setCellEditor(new TipoPrecioTableCell(this.tipopreciosForeignKey,this.proformaConstantesFunciones.resaltarid_tipo_precioProforma,this,this.proformaConstantesFunciones.activarid_tipo_precioProforma,true,"id_tipo_precioProforma","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ProformaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProforma.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProforma,ProformaConstantesFunciones.LABEL_IDVENDEDOR));

		if(this.proformaConstantesFunciones.mostrarid_vendedorProforma && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProformaConstantesFunciones.LABEL_IDVENDEDOR,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new VendedorTableCell(this.vendedorsForeignKey,this.proformaConstantesFunciones.resaltarid_vendedorProforma,this,this.proformaConstantesFunciones.activarid_vendedorProforma,iSizeTabla));
			tableColumn.setCellEditor(new VendedorTableCell(this.vendedorsForeignKey,this.proformaConstantesFunciones.resaltarid_vendedorProforma,this,this.proformaConstantesFunciones.activarid_vendedorProforma,true,"id_vendedorProforma","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ProformaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProforma.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProforma,ProformaConstantesFunciones.LABEL_IDSUBCLIENTE));

		if(this.proformaConstantesFunciones.mostrarid_sub_clienteProforma && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProformaConstantesFunciones.LABEL_IDSUBCLIENTE,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new SubClienteTableCell(this.subclientesForeignKey,this.proformaConstantesFunciones.resaltarid_sub_clienteProforma,this,this.proformaConstantesFunciones.activarid_sub_clienteProforma,iSizeTabla));
			tableColumn.setCellEditor(new SubClienteTableCell(this.subclientesForeignKey,this.proformaConstantesFunciones.resaltarid_sub_clienteProforma,this,this.proformaConstantesFunciones.activarid_sub_clienteProforma,true,"id_sub_clienteProforma","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ProformaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProforma.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProforma,ProformaConstantesFunciones.LABEL_IDTIPOVIATRANSPORTE));

		if(this.proformaConstantesFunciones.mostrarid_tipo_via_transporteProforma && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProformaConstantesFunciones.LABEL_IDTIPOVIATRANSPORTE,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoViaTransporteTableCell(this.tipoviatransportesForeignKey,this.proformaConstantesFunciones.resaltarid_tipo_via_transporteProforma,this,this.proformaConstantesFunciones.activarid_tipo_via_transporteProforma,iSizeTabla));
			tableColumn.setCellEditor(new TipoViaTransporteTableCell(this.tipoviatransportesForeignKey,this.proformaConstantesFunciones.resaltarid_tipo_via_transporteProforma,this,this.proformaConstantesFunciones.activarid_tipo_via_transporteProforma,true,"id_tipo_via_transporteProforma","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ProformaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProforma.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProforma,ProformaConstantesFunciones.LABEL_IDTRANSPORTE));

		if(this.proformaConstantesFunciones.mostrarid_transporteProforma && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProformaConstantesFunciones.LABEL_IDTRANSPORTE,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TransporteTableCell(this.transportesForeignKey,this.proformaConstantesFunciones.resaltarid_transporteProforma,this,this.proformaConstantesFunciones.activarid_transporteProforma,iSizeTabla));
			tableColumn.setCellEditor(new TransporteTableCell(this.transportesForeignKey,this.proformaConstantesFunciones.resaltarid_transporteProforma,this,this.proformaConstantesFunciones.activarid_transporteProforma,true,"id_transporteProforma","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ProformaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProforma.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProforma,ProformaConstantesFunciones.LABEL_IDRUTATRANSPORTE));

		if(this.proformaConstantesFunciones.mostrarid_ruta_transporteProforma && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProformaConstantesFunciones.LABEL_IDRUTATRANSPORTE,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new RutaTransporteTableCell(this.rutatransportesForeignKey,this.proformaConstantesFunciones.resaltarid_ruta_transporteProforma,this,this.proformaConstantesFunciones.activarid_ruta_transporteProforma,iSizeTabla));
			tableColumn.setCellEditor(new RutaTransporteTableCell(this.rutatransportesForeignKey,this.proformaConstantesFunciones.resaltarid_ruta_transporteProforma,this,this.proformaConstantesFunciones.activarid_ruta_transporteProforma,true,"id_ruta_transporteProforma","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ProformaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProforma.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProforma,ProformaConstantesFunciones.LABEL_DESCRIPCION));

		if(this.proformaConstantesFunciones.mostrardescripcionProforma && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProformaConstantesFunciones.LABEL_DESCRIPCION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.proformaConstantesFunciones.resaltardescripcionProforma,this.proformaConstantesFunciones.activardescripcionProforma,iSizeTabla,this,true,"descripcionProforma","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.proformaConstantesFunciones.resaltardescripcionProforma,this.proformaConstantesFunciones.activardescripcionProforma,this,true,"descripcionProforma","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ProformaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProforma.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProforma,ProformaConstantesFunciones.LABEL_DESCUENTOPORCENTAJE));

		if(this.proformaConstantesFunciones.mostrardescuento_porcentajeProforma && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProformaConstantesFunciones.LABEL_DESCUENTOPORCENTAJE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.proformaConstantesFunciones.resaltardescuento_porcentajeProforma,this.proformaConstantesFunciones.activardescuento_porcentajeProforma,iSizeTabla,this,true,"descuento_porcentajeProforma","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.proformaConstantesFunciones.resaltardescuento_porcentajeProforma,this.proformaConstantesFunciones.activardescuento_porcentajeProforma,this,true,"descuento_porcentajeProforma","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ProformaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProforma.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProforma,ProformaConstantesFunciones.LABEL_MONTOCONIVA));

		if(this.proformaConstantesFunciones.mostrarmonto_con_ivaProforma && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProformaConstantesFunciones.LABEL_MONTOCONIVA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.proformaConstantesFunciones.resaltarmonto_con_ivaProforma,this.proformaConstantesFunciones.activarmonto_con_ivaProforma,iSizeTabla,this,true,"monto_con_ivaProforma","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.proformaConstantesFunciones.resaltarmonto_con_ivaProforma,this.proformaConstantesFunciones.activarmonto_con_ivaProforma,this,true,"monto_con_ivaProforma","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ProformaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProforma.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProforma,ProformaConstantesFunciones.LABEL_SUMAN));

		if(this.proformaConstantesFunciones.mostrarsumanProforma && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProformaConstantesFunciones.LABEL_SUMAN,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.proformaConstantesFunciones.resaltarsumanProforma,this.proformaConstantesFunciones.activarsumanProforma,iSizeTabla,this,true,"sumanProforma","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.proformaConstantesFunciones.resaltarsumanProforma,this.proformaConstantesFunciones.activarsumanProforma,this,true,"sumanProforma","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ProformaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProforma.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProforma,ProformaConstantesFunciones.LABEL_DESCUENTOVALOR));

		if(this.proformaConstantesFunciones.mostrardescuento_valorProforma && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProformaConstantesFunciones.LABEL_DESCUENTOVALOR,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.proformaConstantesFunciones.resaltardescuento_valorProforma,this.proformaConstantesFunciones.activardescuento_valorProforma,iSizeTabla,this,true,"descuento_valorProforma","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.proformaConstantesFunciones.resaltardescuento_valorProforma,this.proformaConstantesFunciones.activardescuento_valorProforma,this,true,"descuento_valorProforma","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ProformaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProforma.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProforma,ProformaConstantesFunciones.LABEL_MONTOSINIVA));

		if(this.proformaConstantesFunciones.mostrarmonto_sin_ivaProforma && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProformaConstantesFunciones.LABEL_MONTOSINIVA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.proformaConstantesFunciones.resaltarmonto_sin_ivaProforma,this.proformaConstantesFunciones.activarmonto_sin_ivaProforma,iSizeTabla,this,true,"monto_sin_ivaProforma","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.proformaConstantesFunciones.resaltarmonto_sin_ivaProforma,this.proformaConstantesFunciones.activarmonto_sin_ivaProforma,this,true,"monto_sin_ivaProforma","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ProformaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProforma.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProforma,ProformaConstantesFunciones.LABEL_DESCUENTOGENERAL));

		if(this.proformaConstantesFunciones.mostrardescuento_generalProforma && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProformaConstantesFunciones.LABEL_DESCUENTOGENERAL,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.proformaConstantesFunciones.resaltardescuento_generalProforma,this.proformaConstantesFunciones.activardescuento_generalProforma,iSizeTabla,this,true,"descuento_generalProforma","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.proformaConstantesFunciones.resaltardescuento_generalProforma,this.proformaConstantesFunciones.activardescuento_generalProforma,this,true,"descuento_generalProforma","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ProformaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProforma.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProforma,ProformaConstantesFunciones.LABEL_FLETE));

		if(this.proformaConstantesFunciones.mostrarfleteProforma && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProformaConstantesFunciones.LABEL_FLETE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.proformaConstantesFunciones.resaltarfleteProforma,this.proformaConstantesFunciones.activarfleteProforma,iSizeTabla,this,true,"fleteProforma","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.proformaConstantesFunciones.resaltarfleteProforma,this.proformaConstantesFunciones.activarfleteProforma,this,true,"fleteProforma","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ProformaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProforma.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProforma,ProformaConstantesFunciones.LABEL_ULTIMOCOSTO));

		if(this.proformaConstantesFunciones.mostrarultimo_costoProforma && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProformaConstantesFunciones.LABEL_ULTIMOCOSTO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.proformaConstantesFunciones.resaltarultimo_costoProforma,this.proformaConstantesFunciones.activarultimo_costoProforma,iSizeTabla,this,true,"ultimo_costoProforma","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.proformaConstantesFunciones.resaltarultimo_costoProforma,this.proformaConstantesFunciones.activarultimo_costoProforma,this,true,"ultimo_costoProforma","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ProformaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProforma.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProforma,ProformaConstantesFunciones.LABEL_SUBTOTAL));

		if(this.proformaConstantesFunciones.mostrarsubtotalProforma && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProformaConstantesFunciones.LABEL_SUBTOTAL,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.proformaConstantesFunciones.resaltarsubtotalProforma,this.proformaConstantesFunciones.activarsubtotalProforma,iSizeTabla,this,true,"subtotalProforma","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.proformaConstantesFunciones.resaltarsubtotalProforma,this.proformaConstantesFunciones.activarsubtotalProforma,this,true,"subtotalProforma","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ProformaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProforma.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProforma,ProformaConstantesFunciones.LABEL_OTROSCARGOS));

		if(this.proformaConstantesFunciones.mostrarotros_cargosProforma && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProformaConstantesFunciones.LABEL_OTROSCARGOS,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.proformaConstantesFunciones.resaltarotros_cargosProforma,this.proformaConstantesFunciones.activarotros_cargosProforma,iSizeTabla,this,true,"otros_cargosProforma","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.proformaConstantesFunciones.resaltarotros_cargosProforma,this.proformaConstantesFunciones.activarotros_cargosProforma,this,true,"otros_cargosProforma","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ProformaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProforma.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProforma,ProformaConstantesFunciones.LABEL_MARGENUTILIDAD));

		if(this.proformaConstantesFunciones.mostrarmargen_utilidadProforma && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProformaConstantesFunciones.LABEL_MARGENUTILIDAD,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.proformaConstantesFunciones.resaltarmargen_utilidadProforma,this.proformaConstantesFunciones.activarmargen_utilidadProforma,iSizeTabla,this,true,"margen_utilidadProforma","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.proformaConstantesFunciones.resaltarmargen_utilidadProforma,this.proformaConstantesFunciones.activarmargen_utilidadProforma,this,true,"margen_utilidadProforma","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ProformaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProforma.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProforma,ProformaConstantesFunciones.LABEL_IVA));

		if(this.proformaConstantesFunciones.mostrarivaProforma && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProformaConstantesFunciones.LABEL_IVA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.proformaConstantesFunciones.resaltarivaProforma,this.proformaConstantesFunciones.activarivaProforma,iSizeTabla,this,true,"ivaProforma","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.proformaConstantesFunciones.resaltarivaProforma,this.proformaConstantesFunciones.activarivaProforma,this,true,"ivaProforma","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ProformaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProforma.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProforma,ProformaConstantesFunciones.LABEL_FINANCIAMIENTO));

		if(this.proformaConstantesFunciones.mostrarfinanciamientoProforma && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProformaConstantesFunciones.LABEL_FINANCIAMIENTO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.proformaConstantesFunciones.resaltarfinanciamientoProforma,this.proformaConstantesFunciones.activarfinanciamientoProforma,iSizeTabla,this,true,"financiamientoProforma","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.proformaConstantesFunciones.resaltarfinanciamientoProforma,this.proformaConstantesFunciones.activarfinanciamientoProforma,this,true,"financiamientoProforma","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ProformaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProforma.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProforma,ProformaConstantesFunciones.LABEL_TOTAL));

		if(this.proformaConstantesFunciones.mostrartotalProforma && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProformaConstantesFunciones.LABEL_TOTAL,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.proformaConstantesFunciones.resaltartotalProforma,this.proformaConstantesFunciones.activartotalProforma,iSizeTabla,this,true,"totalProforma","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.proformaConstantesFunciones.resaltartotalProforma,this.proformaConstantesFunciones.activartotalProforma,this,true,"totalProforma","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ProformaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProforma.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProforma,ProformaConstantesFunciones.LABEL_OTROSVALORES));

		if(this.proformaConstantesFunciones.mostrarotros_valoresProforma && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProformaConstantesFunciones.LABEL_OTROSVALORES,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.proformaConstantesFunciones.resaltarotros_valoresProforma,this.proformaConstantesFunciones.activarotros_valoresProforma,iSizeTabla,this,true,"otros_valoresProforma","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.proformaConstantesFunciones.resaltarotros_valoresProforma,this.proformaConstantesFunciones.activarotros_valoresProforma,this,true,"otros_valoresProforma","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ProformaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosProforma.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosProforma,ProformaConstantesFunciones.LABEL_ANTICIPO));

		if(this.proformaConstantesFunciones.mostraranticipoProforma && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ProformaConstantesFunciones.LABEL_ANTICIPO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.proformaConstantesFunciones.resaltaranticipoProforma,this.proformaConstantesFunciones.activaranticipoProforma,iSizeTabla,this,true,"anticipoProforma","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.proformaConstantesFunciones.resaltaranticipoProforma,this.proformaConstantesFunciones.activaranticipoProforma,this,true,"anticipoProforma","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ProformaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}
			
		} else {
		}			
					
		if(!this.proformaSessionBean.getEsGuardarRelacionado()
			&& !this.esParaBusquedaForeignKey) {
			

			if(this.isTienePermisosTerminoProforma && this.proformaConstantesFunciones.mostrarTerminoProformaProforma && !ProformaConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Termino Proformas");
				tableColumn.setHeaderValue("Termino Proformas");
				tableColumn.setCellRenderer(new TerminoProformaTableCell(proformaConstantesFunciones.resaltarTerminoProformaProforma,this,this.proformaConstantesFunciones.activarTerminoProformaProforma));
				tableColumn.setCellEditor(new TerminoProformaTableCell(proformaConstantesFunciones.resaltarTerminoProformaProforma,this,this.proformaConstantesFunciones.activarTerminoProformaProforma));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosProforma.addColumn(tableColumn);
			}

			if(this.isTienePermisosDetalleProforma && this.proformaConstantesFunciones.mostrarDetalleProformaProforma && !ProformaConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Detalle Proformas");
				tableColumn.setHeaderValue("Detalle Proformas");
				tableColumn.setCellRenderer(new DetalleProformaTableCell(proformaConstantesFunciones.resaltarDetalleProformaProforma,this,this.proformaConstantesFunciones.activarDetalleProformaProforma));
				tableColumn.setCellEditor(new DetalleProformaTableCell(proformaConstantesFunciones.resaltarDetalleProformaProforma,this,this.proformaConstantesFunciones.activarDetalleProformaProforma));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosProforma.addColumn(tableColumn);
			}
		}
		
		if(true) {
			String sLabelColumnAccion="Editar";
			String sLabelColumnAccionEli="Eli";
			
			if(this.esParaBusquedaForeignKey)  {
				sLabelColumnAccion="Seleccionar";
				
				//LO MISMO QUE ELSE
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.proformaSessionBean.getEsGuardarRelacionado(),iSizeTabla));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.proformaSessionBean.getEsGuardarRelacionado(),iSizeTabla));
	
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosProforma.addColumn(tableColumn);
			
			} else {				
				
				//LO MISMO QUE IF
				
				//tableColumn= new TableColumn();
				//tableColumn.setIdentifier(sLabelColumnAccion);
				//tableColumn.setHeaderValue(sLabelColumnAccion);
				//tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.proformaSessionBean.getEsGuardarRelacionado(),iSizeTabla));
				//tableColumn.setCellEditor(new IdTableCell(this,false,false,this.proformaSessionBean.getEsGuardarRelacionado(),iSizeTabla));
		
				//tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				//tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				//tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				//tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				//this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				//this.jTableDatosProforma.addColumn(tableColumn);				
					
				//ELIMINAR
				if(this.isPermisoEliminarProforma && this.isPermisoGuardarCambiosProforma) {
					//tableColumn= new TableColumn();
					//tableColumn.setIdentifier(Constantes2.S_ELI);
					//tableColumn.setHeaderValue(sLabelColumnAccionEli);
					//tableColumn.setCellRenderer(new IdTableCell(this,false,true,this.proformaSessionBean.getEsGuardarRelacionado(),iSizeTabla));
					//tableColumn.setCellEditor(new IdTableCell(this,false,true,this.proformaSessionBean.getEsGuardarRelacionado(),iSizeTabla));
			
					//tableColumn.setPreferredWidth(65); 	 
					//tableColumn.setWidth(65); 	 
					//tableColumn.setMinWidth(65); 
					//tableColumn.setMaxWidth(65);
					
					//this.iWidthTableDefinicion+=65;
						
					//this.jTableDatosProforma.addColumn(tableColumn);
				}
			}			
						
			if(this.conMaximoRelaciones && this.proformaSessionBean.getConGuardarRelaciones()) {
				if(this.conFuncionalidadRelaciones) {
					tableColumn= new TableColumn();
					tableColumn.setIdentifier("Editar Rel");
					tableColumn.setHeaderValue("Editar Rel");
					tableColumn.setCellRenderer(new IdTableCell(this,true,false,iSizeTabla));
					tableColumn.setCellEditor(new IdTableCell(this,true,false,iSizeTabla));
		
					tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
					tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
					tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
					tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
					
					this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
					this.jTableDatosProforma.addColumn(tableColumn);
				}
			}
			
			/*
			tableColumn= new TableColumn();
			tableColumn.setIdentifier(Constantes2.S_SELECCIONAR);
			tableColumn.setHeaderValue(Constantes2.S_SELECCIONAR);
			tableColumn.setCellRenderer(new IdSeleccionarTableCell(this));
			tableColumn.setCellEditor(new IdSeleccionarTableCell(this));
			
			tableColumn.setPreferredWidth(30); 	 
			tableColumn.setWidth(30); 	 
			tableColumn.setMinWidth(30); 
			
			this.iWidthTableDefinicion+=30;
			
			this.jTableDatosProforma.addColumn(tableColumn);
			*/
		}
		
		Integer iUltimaColumna=0;//1
		Integer iNuevaPosicionColumna=0;
		
		
		//PERMITE ELIMINAR SIMPLE
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarProforma && this.isPermisoGuardarCambiosProforma) {
				//iUltimaColumna++;
			}	
		}
		
		//PERMITE EDITAR SIMPLE
		//iUltimaColumna++;	
		
				
		if(this.conFuncionalidadRelaciones) {
			if(this.conMaximoRelaciones && this.proformaSessionBean.getConGuardarRelaciones()) {			
				//PERMITE EDITAR RELACIONES
				iUltimaColumna++;//2
			}
		}
		
		//MOVIA SELECCIONAR
		//iUltimaColumna++;
		
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarProforma && this.isPermisoGuardarCambiosProforma) {
				////REUBICA ELIMINAR SIMPLE
				//jTableDatosProforma.moveColumn(this.jTableDatosProforma.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3
					
				//iUltimaColumna--;
			}
		}
		//REUBICA EDITAR SIMPLE
		//jTableDatosProforma.moveColumn(this.jTableDatosProforma.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3				
		
		
		if(this.conFuncionalidadRelaciones) {
			if(this.conMaximoRelaciones && this.proformaSessionBean.getConGuardarRelaciones()) {	
				if(iUltimaColumna>1) {
					iUltimaColumna--;
				}
				
				//iNuevaPosicionColumna++;
				
				//REUBICA EDITAR RELACIONES
				jTableDatosProforma.moveColumn(this.jTableDatosProforma.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1
			}
		}
		
		
		//REUBICABA SELECCIONAR
		/*
		if(iUltimaColumna>1) {
			iUltimaColumna--;
		}
		
		//iNuevaPosicionColumna++;
			
		//REUBICA SELECCIONAR FILA CHECK
		jTableDatosProforma.moveColumn(this.jTableDatosProforma.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1		
		*/
		
		//DEFINEN HEADERS
		final TableCellRenderer tableHeaderDefaultCellRenderer = this.jTableDatosProforma.getTableHeader().getDefaultRenderer();
		
		this.jTableDatosProforma.getTableHeader().setDefaultRenderer(new TableCellRendererHeader(this.jTableDatosProforma,tableHeaderDefaultCellRenderer));
	    
		TableColumn column=null;
		
		if(!ProformaJInternalFrame.ISBINDING_MANUAL_TABLA) {
			for(int i = 0; i < this.jTableDatosProforma.getColumnModel().getColumnCount(); i++) { 
				column = this.jTableDatosProforma.getColumnModel().getColumn(i); 
				
				if(column.getIdentifier()!=null) {
					//SI SE UTILIZA UN HEADER ES GENERICO
					//column.setHeaderRenderer(new HeaderRenderer(column.getIdentifier().toString()));
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_ELI)) {
					continue;
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_SELECCIONAR)) {
					if(!ProformaJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(50); 	 
						column.setWidth(50); 	 
						column.setMinWidth(50); 	
						column.setMaxWidth(50); 
						
						this.iWidthTableDefinicion+=50;
					}
					
				} else {
					if(!ProformaJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						column.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						
						this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
					}
				}
			}
		}
		
		this.jTableDatosProforma.setSelectionBackground(FuncionesSwing.getColorSelectedBackground());
		this.jTableDatosProforma.setSelectionForeground(FuncionesSwing.getColorSelectedForeground());
		
		/*
		this.jTableDatosProforma.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
			private static final long serialVersionUID = 1L;
			
		    @Override
		    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
		        final Component component= super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
		        //POR DEFECTO ES MEJOR, SE PIERDE DATOS AL SELECCIONAR BLANCO LETRAS BLANCAS
				component.setBackground(row % 2 == 0 ? FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR) : Funciones2.getColorFilaTabla2()); //FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR)
				component.setForeground(Funciones2.getColorTextoFilaTabla1());
				
				try {
		        	int iSize=-999;
		        	
		        	if(conTotales) {
						//FILA TOTALES OTRO COLOR, SI TABLA NO ES UNO A UNO
			        	if(Constantes.ISUSAEJBLOGICLAYER) {
							iSize=proformaLogic.getProformas().size()-1;
								
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							iSize=proformas.size()-1;
						}
						
						if(iSize==row) {
							component.setBackground(Funciones2.getColorFilaTablaTotales());
						}
		        	}
					
					//POR EFICIENCIA NO UTILIZAR					
					//if (component instanceof JComponent) {
		            //    JComponent jcomponent = (JComponent) component;		                 		                
		        	//}				
					
				} catch (Exception e) {
					e.printStackTrace();
				}
				
		        return component;
		    }
		});
		*/
		
		//ESTA EN LA DEFINICION DE LA TABLA
		//this.jTableDatosProforma.setRowHeight(Constantes.ISWING_ALTO_FILA_TABLA);
		
		/*
		column=this.jTableDatosProforma.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSistema,Constantes2.S_SELECCIONAR));
		
		if(column!=null) {
			column.setPreferredWidth(25); 	 
			column.setWidth(25); 	 
			column.setMinWidth(25); 	
		}
		*/
			
			//CopyTableToTableTotal();
		} else {
			
			this.actualizarVisualTableDatosProforma();
			
		}
	}
	
	/*
	//COPY_TABLES
	/* FALTARIA RESOLVER:
	   1 SOLO SCROLL PARA 2 TABLAS
	   COPIA EXACTA DE COLUMNAS DE UNA TABLA A OTRA, SI SE MODIFICA TAMANIO TAMBIEN LA OTRA
	*/
	
	public void jButtonIdActionPerformed(ActionEvent evt,int rowIndex,Boolean esRelaciones,Boolean esEliminar) { 
		try {
			if(!esEliminar) {
				this.estaModoSeleccionar=true;
				
				//this.isEsNuevoProforma=false;
					
				ProformaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.proforma,new Object(),this.proformaParameterGeneral,this.proformaReturnGeneral);
			
				if(this.proformaSessionBean.getConGuardarRelaciones()) {
					this.dStart=(double)System.currentTimeMillis();
				}
				
				if(this.jInternalFrameDetalleFormProforma==null) {
					this.inicializarFormDetalle();
				}
				
				this.inicializarInvalidValues();
				
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosProforma.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosProforma.getSelectedRow();	       
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proforma =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.proforma =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//PUEDE SER PARA DUPLICADO O NUEVO TABLA
				
				if(this.proforma.getsType().equals("DUPLICADO")
				   || this.proforma.getsType().equals("NUEVO_GUARDAR_CAMBIOS")) {
					
					this.isEsNuevoProforma=true;
				
				} else {
					this.isEsNuevoProforma=false;	
				}
				
				//CONTROL VERSION ANTERIOR
				/*
				if(!this.proformaSessionBean.getEsGuardarRelacionado()) {
					if(this.proforma.getId()>=0 && !this.proforma.getIsNew()) {						
						this.isEsNuevoProforma=false;
						
					} else {
						this.isEsNuevoProforma=true;
					}
					
				} else {
					//CONTROLAR PARA RELACIONADO
				}
				*/
				
				//ESTABLECE SI ES RELACIONADO O NO 
				this.habilitarDeshabilitarTipoMantenimientoProforma(esRelaciones);						
				
				this.seleccionarProforma(evt,null,rowIndex);
				
				//SELECCIONA ACTUAL PERO AUN NO SE HA INGRESADO AL SISTEMA
				//SE DESHABILITA POR GUARDAR CAMBIOS
				/*
				if(this.proforma.getId()<0) {
					this.isEsNuevoProforma=true;
				}
				*/
				
				if(!this.esParaBusquedaForeignKey) {
					this.modificarProforma(evt,rowIndex,esRelaciones);
				} else {
					this.seleccionarProforma(evt,rowIndex);
				}	
				
				if(this.proformaSessionBean.getConGuardarRelaciones()) {
					this.dEnd=(double)System.currentTimeMillis();					
					this.dDif=this.dEnd - this.dStart;
					
					if(Constantes.ISDEVELOPING) {
						System.out.println("Tiempo(ms) Seleccion Proforma: " + this.dDif); 
					}
				}								
				
				ProformaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.proforma,new Object(),this.proformaParameterGeneral,this.proformaReturnGeneral);
				
			} else {
				this.estaModoEliminarGuardarCambios=true;
				
				this.seleccionarProforma(evt,null,rowIndex);
				
				if(this.permiteMantenimiento(this.proforma)) {
					if(this.proforma.getId()>0) {
						this.proforma.setIsDeleted(true);
						
						this.proformasEliminados.add(this.proforma);
					}
					
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.proformaLogic.getProformas().remove(this.proforma);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.proformas.remove(this.proforma);				
					}
					
					
					((ProformaModel) this.jTableDatosProforma.getModel()).fireTableRowsDeleted(rowIndex,rowIndex);
					
					this.actualizarFilaTotales();
					
					this.inicializarActualizarBindingTablaProforma(false);					
				}								
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException2(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoSeleccionar=false;				
			this.estaModoEliminarGuardarCambios=false;
		}
	}
	
	
	public void seleccionarProforma(ActionEvent evt,javax.swing.event.ListSelectionEvent evt2,int rowIndex) throws Exception { 
		try {
			//SI PUEDE SER NUEVO Y SELECCIONAR (PARA DUPLICAR Y NUEVO TABLA)
			//if(!this.isEsNuevoProforma) {
			
			if(this.jInternalFrameDetalleFormProforma==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosProforma.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosProforma.getSelectedRow();	       
				}
				
				//CUANDO SE RECARGA TABLA TAMBIEN SE SELECCIONA PERO CON -1 POR LO QUE SE NECESITA VALIDAR ANTES
				if(intSelectedRow<0) {
					return;
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proforma =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.proforma =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
				}
				
				if(ProformaJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesObjetoActualToFormularioProforma(this.proforma);
				}
				
				//ARCHITECTURE
				try {
					

					//Empresa
					if(!this.proformaConstantesFunciones.cargarid_empresaProforma || this.proformaConstantesFunciones.event_dependid_empresaProforma) {
						//this.cargarCombosEmpresasForeignKeyLista(" where id="+this.proforma.getid_empresa());
									//this.inicializarActualizarBindingProforma(false,false);
						this.empresasForeignKey=new ArrayList<Empresa>();

						if(proforma.getEmpresa()!=null) {
							this.empresasForeignKey.add(proforma.getEmpresa());
						}

						this.addItemDefectoCombosForeignKeyEmpresa();
						this.cargarCombosFrameEmpresasForeignKey("Todos");
					}
					this.setActualEmpresaForeignKey(this.proforma.getid_empresa(),false,"Formulario");

					//Sucursal
					if(!this.proformaConstantesFunciones.cargarid_sucursalProforma || this.proformaConstantesFunciones.event_dependid_sucursalProforma) {
						//this.cargarCombosSucursalsForeignKeyLista(" where id="+this.proforma.getid_sucursal());
									//this.inicializarActualizarBindingProforma(false,false);
						this.sucursalsForeignKey=new ArrayList<Sucursal>();

						if(proforma.getSucursal()!=null) {
							this.sucursalsForeignKey.add(proforma.getSucursal());
						}

						this.addItemDefectoCombosForeignKeySucursal();
						this.cargarCombosFrameSucursalsForeignKey("Todos");
					}
					this.setActualSucursalForeignKey(this.proforma.getid_sucursal(),false,"Formulario");

					//Usuario
					if(!this.proformaConstantesFunciones.cargarid_usuarioProforma || this.proformaConstantesFunciones.event_dependid_usuarioProforma) {
						//this.cargarCombosUsuariosForeignKeyLista(" where id="+this.proforma.getid_usuario());
									//this.inicializarActualizarBindingProforma(false,false);
						this.usuariosForeignKey=new ArrayList<Usuario>();

						if(proforma.getUsuario()!=null) {
							this.usuariosForeignKey.add(proforma.getUsuario());
						}

						this.addItemDefectoCombosForeignKeyUsuario();
						this.cargarCombosFrameUsuariosForeignKey("Todos");
					}
					this.setActualUsuarioForeignKey(this.proforma.getid_usuario(),false,"Formulario");

					//Ejercicio
					if(!this.proformaConstantesFunciones.cargarid_ejercicioProforma || this.proformaConstantesFunciones.event_dependid_ejercicioProforma) {
						//this.cargarCombosEjerciciosForeignKeyLista(" where id="+this.proforma.getid_ejercicio());
									//this.inicializarActualizarBindingProforma(false,false);
						this.ejerciciosForeignKey=new ArrayList<Ejercicio>();

						if(proforma.getEjercicio()!=null) {
							this.ejerciciosForeignKey.add(proforma.getEjercicio());
						}

						this.addItemDefectoCombosForeignKeyEjercicio();
						this.cargarCombosFrameEjerciciosForeignKey("Todos");
					}
					this.setActualEjercicioForeignKey(this.proforma.getid_ejercicio(),false,"Formulario");

					//Periodo
					if(!this.proformaConstantesFunciones.cargarid_periodoProforma || this.proformaConstantesFunciones.event_dependid_periodoProforma) {
						//this.cargarCombosPeriodosForeignKeyLista(" where id="+this.proforma.getid_periodo());
									//this.inicializarActualizarBindingProforma(false,false);
						this.periodosForeignKey=new ArrayList<Periodo>();

						if(proforma.getPeriodo()!=null) {
							this.periodosForeignKey.add(proforma.getPeriodo());
						}

						this.addItemDefectoCombosForeignKeyPeriodo();
						this.cargarCombosFramePeriodosForeignKey("Todos");
					}
					this.setActualPeriodoForeignKey(this.proforma.getid_periodo(),false,"Formulario");

					//Anio
					if(!this.proformaConstantesFunciones.cargarid_anioProforma || this.proformaConstantesFunciones.event_dependid_anioProforma) {
						//this.cargarCombosAniosForeignKeyLista(" where id="+this.proforma.getid_anio());
									//this.inicializarActualizarBindingProforma(false,false);
						this.aniosForeignKey=new ArrayList<Anio>();

						if(proforma.getAnio()!=null) {
							this.aniosForeignKey.add(proforma.getAnio());
						}

						this.addItemDefectoCombosForeignKeyAnio();
						this.cargarCombosFrameAniosForeignKey("Todos");
					}
					this.setActualAnioForeignKey(this.proforma.getid_anio(),false,"Formulario");

					//Mes
					if(!this.proformaConstantesFunciones.cargarid_mesProforma || this.proformaConstantesFunciones.event_dependid_mesProforma) {
						//this.cargarCombosMessForeignKeyLista(" where id="+this.proforma.getid_mes());
									//this.inicializarActualizarBindingProforma(false,false);
						this.messForeignKey=new ArrayList<Mes>();

						if(proforma.getMes()!=null) {
							this.messForeignKey.add(proforma.getMes());
						}

						this.addItemDefectoCombosForeignKeyMes();
						this.cargarCombosFrameMessForeignKey("Todos");
					}
					this.setActualMesForeignKey(this.proforma.getid_mes(),false,"Formulario");

					//Moneda
					if(!this.proformaConstantesFunciones.cargarid_monedaProforma || this.proformaConstantesFunciones.event_dependid_monedaProforma) {
						//this.cargarCombosMonedasForeignKeyLista(" where id="+this.proforma.getid_moneda());
									//this.inicializarActualizarBindingProforma(false,false);
						this.monedasForeignKey=new ArrayList<Moneda>();

						if(proforma.getMoneda()!=null) {
							this.monedasForeignKey.add(proforma.getMoneda());
						}

						this.addItemDefectoCombosForeignKeyMoneda();
						this.cargarCombosFrameMonedasForeignKey("Todos");
					}
					this.setActualMonedaForeignKey(this.proforma.getid_moneda(),false,"Formulario");

					//Empleado
					if(!this.proformaConstantesFunciones.cargarid_empleadoProforma || this.proformaConstantesFunciones.event_dependid_empleadoProforma) {
						//this.cargarCombosEmpleadosForeignKeyLista(" where id="+this.proforma.getid_empleado());
									//this.inicializarActualizarBindingProforma(false,false);
						this.empleadosForeignKey=new ArrayList<Empleado>();

						if(proforma.getEmpleado()!=null) {
							this.empleadosForeignKey.add(proforma.getEmpleado());
						}

						this.addItemDefectoCombosForeignKeyEmpleado();
						this.cargarCombosFrameEmpleadosForeignKey("Todos");
					}
					this.setActualEmpleadoForeignKey(this.proforma.getid_empleado(),false,"Formulario");

					//Formato
					if(!this.proformaConstantesFunciones.cargarid_formatoProforma || this.proformaConstantesFunciones.event_dependid_formatoProforma) {
						//this.cargarCombosFormatosForeignKeyLista(" where id="+this.proforma.getid_formato());
									//this.inicializarActualizarBindingProforma(false,false);
						this.formatosForeignKey=new ArrayList<Formato>();

						if(proforma.getFormato()!=null) {
							this.formatosForeignKey.add(proforma.getFormato());
						}

						this.addItemDefectoCombosForeignKeyFormato();
						this.cargarCombosFrameFormatosForeignKey("Todos");
					}
					this.setActualFormatoForeignKey(this.proforma.getid_formato(),false,"Formulario");

					//EstadoProforma
					if(!this.proformaConstantesFunciones.cargarid_estado_proformaProforma || this.proformaConstantesFunciones.event_dependid_estado_proformaProforma) {
						//this.cargarCombosEstadoProformasForeignKeyLista(" where id="+this.proforma.getid_estado_proforma());
									//this.inicializarActualizarBindingProforma(false,false);
						this.estadoproformasForeignKey=new ArrayList<EstadoProforma>();

						if(proforma.getEstadoProforma()!=null) {
							this.estadoproformasForeignKey.add(proforma.getEstadoProforma());
						}

						this.addItemDefectoCombosForeignKeyEstadoProforma();
						this.cargarCombosFrameEstadoProformasForeignKey("Todos");
					}
					this.setActualEstadoProformaForeignKey(this.proforma.getid_estado_proforma(),false,"Formulario");

					//Cliente
					if(!this.proformaConstantesFunciones.cargarid_clienteProforma || this.proformaConstantesFunciones.event_dependid_clienteProforma) {
						//this.cargarCombosClientesForeignKeyLista(" where id="+this.proforma.getid_cliente());
									//this.inicializarActualizarBindingProforma(false,false);
						this.clientesForeignKey=new ArrayList<Cliente>();

						if(proforma.getCliente()!=null) {
							this.clientesForeignKey.add(proforma.getCliente());
						}

						this.addItemDefectoCombosForeignKeyCliente();
						this.cargarCombosFrameClientesForeignKey("Todos");
					}
					this.setActualClienteForeignKey(this.proforma.getid_cliente(),false,"Formulario");

					//TipoPrecio
					if(!this.proformaConstantesFunciones.cargarid_tipo_precioProforma || this.proformaConstantesFunciones.event_dependid_tipo_precioProforma) {
						//this.cargarCombosTipoPreciosForeignKeyLista(" where id="+this.proforma.getid_tipo_precio());
									//this.inicializarActualizarBindingProforma(false,false);
						this.tipopreciosForeignKey=new ArrayList<TipoPrecio>();

						if(proforma.getTipoPrecio()!=null) {
							this.tipopreciosForeignKey.add(proforma.getTipoPrecio());
						}

						this.addItemDefectoCombosForeignKeyTipoPrecio();
						this.cargarCombosFrameTipoPreciosForeignKey("Todos");
					}
					this.setActualTipoPrecioForeignKey(this.proforma.getid_tipo_precio(),false,"Formulario");

					//Vendedor
					if(!this.proformaConstantesFunciones.cargarid_vendedorProforma || this.proformaConstantesFunciones.event_dependid_vendedorProforma) {
						//this.cargarCombosVendedorsForeignKeyLista(" where id="+this.proforma.getid_vendedor());
									//this.inicializarActualizarBindingProforma(false,false);
						this.vendedorsForeignKey=new ArrayList<Vendedor>();

						if(proforma.getVendedor()!=null) {
							this.vendedorsForeignKey.add(proforma.getVendedor());
						}

						this.addItemDefectoCombosForeignKeyVendedor();
						this.cargarCombosFrameVendedorsForeignKey("Todos");
					}
					this.setActualVendedorForeignKey(this.proforma.getid_vendedor(),false,"Formulario");

					//SubCliente
					if(!this.proformaConstantesFunciones.cargarid_sub_clienteProforma || this.proformaConstantesFunciones.event_dependid_sub_clienteProforma) {
						//this.cargarCombosSubClientesForeignKeyLista(" where id="+this.proforma.getid_sub_cliente());
									//this.inicializarActualizarBindingProforma(false,false);
						this.subclientesForeignKey=new ArrayList<SubCliente>();

						if(proforma.getSubCliente()!=null) {
							this.subclientesForeignKey.add(proforma.getSubCliente());
						}

						this.addItemDefectoCombosForeignKeySubCliente();
						this.cargarCombosFrameSubClientesForeignKey("Todos");
					}
					this.setActualSubClienteForeignKey(this.proforma.getid_sub_cliente(),false,"Formulario");

					//TipoViaTransporte
					if(!this.proformaConstantesFunciones.cargarid_tipo_via_transporteProforma || this.proformaConstantesFunciones.event_dependid_tipo_via_transporteProforma) {
						//this.cargarCombosTipoViaTransportesForeignKeyLista(" where id="+this.proforma.getid_tipo_via_transporte());
									//this.inicializarActualizarBindingProforma(false,false);
						this.tipoviatransportesForeignKey=new ArrayList<TipoViaTransporte>();

						if(proforma.getTipoViaTransporte()!=null) {
							this.tipoviatransportesForeignKey.add(proforma.getTipoViaTransporte());
						}

						this.addItemDefectoCombosForeignKeyTipoViaTransporte();
						this.cargarCombosFrameTipoViaTransportesForeignKey("Todos");
					}
					this.setActualTipoViaTransporteForeignKey(this.proforma.getid_tipo_via_transporte(),false,"Formulario");

					//Transporte
					if(!this.proformaConstantesFunciones.cargarid_transporteProforma || this.proformaConstantesFunciones.event_dependid_transporteProforma) {
						//this.cargarCombosTransportesForeignKeyLista(" where id="+this.proforma.getid_transporte());
									//this.inicializarActualizarBindingProforma(false,false);
						this.transportesForeignKey=new ArrayList<Transporte>();

						if(proforma.getTransporte()!=null) {
							this.transportesForeignKey.add(proforma.getTransporte());
						}

						this.addItemDefectoCombosForeignKeyTransporte();
						this.cargarCombosFrameTransportesForeignKey("Todos");
					}
					this.setActualTransporteForeignKey(this.proforma.getid_transporte(),false,"Formulario");

					//RutaTransporte
					if(!this.proformaConstantesFunciones.cargarid_ruta_transporteProforma || this.proformaConstantesFunciones.event_dependid_ruta_transporteProforma) {
						//this.cargarCombosRutaTransportesForeignKeyLista(" where id="+this.proforma.getid_ruta_transporte());
									//this.inicializarActualizarBindingProforma(false,false);
						this.rutatransportesForeignKey=new ArrayList<RutaTransporte>();

						if(proforma.getRutaTransporte()!=null) {
							this.rutatransportesForeignKey.add(proforma.getRutaTransporte());
						}

						this.addItemDefectoCombosForeignKeyRutaTransporte();
						this.cargarCombosFrameRutaTransportesForeignKey("Todos");
					}
					this.setActualRutaTransporteForeignKey(this.proforma.getid_ruta_transporte(),false,"Formulario");

					//CentroCosto
					if(!this.proformaConstantesFunciones.cargarid_centro_costoProforma || this.proformaConstantesFunciones.event_dependid_centro_costoProforma) {
						//this.cargarCombosCentroCostosForeignKeyLista(" where id="+this.proforma.getid_centro_costo());
									//this.inicializarActualizarBindingProforma(false,false);
						this.centrocostosForeignKey=new ArrayList<CentroCosto>();

						if(proforma.getCentroCosto()!=null) {
							this.centrocostosForeignKey.add(proforma.getCentroCosto());
						}

						this.addItemDefectoCombosForeignKeyCentroCosto();
						this.cargarCombosFrameCentroCostosForeignKey("Todos");
					}
					this.setActualCentroCostoForeignKey(this.proforma.getid_centro_costo(),false,"Formulario");

					//TipoProforma
					if(!this.proformaConstantesFunciones.cargarid_tipo_proformaProforma || this.proformaConstantesFunciones.event_dependid_tipo_proformaProforma) {
						//this.cargarCombosTipoProformasForeignKeyLista(" where id="+this.proforma.getid_tipo_proforma());
									//this.inicializarActualizarBindingProforma(false,false);
						this.tipoproformasForeignKey=new ArrayList<TipoProforma>();

						if(proforma.getTipoProforma()!=null) {
							this.tipoproformasForeignKey.add(proforma.getTipoProforma());
						}

						this.addItemDefectoCombosForeignKeyTipoProforma();
						this.cargarCombosFrameTipoProformasForeignKey("Todos");
					}
					this.setActualTipoProformaForeignKey(this.proforma.getid_tipo_proforma(),false,"Formulario");

					//Consignatario
					if(!this.proformaConstantesFunciones.cargarid_consignatarioProforma || this.proformaConstantesFunciones.event_dependid_consignatarioProforma) {
						//this.cargarCombosConsignatariosForeignKeyLista(" where id="+this.proforma.getid_consignatario());
									//this.inicializarActualizarBindingProforma(false,false);
						this.consignatariosForeignKey=new ArrayList<Consignatario>();

						if(proforma.getConsignatario()!=null) {
							this.consignatariosForeignKey.add(proforma.getConsignatario());
						}

						this.addItemDefectoCombosForeignKeyConsignatario();
						this.cargarCombosFrameConsignatariosForeignKey("Todos");
					}
					this.setActualConsignatarioForeignKey(this.proforma.getid_consignatario(),false,"Formulario");

					//TipoCambio
					if(!this.proformaConstantesFunciones.cargarid_tipo_cambioProforma || this.proformaConstantesFunciones.event_dependid_tipo_cambioProforma) {
						//this.cargarCombosTipoCambiosForeignKeyLista(" where id="+this.proforma.getid_tipo_cambio());
									//this.inicializarActualizarBindingProforma(false,false);
						this.tipocambiosForeignKey=new ArrayList<TipoCambio>();

						if(proforma.getTipoCambio()!=null) {
							this.tipocambiosForeignKey.add(proforma.getTipoCambio());
						}

						this.addItemDefectoCombosForeignKeyTipoCambio();
						this.cargarCombosFrameTipoCambiosForeignKey("Todos");
					}
					this.setActualTipoCambioForeignKey(this.proforma.getid_tipo_cambio(),false,"Formulario");
				} catch(Exception e) {
					throw e;
				}
				
				this.actualizarEstadoCeldasBotonesProforma("s", this.isGuardarCambiosEnLote, this.isEsMantenimientoRelacionado);
				
				//NO FUNCIONA BINDING PERO SE MANTIENE
				this.inicializarActualizarBindingBotonesProforma(false) ;
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualProforma() ;
			//}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesObjetoActualToFormularioTodoProforma(Proforma proforma) throws Exception { 
		this.setVariablesObjetoActualToFormularioTodoProforma(proforma,false,"NINGUNO");
	}
	
	public void setVariablesObjetoActualToFormularioTodoProforma(Proforma proforma,Boolean conCargarListasDesdeObjetoActual,String sTipoEvento) throws Exception { 
		this.setVariablesObjetoActualToFormularioProforma(proforma);
		
		if(conCargarListasDesdeObjetoActual) {
			this.setVariablesObjetoActualToListasForeignKeyProforma(proforma,sTipoEvento);
		}
		
		this.setVariablesObjetoActualToFormularioForeignKeyProforma(proforma);
	}
	
	public void setVariablesObjetoActualToFormularioProforma(Proforma proforma) throws Exception { 
		try {			
			Image imageActual=null;
			ImageIcon imageIcon = null;
			
			if(this.jInternalFrameDetalleFormProforma==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			
			this.jInternalFrameDetalleFormProforma.jLabelidProforma.setText(proforma.getId().toString());
			this.jInternalFrameDetalleFormProforma.jTextFieldnumero_pre_impresoProforma.setText(proforma.getnumero_pre_impreso());
			this.jInternalFrameDetalleFormProforma.jDateChooserfecha_emisionProforma.setDate(proforma.getfecha_emision());
			this.jInternalFrameDetalleFormProforma.jTextFielddiasProforma.setText(proforma.getdias().toString());
			this.jInternalFrameDetalleFormProforma.jDateChooserfecha_vencimientoProforma.setDate(proforma.getfecha_vencimiento());
			this.jInternalFrameDetalleFormProforma.jTextFieldcotizacionProforma.setText(proforma.getcotizacion().toString());
			this.jInternalFrameDetalleFormProforma.jTextAreadireccionProforma.setText(proforma.getdireccion());
			this.jInternalFrameDetalleFormProforma.jTextFieldrucProforma.setText(proforma.getruc());
			this.jInternalFrameDetalleFormProforma.jCheckBoxes_ofertaProforma.setSelected(proforma.getes_oferta());
			this.jInternalFrameDetalleFormProforma.jTextFieldtelefonoProforma.setText(proforma.gettelefono());
			this.jInternalFrameDetalleFormProforma.jTextAreadescripcionProforma.setText(proforma.getdescripcion());
			this.jInternalFrameDetalleFormProforma.jTextFielddescuento_porcentajeProforma.setText(proforma.getdescuento_porcentaje().toString());
			this.jInternalFrameDetalleFormProforma.jTextFieldmonto_con_ivaProforma.setText(proforma.getmonto_con_iva().toString());
			this.jInternalFrameDetalleFormProforma.jTextFieldsumanProforma.setText(proforma.getsuman().toString());
			this.jInternalFrameDetalleFormProforma.jTextFielddescuento_valorProforma.setText(proforma.getdescuento_valor().toString());
			this.jInternalFrameDetalleFormProforma.jTextFieldmonto_sin_ivaProforma.setText(proforma.getmonto_sin_iva().toString());
			this.jInternalFrameDetalleFormProforma.jTextFielddescuento_generalProforma.setText(proforma.getdescuento_general().toString());
			this.jInternalFrameDetalleFormProforma.jTextFieldfleteProforma.setText(proforma.getflete().toString());
			this.jInternalFrameDetalleFormProforma.jTextFieldultimo_costoProforma.setText(proforma.getultimo_costo().toString());
			this.jInternalFrameDetalleFormProforma.jTextFieldsubtotalProforma.setText(proforma.getsubtotal().toString());
			this.jInternalFrameDetalleFormProforma.jTextFieldotros_cargosProforma.setText(proforma.getotros_cargos().toString());
			this.jInternalFrameDetalleFormProforma.jTextFieldmargen_utilidadProforma.setText(proforma.getmargen_utilidad().toString());
			this.jInternalFrameDetalleFormProforma.jTextFieldivaProforma.setText(proforma.getiva().toString());
			this.jInternalFrameDetalleFormProforma.jTextFieldfinanciamientoProforma.setText(proforma.getfinanciamiento().toString());
			this.jInternalFrameDetalleFormProforma.jTextFieldtotalProforma.setText(proforma.gettotal().toString());
			this.jInternalFrameDetalleFormProforma.jTextFieldotros_valoresProforma.setText(proforma.getotros_valores().toString());
			this.jInternalFrameDetalleFormProforma.jTextFieldanticipoProforma.setText(proforma.getanticipo().toString());
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
		}
	}
		
	public void actualizarInformacion(String sTipo,Proforma proformaLocal) throws Exception {
		this.actualizarInformacion(sTipo,false,proformaLocal);
	}	
	
	public void actualizarInformacion(String sTipo,Boolean conParametroObjeto,Proforma proformaLocal) throws Exception {
		
		if(!conParametroObjeto) {
			if(!this.getEsControlTabla()) {
				proformaLocal=this.proforma;
			} else {
				proformaLocal=this.proformaAnterior;
			}
		}
		
		if(this.permiteMantenimiento(proformaLocal)) {
			if(sTipo.equals("EVENTO_CONTROL")) { // || sTipo.equals("EVENTO_NUEVO")
				if(!this.esControlTabla) {
					this.setVariablesFormularioToObjetoActualTodoProforma(proformaLocal,true);
					
					if(proformaSessionBean.getConGuardarRelaciones()) {
						this.actualizarRelaciones(proformaLocal);
					}
				}
			
			} else if(sTipo.equals("INFO_PADRE")) {
				
				if(this.proformaSessionBean.getEsGuardarRelacionado()) {
					this.actualizarRelacionFkPadreActual(proformaLocal);
				}
			}
		}
	}
	
	public void setVariablesFormularioToObjetoActualTodoProforma(Proforma proforma,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualProforma(proforma,conColumnasBase);
		this.setVariablesFormularioToObjetoActualForeignKeysProforma(proforma);
	}
	
	public void setVariablesFormularioToObjetoActualProforma(Proforma proforma,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualProforma(proforma,conColumnasBase,true);
	}
	
	public void setVariablesFormularioToObjetoActualProforma(Proforma proforma,Boolean conColumnasBase,Boolean conInicializarInvalidValues) throws Exception { 
		String sMensajeCampoActual="";
		Boolean estaValidado=true;
		try {
			
			if(this.jInternalFrameDetalleFormProforma==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			if(conInicializarInvalidValues) {
				this.inicializarInvalidValues();
			}
			
			

		try {
			if(this.jInternalFrameDetalleFormProforma.jLabelidProforma.getText()==null || this.jInternalFrameDetalleFormProforma.jLabelidProforma.getText()=="" || this.jInternalFrameDetalleFormProforma.jLabelidProforma.getText()=="Id") {
				this.jInternalFrameDetalleFormProforma.jLabelidProforma.setText("0");
			}

			if(conColumnasBase) {proforma.setId(Long.parseLong(this.jInternalFrameDetalleFormProforma.jLabelidProforma.getText()));}
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProformaConstantesFunciones.LABEL_ID+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProforma.jLabelIdProforma,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			proforma.setnumero_pre_impreso(this.jInternalFrameDetalleFormProforma.jTextFieldnumero_pre_impresoProforma.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProformaConstantesFunciones.LABEL_NUMEROPREIMPRESO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProforma.jLabelnumero_pre_impresoProforma,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			proforma.setfecha_emision(this.jInternalFrameDetalleFormProforma.jDateChooserfecha_emisionProforma.getDate());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProformaConstantesFunciones.LABEL_FECHAEMISION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProforma.jLabelfecha_emisionProforma,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			proforma.setdias(Integer.parseInt(this.jInternalFrameDetalleFormProforma.jTextFielddiasProforma.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProformaConstantesFunciones.LABEL_DIAS+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProforma.jLabeldiasProforma,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			proforma.setfecha_vencimiento(this.jInternalFrameDetalleFormProforma.jDateChooserfecha_vencimientoProforma.getDate());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProformaConstantesFunciones.LABEL_FECHAVENCIMIENTO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProforma.jLabelfecha_vencimientoProforma,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			proforma.setcotizacion(Double.parseDouble(this.jInternalFrameDetalleFormProforma.jTextFieldcotizacionProforma.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProformaConstantesFunciones.LABEL_COTIZACION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProforma.jLabelcotizacionProforma,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			proforma.setdireccion(this.jInternalFrameDetalleFormProforma.jTextAreadireccionProforma.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProformaConstantesFunciones.LABEL_DIRECCION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProforma.jLabeldireccionProforma,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			proforma.setruc(this.jInternalFrameDetalleFormProforma.jTextFieldrucProforma.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProformaConstantesFunciones.LABEL_RUC+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProforma.jLabelrucProforma,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			proforma.setes_oferta(this.jInternalFrameDetalleFormProforma.jCheckBoxes_ofertaProforma.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProformaConstantesFunciones.LABEL_ESOFERTA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProforma.jLabeles_ofertaProforma,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			proforma.settelefono(this.jInternalFrameDetalleFormProforma.jTextFieldtelefonoProforma.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProformaConstantesFunciones.LABEL_TELEFONO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProforma.jLabeltelefonoProforma,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			proforma.setdescripcion(this.jInternalFrameDetalleFormProforma.jTextAreadescripcionProforma.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProformaConstantesFunciones.LABEL_DESCRIPCION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProforma.jLabeldescripcionProforma,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			proforma.setdescuento_porcentaje(Double.parseDouble(this.jInternalFrameDetalleFormProforma.jTextFielddescuento_porcentajeProforma.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProformaConstantesFunciones.LABEL_DESCUENTOPORCENTAJE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProforma.jLabeldescuento_porcentajeProforma,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			proforma.setmonto_con_iva(Double.parseDouble(this.jInternalFrameDetalleFormProforma.jTextFieldmonto_con_ivaProforma.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProformaConstantesFunciones.LABEL_MONTOCONIVA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProforma.jLabelmonto_con_ivaProforma,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			proforma.setsuman(Double.parseDouble(this.jInternalFrameDetalleFormProforma.jTextFieldsumanProforma.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProformaConstantesFunciones.LABEL_SUMAN+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProforma.jLabelsumanProforma,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			proforma.setdescuento_valor(Double.parseDouble(this.jInternalFrameDetalleFormProforma.jTextFielddescuento_valorProforma.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProformaConstantesFunciones.LABEL_DESCUENTOVALOR+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProforma.jLabeldescuento_valorProforma,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			proforma.setmonto_sin_iva(Double.parseDouble(this.jInternalFrameDetalleFormProforma.jTextFieldmonto_sin_ivaProforma.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProformaConstantesFunciones.LABEL_MONTOSINIVA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProforma.jLabelmonto_sin_ivaProforma,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			proforma.setdescuento_general(Double.parseDouble(this.jInternalFrameDetalleFormProforma.jTextFielddescuento_generalProforma.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProformaConstantesFunciones.LABEL_DESCUENTOGENERAL+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProforma.jLabeldescuento_generalProforma,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			proforma.setflete(Double.parseDouble(this.jInternalFrameDetalleFormProforma.jTextFieldfleteProforma.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProformaConstantesFunciones.LABEL_FLETE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProforma.jLabelfleteProforma,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			proforma.setultimo_costo(Double.parseDouble(this.jInternalFrameDetalleFormProforma.jTextFieldultimo_costoProforma.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProformaConstantesFunciones.LABEL_ULTIMOCOSTO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProforma.jLabelultimo_costoProforma,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			proforma.setsubtotal(Double.parseDouble(this.jInternalFrameDetalleFormProforma.jTextFieldsubtotalProforma.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProformaConstantesFunciones.LABEL_SUBTOTAL+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProforma.jLabelsubtotalProforma,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			proforma.setotros_cargos(Double.parseDouble(this.jInternalFrameDetalleFormProforma.jTextFieldotros_cargosProforma.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProformaConstantesFunciones.LABEL_OTROSCARGOS+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProforma.jLabelotros_cargosProforma,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			proforma.setmargen_utilidad(Double.parseDouble(this.jInternalFrameDetalleFormProforma.jTextFieldmargen_utilidadProforma.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProformaConstantesFunciones.LABEL_MARGENUTILIDAD+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProforma.jLabelmargen_utilidadProforma,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			proforma.setiva(Double.parseDouble(this.jInternalFrameDetalleFormProforma.jTextFieldivaProforma.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProformaConstantesFunciones.LABEL_IVA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProforma.jLabelivaProforma,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			proforma.setfinanciamiento(Double.parseDouble(this.jInternalFrameDetalleFormProforma.jTextFieldfinanciamientoProforma.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProformaConstantesFunciones.LABEL_FINANCIAMIENTO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProforma.jLabelfinanciamientoProforma,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			proforma.settotal(Double.parseDouble(this.jInternalFrameDetalleFormProforma.jTextFieldtotalProforma.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProformaConstantesFunciones.LABEL_TOTAL+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProforma.jLabeltotalProforma,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			proforma.setotros_valores(Double.parseDouble(this.jInternalFrameDetalleFormProforma.jTextFieldotros_valoresProforma.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProformaConstantesFunciones.LABEL_OTROSVALORES+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProforma.jLabelotros_valoresProforma,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			proforma.setanticipo(Double.parseDouble(this.jInternalFrameDetalleFormProforma.jTextFieldanticipoProforma.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ProformaConstantesFunciones.LABEL_ANTICIPO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormProforma.jLabelanticipoProforma,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}
			
			if(!estaValidado) {
				throw new Exception(sMensajeCampoActual);
			}
		} catch(NumberFormatException e) {
			throw new Exception(sMensajeCampoActual);
			//FuncionesSwing.manageException(this, e,logger,MovimientoInventarioConstantesFunciones.CLASSNAME);
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualProforma(Proforma proformaBean,Proforma proforma,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setCopiarVariablesObjetosProforma(Proforma proformaOrigen,Proforma proforma,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			if(conColumnasBase) {if(conDefault || (!conDefault && proformaOrigen.getId()!=null && !proformaOrigen.getId().equals(0L))) {proforma.setId(proformaOrigen.getId());}}
			if(conDefault || (!conDefault && proformaOrigen.getnumero_pre_impreso()!=null && !proformaOrigen.getnumero_pre_impreso().equals(""))) {proforma.setnumero_pre_impreso(proformaOrigen.getnumero_pre_impreso());}
			if(conDefault || (!conDefault && proformaOrigen.getfecha_emision()!=null && !proformaOrigen.getfecha_emision().equals(new Date()))) {proforma.setfecha_emision(proformaOrigen.getfecha_emision());}
			if(conDefault || (!conDefault && proformaOrigen.getdias()!=null && !proformaOrigen.getdias().equals(0))) {proforma.setdias(proformaOrigen.getdias());}
			if(conDefault || (!conDefault && proformaOrigen.getfecha_vencimiento()!=null && !proformaOrigen.getfecha_vencimiento().equals(new Date()))) {proforma.setfecha_vencimiento(proformaOrigen.getfecha_vencimiento());}
			if(conDefault || (!conDefault && proformaOrigen.getcotizacion()!=null && !proformaOrigen.getcotizacion().equals(0.0))) {proforma.setcotizacion(proformaOrigen.getcotizacion());}
			if(conDefault || (!conDefault && proformaOrigen.getdireccion()!=null && !proformaOrigen.getdireccion().equals(""))) {proforma.setdireccion(proformaOrigen.getdireccion());}
			if(conDefault || (!conDefault && proformaOrigen.getruc()!=null && !proformaOrigen.getruc().equals(""))) {proforma.setruc(proformaOrigen.getruc());}
			if(conDefault || (!conDefault && proformaOrigen.getes_oferta()!=null && !proformaOrigen.getes_oferta().equals(false))) {proforma.setes_oferta(proformaOrigen.getes_oferta());}
			if(conDefault || (!conDefault && proformaOrigen.gettelefono()!=null && !proformaOrigen.gettelefono().equals(""))) {proforma.settelefono(proformaOrigen.gettelefono());}
			if(conDefault || (!conDefault && proformaOrigen.getdescripcion()!=null && !proformaOrigen.getdescripcion().equals(""))) {proforma.setdescripcion(proformaOrigen.getdescripcion());}
			if(conDefault || (!conDefault && proformaOrigen.getdescuento_porcentaje()!=null && !proformaOrigen.getdescuento_porcentaje().equals(0.0))) {proforma.setdescuento_porcentaje(proformaOrigen.getdescuento_porcentaje());}
			if(conDefault || (!conDefault && proformaOrigen.getmonto_con_iva()!=null && !proformaOrigen.getmonto_con_iva().equals(0.0))) {proforma.setmonto_con_iva(proformaOrigen.getmonto_con_iva());}
			if(conDefault || (!conDefault && proformaOrigen.getsuman()!=null && !proformaOrigen.getsuman().equals(0.0))) {proforma.setsuman(proformaOrigen.getsuman());}
			if(conDefault || (!conDefault && proformaOrigen.getdescuento_valor()!=null && !proformaOrigen.getdescuento_valor().equals(0.0))) {proforma.setdescuento_valor(proformaOrigen.getdescuento_valor());}
			if(conDefault || (!conDefault && proformaOrigen.getmonto_sin_iva()!=null && !proformaOrigen.getmonto_sin_iva().equals(0.0))) {proforma.setmonto_sin_iva(proformaOrigen.getmonto_sin_iva());}
			if(conDefault || (!conDefault && proformaOrigen.getdescuento_general()!=null && !proformaOrigen.getdescuento_general().equals(0.0))) {proforma.setdescuento_general(proformaOrigen.getdescuento_general());}
			if(conDefault || (!conDefault && proformaOrigen.getflete()!=null && !proformaOrigen.getflete().equals(0.0))) {proforma.setflete(proformaOrigen.getflete());}
			if(conDefault || (!conDefault && proformaOrigen.getultimo_costo()!=null && !proformaOrigen.getultimo_costo().equals(0.0))) {proforma.setultimo_costo(proformaOrigen.getultimo_costo());}
			if(conDefault || (!conDefault && proformaOrigen.getsubtotal()!=null && !proformaOrigen.getsubtotal().equals(0.0))) {proforma.setsubtotal(proformaOrigen.getsubtotal());}
			if(conDefault || (!conDefault && proformaOrigen.getotros_cargos()!=null && !proformaOrigen.getotros_cargos().equals(0.0))) {proforma.setotros_cargos(proformaOrigen.getotros_cargos());}
			if(conDefault || (!conDefault && proformaOrigen.getmargen_utilidad()!=null && !proformaOrigen.getmargen_utilidad().equals(0.0))) {proforma.setmargen_utilidad(proformaOrigen.getmargen_utilidad());}
			if(conDefault || (!conDefault && proformaOrigen.getiva()!=null && !proformaOrigen.getiva().equals(0.0))) {proforma.setiva(proformaOrigen.getiva());}
			if(conDefault || (!conDefault && proformaOrigen.getfinanciamiento()!=null && !proformaOrigen.getfinanciamiento().equals(0.0))) {proforma.setfinanciamiento(proformaOrigen.getfinanciamiento());}
			if(conDefault || (!conDefault && proformaOrigen.gettotal()!=null && !proformaOrigen.gettotal().equals(0.0))) {proforma.settotal(proformaOrigen.gettotal());}
			if(conDefault || (!conDefault && proformaOrigen.getotros_valores()!=null && !proformaOrigen.getotros_valores().equals(0.0))) {proforma.setotros_valores(proformaOrigen.getotros_valores());}
			if(conDefault || (!conDefault && proformaOrigen.getanticipo()!=null && !proformaOrigen.getanticipo().equals(0.0))) {proforma.setanticipo(proformaOrigen.getanticipo());}
			if(conDefault || (!conDefault && proformaOrigen.getice()!=null && !proformaOrigen.getice().equals(0.0))) {proforma.setice(proformaOrigen.getice());}
			if(conDefault || (!conDefault && proformaOrigen.getmonto_retencion()!=null && !proformaOrigen.getmonto_retencion().equals(0.0))) {proforma.setmonto_retencion(proformaOrigen.getmonto_retencion());}
			if(conDefault || (!conDefault && proformaOrigen.getfecha()!=null && !proformaOrigen.getfecha().equals(new Date()))) {proforma.setfecha(proformaOrigen.getfecha());}
			if(conDefault || (!conDefault && proformaOrigen.getfecha_servidor()!=null && !proformaOrigen.getfecha_servidor().equals(new Date()))) {proforma.setfecha_servidor(proformaOrigen.getfecha_servidor());}
			if(conDefault || (!conDefault && proformaOrigen.gethora_inicio()!=null && !proformaOrigen.gethora_inicio().equals(new Time((new Date()).getTime())))) {proforma.sethora_inicio(proformaOrigen.gethora_inicio());}
			if(conDefault || (!conDefault && proformaOrigen.gethora_fin()!=null && !proformaOrigen.gethora_fin().equals(new Time((new Date()).getTime())))) {proforma.sethora_fin(proformaOrigen.gethora_fin());}
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
		}
	}
	
	/*
	public void setVariablesObjetoBeanActualToFormularioProforma(Proforma proforma) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormProforma.jLabelidProforma.setText(proforma.getId().toString());
			this.jInternalFrameDetalleFormProforma.jTextFieldnumero_pre_impresoProforma.setText(proforma.getnumero_pre_impreso());
			this.jInternalFrameDetalleFormProforma.jDateChooserfecha_emisionProforma.setDate(proforma.getfecha_emision());
			this.jInternalFrameDetalleFormProforma.jTextFielddiasProforma.setText(proforma.getdias().toString());
			this.jInternalFrameDetalleFormProforma.jDateChooserfecha_vencimientoProforma.setDate(proforma.getfecha_vencimiento());
			this.jInternalFrameDetalleFormProforma.jTextFieldcotizacionProforma.setText(proforma.getcotizacion().toString());
			this.jInternalFrameDetalleFormProforma.jTextAreadireccionProforma.setText(proforma.getdireccion());
			this.jInternalFrameDetalleFormProforma.jTextFieldrucProforma.setText(proforma.getruc());
			this.jInternalFrameDetalleFormProforma.jCheckBoxes_ofertaProforma.setSelected(proforma.getes_oferta());
			this.jInternalFrameDetalleFormProforma.jTextFieldtelefonoProforma.setText(proforma.gettelefono());
			this.jInternalFrameDetalleFormProforma.jTextAreadescripcionProforma.setText(proforma.getdescripcion());
			this.jInternalFrameDetalleFormProforma.jTextFielddescuento_porcentajeProforma.setText(proforma.getdescuento_porcentaje().toString());
			this.jInternalFrameDetalleFormProforma.jTextFieldmonto_con_ivaProforma.setText(proforma.getmonto_con_iva().toString());
			this.jInternalFrameDetalleFormProforma.jTextFieldsumanProforma.setText(proforma.getsuman().toString());
			this.jInternalFrameDetalleFormProforma.jTextFielddescuento_valorProforma.setText(proforma.getdescuento_valor().toString());
			this.jInternalFrameDetalleFormProforma.jTextFieldmonto_sin_ivaProforma.setText(proforma.getmonto_sin_iva().toString());
			this.jInternalFrameDetalleFormProforma.jTextFielddescuento_generalProforma.setText(proforma.getdescuento_general().toString());
			this.jInternalFrameDetalleFormProforma.jTextFieldfleteProforma.setText(proforma.getflete().toString());
			this.jInternalFrameDetalleFormProforma.jTextFieldultimo_costoProforma.setText(proforma.getultimo_costo().toString());
			this.jInternalFrameDetalleFormProforma.jTextFieldsubtotalProforma.setText(proforma.getsubtotal().toString());
			this.jInternalFrameDetalleFormProforma.jTextFieldotros_cargosProforma.setText(proforma.getotros_cargos().toString());
			this.jInternalFrameDetalleFormProforma.jTextFieldmargen_utilidadProforma.setText(proforma.getmargen_utilidad().toString());
			this.jInternalFrameDetalleFormProforma.jTextFieldivaProforma.setText(proforma.getiva().toString());
			this.jInternalFrameDetalleFormProforma.jTextFieldfinanciamientoProforma.setText(proforma.getfinanciamiento().toString());
			this.jInternalFrameDetalleFormProforma.jTextFieldtotalProforma.setText(proforma.gettotal().toString());
			this.jInternalFrameDetalleFormProforma.jTextFieldotros_valoresProforma.setText(proforma.getotros_valores().toString());
			this.jInternalFrameDetalleFormProforma.jTextFieldanticipoProforma.setText(proforma.getanticipo().toString());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoBeanActualToFormularioProforma(ProformaBean proformaBean) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormProforma.jLabelidProforma.setText(proformaBean.getId().toString());
			this.jInternalFrameDetalleFormProforma.jTextFieldnumero_pre_impresoProforma.setText(proformaBean.getnumero_pre_impreso());
			this.jInternalFrameDetalleFormProforma.jDateChooserfecha_emisionProforma.setDate(proformaBean.getfecha_emision());
			this.jInternalFrameDetalleFormProforma.jTextFielddiasProforma.setText(proformaBean.getdias().toString());
			this.jInternalFrameDetalleFormProforma.jDateChooserfecha_vencimientoProforma.setDate(proformaBean.getfecha_vencimiento());
			this.jInternalFrameDetalleFormProforma.jTextFieldcotizacionProforma.setText(proformaBean.getcotizacion().toString());
			this.jInternalFrameDetalleFormProforma.jTextAreadireccionProforma.setText(proformaBean.getdireccion());
			this.jInternalFrameDetalleFormProforma.jTextFieldrucProforma.setText(proformaBean.getruc());
			this.jInternalFrameDetalleFormProforma.jCheckBoxes_ofertaProforma.setSelected(proformaBean.getes_oferta());
			this.jInternalFrameDetalleFormProforma.jTextFieldtelefonoProforma.setText(proformaBean.gettelefono());
			this.jInternalFrameDetalleFormProforma.jTextAreadescripcionProforma.setText(proformaBean.getdescripcion());
			this.jInternalFrameDetalleFormProforma.jTextFielddescuento_porcentajeProforma.setText(proformaBean.getdescuento_porcentaje().toString());
			this.jInternalFrameDetalleFormProforma.jTextFieldmonto_con_ivaProforma.setText(proformaBean.getmonto_con_iva().toString());
			this.jInternalFrameDetalleFormProforma.jTextFieldsumanProforma.setText(proformaBean.getsuman().toString());
			this.jInternalFrameDetalleFormProforma.jTextFielddescuento_valorProforma.setText(proformaBean.getdescuento_valor().toString());
			this.jInternalFrameDetalleFormProforma.jTextFieldmonto_sin_ivaProforma.setText(proformaBean.getmonto_sin_iva().toString());
			this.jInternalFrameDetalleFormProforma.jTextFielddescuento_generalProforma.setText(proformaBean.getdescuento_general().toString());
			this.jInternalFrameDetalleFormProforma.jTextFieldfleteProforma.setText(proformaBean.getflete().toString());
			this.jInternalFrameDetalleFormProforma.jTextFieldultimo_costoProforma.setText(proformaBean.getultimo_costo().toString());
			this.jInternalFrameDetalleFormProforma.jTextFieldsubtotalProforma.setText(proformaBean.getsubtotal().toString());
			this.jInternalFrameDetalleFormProforma.jTextFieldotros_cargosProforma.setText(proformaBean.getotros_cargos().toString());
			this.jInternalFrameDetalleFormProforma.jTextFieldmargen_utilidadProforma.setText(proformaBean.getmargen_utilidad().toString());
			this.jInternalFrameDetalleFormProforma.jTextFieldivaProforma.setText(proformaBean.getiva().toString());
			this.jInternalFrameDetalleFormProforma.jTextFieldfinanciamientoProforma.setText(proformaBean.getfinanciamiento().toString());
			this.jInternalFrameDetalleFormProforma.jTextFieldtotalProforma.setText(proformaBean.gettotal().toString());
			this.jInternalFrameDetalleFormProforma.jTextFieldotros_valoresProforma.setText(proformaBean.getotros_valores().toString());
			this.jInternalFrameDetalleFormProforma.jTextFieldanticipoProforma.setText(proformaBean.getanticipo().toString());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoReturnGeneralToBeanProforma(ProformaParameterReturnGeneral proformaReturnGeneral,ProformaBean proformaBean,Boolean conDefault) throws Exception { 
		try {
			Proforma proformaLocal=new Proforma();
			
			proformaLocal=proformaReturnGeneral.getProforma();
			
			
			if(conColumnasBase) {if(conDefault || (!conDefault && proformaLocal.getId()!=null && !proformaLocal.getId().equals(0L))) {proformaBean.setId(proformaLocal.getId());}}
			if(conDefault || (!conDefault && proformaLocal.getnumero_pre_impreso()!=null && !proformaLocal.getnumero_pre_impreso().equals(""))) {proformaBean.setnumero_pre_impreso(proformaLocal.getnumero_pre_impreso());}
			if(conDefault || (!conDefault && proformaLocal.getfecha_emision()!=null && !proformaLocal.getfecha_emision().equals(new Date()))) {proformaBean.setfecha_emision(proformaLocal.getfecha_emision());}
			if(conDefault || (!conDefault && proformaLocal.getdias()!=null && !proformaLocal.getdias().equals(0))) {proformaBean.setdias(proformaLocal.getdias());}
			if(conDefault || (!conDefault && proformaLocal.getfecha_vencimiento()!=null && !proformaLocal.getfecha_vencimiento().equals(new Date()))) {proformaBean.setfecha_vencimiento(proformaLocal.getfecha_vencimiento());}
			if(conDefault || (!conDefault && proformaLocal.getcotizacion()!=null && !proformaLocal.getcotizacion().equals(0.0))) {proformaBean.setcotizacion(proformaLocal.getcotizacion());}
			if(conDefault || (!conDefault && proformaLocal.getdireccion()!=null && !proformaLocal.getdireccion().equals(""))) {proformaBean.setdireccion(proformaLocal.getdireccion());}
			if(conDefault || (!conDefault && proformaLocal.getruc()!=null && !proformaLocal.getruc().equals(""))) {proformaBean.setruc(proformaLocal.getruc());}
			if(conDefault || (!conDefault && proformaLocal.getes_oferta()!=null && !proformaLocal.getes_oferta().equals(false))) {proformaBean.setes_oferta(proformaLocal.getes_oferta());}
			if(conDefault || (!conDefault && proformaLocal.gettelefono()!=null && !proformaLocal.gettelefono().equals(""))) {proformaBean.settelefono(proformaLocal.gettelefono());}
			if(conDefault || (!conDefault && proformaLocal.getdescripcion()!=null && !proformaLocal.getdescripcion().equals(""))) {proformaBean.setdescripcion(proformaLocal.getdescripcion());}
			if(conDefault || (!conDefault && proformaLocal.getdescuento_porcentaje()!=null && !proformaLocal.getdescuento_porcentaje().equals(0.0))) {proformaBean.setdescuento_porcentaje(proformaLocal.getdescuento_porcentaje());}
			if(conDefault || (!conDefault && proformaLocal.getmonto_con_iva()!=null && !proformaLocal.getmonto_con_iva().equals(0.0))) {proformaBean.setmonto_con_iva(proformaLocal.getmonto_con_iva());}
			if(conDefault || (!conDefault && proformaLocal.getsuman()!=null && !proformaLocal.getsuman().equals(0.0))) {proformaBean.setsuman(proformaLocal.getsuman());}
			if(conDefault || (!conDefault && proformaLocal.getdescuento_valor()!=null && !proformaLocal.getdescuento_valor().equals(0.0))) {proformaBean.setdescuento_valor(proformaLocal.getdescuento_valor());}
			if(conDefault || (!conDefault && proformaLocal.getmonto_sin_iva()!=null && !proformaLocal.getmonto_sin_iva().equals(0.0))) {proformaBean.setmonto_sin_iva(proformaLocal.getmonto_sin_iva());}
			if(conDefault || (!conDefault && proformaLocal.getdescuento_general()!=null && !proformaLocal.getdescuento_general().equals(0.0))) {proformaBean.setdescuento_general(proformaLocal.getdescuento_general());}
			if(conDefault || (!conDefault && proformaLocal.getflete()!=null && !proformaLocal.getflete().equals(0.0))) {proformaBean.setflete(proformaLocal.getflete());}
			if(conDefault || (!conDefault && proformaLocal.getultimo_costo()!=null && !proformaLocal.getultimo_costo().equals(0.0))) {proformaBean.setultimo_costo(proformaLocal.getultimo_costo());}
			if(conDefault || (!conDefault && proformaLocal.getsubtotal()!=null && !proformaLocal.getsubtotal().equals(0.0))) {proformaBean.setsubtotal(proformaLocal.getsubtotal());}
			if(conDefault || (!conDefault && proformaLocal.getotros_cargos()!=null && !proformaLocal.getotros_cargos().equals(0.0))) {proformaBean.setotros_cargos(proformaLocal.getotros_cargos());}
			if(conDefault || (!conDefault && proformaLocal.getmargen_utilidad()!=null && !proformaLocal.getmargen_utilidad().equals(0.0))) {proformaBean.setmargen_utilidad(proformaLocal.getmargen_utilidad());}
			if(conDefault || (!conDefault && proformaLocal.getiva()!=null && !proformaLocal.getiva().equals(0.0))) {proformaBean.setiva(proformaLocal.getiva());}
			if(conDefault || (!conDefault && proformaLocal.getfinanciamiento()!=null && !proformaLocal.getfinanciamiento().equals(0.0))) {proformaBean.setfinanciamiento(proformaLocal.getfinanciamiento());}
			if(conDefault || (!conDefault && proformaLocal.gettotal()!=null && !proformaLocal.gettotal().equals(0.0))) {proformaBean.settotal(proformaLocal.gettotal());}
			if(conDefault || (!conDefault && proformaLocal.getotros_valores()!=null && !proformaLocal.getotros_valores().equals(0.0))) {proformaBean.setotros_valores(proformaLocal.getotros_valores());}
			if(conDefault || (!conDefault && proformaLocal.getanticipo()!=null && !proformaLocal.getanticipo().equals(0.0))) {proformaBean.setanticipo(proformaLocal.getanticipo());}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	@SuppressWarnings("rawtypes")
	public static void setActualComboBoxProformaGenerico(Long idProformaSeleccionado,JComboBox jComboBoxProforma,List<Proforma> proformasLocal)throws Exception {
		try {
			Proforma  proformaTemp=null;

			for(Proforma proformaAux:proformasLocal) {
				if(proformaAux.getId()!=null && proformaAux.getId().equals(idProformaSeleccionado)) {
					proformaTemp=proformaAux;
					break;
				}
			}

			jComboBoxProforma.setSelectedItem(proformaTemp);

		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("rawtypes")
	public static void setHotKeysComboBoxProformaGenerico(JComboBox jComboBoxProforma,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda)throws Exception {
		try {
			//GLOBAL(id_empresa,id_sucursal,id_ejercicio)
			//BASICO(normal)
			//CON_BUSQUEDA(Permite buscar Fk)
			
			String sKeyStrokeName="";
			KeyStroke keyStrokeControl=null;
			
			if(!sTipoBusqueda.equals("GLOBAL")) {
				
				//BUSCAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSCAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSCAR");
				
				jComboBoxProforma.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxProforma.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Busqueda"));
				//BUSCAR
				
				
				//ACTUALIZAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_ACTUALIZAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_ACTUALIZAR");
				
				jComboBoxProforma.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxProforma.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Update"));
				//ACTUALIZAR
				
				if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxProforma.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
						jComboBoxProforma.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));						
					}
					
					/*
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxProforma.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					} else {
						jComboBoxProforma.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					}
					*/
				}								
				
				//CON_BUSQUEDA								
				if(sTipoBusqueda.contains("CON_BUSQUEDA")) {
					sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSQUEDA");
					keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSQUEDA");
							
					jComboBoxProforma.getInputMap().put(keyStrokeControl, sKeyStrokeName);
					jComboBoxProforma.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction));
				}
				//CON_BUSQUEDA
				
				
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	@SuppressWarnings("rawtypes")
	public void setHotKeysComboBoxGenerico(JComboBox jComboBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
			if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
				jComboBox.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			} else {
				jComboBox.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			}
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextFieldGenerico(JTextField jTextField,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextField.addFocusListener(new TextFieldFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		jTextField.addActionListener(new TextFieldActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextAreaGenerico(JTextArea jTextArea,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextArea.addFocusListener(new TextAreaFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jTextArea.addActionListener(new TextAreaActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJLabelGenerico(JLabel jLabel,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jLabel.addFocusListener(new LabelFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jLabel.addActionListener(new LabelActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJCheckBoxGenerico(JCheckBox jCheckBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jCheckBox.addFocusListener(new CheckBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//SI SE DEFINE AL CAMBIAR VALOR, ESTE NUEVO VALOR NO SE ENVIA AL EVENTO
		//jCheckBox.addItemListener(new CheckBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJDateChooserGenerico(JDateChooser jDateChooser,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		FuncionesSwing.addDateListener(jDateChooser, jInternalFrameBase, sNombreHotKeyAbstractAction);
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJButtonGenerico(JButton jButton,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jButton.addActionListener(new ButtonActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	public void jButtonRelacionActionPerformed(String sTipo,ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado) {
		//ABRIR RELACIONES
		try {
			
		if(sTipo.equals("TerminoProforma")) {
			jButtonTerminoProformaActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("DetalleProforma")) {
			jButtonDetalleProformaActionPerformed(evt,rowIndex,true,false,null);
		}
		} catch (Exception e) {
			FuncionesSwing.manageException2(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
		}
	}
	
	public String getDescripcionFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		String sDescripcion="";
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			proforma=(Proforma) proformaLogic.getProformas().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			proforma =(Proforma) proformas.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		if(sTipo.equals("Empresa")) {
			//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
			if(!proforma.getIsNew() && !proforma.getIsChanged() && !proforma.getIsDeleted()) {
				sDescripcion=proforma.getempresa_descripcion();
			} else {
				//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
				sDescripcion=proforma.getempresa_descripcion();
			}
		}

		if(sTipo.equals("Sucursal")) {
			//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
			if(!proforma.getIsNew() && !proforma.getIsChanged() && !proforma.getIsDeleted()) {
				sDescripcion=proforma.getsucursal_descripcion();
			} else {
				//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
				sDescripcion=proforma.getsucursal_descripcion();
			}
		}

		if(sTipo.equals("Usuario")) {
			//sDescripcion=this.getActualUsuarioForeignKeyDescripcion((Long)value);
			if(!proforma.getIsNew() && !proforma.getIsChanged() && !proforma.getIsDeleted()) {
				sDescripcion=proforma.getusuario_descripcion();
			} else {
				//sDescripcion=this.getActualUsuarioForeignKeyDescripcion((Long)value);
				sDescripcion=proforma.getusuario_descripcion();
			}
		}

		if(sTipo.equals("Ejercicio")) {
			//sDescripcion=this.getActualEjercicioForeignKeyDescripcion((Long)value);
			if(!proforma.getIsNew() && !proforma.getIsChanged() && !proforma.getIsDeleted()) {
				sDescripcion=proforma.getejercicio_descripcion();
			} else {
				//sDescripcion=this.getActualEjercicioForeignKeyDescripcion((Long)value);
				sDescripcion=proforma.getejercicio_descripcion();
			}
		}

		if(sTipo.equals("Periodo")) {
			//sDescripcion=this.getActualPeriodoForeignKeyDescripcion((Long)value);
			if(!proforma.getIsNew() && !proforma.getIsChanged() && !proforma.getIsDeleted()) {
				sDescripcion=proforma.getperiodo_descripcion();
			} else {
				//sDescripcion=this.getActualPeriodoForeignKeyDescripcion((Long)value);
				sDescripcion=proforma.getperiodo_descripcion();
			}
		}

		if(sTipo.equals("Anio")) {
			//sDescripcion=this.getActualAnioForeignKeyDescripcion((Long)value);
			if(!proforma.getIsNew() && !proforma.getIsChanged() && !proforma.getIsDeleted()) {
				sDescripcion=proforma.getanio_descripcion();
			} else {
				//sDescripcion=this.getActualAnioForeignKeyDescripcion((Long)value);
				sDescripcion=proforma.getanio_descripcion();
			}
		}

		if(sTipo.equals("Mes")) {
			//sDescripcion=this.getActualMesForeignKeyDescripcion((Long)value);
			if(!proforma.getIsNew() && !proforma.getIsChanged() && !proforma.getIsDeleted()) {
				sDescripcion=proforma.getmes_descripcion();
			} else {
				//sDescripcion=this.getActualMesForeignKeyDescripcion((Long)value);
				sDescripcion=proforma.getmes_descripcion();
			}
		}

		if(sTipo.equals("Moneda")) {
			//sDescripcion=this.getActualMonedaForeignKeyDescripcion((Long)value);
			if(!proforma.getIsNew() && !proforma.getIsChanged() && !proforma.getIsDeleted()) {
				sDescripcion=proforma.getmoneda_descripcion();
			} else {
				//sDescripcion=this.getActualMonedaForeignKeyDescripcion((Long)value);
				sDescripcion=proforma.getmoneda_descripcion();
			}
		}

		if(sTipo.equals("Empleado")) {
			//sDescripcion=this.getActualEmpleadoForeignKeyDescripcion((Long)value);
			if(!proforma.getIsNew() && !proforma.getIsChanged() && !proforma.getIsDeleted()) {
				sDescripcion=proforma.getempleado_descripcion();
			} else {
				//sDescripcion=this.getActualEmpleadoForeignKeyDescripcion((Long)value);
				sDescripcion=proforma.getempleado_descripcion();
			}
		}

		if(sTipo.equals("Formato")) {
			//sDescripcion=this.getActualFormatoForeignKeyDescripcion((Long)value);
			if(!proforma.getIsNew() && !proforma.getIsChanged() && !proforma.getIsDeleted()) {
				sDescripcion=proforma.getformato_descripcion();
			} else {
				//sDescripcion=this.getActualFormatoForeignKeyDescripcion((Long)value);
				sDescripcion=proforma.getformato_descripcion();
			}
		}

		if(sTipo.equals("EstadoProforma")) {
			//sDescripcion=this.getActualEstadoProformaForeignKeyDescripcion((Long)value);
			if(!proforma.getIsNew() && !proforma.getIsChanged() && !proforma.getIsDeleted()) {
				sDescripcion=proforma.getestadoproforma_descripcion();
			} else {
				//sDescripcion=this.getActualEstadoProformaForeignKeyDescripcion((Long)value);
				sDescripcion=proforma.getestadoproforma_descripcion();
			}
		}

		if(sTipo.equals("Cliente")) {
			//sDescripcion=this.getActualClienteForeignKeyDescripcion((Long)value);
			if(!proforma.getIsNew() && !proforma.getIsChanged() && !proforma.getIsDeleted()) {
				sDescripcion=proforma.getcliente_descripcion();
			} else {
				//sDescripcion=this.getActualClienteForeignKeyDescripcion((Long)value);
				sDescripcion=proforma.getcliente_descripcion();
			}
		}

		if(sTipo.equals("TipoPrecio")) {
			//sDescripcion=this.getActualTipoPrecioForeignKeyDescripcion((Long)value);
			if(!proforma.getIsNew() && !proforma.getIsChanged() && !proforma.getIsDeleted()) {
				sDescripcion=proforma.gettipoprecio_descripcion();
			} else {
				//sDescripcion=this.getActualTipoPrecioForeignKeyDescripcion((Long)value);
				sDescripcion=proforma.gettipoprecio_descripcion();
			}
		}

		if(sTipo.equals("Vendedor")) {
			//sDescripcion=this.getActualVendedorForeignKeyDescripcion((Long)value);
			if(!proforma.getIsNew() && !proforma.getIsChanged() && !proforma.getIsDeleted()) {
				sDescripcion=proforma.getvendedor_descripcion();
			} else {
				//sDescripcion=this.getActualVendedorForeignKeyDescripcion((Long)value);
				sDescripcion=proforma.getvendedor_descripcion();
			}
		}

		if(sTipo.equals("SubCliente")) {
			//sDescripcion=this.getActualSubClienteForeignKeyDescripcion((Long)value);
			if(!proforma.getIsNew() && !proforma.getIsChanged() && !proforma.getIsDeleted()) {
				sDescripcion=proforma.getsubcliente_descripcion();
			} else {
				//sDescripcion=this.getActualSubClienteForeignKeyDescripcion((Long)value);
				sDescripcion=proforma.getsubcliente_descripcion();
			}
		}

		if(sTipo.equals("TipoViaTransporte")) {
			//sDescripcion=this.getActualTipoViaTransporteForeignKeyDescripcion((Long)value);
			if(!proforma.getIsNew() && !proforma.getIsChanged() && !proforma.getIsDeleted()) {
				sDescripcion=proforma.gettipoviatransporte_descripcion();
			} else {
				//sDescripcion=this.getActualTipoViaTransporteForeignKeyDescripcion((Long)value);
				sDescripcion=proforma.gettipoviatransporte_descripcion();
			}
		}

		if(sTipo.equals("Transporte")) {
			//sDescripcion=this.getActualTransporteForeignKeyDescripcion((Long)value);
			if(!proforma.getIsNew() && !proforma.getIsChanged() && !proforma.getIsDeleted()) {
				sDescripcion=proforma.gettransporte_descripcion();
			} else {
				//sDescripcion=this.getActualTransporteForeignKeyDescripcion((Long)value);
				sDescripcion=proforma.gettransporte_descripcion();
			}
		}

		if(sTipo.equals("RutaTransporte")) {
			//sDescripcion=this.getActualRutaTransporteForeignKeyDescripcion((Long)value);
			if(!proforma.getIsNew() && !proforma.getIsChanged() && !proforma.getIsDeleted()) {
				sDescripcion=proforma.getrutatransporte_descripcion();
			} else {
				//sDescripcion=this.getActualRutaTransporteForeignKeyDescripcion((Long)value);
				sDescripcion=proforma.getrutatransporte_descripcion();
			}
		}

		if(sTipo.equals("CentroCosto")) {
			//sDescripcion=this.getActualCentroCostoForeignKeyDescripcion((Long)value);
			if(!proforma.getIsNew() && !proforma.getIsChanged() && !proforma.getIsDeleted()) {
				sDescripcion=proforma.getcentrocosto_descripcion();
			} else {
				//sDescripcion=this.getActualCentroCostoForeignKeyDescripcion((Long)value);
				sDescripcion=proforma.getcentrocosto_descripcion();
			}
		}

		if(sTipo.equals("TipoProforma")) {
			//sDescripcion=this.getActualTipoProformaForeignKeyDescripcion((Long)value);
			if(!proforma.getIsNew() && !proforma.getIsChanged() && !proforma.getIsDeleted()) {
				sDescripcion=proforma.gettipoproforma_descripcion();
			} else {
				//sDescripcion=this.getActualTipoProformaForeignKeyDescripcion((Long)value);
				sDescripcion=proforma.gettipoproforma_descripcion();
			}
		}

		if(sTipo.equals("Consignatario")) {
			//sDescripcion=this.getActualConsignatarioForeignKeyDescripcion((Long)value);
			if(!proforma.getIsNew() && !proforma.getIsChanged() && !proforma.getIsDeleted()) {
				sDescripcion=proforma.getconsignatario_descripcion();
			} else {
				//sDescripcion=this.getActualConsignatarioForeignKeyDescripcion((Long)value);
				sDescripcion=proforma.getconsignatario_descripcion();
			}
		}

		if(sTipo.equals("TipoCambio")) {
			//sDescripcion=this.getActualTipoCambioForeignKeyDescripcion((Long)value);
			if(!proforma.getIsNew() && !proforma.getIsChanged() && !proforma.getIsDeleted()) {
				sDescripcion=proforma.gettipocambio_descripcion();
			} else {
				//sDescripcion=this.getActualTipoCambioForeignKeyDescripcion((Long)value);
				sDescripcion=proforma.gettipocambio_descripcion();
			}
		}

		
		return sDescripcion;
	}
	
	public Color getColorFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		Color color=Color.WHITE;
		
		Proforma proformaRow=new Proforma();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			proformaRow=(Proforma) proformaLogic.getProformas().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			proformaRow=(Proforma) proformas.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		if(sTipo.equals("EstadoProforma")) {
			color=FuncionesSwing.getColorGeneral(proformaRow.getEstadoProforma().getid_color_general());
		}

		
		return color;
	}
	
	
	
	
	public void jButtonTerminoProformaActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Proforma proforma) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormProforma==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.proforma = (Proforma)this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.proforma = (Proforma)this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(proforma!=null) {
						this.proforma = proforma;
					} else {
						this.proforma = new Proforma();
					}
				}

				if(this.isTienePermisosTerminoProforma && this.permiteMantenimiento(this.proforma)) {
					TerminoProformaBeanSwingJInternalFrame terminoproformaBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFramePopup=new TerminoProformaBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						terminoproformaBeanSwingJInternalFrame=this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFramePopup;
					} else {
						terminoproformaBeanSwingJInternalFrame=this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame;
					}

					List<Proforma> proformas=new ArrayList<Proforma>();
					proformas.add(this.proforma);
					if(!esRelacionado) {
						//terminoproformaBeanSwingJInternalFrame.terminoproformaSessionBean.setConGuardarRelaciones(false);
						//terminoproformaBeanSwingJInternalFrame.terminoproformaSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					terminoproformaBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormProforma.cargarTerminoProformaBeanSwingJInternalFrame(proformas,this.proforma,terminoproformaBeanSwingJInternalFrame,/*conInicializar,*/terminoproformaBeanSwingJInternalFrame.terminoproformaSessionBean.getConGuardarRelaciones(),terminoproformaBeanSwingJInternalFrame.terminoproformaSessionBean.getEsGuardarRelacionado());
					terminoproformaBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						terminoproformaBeanSwingJInternalFrame.actualizarEstadoPanelsTerminoProforma("no_relacionado");

						terminoproformaBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(TerminoProformaConstantesFunciones.ITAMANIOFILATABLA + (TerminoProformaConstantesFunciones.ITAMANIOFILATABLA/2));

						terminoproformaBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderProforma=(TitledBorder)this.jScrollPanelDatosProforma.getBorder();
						TitledBorder titledBorderTerminoProforma=(TitledBorder)terminoproformaBeanSwingJInternalFrame.jScrollPanelDatosTerminoProforma.getBorder();

						titledBorderTerminoProforma.setTitle(titledBorderProforma.getTitle() + " -> Termino Proforma");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,terminoproformaBeanSwingJInternalFrame);
						}

						terminoproformaBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(terminoproformaBeanSwingJInternalFrame);

						terminoproformaBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.proformaSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Termino Proforma",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonDetalleProformaActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Proforma proforma) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormProforma==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.proforma = (Proforma)this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.proforma = (Proforma)this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(proforma!=null) {
						this.proforma = proforma;
					} else {
						this.proforma = new Proforma();
					}
				}

				if(this.isTienePermisosDetalleProforma && this.permiteMantenimiento(this.proforma)) {
					DetalleProformaBeanSwingJInternalFrame detalleproformaBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFramePopup=new DetalleProformaBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						detalleproformaBeanSwingJInternalFrame=this.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFramePopup;
					} else {
						detalleproformaBeanSwingJInternalFrame=this.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame;
					}

					List<Proforma> proformas=new ArrayList<Proforma>();
					proformas.add(this.proforma);
					if(!esRelacionado) {
						//detalleproformaBeanSwingJInternalFrame.detalleproformaSessionBean.setConGuardarRelaciones(false);
						//detalleproformaBeanSwingJInternalFrame.detalleproformaSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					detalleproformaBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormProforma.cargarDetalleProformaBeanSwingJInternalFrame(proformas,this.proforma,detalleproformaBeanSwingJInternalFrame,/*conInicializar,*/detalleproformaBeanSwingJInternalFrame.detalleproformaSessionBean.getConGuardarRelaciones(),detalleproformaBeanSwingJInternalFrame.detalleproformaSessionBean.getEsGuardarRelacionado());
					detalleproformaBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						detalleproformaBeanSwingJInternalFrame.actualizarEstadoPanelsDetalleProforma("no_relacionado");

						detalleproformaBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(DetalleProformaConstantesFunciones.ITAMANIOFILATABLA + (DetalleProformaConstantesFunciones.ITAMANIOFILATABLA/2));

						detalleproformaBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderProforma=(TitledBorder)this.jScrollPanelDatosProforma.getBorder();
						TitledBorder titledBorderDetalleProforma=(TitledBorder)detalleproformaBeanSwingJInternalFrame.jScrollPanelDatosDetalleProforma.getBorder();

						titledBorderDetalleProforma.setTitle(titledBorderProforma.getTitle() + " -> Detalle Proforma");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,detalleproformaBeanSwingJInternalFrame);
						}

						detalleproformaBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(detalleproformaBeanSwingJInternalFrame);

						detalleproformaBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.proformaSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Detalle Proforma",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.closeNewConnexionToDeep();
				}

			}
		}

	
	
	
	public void refrescarBindingTabla(Boolean blnSoloTabla) {
	}
	
	public void inicializarActualizarBindingBotonesManualProforma(Boolean esSetControles) {						
		if(esSetControles) {
			this.jButtonNuevoProforma.setVisible((this.isVisibilidadCeldaNuevoProforma && this.isPermisoNuevoProforma));			
			this.jButtonDuplicarProforma.setVisible((this.isVisibilidadCeldaDuplicarProforma && this.isPermisoDuplicarProforma));			
			this.jButtonCopiarProforma.setVisible((this.isVisibilidadCeldaCopiarProforma && this.isPermisoCopiarProforma));
			this.jButtonVerFormProforma.setVisible((this.isVisibilidadCeldaVerFormProforma && this.isPermisoVerFormProforma));
			
			this.jButtonAbrirOrderByProforma.setVisible((this.isVisibilidadCeldaOrdenProforma && this.isPermisoOrdenProforma));			
			
			this.jButtonNuevoRelacionesProforma.setVisible((this.isVisibilidadCeldaNuevoRelacionesProforma && this.isPermisoNuevoProforma));			
			this.jButtonNuevoGuardarCambiosProforma.setVisible((this.isVisibilidadCeldaNuevoProforma && this.isPermisoNuevoProforma && this.isPermisoGuardarCambiosProforma));
			
			if(this.jInternalFrameDetalleFormProforma!=null) {
			this.jInternalFrameDetalleFormProforma.jButtonModificarProforma.setVisible((this.isVisibilidadCeldaModificarProforma && this.isPermisoActualizarProforma));	
			this.jInternalFrameDetalleFormProforma.jButtonActualizarProforma.setVisible((this.isVisibilidadCeldaActualizarProforma && this.isPermisoActualizarProforma));	
			this.jInternalFrameDetalleFormProforma.jButtonEliminarProforma.setVisible((this.isVisibilidadCeldaEliminarProforma && this.isPermisoEliminarProforma));
			this.jInternalFrameDetalleFormProforma.jButtonCancelarProforma.setVisible(this.isVisibilidadCeldaCancelarProforma);							
			this.jInternalFrameDetalleFormProforma.jButtonGuardarCambiosProforma.setVisible((this.isVisibilidadCeldaGuardarProforma && this.isPermisoGuardarCambiosProforma));			
			
			}
						
			this.jButtonGuardarCambiosTablaProforma.setVisible((this.isVisibilidadCeldaGuardarCambiosProforma && this.isPermisoGuardarCambiosProforma));							
			
			//TOOLBAR
			
			this.jButtonNuevoToolBarProforma.setVisible((this.isVisibilidadCeldaNuevoProforma && this.isPermisoNuevoProforma));						
			this.jButtonDuplicarToolBarProforma.setVisible((this.isVisibilidadCeldaDuplicarProforma && this.isPermisoDuplicarProforma));						
			this.jButtonCopiarToolBarProforma.setVisible((this.isVisibilidadCeldaCopiarProforma && this.isPermisoCopiarProforma));			
			this.jButtonVerFormToolBarProforma.setVisible((this.isVisibilidadCeldaVerFormProforma && this.isPermisoVerFormProforma));			
			this.jButtonAbrirOrderByToolBarProforma.setVisible((this.isVisibilidadCeldaOrdenProforma && this.isPermisoOrdenProforma));
			this.jButtonNuevoRelacionesToolBarProforma.setVisible((this.isVisibilidadCeldaNuevoRelacionesProforma && this.isPermisoNuevoProforma));			
			this.jButtonNuevoGuardarCambiosToolBarProforma.setVisible((this.isVisibilidadCeldaNuevoProforma && this.isPermisoNuevoProforma && this.isPermisoGuardarCambiosProforma));			
			
			if(this.jInternalFrameDetalleFormProforma!=null) {
			this.jInternalFrameDetalleFormProforma.jButtonModificarToolBarProforma.setVisible((this.isVisibilidadCeldaModificarProforma && this.isPermisoActualizarProforma));	
			this.jInternalFrameDetalleFormProforma.jButtonActualizarToolBarProforma.setVisible((this.isVisibilidadCeldaActualizarProforma  && this.isPermisoActualizarProforma));	
			this.jInternalFrameDetalleFormProforma.jButtonEliminarToolBarProforma.setVisible((this.isVisibilidadCeldaEliminarProforma && this.isPermisoEliminarProforma));
			this.jInternalFrameDetalleFormProforma.jButtonCancelarToolBarProforma.setVisible(this.isVisibilidadCeldaCancelarProforma);				
			this.jInternalFrameDetalleFormProforma.jButtonGuardarCambiosToolBarProforma.setVisible((this.isVisibilidadCeldaGuardarProforma && this.isPermisoGuardarCambiosProforma));									
			}
			
			this.jButtonGuardarCambiosTablaToolBarProforma.setVisible((this.isVisibilidadCeldaGuardarCambiosProforma && this.isPermisoGuardarCambiosProforma));									
			
			//TOOLBAR
			
			//MENUS
			
			this.jMenuItemNuevoProforma.setVisible((this.isVisibilidadCeldaNuevoProforma && this.isPermisoNuevoProforma));			
			this.jMenuItemDuplicarProforma.setVisible((this.isVisibilidadCeldaDuplicarProforma && this.isPermisoDuplicarProforma));			
			this.jMenuItemCopiarProforma.setVisible((this.isVisibilidadCeldaCopiarProforma && this.isPermisoCopiarProforma));			
			this.jMenuItemVerFormProforma.setVisible((this.isVisibilidadCeldaVerFormProforma && this.isPermisoVerFormProforma));			
			this.jMenuItemAbrirOrderByProforma.setVisible((this.isVisibilidadCeldaOrdenProforma && this.isPermisoOrdenProforma));			
			//this.jMenuItemMostrarOcultarProforma.setVisible((this.isVisibilidadCeldaOrdenProforma && this.isPermisoOrdenProforma));
			this.jMenuItemDetalleAbrirOrderByProforma.setVisible((this.isVisibilidadCeldaOrdenProforma && this.isPermisoOrdenProforma));			
			//this.jMenuItemDetalleMostrarOcultarProforma.setVisible((this.isVisibilidadCeldaOrdenProforma && this.isPermisoOrdenProforma));			
			this.jMenuItemNuevoRelacionesProforma.setVisible((this.isVisibilidadCeldaNuevoRelacionesProforma && this.isPermisoNuevoProforma));			
			this.jMenuItemNuevoGuardarCambiosProforma.setVisible((this.isVisibilidadCeldaNuevoProforma && this.isPermisoNuevoProforma && this.isPermisoGuardarCambiosProforma));									
			
			if(this.jInternalFrameDetalleFormProforma!=null) {
			this.jInternalFrameDetalleFormProforma.jMenuItemModificarProforma.setVisible((this.isVisibilidadCeldaModificarProforma && this.isPermisoActualizarProforma));	
			this.jInternalFrameDetalleFormProforma.jMenuItemActualizarProforma.setVisible((this.isVisibilidadCeldaActualizarProforma && this.isPermisoActualizarProforma));	
			this.jInternalFrameDetalleFormProforma.jMenuItemEliminarProforma.setVisible((this.isVisibilidadCeldaEliminarProforma && this.isPermisoEliminarProforma));
			this.jInternalFrameDetalleFormProforma.jMenuItemCancelarProforma.setVisible(this.isVisibilidadCeldaCancelarProforma);				
			}
			
			this.jMenuItemGuardarCambiosProforma.setVisible((this.isVisibilidadCeldaGuardarProforma && this.isPermisoGuardarCambiosProforma));						
			this.jMenuItemGuardarCambiosTablaProforma.setVisible((this.isVisibilidadCeldaGuardarCambiosProforma && this.isPermisoGuardarCambiosProforma));						
			
			//MENUS
			
		} else {
			this.isVisibilidadCeldaNuevoProforma=this.jButtonNuevoProforma.isVisible();
			this.isVisibilidadCeldaDuplicarProforma=this.jButtonDuplicarProforma.isVisible();
			this.isVisibilidadCeldaCopiarProforma=this.jButtonCopiarProforma.isVisible();
			this.isVisibilidadCeldaVerFormProforma=this.jButtonVerFormProforma.isVisible();
			
			this.isVisibilidadCeldaOrdenProforma=this.jButtonAbrirOrderByProforma.isVisible();			
			
			this.isVisibilidadCeldaNuevoRelacionesProforma=this.jButtonNuevoRelacionesProforma.isVisible();
			this.isVisibilidadCeldaModificarProforma=this.jButtonModificarProforma.isVisible();
			
			if(this.jInternalFrameDetalleFormProforma!=null) {
			this.isVisibilidadCeldaActualizarProforma=this.jInternalFrameDetalleFormProforma.jButtonActualizarProforma.isVisible();
			this.isVisibilidadCeldaEliminarProforma=this.jInternalFrameDetalleFormProforma.jButtonEliminarProforma.isVisible();
			this.isVisibilidadCeldaCancelarProforma=this.jInternalFrameDetalleFormProforma.jButtonCancelarProforma.isVisible();
			this.isVisibilidadCeldaGuardarProforma=this.jInternalFrameDetalleFormProforma.jButtonGuardarCambiosProforma.isVisible();			
			}
			
			this.isVisibilidadCeldaGuardarCambiosProforma=this.jButtonGuardarCambiosTablaProforma.isVisible();
			
			//TOOLBAR
			
			this.isVisibilidadCeldaNuevoProforma=this.jButtonNuevoToolBarProforma.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesProforma=this.jButtonNuevoRelacionesToolBarProforma.isVisible();
			
			if(this.jInternalFrameDetalleFormProforma!=null) {
			this.isVisibilidadCeldaModificarProforma=this.jInternalFrameDetalleFormProforma.jButtonModificarToolBarProforma.isVisible();
			this.isVisibilidadCeldaActualizarProforma=this.jInternalFrameDetalleFormProforma.jButtonActualizarToolBarProforma.isVisible();
			this.isVisibilidadCeldaEliminarProforma=this.jInternalFrameDetalleFormProforma.jButtonEliminarToolBarProforma.isVisible();
			this.isVisibilidadCeldaCancelarProforma=this.jInternalFrameDetalleFormProforma.jButtonCancelarToolBarProforma.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarProforma=this.jButtonGuardarCambiosToolBarProforma.isVisible();
			this.isVisibilidadCeldaGuardarCambiosProforma=this.jButtonGuardarCambiosTablaToolBarProforma.isVisible();						
			
			//TOOLBAR
			
			//MENUS
			
			this.isVisibilidadCeldaNuevoProforma=this.jMenuItemNuevoProforma.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesProforma=this.jMenuItemNuevoRelacionesProforma.isVisible();
			
			if(this.jInternalFrameDetalleFormProforma!=null) {
			this.isVisibilidadCeldaModificarProforma=this.jInternalFrameDetalleFormProforma.jMenuItemModificarProforma.isVisible();
			this.isVisibilidadCeldaActualizarProforma=this.jInternalFrameDetalleFormProforma.jMenuItemActualizarProforma.isVisible();
			this.isVisibilidadCeldaEliminarProforma=this.jInternalFrameDetalleFormProforma.jMenuItemEliminarProforma.isVisible();
			this.isVisibilidadCeldaCancelarProforma=this.jInternalFrameDetalleFormProforma.jMenuItemCancelarProforma.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarProforma=this.jMenuItemGuardarCambiosProforma.isVisible();
			this.isVisibilidadCeldaGuardarCambiosProforma=this.jMenuItemGuardarCambiosTablaProforma.isVisible();						
			
			//MENUS
		}
	}
	
	public void inicializarActualizarBindingBotonesProforma(Boolean esInicializar) {
		if(ProformaJInternalFrame.ISBINDING_MANUAL) {			
			if(this.proformaSessionBean.getConGuardarRelaciones()) {
				//if(this.proformaSessionBean.getEsGuardarRelacionado()) {
				
				this.actualizarEstadoCeldasBotonesConGuardarRelacionesProforma();
			}
			
			this.inicializarActualizarBindingBotonesManualProforma(true);
			
		} else {	
		}
	}		
	
	public void inicializarActualizarBindingBotonesPermisosManualProforma() {
		this.jButtonNuevoProforma.setVisible(this.isPermisoNuevoProforma);			
		this.jButtonDuplicarProforma.setVisible(this.isPermisoDuplicarProforma);			
		this.jButtonCopiarProforma.setVisible(this.isPermisoCopiarProforma);			
		this.jButtonVerFormProforma.setVisible(this.isPermisoVerFormProforma);			
		
		this.jButtonAbrirOrderByProforma.setVisible(this.isPermisoOrdenProforma);					
		
		this.jButtonNuevoRelacionesProforma.setVisible(this.isPermisoNuevoProforma);			
		
		if(this.jInternalFrameDetalleFormProforma!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormProforma.jButtonModificarProforma.setVisible(this.isPermisoActualizarProforma);	
			this.jInternalFrameDetalleFormProforma.jButtonActualizarProforma.setVisible(this.isPermisoActualizarProforma);	
			this.jInternalFrameDetalleFormProforma.jButtonEliminarProforma.setVisible(this.isPermisoEliminarProforma);
			this.jInternalFrameDetalleFormProforma.jButtonCancelarProforma.setVisible(this.isVisibilidadCeldaCancelarProforma);						
			this.jInternalFrameDetalleFormProforma.jButtonGuardarCambiosProforma.setVisible(this.isPermisoGuardarCambiosProforma);							
		}
		
		this.jButtonGuardarCambiosTablaProforma.setVisible(this.isPermisoActualizarProforma);
	}
	
	public void inicializarActualizarBindingBotonesPermisosManualFormDetalleProforma() {
		this.jInternalFrameDetalleFormProforma.jButtonModificarProforma.setVisible(this.isPermisoActualizarProforma);	
		this.jInternalFrameDetalleFormProforma.jButtonActualizarProforma.setVisible(this.isPermisoActualizarProforma);	
		this.jInternalFrameDetalleFormProforma.jButtonEliminarProforma.setVisible(this.isPermisoEliminarProforma);
		this.jInternalFrameDetalleFormProforma.jButtonCancelarProforma.setVisible(this.isVisibilidadCeldaCancelarProforma);							
		this.jInternalFrameDetalleFormProforma.jButtonGuardarCambiosProforma.setVisible((this.isVisibilidadCeldaGuardarProforma && this.isPermisoGuardarCambiosProforma));			
	}
	
	public void inicializarActualizarBindingBotonesPermisosProforma() {
		if(ProformaJInternalFrame.ISBINDING_MANUAL) {
			this.inicializarActualizarBindingBotonesPermisosManualProforma();
		} else {
		}
	}
	
	
	public void refrescarBindingBotonesProforma() {
	}
	
	public void jTableDatosProformaListSelectionListener(javax.swing.event.ListSelectionEvent evt) throws Exception { 
		try {
			this.seleccionarProforma(null,evt,-1);
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonidProformaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProforma.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProforma(this.getproforma(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.proforma =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.proforma =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.proforma==null) {
						this.proforma = new Proforma();
					}

					this.setVariablesFormularioToObjetoActualProforma(this.proforma,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
				}

				if(this.proforma.getId()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id = "+this.proforma.getId().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProforma(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_empresaProformaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoempresa=true;

			idTienePermisoempresa=this.tienePermisosUsuarioEnPaginaWebProforma(EmpresaConstantesFunciones.CLASSNAME);

			if(idTienePermisoempresa) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProforma.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosProforma.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosProforma.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proforma =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.proforma =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualProforma(this.getproforma(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);

				this.empresaBeanSwingJInternalFrame=new EmpresaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.empresaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.empresaBeanSwingJInternalFrame.getEmpresaLogic().setConnexion(this.proformaLogic.getConnexion());

				if(this.proforma.getid_empresa()!=null) {
					this.empresaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.empresaBeanSwingJInternalFrame.setIdActual(this.proforma.getid_empresa());
					this.empresaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpresa();
				}

				JInternalFrameBase jinternalFrame =this.empresaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderProforma=(TitledBorder)this.jScrollPanelDatosProforma.getBorder();
				TitledBorder titledBorderempresa=(TitledBorder)this.empresaBeanSwingJInternalFrame.jScrollPanelDatosEmpresa.getBorder();

				titledBorderempresa.setTitle(titledBorderProforma.getTitle() + " -> Empresa");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_empresaProformaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProforma.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProforma(this.getproforma(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.proforma =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.proforma =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.proforma==null) {
						this.proforma = new Proforma();
					}

					this.setVariablesFormularioToObjetoActualProforma(this.proforma,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
				}

				if(this.proforma.getid_empresa()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_empresa = "+this.proforma.getid_empresa().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProforma(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_sucursalProformaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisosucursal=true;

			idTienePermisosucursal=this.tienePermisosUsuarioEnPaginaWebProforma(SucursalConstantesFunciones.CLASSNAME);

			if(idTienePermisosucursal) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProforma.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosProforma.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosProforma.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proforma =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.proforma =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualProforma(this.getproforma(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);

				this.sucursalBeanSwingJInternalFrame=new SucursalBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.sucursalBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.sucursalBeanSwingJInternalFrame.getSucursalLogic().setConnexion(this.proformaLogic.getConnexion());

				if(this.proforma.getid_sucursal()!=null) {
					this.sucursalBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.sucursalBeanSwingJInternalFrame.setIdActual(this.proforma.getid_sucursal());
					this.sucursalBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.inicializarActualizarBindingTablaSucursal();
				}

				JInternalFrameBase jinternalFrame =this.sucursalBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderProforma=(TitledBorder)this.jScrollPanelDatosProforma.getBorder();
				TitledBorder titledBordersucursal=(TitledBorder)this.sucursalBeanSwingJInternalFrame.jScrollPanelDatosSucursal.getBorder();

				titledBordersucursal.setTitle(titledBorderProforma.getTitle() + " -> Sucursal");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_sucursalProformaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProforma.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProforma(this.getproforma(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.proforma =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.proforma =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.proforma==null) {
						this.proforma = new Proforma();
					}

					this.setVariablesFormularioToObjetoActualProforma(this.proforma,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
				}

				if(this.proforma.getid_sucursal()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_sucursal = "+this.proforma.getid_sucursal().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProforma(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_usuarioProformaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisousuario=true;

			idTienePermisousuario=this.tienePermisosUsuarioEnPaginaWebProforma(UsuarioConstantesFunciones.CLASSNAME);

			if(idTienePermisousuario) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProforma.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosProforma.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosProforma.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proforma =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.proforma =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualProforma(this.getproforma(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);

				this.usuarioBeanSwingJInternalFrame=new UsuarioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.usuarioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.usuarioBeanSwingJInternalFrame.getUsuarioLogic().setConnexion(this.proformaLogic.getConnexion());

				if(this.proforma.getid_usuario()!=null) {
					this.usuarioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.usuarioBeanSwingJInternalFrame.setIdActual(this.proforma.getid_usuario());
					this.usuarioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.usuarioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.usuarioBeanSwingJInternalFrame.inicializarActualizarBindingTablaUsuario();
				}

				JInternalFrameBase jinternalFrame =this.usuarioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderProforma=(TitledBorder)this.jScrollPanelDatosProforma.getBorder();
				TitledBorder titledBorderusuario=(TitledBorder)this.usuarioBeanSwingJInternalFrame.jScrollPanelDatosUsuario.getBorder();

				titledBorderusuario.setTitle(titledBorderProforma.getTitle() + " -> Usuario");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_usuarioProformaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProforma.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProforma(this.getproforma(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.proforma =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.proforma =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.proforma==null) {
						this.proforma = new Proforma();
					}

					this.setVariablesFormularioToObjetoActualProforma(this.proforma,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
				}

				if(this.proforma.getid_usuario()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_usuario = "+this.proforma.getid_usuario().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProforma(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_ejercicioProformaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoejercicio=true;

			idTienePermisoejercicio=this.tienePermisosUsuarioEnPaginaWebProforma(EjercicioConstantesFunciones.CLASSNAME);

			if(idTienePermisoejercicio) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProforma.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosProforma.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosProforma.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proforma =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.proforma =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualProforma(this.getproforma(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);

				this.ejercicioBeanSwingJInternalFrame=new EjercicioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.ejercicioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.ejercicioBeanSwingJInternalFrame.getEjercicioLogic().setConnexion(this.proformaLogic.getConnexion());

				if(this.proforma.getid_ejercicio()!=null) {
					this.ejercicioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.ejercicioBeanSwingJInternalFrame.setIdActual(this.proforma.getid_ejercicio());
					this.ejercicioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.ejercicioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.ejercicioBeanSwingJInternalFrame.inicializarActualizarBindingTablaEjercicio();
				}

				JInternalFrameBase jinternalFrame =this.ejercicioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderProforma=(TitledBorder)this.jScrollPanelDatosProforma.getBorder();
				TitledBorder titledBorderejercicio=(TitledBorder)this.ejercicioBeanSwingJInternalFrame.jScrollPanelDatosEjercicio.getBorder();

				titledBorderejercicio.setTitle(titledBorderProforma.getTitle() + " -> Ejercicio");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_ejercicioProformaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProforma.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProforma(this.getproforma(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.proforma =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.proforma =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.proforma==null) {
						this.proforma = new Proforma();
					}

					this.setVariablesFormularioToObjetoActualProforma(this.proforma,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
				}

				if(this.proforma.getid_ejercicio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_ejercicio = "+this.proforma.getid_ejercicio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProforma(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_periodoProformaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoperiodo=true;

			idTienePermisoperiodo=this.tienePermisosUsuarioEnPaginaWebProforma(PeriodoConstantesFunciones.CLASSNAME);

			if(idTienePermisoperiodo) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProforma.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosProforma.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosProforma.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proforma =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.proforma =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualProforma(this.getproforma(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);

				this.periodoBeanSwingJInternalFrame=new PeriodoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.periodoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.periodoBeanSwingJInternalFrame.getPeriodoLogic().setConnexion(this.proformaLogic.getConnexion());

				if(this.proforma.getid_periodo()!=null) {
					this.periodoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.periodoBeanSwingJInternalFrame.setIdActual(this.proforma.getid_periodo());
					this.periodoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.periodoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.periodoBeanSwingJInternalFrame.inicializarActualizarBindingTablaPeriodo();
				}

				JInternalFrameBase jinternalFrame =this.periodoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderProforma=(TitledBorder)this.jScrollPanelDatosProforma.getBorder();
				TitledBorder titledBorderperiodo=(TitledBorder)this.periodoBeanSwingJInternalFrame.jScrollPanelDatosPeriodo.getBorder();

				titledBorderperiodo.setTitle(titledBorderProforma.getTitle() + " -> Periodo");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_periodoProformaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProforma.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProforma(this.getproforma(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.proforma =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.proforma =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.proforma==null) {
						this.proforma = new Proforma();
					}

					this.setVariablesFormularioToObjetoActualProforma(this.proforma,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
				}

				if(this.proforma.getid_periodo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_periodo = "+this.proforma.getid_periodo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProforma(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_anioProformaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoanio=true;

			idTienePermisoanio=this.tienePermisosUsuarioEnPaginaWebProforma(AnioConstantesFunciones.CLASSNAME);

			if(idTienePermisoanio) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProforma.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosProforma.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosProforma.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proforma =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.proforma =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualProforma(this.getproforma(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);

				this.anioBeanSwingJInternalFrame=new AnioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.anioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.anioBeanSwingJInternalFrame.getAnioLogic().setConnexion(this.proformaLogic.getConnexion());

				if(this.proforma.getid_anio()!=null) {
					this.anioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.anioBeanSwingJInternalFrame.setIdActual(this.proforma.getid_anio());
					this.anioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.anioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.anioBeanSwingJInternalFrame.inicializarActualizarBindingTablaAnio();
				}

				JInternalFrameBase jinternalFrame =this.anioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderProforma=(TitledBorder)this.jScrollPanelDatosProforma.getBorder();
				TitledBorder titledBorderanio=(TitledBorder)this.anioBeanSwingJInternalFrame.jScrollPanelDatosAnio.getBorder();

				titledBorderanio.setTitle(titledBorderProforma.getTitle() + " -> Anio");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_anioProformaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProforma.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProforma(this.getproforma(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.proforma =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.proforma =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.proforma==null) {
						this.proforma = new Proforma();
					}

					this.setVariablesFormularioToObjetoActualProforma(this.proforma,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
				}

				if(this.proforma.getid_anio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_anio = "+this.proforma.getid_anio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProforma(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_mesProformaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisomes=true;

			idTienePermisomes=this.tienePermisosUsuarioEnPaginaWebProforma(MesConstantesFunciones.CLASSNAME);

			if(idTienePermisomes) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProforma.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosProforma.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosProforma.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proforma =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.proforma =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualProforma(this.getproforma(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);

				this.mesBeanSwingJInternalFrame=new MesBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.mesBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.mesBeanSwingJInternalFrame.getMesLogic().setConnexion(this.proformaLogic.getConnexion());

				if(this.proforma.getid_mes()!=null) {
					this.mesBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.mesBeanSwingJInternalFrame.setIdActual(this.proforma.getid_mes());
					this.mesBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.mesBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.mesBeanSwingJInternalFrame.inicializarActualizarBindingTablaMes();
				}

				JInternalFrameBase jinternalFrame =this.mesBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderProforma=(TitledBorder)this.jScrollPanelDatosProforma.getBorder();
				TitledBorder titledBordermes=(TitledBorder)this.mesBeanSwingJInternalFrame.jScrollPanelDatosMes.getBorder();

				titledBordermes.setTitle(titledBorderProforma.getTitle() + " -> Mes");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_mesProformaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProforma.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProforma(this.getproforma(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.proforma =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.proforma =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.proforma==null) {
						this.proforma = new Proforma();
					}

					this.setVariablesFormularioToObjetoActualProforma(this.proforma,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
				}

				if(this.proforma.getid_mes()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_mes = "+this.proforma.getid_mes().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProforma(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnumero_pre_impresoProformaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProforma.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProforma(this.getproforma(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.proforma =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.proforma =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.proforma==null) {
						this.proforma = new Proforma();
					}

					this.setVariablesFormularioToObjetoActualProforma(this.proforma,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
				}

				if(this.proforma.getnumero_pre_impreso()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where numero_pre_impreso like '%"+this.proforma.getnumero_pre_impreso()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProforma(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfecha_emisionProformaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProforma.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProforma(this.getproforma(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.proforma =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.proforma =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.proforma==null) {
						this.proforma = new Proforma();
					}

					this.setVariablesFormularioToObjetoActualProforma(this.proforma,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
				}

				if(this.proforma.getfecha_emision()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha_emision = '"+Funciones2.getStringPostgresDate(this.proforma.getfecha_emision())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProforma(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtondiasProformaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProforma.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProforma(this.getproforma(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.proforma =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.proforma =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.proforma==null) {
						this.proforma = new Proforma();
					}

					this.setVariablesFormularioToObjetoActualProforma(this.proforma,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
				}

				if(this.proforma.getdias()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where dias = "+this.proforma.getdias().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProforma(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfecha_vencimientoProformaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProforma.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProforma(this.getproforma(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.proforma =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.proforma =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.proforma==null) {
						this.proforma = new Proforma();
					}

					this.setVariablesFormularioToObjetoActualProforma(this.proforma,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
				}

				if(this.proforma.getfecha_vencimiento()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha_vencimiento = '"+Funciones2.getStringPostgresDate(this.proforma.getfecha_vencimiento())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProforma(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_monedaProformaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisomoneda=true;

			idTienePermisomoneda=this.tienePermisosUsuarioEnPaginaWebProforma(MonedaConstantesFunciones.CLASSNAME);

			if(idTienePermisomoneda) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProforma.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosProforma.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosProforma.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proforma =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.proforma =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualProforma(this.getproforma(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);

				this.monedaBeanSwingJInternalFrame=new MonedaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.monedaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.monedaBeanSwingJInternalFrame.getMonedaLogic().setConnexion(this.proformaLogic.getConnexion());

				if(this.proforma.getid_moneda()!=null) {
					this.monedaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.monedaBeanSwingJInternalFrame.setIdActual(this.proforma.getid_moneda());
					this.monedaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.monedaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.monedaBeanSwingJInternalFrame.inicializarActualizarBindingTablaMoneda();
				}

				JInternalFrameBase jinternalFrame =this.monedaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderProforma=(TitledBorder)this.jScrollPanelDatosProforma.getBorder();
				TitledBorder titledBordermoneda=(TitledBorder)this.monedaBeanSwingJInternalFrame.jScrollPanelDatosMoneda.getBorder();

				titledBordermoneda.setTitle(titledBorderProforma.getTitle() + " -> Moneda");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_monedaProformaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProforma.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProforma(this.getproforma(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.proforma =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.proforma =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.proforma==null) {
						this.proforma = new Proforma();
					}

					this.setVariablesFormularioToObjetoActualProforma(this.proforma,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
				}

				if(this.proforma.getid_moneda()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_moneda = "+this.proforma.getid_moneda().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProforma(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncotizacionProformaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProforma.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProforma(this.getproforma(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.proforma =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.proforma =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.proforma==null) {
						this.proforma = new Proforma();
					}

					this.setVariablesFormularioToObjetoActualProforma(this.proforma,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
				}

				if(this.proforma.getcotizacion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where cotizacion = "+this.proforma.getcotizacion().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProforma(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_empleadoProformaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.empleadoBeanSwingJInternalFrame=new EmpleadoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.empleadoBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.empleadoBeanSwingJInternalFrame.sTipoBusqueda="Empleado";

			if(!this.sFinalQueryGeneral_empleado.equals("")) {
				this.empleadoBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_empleado);
				this.empleadoBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.empleadoBeanSwingJInternalFrame.procesarBusqueda(this.empleadoBeanSwingJInternalFrame.sAccionBusqueda);
				this.empleadoBeanSwingJInternalFrame.inicializarActualizarBindingEmpleado(false);
			}

			if(!this.sFinalQueryComboEmpleado.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.empleadoBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderProforma=null;
			TitledBorder titledBorderempleado=null;

			if(!this.jScrollPanelDatosProforma.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderProforma=(TitledBorder)this.jScrollPanelDatosProforma.getBorder();
				titledBorderempleado=(TitledBorder)this.empleadoBeanSwingJInternalFrame.jScrollPanelDatosEmpleado.getBorder();

				titledBorderempleado.setTitle(titledBorderProforma.getTitle() + " -> Empleado");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_empleadoProformaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoempleado=true;

			idTienePermisoempleado=this.tienePermisosUsuarioEnPaginaWebProforma(EmpleadoConstantesFunciones.CLASSNAME);

			if(idTienePermisoempleado) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProforma.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosProforma.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosProforma.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proforma =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.proforma =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualProforma(this.getproforma(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);

				this.empleadoBeanSwingJInternalFrame=new EmpleadoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.empleadoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.empleadoBeanSwingJInternalFrame.getEmpleadoLogic().setConnexion(this.proformaLogic.getConnexion());

				if(this.proforma.getid_empleado()!=null) {
					this.empleadoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.empleadoBeanSwingJInternalFrame.setIdActual(this.proforma.getid_empleado());
					this.empleadoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.empleadoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.empleadoBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpleado();
				}

				JInternalFrameBase jinternalFrame =this.empleadoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderProforma=(TitledBorder)this.jScrollPanelDatosProforma.getBorder();
				TitledBorder titledBorderempleado=(TitledBorder)this.empleadoBeanSwingJInternalFrame.jScrollPanelDatosEmpleado.getBorder();

				titledBorderempleado.setTitle(titledBorderProforma.getTitle() + " -> Empleado");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_empleadoProformaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProforma.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProforma(this.getproforma(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.proforma =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.proforma =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.proforma==null) {
						this.proforma = new Proforma();
					}

					this.setVariablesFormularioToObjetoActualProforma(this.proforma,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
				}

				if(this.proforma.getid_empleado()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_empleado = "+this.proforma.getid_empleado().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProforma(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_formatoProformaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoformato=true;

			idTienePermisoformato=this.tienePermisosUsuarioEnPaginaWebProforma(FormatoConstantesFunciones.CLASSNAME);

			if(idTienePermisoformato) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProforma.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosProforma.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosProforma.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proforma =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.proforma =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualProforma(this.getproforma(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);

				this.formatoBeanSwingJInternalFrame=new FormatoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.formatoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.formatoBeanSwingJInternalFrame.getFormatoLogic().setConnexion(this.proformaLogic.getConnexion());

				if(this.proforma.getid_formato()!=null) {
					this.formatoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.formatoBeanSwingJInternalFrame.setIdActual(this.proforma.getid_formato());
					this.formatoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.formatoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.formatoBeanSwingJInternalFrame.inicializarActualizarBindingTablaFormato();
				}

				JInternalFrameBase jinternalFrame =this.formatoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderProforma=(TitledBorder)this.jScrollPanelDatosProforma.getBorder();
				TitledBorder titledBorderformato=(TitledBorder)this.formatoBeanSwingJInternalFrame.jScrollPanelDatosFormato.getBorder();

				titledBorderformato.setTitle(titledBorderProforma.getTitle() + " -> Formato");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_formatoProformaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProforma.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProforma(this.getproforma(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.proforma =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.proforma =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.proforma==null) {
						this.proforma = new Proforma();
					}

					this.setVariablesFormularioToObjetoActualProforma(this.proforma,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
				}

				if(this.proforma.getid_formato()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_formato = "+this.proforma.getid_formato().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProforma(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_estado_proformaProformaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoestadoproforma=true;

			idTienePermisoestadoproforma=this.tienePermisosUsuarioEnPaginaWebProforma(EstadoProformaConstantesFunciones.CLASSNAME);

			if(idTienePermisoestadoproforma) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProforma.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosProforma.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosProforma.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proforma =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.proforma =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualProforma(this.getproforma(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);

				this.estadoproformaBeanSwingJInternalFrame=new EstadoProformaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.estadoproformaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.estadoproformaBeanSwingJInternalFrame.getEstadoProformaLogic().setConnexion(this.proformaLogic.getConnexion());

				if(this.proforma.getid_estado_proforma()!=null) {
					this.estadoproformaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.estadoproformaBeanSwingJInternalFrame.setIdActual(this.proforma.getid_estado_proforma());
					this.estadoproformaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.estadoproformaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.estadoproformaBeanSwingJInternalFrame.inicializarActualizarBindingTablaEstadoProforma();
				}

				JInternalFrameBase jinternalFrame =this.estadoproformaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderProforma=(TitledBorder)this.jScrollPanelDatosProforma.getBorder();
				TitledBorder titledBorderestadoproforma=(TitledBorder)this.estadoproformaBeanSwingJInternalFrame.jScrollPanelDatosEstadoProforma.getBorder();

				titledBorderestadoproforma.setTitle(titledBorderProforma.getTitle() + " -> Estado Proforma");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_estado_proformaProformaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProforma.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProforma(this.getproforma(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.proforma =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.proforma =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.proforma==null) {
						this.proforma = new Proforma();
					}

					this.setVariablesFormularioToObjetoActualProforma(this.proforma,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
				}

				if(this.proforma.getid_estado_proforma()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_estado_proforma = "+this.proforma.getid_estado_proforma().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProforma(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtondireccionProformaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProforma.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProforma(this.getproforma(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.proforma =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.proforma =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.proforma==null) {
						this.proforma = new Proforma();
					}

					this.setVariablesFormularioToObjetoActualProforma(this.proforma,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
				}

				if(this.proforma.getdireccion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where direccion like '%"+this.proforma.getdireccion()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProforma(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_clienteProformaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.clienteBeanSwingJInternalFrame=new ClienteBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.clienteBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.clienteBeanSwingJInternalFrame.sTipoBusqueda="Cliente";

			if(!this.sFinalQueryGeneral_cliente.equals("")) {
				this.clienteBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_cliente);
				this.clienteBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.clienteBeanSwingJInternalFrame.procesarBusqueda(this.clienteBeanSwingJInternalFrame.sAccionBusqueda);
				this.clienteBeanSwingJInternalFrame.inicializarActualizarBindingCliente(false);
			}

			if(!this.sFinalQueryComboCliente.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.clienteBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderProforma=null;
			TitledBorder titledBordercliente=null;

			if(!this.jScrollPanelDatosProforma.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderProforma=(TitledBorder)this.jScrollPanelDatosProforma.getBorder();
				titledBordercliente=(TitledBorder)this.clienteBeanSwingJInternalFrame.jScrollPanelDatosCliente.getBorder();

				titledBordercliente.setTitle(titledBorderProforma.getTitle() + " -> Cliente");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_clienteProformaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocliente=true;

			idTienePermisocliente=this.tienePermisosUsuarioEnPaginaWebProforma(ClienteConstantesFunciones.CLASSNAME);

			if(idTienePermisocliente) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProforma.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosProforma.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosProforma.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proforma =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.proforma =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualProforma(this.getproforma(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);

				this.clienteBeanSwingJInternalFrame=new ClienteBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.clienteBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.clienteBeanSwingJInternalFrame.getClienteLogic().setConnexion(this.proformaLogic.getConnexion());

				if(this.proforma.getid_cliente()!=null) {
					this.clienteBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.clienteBeanSwingJInternalFrame.setIdActual(this.proforma.getid_cliente());
					this.clienteBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.clienteBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.clienteBeanSwingJInternalFrame.inicializarActualizarBindingTablaCliente();
				}

				JInternalFrameBase jinternalFrame =this.clienteBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderProforma=(TitledBorder)this.jScrollPanelDatosProforma.getBorder();
				TitledBorder titledBordercliente=(TitledBorder)this.clienteBeanSwingJInternalFrame.jScrollPanelDatosCliente.getBorder();

				titledBordercliente.setTitle(titledBorderProforma.getTitle() + " -> Cliente");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_clienteProformaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProforma.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProforma(this.getproforma(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.proforma =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.proforma =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.proforma==null) {
						this.proforma = new Proforma();
					}

					this.setVariablesFormularioToObjetoActualProforma(this.proforma,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
				}

				if(this.proforma.getid_cliente()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cliente = "+this.proforma.getid_cliente().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProforma(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonrucProformaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProforma.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProforma(this.getproforma(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.proforma =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.proforma =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.proforma==null) {
						this.proforma = new Proforma();
					}

					this.setVariablesFormularioToObjetoActualProforma(this.proforma,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
				}

				if(this.proforma.getruc()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where ruc like '%"+this.proforma.getruc()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProforma(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtones_ofertaProformaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProforma.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProforma(this.getproforma(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.proforma =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.proforma =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.proforma==null) {
						this.proforma = new Proforma();
					}

					this.setVariablesFormularioToObjetoActualProforma(this.proforma,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
				}

				if(this.proforma.getes_oferta()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where es_oferta = "+this.proforma.getes_oferta().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProforma(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtontelefonoProformaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProforma.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProforma(this.getproforma(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.proforma =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.proforma =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.proforma==null) {
						this.proforma = new Proforma();
					}

					this.setVariablesFormularioToObjetoActualProforma(this.proforma,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
				}

				if(this.proforma.gettelefono()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where telefono like '%"+this.proforma.gettelefono()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProforma(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_precioProformaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipoprecio=true;

			idTienePermisotipoprecio=this.tienePermisosUsuarioEnPaginaWebProforma(TipoPrecioConstantesFunciones.CLASSNAME);

			if(idTienePermisotipoprecio) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProforma.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosProforma.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosProforma.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proforma =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.proforma =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualProforma(this.getproforma(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);

				this.tipoprecioBeanSwingJInternalFrame=new TipoPrecioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipoprecioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipoprecioBeanSwingJInternalFrame.getTipoPrecioLogic().setConnexion(this.proformaLogic.getConnexion());

				if(this.proforma.getid_tipo_precio()!=null) {
					this.tipoprecioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipoprecioBeanSwingJInternalFrame.setIdActual(this.proforma.getid_tipo_precio());
					this.tipoprecioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipoprecioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipoprecioBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoPrecio();
				}

				JInternalFrameBase jinternalFrame =this.tipoprecioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderProforma=(TitledBorder)this.jScrollPanelDatosProforma.getBorder();
				TitledBorder titledBordertipoprecio=(TitledBorder)this.tipoprecioBeanSwingJInternalFrame.jScrollPanelDatosTipoPrecio.getBorder();

				titledBordertipoprecio.setTitle(titledBorderProforma.getTitle() + " -> Tipo Precio");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_precioProformaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProforma.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProforma(this.getproforma(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.proforma =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.proforma =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.proforma==null) {
						this.proforma = new Proforma();
					}

					this.setVariablesFormularioToObjetoActualProforma(this.proforma,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
				}

				if(this.proforma.getid_tipo_precio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_precio = "+this.proforma.getid_tipo_precio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProforma(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_vendedorProformaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.vendedorBeanSwingJInternalFrame=new VendedorBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.vendedorBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.vendedorBeanSwingJInternalFrame.sTipoBusqueda="Vendedor";

			if(!this.sFinalQueryGeneral_vendedor.equals("")) {
				this.vendedorBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_vendedor);
				this.vendedorBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.vendedorBeanSwingJInternalFrame.procesarBusqueda(this.vendedorBeanSwingJInternalFrame.sAccionBusqueda);
				this.vendedorBeanSwingJInternalFrame.inicializarActualizarBindingVendedor(false);
			}

			if(!this.sFinalQueryComboVendedor.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.vendedorBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderProforma=null;
			TitledBorder titledBordervendedor=null;

			if(!this.jScrollPanelDatosProforma.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderProforma=(TitledBorder)this.jScrollPanelDatosProforma.getBorder();
				titledBordervendedor=(TitledBorder)this.vendedorBeanSwingJInternalFrame.jScrollPanelDatosVendedor.getBorder();

				titledBordervendedor.setTitle(titledBorderProforma.getTitle() + " -> Vendedor");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_vendedorProformaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisovendedor=true;

			idTienePermisovendedor=this.tienePermisosUsuarioEnPaginaWebProforma(VendedorConstantesFunciones.CLASSNAME);

			if(idTienePermisovendedor) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProforma.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosProforma.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosProforma.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proforma =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.proforma =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualProforma(this.getproforma(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);

				this.vendedorBeanSwingJInternalFrame=new VendedorBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.vendedorBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.vendedorBeanSwingJInternalFrame.getVendedorLogic().setConnexion(this.proformaLogic.getConnexion());

				if(this.proforma.getid_vendedor()!=null) {
					this.vendedorBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.vendedorBeanSwingJInternalFrame.setIdActual(this.proforma.getid_vendedor());
					this.vendedorBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.vendedorBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.vendedorBeanSwingJInternalFrame.inicializarActualizarBindingTablaVendedor();
				}

				JInternalFrameBase jinternalFrame =this.vendedorBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderProforma=(TitledBorder)this.jScrollPanelDatosProforma.getBorder();
				TitledBorder titledBordervendedor=(TitledBorder)this.vendedorBeanSwingJInternalFrame.jScrollPanelDatosVendedor.getBorder();

				titledBordervendedor.setTitle(titledBorderProforma.getTitle() + " -> Vendedor");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_vendedorProformaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProforma.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProforma(this.getproforma(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.proforma =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.proforma =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.proforma==null) {
						this.proforma = new Proforma();
					}

					this.setVariablesFormularioToObjetoActualProforma(this.proforma,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
				}

				if(this.proforma.getid_vendedor()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_vendedor = "+this.proforma.getid_vendedor().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProforma(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_sub_clienteProformaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisosubcliente=true;

			idTienePermisosubcliente=this.tienePermisosUsuarioEnPaginaWebProforma(SubClienteConstantesFunciones.CLASSNAME);

			if(idTienePermisosubcliente) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProforma.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosProforma.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosProforma.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proforma =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.proforma =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualProforma(this.getproforma(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);

				this.subclienteBeanSwingJInternalFrame=new SubClienteBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.subclienteBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.subclienteBeanSwingJInternalFrame.getSubClienteLogic().setConnexion(this.proformaLogic.getConnexion());

				if(this.proforma.getid_sub_cliente()!=null) {
					this.subclienteBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.subclienteBeanSwingJInternalFrame.setIdActual(this.proforma.getid_sub_cliente());
					this.subclienteBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.subclienteBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.subclienteBeanSwingJInternalFrame.inicializarActualizarBindingTablaSubCliente();
				}

				JInternalFrameBase jinternalFrame =this.subclienteBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderProforma=(TitledBorder)this.jScrollPanelDatosProforma.getBorder();
				TitledBorder titledBordersubcliente=(TitledBorder)this.subclienteBeanSwingJInternalFrame.jScrollPanelDatosSubCliente.getBorder();

				titledBordersubcliente.setTitle(titledBorderProforma.getTitle() + " -> Sub Cliente");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_sub_clienteProformaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProforma.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProforma(this.getproforma(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.proforma =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.proforma =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.proforma==null) {
						this.proforma = new Proforma();
					}

					this.setVariablesFormularioToObjetoActualProforma(this.proforma,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
				}

				if(this.proforma.getid_sub_cliente()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_sub_cliente = "+this.proforma.getid_sub_cliente().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProforma(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_via_transporteProformaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipoviatransporte=true;

			idTienePermisotipoviatransporte=this.tienePermisosUsuarioEnPaginaWebProforma(TipoViaTransporteConstantesFunciones.CLASSNAME);

			if(idTienePermisotipoviatransporte) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProforma.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosProforma.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosProforma.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proforma =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.proforma =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualProforma(this.getproforma(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);

				this.tipoviatransporteBeanSwingJInternalFrame=new TipoViaTransporteBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipoviatransporteBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipoviatransporteBeanSwingJInternalFrame.getTipoViaTransporteLogic().setConnexion(this.proformaLogic.getConnexion());

				if(this.proforma.getid_tipo_via_transporte()!=null) {
					this.tipoviatransporteBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipoviatransporteBeanSwingJInternalFrame.setIdActual(this.proforma.getid_tipo_via_transporte());
					this.tipoviatransporteBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipoviatransporteBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipoviatransporteBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoViaTransporte();
				}

				JInternalFrameBase jinternalFrame =this.tipoviatransporteBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderProforma=(TitledBorder)this.jScrollPanelDatosProforma.getBorder();
				TitledBorder titledBordertipoviatransporte=(TitledBorder)this.tipoviatransporteBeanSwingJInternalFrame.jScrollPanelDatosTipoViaTransporte.getBorder();

				titledBordertipoviatransporte.setTitle(titledBorderProforma.getTitle() + " -> Tipo Via Transporte");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_via_transporteProformaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProforma.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProforma(this.getproforma(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.proforma =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.proforma =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.proforma==null) {
						this.proforma = new Proforma();
					}

					this.setVariablesFormularioToObjetoActualProforma(this.proforma,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
				}

				if(this.proforma.getid_tipo_via_transporte()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_via_transporte = "+this.proforma.getid_tipo_via_transporte().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProforma(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_transporteProformaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotransporte=true;

			idTienePermisotransporte=this.tienePermisosUsuarioEnPaginaWebProforma(TransporteConstantesFunciones.CLASSNAME);

			if(idTienePermisotransporte) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProforma.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosProforma.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosProforma.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proforma =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.proforma =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualProforma(this.getproforma(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);

				this.transporteBeanSwingJInternalFrame=new TransporteBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.transporteBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.transporteBeanSwingJInternalFrame.getTransporteLogic().setConnexion(this.proformaLogic.getConnexion());

				if(this.proforma.getid_transporte()!=null) {
					this.transporteBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.transporteBeanSwingJInternalFrame.setIdActual(this.proforma.getid_transporte());
					this.transporteBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.transporteBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.transporteBeanSwingJInternalFrame.inicializarActualizarBindingTablaTransporte();
				}

				JInternalFrameBase jinternalFrame =this.transporteBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderProforma=(TitledBorder)this.jScrollPanelDatosProforma.getBorder();
				TitledBorder titledBordertransporte=(TitledBorder)this.transporteBeanSwingJInternalFrame.jScrollPanelDatosTransporte.getBorder();

				titledBordertransporte.setTitle(titledBorderProforma.getTitle() + " -> Transporte");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_transporteProformaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProforma.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProforma(this.getproforma(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.proforma =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.proforma =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.proforma==null) {
						this.proforma = new Proforma();
					}

					this.setVariablesFormularioToObjetoActualProforma(this.proforma,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
				}

				if(this.proforma.getid_transporte()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_transporte = "+this.proforma.getid_transporte().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProforma(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_ruta_transporteProformaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisorutatransporte=true;

			idTienePermisorutatransporte=this.tienePermisosUsuarioEnPaginaWebProforma(RutaTransporteConstantesFunciones.CLASSNAME);

			if(idTienePermisorutatransporte) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProforma.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosProforma.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosProforma.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proforma =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.proforma =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualProforma(this.getproforma(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);

				this.rutatransporteBeanSwingJInternalFrame=new RutaTransporteBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.rutatransporteBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.rutatransporteBeanSwingJInternalFrame.getRutaTransporteLogic().setConnexion(this.proformaLogic.getConnexion());

				if(this.proforma.getid_ruta_transporte()!=null) {
					this.rutatransporteBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.rutatransporteBeanSwingJInternalFrame.setIdActual(this.proforma.getid_ruta_transporte());
					this.rutatransporteBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.rutatransporteBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.rutatransporteBeanSwingJInternalFrame.inicializarActualizarBindingTablaRutaTransporte();
				}

				JInternalFrameBase jinternalFrame =this.rutatransporteBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderProforma=(TitledBorder)this.jScrollPanelDatosProforma.getBorder();
				TitledBorder titledBorderrutatransporte=(TitledBorder)this.rutatransporteBeanSwingJInternalFrame.jScrollPanelDatosRutaTransporte.getBorder();

				titledBorderrutatransporte.setTitle(titledBorderProforma.getTitle() + " -> Ruta Transporte");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_ruta_transporteProformaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProforma.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProforma(this.getproforma(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.proforma =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.proforma =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.proforma==null) {
						this.proforma = new Proforma();
					}

					this.setVariablesFormularioToObjetoActualProforma(this.proforma,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
				}

				if(this.proforma.getid_ruta_transporte()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_ruta_transporte = "+this.proforma.getid_ruta_transporte().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProforma(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtondescripcionProformaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProforma.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProforma(this.getproforma(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.proforma =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.proforma =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.proforma==null) {
						this.proforma = new Proforma();
					}

					this.setVariablesFormularioToObjetoActualProforma(this.proforma,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
				}

				if(this.proforma.getdescripcion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where descripcion like '%"+this.proforma.getdescripcion()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProforma(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtondescuento_porcentajeProformaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProforma.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProforma(this.getproforma(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.proforma =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.proforma =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.proforma==null) {
						this.proforma = new Proforma();
					}

					this.setVariablesFormularioToObjetoActualProforma(this.proforma,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
				}

				if(this.proforma.getdescuento_porcentaje()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where descuento_porcentaje = "+this.proforma.getdescuento_porcentaje().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProforma(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonmonto_con_ivaProformaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProforma.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProforma(this.getproforma(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.proforma =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.proforma =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.proforma==null) {
						this.proforma = new Proforma();
					}

					this.setVariablesFormularioToObjetoActualProforma(this.proforma,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
				}

				if(this.proforma.getmonto_con_iva()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where monto_con_iva = "+this.proforma.getmonto_con_iva().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProforma(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonsumanProformaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProforma.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProforma(this.getproforma(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.proforma =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.proforma =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.proforma==null) {
						this.proforma = new Proforma();
					}

					this.setVariablesFormularioToObjetoActualProforma(this.proforma,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
				}

				if(this.proforma.getsuman()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where suman = "+this.proforma.getsuman().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProforma(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtondescuento_valorProformaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProforma.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProforma(this.getproforma(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.proforma =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.proforma =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.proforma==null) {
						this.proforma = new Proforma();
					}

					this.setVariablesFormularioToObjetoActualProforma(this.proforma,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
				}

				if(this.proforma.getdescuento_valor()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where descuento_valor = "+this.proforma.getdescuento_valor().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProforma(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonmonto_sin_ivaProformaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProforma.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProforma(this.getproforma(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.proforma =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.proforma =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.proforma==null) {
						this.proforma = new Proforma();
					}

					this.setVariablesFormularioToObjetoActualProforma(this.proforma,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
				}

				if(this.proforma.getmonto_sin_iva()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where monto_sin_iva = "+this.proforma.getmonto_sin_iva().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProforma(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtondescuento_generalProformaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProforma.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProforma(this.getproforma(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.proforma =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.proforma =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.proforma==null) {
						this.proforma = new Proforma();
					}

					this.setVariablesFormularioToObjetoActualProforma(this.proforma,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
				}

				if(this.proforma.getdescuento_general()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where descuento_general = "+this.proforma.getdescuento_general().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProforma(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfleteProformaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProforma.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProforma(this.getproforma(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.proforma =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.proforma =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.proforma==null) {
						this.proforma = new Proforma();
					}

					this.setVariablesFormularioToObjetoActualProforma(this.proforma,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
				}

				if(this.proforma.getflete()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where flete = "+this.proforma.getflete().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProforma(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonultimo_costoProformaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProforma.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProforma(this.getproforma(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.proforma =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.proforma =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.proforma==null) {
						this.proforma = new Proforma();
					}

					this.setVariablesFormularioToObjetoActualProforma(this.proforma,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
				}

				if(this.proforma.getultimo_costo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where ultimo_costo = "+this.proforma.getultimo_costo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProforma(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonsubtotalProformaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProforma.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProforma(this.getproforma(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.proforma =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.proforma =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.proforma==null) {
						this.proforma = new Proforma();
					}

					this.setVariablesFormularioToObjetoActualProforma(this.proforma,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
				}

				if(this.proforma.getsubtotal()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where subtotal = "+this.proforma.getsubtotal().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProforma(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonotros_cargosProformaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProforma.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProforma(this.getproforma(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.proforma =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.proforma =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.proforma==null) {
						this.proforma = new Proforma();
					}

					this.setVariablesFormularioToObjetoActualProforma(this.proforma,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
				}

				if(this.proforma.getotros_cargos()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where otros_cargos = "+this.proforma.getotros_cargos().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProforma(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonmargen_utilidadProformaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProforma.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProforma(this.getproforma(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.proforma =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.proforma =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.proforma==null) {
						this.proforma = new Proforma();
					}

					this.setVariablesFormularioToObjetoActualProforma(this.proforma,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
				}

				if(this.proforma.getmargen_utilidad()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where margen_utilidad = "+this.proforma.getmargen_utilidad().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProforma(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonivaProformaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProforma.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProforma(this.getproforma(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.proforma =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.proforma =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.proforma==null) {
						this.proforma = new Proforma();
					}

					this.setVariablesFormularioToObjetoActualProforma(this.proforma,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
				}

				if(this.proforma.getiva()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where iva = "+this.proforma.getiva().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProforma(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfinanciamientoProformaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProforma.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProforma(this.getproforma(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.proforma =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.proforma =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.proforma==null) {
						this.proforma = new Proforma();
					}

					this.setVariablesFormularioToObjetoActualProforma(this.proforma,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
				}

				if(this.proforma.getfinanciamiento()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where financiamiento = "+this.proforma.getfinanciamiento().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProforma(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtontotalProformaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProforma.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProforma(this.getproforma(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.proforma =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.proforma =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.proforma==null) {
						this.proforma = new Proforma();
					}

					this.setVariablesFormularioToObjetoActualProforma(this.proforma,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
				}

				if(this.proforma.gettotal()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where total = "+this.proforma.gettotal().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProforma(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonotros_valoresProformaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProforma.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProforma(this.getproforma(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.proforma =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.proforma =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.proforma==null) {
						this.proforma = new Proforma();
					}

					this.setVariablesFormularioToObjetoActualProforma(this.proforma,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
				}

				if(this.proforma.getotros_valores()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where otros_valores = "+this.proforma.getotros_valores().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProforma(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonanticipoProformaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProforma.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProforma(this.getproforma(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.proforma =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.proforma =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.proforma==null) {
						this.proforma = new Proforma();
					}

					this.setVariablesFormularioToObjetoActualProforma(this.proforma,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
				}

				if(this.proforma.getanticipo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where anticipo = "+this.proforma.getanticipo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProforma(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoniceProformaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProforma.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProforma(this.getproforma(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.proforma =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.proforma =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.proforma==null) {
						this.proforma = new Proforma();
					}

					this.setVariablesFormularioToObjetoActualProforma(this.proforma,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
				}

				if(this.proforma.getice()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where ice = "+this.proforma.getice().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProforma(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonmonto_retencionProformaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProforma.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProforma(this.getproforma(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.proforma =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.proforma =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.proforma==null) {
						this.proforma = new Proforma();
					}

					this.setVariablesFormularioToObjetoActualProforma(this.proforma,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
				}

				if(this.proforma.getmonto_retencion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where monto_retencion = "+this.proforma.getmonto_retencion().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProforma(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfechaProformaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProforma.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProforma(this.getproforma(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.proforma =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.proforma =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.proforma==null) {
						this.proforma = new Proforma();
					}

					this.setVariablesFormularioToObjetoActualProforma(this.proforma,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
				}

				if(this.proforma.getfecha()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha = '"+Funciones2.getStringPostgresDate(this.proforma.getfecha())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProforma(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfecha_servidorProformaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProforma.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProforma(this.getproforma(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.proforma =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.proforma =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.proforma==null) {
						this.proforma = new Proforma();
					}

					this.setVariablesFormularioToObjetoActualProforma(this.proforma,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
				}

				if(this.proforma.getfecha_servidor()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha_servidor = '"+Funciones2.getStringPostgresDate(this.proforma.getfecha_servidor())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProforma(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonhora_inicioProformaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProforma.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProforma(this.getproforma(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.proforma =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.proforma =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.proforma==null) {
						this.proforma = new Proforma();
					}

					this.setVariablesFormularioToObjetoActualProforma(this.proforma,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
				}

				if(this.proforma.gethora_inicio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where hora_inicio = "+this.proforma.gethora_inicio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProforma(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonhora_finProformaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProforma.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProforma(this.getproforma(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.proforma =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.proforma =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.proforma==null) {
						this.proforma = new Proforma();
					}

					this.setVariablesFormularioToObjetoActualProforma(this.proforma,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
				}

				if(this.proforma.gethora_fin()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where hora_fin = "+this.proforma.gethora_fin().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProforma(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_centro_costoProformaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.centrocostoBeanSwingJInternalFrame=new CentroCostoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.centrocostoBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.centrocostoBeanSwingJInternalFrame.sTipoBusqueda="CentroCosto";

			if(!this.sFinalQueryGeneral_centrocosto.equals("")) {
				this.centrocostoBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_centrocosto);
				this.centrocostoBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.centrocostoBeanSwingJInternalFrame.procesarBusqueda(this.centrocostoBeanSwingJInternalFrame.sAccionBusqueda);
				this.centrocostoBeanSwingJInternalFrame.inicializarActualizarBindingCentroCosto(false);
			}

			if(!this.sFinalQueryComboCentroCosto.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.centrocostoBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderProforma=null;
			TitledBorder titledBordercentrocosto=null;

			if(!this.jScrollPanelDatosProforma.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderProforma=(TitledBorder)this.jScrollPanelDatosProforma.getBorder();
				titledBordercentrocosto=(TitledBorder)this.centrocostoBeanSwingJInternalFrame.jScrollPanelDatosCentroCosto.getBorder();

				titledBordercentrocosto.setTitle(titledBorderProforma.getTitle() + " -> Centro Costo");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_centro_costoProformaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocentrocosto=true;

			idTienePermisocentrocosto=this.tienePermisosUsuarioEnPaginaWebProforma(CentroCostoConstantesFunciones.CLASSNAME);

			if(idTienePermisocentrocosto) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProforma.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosProforma.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosProforma.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proforma =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.proforma =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualProforma(this.getproforma(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);

				this.centrocostoBeanSwingJInternalFrame=new CentroCostoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.centrocostoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.centrocostoBeanSwingJInternalFrame.getCentroCostoLogic().setConnexion(this.proformaLogic.getConnexion());

				if(this.proforma.getid_centro_costo()!=null) {
					this.centrocostoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.centrocostoBeanSwingJInternalFrame.setIdActual(this.proforma.getid_centro_costo());
					this.centrocostoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.centrocostoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.centrocostoBeanSwingJInternalFrame.inicializarActualizarBindingTablaCentroCosto();
				}

				JInternalFrameBase jinternalFrame =this.centrocostoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderProforma=(TitledBorder)this.jScrollPanelDatosProforma.getBorder();
				TitledBorder titledBordercentrocosto=(TitledBorder)this.centrocostoBeanSwingJInternalFrame.jScrollPanelDatosCentroCosto.getBorder();

				titledBordercentrocosto.setTitle(titledBorderProforma.getTitle() + " -> Centro Costo");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_centro_costoProformaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProforma.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProforma(this.getproforma(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.proforma =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.proforma =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.proforma==null) {
						this.proforma = new Proforma();
					}

					this.setVariablesFormularioToObjetoActualProforma(this.proforma,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
				}

				if(this.proforma.getid_centro_costo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_centro_costo = "+this.proforma.getid_centro_costo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProforma(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_proformaProformaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipoproforma=true;

			idTienePermisotipoproforma=this.tienePermisosUsuarioEnPaginaWebProforma(TipoProformaConstantesFunciones.CLASSNAME);

			if(idTienePermisotipoproforma) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProforma.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosProforma.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosProforma.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proforma =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.proforma =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualProforma(this.getproforma(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);

				this.tipoproformaBeanSwingJInternalFrame=new TipoProformaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipoproformaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipoproformaBeanSwingJInternalFrame.getTipoProformaLogic().setConnexion(this.proformaLogic.getConnexion());

				if(this.proforma.getid_tipo_proforma()!=null) {
					this.tipoproformaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipoproformaBeanSwingJInternalFrame.setIdActual(this.proforma.getid_tipo_proforma());
					this.tipoproformaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipoproformaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipoproformaBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoProforma();
				}

				JInternalFrameBase jinternalFrame =this.tipoproformaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderProforma=(TitledBorder)this.jScrollPanelDatosProforma.getBorder();
				TitledBorder titledBordertipoproforma=(TitledBorder)this.tipoproformaBeanSwingJInternalFrame.jScrollPanelDatosTipoProforma.getBorder();

				titledBordertipoproforma.setTitle(titledBorderProforma.getTitle() + " -> Tipo Proforma");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_proformaProformaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProforma.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProforma(this.getproforma(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.proforma =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.proforma =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.proforma==null) {
						this.proforma = new Proforma();
					}

					this.setVariablesFormularioToObjetoActualProforma(this.proforma,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
				}

				if(this.proforma.getid_tipo_proforma()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_proforma = "+this.proforma.getid_tipo_proforma().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProforma(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_consignatarioProformaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoconsignatario=true;

			idTienePermisoconsignatario=this.tienePermisosUsuarioEnPaginaWebProforma(ConsignatarioConstantesFunciones.CLASSNAME);

			if(idTienePermisoconsignatario) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProforma.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosProforma.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosProforma.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proforma =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.proforma =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualProforma(this.getproforma(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);

				this.consignatarioBeanSwingJInternalFrame=new ConsignatarioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.consignatarioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.consignatarioBeanSwingJInternalFrame.getConsignatarioLogic().setConnexion(this.proformaLogic.getConnexion());

				if(this.proforma.getid_consignatario()!=null) {
					this.consignatarioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.consignatarioBeanSwingJInternalFrame.setIdActual(this.proforma.getid_consignatario());
					this.consignatarioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.consignatarioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.consignatarioBeanSwingJInternalFrame.inicializarActualizarBindingTablaConsignatario();
				}

				JInternalFrameBase jinternalFrame =this.consignatarioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderProforma=(TitledBorder)this.jScrollPanelDatosProforma.getBorder();
				TitledBorder titledBorderconsignatario=(TitledBorder)this.consignatarioBeanSwingJInternalFrame.jScrollPanelDatosConsignatario.getBorder();

				titledBorderconsignatario.setTitle(titledBorderProforma.getTitle() + " -> Consignatario");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_consignatarioProformaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProforma.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProforma(this.getproforma(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.proforma =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.proforma =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.proforma==null) {
						this.proforma = new Proforma();
					}

					this.setVariablesFormularioToObjetoActualProforma(this.proforma,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
				}

				if(this.proforma.getid_consignatario()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_consignatario = "+this.proforma.getid_consignatario().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProforma(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_cambioProformaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.tipocambioBeanSwingJInternalFrame=new TipoCambioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.tipocambioBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.tipocambioBeanSwingJInternalFrame.sTipoBusqueda="TipoCambio";

			if(!this.sFinalQueryGeneral_tipocambio.equals("")) {
				this.tipocambioBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_tipocambio);
				this.tipocambioBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.tipocambioBeanSwingJInternalFrame.procesarBusqueda(this.tipocambioBeanSwingJInternalFrame.sAccionBusqueda);
				this.tipocambioBeanSwingJInternalFrame.inicializarActualizarBindingTipoCambio(false);
			}

			if(!this.sFinalQueryComboTipoCambio.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.tipocambioBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderProforma=null;
			TitledBorder titledBordertipocambio=null;

			if(!this.jScrollPanelDatosProforma.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderProforma=(TitledBorder)this.jScrollPanelDatosProforma.getBorder();
				titledBordertipocambio=(TitledBorder)this.tipocambioBeanSwingJInternalFrame.jScrollPanelDatosTipoCambio.getBorder();

				titledBordertipocambio.setTitle(titledBorderProforma.getTitle() + " -> Tipo Cambio");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_tipo_cambioProformaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipocambio=true;

			idTienePermisotipocambio=this.tienePermisosUsuarioEnPaginaWebProforma(TipoCambioConstantesFunciones.CLASSNAME);

			if(idTienePermisotipocambio) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProforma.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosProforma.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosProforma.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proforma =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.proforma =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualProforma(this.getproforma(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);

				this.tipocambioBeanSwingJInternalFrame=new TipoCambioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipocambioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipocambioBeanSwingJInternalFrame.getTipoCambioLogic().setConnexion(this.proformaLogic.getConnexion());

				if(this.proforma.getid_tipo_cambio()!=null) {
					this.tipocambioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipocambioBeanSwingJInternalFrame.setIdActual(this.proforma.getid_tipo_cambio());
					this.tipocambioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipocambioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipocambioBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoCambio();
				}

				JInternalFrameBase jinternalFrame =this.tipocambioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderProforma=(TitledBorder)this.jScrollPanelDatosProforma.getBorder();
				TitledBorder titledBordertipocambio=(TitledBorder)this.tipocambioBeanSwingJInternalFrame.jScrollPanelDatosTipoCambio.getBorder();

				titledBordertipocambio.setTitle(titledBorderProforma.getTitle() + " -> Tipo Cambio");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_cambioProformaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosProforma.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualProforma(this.getproforma(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.proforma =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.proforma =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.proforma==null) {
						this.proforma = new Proforma();
					}

					this.setVariablesFormularioToObjetoActualProforma(this.proforma,true);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);
				}

				if(this.proforma.getid_tipo_cambio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_cambio = "+this.proforma.getid_tipo_cambio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingProforma(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaLogic.closeNewConnexionToDeep();
				}

			}
		}

	
	
	public void jButtonFK_IdAnioProformaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingProforma(false,false);

			this.getProformasFK_IdAnio();

			this.inicializarActualizarBindingProforma(false);

			//if(ProformaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingProforma(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdCentroCostoProformaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingProforma(false,false);

			this.getProformasFK_IdCentroCosto();

			this.inicializarActualizarBindingProforma(false);

			//if(ProformaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingProforma(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdClienteProformaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingProforma(false,false);

			this.getProformasFK_IdCliente();

			this.inicializarActualizarBindingProforma(false);

			//if(ProformaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingProforma(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdConsignatarioProformaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingProforma(false,false);

			this.getProformasFK_IdConsignatario();

			this.inicializarActualizarBindingProforma(false);

			//if(ProformaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingProforma(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEjercicioProformaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingProforma(false,false);

			this.getProformasFK_IdEjercicio();

			this.inicializarActualizarBindingProforma(false);

			//if(ProformaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingProforma(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEmpleadoProformaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingProforma(false,false);

			this.getProformasFK_IdEmpleado();

			this.inicializarActualizarBindingProforma(false);

			//if(ProformaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingProforma(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEmpresaProformaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingProforma(false,false);

			this.getProformasFK_IdEmpresa();

			this.inicializarActualizarBindingProforma(false);

			//if(ProformaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingProforma(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEstadoProformaProformaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingProforma(false,false);

			this.getProformasFK_IdEstadoProforma();

			this.inicializarActualizarBindingProforma(false);

			//if(ProformaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingProforma(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdFormatoProformaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingProforma(false,false);

			this.getProformasFK_IdFormato();

			this.inicializarActualizarBindingProforma(false);

			//if(ProformaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingProforma(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdMesProformaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingProforma(false,false);

			this.getProformasFK_IdMes();

			this.inicializarActualizarBindingProforma(false);

			//if(ProformaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingProforma(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdMonedaProformaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingProforma(false,false);

			this.getProformasFK_IdMoneda();

			this.inicializarActualizarBindingProforma(false);

			//if(ProformaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingProforma(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdPeriodoProformaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingProforma(false,false);

			this.getProformasFK_IdPeriodo();

			this.inicializarActualizarBindingProforma(false);

			//if(ProformaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingProforma(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdRutaTransporteProformaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingProforma(false,false);

			this.getProformasFK_IdRutaTransporte();

			this.inicializarActualizarBindingProforma(false);

			//if(ProformaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingProforma(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdSubClienteProformaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingProforma(false,false);

			this.getProformasFK_IdSubCliente();

			this.inicializarActualizarBindingProforma(false);

			//if(ProformaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingProforma(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdSucursalProformaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingProforma(false,false);

			this.getProformasFK_IdSucursal();

			this.inicializarActualizarBindingProforma(false);

			//if(ProformaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingProforma(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoCambioProformaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingProforma(false,false);

			this.getProformasFK_IdTipoCambio();

			this.inicializarActualizarBindingProforma(false);

			//if(ProformaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingProforma(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoPrecioProformaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingProforma(false,false);

			this.getProformasFK_IdTipoPrecio();

			this.inicializarActualizarBindingProforma(false);

			//if(ProformaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingProforma(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoProformaProformaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingProforma(false,false);

			this.getProformasFK_IdTipoProforma();

			this.inicializarActualizarBindingProforma(false);

			//if(ProformaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingProforma(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoViaTransporteProformaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingProforma(false,false);

			this.getProformasFK_IdTipoViaTransporte();

			this.inicializarActualizarBindingProforma(false);

			//if(ProformaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingProforma(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTransporteProformaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingProforma(false,false);

			this.getProformasFK_IdTransporte();

			this.inicializarActualizarBindingProforma(false);

			//if(ProformaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingProforma(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdUsuarioProformaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingProforma(false,false);

			this.getProformasFK_IdUsuario();

			this.inicializarActualizarBindingProforma(false);

			//if(ProformaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingProforma(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdVendedorProformaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingProforma(false,false);

			this.getProformasFK_IdVendedor();

			this.inicializarActualizarBindingProforma(false);

			//if(ProformaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingProforma(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.proformaLogic.closeNewConnexionToDeep();
			}
		}
	}

	
	public void closingInternalFrameProforma() {
		if(this.jInternalFrameDetalleFormProforma!=null) {
		

		if(this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFramePopup=null;
		}	
		
		
		}
		
		if(this.jInternalFrameDetalleFormProforma!=null) {
			this.jInternalFrameDetalleFormProforma.setVisible(false);	    			
			this.jInternalFrameDetalleFormProforma.dispose();
			this.jInternalFrameDetalleFormProforma=null;
		}
		
		
		if(this.jInternalFrameReporteDinamicoProforma!=null) {
			this.jInternalFrameReporteDinamicoProforma.setVisible(false);	    			
			this.jInternalFrameReporteDinamicoProforma.dispose();
			this.jInternalFrameReporteDinamicoProforma=null;
		}
		
		if(this.jInternalFrameImportacionProforma!=null) {
			this.jInternalFrameImportacionProforma.setVisible(false);	    			
			this.jInternalFrameImportacionProforma.dispose();
			this.jInternalFrameImportacionProforma=null;
		}		
		
		
		this.setVisible(false);
		this.dispose();
		//this=null;
	}
	
	
	
	public void jButtonActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {			
			this.startProcessProforma();
			
			ProformaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.proforma,new Object(),this.proformaParameterGeneral,this.proformaReturnGeneral);
			
			
			if(sTipo.equals("NuevoProforma")) {
				jButtonNuevoProformaActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarProforma")) {
				jButtonDuplicarProformaActionPerformed(evt,false);
			} else if(sTipo.equals("CopiarProforma")) {
				jButtonCopiarProformaActionPerformed(evt);
			} else if(sTipo.equals("VerFormProforma")) {
				jButtonVerFormProformaActionPerformed(evt);
			} else if(sTipo.equals("NuevoToolBarProforma")) {
				jButtonNuevoProformaActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarToolBarProforma")) {
				jButtonDuplicarProformaActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemNuevoProforma")) {
				jButtonNuevoProformaActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemDuplicarProforma")) {
				jButtonDuplicarProformaActionPerformed(evt,false);
			} else if(sTipo.equals("NuevoRelacionesProforma")) {
				jButtonNuevoProformaActionPerformed(evt,true);
			} else if(sTipo.equals("NuevoRelacionesToolBarProforma")) {
				jButtonNuevoProformaActionPerformed(evt,true);
			} else if(sTipo.equals("MenuItemNuevoRelacionesProforma")) {
				jButtonNuevoProformaActionPerformed(evt,true);
			} else if(sTipo.equals("ModificarProforma")) {
				jButtonModificarProformaActionPerformed(evt);
			} else if(sTipo.equals("ModificarToolBarProforma")) {
				jButtonModificarProformaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemModificarProforma")) {
				jButtonModificarProformaActionPerformed(evt);
			} else if(sTipo.equals("ActualizarProforma")) {
				jButtonActualizarProformaActionPerformed(evt);
			} else if(sTipo.equals("ActualizarToolBarProforma")) {
				jButtonActualizarProformaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemActualizarProforma")) {
				jButtonActualizarProformaActionPerformed(evt);
			} else if(sTipo.equals("EliminarProforma")) {
				jButtonEliminarProformaActionPerformed(evt);
			} else if(sTipo.equals("EliminarToolBarProforma")) {
				jButtonEliminarProformaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemEliminarProforma")) {
				jButtonEliminarProformaActionPerformed(evt);
			} else if(sTipo.equals("CancelarProforma")) {
				jButtonCancelarProformaActionPerformed(evt);
			} else if(sTipo.equals("CancelarToolBarProforma")) {
				jButtonCancelarProformaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCancelarProforma")) {
				jButtonCancelarProformaActionPerformed(evt);
			} else if(sTipo.equals("CerrarProforma")) {
				jButtonCerrarProformaActionPerformed(evt);
			} else if(sTipo.equals("CerrarToolBarProforma")) {
				jButtonCerrarProformaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCerrarProforma")) {
				jButtonCerrarProformaActionPerformed(evt);
			} else if(sTipo.equals("MostrarOcultarToolBarProforma")) {
				jButtonMostrarOcultarProformaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemDetalleCerrarProforma")) {
				jButtonCancelarProformaActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosProforma")) {
				jButtonGuardarCambiosProformaActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosToolBarProforma")) {
				jButtonGuardarCambiosProformaActionPerformed(evt);
			} else if(sTipo.equals("CopiarToolBarProforma")) {
				jButtonCopiarProformaActionPerformed(evt);
			} else if(sTipo.equals("VerFormToolBarProforma")) {
				jButtonVerFormProformaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosProforma")) {
				jButtonGuardarCambiosProformaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCopiarProforma")) {
				jButtonCopiarProformaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemVerFormProforma")) {
				jButtonVerFormProformaActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaProforma")) {
				jButtonGuardarCambiosProformaActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaToolBarProforma")) {
				jButtonGuardarCambiosProformaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosTablaProforma")) {
				jButtonGuardarCambiosProformaActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionProforma")) {
				jButtonRecargarInformacionProformaActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionToolBarProforma")) {
				jButtonRecargarInformacionProformaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemRecargarInformacionProforma")) {
				jButtonRecargarInformacionProformaActionPerformed(evt);
			}
			else if(sTipo.equals("AnterioresProforma")) {
				jButtonAnterioresProformaActionPerformed(evt);
			} else if(sTipo.equals("AnterioresToolBarProforma")) {
				jButtonAnterioresProformaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAnterioreProforma")) {
				jButtonAnterioresProformaActionPerformed(evt);
			} else if(sTipo.equals("SiguientesProforma")) {
				jButtonSiguientesProformaActionPerformed(evt);
			} else if(sTipo.equals("SiguientesToolBarProforma")) {
				jButtonSiguientesProformaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemSiguientesProforma")) {
				jButtonSiguientesProformaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAbrirOrderByProforma") || sTipo.equals("MenuItemDetalleAbrirOrderByProforma")) {
				jButtonAbrirOrderByProformaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemMostrarOcultarProforma") || sTipo.equals("MenuItemDetalleMostrarOcultarProforma")) {
				jButtonMostrarOcultarProformaActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosProforma")) {
				jButtonNuevoGuardarCambiosProformaActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosToolBarProforma")) {
				jButtonNuevoGuardarCambiosProformaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemNuevoGuardarCambiosProforma")) {
				jButtonNuevoGuardarCambiosProformaActionPerformed(evt);
			} 
			else if(sTipo.equals("CerrarReporteDinamicoProforma")) {
				jButtonCerrarReporteDinamicoProformaActionPerformed(evt);
			} else if(sTipo.equals("GenerarReporteDinamicoProforma")) {
				jButtonGenerarReporteDinamicoProformaActionPerformed(evt);
			} else if(sTipo.equals("GenerarExcelReporteDinamicoProforma")) {
				
				jButtonGenerarExcelReporteDinamicoProformaActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarImportacionProforma")) {
				jButtonCerrarImportacionProformaActionPerformed(evt);
			} else if(sTipo.equals("GenerarImportacionProforma")) {
				
				jButtonGenerarImportacionProformaActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirImportacionProforma")) {
				
				jButtonAbrirImportacionProformaActionPerformed(evt);
				
			} else if(sTipo.equals("TiposAccionesProforma")) {
				jComboBoxTiposAccionesProformaActionListener(evt,false);
			} else if(sTipo.equals("TiposRelacionesProforma")) {
				jComboBoxTiposRelacionesProformaActionListener(evt);
			} else if(sTipo.equals("TiposAccionesFormularioProforma")) {
				jComboBoxTiposAccionesProformaActionListener(evt,true);
			} else if(sTipo.equals("TiposSeleccionarProforma")) {
				
				jComboBoxTiposSeleccionarProformaActionListener(evt);
				
			} else if(sTipo.equals("ValorCampoGeneralProforma")) {
				jTextFieldValorCampoGeneralProformaActionListener(evt);
			}
			
			
			else if(sTipo.equals("AbrirOrderByProforma")) {
				jButtonAbrirOrderByProformaActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirOrderByToolBarProforma")) {
				jButtonAbrirOrderByProformaActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarOrderByProforma")) {
				jButtonCerrarOrderByProformaActionPerformed(evt);
			} 
						
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idProformaBusqueda")) {
				this.jButtonidProformaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaProformaUpdate")) {
				this.jButtonid_empresaProformaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaProformaBusqueda")) {
				this.jButtonid_empresaProformaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalProformaUpdate")) {
				this.jButtonid_sucursalProformaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalProformaBusqueda")) {
				this.jButtonid_sucursalProformaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_usuarioProformaUpdate")) {
				this.jButtonid_usuarioProformaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_usuarioProformaBusqueda")) {
				this.jButtonid_usuarioProformaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_ejercicioProformaUpdate")) {
				this.jButtonid_ejercicioProformaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_ejercicioProformaBusqueda")) {
				this.jButtonid_ejercicioProformaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_periodoProformaUpdate")) {
				this.jButtonid_periodoProformaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_periodoProformaBusqueda")) {
				this.jButtonid_periodoProformaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_anioProformaUpdate")) {
				this.jButtonid_anioProformaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_anioProformaBusqueda")) {
				this.jButtonid_anioProformaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_mesProformaUpdate")) {
				this.jButtonid_mesProformaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_mesProformaBusqueda")) {
				this.jButtonid_mesProformaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_pre_impresoProformaBusqueda")) {
				this.jButtonnumero_pre_impresoProformaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_emisionProformaBusqueda")) {
				this.jButtonfecha_emisionProformaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("diasProformaBusqueda")) {
				this.jButtondiasProformaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_vencimientoProformaBusqueda")) {
				this.jButtonfecha_vencimientoProformaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_monedaProformaUpdate")) {
				this.jButtonid_monedaProformaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_monedaProformaBusqueda")) {
				this.jButtonid_monedaProformaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("cotizacionProformaBusqueda")) {
				this.jButtoncotizacionProformaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_empleadoProforma")) {
				this.jButtonid_empleadoProformaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empleadoProformaUpdate")) {
				this.jButtonid_empleadoProformaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empleadoProformaBusqueda")) {
				this.jButtonid_empleadoProformaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_formatoProformaUpdate")) {
				this.jButtonid_formatoProformaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_formatoProformaBusqueda")) {
				this.jButtonid_formatoProformaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_estado_proformaProformaUpdate")) {
				this.jButtonid_estado_proformaProformaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_estado_proformaProformaBusqueda")) {
				this.jButtonid_estado_proformaProformaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("direccionProformaBusqueda")) {
				this.jButtondireccionProformaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_clienteProforma")) {
				this.jButtonid_clienteProformaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_clienteProformaUpdate")) {
				this.jButtonid_clienteProformaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_clienteProformaBusqueda")) {
				this.jButtonid_clienteProformaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("rucProformaBusqueda")) {
				this.jButtonrucProformaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("es_ofertaProformaBusqueda")) {
				this.jButtones_ofertaProformaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("telefonoProformaBusqueda")) {
				this.jButtontelefonoProformaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_precioProformaUpdate")) {
				this.jButtonid_tipo_precioProformaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_precioProformaBusqueda")) {
				this.jButtonid_tipo_precioProformaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_vendedorProforma")) {
				this.jButtonid_vendedorProformaActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_vendedorProformaArbol")) {
				this.abrirFrameTreeVendedor("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_vendedorProformaUpdate")) {
				this.jButtonid_vendedorProformaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_vendedorProformaBusqueda")) {
				this.jButtonid_vendedorProformaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sub_clienteProformaUpdate")) {
				this.jButtonid_sub_clienteProformaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sub_clienteProformaBusqueda")) {
				this.jButtonid_sub_clienteProformaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_via_transporteProformaUpdate")) {
				this.jButtonid_tipo_via_transporteProformaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_via_transporteProformaBusqueda")) {
				this.jButtonid_tipo_via_transporteProformaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transporteProformaUpdate")) {
				this.jButtonid_transporteProformaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transporteProformaBusqueda")) {
				this.jButtonid_transporteProformaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_ruta_transporteProformaUpdate")) {
				this.jButtonid_ruta_transporteProformaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_ruta_transporteProformaBusqueda")) {
				this.jButtonid_ruta_transporteProformaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descripcionProformaBusqueda")) {
				this.jButtondescripcionProformaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descuento_porcentajeProformaBusqueda")) {
				this.jButtondescuento_porcentajeProformaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("monto_con_ivaProformaBusqueda")) {
				this.jButtonmonto_con_ivaProformaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("sumanProformaBusqueda")) {
				this.jButtonsumanProformaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descuento_valorProformaBusqueda")) {
				this.jButtondescuento_valorProformaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("monto_sin_ivaProformaBusqueda")) {
				this.jButtonmonto_sin_ivaProformaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descuento_generalProformaBusqueda")) {
				this.jButtondescuento_generalProformaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fleteProformaBusqueda")) {
				this.jButtonfleteProformaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("ultimo_costoProformaBusqueda")) {
				this.jButtonultimo_costoProformaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("subtotalProformaBusqueda")) {
				this.jButtonsubtotalProformaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("otros_cargosProformaBusqueda")) {
				this.jButtonotros_cargosProformaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("margen_utilidadProformaBusqueda")) {
				this.jButtonmargen_utilidadProformaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("ivaProformaBusqueda")) {
				this.jButtonivaProformaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("financiamientoProformaBusqueda")) {
				this.jButtonfinanciamientoProformaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("totalProformaBusqueda")) {
				this.jButtontotalProformaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("otros_valoresProformaBusqueda")) {
				this.jButtonotros_valoresProformaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("anticipoProformaBusqueda")) {
				this.jButtonanticipoProformaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("iceProformaBusqueda")) {
				this.jButtoniceProformaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("monto_retencionProformaBusqueda")) {
				this.jButtonmonto_retencionProformaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fechaProformaBusqueda")) {
				this.jButtonfechaProformaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_servidorProformaBusqueda")) {
				this.jButtonfecha_servidorProformaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("hora_inicioProformaBusqueda")) {
				this.jButtonhora_inicioProformaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("hora_finProformaBusqueda")) {
				this.jButtonhora_finProformaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_centro_costoProforma")) {
				this.jButtonid_centro_costoProformaActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_centro_costoProformaArbol")) {
				this.abrirFrameTreeCentroCosto("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_centro_costoProformaUpdate")) {
				this.jButtonid_centro_costoProformaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_centro_costoProformaBusqueda")) {
				this.jButtonid_centro_costoProformaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_proformaProformaUpdate")) {
				this.jButtonid_tipo_proformaProformaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_proformaProformaBusqueda")) {
				this.jButtonid_tipo_proformaProformaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_consignatarioProformaUpdate")) {
				this.jButtonid_consignatarioProformaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_consignatarioProformaBusqueda")) {
				this.jButtonid_consignatarioProformaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_tipo_cambioProforma")) {
				this.jButtonid_tipo_cambioProformaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_cambioProformaUpdate")) {
				this.jButtonid_tipo_cambioProformaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_cambioProformaBusqueda")) {
				this.jButtonid_tipo_cambioProformaBusquedaActionPerformed(evt);
			}
			
			
			else if(sTipo.equals("id_centro_costoProforma")) {
				this.jButtonid_centro_costoProformaActionPerformed(evt);
			}
			else if(sTipo.equals("id_clienteProforma")) {
				this.jButtonid_clienteProformaActionPerformed(evt);
			}
			else if(sTipo.equals("id_empleadoProforma")) {
				this.jButtonid_empleadoProformaActionPerformed(evt);
			}
			else if(sTipo.equals("id_tipo_cambioProforma")) {
				this.jButtonid_tipo_cambioProformaActionPerformed(evt);
			}
			else if(sTipo.equals("id_vendedorProforma")) {
				this.jButtonid_vendedorProformaActionPerformed(evt);
			}
			
			
			else if(sTipo.equals("FK_IdCentroCostoProforma")) {
				this.jButtonFK_IdCentroCostoProformaActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdClienteProforma")) {
				this.jButtonFK_IdClienteProformaActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdConsignatarioProforma")) {
				this.jButtonFK_IdConsignatarioProformaActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdEmpleadoProforma")) {
				this.jButtonFK_IdEmpleadoProformaActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdEstadoProformaProforma")) {
				this.jButtonFK_IdEstadoProformaProformaActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdFormatoProforma")) {
				this.jButtonFK_IdFormatoProformaActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdRutaTransporteProforma")) {
				this.jButtonFK_IdRutaTransporteProformaActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdSubClienteProforma")) {
				this.jButtonFK_IdSubClienteProformaActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTipoCambioProforma")) {
				this.jButtonFK_IdTipoCambioProformaActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTipoPrecioProforma")) {
				this.jButtonFK_IdTipoPrecioProformaActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTipoProformaProforma")) {
				this.jButtonFK_IdTipoProformaProformaActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTipoViaTransporteProforma")) {
				this.jButtonFK_IdTipoViaTransporteProformaActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTransporteProforma")) {
				this.jButtonFK_IdTransporteProformaActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdVendedorProforma")) {
				this.jButtonFK_IdVendedorProformaActionPerformed(evt);
			}
			
			;
			
			
			ProformaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.proforma,new Object(),this.proformaParameterGeneral,this.proformaReturnGeneral);
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
			
  		} finally {
      		this.finishProcessProforma();
      	}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaProformaActual();
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				JTextField jTextField=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				if(containerParent!=null && containerParent.getClass().equals(JTableMe.class)) {
					esControlTabla=true;
				}
						
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.proforma);
				
				this.actualizarInformacion("INFO_PADRE",false,this.proforma);
				
				ProformaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.proforma,new Object(),this.proformaParameterGeneral,this.proformaReturnGeneral);
				
				


				
				ProformaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.proforma,new Object(),this.proformaParameterGeneral,this.proformaReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(Proforma.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Proforma.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
				}
				
			} catch(Exception e) {
  				FuncionesSwing.manageException2(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
  			}
    }
	
	public Boolean existeCambioValor(ControlTipo controlTipo,String sTipo) throws Exception {
		Boolean existeCambio=true;
		
		try {
			Proforma proformaLocal=null;
			
			if(!this.getEsControlTabla()) {
				proformaLocal=this.proforma;
			} else {
				proformaLocal=this.proformaAnterior;
			}
			
			if(controlTipo.equals(ControlTipo.TEXTBOX)) {
				


			}
		
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
  		}
		
		return existeCambio;
	}
	
	public void jTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.proforma);
				
				this.actualizarInformacion("INFO_PADRE",false,this.proforma);
				
				ProformaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.proforma,new Object(),this.proformaParameterGeneral,this.proformaReturnGeneral);
							
				
				


				
				ProformaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.proforma,new Object(),this.proformaParameterGeneral,this.proformaReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(Proforma.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Proforma.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaProformaActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosProforma.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaAnterior =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.proformaAnterior =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
  		}
    }	
	
	//CUANDO SE CAMBIA ALGUN FORMATO(TIPO DE LETRA,NEGRILLA,ETC)
	public void jTextFieldChangedUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextField jTextField=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			ProformaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.proforma,new Object(),this.proformaParameterGeneral,this.proformaReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextField=(JTextField)evt.getSource();
			
			containerParent=jTextField.getParent();
					
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {					
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			ProformaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.proforma,new Object(),this.proformaParameterGeneral,this.proformaReturnGeneral);
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE QUITA ALGUN CARACTER
	public void jTextFieldRemoveUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE INGRESA ALGUN CARACTER
	public void jTextFieldInsertUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
  		}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jFormattedTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaProformaActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				Container containerParentAux=null;
				JFormattedTextField JFormattedTextField=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JFormattedTextField=(JFormattedTextField)evt.getSource();
				
				containerParentAux=JFormattedTextField.getParent();
				
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.proforma);
				
				this.actualizarInformacion("INFO_PADRE",false,this.proforma);
				
				ProformaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.proforma,new Object(),this.proformaParameterGeneral,this.proformaReturnGeneral);
								
						
				


				
				ProformaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.proforma,new Object(),this.proformaParameterGeneral,this.proformaReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(Proforma.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Proforma.class.getName(),sTipo,"DATE",esControlTabla,conIrServidorAplicacionParent,
							id,JFormattedTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Container containerParentAux=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParentAux=jTextField.getParent();
						
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.proforma);
				
				this.actualizarInformacion("INFO_PADRE",false,this.proforma);
				
				ProformaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.proforma,new Object(),this.proformaParameterGeneral,this.proformaReturnGeneral);
								
				
				


				
				ProformaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.proforma,new Object(),this.proformaParameterGeneral,this.proformaReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(Proforma.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Proforma.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaProformaActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosProforma.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaAnterior =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.proformaAnterior =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.DATE,sTipo)) {
				this.actualizarInformacion("EVENTO_CONTROL",false,this.proforma);
				
				this.actualizarInformacion("INFO_PADRE",false,this.proforma);
			}	
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaProformaActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosProforma.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaAnterior =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.proformaAnterior =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaProformaActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.proforma);
			
			this.actualizarInformacion("INFO_PADRE",false,this.proforma);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jTextAreaFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTAREA,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextArea jTextArea=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextArea=(JTextArea)evt.getSource();
				
				containerParent=jTextArea.getParent();
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.proforma);
				
				this.actualizarInformacion("INFO_PADRE",false,this.proforma);
				
				ProformaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.proforma,new Object(),this.proformaParameterGeneral,this.proformaReturnGeneral);
							
				
				


				
				ProformaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.proforma,new Object(),this.proformaParameterGeneral,this.proformaReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(Proforma.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Proforma.class.getName(),sTipo,"TEXTAREA",esControlTabla,conIrServidorAplicacionParent,
							id,jTextArea, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaProformaActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosProforma.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.proformaAnterior =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.proformaAnterior =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaChangedUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextArea jTextArea=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			ProformaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.proforma,new Object(),this.proformaParameterGeneral,this.proformaReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextArea=(JTextArea)evt.getSource();
			
			containerParent=jTextArea.getParent();
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			ProformaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.proforma,new Object(),this.proformaParameterGeneral,this.proformaReturnGeneral);
			
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaRemoveUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaInsertUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jTextAreaActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaProformaActual();
			
			this.actualizarInformacion("EVENTO_CONTROL",false,this.proforma);
			
			this.actualizarInformacion("INFO_PADRE",false,this.proforma);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JLabel jLabel=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jLabel=(JLabel)evt.getSource();
				
				containerParent=jLabel.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.proforma);
				
				this.actualizarInformacion("INFO_PADRE",false,this.proforma);
				
				ProformaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.proforma,new Object(),this.proformaParameterGeneral,this.proformaReturnGeneral);
								
				
				


				
				ProformaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.proforma,new Object(),this.proformaParameterGeneral,this.proformaReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(Proforma.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Proforma.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jLabel, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaProformaActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosProforma.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaAnterior =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.proformaAnterior =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jLabelActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaProformaActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.proforma);
			
			this.actualizarInformacion("INFO_PADRE",false,this.proforma);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxItemListenerGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaProformaActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
							
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.proforma);
				
				this.actualizarInformacion("INFO_PADRE",false,this.proforma);
				
				ProformaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.proforma,new Object(),this.proformaParameterGeneral,this.proformaReturnGeneral);
												
				
				if(sTipo.equals("SeleccionarTodosProforma")) {
					jCheckBoxSeleccionarTodosProformaItemListener(evt);
				
				} else if(sTipo.equals("SeleccionadosProforma")) {
					jCheckBoxSeleccionadosProformaItemListener(evt);
				
				} else if(sTipo.equals("NuevoToolBarProforma")) {
					
				}
				
				


				
				
				ProformaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.proforma,new Object(),this.proformaParameterGeneral,this.proformaReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(Proforma.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Proforma.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.CHECKBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				//this.actualizarInformacion("EVENTO_CONTROL",false,this.proforma);
				
				//this.actualizarInformacion("INFO_PADRE",false,this.proforma);
				
				ProformaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.proforma,new Object(),this.proformaParameterGeneral,this.proformaReturnGeneral);
												
				
				


				
				
				ProformaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.proforma,new Object(),this.proformaParameterGeneral,this.proformaReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(Proforma.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Proforma.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaProformaActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosProforma.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.proformaAnterior =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.proformaAnterior =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaProformaActual();
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.proforma);
				
				this.actualizarInformacion("INFO_PADRE",false,this.proforma);
				
				ProformaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.proforma,new Object(),this.proformaParameterGeneral,this.proformaReturnGeneral);
				
				
				ProformaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.proforma,new Object(),this.proformaParameterGeneral,this.proformaReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO SE UTILIZA, SE USA EL DE ABAJO, IGUAL SE DEJA EL CODIGO COMO RESPALDO Y ES CASI IGUAL
	//ERROR:SI SE USA,AL HACER CLIC EN EL MISMO ELEMENTO O EJECUTAR SELECTEDITEM, SIEMPRE SE EJECUTA COMO SI ESCOGIERA OTRO ELEMENTO(NO DEBERIA)
	//@SuppressWarnings("rawtypes")
	public void jComboBoxActionPerformedGeneral(String sTipo,ActionEvent evt) {		
		try {
			/*		
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			Container containerParent=null;
			Component componentOpposite=null;
			Boolean esControlTabla=false;
				
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			ProformaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.proforma,new Object(),this.proformaParameterGeneral,this.proformaReturnGeneral);
			JComboBox jComboBoxGenerico=null;						
			
			if(evt.getSource().getClass().equals(JComboBox.class)
				|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
					
				jComboBoxGenerico=(JComboBox)evt.getSource();
				
				containerParent=jComboBoxGenerico.getParent();
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
			}
			
			String sFinalQueryCombo="";
			
			


			
			ProformaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.proforma,new Object(),this.proformaParameterGeneral,this.proformaReturnGeneral);
			*/						
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
  		}		
    }
	
	@SuppressWarnings("rawtypes")
	public void jComboBoxItemStateChangedGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if (evt.getStateChange() == ItemEvent.SELECTED && this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaProformaActual();
			
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=null;//evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}		
					
					this.esControlTabla=esControlTabla;
				}
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.proforma);
				
				this.actualizarInformacion("INFO_PADRE",false,this.proforma);
				
				ProformaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.proforma,new Object(),this.proformaParameterGeneral,this.proformaReturnGeneral);
				
				
				String sFinalQueryCombo="";
				
				


				
				ProformaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.proforma,new Object(),this.proformaParameterGeneral,this.proformaReturnGeneral);
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(Proforma.class.getName());
								
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Proforma.class.getName(),sTipo,"COMBOBOX",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
  		}
    }
	
	//@SuppressWarnings("rawtypes")
	public void jComboBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		//MANEJADO EN ITEMLISTENER
		/*
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				
				//if(this.esUsoDesdeHijo) {
				//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				//}
				
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
				this.actualizarInformacion("EVENTO_CONTROL",false,this.proforma);
				
				this.actualizarInformacion("INFO_PADRE",false,this.proforma);
				
				ProformaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.proforma,new Object(),this.proformaParameterGeneral,this.proformaReturnGeneral);
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}
					
					this.esControlTabla=esControlTabla;
				}
				
				String sFinalQueryCombo="";
				
				


				
				ProformaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.proforma,new Object(),this.proformaParameterGeneral,this.proformaReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(Proforma.class.getName());
				
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Proforma.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
  		}
		
		*/
    }
	
	public void jComboBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaProformaActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosProforma.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.proformaAnterior =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.proformaAnterior =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
  		}
    }		
	
	public void tableValueChangedGeneral(String sTipo,ListSelectionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				ProformaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.proforma,new Object(),this.proformaParameterGeneral,this.proformaReturnGeneral);
				
				if(sTipo.equals("TableDatosSeleccionarProforma")) {
					//BYDAN_DESHABILITADO
					//try {jTableDatosProformaListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
					
					//SOLO CUANDO MOUSE ES SOLTADO
					if (!evt.getValueIsAdjusting()) {
						//SELECCIONA FILA A OBJETO ACTUAL
						Integer intSelectedRow = this.jTableDatosProforma.getSelectedRow();
						
						if(intSelectedRow!=null && intSelectedRow>-1) {
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								this.proforma =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
							} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
								this.proforma =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(intSelectedRow)];
							}
							//ARCHITECTURE
							
							//System.out.println(this.proforma);
						}
					}
					
				} else if(sTipo.equals("jButtonCancelarProforma")) {
				
				}
				
				ProformaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.proforma,new Object(),this.proformaParameterGeneral,this.proformaReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void tableMouseAdapterGeneral(String sTipo,MouseEvent evt) { 	  
		try {
			ProformaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.proforma,new Object(),this.proformaParameterGeneral,this.proformaReturnGeneral);
			
			if(sTipo.equals("DatosSeleccionarProforma")) {
				if (evt.getClickCount() == 2) {
					jButtonIdActionPerformed(null,jTableDatosProforma.getSelectedRow(),false,false);
				}	
			} else if(sTipo.equals("jButtonCancelarProforma")) {
			
			}
			
			ProformaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.proforma,new Object(),this.proformaParameterGeneral,this.proformaReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
  		}
    }
	
	;
	
	public void jButtonActionPerformedTecladoGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			this.startProcessProforma();
			
			ProformaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.proforma,new Object(),this.proformaParameterGeneral,this.proformaReturnGeneral);
			
			if(sTipo.equals("NuevoProforma")) {
				jButtonNuevoProformaActionPerformed(evt,false);
				
			} else if(sTipo.equals("DuplicarProforma")) {
				jButtonDuplicarProformaActionPerformed(evt,false);
				
			} else if(sTipo.equals("CopiarProforma")) {
				jButtonCopiarProformaActionPerformed(evt);
				
			} else if(sTipo.equals("VerFormProforma")) {
				jButtonVerFormProformaActionPerformed(evt);
				
			} else if(sTipo.equals("NuevoRelacionesProforma")) {
				jButtonNuevoProformaActionPerformed(evt,true);
				
			} else if(sTipo.equals("ModificarProforma")) {
				jButtonModificarProformaActionPerformed(evt);
				
			} else if(sTipo.equals("ActualizarProforma")) {
				jButtonActualizarProformaActionPerformed(evt);
				
			} else if(sTipo.equals("EliminarProforma")) {
				jButtonEliminarProformaActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosTablaProforma")) {
				jButtonGuardarCambiosProformaActionPerformed(evt);
				
			} else if(sTipo.equals("CancelarProforma")) {
				jButtonCancelarProformaActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarProforma")) {
				jButtonCerrarProformaActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosProforma")) {
				jButtonGuardarCambiosProformaActionPerformed(evt);
			
			} else if(sTipo.equals("NuevoGuardarCambiosProforma")) {
				jButtonNuevoGuardarCambiosProformaActionPerformed(evt);
			
			} else if(sTipo.equals("AbrirOrderByProforma")) {
				jButtonAbrirOrderByProformaActionPerformed(evt);
			
			} else if(sTipo.equals("RecargarInformacionProforma")) {
				jButtonRecargarInformacionProformaActionPerformed(evt);
			
			} else if(sTipo.equals("AnterioresProforma")) {
				jButtonAnterioresProformaActionPerformed(evt);			
			
			}  else if(sTipo.equals("SiguientesProforma")) {
				jButtonSiguientesProformaActionPerformed(evt);			
			} 
			
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idProformaBusqueda")) {
				this.jButtonidProformaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaProformaUpdate")) {
				this.jButtonid_empresaProformaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaProformaBusqueda")) {
				this.jButtonid_empresaProformaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalProformaUpdate")) {
				this.jButtonid_sucursalProformaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalProformaBusqueda")) {
				this.jButtonid_sucursalProformaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_usuarioProformaUpdate")) {
				this.jButtonid_usuarioProformaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_usuarioProformaBusqueda")) {
				this.jButtonid_usuarioProformaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_ejercicioProformaUpdate")) {
				this.jButtonid_ejercicioProformaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_ejercicioProformaBusqueda")) {
				this.jButtonid_ejercicioProformaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_periodoProformaUpdate")) {
				this.jButtonid_periodoProformaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_periodoProformaBusqueda")) {
				this.jButtonid_periodoProformaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_anioProformaUpdate")) {
				this.jButtonid_anioProformaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_anioProformaBusqueda")) {
				this.jButtonid_anioProformaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_mesProformaUpdate")) {
				this.jButtonid_mesProformaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_mesProformaBusqueda")) {
				this.jButtonid_mesProformaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_pre_impresoProformaBusqueda")) {
				this.jButtonnumero_pre_impresoProformaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_emisionProformaBusqueda")) {
				this.jButtonfecha_emisionProformaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("diasProformaBusqueda")) {
				this.jButtondiasProformaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_vencimientoProformaBusqueda")) {
				this.jButtonfecha_vencimientoProformaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_monedaProformaUpdate")) {
				this.jButtonid_monedaProformaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_monedaProformaBusqueda")) {
				this.jButtonid_monedaProformaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("cotizacionProformaBusqueda")) {
				this.jButtoncotizacionProformaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_empleadoProforma")) {
				this.jButtonid_empleadoProformaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empleadoProformaUpdate")) {
				this.jButtonid_empleadoProformaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empleadoProformaBusqueda")) {
				this.jButtonid_empleadoProformaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_formatoProformaUpdate")) {
				this.jButtonid_formatoProformaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_formatoProformaBusqueda")) {
				this.jButtonid_formatoProformaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_estado_proformaProformaUpdate")) {
				this.jButtonid_estado_proformaProformaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_estado_proformaProformaBusqueda")) {
				this.jButtonid_estado_proformaProformaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("direccionProformaBusqueda")) {
				this.jButtondireccionProformaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_clienteProforma")) {
				this.jButtonid_clienteProformaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_clienteProformaUpdate")) {
				this.jButtonid_clienteProformaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_clienteProformaBusqueda")) {
				this.jButtonid_clienteProformaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("rucProformaBusqueda")) {
				this.jButtonrucProformaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("es_ofertaProformaBusqueda")) {
				this.jButtones_ofertaProformaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("telefonoProformaBusqueda")) {
				this.jButtontelefonoProformaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_precioProformaUpdate")) {
				this.jButtonid_tipo_precioProformaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_precioProformaBusqueda")) {
				this.jButtonid_tipo_precioProformaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_vendedorProforma")) {
				this.jButtonid_vendedorProformaActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_vendedorProformaArbol")) {
				this.abrirFrameTreeVendedor("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_vendedorProformaUpdate")) {
				this.jButtonid_vendedorProformaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_vendedorProformaBusqueda")) {
				this.jButtonid_vendedorProformaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sub_clienteProformaUpdate")) {
				this.jButtonid_sub_clienteProformaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sub_clienteProformaBusqueda")) {
				this.jButtonid_sub_clienteProformaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_via_transporteProformaUpdate")) {
				this.jButtonid_tipo_via_transporteProformaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_via_transporteProformaBusqueda")) {
				this.jButtonid_tipo_via_transporteProformaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transporteProformaUpdate")) {
				this.jButtonid_transporteProformaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transporteProformaBusqueda")) {
				this.jButtonid_transporteProformaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_ruta_transporteProformaUpdate")) {
				this.jButtonid_ruta_transporteProformaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_ruta_transporteProformaBusqueda")) {
				this.jButtonid_ruta_transporteProformaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descripcionProformaBusqueda")) {
				this.jButtondescripcionProformaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descuento_porcentajeProformaBusqueda")) {
				this.jButtondescuento_porcentajeProformaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("monto_con_ivaProformaBusqueda")) {
				this.jButtonmonto_con_ivaProformaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("sumanProformaBusqueda")) {
				this.jButtonsumanProformaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descuento_valorProformaBusqueda")) {
				this.jButtondescuento_valorProformaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("monto_sin_ivaProformaBusqueda")) {
				this.jButtonmonto_sin_ivaProformaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descuento_generalProformaBusqueda")) {
				this.jButtondescuento_generalProformaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fleteProformaBusqueda")) {
				this.jButtonfleteProformaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("ultimo_costoProformaBusqueda")) {
				this.jButtonultimo_costoProformaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("subtotalProformaBusqueda")) {
				this.jButtonsubtotalProformaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("otros_cargosProformaBusqueda")) {
				this.jButtonotros_cargosProformaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("margen_utilidadProformaBusqueda")) {
				this.jButtonmargen_utilidadProformaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("ivaProformaBusqueda")) {
				this.jButtonivaProformaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("financiamientoProformaBusqueda")) {
				this.jButtonfinanciamientoProformaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("totalProformaBusqueda")) {
				this.jButtontotalProformaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("otros_valoresProformaBusqueda")) {
				this.jButtonotros_valoresProformaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("anticipoProformaBusqueda")) {
				this.jButtonanticipoProformaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("iceProformaBusqueda")) {
				this.jButtoniceProformaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("monto_retencionProformaBusqueda")) {
				this.jButtonmonto_retencionProformaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fechaProformaBusqueda")) {
				this.jButtonfechaProformaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_servidorProformaBusqueda")) {
				this.jButtonfecha_servidorProformaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("hora_inicioProformaBusqueda")) {
				this.jButtonhora_inicioProformaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("hora_finProformaBusqueda")) {
				this.jButtonhora_finProformaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_centro_costoProforma")) {
				this.jButtonid_centro_costoProformaActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_centro_costoProformaArbol")) {
				this.abrirFrameTreeCentroCosto("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_centro_costoProformaUpdate")) {
				this.jButtonid_centro_costoProformaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_centro_costoProformaBusqueda")) {
				this.jButtonid_centro_costoProformaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_proformaProformaUpdate")) {
				this.jButtonid_tipo_proformaProformaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_proformaProformaBusqueda")) {
				this.jButtonid_tipo_proformaProformaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_consignatarioProformaUpdate")) {
				this.jButtonid_consignatarioProformaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_consignatarioProformaBusqueda")) {
				this.jButtonid_consignatarioProformaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_tipo_cambioProforma")) {
				this.jButtonid_tipo_cambioProformaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_cambioProformaUpdate")) {
				this.jButtonid_tipo_cambioProformaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_cambioProformaBusqueda")) {
				this.jButtonid_tipo_cambioProformaBusquedaActionPerformed(evt);
			}
			
			ProformaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.proforma,new Object(),this.proformaParameterGeneral,this.proformaReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
			
  		}  finally {
      		this.finishProcessProforma();
      	}
    }
	
	public void internalFrameClosingInternalFrameGeneral(String sTipo,InternalFrameEvent evt) { 	  
		try {
			ProformaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.proforma,new Object(),this.proformaParameterGeneral,this.proformaReturnGeneral);
			
			if(sTipo.equals("CloseInternalFrameProforma")) {
				closingInternalFrameProforma();
				
			} else if(sTipo.equals("jButtonCancelarProforma")) {
				JInternalFrameBase jInternalFrameDetalleFormProforma = (JInternalFrameBase)evt.getSource();
	            	
	            ProformaBeanSwingJInternalFrame jInternalFrameParent=(ProformaBeanSwingJInternalFrame)jInternalFrameDetalleFormProforma.getjInternalFrameParent();
	            
				jInternalFrameParent.jButtonCancelarProformaActionPerformed(null);
			}
			
			ProformaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.proforma,new Object(),this.proformaParameterGeneral,this.proformaReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void recargarFormProforma(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion) throws Exception {
		this.recargarFormProforma(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,false);
	}
	
	public void recargarFormProforma(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion,Boolean esControlTabla) throws Exception {
		if(this.permiteRecargarForm && this.permiteMantenimiento(this.proforma)) {
			if(!esControlTabla) {
				if(ProformaJInternalFrame.ISBINDING_MANUAL_TABLA) {			
					this.setVariablesFormularioToObjetoActualProforma(this.proforma,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);			
				}
				
				if(this.proformaSessionBean.getEstaModoGuardarRelaciones()) {
					this.setVariablesFormularioRelacionesToObjetoActualProforma(this.proforma,classes);				
				}
			
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.proformaReturnGeneral=proformaLogic.procesarEventosProformasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.proformaLogic.getProformas(),this.proforma,this.proformaParameterGeneral,this.isEsNuevoProforma,classes);//this.proformaLogic.getProforma()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
					
					//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					//this.setVariablesObjetoReturnGeneralToBeanProforma(this.proformaReturnGeneral,this.proformaBean,false);
						
					//ACTUALIZA VARIABLES RELACIONES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					if(this.proformaSessionBean.getEstaModoGuardarRelaciones()) {
						//this.setVariablesRelacionesObjetoReturnGeneralToBeanProforma(classes,this.proformaReturnGeneral,this.proformaBean,false);
					}
						
					if(this.proformaReturnGeneral.getConRecargarPropiedades()) {
						//INICIALIZA VARIABLES COMBOS NORMALES (FK)
						this.setVariablesObjetoActualToFormularioForeignKeyProforma(this.proformaReturnGeneral.getProforma());
							
						//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
						this.setVariablesObjetoActualToFormularioProforma(this.proformaReturnGeneral.getProforma());	
					}
						
					if(this.proformaReturnGeneral.getConRecargarRelaciones()) {
						//INICIALIZA VARIABLES RELACIONES A FORMULARIO
						this.setVariablesRelacionesObjetoActualToFormularioProforma(this.proformaReturnGeneral.getProforma(),classes);//this.proformaBean);	
					}									
					
				} else {				
					//INICIALIZA VARIABLES RELACIONES A FORMULARIO
					this.setVariablesRelacionesObjetoActualToFormularioProforma(this.proforma,classes);//this.proformaBean);									
				}
			
				if(ProformaJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesFormularioToObjetoActualProforma(this.proforma,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysProforma(this.proforma);				
				}
				
			} else {
				
				if(((controlTipo.equals(ControlTipo.TEXTBOX) || controlTipo.equals(ControlTipo.DATE)
					|| controlTipo.equals(ControlTipo.TEXTAREA) || controlTipo.equals(ControlTipo.COMBOBOX)
					)				
					&& eventoTipo.equals(EventoTipo.CHANGE)
					)
					
					|| (controlTipo.equals(ControlTipo.CHECKBOX) && eventoTipo.equals(EventoTipo.CLIC))
					
				) { // && sTipoGeneral.equals("TEXTBOX")
					
					if(this.proformaAnterior!=null) {
						this.proforma=this.proformaAnterior;
					}
				}
				
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.proformaReturnGeneral=proformaLogic.procesarEventosProformasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.proformaLogic.getProformas(),this.proforma,this.proformaParameterGeneral,this.isEsNuevoProforma,classes);//this.proformaLogic.getProforma()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.proformaSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.proformaSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(this.proformaReturnGeneral.getProforma(),proformaLogic.getProformas());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(this.proformaReturnGeneral.getProforma(),this.proformas);
				}
				//ARCHITECTURE
				
				//this.jTableDatosProforma.repaint();
				
				//((AbstractTableModel) this.jTableDatosProforma.getModel()).fireTableDataChanged();
				
				this.actualizarVisualTableDatosProforma();
			}
		}
	}
	
	public void actualizarVisualTableDatosProforma() throws Exception {
		
		ProformaModel proformaModel=(ProformaModel)this.jTableDatosProforma.getModel();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			proformaModel.proformas=this.proformaLogic.getProformas();
		
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
			proformaModel.proformas=this.proformas;
		}
		
		
		((ProformaModel) this.jTableDatosProforma.getModel()).fireTableDataChanged();
	}
	
	public void actualizarVisualTableDatosEventosVistaProforma() throws Exception {
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.actualizarLista(this.getproformaAnterior(),this.proformaLogic.getProformas());
					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			this.actualizarLista(this.getproformaAnterior(),this.proformas);
		}
		//ARCHITECTURE
						
		this.actualizarFilaTotales();
						
		this.actualizarVisualTableDatosProforma();	
	}
	
	public void setVariablesRelacionesObjetoActualToFormularioProforma(Proforma proforma,ArrayList<Classe> classes) throws Exception { 
		try {
			
			for(Classe clas:classes) {
				if(clas.clas.equals(TerminoProforma.class)) {
					this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.terminoproformaLogic.setTerminoProformas(proforma.getTerminoProformas());
					this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.inicializarActualizarBindingTablaTerminoProforma(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(DetalleProforma.class)) {
					this.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.detalleproformaLogic.setDetalleProformas(proforma.getDetalleProformas());
					this.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.inicializarActualizarBindingTablaDetalleProforma(false);
					break;
				}
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setEventoParentGeneral(Boolean esUsoDesdeHijo,String sDominio,String sDominioTipo,String sTipo,String sTipoGeneral,Boolean esControlTabla,Boolean conIrServidorAplicacion,
						Long id,Component control, EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,ArrayList<String> arrClasses,
						Object evt,GeneralEntityParameterReturnGeneral generalEntityParameterGeneral,Object otro) { 	  
		try {
			
			if(this.permiteManejarEventosControl()) {
				
				//BASE COPIADO DESDE TEXTFIELLOSTFOCUS
				
				//EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				Boolean conTodasRelaciones=false;
				
				this.esUsoDesdeHijo=esUsoDesdeHijo;
										
				ProformaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.proforma,new Object(),generalEntityParameterGeneral,this.proformaReturnGeneral);
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				for(String sClasse:arrClasses) {
					if(sClasse.equals("TODOS")) {
						conTodasRelaciones=true;
						break;
					}
				}
				
				if(this.proformaSessionBean.getConGuardarRelaciones()) {
					if(conTodasRelaciones) {
						classes=ProformaConstantesFunciones.getClassesRelationshipsOfProforma(new ArrayList<Classe>(),DeepLoadType.NONE);
					} else {
						classes=ProformaConstantesFunciones.getClassesRelationshipsFromStringsOfProforma(arrClasses,DeepLoadType.NONE);
					}
				}
	
				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);
	
				this.recargarFormProforma(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,esControlTabla);
										
				ProformaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.proforma,new Object(),generalEntityParameterGeneral,this.proformaReturnGeneral);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
  		}
    }
	
	/*
	public void setVariablesRelacionesObjetoBeanActualToFormularioProforma(ProformaBean proformaBean) throws Exception { 
		try {
			
			for(Classe clas:classes) {
				if(clas.clas.equals(TerminoProforma.class)) {
					this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.terminoproformaLogic.setTerminoProformas(proforma.getTerminoProformas());
					this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.inicializarActualizarBindingTablaTerminoProforma(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(DetalleProforma.class)) {
					this.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.detalleproformaLogic.setDetalleProformas(proforma.getDetalleProformas());
					this.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.inicializarActualizarBindingTablaDetalleProforma(false);
					break;
				}
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesRelacionesObjetoReturnGeneralToBeanProforma(ArrayList<Classe> classes,ProformaReturnGeneral proformaReturnGeneral,ProformaBean proformaBean,Boolean conDefault) throws Exception {
		
			this.proformaBean.setTerminoProformas(proformaReturnGeneral.getProforma().getTerminoProformas());
			this.proformaBean.setDetalleProformas(proformaReturnGeneral.getProforma().getDetalleProformas());
	}
	*/
	
	public void setVariablesFormularioRelacionesToObjetoActualProforma(Proforma proforma,ArrayList<Classe> classes) throws Exception {
		
			for(Classe clas:classes) {
				if(clas.clas.equals(TerminoProforma.class)) {
					proforma.setTerminoProformas(this.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.terminoproformaLogic.getTerminoProformas());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(DetalleProforma.class)) {
					proforma.setDetalleProformas(this.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.detalleproformaLogic.getDetalleProformas());
					break;
				}
			}
	}
	
	public Boolean permiteManejarEventosControl() {
		Boolean permite=true;				
		
		if(this.estaModoNuevo || this.estaModoSeleccionar || this.estaModoEliminarGuardarCambios) {
			permite=false;
			
		} 
		
		//NO DEBE MEZCLARSE CONCEPTOS
		/*	
		if(!paraTabla && !this.permiteMantenimiento(this.proforma)) {
			System.out.println("ERROR:EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES");
				
			//JOptionPane.showMessageDialog(this,"EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES","EVENTO",JOptionPane.ERROR_MESSAGE);			
		}
		*/
		
		return permite;
	}
	
	public void inicializarFormDetalle() throws Exception {
		
		this.jInternalFrameDetalleFormProforma = new ProformaDetalleFormJInternalFrame(jDesktopPane,this.proformaSessionBean.getConGuardarRelaciones(),this.proformaSessionBean.getEsGuardarRelacionado(),this.cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		this.jDesktopPane.add(this.jInternalFrameDetalleFormProforma);
		this.jInternalFrameDetalleFormProforma.setVisible(false);
		this.jInternalFrameDetalleFormProforma.setSelected(false);						
		
		this.jInternalFrameDetalleFormProforma.setJInternalFrameParent(this);
		
		this.jInternalFrameDetalleFormProforma.proformaLogic=this.proformaLogic;
		
		this.cargarCombosFrameForeignKeyProforma("Formulario");
		
		this.inicializarActualizarBindingBotonesPermisosManualFormDetalleProforma();
		this.inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleProforma();
		
		this.initActionsFormDetalle();		
		
		this.initActionsCombosTodosForeignKeyProforma("Formulario");
		
		//TALVEZ conSetVariablesGlobales COMO if() 
		this.setVariablesGlobalesCombosForeignKeyProforma();
		
		this.cargarMenuRelaciones();
		
	}
	
	public void initActionsFormDetalle() {	
		
		this.jInternalFrameDetalleFormProforma.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarProforma"));
		
		this.jInternalFrameDetalleFormProforma.jButtonModificarProforma.addActionListener(new ButtonActionListener(this,"ModificarProforma"));

		
		this.jInternalFrameDetalleFormProforma.jButtonModificarToolBarProforma.addActionListener(new ButtonActionListener(this,"ModificarToolBarProforma"));
					
		this.jInternalFrameDetalleFormProforma.jMenuItemModificarProforma.addActionListener(new ButtonActionListener(this,"MenuItemModificarProforma"));		
		
		
		
		this.jInternalFrameDetalleFormProforma.jButtonActualizarProforma.addActionListener (new ButtonActionListener(this,"ActualizarProforma"));
		
		
		this.jInternalFrameDetalleFormProforma.jButtonActualizarToolBarProforma.addActionListener(new ButtonActionListener(this,"ActualizarToolBarProforma"));
						
		this.jInternalFrameDetalleFormProforma.jMenuItemActualizarProforma.addActionListener (new ButtonActionListener(this,"MenuItemActualizarProforma"));		
		
		
		
		this.jInternalFrameDetalleFormProforma.jButtonEliminarProforma.addActionListener (new ButtonActionListener(this,"EliminarProforma"));
		
		
		this.jInternalFrameDetalleFormProforma.jButtonEliminarToolBarProforma.addActionListener (new ButtonActionListener(this,"EliminarToolBarProforma"));
								
		this.jInternalFrameDetalleFormProforma.jMenuItemEliminarProforma.addActionListener (new ButtonActionListener(this,"MenuItemEliminarProforma"));		
		
		
		
		this.jInternalFrameDetalleFormProforma.jButtonCancelarProforma.addActionListener (new ButtonActionListener(this,"CancelarProforma"));
		
		
		this.jInternalFrameDetalleFormProforma.jButtonCancelarToolBarProforma.addActionListener (new ButtonActionListener(this,"CancelarToolBarProforma"));
					
		this.jInternalFrameDetalleFormProforma.jMenuItemCancelarProforma.addActionListener (new ButtonActionListener(this,"MenuItemCancelarProforma"));		
		
		
		
		
		
		this.jInternalFrameDetalleFormProforma.jMenuItemDetalleCerrarProforma.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarProforma"));		
		
		
		
		this.jInternalFrameDetalleFormProforma.jButtonGuardarCambiosToolBarProforma.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarProforma"));
		
		
		
		this.jInternalFrameDetalleFormProforma.jButtonGuardarCambiosToolBarProforma.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarProforma"));
		
		
		
		this.jInternalFrameDetalleFormProforma.jComboBoxTiposAccionesFormularioProforma.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioProforma"));
		
		
				
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonidProformaBusqueda.addActionListener(new ButtonActionListener(this,"idProformaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProforma.jButtonid_empresaProformaUpdate.addActionListener(new ButtonActionListener(this,"id_empresaProformaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonid_empresaProformaBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaProformaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProforma.jButtonid_sucursalProformaUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalProformaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonid_sucursalProformaBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalProformaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProforma.jButtonid_usuarioProformaUpdate.addActionListener(new ButtonActionListener(this,"id_usuarioProformaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonid_usuarioProformaBusqueda.addActionListener(new ButtonActionListener(this,"id_usuarioProformaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProforma.jButtonid_ejercicioProformaUpdate.addActionListener(new ButtonActionListener(this,"id_ejercicioProformaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonid_ejercicioProformaBusqueda.addActionListener(new ButtonActionListener(this,"id_ejercicioProformaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProforma.jButtonid_periodoProformaUpdate.addActionListener(new ButtonActionListener(this,"id_periodoProformaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonid_periodoProformaBusqueda.addActionListener(new ButtonActionListener(this,"id_periodoProformaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProforma.jButtonid_anioProformaUpdate.addActionListener(new ButtonActionListener(this,"id_anioProformaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonid_anioProformaBusqueda.addActionListener(new ButtonActionListener(this,"id_anioProformaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProforma.jButtonid_mesProformaUpdate.addActionListener(new ButtonActionListener(this,"id_mesProformaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonid_mesProformaBusqueda.addActionListener(new ButtonActionListener(this,"id_mesProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonnumero_pre_impresoProformaBusqueda.addActionListener(new ButtonActionListener(this,"numero_pre_impresoProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonfecha_emisionProformaBusqueda.addActionListener(new ButtonActionListener(this,"fecha_emisionProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtondiasProformaBusqueda.addActionListener(new ButtonActionListener(this,"diasProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonfecha_vencimientoProformaBusqueda.addActionListener(new ButtonActionListener(this,"fecha_vencimientoProformaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProforma.jButtonid_monedaProformaUpdate.addActionListener(new ButtonActionListener(this,"id_monedaProformaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonid_monedaProformaBusqueda.addActionListener(new ButtonActionListener(this,"id_monedaProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtoncotizacionProformaBusqueda.addActionListener(new ButtonActionListener(this,"cotizacionProformaBusqueda"));
		//jButtonid_empleadoProforma.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_empleadoProformaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormProforma.jButtonid_empleadoProforma.addActionListener(new ButtonActionListener(this,"id_empleadoProforma"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProforma.jButtonid_empleadoProformaUpdate.addActionListener(new ButtonActionListener(this,"id_empleadoProformaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonid_empleadoProformaBusqueda.addActionListener(new ButtonActionListener(this,"id_empleadoProformaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProforma.jButtonid_formatoProformaUpdate.addActionListener(new ButtonActionListener(this,"id_formatoProformaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonid_formatoProformaBusqueda.addActionListener(new ButtonActionListener(this,"id_formatoProformaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProforma.jButtonid_estado_proformaProformaUpdate.addActionListener(new ButtonActionListener(this,"id_estado_proformaProformaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonid_estado_proformaProformaBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_proformaProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtondireccionProformaBusqueda.addActionListener(new ButtonActionListener(this,"direccionProformaBusqueda"));
		//jButtonid_clienteProforma.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_clienteProformaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormProforma.jButtonid_clienteProforma.addActionListener(new ButtonActionListener(this,"id_clienteProforma"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProforma.jButtonid_clienteProformaUpdate.addActionListener(new ButtonActionListener(this,"id_clienteProformaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonid_clienteProformaBusqueda.addActionListener(new ButtonActionListener(this,"id_clienteProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonrucProformaBusqueda.addActionListener(new ButtonActionListener(this,"rucProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtones_ofertaProformaBusqueda.addActionListener(new ButtonActionListener(this,"es_ofertaProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtontelefonoProformaBusqueda.addActionListener(new ButtonActionListener(this,"telefonoProformaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProforma.jButtonid_tipo_precioProformaUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_precioProformaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonid_tipo_precioProformaBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_precioProformaBusqueda"));
		//jButtonid_vendedorProforma.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_vendedorProformaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormProforma.jButtonid_vendedorProforma.addActionListener(new ButtonActionListener(this,"id_vendedorProforma"));
		//jButtonid_vendedorProformaArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeVendedor("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormProforma.jButtonid_vendedorProformaArbol.addActionListener(new ButtonActionListener(this,"id_vendedorProformaArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProforma.jButtonid_vendedorProformaUpdate.addActionListener(new ButtonActionListener(this,"id_vendedorProformaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonid_vendedorProformaBusqueda.addActionListener(new ButtonActionListener(this,"id_vendedorProformaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProforma.jButtonid_sub_clienteProformaUpdate.addActionListener(new ButtonActionListener(this,"id_sub_clienteProformaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonid_sub_clienteProformaBusqueda.addActionListener(new ButtonActionListener(this,"id_sub_clienteProformaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProforma.jButtonid_tipo_via_transporteProformaUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_via_transporteProformaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonid_tipo_via_transporteProformaBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_via_transporteProformaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProforma.jButtonid_transporteProformaUpdate.addActionListener(new ButtonActionListener(this,"id_transporteProformaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonid_transporteProformaBusqueda.addActionListener(new ButtonActionListener(this,"id_transporteProformaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProforma.jButtonid_ruta_transporteProformaUpdate.addActionListener(new ButtonActionListener(this,"id_ruta_transporteProformaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonid_ruta_transporteProformaBusqueda.addActionListener(new ButtonActionListener(this,"id_ruta_transporteProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtondescripcionProformaBusqueda.addActionListener(new ButtonActionListener(this,"descripcionProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtondescuento_porcentajeProformaBusqueda.addActionListener(new ButtonActionListener(this,"descuento_porcentajeProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonmonto_con_ivaProformaBusqueda.addActionListener(new ButtonActionListener(this,"monto_con_ivaProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonsumanProformaBusqueda.addActionListener(new ButtonActionListener(this,"sumanProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtondescuento_valorProformaBusqueda.addActionListener(new ButtonActionListener(this,"descuento_valorProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonmonto_sin_ivaProformaBusqueda.addActionListener(new ButtonActionListener(this,"monto_sin_ivaProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtondescuento_generalProformaBusqueda.addActionListener(new ButtonActionListener(this,"descuento_generalProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonfleteProformaBusqueda.addActionListener(new ButtonActionListener(this,"fleteProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonultimo_costoProformaBusqueda.addActionListener(new ButtonActionListener(this,"ultimo_costoProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonsubtotalProformaBusqueda.addActionListener(new ButtonActionListener(this,"subtotalProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonotros_cargosProformaBusqueda.addActionListener(new ButtonActionListener(this,"otros_cargosProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonmargen_utilidadProformaBusqueda.addActionListener(new ButtonActionListener(this,"margen_utilidadProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonivaProformaBusqueda.addActionListener(new ButtonActionListener(this,"ivaProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonfinanciamientoProformaBusqueda.addActionListener(new ButtonActionListener(this,"financiamientoProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtontotalProformaBusqueda.addActionListener(new ButtonActionListener(this,"totalProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonotros_valoresProformaBusqueda.addActionListener(new ButtonActionListener(this,"otros_valoresProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonanticipoProformaBusqueda.addActionListener(new ButtonActionListener(this,"anticipoProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtoniceProformaBusqueda.addActionListener(new ButtonActionListener(this,"iceProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonmonto_retencionProformaBusqueda.addActionListener(new ButtonActionListener(this,"monto_retencionProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonfechaProformaBusqueda.addActionListener(new ButtonActionListener(this,"fechaProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonfecha_servidorProformaBusqueda.addActionListener(new ButtonActionListener(this,"fecha_servidorProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonhora_inicioProformaBusqueda.addActionListener(new ButtonActionListener(this,"hora_inicioProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonhora_finProformaBusqueda.addActionListener(new ButtonActionListener(this,"hora_finProformaBusqueda"));
		//jButtonid_centro_costoProforma.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_centro_costoProformaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormProforma.jButtonid_centro_costoProforma.addActionListener(new ButtonActionListener(this,"id_centro_costoProforma"));
		//jButtonid_centro_costoProformaArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCentroCosto("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormProforma.jButtonid_centro_costoProformaArbol.addActionListener(new ButtonActionListener(this,"id_centro_costoProformaArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProforma.jButtonid_centro_costoProformaUpdate.addActionListener(new ButtonActionListener(this,"id_centro_costoProformaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonid_centro_costoProformaBusqueda.addActionListener(new ButtonActionListener(this,"id_centro_costoProformaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProforma.jButtonid_tipo_proformaProformaUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_proformaProformaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonid_tipo_proformaProformaBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_proformaProformaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProforma.jButtonid_consignatarioProformaUpdate.addActionListener(new ButtonActionListener(this,"id_consignatarioProformaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonid_consignatarioProformaBusqueda.addActionListener(new ButtonActionListener(this,"id_consignatarioProformaBusqueda"));
		//jButtonid_tipo_cambioProforma.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_tipo_cambioProformaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormProforma.jButtonid_tipo_cambioProforma.addActionListener(new ButtonActionListener(this,"id_tipo_cambioProforma"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProforma.jButtonid_tipo_cambioProformaUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_cambioProformaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonid_tipo_cambioProformaBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_cambioProformaBusqueda"));
		
		
		;

		//TABBED PANE RELACIONES
		this.jInternalFrameDetalleFormProforma.jTabbedPaneRelacionesProforma.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesProforma"));
		
		;		
		//TABBED PANE RELACIONES FIN(EXTRA TAB)	
	}
	
	public void initActions() {				
		this.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"CloseInternalFrameProforma"));
		
		if(this.jInternalFrameDetalleFormProforma!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormProforma.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarProforma"));
		}
		
		this.jTableDatosProforma.getSelectionModel().addListSelectionListener(new TableListSelectionListener(this,"TableDatosSeleccionarProforma"));
		
		this.jTableDatosProforma.addMouseListener(new TableMouseAdapter(this,"DatosSeleccionarProforma"));
		
		this.jButtonNuevoProforma.addActionListener(new ButtonActionListener(this,"NuevoProforma"));
		
		this.jButtonDuplicarProforma.addActionListener(new ButtonActionListener(this,"DuplicarProforma"));
		
		this.jButtonCopiarProforma.addActionListener(new ButtonActionListener(this,"CopiarProforma"));
		
		this.jButtonVerFormProforma.addActionListener(new ButtonActionListener(this,"VerFormProforma"));
		
		
		this.jButtonNuevoToolBarProforma.addActionListener(new ButtonActionListener(this,"NuevoToolBarProforma"));
			
		this.jButtonDuplicarToolBarProforma.addActionListener(new ButtonActionListener(this,"DuplicarToolBarProforma"));
			
		this.jMenuItemNuevoProforma.addActionListener (new ButtonActionListener(this,"MenuItemNuevoProforma"));
			
		this.jMenuItemDuplicarProforma.addActionListener (new ButtonActionListener(this,"MenuItemDuplicarProforma"));		
		
		
		this.jButtonNuevoRelacionesProforma.addActionListener (new ButtonActionListener(this,"NuevoRelacionesProforma"));
		
		
		this.jButtonNuevoRelacionesToolBarProforma.addActionListener(new ButtonActionListener(this,"NuevoRelacionesToolBarProforma"));
			
		this.jMenuItemNuevoRelacionesProforma.addActionListener(new ButtonActionListener(this,"MenuItemNuevoRelacionesProforma"));		
		
		
		if(this.jInternalFrameDetalleFormProforma!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormProforma.jButtonModificarProforma.addActionListener(new ButtonActionListener(this,"ModificarProforma"));
		}
		
		
		if(this.jInternalFrameDetalleFormProforma!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormProforma.jButtonModificarToolBarProforma.addActionListener(new ButtonActionListener(this,"ModificarToolBarProforma"));
			
			this.jInternalFrameDetalleFormProforma.jMenuItemModificarProforma.addActionListener(new ButtonActionListener(this,"MenuItemModificarProforma"));		
		}
		
		
		if(this.jInternalFrameDetalleFormProforma!=null) { //if(this.conCargarFormDetalle) {			
			this.jInternalFrameDetalleFormProforma.jButtonActualizarProforma.addActionListener (new ButtonActionListener(this,"ActualizarProforma"));
		}
		
		
		if(this.jInternalFrameDetalleFormProforma!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormProforma.jButtonActualizarToolBarProforma.addActionListener(new ButtonActionListener(this,"ActualizarToolBarProforma"));
				
			this.jInternalFrameDetalleFormProforma.jMenuItemActualizarProforma.addActionListener (new ButtonActionListener(this,"MenuItemActualizarProforma"));		
		}
		
		
		if(this.jInternalFrameDetalleFormProforma!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormProforma.jButtonEliminarProforma.addActionListener (new ButtonActionListener(this,"EliminarProforma"));
		}
		
		
		if(this.jInternalFrameDetalleFormProforma!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormProforma.jButtonEliminarToolBarProforma.addActionListener (new ButtonActionListener(this,"EliminarToolBarProforma"));
						
			this.jInternalFrameDetalleFormProforma.jMenuItemEliminarProforma.addActionListener (new ButtonActionListener(this,"MenuItemEliminarProforma"));		
		}
		
		
		if(this.jInternalFrameDetalleFormProforma!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormProforma.jButtonCancelarProforma.addActionListener (new ButtonActionListener(this,"CancelarProforma"));
		}
		
		
		if(this.jInternalFrameDetalleFormProforma!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormProforma.jButtonCancelarToolBarProforma.addActionListener (new ButtonActionListener(this,"CancelarToolBarProforma"));
			
			this.jInternalFrameDetalleFormProforma.jMenuItemCancelarProforma.addActionListener (new ButtonActionListener(this,"MenuItemCancelarProforma"));		
		}
		
		this.jButtonMostrarOcultarTablaToolBarProforma.addActionListener (new ButtonActionListener(this,"MostrarOcultarToolBarProforma"));		
		
		
		this.jButtonCerrarProforma.addActionListener (new ButtonActionListener(this,"CerrarProforma"));
		
		
		this.jButtonCerrarToolBarProforma.addActionListener (new ButtonActionListener(this,"CerrarToolBarProforma"));
			
		this.jMenuItemCerrarProforma.addActionListener (new ButtonActionListener(this,"MenuItemCerrarProforma"));
			
		if(this.jInternalFrameDetalleFormProforma!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormProforma.jMenuItemDetalleCerrarProforma.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarProforma"));		
		}
		
		
		if(this.jInternalFrameDetalleFormProforma!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormProforma.jButtonGuardarCambiosProforma.addActionListener (new ButtonActionListener(this,"GuardarCambiosProforma"));
		}
		
		
		if(this.jInternalFrameDetalleFormProforma!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormProforma.jButtonGuardarCambiosToolBarProforma.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarProforma"));
		}
		
		this.jButtonCopiarToolBarProforma.addActionListener (new ButtonActionListener(this,"CopiarToolBarProforma"));
			
		this.jButtonVerFormToolBarProforma.addActionListener (new ButtonActionListener(this,"VerFormToolBarProforma"));
		
		this.jMenuItemGuardarCambiosProforma.addActionListener (new ButtonActionListener(this,"MenuItemGuardarCambiosProforma"));
			
		this.jMenuItemCopiarProforma.addActionListener (new ButtonActionListener(this,"MenuItemCopiarProforma"));		
		
		this.jMenuItemVerFormProforma.addActionListener (new ButtonActionListener(this,"MenuItemVerFormProforma"));		
		
		
		this.jButtonGuardarCambiosTablaProforma.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaProforma"));
		
		
		this.jButtonGuardarCambiosTablaToolBarProforma.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaToolBarProforma"));
			
		this.jMenuItemGuardarCambiosTablaProforma.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaProforma"));		
		
		
		
		this.jButtonRecargarInformacionProforma.addActionListener (new ButtonActionListener(this,"RecargarInformacionProforma"));
					
		this.jButtonRecargarInformacionToolBarProforma.addActionListener (new ButtonActionListener(this,"RecargarInformacionToolBarProforma"));
		
		this.jMenuItemRecargarInformacionProforma.addActionListener (new ButtonActionListener(this,"MenuItemRecargarInformacionProforma"));		
		
		
		
		this.jButtonAnterioresProforma.addActionListener (new ButtonActionListener(this,"AnterioresProforma"));
		
		
		this.jButtonAnterioresToolBarProforma.addActionListener (new ButtonActionListener(this,"AnterioresToolBarProforma"));
		
		this.jMenuItemAnterioresProforma.addActionListener (new ButtonActionListener(this,"MenuItemAnterioresProforma"));		
		
		
		this.jButtonSiguientesProforma.addActionListener (new ButtonActionListener(this,"SiguientesProforma"));
		
		
		this.jButtonSiguientesToolBarProforma.addActionListener (new ButtonActionListener(this,"SiguientesToolBarProforma"));
			
		this.jMenuItemSiguientesProforma.addActionListener (new ButtonActionListener(this,"MenuItemSiguientesProforma"));
			
		this.jMenuItemAbrirOrderByProforma.addActionListener (new ButtonActionListener(this,"MenuItemAbrirOrderByProforma"));
			
		this.jMenuItemMostrarOcultarProforma.addActionListener (new ButtonActionListener(this,"MenuItemMostrarOcultarProforma"));
			
		this.jMenuItemDetalleAbrirOrderByProforma.addActionListener (new ButtonActionListener(this,"MenuItemDetalleAbrirOrderByProforma"));
			
		this.jMenuItemDetalleMostarOcultarProforma.addActionListener (new ButtonActionListener(this,"MenuItemDetalleMostrarOcultarProforma"));		
		
		
		this.jButtonNuevoGuardarCambiosProforma.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosProforma"));
		
		
		this.jButtonNuevoGuardarCambiosToolBarProforma.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosToolBarProforma"));
			
		this.jMenuItemNuevoGuardarCambiosProforma.addActionListener (new ButtonActionListener(this,"MenuItemNuevoGuardarCambiosProforma"));		
		
		
		
		//SELECCIONAR TODOS
		
		this.jCheckBoxSeleccionarTodosProforma.addItemListener(new CheckBoxItemListener(this,"SeleccionarTodosProforma"));

		this.jCheckBoxSeleccionadosProforma.addItemListener(new CheckBoxItemListener(this,"SeleccionadosProforma"));
		
		if(this.jInternalFrameDetalleFormProforma!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormProforma.jComboBoxTiposAccionesFormularioProforma.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioProforma"));
		}
		
		
		this.jComboBoxTiposRelacionesProforma.addActionListener (new ButtonActionListener(this,"TiposRelacionesProforma"));
			
		this.jComboBoxTiposAccionesProforma.addActionListener (new ButtonActionListener(this,"TiposAccionesProforma"));
					
		this.jComboBoxTiposSeleccionarProforma.addActionListener (new ButtonActionListener(this,"TiposSeleccionarProforma"));
			
		this.jTextFieldValorCampoGeneralProforma.addActionListener (new ButtonActionListener(this,"ValorCampoGeneralProforma"));		
		
		
		if(this.jInternalFrameDetalleFormProforma!=null) { //if(this.conCargarFormDetalle) {
		
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonidProformaBusqueda.addActionListener(new ButtonActionListener(this,"idProformaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProforma.jButtonid_empresaProformaUpdate.addActionListener(new ButtonActionListener(this,"id_empresaProformaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonid_empresaProformaBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaProformaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProforma.jButtonid_sucursalProformaUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalProformaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonid_sucursalProformaBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalProformaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProforma.jButtonid_usuarioProformaUpdate.addActionListener(new ButtonActionListener(this,"id_usuarioProformaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonid_usuarioProformaBusqueda.addActionListener(new ButtonActionListener(this,"id_usuarioProformaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProforma.jButtonid_ejercicioProformaUpdate.addActionListener(new ButtonActionListener(this,"id_ejercicioProformaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonid_ejercicioProformaBusqueda.addActionListener(new ButtonActionListener(this,"id_ejercicioProformaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProforma.jButtonid_periodoProformaUpdate.addActionListener(new ButtonActionListener(this,"id_periodoProformaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonid_periodoProformaBusqueda.addActionListener(new ButtonActionListener(this,"id_periodoProformaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProforma.jButtonid_anioProformaUpdate.addActionListener(new ButtonActionListener(this,"id_anioProformaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonid_anioProformaBusqueda.addActionListener(new ButtonActionListener(this,"id_anioProformaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProforma.jButtonid_mesProformaUpdate.addActionListener(new ButtonActionListener(this,"id_mesProformaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonid_mesProformaBusqueda.addActionListener(new ButtonActionListener(this,"id_mesProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonnumero_pre_impresoProformaBusqueda.addActionListener(new ButtonActionListener(this,"numero_pre_impresoProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonfecha_emisionProformaBusqueda.addActionListener(new ButtonActionListener(this,"fecha_emisionProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtondiasProformaBusqueda.addActionListener(new ButtonActionListener(this,"diasProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonfecha_vencimientoProformaBusqueda.addActionListener(new ButtonActionListener(this,"fecha_vencimientoProformaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProforma.jButtonid_monedaProformaUpdate.addActionListener(new ButtonActionListener(this,"id_monedaProformaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonid_monedaProformaBusqueda.addActionListener(new ButtonActionListener(this,"id_monedaProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtoncotizacionProformaBusqueda.addActionListener(new ButtonActionListener(this,"cotizacionProformaBusqueda"));
		//jButtonid_empleadoProforma.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_empleadoProformaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormProforma.jButtonid_empleadoProforma.addActionListener(new ButtonActionListener(this,"id_empleadoProforma"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProforma.jButtonid_empleadoProformaUpdate.addActionListener(new ButtonActionListener(this,"id_empleadoProformaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonid_empleadoProformaBusqueda.addActionListener(new ButtonActionListener(this,"id_empleadoProformaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProforma.jButtonid_formatoProformaUpdate.addActionListener(new ButtonActionListener(this,"id_formatoProformaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonid_formatoProformaBusqueda.addActionListener(new ButtonActionListener(this,"id_formatoProformaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProforma.jButtonid_estado_proformaProformaUpdate.addActionListener(new ButtonActionListener(this,"id_estado_proformaProformaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonid_estado_proformaProformaBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_proformaProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtondireccionProformaBusqueda.addActionListener(new ButtonActionListener(this,"direccionProformaBusqueda"));
		//jButtonid_clienteProforma.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_clienteProformaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormProforma.jButtonid_clienteProforma.addActionListener(new ButtonActionListener(this,"id_clienteProforma"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProforma.jButtonid_clienteProformaUpdate.addActionListener(new ButtonActionListener(this,"id_clienteProformaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonid_clienteProformaBusqueda.addActionListener(new ButtonActionListener(this,"id_clienteProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonrucProformaBusqueda.addActionListener(new ButtonActionListener(this,"rucProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtones_ofertaProformaBusqueda.addActionListener(new ButtonActionListener(this,"es_ofertaProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtontelefonoProformaBusqueda.addActionListener(new ButtonActionListener(this,"telefonoProformaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProforma.jButtonid_tipo_precioProformaUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_precioProformaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonid_tipo_precioProformaBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_precioProformaBusqueda"));
		//jButtonid_vendedorProforma.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_vendedorProformaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormProforma.jButtonid_vendedorProforma.addActionListener(new ButtonActionListener(this,"id_vendedorProforma"));
		//jButtonid_vendedorProformaArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeVendedor("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormProforma.jButtonid_vendedorProformaArbol.addActionListener(new ButtonActionListener(this,"id_vendedorProformaArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProforma.jButtonid_vendedorProformaUpdate.addActionListener(new ButtonActionListener(this,"id_vendedorProformaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonid_vendedorProformaBusqueda.addActionListener(new ButtonActionListener(this,"id_vendedorProformaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProforma.jButtonid_sub_clienteProformaUpdate.addActionListener(new ButtonActionListener(this,"id_sub_clienteProformaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonid_sub_clienteProformaBusqueda.addActionListener(new ButtonActionListener(this,"id_sub_clienteProformaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProforma.jButtonid_tipo_via_transporteProformaUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_via_transporteProformaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonid_tipo_via_transporteProformaBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_via_transporteProformaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProforma.jButtonid_transporteProformaUpdate.addActionListener(new ButtonActionListener(this,"id_transporteProformaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonid_transporteProformaBusqueda.addActionListener(new ButtonActionListener(this,"id_transporteProformaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProforma.jButtonid_ruta_transporteProformaUpdate.addActionListener(new ButtonActionListener(this,"id_ruta_transporteProformaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonid_ruta_transporteProformaBusqueda.addActionListener(new ButtonActionListener(this,"id_ruta_transporteProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtondescripcionProformaBusqueda.addActionListener(new ButtonActionListener(this,"descripcionProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtondescuento_porcentajeProformaBusqueda.addActionListener(new ButtonActionListener(this,"descuento_porcentajeProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonmonto_con_ivaProformaBusqueda.addActionListener(new ButtonActionListener(this,"monto_con_ivaProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonsumanProformaBusqueda.addActionListener(new ButtonActionListener(this,"sumanProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtondescuento_valorProformaBusqueda.addActionListener(new ButtonActionListener(this,"descuento_valorProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonmonto_sin_ivaProformaBusqueda.addActionListener(new ButtonActionListener(this,"monto_sin_ivaProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtondescuento_generalProformaBusqueda.addActionListener(new ButtonActionListener(this,"descuento_generalProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonfleteProformaBusqueda.addActionListener(new ButtonActionListener(this,"fleteProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonultimo_costoProformaBusqueda.addActionListener(new ButtonActionListener(this,"ultimo_costoProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonsubtotalProformaBusqueda.addActionListener(new ButtonActionListener(this,"subtotalProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonotros_cargosProformaBusqueda.addActionListener(new ButtonActionListener(this,"otros_cargosProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonmargen_utilidadProformaBusqueda.addActionListener(new ButtonActionListener(this,"margen_utilidadProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonivaProformaBusqueda.addActionListener(new ButtonActionListener(this,"ivaProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonfinanciamientoProformaBusqueda.addActionListener(new ButtonActionListener(this,"financiamientoProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtontotalProformaBusqueda.addActionListener(new ButtonActionListener(this,"totalProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonotros_valoresProformaBusqueda.addActionListener(new ButtonActionListener(this,"otros_valoresProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonanticipoProformaBusqueda.addActionListener(new ButtonActionListener(this,"anticipoProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtoniceProformaBusqueda.addActionListener(new ButtonActionListener(this,"iceProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonmonto_retencionProformaBusqueda.addActionListener(new ButtonActionListener(this,"monto_retencionProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonfechaProformaBusqueda.addActionListener(new ButtonActionListener(this,"fechaProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonfecha_servidorProformaBusqueda.addActionListener(new ButtonActionListener(this,"fecha_servidorProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonhora_inicioProformaBusqueda.addActionListener(new ButtonActionListener(this,"hora_inicioProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonhora_finProformaBusqueda.addActionListener(new ButtonActionListener(this,"hora_finProformaBusqueda"));
		//jButtonid_centro_costoProforma.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_centro_costoProformaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormProforma.jButtonid_centro_costoProforma.addActionListener(new ButtonActionListener(this,"id_centro_costoProforma"));
		//jButtonid_centro_costoProformaArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCentroCosto("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormProforma.jButtonid_centro_costoProformaArbol.addActionListener(new ButtonActionListener(this,"id_centro_costoProformaArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProforma.jButtonid_centro_costoProformaUpdate.addActionListener(new ButtonActionListener(this,"id_centro_costoProformaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonid_centro_costoProformaBusqueda.addActionListener(new ButtonActionListener(this,"id_centro_costoProformaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProforma.jButtonid_tipo_proformaProformaUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_proformaProformaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonid_tipo_proformaProformaBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_proformaProformaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProforma.jButtonid_consignatarioProformaUpdate.addActionListener(new ButtonActionListener(this,"id_consignatarioProformaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonid_consignatarioProformaBusqueda.addActionListener(new ButtonActionListener(this,"id_consignatarioProformaBusqueda"));
		//jButtonid_tipo_cambioProforma.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_tipo_cambioProformaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormProforma.jButtonid_tipo_cambioProforma.addActionListener(new ButtonActionListener(this,"id_tipo_cambioProforma"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProforma.jButtonid_tipo_cambioProformaUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_cambioProformaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonid_tipo_cambioProformaBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_cambioProformaBusqueda"));
		}
		
		if(!this.conCargarMinimo) {
		//BYDAN_BUSQUEDAS
		
		
			this.jButtonFK_IdCentroCostoProforma.addActionListener(new ButtonActionListener(this,"FK_IdCentroCostoProforma"));

			this.jButtonBuscarFK_IdCentroCostoid_centro_costoProforma.addActionListener(new ButtonActionListener(this,"id_centro_costoProforma"));

			this.jButtonFK_IdClienteProforma.addActionListener(new ButtonActionListener(this,"FK_IdClienteProforma"));

			this.jButtonBuscarFK_IdClienteid_clienteProforma.addActionListener(new ButtonActionListener(this,"id_clienteProforma"));

			this.jButtonFK_IdConsignatarioProforma.addActionListener(new ButtonActionListener(this,"FK_IdConsignatarioProforma"));

			this.jButtonFK_IdEmpleadoProforma.addActionListener(new ButtonActionListener(this,"FK_IdEmpleadoProforma"));

			this.jButtonBuscarFK_IdEmpleadoid_empleadoProforma.addActionListener(new ButtonActionListener(this,"id_empleadoProforma"));

			this.jButtonFK_IdEstadoProformaProforma.addActionListener(new ButtonActionListener(this,"FK_IdEstadoProformaProforma"));

			this.jButtonFK_IdFormatoProforma.addActionListener(new ButtonActionListener(this,"FK_IdFormatoProforma"));

			this.jButtonFK_IdRutaTransporteProforma.addActionListener(new ButtonActionListener(this,"FK_IdRutaTransporteProforma"));

			this.jButtonFK_IdSubClienteProforma.addActionListener(new ButtonActionListener(this,"FK_IdSubClienteProforma"));

			this.jButtonFK_IdTipoCambioProforma.addActionListener(new ButtonActionListener(this,"FK_IdTipoCambioProforma"));

			this.jButtonBuscarFK_IdTipoCambioid_tipo_cambioProforma.addActionListener(new ButtonActionListener(this,"id_tipo_cambioProforma"));

			this.jButtonFK_IdTipoPrecioProforma.addActionListener(new ButtonActionListener(this,"FK_IdTipoPrecioProforma"));

			this.jButtonFK_IdTipoProformaProforma.addActionListener(new ButtonActionListener(this,"FK_IdTipoProformaProforma"));

			this.jButtonFK_IdTipoViaTransporteProforma.addActionListener(new ButtonActionListener(this,"FK_IdTipoViaTransporteProforma"));

			this.jButtonFK_IdTransporteProforma.addActionListener(new ButtonActionListener(this,"FK_IdTransporteProforma"));

			this.jButtonFK_IdVendedorProforma.addActionListener(new ButtonActionListener(this,"FK_IdVendedorProforma"));

			this.jButtonBuscarFK_IdVendedorid_vendedorProforma.addActionListener(new ButtonActionListener(this,"id_vendedorProforma"));
		
		
		
			//REPORTE DINAMICO
			
			if(this.jInternalFrameReporteDinamicoProforma!=null) {
				this.jInternalFrameReporteDinamicoProforma.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoProforma"));
				this.jInternalFrameReporteDinamicoProforma.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoProforma"));
				this.jInternalFrameReporteDinamicoProforma.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoProforma"));
			}
			
			//this.jButtonCerrarReporteDinamicoProforma.addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoProforma"));				
			//this.jButtonGenerarReporteDinamicoProforma.addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoProforma"));
			//this.jButtonGenerarExcelReporteDinamicoProforma.addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoProforma"));
				
				
			//IMPORTACION			
			if(this.jInternalFrameImportacionProforma!=null) {
				this.jInternalFrameImportacionProforma.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionProforma"));
				this.jInternalFrameImportacionProforma.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionProforma"));
				this.jInternalFrameImportacionProforma.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionProforma"));
			}
			
			//ORDER BY
			this.jButtonAbrirOrderByProforma.addActionListener (new ButtonActionListener(this,"AbrirOrderByProforma"));
			
			this.jButtonAbrirOrderByToolBarProforma.addActionListener (new ButtonActionListener(this,"AbrirOrderByToolBarProforma"));			
			
			if(this.jInternalFrameOrderByProforma!=null) {
				this.jInternalFrameOrderByProforma.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByProforma"));				
			}
			
			
		}
		
		
		
		if(!this.conCargarMinimo) {
			if(this.jInternalFrameDetalleFormProforma!=null) { //if(this.conCargarFormDetalle) {
			;
			}
		}
		
		
		//TABBED PANE RELACIONES
		if(this.jInternalFrameDetalleFormProforma!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormProforma.jTabbedPaneRelacionesProforma.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesProforma"));
		
		;
		}
		//TABBED PANE RELACIONES FIN(EXTRA TAB)		
	}
	
	/*
	public void initActions() {
		String sMapKey = "";
		InputMap inputMap =null;
		
		this.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
            public void internalFrameClosing(InternalFrameEvent event) {          	
            	try {
            		closingInternalFrameProforma();
				} catch (Exception e) {
					e.printStackTrace();
				}
            }
        });
		
		this.jInternalFrameDetalleFormProforma.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
	        public void internalFrameClosing(InternalFrameEvent event) {
	            JInternalFrameBase jInternalFrameDetalleFormProforma = (JInternalFrameBase)event.getSource();
	            	
	            ProformaBeanSwingJInternalFrame jInternalFrameParent=(ProformaBeanSwingJInternalFrame)jInternalFrameDetalleFormProforma.getjInternalFrameParent();
	                
	            try {
					jInternalFrameParent.jButtonCancelarProformaActionPerformed(null);
					
					//jInternalFrameParent.dispose();
					//jInternalFrameParent=null;
					
				} catch (Exception e) {
					e.printStackTrace();
				}
	        }
	    });
			
		this.jTableDatosProforma.getSelectionModel().addListSelectionListener (
	                new ListSelectionListener() {
	                    public void valueChanged(ListSelectionEvent e) {
							//BYDAN_DESHABILITADO
	                    	//try {jTableDatosProformaListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
	                    }
	                }
	     );
		
		this.jTableDatosProforma.addMouseListener(new MouseAdapter() {
			   public void mouseClicked(MouseEvent evt) {
				      if (evt.getClickCount() == 2) {
				    	  jButtonIdActionPerformed(null,jTableDatosProforma.getSelectedRow(),false,false);
				      }
				   }
		});
		
		this.jButtonNuevoProforma.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoProformaActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoToolBarProforma.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoProformaActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoProforma.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoProformaActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoProforma";
		inputMap = this.jButtonNuevoProforma.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_N , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoProforma.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoProformaActionPerformed(evt,false);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonNuevoRelacionesProforma.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoProformaActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoRelacionesToolBarProforma.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoProformaActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoRelacionesProforma.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoProformaActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoRelacionesProforma";
		inputMap = this.jButtonNuevoRelacionesProforma.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_R , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoRelacionesProforma.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoProformaActionPerformed(evt,true);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonModificarProforma.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarProformaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonModificarToolBarProforma.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarProformaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemModificarProforma.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarProformaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ModificarProforma";
		inputMap = this.jButtonModificarProforma.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_M , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonModificarProforma.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonModificarProformaActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonActualizarProforma.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarProformaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonActualizarToolBarProforma.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarProformaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemActualizarProforma.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarProformaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ActualizarProforma";
		inputMap = this.jButtonActualizarProforma.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonActualizarProforma.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonActualizarProformaActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonEliminarProforma.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarProformaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonEliminarToolBarProforma.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarProformaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
				
		this.jMenuItemEliminarProforma.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarProformaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "EliminarProforma";
		inputMap = this.jButtonEliminarProforma.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_E , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonEliminarProforma.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonEliminarProformaActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCancelarProforma.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarProformaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCancelarToolBarProforma.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarProformaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCancelarProforma.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarProformaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CancelarProforma";
		inputMap = this.jButtonCancelarProforma.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_Q , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonCancelarProforma.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCancelarProformaActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCerrarProforma.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarProformaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCerrarToolBarProforma.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarProformaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCerrarProforma.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarProformaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemDetalleCerrarProforma.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  //try {jButtonCerrarProformaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
					try {jButtonCancelarProformaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CerrarProforma";
		inputMap = this.jButtonCerrarProforma.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_C , KeyEvent.ALT_MASK), sMapKey);
			
		this.jButtonCerrarProforma.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCerrarProformaActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jInternalFrameDetalleFormProforma.jButtonGuardarCambiosProforma.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosProformaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosToolBarProforma.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosProformaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosProforma.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosProformaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaProforma.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosProformaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaToolBarProforma.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosProformaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosTablaProforma.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosProformaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "GuardarCambiosProforma";
		inputMap = this.jInternalFrameDetalleFormProforma.jButtonGuardarCambiosProforma.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jInternalFrameDetalleFormProforma.jButtonGuardarCambiosProforma.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonGuardarCambiosProformaActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonRecargarInformacionProforma.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionProformaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonRecargarInformacionToolBarProforma.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionProformaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemRecargarInformacionProforma.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionProformaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		this.jButtonAnterioresProforma.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresProformaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAnterioresToolBarProforma.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresProformaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemAnterioresProforma.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresProformaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesProforma.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesProformaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesToolBarProforma.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesProformaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemSiguientesProforma.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesProformaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosProforma.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosProformaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosToolBarProforma.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosProformaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoGuardarCambiosProforma.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosProformaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		//SELECCIONAR TODOS
		this.jCheckBoxSeleccionarTodosProforma.addItemListener(new ItemListener() {		
			public void itemStateChanged(ItemEvent evt) {
				try {jCheckBoxSeleccionarTodosProformaItemListener(evt);}catch(Exception e){e.printStackTrace();}
			}
		});

		this.jComboBoxTiposAccionesProforma.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposAccionesProformaActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jComboBoxTiposSeleccionarProforma.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposSeleccionarProformaActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jTextFieldValorCampoGeneralProforma.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jTextFieldValorCampoGeneralProformaActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonidProformaBusqueda.addActionListener(new ButtonActionListener(this,"idProformaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProforma.jButtonid_empresaProformaUpdate.addActionListener(new ButtonActionListener(this,"id_empresaProformaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonid_empresaProformaBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaProformaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProforma.jButtonid_sucursalProformaUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalProformaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonid_sucursalProformaBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalProformaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProforma.jButtonid_usuarioProformaUpdate.addActionListener(new ButtonActionListener(this,"id_usuarioProformaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonid_usuarioProformaBusqueda.addActionListener(new ButtonActionListener(this,"id_usuarioProformaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProforma.jButtonid_ejercicioProformaUpdate.addActionListener(new ButtonActionListener(this,"id_ejercicioProformaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonid_ejercicioProformaBusqueda.addActionListener(new ButtonActionListener(this,"id_ejercicioProformaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProforma.jButtonid_periodoProformaUpdate.addActionListener(new ButtonActionListener(this,"id_periodoProformaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonid_periodoProformaBusqueda.addActionListener(new ButtonActionListener(this,"id_periodoProformaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProforma.jButtonid_anioProformaUpdate.addActionListener(new ButtonActionListener(this,"id_anioProformaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonid_anioProformaBusqueda.addActionListener(new ButtonActionListener(this,"id_anioProformaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProforma.jButtonid_mesProformaUpdate.addActionListener(new ButtonActionListener(this,"id_mesProformaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonid_mesProformaBusqueda.addActionListener(new ButtonActionListener(this,"id_mesProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonnumero_pre_impresoProformaBusqueda.addActionListener(new ButtonActionListener(this,"numero_pre_impresoProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonfecha_emisionProformaBusqueda.addActionListener(new ButtonActionListener(this,"fecha_emisionProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtondiasProformaBusqueda.addActionListener(new ButtonActionListener(this,"diasProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonfecha_vencimientoProformaBusqueda.addActionListener(new ButtonActionListener(this,"fecha_vencimientoProformaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProforma.jButtonid_monedaProformaUpdate.addActionListener(new ButtonActionListener(this,"id_monedaProformaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonid_monedaProformaBusqueda.addActionListener(new ButtonActionListener(this,"id_monedaProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtoncotizacionProformaBusqueda.addActionListener(new ButtonActionListener(this,"cotizacionProformaBusqueda"));
		//jButtonid_empleadoProforma.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_empleadoProformaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormProforma.jButtonid_empleadoProforma.addActionListener(new ButtonActionListener(this,"id_empleadoProforma"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProforma.jButtonid_empleadoProformaUpdate.addActionListener(new ButtonActionListener(this,"id_empleadoProformaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonid_empleadoProformaBusqueda.addActionListener(new ButtonActionListener(this,"id_empleadoProformaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProforma.jButtonid_formatoProformaUpdate.addActionListener(new ButtonActionListener(this,"id_formatoProformaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonid_formatoProformaBusqueda.addActionListener(new ButtonActionListener(this,"id_formatoProformaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProforma.jButtonid_estado_proformaProformaUpdate.addActionListener(new ButtonActionListener(this,"id_estado_proformaProformaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonid_estado_proformaProformaBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_proformaProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtondireccionProformaBusqueda.addActionListener(new ButtonActionListener(this,"direccionProformaBusqueda"));
		//jButtonid_clienteProforma.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_clienteProformaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormProforma.jButtonid_clienteProforma.addActionListener(new ButtonActionListener(this,"id_clienteProforma"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProforma.jButtonid_clienteProformaUpdate.addActionListener(new ButtonActionListener(this,"id_clienteProformaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonid_clienteProformaBusqueda.addActionListener(new ButtonActionListener(this,"id_clienteProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonrucProformaBusqueda.addActionListener(new ButtonActionListener(this,"rucProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtones_ofertaProformaBusqueda.addActionListener(new ButtonActionListener(this,"es_ofertaProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtontelefonoProformaBusqueda.addActionListener(new ButtonActionListener(this,"telefonoProformaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProforma.jButtonid_tipo_precioProformaUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_precioProformaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonid_tipo_precioProformaBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_precioProformaBusqueda"));
		//jButtonid_vendedorProforma.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_vendedorProformaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormProforma.jButtonid_vendedorProforma.addActionListener(new ButtonActionListener(this,"id_vendedorProforma"));
		//jButtonid_vendedorProformaArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeVendedor("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormProforma.jButtonid_vendedorProformaArbol.addActionListener(new ButtonActionListener(this,"id_vendedorProformaArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProforma.jButtonid_vendedorProformaUpdate.addActionListener(new ButtonActionListener(this,"id_vendedorProformaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonid_vendedorProformaBusqueda.addActionListener(new ButtonActionListener(this,"id_vendedorProformaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProforma.jButtonid_sub_clienteProformaUpdate.addActionListener(new ButtonActionListener(this,"id_sub_clienteProformaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonid_sub_clienteProformaBusqueda.addActionListener(new ButtonActionListener(this,"id_sub_clienteProformaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProforma.jButtonid_tipo_via_transporteProformaUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_via_transporteProformaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonid_tipo_via_transporteProformaBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_via_transporteProformaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProforma.jButtonid_transporteProformaUpdate.addActionListener(new ButtonActionListener(this,"id_transporteProformaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonid_transporteProformaBusqueda.addActionListener(new ButtonActionListener(this,"id_transporteProformaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProforma.jButtonid_ruta_transporteProformaUpdate.addActionListener(new ButtonActionListener(this,"id_ruta_transporteProformaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonid_ruta_transporteProformaBusqueda.addActionListener(new ButtonActionListener(this,"id_ruta_transporteProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtondescripcionProformaBusqueda.addActionListener(new ButtonActionListener(this,"descripcionProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtondescuento_porcentajeProformaBusqueda.addActionListener(new ButtonActionListener(this,"descuento_porcentajeProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonmonto_con_ivaProformaBusqueda.addActionListener(new ButtonActionListener(this,"monto_con_ivaProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonsumanProformaBusqueda.addActionListener(new ButtonActionListener(this,"sumanProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtondescuento_valorProformaBusqueda.addActionListener(new ButtonActionListener(this,"descuento_valorProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonmonto_sin_ivaProformaBusqueda.addActionListener(new ButtonActionListener(this,"monto_sin_ivaProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtondescuento_generalProformaBusqueda.addActionListener(new ButtonActionListener(this,"descuento_generalProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonfleteProformaBusqueda.addActionListener(new ButtonActionListener(this,"fleteProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonultimo_costoProformaBusqueda.addActionListener(new ButtonActionListener(this,"ultimo_costoProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonsubtotalProformaBusqueda.addActionListener(new ButtonActionListener(this,"subtotalProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonotros_cargosProformaBusqueda.addActionListener(new ButtonActionListener(this,"otros_cargosProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonmargen_utilidadProformaBusqueda.addActionListener(new ButtonActionListener(this,"margen_utilidadProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonivaProformaBusqueda.addActionListener(new ButtonActionListener(this,"ivaProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonfinanciamientoProformaBusqueda.addActionListener(new ButtonActionListener(this,"financiamientoProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtontotalProformaBusqueda.addActionListener(new ButtonActionListener(this,"totalProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonotros_valoresProformaBusqueda.addActionListener(new ButtonActionListener(this,"otros_valoresProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonanticipoProformaBusqueda.addActionListener(new ButtonActionListener(this,"anticipoProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtoniceProformaBusqueda.addActionListener(new ButtonActionListener(this,"iceProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonmonto_retencionProformaBusqueda.addActionListener(new ButtonActionListener(this,"monto_retencionProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonfechaProformaBusqueda.addActionListener(new ButtonActionListener(this,"fechaProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonfecha_servidorProformaBusqueda.addActionListener(new ButtonActionListener(this,"fecha_servidorProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonhora_inicioProformaBusqueda.addActionListener(new ButtonActionListener(this,"hora_inicioProformaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonhora_finProformaBusqueda.addActionListener(new ButtonActionListener(this,"hora_finProformaBusqueda"));
		//jButtonid_centro_costoProforma.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_centro_costoProformaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormProforma.jButtonid_centro_costoProforma.addActionListener(new ButtonActionListener(this,"id_centro_costoProforma"));
		//jButtonid_centro_costoProformaArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCentroCosto("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormProforma.jButtonid_centro_costoProformaArbol.addActionListener(new ButtonActionListener(this,"id_centro_costoProformaArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProforma.jButtonid_centro_costoProformaUpdate.addActionListener(new ButtonActionListener(this,"id_centro_costoProformaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonid_centro_costoProformaBusqueda.addActionListener(new ButtonActionListener(this,"id_centro_costoProformaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProforma.jButtonid_tipo_proformaProformaUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_proformaProformaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonid_tipo_proformaProformaBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_proformaProformaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProforma.jButtonid_consignatarioProformaUpdate.addActionListener(new ButtonActionListener(this,"id_consignatarioProformaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonid_consignatarioProformaBusqueda.addActionListener(new ButtonActionListener(this,"id_consignatarioProformaBusqueda"));
		//jButtonid_tipo_cambioProforma.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_tipo_cambioProformaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormProforma.jButtonid_tipo_cambioProforma.addActionListener(new ButtonActionListener(this,"id_tipo_cambioProforma"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormProforma.jButtonid_tipo_cambioProformaUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_cambioProformaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormProforma.jButtonid_tipo_cambioProformaBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_cambioProformaBusqueda"));
		
		
		this.jButtonFK_IdCentroCostoProforma.addActionListener(new ButtonActionListener(this,"FK_IdCentroCostoProforma"));

		this.jButtonBuscarFK_IdCentroCostoid_centro_costoProforma.addActionListener(new ButtonActionListener(this,"id_centro_costoProforma"));

		this.jButtonFK_IdClienteProforma.addActionListener(new ButtonActionListener(this,"FK_IdClienteProforma"));

		this.jButtonBuscarFK_IdClienteid_clienteProforma.addActionListener(new ButtonActionListener(this,"id_clienteProforma"));

		this.jButtonFK_IdConsignatarioProforma.addActionListener(new ButtonActionListener(this,"FK_IdConsignatarioProforma"));

		this.jButtonFK_IdEmpleadoProforma.addActionListener(new ButtonActionListener(this,"FK_IdEmpleadoProforma"));

		this.jButtonBuscarFK_IdEmpleadoid_empleadoProforma.addActionListener(new ButtonActionListener(this,"id_empleadoProforma"));

		this.jButtonFK_IdEstadoProformaProforma.addActionListener(new ButtonActionListener(this,"FK_IdEstadoProformaProforma"));

		this.jButtonFK_IdFormatoProforma.addActionListener(new ButtonActionListener(this,"FK_IdFormatoProforma"));

		this.jButtonFK_IdRutaTransporteProforma.addActionListener(new ButtonActionListener(this,"FK_IdRutaTransporteProforma"));

		this.jButtonFK_IdSubClienteProforma.addActionListener(new ButtonActionListener(this,"FK_IdSubClienteProforma"));

		this.jButtonFK_IdTipoCambioProforma.addActionListener(new ButtonActionListener(this,"FK_IdTipoCambioProforma"));

		this.jButtonBuscarFK_IdTipoCambioid_tipo_cambioProforma.addActionListener(new ButtonActionListener(this,"id_tipo_cambioProforma"));

		this.jButtonFK_IdTipoPrecioProforma.addActionListener(new ButtonActionListener(this,"FK_IdTipoPrecioProforma"));

		this.jButtonFK_IdTipoProformaProforma.addActionListener(new ButtonActionListener(this,"FK_IdTipoProformaProforma"));

		this.jButtonFK_IdTipoViaTransporteProforma.addActionListener(new ButtonActionListener(this,"FK_IdTipoViaTransporteProforma"));

		this.jButtonFK_IdTransporteProforma.addActionListener(new ButtonActionListener(this,"FK_IdTransporteProforma"));

		this.jButtonFK_IdVendedorProforma.addActionListener(new ButtonActionListener(this,"FK_IdVendedorProforma"));

		this.jButtonBuscarFK_IdVendedorid_vendedorProforma.addActionListener(new ButtonActionListener(this,"id_vendedorProforma"));

		
		//REPORTE DINAMICO
		this.jButtonCerrarReporteDinamicoProforma.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarReporteDinamicoProformaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarReporteDinamicoProforma.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarReporteDinamicoProformaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarExcelReporteDinamicoProforma.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarExcelReporteDinamicoProformaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		//IMPORTACION
		this.jButtonCerrarImportacionProforma.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarImportacionProformaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarImportacionProforma.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarImportacionProformaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAbrirImportacionProforma.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAbrirImportacionProformaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
	}
	*/
	
	
	public void jComboBoxTiposSeleccionarProformaActionListener(ActionEvent evt) throws Exception {    		
		try {			
			Reporte reporte=(Reporte)this.jComboBoxTiposSeleccionarProforma.getSelectedItem();
			
			//if(reporte.getsCodigo().equals("SELECCIONAR")) {
			//}					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
		}
	}	
	
	
	
	public void seleccionarTodosProforma(Boolean conSeleccionarTodos) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				for(Proforma proformaAux:this.proformaLogic.getProformas()) {
					proformaAux.setIsSelected(conSeleccionarTodos);
				}			
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(Proforma proformaAux:proformas) {
					proformaAux.setIsSelected(conSeleccionarTodos);
				}
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarTodosProformaItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingProforma(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			
			if(sTipoSeleccionar.equals("COLUMNAS")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(Proforma proformaAux:this.proformaLogic.getProformas()) {
						proformaAux.setIsSelected(this.isSeleccionarTodos);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(Proforma proformaAux:proformas) {
						proformaAux.setIsSelected(this.isSeleccionarTodos);
					}
				}
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					for(Proforma proformaAux:this.proformaLogic.getProformas()) {
					
						if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_ESOFERTA)) {
							existe=true;
							proformaAux.setes_oferta(this.isSeleccionarTodos);
						}
					}	
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(Proforma proformaAux:proformas) {
						
						if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_ESOFERTA)) {
							existe=true;
							proformaAux.setes_oferta(this.isSeleccionarTodos);
						}
					}
				}
			}
					
			if(existe) {
				this.inicializarActualizarBindingTablaProforma(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosProforma.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosProforma.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosProforma,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionadosProformaItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingProforma(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			int[] arrNumRowsSeleccionados=null;
			
			arrNumRowsSeleccionados=this.jTableDatosProforma.getSelectedRows();
			
			Proforma proformaLocal=new Proforma();
			
			//this.seleccionarTodosProforma(false);
			
			for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					proformaLocal =(Proforma) this.proformaLogic.getProformas().toArray()[this.jTableDatosProforma.convertRowIndexToModel(iNumRowSeleccionado)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					proformaLocal =(Proforma) this.proformas.toArray()[this.jTableDatosProforma.convertRowIndexToModel(iNumRowSeleccionado)];
				}
				
				proformaLocal.setIsSelected(this.isSeleccionados);
			}
			
			/*
			if(sTipoSeleccionar.equals("SELECCIONAR")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(Proforma proformaAux:this.proformaLogic.getProformas()) {
						proformaAux.setIsSelected(this.isSeleccionados);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(Proforma proformaAux:proformas) {
						proformaAux.setIsSelected(this.isSeleccionados);
					}
				}
			}
			*/
			
			//if(existe) {
				this.inicializarActualizarBindingTablaProforma(false);
			/*
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			*/
			
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosProforma.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosProforma.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosProforma,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarActualProformaItemListener(ItemEvent evt,Long idActual) throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void ejecutarAuxiliarProformaParaAjaxPostBack() throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jTextFieldValorCampoGeneralProformaActionListener(ActionEvent evt) throws Exception {    		
		try {
			this.inicializarActualizarBindingProforma(false,false);
			
			//System.out.println(this.jTextFieldValorCampoGeneralProforma.getText());		
			
			Boolean existe=false;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(Proforma proformaAux:this.proformaLogic.getProformas()) {
				
						if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_NUMEROPREIMPRESO)) {
							existe=true;
							proformaAux.setnumero_pre_impreso(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_FECHAEMISION)) {
							existe=true;
							proformaAux.setfecha_emision(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_DIAS)) {
							existe=true;
							proformaAux.setdias(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_FECHAVENCIMIENTO)) {
							existe=true;
							proformaAux.setfecha_vencimiento(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_COTIZACION)) {
							existe=true;
							proformaAux.setcotizacion(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_DIRECCION)) {
							existe=true;
							proformaAux.setdireccion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_RUC)) {
							existe=true;
							proformaAux.setruc(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_TELEFONO)) {
							existe=true;
							proformaAux.settelefono(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_DESCRIPCION)) {
							existe=true;
							proformaAux.setdescripcion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_DESCUENTOPORCENTAJE)) {
							existe=true;
							proformaAux.setdescuento_porcentaje(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_MONTOCONIVA)) {
							existe=true;
							proformaAux.setmonto_con_iva(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_SUMAN)) {
							existe=true;
							proformaAux.setsuman(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_DESCUENTOVALOR)) {
							existe=true;
							proformaAux.setdescuento_valor(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_MONTOSINIVA)) {
							existe=true;
							proformaAux.setmonto_sin_iva(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_DESCUENTOGENERAL)) {
							existe=true;
							proformaAux.setdescuento_general(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_FLETE)) {
							existe=true;
							proformaAux.setflete(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_ULTIMOCOSTO)) {
							existe=true;
							proformaAux.setultimo_costo(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_SUBTOTAL)) {
							existe=true;
							proformaAux.setsubtotal(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_OTROSCARGOS)) {
							existe=true;
							proformaAux.setotros_cargos(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_MARGENUTILIDAD)) {
							existe=true;
							proformaAux.setmargen_utilidad(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_IVA)) {
							existe=true;
							proformaAux.setiva(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_FINANCIAMIENTO)) {
							existe=true;
							proformaAux.setfinanciamiento(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_TOTAL)) {
							existe=true;
							proformaAux.settotal(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_OTROSVALORES)) {
							existe=true;
							proformaAux.setotros_valores(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_ANTICIPO)) {
							existe=true;
							proformaAux.setanticipo(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_ICE)) {
							existe=true;
							proformaAux.setice(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_MONTORETENCION)) {
							existe=true;
							proformaAux.setmonto_retencion(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_FECHA)) {
							existe=true;
							proformaAux.setfecha(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_FECHASERVIDOR)) {
							existe=true;
							proformaAux.setfecha_servidor(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_HORAINICIO)) {
							existe=true;
							proformaAux.sethora_inicio(Time.valueOf(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_HORAFIN)) {
							existe=true;
							proformaAux.sethora_fin(Time.valueOf(this.sValorCampoGeneral));
						}
				}	
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(Proforma proformaAux:proformas) {
					
						if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_NUMEROPREIMPRESO)) {
							existe=true;
							proformaAux.setnumero_pre_impreso(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_FECHAEMISION)) {
							existe=true;
							proformaAux.setfecha_emision(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_DIAS)) {
							existe=true;
							proformaAux.setdias(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_FECHAVENCIMIENTO)) {
							existe=true;
							proformaAux.setfecha_vencimiento(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_COTIZACION)) {
							existe=true;
							proformaAux.setcotizacion(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_DIRECCION)) {
							existe=true;
							proformaAux.setdireccion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_RUC)) {
							existe=true;
							proformaAux.setruc(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_TELEFONO)) {
							existe=true;
							proformaAux.settelefono(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_DESCRIPCION)) {
							existe=true;
							proformaAux.setdescripcion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_DESCUENTOPORCENTAJE)) {
							existe=true;
							proformaAux.setdescuento_porcentaje(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_MONTOCONIVA)) {
							existe=true;
							proformaAux.setmonto_con_iva(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_SUMAN)) {
							existe=true;
							proformaAux.setsuman(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_DESCUENTOVALOR)) {
							existe=true;
							proformaAux.setdescuento_valor(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_MONTOSINIVA)) {
							existe=true;
							proformaAux.setmonto_sin_iva(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_DESCUENTOGENERAL)) {
							existe=true;
							proformaAux.setdescuento_general(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_FLETE)) {
							existe=true;
							proformaAux.setflete(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_ULTIMOCOSTO)) {
							existe=true;
							proformaAux.setultimo_costo(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_SUBTOTAL)) {
							existe=true;
							proformaAux.setsubtotal(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_OTROSCARGOS)) {
							existe=true;
							proformaAux.setotros_cargos(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_MARGENUTILIDAD)) {
							existe=true;
							proformaAux.setmargen_utilidad(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_IVA)) {
							existe=true;
							proformaAux.setiva(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_FINANCIAMIENTO)) {
							existe=true;
							proformaAux.setfinanciamiento(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_TOTAL)) {
							existe=true;
							proformaAux.settotal(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_OTROSVALORES)) {
							existe=true;
							proformaAux.setotros_valores(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_ANTICIPO)) {
							existe=true;
							proformaAux.setanticipo(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_ICE)) {
							existe=true;
							proformaAux.setice(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_MONTORETENCION)) {
							existe=true;
							proformaAux.setmonto_retencion(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_FECHA)) {
							existe=true;
							proformaAux.setfecha(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_FECHASERVIDOR)) {
							existe=true;
							proformaAux.setfecha_servidor(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_HORAINICIO)) {
							existe=true;
							proformaAux.sethora_inicio(Time.valueOf(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_HORAFIN)) {
							existe=true;
							proformaAux.sethora_fin(Time.valueOf(this.sValorCampoGeneral));
						}
				}
			}
								
			if(existe) {
				this.inicializarActualizarBindingTablaProforma(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jComboBoxTiposAccionesProformaActionListener(ActionEvent evt,Boolean esParaAccionDesdeFormulario) throws Exception {    				
		Boolean conSplash=true;
		
		try {							
		
			this.inicializarActualizarBindingProforma(false,false);
			
			Reporte reporte=new Reporte();
			
			this.esParaAccionDesdeFormularioProforma=esParaAccionDesdeFormulario;
			
			if(!esParaAccionDesdeFormulario) {
				
				reporte=(Reporte)this.jComboBoxTiposAccionesProforma.getSelectedItem();
				
			} else {
				reporte=(Reporte)this.jInternalFrameDetalleFormProforma.jComboBoxTiposAccionesFormularioProforma.getSelectedItem();
			}
			String sTipoAccionLocal=this.sTipoAccion;
			
			if(!esParaAccionDesdeFormulario) {
				sTipoAccionLocal=this.sTipoAccion;
			} else {
				sTipoAccionLocal=this.sTipoAccionFormulario;
			}
			
			if(sTipoAccionLocal.equals("GENERAR REPORTE")) {//reporte.getsCodigo().equals("GENERAR REPORTE")) {
				if(this.isPermisoReporteProforma) {				
					conSplash=true;//false;										
					
					//this.startProcessProforma(conSplash);
				
					this.generarReporteProformasSeleccionados();
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesProforma.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormProforma.jComboBoxTiposAccionesFormularioProforma.setSelectedIndex(0);					
				}
			} else if(sTipoAccionLocal.equals("GENERAR REPORTE DINAMICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.mostrarReporteDinamicoProformasSeleccionados();
				//this.jComboBoxTiposAccionesProforma.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("GENERAR_REPORTE_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoProformasSeleccionados(false);
				//this.jComboBoxTiposAccionesProforma.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("GENERAR_REPORTE_TOTALES_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoProformasSeleccionados(true);
				//this.jComboBoxTiposAccionesProforma.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessProforma();
				
				this.exportarProformasSeleccionados();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesProforma.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormProforma.jComboBoxTiposAccionesFormularioProforma.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("IMPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				this.mostrarImportacionProformas();
				//this.importarProformas();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesProforma.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormProforma.jComboBoxTiposAccionesFormularioProforma.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS_EXCEL")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessProforma();
				//SE EXPORTA SEGUN TIPO ARCHIVO SELECCIONADO
				//this.exportarExcelProformasSeleccionados();
				//this.jComboBoxTiposAccionesProforma.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("RECARGAR_FK")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {								
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE RECARGAR REFERENCIAS ?", "MANTENIMIENTO DE Proforma", JOptionPane.OK_CANCEL_OPTION) == 0) {
				
				//this.startProcessProforma();
				
					if(!esParaAccionDesdeFormulario || (esParaAccionDesdeFormulario && this.isEsNuevoProforma)) {
						this.esRecargarFks=true;
						this.cargarCombosForeignKeyProforma(false,false,false);
						this.esRecargarFks=false;
						
						JOptionPane.showMessageDialog(this,"PROCESO EJECUTADO CORRECTAMENTE","MANTENIMIENTO DE Proforma",JOptionPane.INFORMATION_MESSAGE);
					} else {
						JOptionPane.showMessageDialog(this,"ESTE PROCESO SOLO FUNCIONA AL INGRESAR UN NUEVO ELEMENTO","MANTENIMIENTO",JOptionPane.ERROR_MESSAGE);	
					}
					
					
				}
				
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesProforma.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormProforma.jComboBoxTiposAccionesFormularioProforma.setSelectedIndex(0);					
				}	
			} 			
			else if(ProformaBeanSwingJInternalFrame.EsProcesoReporte(reporte.getsCodigo())){
				if(this.isPermisoReporteProforma) {				
					if(this.tieneElementosSeleccionados()) {
						this.quitarFilaTotales();
						
						conSplash=false;
						
						//this.startProcessProforma(conSplash);
					
						//this.actualizarParametrosGeneralProforma();
						
						this.generarReporteProcesoAccionProformasSeleccionados(reporte.getsCodigo());
						
						if(!esParaAccionDesdeFormulario) {
							
							this.jComboBoxTiposAccionesProforma.setSelectedIndex(0);					
							
						} else {
							this.jInternalFrameDetalleFormProforma.jComboBoxTiposAccionesFormularioProforma.setSelectedIndex(0);					
						}
					} else {
						JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
			} 
			else if(ProformaBeanSwingJInternalFrameAdditional.EsProcesoAccionNormal(reporte.getsCodigo())){
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR "+reporte.getsDescripcion()+" EN PROCESO ProformaS SELECCIONADOS?", "MANTENIMIENTO DE Proforma", JOptionPane.OK_CANCEL_OPTION) == 0) {
						//this.startProcessProforma();
				
						this.actualizarParametrosGeneralProforma();
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {						
							this.proformaReturnGeneral=proformaLogic.procesarAccionProformasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,sTipoAccionLocal,this.proformaLogic.getProformas(),this.proformaParameterGeneral);
						
						} else if(Constantes.ISUSAEJBREMOTE) {
						
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
						this.procesarProformaReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesProforma.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormProforma.jComboBoxTiposAccionesFormularioProforma.setSelectedIndex(0);					
					}
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}				
			} 
			else {
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					this.actualizarParametrosGeneralProforma();
					
					ProformaBeanSwingJInternalFrameAdditional.ProcesarAccion(reporte.getsCodigo(),reporte.getsDescripcion(),this);
					
					this.procesarProformaReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesProforma.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormProforma.jComboBoxTiposAccionesFormularioProforma.setSelectedIndex(0);					
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}
			}
		} catch(Exception e) {
			this.esRecargarFks=false;
			
			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
		
		}  finally {
      		//this.finishProcessProforma(conSplash);
      	}
	}
	
	public void jComboBoxTiposRelacionesProformaActionListener(ActionEvent evt) throws Exception {    				
		Boolean conSplash=true;
		
		try {			
			this.startProcessProforma();
			
			if(this.jInternalFrameDetalleFormProforma==null) { //if(!this.conCargarFormDetalle) {			
				this.inicializarFormDetalle();
			}
			
			ArrayList<Proforma> proformasSeleccionados=new ArrayList<Proforma>();		
			Proforma proforma=new Proforma();
			
			int rowIndex=-1;//CON ESTO SE DESHABILITA SELECCION POR INDICE
			
			this.inicializarActualizarBindingProforma(false,false);
			
			Reporte reporte=new Reporte();
			
			
			reporte=(Reporte)this.jComboBoxTiposRelacionesProforma.getSelectedItem();
			
			
			
			
			proformasSeleccionados=this.getProformasSeleccionados(true);
			//this.sTipoAccion;
			
			if(proformasSeleccionados.size()==1) {
				for(Proforma proformaAux:proformasSeleccionados) {
					proforma=proformaAux;
				}
				
				if(this.sTipoAccion.equals("NONE")) {
				
				}
				
				else if(this.sTipoRelacion.equals("Termino Proforma")) {
					jButtonTerminoProformaActionPerformed(null,rowIndex,true,false,proforma);
				}
				else if(this.sTipoRelacion.equals("Detalle Proforma")) {
					jButtonDetalleProformaActionPerformed(null,rowIndex,true,false,proforma);
				}
			} else {
				JOptionPane.showMessageDialog(this,"SELECCIONE SOLO UN REGISTRO","RELACIONES",JOptionPane.ERROR_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.finishProcessProforma();
			
      		//this.finishProcessProforma(conSplash);
      	}
	}
			
	public static Boolean EsProcesoReporte(String sTipoProceso) throws Exception {
		Boolean esProcesoAccionRepoorte=false;

		if(sTipoProceso.contains("REPORTE_")) {
			 esProcesoAccionRepoorte=true;
		}

		return esProcesoAccionRepoorte;
	}
	
	public void procesarProformaReturnGeneral() throws Exception {
		if(this.proformaReturnGeneral.getConRetornoEstaProcesado()) {
			JOptionPane.showMessageDialog(this,this.proformaReturnGeneral.getsMensajeProceso(),"PROCESO",JOptionPane.INFORMATION_MESSAGE);
		}
		
		if(this.proformaReturnGeneral.getConMostrarMensaje()) {
			JOptionPane.showMessageDialog(this,this.proformaReturnGeneral.getsMensajeProceso(),"PROCESO",FuncionesSwing.getColorSelectedBackground(this.proformaReturnGeneral.getsTipoMensaje()));
		}
		
		if(this.proformaReturnGeneral.getConRecargarInformacion()) {
			this.procesarBusqueda(this.sAccionBusqueda);
			
			this.inicializarActualizarBindingProforma(false);
		}
		
		if(this.proformaReturnGeneral.getConRetornoLista() || this.proformaReturnGeneral.getConRetornoObjeto()) {
			if(this.proformaReturnGeneral.getConRetornoLista()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.proformaLogic.setProformas(this.proformaReturnGeneral.getProformas());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			if(this.proformaReturnGeneral.getConRetornoObjeto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.proformaLogic.setProforma(this.proformaReturnGeneral.getProforma());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			this.inicializarActualizarBindingProforma(false);
		}
	}
	
	public void actualizarParametrosGeneralProforma() throws Exception {
		
		
	}
	
	public ArrayList<Proforma> getProformasSeleccionados(Boolean conSeleccionarTodosAutomatico) throws Exception {
		ArrayList<Proforma> proformasSeleccionados=new ArrayList<Proforma>();
		Boolean existe=false;
		
		if(!this.esParaAccionDesdeFormularioProforma) {
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				
				for(Proforma proformaAux:proformaLogic.getProformas()) {
					if(proformaAux.getIsSelected()) {
						proformasSeleccionados.add(proformaAux);				
					}
				}
				
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(Proforma proformaAux:this.proformas) {
					if(proformaAux.getIsSelected()) {
						proformasSeleccionados.add(proformaAux);				
					}
				}
			}
			
			if(proformasSeleccionados.size()>0) {
				existe=true;
			}
			
			//SI NO ESTA NINGUNO SELECCIONADO SE SELECCIONA TODOS
			if(!existe) {
				if(conSeleccionarTodosAutomatico) {
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						proformasSeleccionados.addAll(this.proformaLogic.getProformas());
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						proformasSeleccionados.addAll(this.proformas);				
					}
				}
			}
		} else {
			proformasSeleccionados.add(this.proforma);
		}
		
		return proformasSeleccionados;
	}
	
	public void actualizarVariablesTipoReporte(Boolean esReporteNormal,Boolean esReporteDinamico,Boolean esReporteAccionProceso,String sPath) {
		if(esReporteNormal) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=false;
			
		} else if(esReporteAccionProceso) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=true;
			
		} else if(esReporteDinamico) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=true;
			this.esReporteAccionProceso=false;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");			
		}
	}
	
	public void generarReporteProformasSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoReporte.equals("NORMAL") || this.sTipoReporte.equals("FORMULARIO")) {
			existe=true;								
			this.generarReporteNormalProformasSeleccionados();
			
		} else if(this.sTipoReporte.equals("DINAMICO")) {
			existe=true;
			this.mostrarReporteDinamicoProformasSeleccionados();
			
		} else if(this.sTipoReporte.equals("GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoProformasSeleccionados(false);
			
		} else if(this.sTipoReporte.equals("TOTALES_GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoProformasSeleccionados(true);
		}
		else if(this.sTipoReporte.equals("RELACIONES")) {
			//SI SE GENERA REPORTE RELACIONES
			existe=true;
			this.generarReporteRelacionesProformasSeleccionados();
		}					
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE REPORTE VALIDO","REPORTE DE Proforma",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void generarReporteRelacionesProformasSeleccionados() throws Exception {
		ArrayList<Proforma> proformasSeleccionados=new ArrayList<Proforma>();		
		
		proformasSeleccionados=this.getProformasSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
					
		//this.sTipoReporteExtra="MasterRelaciones";
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		
		this.generarReporteProformas("Todos",proformasSeleccionados);
		
	}	
	
	public void generarReporteNormalProformasSeleccionados() throws Exception {
		ArrayList<Proforma> proformasSeleccionados=new ArrayList<Proforma>();		
		
		proformasSeleccionados=this.getProformasSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
								
		if(this.sTipoReporte.equals("FORMULARIO")) {
			this.sTipoReporteExtra="Vertical";					
		}
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.generarReporteProformas("Todos",proformasSeleccionados);
	}		
	
	public void generarReporteProcesoAccionProformasSeleccionados(String sProcesoReporte) throws Exception {
		ArrayList<Proforma> proformasSeleccionados=new ArrayList<Proforma>();
		
		proformasSeleccionados=this.getProformasSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(false,false,true,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.sTipoReporteExtra=sProcesoReporte.toLowerCase();
		
		this.esReporteAccionProceso=true;
		this.generarReporteProformas("Todos",proformasSeleccionados);
		this.esReporteAccionProceso=false;
	}
	
	
	public void mostrarReporteDinamicoProformasSeleccionados() throws Exception {
		ArrayList<Proforma> proformasSeleccionados=new ArrayList<Proforma>();		
		
		
		this.abrirInicializarFrameReporteDinamicoProforma();
		
		
		proformasSeleccionados=this.getProformasSeleccionados(true);
		
		this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirFrameReporteDinamicoProforma();
		
		
		//this.generarReporteProformas("Todos",proformasSeleccionados ,proformaImplementable,proformaImplementableHome);
	}
	
	public void mostrarImportacionProformas() throws Exception {
		//this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirInicializarFrameImportacionProforma();
		
		this.abrirFrameImportacionProforma();		
		
			
		//this.generarReporteProformas("Todos",proformasSeleccionados ,proformaImplementable,proformaImplementableHome);
	}
	
	public void importarProformas() throws Exception {		
	
	}
	
	public void exportarProformasSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoArchivoReporte.equals("EXCEL")) {
			existe=true;
			this.exportarExcelProformasSeleccionados();
			
		} else if(this.sTipoArchivoReporte.equals("TEXTO")) {
			existe=true;
			this.exportarTextoProformasSeleccionados();
		
		} else if(this.sTipoArchivoReporte.equals("XML")) {
			existe=true;
			this.exportarXmlProformasSeleccionados();
		} 
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE ARCHIVO VALIDO","EXPORTACION DE Proforma",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void exportarTextoProformasSeleccionados() throws Exception {
		ArrayList<Proforma> proformasSeleccionados=new ArrayList<Proforma>();		
		
		proformasSeleccionados=this.getProformasSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"proforma."+"txt";//Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario);
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		BufferedWriter bufferedWriter = null;
		FileWriter fileWriter=null;
		
		fileWriter=new FileWriter(sPath);
		
		bufferedWriter = new BufferedWriter(fileWriter);
		
		try {
			if(conCabecera) {
				sFilaCabecera=this.getFilaCabeceraExportarProforma(sDelimiter);
				
				bufferedWriter.write(sFilaCabecera);
			}				
			
			for(Proforma proformaAux:proformasSeleccionados) {
				sFilaDatos=this.getFilaDatosExportarProforma(proformaAux,sDelimiter);
				
				bufferedWriter.write(sFilaDatos);
				
				//proformaAux.setsDetalleGeneralEntityReporte(proformaAux.toString());			
			}
			
			bufferedWriter.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.proformaSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Proforma",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {
       		if (bufferedWriter != null) {
				bufferedWriter.close();
			}
		}
	}
	
	public String getFilaCabeceraExportarProforma(String sDelimiter) {
		String sFilaCabecera="";
		
		
		sFilaCabecera+=ProformaConstantesFunciones.LABEL_ID;

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProformaConstantesFunciones.LABEL_VERSIONROW;
		}

		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProformaConstantesFunciones.LABEL_IDEMPRESA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProformaConstantesFunciones.LABEL_IDSUCURSAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProformaConstantesFunciones.LABEL_IDUSUARIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProformaConstantesFunciones.LABEL_IDEJERCICIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProformaConstantesFunciones.LABEL_IDPERIODO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProformaConstantesFunciones.LABEL_IDANIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProformaConstantesFunciones.LABEL_IDMES;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProformaConstantesFunciones.LABEL_NUMEROPREIMPRESO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProformaConstantesFunciones.LABEL_FECHAEMISION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProformaConstantesFunciones.LABEL_DIAS;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProformaConstantesFunciones.LABEL_FECHAVENCIMIENTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProformaConstantesFunciones.LABEL_IDMONEDA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProformaConstantesFunciones.LABEL_COTIZACION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProformaConstantesFunciones.LABEL_IDEMPLEADO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProformaConstantesFunciones.LABEL_IDFORMATO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProformaConstantesFunciones.LABEL_IDESTADOPROFORMA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProformaConstantesFunciones.LABEL_DIRECCION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProformaConstantesFunciones.LABEL_IDCLIENTE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProformaConstantesFunciones.LABEL_RUC;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProformaConstantesFunciones.LABEL_ESOFERTA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProformaConstantesFunciones.LABEL_TELEFONO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProformaConstantesFunciones.LABEL_IDTIPOPRECIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProformaConstantesFunciones.LABEL_IDVENDEDOR;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProformaConstantesFunciones.LABEL_IDSUBCLIENTE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProformaConstantesFunciones.LABEL_IDTIPOVIATRANSPORTE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProformaConstantesFunciones.LABEL_IDTRANSPORTE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProformaConstantesFunciones.LABEL_IDRUTATRANSPORTE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProformaConstantesFunciones.LABEL_DESCRIPCION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProformaConstantesFunciones.LABEL_DESCUENTOPORCENTAJE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProformaConstantesFunciones.LABEL_MONTOCONIVA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProformaConstantesFunciones.LABEL_SUMAN;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProformaConstantesFunciones.LABEL_DESCUENTOVALOR;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProformaConstantesFunciones.LABEL_MONTOSINIVA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProformaConstantesFunciones.LABEL_DESCUENTOGENERAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProformaConstantesFunciones.LABEL_FLETE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProformaConstantesFunciones.LABEL_ULTIMOCOSTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProformaConstantesFunciones.LABEL_SUBTOTAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProformaConstantesFunciones.LABEL_OTROSCARGOS;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProformaConstantesFunciones.LABEL_MARGENUTILIDAD;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProformaConstantesFunciones.LABEL_IVA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProformaConstantesFunciones.LABEL_FINANCIAMIENTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProformaConstantesFunciones.LABEL_TOTAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProformaConstantesFunciones.LABEL_OTROSVALORES;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProformaConstantesFunciones.LABEL_ANTICIPO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProformaConstantesFunciones.LABEL_ICE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProformaConstantesFunciones.LABEL_MONTORETENCION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProformaConstantesFunciones.LABEL_FECHA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProformaConstantesFunciones.LABEL_FECHASERVIDOR;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProformaConstantesFunciones.LABEL_HORAINICIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProformaConstantesFunciones.LABEL_HORAFIN;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProformaConstantesFunciones.LABEL_IDCENTROCOSTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProformaConstantesFunciones.LABEL_IDTIPOPROFORMA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProformaConstantesFunciones.LABEL_IDCONSIGNATARIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ProformaConstantesFunciones.LABEL_IDTIPOCAMBIO;
		
		return sFilaCabecera;
	}
	
	public String getFilaDatosExportarProforma(Proforma proforma,String sDelimiter) {
		String sFilaDatos="";
		
		sFilaDatos+="\r\n";
		
		
		sFilaDatos+=proforma.getId().toString();

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaDatos+=sDelimiter;
		sFilaDatos+=proforma.getVersionRow().toString();
		}

		sFilaDatos+=sDelimiter;
		sFilaDatos+=proforma.getempresa_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=proforma.getsucursal_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=proforma.getusuario_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=proforma.getejercicio_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=proforma.getperiodo_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=proforma.getanio_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=proforma.getmes_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=proforma.getnumero_pre_impreso();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=proforma.getfecha_emision().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=proforma.getdias().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=proforma.getfecha_vencimiento().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=proforma.getmoneda_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=proforma.getcotizacion().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=proforma.getempleado_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=proforma.getformato_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=proforma.getestadoproforma_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=proforma.getdireccion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=proforma.getcliente_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=proforma.getruc();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=proforma.getes_oferta().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=proforma.gettelefono();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=proforma.gettipoprecio_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=proforma.getvendedor_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=proforma.getsubcliente_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=proforma.gettipoviatransporte_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=proforma.gettransporte_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=proforma.getrutatransporte_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=proforma.getdescripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=proforma.getdescuento_porcentaje().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=proforma.getmonto_con_iva().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=proforma.getsuman().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=proforma.getdescuento_valor().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=proforma.getmonto_sin_iva().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=proforma.getdescuento_general().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=proforma.getflete().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=proforma.getultimo_costo().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=proforma.getsubtotal().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=proforma.getotros_cargos().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=proforma.getmargen_utilidad().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=proforma.getiva().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=proforma.getfinanciamiento().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=proforma.gettotal().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=proforma.getotros_valores().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=proforma.getanticipo().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=proforma.getice().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=proforma.getmonto_retencion().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=proforma.getfecha().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=proforma.getfecha_servidor().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=proforma.gethora_inicio().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=proforma.gethora_fin().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=proforma.getcentrocosto_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=proforma.gettipoproforma_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=proforma.getconsignatario_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=proforma.gettipocambio_descripcion();
		
		return sFilaDatos;
	}
	
	//@SuppressWarnings("deprecation")
	public void exportarExcelProformasSeleccionados() throws Exception {
		ArrayList<Proforma> proformasSeleccionados=new ArrayList<Proforma>();		
		
		proformasSeleccionados=this.getProformasSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"proforma.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		FileOutputStream fileOutputStream=null;
		
		try {
			HSSFWorkbook workbook = new HSSFWorkbook();
			HSSFSheet sheet = workbook.createSheet("Proformas");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			HSSFRow row = sheet.createRow(iRow);
			HSSFCell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");

			if(conCabecera) {
				this.getFilaCabeceraExportarExcelProforma(row);				
				iRow++;
			}				
			
			for(Proforma proformaAux:proformasSeleccionados) {
				row = sheet.createRow(iRow);
				
				this.getFilaDatosExportarExcelProforma(proformaAux,row);
				
				iRow++;
			}
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.proformaSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Proforma",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}
	}		
	
	public void exportarXmlProformasSeleccionados() throws Exception {
		ArrayList<Proforma> proformasSeleccionados=new ArrayList<Proforma>();		
		
		proformasSeleccionados=this.getProformasSeleccionados(true);
		
		//String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		//Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		//String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"proforma.xml";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		DocumentBuilderFactory documentBuilderFactory=null;
		DocumentBuilder documentBuilder =null;
		
		try {
			documentBuilderFactory = DocumentBuilderFactory.newInstance();
			documentBuilder = documentBuilderFactory.newDocumentBuilder();
	
			Document document = documentBuilder.newDocument();
			Element elementRoot = document.createElement("proformas");
			
			document.appendChild(elementRoot);
		    			
												
			Element element = null;//document.createElement("proforma");
			//elementRoot.appendChild(element);
		
			for(Proforma proformaAux:proformasSeleccionados) {
				element = document.createElement("proforma");
				elementRoot.appendChild(element);
			
				this.setFilaDatosExportarXmlProforma(proformaAux,document,element);
			}
			
			TransformerFactory transformerFactory = TransformerFactory.newInstance();
			Transformer transformer = transformerFactory.newTransformer();
			DOMSource domSource = new DOMSource(document);
			
			StreamResult streamResult = new StreamResult(new File(sPath));
	
			transformer.transform(domSource, streamResult);
						
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.proformaSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Proforma",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			       				
		}
	}	
	
	//@SuppressWarnings("deprecation")
	public void getFilaCabeceraExportarExcelProforma(HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(ProformaConstantesFunciones.LABEL_ID);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
		cell = row.createCell(iColumn++);cell.setCellValue(ProformaConstantesFunciones.LABEL_VERSIONROW);
		}

		cell = row.createCell(iColumn++);cell.setCellValue(ProformaConstantesFunciones.LABEL_IDEMPRESA);
		cell = row.createCell(iColumn++);cell.setCellValue(ProformaConstantesFunciones.LABEL_IDSUCURSAL);
		cell = row.createCell(iColumn++);cell.setCellValue(ProformaConstantesFunciones.LABEL_IDUSUARIO);
		cell = row.createCell(iColumn++);cell.setCellValue(ProformaConstantesFunciones.LABEL_IDEJERCICIO);
		cell = row.createCell(iColumn++);cell.setCellValue(ProformaConstantesFunciones.LABEL_IDPERIODO);
		cell = row.createCell(iColumn++);cell.setCellValue(ProformaConstantesFunciones.LABEL_IDANIO);
		cell = row.createCell(iColumn++);cell.setCellValue(ProformaConstantesFunciones.LABEL_IDMES);
		cell = row.createCell(iColumn++);cell.setCellValue(ProformaConstantesFunciones.LABEL_NUMEROPREIMPRESO);
		cell = row.createCell(iColumn++);cell.setCellValue(ProformaConstantesFunciones.LABEL_FECHAEMISION);
		cell = row.createCell(iColumn++);cell.setCellValue(ProformaConstantesFunciones.LABEL_DIAS);
		cell = row.createCell(iColumn++);cell.setCellValue(ProformaConstantesFunciones.LABEL_FECHAVENCIMIENTO);
		cell = row.createCell(iColumn++);cell.setCellValue(ProformaConstantesFunciones.LABEL_IDMONEDA);
		cell = row.createCell(iColumn++);cell.setCellValue(ProformaConstantesFunciones.LABEL_COTIZACION);
		cell = row.createCell(iColumn++);cell.setCellValue(ProformaConstantesFunciones.LABEL_IDEMPLEADO);
		cell = row.createCell(iColumn++);cell.setCellValue(ProformaConstantesFunciones.LABEL_IDFORMATO);
		cell = row.createCell(iColumn++);cell.setCellValue(ProformaConstantesFunciones.LABEL_IDESTADOPROFORMA);
		cell = row.createCell(iColumn++);cell.setCellValue(ProformaConstantesFunciones.LABEL_DIRECCION);
		cell = row.createCell(iColumn++);cell.setCellValue(ProformaConstantesFunciones.LABEL_IDCLIENTE);
		cell = row.createCell(iColumn++);cell.setCellValue(ProformaConstantesFunciones.LABEL_RUC);
		cell = row.createCell(iColumn++);cell.setCellValue(ProformaConstantesFunciones.LABEL_ESOFERTA);
		cell = row.createCell(iColumn++);cell.setCellValue(ProformaConstantesFunciones.LABEL_TELEFONO);
		cell = row.createCell(iColumn++);cell.setCellValue(ProformaConstantesFunciones.LABEL_IDTIPOPRECIO);
		cell = row.createCell(iColumn++);cell.setCellValue(ProformaConstantesFunciones.LABEL_IDVENDEDOR);
		cell = row.createCell(iColumn++);cell.setCellValue(ProformaConstantesFunciones.LABEL_IDSUBCLIENTE);
		cell = row.createCell(iColumn++);cell.setCellValue(ProformaConstantesFunciones.LABEL_IDTIPOVIATRANSPORTE);
		cell = row.createCell(iColumn++);cell.setCellValue(ProformaConstantesFunciones.LABEL_IDTRANSPORTE);
		cell = row.createCell(iColumn++);cell.setCellValue(ProformaConstantesFunciones.LABEL_IDRUTATRANSPORTE);
		cell = row.createCell(iColumn++);cell.setCellValue(ProformaConstantesFunciones.LABEL_DESCRIPCION);
		cell = row.createCell(iColumn++);cell.setCellValue(ProformaConstantesFunciones.LABEL_DESCUENTOPORCENTAJE);
		cell = row.createCell(iColumn++);cell.setCellValue(ProformaConstantesFunciones.LABEL_MONTOCONIVA);
		cell = row.createCell(iColumn++);cell.setCellValue(ProformaConstantesFunciones.LABEL_SUMAN);
		cell = row.createCell(iColumn++);cell.setCellValue(ProformaConstantesFunciones.LABEL_DESCUENTOVALOR);
		cell = row.createCell(iColumn++);cell.setCellValue(ProformaConstantesFunciones.LABEL_MONTOSINIVA);
		cell = row.createCell(iColumn++);cell.setCellValue(ProformaConstantesFunciones.LABEL_DESCUENTOGENERAL);
		cell = row.createCell(iColumn++);cell.setCellValue(ProformaConstantesFunciones.LABEL_FLETE);
		cell = row.createCell(iColumn++);cell.setCellValue(ProformaConstantesFunciones.LABEL_ULTIMOCOSTO);
		cell = row.createCell(iColumn++);cell.setCellValue(ProformaConstantesFunciones.LABEL_SUBTOTAL);
		cell = row.createCell(iColumn++);cell.setCellValue(ProformaConstantesFunciones.LABEL_OTROSCARGOS);
		cell = row.createCell(iColumn++);cell.setCellValue(ProformaConstantesFunciones.LABEL_MARGENUTILIDAD);
		cell = row.createCell(iColumn++);cell.setCellValue(ProformaConstantesFunciones.LABEL_IVA);
		cell = row.createCell(iColumn++);cell.setCellValue(ProformaConstantesFunciones.LABEL_FINANCIAMIENTO);
		cell = row.createCell(iColumn++);cell.setCellValue(ProformaConstantesFunciones.LABEL_TOTAL);
		cell = row.createCell(iColumn++);cell.setCellValue(ProformaConstantesFunciones.LABEL_OTROSVALORES);
		cell = row.createCell(iColumn++);cell.setCellValue(ProformaConstantesFunciones.LABEL_ANTICIPO);
		cell = row.createCell(iColumn++);cell.setCellValue(ProformaConstantesFunciones.LABEL_ICE);
		cell = row.createCell(iColumn++);cell.setCellValue(ProformaConstantesFunciones.LABEL_MONTORETENCION);
		cell = row.createCell(iColumn++);cell.setCellValue(ProformaConstantesFunciones.LABEL_FECHA);
		cell = row.createCell(iColumn++);cell.setCellValue(ProformaConstantesFunciones.LABEL_FECHASERVIDOR);
		cell = row.createCell(iColumn++);cell.setCellValue(ProformaConstantesFunciones.LABEL_HORAINICIO);
		cell = row.createCell(iColumn++);cell.setCellValue(ProformaConstantesFunciones.LABEL_HORAFIN);
		cell = row.createCell(iColumn++);cell.setCellValue(ProformaConstantesFunciones.LABEL_IDCENTROCOSTO);
		cell = row.createCell(iColumn++);cell.setCellValue(ProformaConstantesFunciones.LABEL_IDTIPOPROFORMA);
		cell = row.createCell(iColumn++);cell.setCellValue(ProformaConstantesFunciones.LABEL_IDCONSIGNATARIO);
		cell = row.createCell(iColumn++);cell.setCellValue(ProformaConstantesFunciones.LABEL_IDTIPOCAMBIO);
	}
	
	//@SuppressWarnings("deprecation")
	public void getFilaDatosExportarExcelProforma(Proforma proforma,HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(proforma.getId());
		cell = row.createCell(iColumn++);cell.setCellValue(proforma.getempresa_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(proforma.getsucursal_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(proforma.getusuario_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(proforma.getejercicio_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(proforma.getperiodo_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(proforma.getanio_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(proforma.getmes_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(proforma.getnumero_pre_impreso());
		cell = row.createCell(iColumn++);cell.setCellValue(proforma.getfecha_emision());
		cell = row.createCell(iColumn++);cell.setCellValue(proforma.getdias());
		cell = row.createCell(iColumn++);cell.setCellValue(proforma.getfecha_vencimiento());
		cell = row.createCell(iColumn++);cell.setCellValue(proforma.getmoneda_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(proforma.getcotizacion());
		cell = row.createCell(iColumn++);cell.setCellValue(proforma.getempleado_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(proforma.getformato_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(proforma.getestadoproforma_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(proforma.getdireccion());
		cell = row.createCell(iColumn++);cell.setCellValue(proforma.getcliente_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(proforma.getruc());
		cell = row.createCell(iColumn++);cell.setCellValue(proforma.getes_oferta());
		cell = row.createCell(iColumn++);cell.setCellValue(proforma.gettelefono());
		cell = row.createCell(iColumn++);cell.setCellValue(proforma.gettipoprecio_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(proforma.getvendedor_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(proforma.getsubcliente_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(proforma.gettipoviatransporte_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(proforma.gettransporte_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(proforma.getrutatransporte_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(proforma.getdescripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(proforma.getdescuento_porcentaje());
		cell = row.createCell(iColumn++);cell.setCellValue(proforma.getmonto_con_iva());
		cell = row.createCell(iColumn++);cell.setCellValue(proforma.getsuman());
		cell = row.createCell(iColumn++);cell.setCellValue(proforma.getdescuento_valor());
		cell = row.createCell(iColumn++);cell.setCellValue(proforma.getmonto_sin_iva());
		cell = row.createCell(iColumn++);cell.setCellValue(proforma.getdescuento_general());
		cell = row.createCell(iColumn++);cell.setCellValue(proforma.getflete());
		cell = row.createCell(iColumn++);cell.setCellValue(proforma.getultimo_costo());
		cell = row.createCell(iColumn++);cell.setCellValue(proforma.getsubtotal());
		cell = row.createCell(iColumn++);cell.setCellValue(proforma.getotros_cargos());
		cell = row.createCell(iColumn++);cell.setCellValue(proforma.getmargen_utilidad());
		cell = row.createCell(iColumn++);cell.setCellValue(proforma.getiva());
		cell = row.createCell(iColumn++);cell.setCellValue(proforma.getfinanciamiento());
		cell = row.createCell(iColumn++);cell.setCellValue(proforma.gettotal());
		cell = row.createCell(iColumn++);cell.setCellValue(proforma.getotros_valores());
		cell = row.createCell(iColumn++);cell.setCellValue(proforma.getanticipo());
		cell = row.createCell(iColumn++);cell.setCellValue(proforma.getice());
		cell = row.createCell(iColumn++);cell.setCellValue(proforma.getmonto_retencion());
		cell = row.createCell(iColumn++);cell.setCellValue(proforma.getfecha());
		cell = row.createCell(iColumn++);cell.setCellValue(proforma.getfecha_servidor());
		cell = row.createCell(iColumn++);cell.setCellValue(proforma.gethora_inicio());
		cell = row.createCell(iColumn++);cell.setCellValue(proforma.gethora_fin());
		cell = row.createCell(iColumn++);cell.setCellValue(proforma.getcentrocosto_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(proforma.gettipoproforma_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(proforma.getconsignatario_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(proforma.gettipocambio_descripcion());				
	}
	
	public void setFilaDatosExportarXmlProforma(Proforma proforma,Document document,Element element) {
		/*
		Element lastname = document.createElement("lastname");
		lastname.appendChild(document.createTextNode("mook kim"));
		element.appendChild(lastname);
		*/
		

		Element elementId = document.createElement(ProformaConstantesFunciones.ID);
		elementId.appendChild(document.createTextNode(proforma.getId().toString().trim()));
		element.appendChild(elementId);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){

		Element elementVersionRow = document.createElement(ProformaConstantesFunciones.VERSIONROW);
		elementVersionRow.appendChild(document.createTextNode(proforma.getVersionRow().toString().trim()));
		element.appendChild(elementVersionRow);
		}


		Element elementempresa_descripcion = document.createElement(ProformaConstantesFunciones.IDEMPRESA);
		elementempresa_descripcion.appendChild(document.createTextNode(proforma.getempresa_descripcion()));
		element.appendChild(elementempresa_descripcion);

		Element elementsucursal_descripcion = document.createElement(ProformaConstantesFunciones.IDSUCURSAL);
		elementsucursal_descripcion.appendChild(document.createTextNode(proforma.getsucursal_descripcion()));
		element.appendChild(elementsucursal_descripcion);

		Element elementusuario_descripcion = document.createElement(ProformaConstantesFunciones.IDUSUARIO);
		elementusuario_descripcion.appendChild(document.createTextNode(proforma.getusuario_descripcion()));
		element.appendChild(elementusuario_descripcion);

		Element elementejercicio_descripcion = document.createElement(ProformaConstantesFunciones.IDEJERCICIO);
		elementejercicio_descripcion.appendChild(document.createTextNode(proforma.getejercicio_descripcion()));
		element.appendChild(elementejercicio_descripcion);

		Element elementperiodo_descripcion = document.createElement(ProformaConstantesFunciones.IDPERIODO);
		elementperiodo_descripcion.appendChild(document.createTextNode(proforma.getperiodo_descripcion()));
		element.appendChild(elementperiodo_descripcion);

		Element elementanio_descripcion = document.createElement(ProformaConstantesFunciones.IDANIO);
		elementanio_descripcion.appendChild(document.createTextNode(proforma.getanio_descripcion()));
		element.appendChild(elementanio_descripcion);

		Element elementmes_descripcion = document.createElement(ProformaConstantesFunciones.IDMES);
		elementmes_descripcion.appendChild(document.createTextNode(proforma.getmes_descripcion()));
		element.appendChild(elementmes_descripcion);

		Element elementnumero_pre_impreso = document.createElement(ProformaConstantesFunciones.NUMEROPREIMPRESO);
		elementnumero_pre_impreso.appendChild(document.createTextNode(proforma.getnumero_pre_impreso().trim()));
		element.appendChild(elementnumero_pre_impreso);

		Element elementfecha_emision = document.createElement(ProformaConstantesFunciones.FECHAEMISION);
		elementfecha_emision.appendChild(document.createTextNode(proforma.getfecha_emision().toString().trim()));
		element.appendChild(elementfecha_emision);

		Element elementdias = document.createElement(ProformaConstantesFunciones.DIAS);
		elementdias.appendChild(document.createTextNode(proforma.getdias().toString().trim()));
		element.appendChild(elementdias);

		Element elementfecha_vencimiento = document.createElement(ProformaConstantesFunciones.FECHAVENCIMIENTO);
		elementfecha_vencimiento.appendChild(document.createTextNode(proforma.getfecha_vencimiento().toString().trim()));
		element.appendChild(elementfecha_vencimiento);

		Element elementmoneda_descripcion = document.createElement(ProformaConstantesFunciones.IDMONEDA);
		elementmoneda_descripcion.appendChild(document.createTextNode(proforma.getmoneda_descripcion()));
		element.appendChild(elementmoneda_descripcion);

		Element elementcotizacion = document.createElement(ProformaConstantesFunciones.COTIZACION);
		elementcotizacion.appendChild(document.createTextNode(proforma.getcotizacion().toString().trim()));
		element.appendChild(elementcotizacion);

		Element elementempleado_descripcion = document.createElement(ProformaConstantesFunciones.IDEMPLEADO);
		elementempleado_descripcion.appendChild(document.createTextNode(proforma.getempleado_descripcion()));
		element.appendChild(elementempleado_descripcion);

		Element elementformato_descripcion = document.createElement(ProformaConstantesFunciones.IDFORMATO);
		elementformato_descripcion.appendChild(document.createTextNode(proforma.getformato_descripcion()));
		element.appendChild(elementformato_descripcion);

		Element elementestadoproforma_descripcion = document.createElement(ProformaConstantesFunciones.IDESTADOPROFORMA);
		elementestadoproforma_descripcion.appendChild(document.createTextNode(proforma.getestadoproforma_descripcion()));
		element.appendChild(elementestadoproforma_descripcion);

		Element elementdireccion = document.createElement(ProformaConstantesFunciones.DIRECCION);
		elementdireccion.appendChild(document.createTextNode(proforma.getdireccion().trim()));
		element.appendChild(elementdireccion);

		Element elementcliente_descripcion = document.createElement(ProformaConstantesFunciones.IDCLIENTE);
		elementcliente_descripcion.appendChild(document.createTextNode(proforma.getcliente_descripcion()));
		element.appendChild(elementcliente_descripcion);

		Element elementruc = document.createElement(ProformaConstantesFunciones.RUC);
		elementruc.appendChild(document.createTextNode(proforma.getruc().trim()));
		element.appendChild(elementruc);

		Element elementes_oferta = document.createElement(ProformaConstantesFunciones.ESOFERTA);
		elementes_oferta.appendChild(document.createTextNode(proforma.getes_oferta().toString().trim()));
		element.appendChild(elementes_oferta);

		Element elementtelefono = document.createElement(ProformaConstantesFunciones.TELEFONO);
		elementtelefono.appendChild(document.createTextNode(proforma.gettelefono().trim()));
		element.appendChild(elementtelefono);

		Element elementtipoprecio_descripcion = document.createElement(ProformaConstantesFunciones.IDTIPOPRECIO);
		elementtipoprecio_descripcion.appendChild(document.createTextNode(proforma.gettipoprecio_descripcion()));
		element.appendChild(elementtipoprecio_descripcion);

		Element elementvendedor_descripcion = document.createElement(ProformaConstantesFunciones.IDVENDEDOR);
		elementvendedor_descripcion.appendChild(document.createTextNode(proforma.getvendedor_descripcion()));
		element.appendChild(elementvendedor_descripcion);

		Element elementsubcliente_descripcion = document.createElement(ProformaConstantesFunciones.IDSUBCLIENTE);
		elementsubcliente_descripcion.appendChild(document.createTextNode(proforma.getsubcliente_descripcion()));
		element.appendChild(elementsubcliente_descripcion);

		Element elementtipoviatransporte_descripcion = document.createElement(ProformaConstantesFunciones.IDTIPOVIATRANSPORTE);
		elementtipoviatransporte_descripcion.appendChild(document.createTextNode(proforma.gettipoviatransporte_descripcion()));
		element.appendChild(elementtipoviatransporte_descripcion);

		Element elementtransporte_descripcion = document.createElement(ProformaConstantesFunciones.IDTRANSPORTE);
		elementtransporte_descripcion.appendChild(document.createTextNode(proforma.gettransporte_descripcion()));
		element.appendChild(elementtransporte_descripcion);

		Element elementrutatransporte_descripcion = document.createElement(ProformaConstantesFunciones.IDRUTATRANSPORTE);
		elementrutatransporte_descripcion.appendChild(document.createTextNode(proforma.getrutatransporte_descripcion()));
		element.appendChild(elementrutatransporte_descripcion);

		Element elementdescripcion = document.createElement(ProformaConstantesFunciones.DESCRIPCION);
		elementdescripcion.appendChild(document.createTextNode(proforma.getdescripcion().trim()));
		element.appendChild(elementdescripcion);

		Element elementdescuento_porcentaje = document.createElement(ProformaConstantesFunciones.DESCUENTOPORCENTAJE);
		elementdescuento_porcentaje.appendChild(document.createTextNode(proforma.getdescuento_porcentaje().toString().trim()));
		element.appendChild(elementdescuento_porcentaje);

		Element elementmonto_con_iva = document.createElement(ProformaConstantesFunciones.MONTOCONIVA);
		elementmonto_con_iva.appendChild(document.createTextNode(proforma.getmonto_con_iva().toString().trim()));
		element.appendChild(elementmonto_con_iva);

		Element elementsuman = document.createElement(ProformaConstantesFunciones.SUMAN);
		elementsuman.appendChild(document.createTextNode(proforma.getsuman().toString().trim()));
		element.appendChild(elementsuman);

		Element elementdescuento_valor = document.createElement(ProformaConstantesFunciones.DESCUENTOVALOR);
		elementdescuento_valor.appendChild(document.createTextNode(proforma.getdescuento_valor().toString().trim()));
		element.appendChild(elementdescuento_valor);

		Element elementmonto_sin_iva = document.createElement(ProformaConstantesFunciones.MONTOSINIVA);
		elementmonto_sin_iva.appendChild(document.createTextNode(proforma.getmonto_sin_iva().toString().trim()));
		element.appendChild(elementmonto_sin_iva);

		Element elementdescuento_general = document.createElement(ProformaConstantesFunciones.DESCUENTOGENERAL);
		elementdescuento_general.appendChild(document.createTextNode(proforma.getdescuento_general().toString().trim()));
		element.appendChild(elementdescuento_general);

		Element elementflete = document.createElement(ProformaConstantesFunciones.FLETE);
		elementflete.appendChild(document.createTextNode(proforma.getflete().toString().trim()));
		element.appendChild(elementflete);

		Element elementultimo_costo = document.createElement(ProformaConstantesFunciones.ULTIMOCOSTO);
		elementultimo_costo.appendChild(document.createTextNode(proforma.getultimo_costo().toString().trim()));
		element.appendChild(elementultimo_costo);

		Element elementsubtotal = document.createElement(ProformaConstantesFunciones.SUBTOTAL);
		elementsubtotal.appendChild(document.createTextNode(proforma.getsubtotal().toString().trim()));
		element.appendChild(elementsubtotal);

		Element elementotros_cargos = document.createElement(ProformaConstantesFunciones.OTROSCARGOS);
		elementotros_cargos.appendChild(document.createTextNode(proforma.getotros_cargos().toString().trim()));
		element.appendChild(elementotros_cargos);

		Element elementmargen_utilidad = document.createElement(ProformaConstantesFunciones.MARGENUTILIDAD);
		elementmargen_utilidad.appendChild(document.createTextNode(proforma.getmargen_utilidad().toString().trim()));
		element.appendChild(elementmargen_utilidad);

		Element elementiva = document.createElement(ProformaConstantesFunciones.IVA);
		elementiva.appendChild(document.createTextNode(proforma.getiva().toString().trim()));
		element.appendChild(elementiva);

		Element elementfinanciamiento = document.createElement(ProformaConstantesFunciones.FINANCIAMIENTO);
		elementfinanciamiento.appendChild(document.createTextNode(proforma.getfinanciamiento().toString().trim()));
		element.appendChild(elementfinanciamiento);

		Element elementtotal = document.createElement(ProformaConstantesFunciones.TOTAL);
		elementtotal.appendChild(document.createTextNode(proforma.gettotal().toString().trim()));
		element.appendChild(elementtotal);

		Element elementotros_valores = document.createElement(ProformaConstantesFunciones.OTROSVALORES);
		elementotros_valores.appendChild(document.createTextNode(proforma.getotros_valores().toString().trim()));
		element.appendChild(elementotros_valores);

		Element elementanticipo = document.createElement(ProformaConstantesFunciones.ANTICIPO);
		elementanticipo.appendChild(document.createTextNode(proforma.getanticipo().toString().trim()));
		element.appendChild(elementanticipo);

		Element elementice = document.createElement(ProformaConstantesFunciones.ICE);
		elementice.appendChild(document.createTextNode(proforma.getice().toString().trim()));
		element.appendChild(elementice);

		Element elementmonto_retencion = document.createElement(ProformaConstantesFunciones.MONTORETENCION);
		elementmonto_retencion.appendChild(document.createTextNode(proforma.getmonto_retencion().toString().trim()));
		element.appendChild(elementmonto_retencion);

		Element elementfecha = document.createElement(ProformaConstantesFunciones.FECHA);
		elementfecha.appendChild(document.createTextNode(proforma.getfecha().toString().trim()));
		element.appendChild(elementfecha);

		Element elementfecha_servidor = document.createElement(ProformaConstantesFunciones.FECHASERVIDOR);
		elementfecha_servidor.appendChild(document.createTextNode(proforma.getfecha_servidor().toString().trim()));
		element.appendChild(elementfecha_servidor);

		Element elementhora_inicio = document.createElement(ProformaConstantesFunciones.HORAINICIO);
		elementhora_inicio.appendChild(document.createTextNode(proforma.gethora_inicio().toString().trim()));
		element.appendChild(elementhora_inicio);

		Element elementhora_fin = document.createElement(ProformaConstantesFunciones.HORAFIN);
		elementhora_fin.appendChild(document.createTextNode(proforma.gethora_fin().toString().trim()));
		element.appendChild(elementhora_fin);

		Element elementcentrocosto_descripcion = document.createElement(ProformaConstantesFunciones.IDCENTROCOSTO);
		elementcentrocosto_descripcion.appendChild(document.createTextNode(proforma.getcentrocosto_descripcion()));
		element.appendChild(elementcentrocosto_descripcion);

		Element elementtipoproforma_descripcion = document.createElement(ProformaConstantesFunciones.IDTIPOPROFORMA);
		elementtipoproforma_descripcion.appendChild(document.createTextNode(proforma.gettipoproforma_descripcion()));
		element.appendChild(elementtipoproforma_descripcion);

		Element elementconsignatario_descripcion = document.createElement(ProformaConstantesFunciones.IDCONSIGNATARIO);
		elementconsignatario_descripcion.appendChild(document.createTextNode(proforma.getconsignatario_descripcion()));
		element.appendChild(elementconsignatario_descripcion);

		Element elementtipocambio_descripcion = document.createElement(ProformaConstantesFunciones.IDTIPOCAMBIO);
		elementtipocambio_descripcion.appendChild(document.createTextNode(proforma.gettipocambio_descripcion()));
		element.appendChild(elementtipocambio_descripcion);
	}
	
	public void generarReporteGroupGenericoProformasSeleccionados(Boolean soloTotales) throws Exception {
		ArrayList<Proforma> proformasSeleccionados=new ArrayList<Proforma>();
		
		proformasSeleccionados=this.getProformasSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!soloTotales) {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_GENERICO;
		} else {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_TOTALES_GENERICO;
		}
		
		this.setColumnaDescripcionReporteGroupGenericoProforma(proformasSeleccionados);
		
		this.generarReporteProformas("Todos",proformasSeleccionados);
	}
	
	public void setColumnaDescripcionReporteGroupGenericoProforma(ArrayList<Proforma> proformasSeleccionados) throws Exception {    		
		try {
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			
			Boolean existe=false;
			
			for(Proforma proformaAux:proformasSeleccionados) {
				proformaAux.setsDetalleGeneralEntityReporte(proformaAux.toString());
			
				if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_IDEMPRESA)) {
					existe=true;
					proformaAux.setsDescripcionGeneralEntityReporte1(proformaAux.getempresa_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_IDSUCURSAL)) {
					existe=true;
					proformaAux.setsDescripcionGeneralEntityReporte1(proformaAux.getsucursal_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_IDUSUARIO)) {
					existe=true;
					proformaAux.setsDescripcionGeneralEntityReporte1(proformaAux.getusuario_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_IDEJERCICIO)) {
					existe=true;
					proformaAux.setsDescripcionGeneralEntityReporte1(proformaAux.getejercicio_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_IDPERIODO)) {
					existe=true;
					proformaAux.setsDescripcionGeneralEntityReporte1(proformaAux.getperiodo_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_IDANIO)) {
					existe=true;
					proformaAux.setsDescripcionGeneralEntityReporte1(proformaAux.getanio_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_IDMES)) {
					existe=true;
					proformaAux.setsDescripcionGeneralEntityReporte1(proformaAux.getmes_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_NUMEROPREIMPRESO)) {
					existe=true;
					proformaAux.setsDescripcionGeneralEntityReporte1(proformaAux.getnumero_pre_impreso());
				}
				 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_FECHAEMISION)) {
					existe=true;
					proformaAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(proformaAux.getfecha_emision()));
				}
				 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_DIAS)) {
					existe=true;
					proformaAux.setsDescripcionGeneralEntityReporte1(proformaAux.getdias().toString());
				}
				 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_FECHAVENCIMIENTO)) {
					existe=true;
					proformaAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(proformaAux.getfecha_vencimiento()));
				}
				 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_IDMONEDA)) {
					existe=true;
					proformaAux.setsDescripcionGeneralEntityReporte1(proformaAux.getmoneda_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_IDEMPLEADO)) {
					existe=true;
					proformaAux.setsDescripcionGeneralEntityReporte1(proformaAux.getempleado_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_IDFORMATO)) {
					existe=true;
					proformaAux.setsDescripcionGeneralEntityReporte1(proformaAux.getformato_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_IDESTADOPROFORMA)) {
					existe=true;
					proformaAux.setsDescripcionGeneralEntityReporte1(proformaAux.getestadoproforma_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_DIRECCION)) {
					existe=true;
					proformaAux.setsDescripcionGeneralEntityReporte1(proformaAux.getdireccion());
				}
				 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_IDCLIENTE)) {
					existe=true;
					proformaAux.setsDescripcionGeneralEntityReporte1(proformaAux.getcliente_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_RUC)) {
					existe=true;
					proformaAux.setsDescripcionGeneralEntityReporte1(proformaAux.getruc());
				}
				 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_ESOFERTA)) {
					existe=true;
					proformaAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(proformaAux.getes_oferta()));
				}
				 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_TELEFONO)) {
					existe=true;
					proformaAux.setsDescripcionGeneralEntityReporte1(proformaAux.gettelefono());
				}
				 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_IDTIPOPRECIO)) {
					existe=true;
					proformaAux.setsDescripcionGeneralEntityReporte1(proformaAux.gettipoprecio_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_IDVENDEDOR)) {
					existe=true;
					proformaAux.setsDescripcionGeneralEntityReporte1(proformaAux.getvendedor_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_IDSUBCLIENTE)) {
					existe=true;
					proformaAux.setsDescripcionGeneralEntityReporte1(proformaAux.getsubcliente_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_IDTIPOVIATRANSPORTE)) {
					existe=true;
					proformaAux.setsDescripcionGeneralEntityReporte1(proformaAux.gettipoviatransporte_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_IDTRANSPORTE)) {
					existe=true;
					proformaAux.setsDescripcionGeneralEntityReporte1(proformaAux.gettransporte_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_IDRUTATRANSPORTE)) {
					existe=true;
					proformaAux.setsDescripcionGeneralEntityReporte1(proformaAux.getrutatransporte_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_DESCRIPCION)) {
					existe=true;
					proformaAux.setsDescripcionGeneralEntityReporte1(proformaAux.getdescripcion());
				}
				 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_FECHA)) {
					existe=true;
					proformaAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(proformaAux.getfecha()));
				}
				 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_FECHASERVIDOR)) {
					existe=true;
					proformaAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(proformaAux.getfecha_servidor()));
				}
				 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_HORAINICIO)) {
					existe=true;
					proformaAux.setsDescripcionGeneralEntityReporte1(proformaAux.gethora_inicio().toString());
				}
				 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_HORAFIN)) {
					existe=true;
					proformaAux.setsDescripcionGeneralEntityReporte1(proformaAux.gethora_fin().toString());
				}
				 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_IDCENTROCOSTO)) {
					existe=true;
					proformaAux.setsDescripcionGeneralEntityReporte1(proformaAux.getcentrocosto_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_IDTIPOPROFORMA)) {
					existe=true;
					proformaAux.setsDescripcionGeneralEntityReporte1(proformaAux.gettipoproforma_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_IDCONSIGNATARIO)) {
					existe=true;
					proformaAux.setsDescripcionGeneralEntityReporte1(proformaAux.getconsignatario_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ProformaConstantesFunciones.LABEL_IDTIPOCAMBIO)) {
					existe=true;
					proformaAux.setsDescripcionGeneralEntityReporte1(proformaAux.gettipocambio_descripcion());
				}
			}	
											
			if(!existe) {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}										
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ProformaConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void actualizarEstadoCeldasBotonesProforma(String sAccion,Boolean isGuardarCambiosEnLote,Boolean isEsMantenimientoRelacionado) throws Exception {
		if(sAccion=="n") {
			if(!this.esParaBusquedaForeignKey) {
				this.isVisibilidadCeldaNuevoProforma=true;
				this.isVisibilidadCeldaNuevoRelacionesProforma=true;
				this.isVisibilidadCeldaGuardarCambiosProforma=true;
			}
			
			this.isVisibilidadCeldaModificarProforma=false;
			this.isVisibilidadCeldaActualizarProforma=false;
			this.isVisibilidadCeldaEliminarProforma=false;
			this.isVisibilidadCeldaCancelarProforma=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarProforma=true;
				} else {
					this.isVisibilidadCeldaGuardarProforma=false;
				}
			}
		} else if(sAccion=="a") {
			this.isVisibilidadCeldaNuevoProforma=false;
			this.isVisibilidadCeldaNuevoRelacionesProforma=false;
			this.isVisibilidadCeldaGuardarCambiosProforma=false;
			this.isVisibilidadCeldaModificarProforma=false;
			this.isVisibilidadCeldaActualizarProforma=true;
			this.isVisibilidadCeldaEliminarProforma=false;
			this.isVisibilidadCeldaCancelarProforma=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarProforma=true;
				} else {
					this.isVisibilidadCeldaGuardarProforma=false;
				}
			}
		} else if(sAccion=="ae") {
			this.isVisibilidadCeldaNuevoProforma=false;
			this.isVisibilidadCeldaNuevoRelacionesProforma=false;
			this.isVisibilidadCeldaGuardarCambiosProforma=false;
			this.isVisibilidadCeldaModificarProforma=false;
			this.isVisibilidadCeldaActualizarProforma=true;
			this.isVisibilidadCeldaEliminarProforma=true;
			this.isVisibilidadCeldaCancelarProforma=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarProforma=true;
				} else {
					this.isVisibilidadCeldaGuardarProforma=false;
				}
			}
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {
			this.isVisibilidadCeldaNuevoProforma=false;
			this.isVisibilidadCeldaNuevoRelacionesProforma=false;
			this.isVisibilidadCeldaGuardarCambiosProforma=false;
			this.isVisibilidadCeldaModificarProforma=false;
			this.isVisibilidadCeldaActualizarProforma=true;
			this.isVisibilidadCeldaEliminarProforma=false;
			this.isVisibilidadCeldaCancelarProforma=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarProforma=false;
				} else {
					this.isVisibilidadCeldaGuardarProforma=false;
				}
			}
		} else if(sAccion=="c") {
			this.isVisibilidadCeldaNuevoProforma=true;
			this.isVisibilidadCeldaNuevoRelacionesProforma=true;
			this.isVisibilidadCeldaGuardarCambiosProforma=true;
			this.isVisibilidadCeldaModificarProforma=false;
			this.isVisibilidadCeldaActualizarProforma=false;
			this.isVisibilidadCeldaEliminarProforma=false;
			this.isVisibilidadCeldaCancelarProforma=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarProforma=true;
				} else {
					this.isVisibilidadCeldaGuardarProforma=false;
				}
			}
		} else if(sAccion=="t") {
			this.isVisibilidadCeldaNuevoProforma=false;
			this.isVisibilidadCeldaNuevoRelacionesProforma=false;
			this.isVisibilidadCeldaGuardarCambiosProforma=false;
			this.isVisibilidadCeldaActualizarProforma=false;
			this.isVisibilidadCeldaEliminarProforma=false;
			this.isVisibilidadCeldaCancelarProforma=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarProforma=false;
				} else {
					this.isVisibilidadCeldaGuardarProforma=false;
				}
			}
		}  else if(sAccion=="s"||sAccion=="s2") {
			this.isVisibilidadCeldaNuevoProforma=false;
			this.isVisibilidadCeldaNuevoRelacionesProforma=false;
			this.isVisibilidadCeldaGuardarCambiosProforma=false;
			this.isVisibilidadCeldaModificarProforma=true;
			this.isVisibilidadCeldaActualizarProforma=false;
			this.isVisibilidadCeldaEliminarProforma=false;
			this.isVisibilidadCeldaCancelarProforma=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarProforma=false;
				} else {
					this.isVisibilidadCeldaGuardarProforma=false;
				}
			}
		}
		
		//ACTUALIZA VISIBILIDAD PANELES
		if(ProformaJInternalFrame.CON_DATOS_FRAME && !this.esParaBusquedaForeignKey) {
			//SIEMPRE VISIBLE
			this.isVisibilidadCeldaNuevoProforma=true;
			this.isVisibilidadCeldaNuevoRelacionesProforma=true;
			this.isVisibilidadCeldaGuardarCambiosProforma=true;
		} else {
			this.actualizarEstadoPanelsProforma(sAccion);						
		}
		
		if(this.esParaBusquedaForeignKey) {
			this.isVisibilidadCeldaCopiarProforma=false;
			//this.isVisibilidadCeldaVerFormProforma=false;
			this.isVisibilidadCeldaDuplicarProforma=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONES
		if(!proformaSessionBean.getConGuardarRelaciones()) {
			this.isVisibilidadCeldaNuevoRelacionesProforma=false;
		} else {
			this.isVisibilidadCeldaNuevoProforma=false;
			this.isVisibilidadCeldaGuardarCambiosProforma=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONADO
		if(proformaSessionBean.getEsGuardarRelacionado()) {
			if(!proformaSessionBean.getConGuardarRelaciones()) {	
				this.isVisibilidadCeldaNuevoRelacionesProforma=false;												
			}
			
			this.jButtonCerrarProforma.setVisible(false);
		}
		
		//SI NO TIENE MAXIMO DE RELACIONES PERMITIDAS
		if(!this.conMaximoRelaciones) {
			this.isVisibilidadCeldaNuevoRelacionesProforma=false;
		}
		
		if(!this.permiteMantenimiento(this.proforma)) {
			this.isVisibilidadCeldaActualizarProforma=false;
			this.isVisibilidadCeldaEliminarProforma=false;
		}
		
		
		
	}
	
	public void actualizarEstadoCeldasBotonesConGuardarRelacionesProforma() {
		this.isVisibilidadCeldaNuevoProforma=false;
		this.isVisibilidadCeldaGuardarCambiosProforma=false;
	}
	
	public void actualizarEstadoPanelsProforma(String sAccion) {
		if(sAccion=="n") {
			if(this.jScrollPanelDatosEdicionProforma!=null) {
				this.jScrollPanelDatosEdicionProforma.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasProforma!=null) {
				this.jTabbedPaneBusquedasProforma.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosProforma!=null) {
				this.jScrollPanelDatosProforma.setVisible(true);
			}
			
			if(this.jPanelPaginacionProforma!=null) {
				this.jPanelPaginacionProforma.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesProforma!=null) {
				this.jPanelParametrosReportesProforma.setVisible(true);		    
			}
			
		} else if(sAccion=="a") {				
			if(this.jScrollPanelDatosEdicionProforma!=null) {
				this.jScrollPanelDatosEdicionProforma.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasProforma!=null) {
				this.jTabbedPaneBusquedasProforma.setVisible(false);			
			}
			
			
			
			if(this.jScrollPanelDatosProforma!=null) {
				this.jScrollPanelDatosProforma.setVisible(false);
			}
			
			if(this.jPanelPaginacionProforma!=null) {
				this.jPanelPaginacionProforma.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesProforma!=null) {
				this.jPanelParametrosReportesProforma.setVisible(false);
			}
						
		} else if(sAccion=="ae") {		
			if(this.jScrollPanelDatosEdicionProforma!=null) {
				this.jScrollPanelDatosEdicionProforma.setVisible(true);		
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasProforma!=null) {
				this.jTabbedPaneBusquedasProforma.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosProforma!=null) {
				this.jScrollPanelDatosProforma.setVisible(false);
			}
			
			if(this.jPanelPaginacionProforma!=null) {
				this.jPanelPaginacionProforma.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesProforma!=null) {
				this.jPanelParametrosReportesProforma.setVisible(false);
			}
						
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {	
			if(this.jScrollPanelDatosEdicionProforma!=null) {
				this.jScrollPanelDatosEdicionProforma.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasProforma!=null) {
				this.jTabbedPaneBusquedasProforma.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosProforma!=null) {
				this.jScrollPanelDatosProforma.setVisible(false);
			}
			
			if(this.jPanelPaginacionProforma!=null) {
				this.jPanelPaginacionProforma.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesProforma!=null) {
				this.jPanelParametrosReportesProforma.setVisible(false);
			}
						
		} else if(sAccion=="c") {	
			if(this.jScrollPanelDatosEdicionProforma!=null) {
				this.jScrollPanelDatosEdicionProforma.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasProforma!=null) {
				this.jTabbedPaneBusquedasProforma.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosProforma!=null) {
				this.jScrollPanelDatosProforma.setVisible(true);
			}
			
			if(this.jPanelPaginacionProforma!=null) {
				this.jPanelPaginacionProforma.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesProforma!=null) {
				this.jPanelParametrosReportesProforma.setVisible(true);
			}
						
		} else if(sAccion=="t") {
			
			if(this.jScrollPanelDatosEdicionProforma!=null) {
				this.jScrollPanelDatosEdicionProforma.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasProforma!=null) {
				this.jTabbedPaneBusquedasProforma.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosProforma!=null) {
				this.jScrollPanelDatosProforma.setVisible(true);
			}
			
			if(this.jPanelPaginacionProforma!=null) {
				this.jPanelPaginacionProforma.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesProforma!=null) {
				this.jPanelParametrosReportesProforma.setVisible(true);
			}
						
		}  else if(sAccion=="s"||sAccion=="s2") {
			if(this.jScrollPanelDatosEdicionProforma!=null) {
				this.jScrollPanelDatosEdicionProforma.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasProforma!=null) {
				this.jTabbedPaneBusquedasProforma.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosProforma!=null) {
				this.jScrollPanelDatosProforma.setVisible(true);
			}
			
			if(this.jPanelPaginacionProforma!=null) {
				this.jPanelPaginacionProforma.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesProforma!=null) {
				this.jPanelParametrosReportesProforma.setVisible(true);
			}
			
		} 
		
		if(sAccion.equals("relacionado") || this.proformaSessionBean.getEsGuardarRelacionado()) {
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				if(this.jTabbedPaneBusquedasProforma!=null) {
					this.jTabbedPaneBusquedasProforma.setVisible(false);				
				}
				
			}
			
			if(this.jPanelParametrosReportesProforma!=null) {
				this.jPanelParametrosReportesProforma.setVisible(false);
			}
		
		} else if(sAccion.equals("no_relacionado") && !this.proformaSessionBean.getEsGuardarRelacionado()) {
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasProforma!=null) {
				this.jTabbedPaneBusquedasProforma.setVisible(true);			
			}
			
			if(this.jPanelParametrosReportesProforma!=null) {
				this.jPanelParametrosReportesProforma.setVisible(true);
			}
		}
	}	
	
	

	public void setVisibilidadBusquedasParaEmpresa(Boolean isParaEmpresa){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEmpresaNegation=!isParaEmpresa;

			this.isVisibilidadFK_IdCentroCosto=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdCentroCostoProforma);}

			this.isVisibilidadFK_IdCliente=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdClienteProforma);}

			this.isVisibilidadFK_IdConsignatario=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdConsignatario) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdConsignatarioProforma);}

			this.isVisibilidadFK_IdEmpleado=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdEmpleadoProforma);}

			this.isVisibilidadFK_IdEstadoProforma=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdEstadoProforma) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdEstadoProformaProforma);}

			this.isVisibilidadFK_IdFormato=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdFormatoProforma);}

			this.isVisibilidadFK_IdRutaTransporte=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdRutaTransporte) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdRutaTransporteProforma);}

			this.isVisibilidadFK_IdSubCliente=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdSubClienteProforma);}

			this.isVisibilidadFK_IdTipoCambio=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTipoCambioProforma);}

			this.isVisibilidadFK_IdTipoPrecio=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTipoPrecioProforma);}

			this.isVisibilidadFK_IdTipoProforma=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoProforma) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTipoProformaProforma);}

			this.isVisibilidadFK_IdTipoViaTransporte=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoViaTransporte) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTipoViaTransporteProforma);}

			this.isVisibilidadFK_IdTransporte=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTransporteProforma);}

			this.isVisibilidadFK_IdVendedor=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdVendedorProforma);}
		}
		
	}

	public void setVisibilidadBusquedasParaSucursal(Boolean isParaSucursal){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaSucursalNegation=!isParaSucursal;

			this.isVisibilidadFK_IdCentroCosto=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdCentroCostoProforma);}

			this.isVisibilidadFK_IdCliente=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdClienteProforma);}

			this.isVisibilidadFK_IdConsignatario=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdConsignatario) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdConsignatarioProforma);}

			this.isVisibilidadFK_IdEmpleado=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdEmpleadoProforma);}

			this.isVisibilidadFK_IdEstadoProforma=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdEstadoProforma) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdEstadoProformaProforma);}

			this.isVisibilidadFK_IdFormato=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdFormatoProforma);}

			this.isVisibilidadFK_IdRutaTransporte=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdRutaTransporte) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdRutaTransporteProforma);}

			this.isVisibilidadFK_IdSubCliente=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdSubClienteProforma);}

			this.isVisibilidadFK_IdTipoCambio=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTipoCambioProforma);}

			this.isVisibilidadFK_IdTipoPrecio=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTipoPrecioProforma);}

			this.isVisibilidadFK_IdTipoProforma=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTipoProforma) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTipoProformaProforma);}

			this.isVisibilidadFK_IdTipoViaTransporte=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTipoViaTransporte) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTipoViaTransporteProforma);}

			this.isVisibilidadFK_IdTransporte=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTransporteProforma);}

			this.isVisibilidadFK_IdVendedor=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdVendedorProforma);}
		}
		
	}

	public void setVisibilidadBusquedasParaUsuario(Boolean isParaUsuario){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaUsuarioNegation=!isParaUsuario;

			this.isVisibilidadFK_IdCentroCosto=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdCentroCostoProforma);}

			this.isVisibilidadFK_IdCliente=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdClienteProforma);}

			this.isVisibilidadFK_IdConsignatario=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdConsignatario) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdConsignatarioProforma);}

			this.isVisibilidadFK_IdEmpleado=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdEmpleadoProforma);}

			this.isVisibilidadFK_IdEstadoProforma=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdEstadoProforma) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdEstadoProformaProforma);}

			this.isVisibilidadFK_IdFormato=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdFormatoProforma);}

			this.isVisibilidadFK_IdRutaTransporte=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdRutaTransporte) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdRutaTransporteProforma);}

			this.isVisibilidadFK_IdSubCliente=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdSubClienteProforma);}

			this.isVisibilidadFK_IdTipoCambio=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTipoCambioProforma);}

			this.isVisibilidadFK_IdTipoPrecio=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTipoPrecioProforma);}

			this.isVisibilidadFK_IdTipoProforma=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdTipoProforma) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTipoProformaProforma);}

			this.isVisibilidadFK_IdTipoViaTransporte=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdTipoViaTransporte) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTipoViaTransporteProforma);}

			this.isVisibilidadFK_IdTransporte=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTransporteProforma);}

			this.isVisibilidadFK_IdVendedor=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdVendedorProforma);}
		}
		
	}

	public void setVisibilidadBusquedasParaEjercicio(Boolean isParaEjercicio){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEjercicioNegation=!isParaEjercicio;

			this.isVisibilidadFK_IdCentroCosto=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdCentroCostoProforma);}

			this.isVisibilidadFK_IdCliente=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdClienteProforma);}

			this.isVisibilidadFK_IdConsignatario=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdConsignatario) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdConsignatarioProforma);}

			this.isVisibilidadFK_IdEmpleado=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdEmpleadoProforma);}

			this.isVisibilidadFK_IdEstadoProforma=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdEstadoProforma) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdEstadoProformaProforma);}

			this.isVisibilidadFK_IdFormato=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdFormatoProforma);}

			this.isVisibilidadFK_IdRutaTransporte=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdRutaTransporte) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdRutaTransporteProforma);}

			this.isVisibilidadFK_IdSubCliente=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdSubClienteProforma);}

			this.isVisibilidadFK_IdTipoCambio=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTipoCambioProforma);}

			this.isVisibilidadFK_IdTipoPrecio=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTipoPrecioProforma);}

			this.isVisibilidadFK_IdTipoProforma=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdTipoProforma) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTipoProformaProforma);}

			this.isVisibilidadFK_IdTipoViaTransporte=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdTipoViaTransporte) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTipoViaTransporteProforma);}

			this.isVisibilidadFK_IdTransporte=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTransporteProforma);}

			this.isVisibilidadFK_IdVendedor=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdVendedorProforma);}
		}
		
	}

	public void setVisibilidadBusquedasParaPeriodo(Boolean isParaPeriodo){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaPeriodoNegation=!isParaPeriodo;

			this.isVisibilidadFK_IdCentroCosto=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdCentroCostoProforma);}

			this.isVisibilidadFK_IdCliente=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdClienteProforma);}

			this.isVisibilidadFK_IdConsignatario=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdConsignatario) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdConsignatarioProforma);}

			this.isVisibilidadFK_IdEmpleado=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdEmpleadoProforma);}

			this.isVisibilidadFK_IdEstadoProforma=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdEstadoProforma) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdEstadoProformaProforma);}

			this.isVisibilidadFK_IdFormato=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdFormatoProforma);}

			this.isVisibilidadFK_IdRutaTransporte=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdRutaTransporte) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdRutaTransporteProforma);}

			this.isVisibilidadFK_IdSubCliente=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdSubClienteProforma);}

			this.isVisibilidadFK_IdTipoCambio=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTipoCambioProforma);}

			this.isVisibilidadFK_IdTipoPrecio=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTipoPrecioProforma);}

			this.isVisibilidadFK_IdTipoProforma=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdTipoProforma) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTipoProformaProforma);}

			this.isVisibilidadFK_IdTipoViaTransporte=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdTipoViaTransporte) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTipoViaTransporteProforma);}

			this.isVisibilidadFK_IdTransporte=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTransporteProforma);}

			this.isVisibilidadFK_IdVendedor=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdVendedorProforma);}
		}
		
	}

	public void setVisibilidadBusquedasParaAnio(Boolean isParaAnio){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaAnioNegation=!isParaAnio;

			this.isVisibilidadFK_IdCentroCosto=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdCentroCostoProforma);}

			this.isVisibilidadFK_IdCliente=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdClienteProforma);}

			this.isVisibilidadFK_IdConsignatario=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdConsignatario) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdConsignatarioProforma);}

			this.isVisibilidadFK_IdEmpleado=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdEmpleadoProforma);}

			this.isVisibilidadFK_IdEstadoProforma=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdEstadoProforma) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdEstadoProformaProforma);}

			this.isVisibilidadFK_IdFormato=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdFormatoProforma);}

			this.isVisibilidadFK_IdRutaTransporte=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdRutaTransporte) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdRutaTransporteProforma);}

			this.isVisibilidadFK_IdSubCliente=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdSubClienteProforma);}

			this.isVisibilidadFK_IdTipoCambio=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTipoCambioProforma);}

			this.isVisibilidadFK_IdTipoPrecio=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTipoPrecioProforma);}

			this.isVisibilidadFK_IdTipoProforma=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdTipoProforma) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTipoProformaProforma);}

			this.isVisibilidadFK_IdTipoViaTransporte=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdTipoViaTransporte) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTipoViaTransporteProforma);}

			this.isVisibilidadFK_IdTransporte=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTransporteProforma);}

			this.isVisibilidadFK_IdVendedor=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdVendedorProforma);}
		}
		
	}

	public void setVisibilidadBusquedasParaMes(Boolean isParaMes){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaMesNegation=!isParaMes;

			this.isVisibilidadFK_IdCentroCosto=isParaMesNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdCentroCostoProforma);}

			this.isVisibilidadFK_IdCliente=isParaMesNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdClienteProforma);}

			this.isVisibilidadFK_IdConsignatario=isParaMesNegation;
			if(!this.isVisibilidadFK_IdConsignatario) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdConsignatarioProforma);}

			this.isVisibilidadFK_IdEmpleado=isParaMesNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdEmpleadoProforma);}

			this.isVisibilidadFK_IdEstadoProforma=isParaMesNegation;
			if(!this.isVisibilidadFK_IdEstadoProforma) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdEstadoProformaProforma);}

			this.isVisibilidadFK_IdFormato=isParaMesNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdFormatoProforma);}

			this.isVisibilidadFK_IdRutaTransporte=isParaMesNegation;
			if(!this.isVisibilidadFK_IdRutaTransporte) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdRutaTransporteProforma);}

			this.isVisibilidadFK_IdSubCliente=isParaMesNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdSubClienteProforma);}

			this.isVisibilidadFK_IdTipoCambio=isParaMesNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTipoCambioProforma);}

			this.isVisibilidadFK_IdTipoPrecio=isParaMesNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTipoPrecioProforma);}

			this.isVisibilidadFK_IdTipoProforma=isParaMesNegation;
			if(!this.isVisibilidadFK_IdTipoProforma) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTipoProformaProforma);}

			this.isVisibilidadFK_IdTipoViaTransporte=isParaMesNegation;
			if(!this.isVisibilidadFK_IdTipoViaTransporte) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTipoViaTransporteProforma);}

			this.isVisibilidadFK_IdTransporte=isParaMesNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTransporteProforma);}

			this.isVisibilidadFK_IdVendedor=isParaMesNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdVendedorProforma);}
		}
		
	}

	public void setVisibilidadBusquedasParaMoneda(Boolean isParaMoneda){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaMonedaNegation=!isParaMoneda;

			this.isVisibilidadFK_IdCentroCosto=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdCentroCostoProforma);}

			this.isVisibilidadFK_IdCliente=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdClienteProforma);}

			this.isVisibilidadFK_IdConsignatario=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdConsignatario) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdConsignatarioProforma);}

			this.isVisibilidadFK_IdEmpleado=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdEmpleadoProforma);}

			this.isVisibilidadFK_IdEstadoProforma=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdEstadoProforma) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdEstadoProformaProforma);}

			this.isVisibilidadFK_IdFormato=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdFormatoProforma);}

			this.isVisibilidadFK_IdRutaTransporte=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdRutaTransporte) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdRutaTransporteProforma);}

			this.isVisibilidadFK_IdSubCliente=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdSubClienteProforma);}

			this.isVisibilidadFK_IdTipoCambio=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTipoCambioProforma);}

			this.isVisibilidadFK_IdTipoPrecio=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTipoPrecioProforma);}

			this.isVisibilidadFK_IdTipoProforma=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdTipoProforma) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTipoProformaProforma);}

			this.isVisibilidadFK_IdTipoViaTransporte=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdTipoViaTransporte) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTipoViaTransporteProforma);}

			this.isVisibilidadFK_IdTransporte=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTransporteProforma);}

			this.isVisibilidadFK_IdVendedor=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdVendedorProforma);}
		}
		
	}

	public void setVisibilidadBusquedasParaEmpleado(Boolean isParaEmpleado){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEmpleadoNegation=!isParaEmpleado;

			this.isVisibilidadFK_IdCentroCosto=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdCentroCostoProforma);}

			this.isVisibilidadFK_IdCliente=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdClienteProforma);}

			this.isVisibilidadFK_IdConsignatario=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdConsignatario) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdConsignatarioProforma);}

			this.isVisibilidadFK_IdEmpleado=isParaEmpleado;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdEmpleadoProforma);}

			this.isVisibilidadFK_IdEstadoProforma=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdEstadoProforma) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdEstadoProformaProforma);}

			this.isVisibilidadFK_IdFormato=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdFormatoProforma);}

			this.isVisibilidadFK_IdRutaTransporte=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdRutaTransporte) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdRutaTransporteProforma);}

			this.isVisibilidadFK_IdSubCliente=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdSubClienteProforma);}

			this.isVisibilidadFK_IdTipoCambio=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTipoCambioProforma);}

			this.isVisibilidadFK_IdTipoPrecio=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTipoPrecioProforma);}

			this.isVisibilidadFK_IdTipoProforma=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdTipoProforma) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTipoProformaProforma);}

			this.isVisibilidadFK_IdTipoViaTransporte=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdTipoViaTransporte) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTipoViaTransporteProforma);}

			this.isVisibilidadFK_IdTransporte=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTransporteProforma);}

			this.isVisibilidadFK_IdVendedor=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdVendedorProforma);}
		}
		
	}

	public void setVisibilidadBusquedasParaFormato(Boolean isParaFormato){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaFormatoNegation=!isParaFormato;

			this.isVisibilidadFK_IdCentroCosto=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdCentroCostoProforma);}

			this.isVisibilidadFK_IdCliente=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdClienteProforma);}

			this.isVisibilidadFK_IdConsignatario=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdConsignatario) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdConsignatarioProforma);}

			this.isVisibilidadFK_IdEmpleado=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdEmpleadoProforma);}

			this.isVisibilidadFK_IdEstadoProforma=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdEstadoProforma) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdEstadoProformaProforma);}

			this.isVisibilidadFK_IdFormato=isParaFormato;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdFormatoProforma);}

			this.isVisibilidadFK_IdRutaTransporte=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdRutaTransporte) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdRutaTransporteProforma);}

			this.isVisibilidadFK_IdSubCliente=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdSubClienteProforma);}

			this.isVisibilidadFK_IdTipoCambio=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTipoCambioProforma);}

			this.isVisibilidadFK_IdTipoPrecio=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTipoPrecioProforma);}

			this.isVisibilidadFK_IdTipoProforma=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdTipoProforma) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTipoProformaProforma);}

			this.isVisibilidadFK_IdTipoViaTransporte=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdTipoViaTransporte) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTipoViaTransporteProforma);}

			this.isVisibilidadFK_IdTransporte=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTransporteProforma);}

			this.isVisibilidadFK_IdVendedor=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdVendedorProforma);}
		}
		
	}

	public void setVisibilidadBusquedasParaEstadoProforma(Boolean isParaEstadoProforma){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEstadoProformaNegation=!isParaEstadoProforma;

			this.isVisibilidadFK_IdCentroCosto=isParaEstadoProformaNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdCentroCostoProforma);}

			this.isVisibilidadFK_IdCliente=isParaEstadoProformaNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdClienteProforma);}

			this.isVisibilidadFK_IdConsignatario=isParaEstadoProformaNegation;
			if(!this.isVisibilidadFK_IdConsignatario) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdConsignatarioProforma);}

			this.isVisibilidadFK_IdEmpleado=isParaEstadoProformaNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdEmpleadoProforma);}

			this.isVisibilidadFK_IdEstadoProforma=isParaEstadoProforma;
			if(!this.isVisibilidadFK_IdEstadoProforma) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdEstadoProformaProforma);}

			this.isVisibilidadFK_IdFormato=isParaEstadoProformaNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdFormatoProforma);}

			this.isVisibilidadFK_IdRutaTransporte=isParaEstadoProformaNegation;
			if(!this.isVisibilidadFK_IdRutaTransporte) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdRutaTransporteProforma);}

			this.isVisibilidadFK_IdSubCliente=isParaEstadoProformaNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdSubClienteProforma);}

			this.isVisibilidadFK_IdTipoCambio=isParaEstadoProformaNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTipoCambioProforma);}

			this.isVisibilidadFK_IdTipoPrecio=isParaEstadoProformaNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTipoPrecioProforma);}

			this.isVisibilidadFK_IdTipoProforma=isParaEstadoProformaNegation;
			if(!this.isVisibilidadFK_IdTipoProforma) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTipoProformaProforma);}

			this.isVisibilidadFK_IdTipoViaTransporte=isParaEstadoProformaNegation;
			if(!this.isVisibilidadFK_IdTipoViaTransporte) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTipoViaTransporteProforma);}

			this.isVisibilidadFK_IdTransporte=isParaEstadoProformaNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTransporteProforma);}

			this.isVisibilidadFK_IdVendedor=isParaEstadoProformaNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdVendedorProforma);}
		}
		
	}

	public void setVisibilidadBusquedasParaCliente(Boolean isParaCliente){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaClienteNegation=!isParaCliente;

			this.isVisibilidadFK_IdCentroCosto=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdCentroCostoProforma);}

			this.isVisibilidadFK_IdCliente=isParaCliente;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdClienteProforma);}

			this.isVisibilidadFK_IdConsignatario=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdConsignatario) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdConsignatarioProforma);}

			this.isVisibilidadFK_IdEmpleado=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdEmpleadoProforma);}

			this.isVisibilidadFK_IdEstadoProforma=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdEstadoProforma) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdEstadoProformaProforma);}

			this.isVisibilidadFK_IdFormato=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdFormatoProforma);}

			this.isVisibilidadFK_IdRutaTransporte=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdRutaTransporte) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdRutaTransporteProforma);}

			this.isVisibilidadFK_IdSubCliente=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdSubClienteProforma);}

			this.isVisibilidadFK_IdTipoCambio=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTipoCambioProforma);}

			this.isVisibilidadFK_IdTipoPrecio=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTipoPrecioProforma);}

			this.isVisibilidadFK_IdTipoProforma=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdTipoProforma) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTipoProformaProforma);}

			this.isVisibilidadFK_IdTipoViaTransporte=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdTipoViaTransporte) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTipoViaTransporteProforma);}

			this.isVisibilidadFK_IdTransporte=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTransporteProforma);}

			this.isVisibilidadFK_IdVendedor=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdVendedorProforma);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoPrecio(Boolean isParaTipoPrecio){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoPrecioNegation=!isParaTipoPrecio;

			this.isVisibilidadFK_IdCentroCosto=isParaTipoPrecioNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdCentroCostoProforma);}

			this.isVisibilidadFK_IdCliente=isParaTipoPrecioNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdClienteProforma);}

			this.isVisibilidadFK_IdConsignatario=isParaTipoPrecioNegation;
			if(!this.isVisibilidadFK_IdConsignatario) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdConsignatarioProforma);}

			this.isVisibilidadFK_IdEmpleado=isParaTipoPrecioNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdEmpleadoProforma);}

			this.isVisibilidadFK_IdEstadoProforma=isParaTipoPrecioNegation;
			if(!this.isVisibilidadFK_IdEstadoProforma) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdEstadoProformaProforma);}

			this.isVisibilidadFK_IdFormato=isParaTipoPrecioNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdFormatoProforma);}

			this.isVisibilidadFK_IdRutaTransporte=isParaTipoPrecioNegation;
			if(!this.isVisibilidadFK_IdRutaTransporte) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdRutaTransporteProforma);}

			this.isVisibilidadFK_IdSubCliente=isParaTipoPrecioNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdSubClienteProforma);}

			this.isVisibilidadFK_IdTipoCambio=isParaTipoPrecioNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTipoCambioProforma);}

			this.isVisibilidadFK_IdTipoPrecio=isParaTipoPrecio;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTipoPrecioProforma);}

			this.isVisibilidadFK_IdTipoProforma=isParaTipoPrecioNegation;
			if(!this.isVisibilidadFK_IdTipoProforma) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTipoProformaProforma);}

			this.isVisibilidadFK_IdTipoViaTransporte=isParaTipoPrecioNegation;
			if(!this.isVisibilidadFK_IdTipoViaTransporte) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTipoViaTransporteProforma);}

			this.isVisibilidadFK_IdTransporte=isParaTipoPrecioNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTransporteProforma);}

			this.isVisibilidadFK_IdVendedor=isParaTipoPrecioNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdVendedorProforma);}
		}
		
	}

	public void setVisibilidadBusquedasParaVendedor(Boolean isParaVendedor){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaVendedorNegation=!isParaVendedor;

			this.isVisibilidadFK_IdCentroCosto=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdCentroCostoProforma);}

			this.isVisibilidadFK_IdCliente=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdClienteProforma);}

			this.isVisibilidadFK_IdConsignatario=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdConsignatario) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdConsignatarioProforma);}

			this.isVisibilidadFK_IdEmpleado=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdEmpleadoProforma);}

			this.isVisibilidadFK_IdEstadoProforma=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdEstadoProforma) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdEstadoProformaProforma);}

			this.isVisibilidadFK_IdFormato=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdFormatoProforma);}

			this.isVisibilidadFK_IdRutaTransporte=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdRutaTransporte) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdRutaTransporteProforma);}

			this.isVisibilidadFK_IdSubCliente=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdSubClienteProforma);}

			this.isVisibilidadFK_IdTipoCambio=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTipoCambioProforma);}

			this.isVisibilidadFK_IdTipoPrecio=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTipoPrecioProforma);}

			this.isVisibilidadFK_IdTipoProforma=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdTipoProforma) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTipoProformaProforma);}

			this.isVisibilidadFK_IdTipoViaTransporte=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdTipoViaTransporte) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTipoViaTransporteProforma);}

			this.isVisibilidadFK_IdTransporte=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTransporteProforma);}

			this.isVisibilidadFK_IdVendedor=isParaVendedor;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdVendedorProforma);}
		}
		
	}

	public void setVisibilidadBusquedasParaSubCliente(Boolean isParaSubCliente){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaSubClienteNegation=!isParaSubCliente;

			this.isVisibilidadFK_IdCentroCosto=isParaSubClienteNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdCentroCostoProforma);}

			this.isVisibilidadFK_IdCliente=isParaSubClienteNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdClienteProforma);}

			this.isVisibilidadFK_IdConsignatario=isParaSubClienteNegation;
			if(!this.isVisibilidadFK_IdConsignatario) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdConsignatarioProforma);}

			this.isVisibilidadFK_IdEmpleado=isParaSubClienteNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdEmpleadoProforma);}

			this.isVisibilidadFK_IdEstadoProforma=isParaSubClienteNegation;
			if(!this.isVisibilidadFK_IdEstadoProforma) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdEstadoProformaProforma);}

			this.isVisibilidadFK_IdFormato=isParaSubClienteNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdFormatoProforma);}

			this.isVisibilidadFK_IdRutaTransporte=isParaSubClienteNegation;
			if(!this.isVisibilidadFK_IdRutaTransporte) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdRutaTransporteProforma);}

			this.isVisibilidadFK_IdSubCliente=isParaSubCliente;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdSubClienteProforma);}

			this.isVisibilidadFK_IdTipoCambio=isParaSubClienteNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTipoCambioProforma);}

			this.isVisibilidadFK_IdTipoPrecio=isParaSubClienteNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTipoPrecioProforma);}

			this.isVisibilidadFK_IdTipoProforma=isParaSubClienteNegation;
			if(!this.isVisibilidadFK_IdTipoProforma) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTipoProformaProforma);}

			this.isVisibilidadFK_IdTipoViaTransporte=isParaSubClienteNegation;
			if(!this.isVisibilidadFK_IdTipoViaTransporte) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTipoViaTransporteProforma);}

			this.isVisibilidadFK_IdTransporte=isParaSubClienteNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTransporteProforma);}

			this.isVisibilidadFK_IdVendedor=isParaSubClienteNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdVendedorProforma);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoViaTransporte(Boolean isParaTipoViaTransporte){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoViaTransporteNegation=!isParaTipoViaTransporte;

			this.isVisibilidadFK_IdCentroCosto=isParaTipoViaTransporteNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdCentroCostoProforma);}

			this.isVisibilidadFK_IdCliente=isParaTipoViaTransporteNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdClienteProforma);}

			this.isVisibilidadFK_IdConsignatario=isParaTipoViaTransporteNegation;
			if(!this.isVisibilidadFK_IdConsignatario) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdConsignatarioProforma);}

			this.isVisibilidadFK_IdEmpleado=isParaTipoViaTransporteNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdEmpleadoProforma);}

			this.isVisibilidadFK_IdEstadoProforma=isParaTipoViaTransporteNegation;
			if(!this.isVisibilidadFK_IdEstadoProforma) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdEstadoProformaProforma);}

			this.isVisibilidadFK_IdFormato=isParaTipoViaTransporteNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdFormatoProforma);}

			this.isVisibilidadFK_IdRutaTransporte=isParaTipoViaTransporteNegation;
			if(!this.isVisibilidadFK_IdRutaTransporte) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdRutaTransporteProforma);}

			this.isVisibilidadFK_IdSubCliente=isParaTipoViaTransporteNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdSubClienteProforma);}

			this.isVisibilidadFK_IdTipoCambio=isParaTipoViaTransporteNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTipoCambioProforma);}

			this.isVisibilidadFK_IdTipoPrecio=isParaTipoViaTransporteNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTipoPrecioProforma);}

			this.isVisibilidadFK_IdTipoProforma=isParaTipoViaTransporteNegation;
			if(!this.isVisibilidadFK_IdTipoProforma) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTipoProformaProforma);}

			this.isVisibilidadFK_IdTipoViaTransporte=isParaTipoViaTransporte;
			if(!this.isVisibilidadFK_IdTipoViaTransporte) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTipoViaTransporteProforma);}

			this.isVisibilidadFK_IdTransporte=isParaTipoViaTransporteNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTransporteProforma);}

			this.isVisibilidadFK_IdVendedor=isParaTipoViaTransporteNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdVendedorProforma);}
		}
		
	}

	public void setVisibilidadBusquedasParaTransporte(Boolean isParaTransporte){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTransporteNegation=!isParaTransporte;

			this.isVisibilidadFK_IdCentroCosto=isParaTransporteNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdCentroCostoProforma);}

			this.isVisibilidadFK_IdCliente=isParaTransporteNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdClienteProforma);}

			this.isVisibilidadFK_IdConsignatario=isParaTransporteNegation;
			if(!this.isVisibilidadFK_IdConsignatario) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdConsignatarioProforma);}

			this.isVisibilidadFK_IdEmpleado=isParaTransporteNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdEmpleadoProforma);}

			this.isVisibilidadFK_IdEstadoProforma=isParaTransporteNegation;
			if(!this.isVisibilidadFK_IdEstadoProforma) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdEstadoProformaProforma);}

			this.isVisibilidadFK_IdFormato=isParaTransporteNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdFormatoProforma);}

			this.isVisibilidadFK_IdRutaTransporte=isParaTransporteNegation;
			if(!this.isVisibilidadFK_IdRutaTransporte) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdRutaTransporteProforma);}

			this.isVisibilidadFK_IdSubCliente=isParaTransporteNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdSubClienteProforma);}

			this.isVisibilidadFK_IdTipoCambio=isParaTransporteNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTipoCambioProforma);}

			this.isVisibilidadFK_IdTipoPrecio=isParaTransporteNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTipoPrecioProforma);}

			this.isVisibilidadFK_IdTipoProforma=isParaTransporteNegation;
			if(!this.isVisibilidadFK_IdTipoProforma) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTipoProformaProforma);}

			this.isVisibilidadFK_IdTipoViaTransporte=isParaTransporteNegation;
			if(!this.isVisibilidadFK_IdTipoViaTransporte) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTipoViaTransporteProforma);}

			this.isVisibilidadFK_IdTransporte=isParaTransporte;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTransporteProforma);}

			this.isVisibilidadFK_IdVendedor=isParaTransporteNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdVendedorProforma);}
		}
		
	}

	public void setVisibilidadBusquedasParaRutaTransporte(Boolean isParaRutaTransporte){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaRutaTransporteNegation=!isParaRutaTransporte;

			this.isVisibilidadFK_IdCentroCosto=isParaRutaTransporteNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdCentroCostoProforma);}

			this.isVisibilidadFK_IdCliente=isParaRutaTransporteNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdClienteProforma);}

			this.isVisibilidadFK_IdConsignatario=isParaRutaTransporteNegation;
			if(!this.isVisibilidadFK_IdConsignatario) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdConsignatarioProforma);}

			this.isVisibilidadFK_IdEmpleado=isParaRutaTransporteNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdEmpleadoProforma);}

			this.isVisibilidadFK_IdEstadoProforma=isParaRutaTransporteNegation;
			if(!this.isVisibilidadFK_IdEstadoProforma) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdEstadoProformaProforma);}

			this.isVisibilidadFK_IdFormato=isParaRutaTransporteNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdFormatoProforma);}

			this.isVisibilidadFK_IdRutaTransporte=isParaRutaTransporte;
			if(!this.isVisibilidadFK_IdRutaTransporte) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdRutaTransporteProforma);}

			this.isVisibilidadFK_IdSubCliente=isParaRutaTransporteNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdSubClienteProforma);}

			this.isVisibilidadFK_IdTipoCambio=isParaRutaTransporteNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTipoCambioProforma);}

			this.isVisibilidadFK_IdTipoPrecio=isParaRutaTransporteNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTipoPrecioProforma);}

			this.isVisibilidadFK_IdTipoProforma=isParaRutaTransporteNegation;
			if(!this.isVisibilidadFK_IdTipoProforma) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTipoProformaProforma);}

			this.isVisibilidadFK_IdTipoViaTransporte=isParaRutaTransporteNegation;
			if(!this.isVisibilidadFK_IdTipoViaTransporte) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTipoViaTransporteProforma);}

			this.isVisibilidadFK_IdTransporte=isParaRutaTransporteNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTransporteProforma);}

			this.isVisibilidadFK_IdVendedor=isParaRutaTransporteNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdVendedorProforma);}
		}
		
	}

	public void setVisibilidadBusquedasParaCentroCosto(Boolean isParaCentroCosto){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCentroCostoNegation=!isParaCentroCosto;

			this.isVisibilidadFK_IdCentroCosto=isParaCentroCosto;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdCentroCostoProforma);}

			this.isVisibilidadFK_IdCliente=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdClienteProforma);}

			this.isVisibilidadFK_IdConsignatario=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdConsignatario) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdConsignatarioProforma);}

			this.isVisibilidadFK_IdEmpleado=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdEmpleadoProforma);}

			this.isVisibilidadFK_IdEstadoProforma=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdEstadoProforma) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdEstadoProformaProforma);}

			this.isVisibilidadFK_IdFormato=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdFormatoProforma);}

			this.isVisibilidadFK_IdRutaTransporte=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdRutaTransporte) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdRutaTransporteProforma);}

			this.isVisibilidadFK_IdSubCliente=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdSubClienteProforma);}

			this.isVisibilidadFK_IdTipoCambio=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTipoCambioProforma);}

			this.isVisibilidadFK_IdTipoPrecio=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTipoPrecioProforma);}

			this.isVisibilidadFK_IdTipoProforma=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdTipoProforma) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTipoProformaProforma);}

			this.isVisibilidadFK_IdTipoViaTransporte=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdTipoViaTransporte) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTipoViaTransporteProforma);}

			this.isVisibilidadFK_IdTransporte=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTransporteProforma);}

			this.isVisibilidadFK_IdVendedor=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdVendedorProforma);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoProforma(Boolean isParaTipoProforma){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoProformaNegation=!isParaTipoProforma;

			this.isVisibilidadFK_IdCentroCosto=isParaTipoProformaNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdCentroCostoProforma);}

			this.isVisibilidadFK_IdCliente=isParaTipoProformaNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdClienteProforma);}

			this.isVisibilidadFK_IdConsignatario=isParaTipoProformaNegation;
			if(!this.isVisibilidadFK_IdConsignatario) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdConsignatarioProforma);}

			this.isVisibilidadFK_IdEmpleado=isParaTipoProformaNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdEmpleadoProforma);}

			this.isVisibilidadFK_IdEstadoProforma=isParaTipoProformaNegation;
			if(!this.isVisibilidadFK_IdEstadoProforma) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdEstadoProformaProforma);}

			this.isVisibilidadFK_IdFormato=isParaTipoProformaNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdFormatoProforma);}

			this.isVisibilidadFK_IdRutaTransporte=isParaTipoProformaNegation;
			if(!this.isVisibilidadFK_IdRutaTransporte) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdRutaTransporteProforma);}

			this.isVisibilidadFK_IdSubCliente=isParaTipoProformaNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdSubClienteProforma);}

			this.isVisibilidadFK_IdTipoCambio=isParaTipoProformaNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTipoCambioProforma);}

			this.isVisibilidadFK_IdTipoPrecio=isParaTipoProformaNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTipoPrecioProforma);}

			this.isVisibilidadFK_IdTipoProforma=isParaTipoProforma;
			if(!this.isVisibilidadFK_IdTipoProforma) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTipoProformaProforma);}

			this.isVisibilidadFK_IdTipoViaTransporte=isParaTipoProformaNegation;
			if(!this.isVisibilidadFK_IdTipoViaTransporte) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTipoViaTransporteProforma);}

			this.isVisibilidadFK_IdTransporte=isParaTipoProformaNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTransporteProforma);}

			this.isVisibilidadFK_IdVendedor=isParaTipoProformaNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdVendedorProforma);}
		}
		
	}

	public void setVisibilidadBusquedasParaConsignatario(Boolean isParaConsignatario){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaConsignatarioNegation=!isParaConsignatario;

			this.isVisibilidadFK_IdCentroCosto=isParaConsignatarioNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdCentroCostoProforma);}

			this.isVisibilidadFK_IdCliente=isParaConsignatarioNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdClienteProforma);}

			this.isVisibilidadFK_IdConsignatario=isParaConsignatario;
			if(!this.isVisibilidadFK_IdConsignatario) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdConsignatarioProforma);}

			this.isVisibilidadFK_IdEmpleado=isParaConsignatarioNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdEmpleadoProforma);}

			this.isVisibilidadFK_IdEstadoProforma=isParaConsignatarioNegation;
			if(!this.isVisibilidadFK_IdEstadoProforma) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdEstadoProformaProforma);}

			this.isVisibilidadFK_IdFormato=isParaConsignatarioNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdFormatoProforma);}

			this.isVisibilidadFK_IdRutaTransporte=isParaConsignatarioNegation;
			if(!this.isVisibilidadFK_IdRutaTransporte) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdRutaTransporteProforma);}

			this.isVisibilidadFK_IdSubCliente=isParaConsignatarioNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdSubClienteProforma);}

			this.isVisibilidadFK_IdTipoCambio=isParaConsignatarioNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTipoCambioProforma);}

			this.isVisibilidadFK_IdTipoPrecio=isParaConsignatarioNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTipoPrecioProforma);}

			this.isVisibilidadFK_IdTipoProforma=isParaConsignatarioNegation;
			if(!this.isVisibilidadFK_IdTipoProforma) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTipoProformaProforma);}

			this.isVisibilidadFK_IdTipoViaTransporte=isParaConsignatarioNegation;
			if(!this.isVisibilidadFK_IdTipoViaTransporte) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTipoViaTransporteProforma);}

			this.isVisibilidadFK_IdTransporte=isParaConsignatarioNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTransporteProforma);}

			this.isVisibilidadFK_IdVendedor=isParaConsignatarioNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdVendedorProforma);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoCambio(Boolean isParaTipoCambio){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoCambioNegation=!isParaTipoCambio;

			this.isVisibilidadFK_IdCentroCosto=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdCentroCostoProforma);}

			this.isVisibilidadFK_IdCliente=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdClienteProforma);}

			this.isVisibilidadFK_IdConsignatario=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdConsignatario) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdConsignatarioProforma);}

			this.isVisibilidadFK_IdEmpleado=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdEmpleadoProforma);}

			this.isVisibilidadFK_IdEstadoProforma=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdEstadoProforma) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdEstadoProformaProforma);}

			this.isVisibilidadFK_IdFormato=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdFormatoProforma);}

			this.isVisibilidadFK_IdRutaTransporte=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdRutaTransporte) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdRutaTransporteProforma);}

			this.isVisibilidadFK_IdSubCliente=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdSubClienteProforma);}

			this.isVisibilidadFK_IdTipoCambio=isParaTipoCambio;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTipoCambioProforma);}

			this.isVisibilidadFK_IdTipoPrecio=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTipoPrecioProforma);}

			this.isVisibilidadFK_IdTipoProforma=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdTipoProforma) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTipoProformaProforma);}

			this.isVisibilidadFK_IdTipoViaTransporte=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdTipoViaTransporte) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTipoViaTransporteProforma);}

			this.isVisibilidadFK_IdTransporte=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdTransporteProforma);}

			this.isVisibilidadFK_IdVendedor=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasProforma.remove(jPanelFK_IdVendedorProforma);}
		}
		
	}
	
	

	public String registrarSesionProformaParaTerminoProformas() throws Exception {
		Boolean isPaginaPopupTerminoProforma=false;

		try {

			if(this.proformaSessionBean==null) {
				this.proformaSessionBean=new ProformaSessionBean();
			}

			if(this.jInternalFrameDetalleFormProforma.terminoproformaSessionBean==null) {
				this.jInternalFrameDetalleFormProforma.terminoproformaSessionBean=new TerminoProformaSessionBean();
			}

			this.jInternalFrameDetalleFormProforma.terminoproformaSessionBean.setsPathNavegacionActual(proformaSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+TerminoProformaConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormProforma.terminoproformaSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupTerminoProforma=this.jInternalFrameDetalleFormProforma.terminoproformaSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormProforma.terminoproformaSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeTerminoProforma(true);
			this.jInternalFrameDetalleFormProforma.terminoproformaSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeTerminoProforma(ProformaConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormProforma.terminoproformaSessionBean.setisBusquedaDesdeForeignKeySesionProforma(true);
			this.jInternalFrameDetalleFormProforma.terminoproformaSessionBean.setlidProformaActual(this.idProformaActual);
			this.jInternalFrameDetalleFormProforma.terminoproformaSessionBean.setNoMantenimiento(true);

			proformaSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyProforma(true);
			proformaSessionBean.setlIdProformaActualForeignKey(this.idProformaActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionProformaParaDetalleProformas() throws Exception {
		Boolean isPaginaPopupDetalleProforma=false;

		try {

			if(this.proformaSessionBean==null) {
				this.proformaSessionBean=new ProformaSessionBean();
			}

			if(this.jInternalFrameDetalleFormProforma.detalleproformaSessionBean==null) {
				this.jInternalFrameDetalleFormProforma.detalleproformaSessionBean=new DetalleProformaSessionBean();
			}

			this.jInternalFrameDetalleFormProforma.detalleproformaSessionBean.setsPathNavegacionActual(proformaSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+DetalleProformaConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormProforma.detalleproformaSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupDetalleProforma=this.jInternalFrameDetalleFormProforma.detalleproformaSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormProforma.detalleproformaSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeDetalleProforma(true);
			this.jInternalFrameDetalleFormProforma.detalleproformaSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeDetalleProforma(ProformaConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormProforma.detalleproformaSessionBean.setisBusquedaDesdeForeignKeySesionProforma(true);
			this.jInternalFrameDetalleFormProforma.detalleproformaSessionBean.setlidProformaActual(this.idProformaActual);
			this.jInternalFrameDetalleFormProforma.detalleproformaSessionBean.setNoMantenimiento(true);

			proformaSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyProforma(true);
			proformaSessionBean.setlIdProformaActualForeignKey(this.idProformaActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}
	
	

	public String registrarSesionProformaParaBusquedaEmpleados() throws Exception {
		Boolean isPaginaPopupEmpleado=false;

		try {

			if(proformaSessionBean==null) {
				proformaSessionBean=new ProformaSessionBean();
			}

			if(empleadoSessionBean==null) {
				empleadoSessionBean=new EmpleadoSessionBean();
			}

			empleadoSessionBean.setsPathNavegacionActual(proformaSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+EmpleadoConstantesFunciones.SCLASSWEBTITULO);
			empleadoSessionBean.setisPermiteRecargarInformacion(false);
			empleadoSessionBean.setisPaginaPopup(true);
			isPaginaPopupEmpleado=empleadoSessionBean.getisPaginaPopup();
			empleadoSessionBean.setisPaginaPopup(false);
			empleadoSessionBean.setEstaModoBusqueda(true);
			empleadoSessionBean.setsFuncionBusquedaRapida("window.opener.proformaFuncionGeneral.setCombosCodigoDesdeBusquedaid_empleado(TO_REPLACE);");
			empleadoSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeEmpleado(true);
			empleadoSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeEmpleado(ProformaConstantesFunciones.SNOMBREOPCION);
			//empleadoSessionBean.setisBusquedaDesdeForeignKeySesionProforma(true);
			//empleadoSessionBean.setlidProformaActual(this.idProformaActual);

			proformaSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyProforma(true);
			proformaSessionBean.setlIdProformaActualForeignKey(this.idProformaActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}

	public String registrarSesionProformaParaBusquedaClientes() throws Exception {
		Boolean isPaginaPopupCliente=false;

		try {

			if(proformaSessionBean==null) {
				proformaSessionBean=new ProformaSessionBean();
			}

			if(clienteSessionBean==null) {
				clienteSessionBean=new ClienteSessionBean();
			}

			clienteSessionBean.setsPathNavegacionActual(proformaSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+ClienteConstantesFunciones.SCLASSWEBTITULO);
			clienteSessionBean.setisPermiteRecargarInformacion(false);
			clienteSessionBean.setisPaginaPopup(true);
			isPaginaPopupCliente=clienteSessionBean.getisPaginaPopup();
			clienteSessionBean.setisPaginaPopup(false);
			clienteSessionBean.setEstaModoBusqueda(true);
			clienteSessionBean.setsFuncionBusquedaRapida("window.opener.proformaFuncionGeneral.setCombosCodigoDesdeBusquedaid_cliente(TO_REPLACE);");
			clienteSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeCliente(true);
			clienteSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeCliente(ProformaConstantesFunciones.SNOMBREOPCION);
			//clienteSessionBean.setisBusquedaDesdeForeignKeySesionProforma(true);
			//clienteSessionBean.setlidProformaActual(this.idProformaActual);

			proformaSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyProforma(true);
			proformaSessionBean.setlIdProformaActualForeignKey(this.idProformaActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}

	public String registrarSesionProformaParaBusquedaVendedores() throws Exception {
		Boolean isPaginaPopupVendedor=false;

		try {

			if(proformaSessionBean==null) {
				proformaSessionBean=new ProformaSessionBean();
			}

			if(vendedorSessionBean==null) {
				vendedorSessionBean=new VendedorSessionBean();
			}

			vendedorSessionBean.setsPathNavegacionActual(proformaSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+VendedorConstantesFunciones.SCLASSWEBTITULO);
			vendedorSessionBean.setisPermiteRecargarInformacion(false);
			vendedorSessionBean.setisPaginaPopup(true);
			isPaginaPopupVendedor=vendedorSessionBean.getisPaginaPopup();
			vendedorSessionBean.setisPaginaPopup(false);
			vendedorSessionBean.setEstaModoBusqueda(true);
			vendedorSessionBean.setsFuncionBusquedaRapida("window.opener.proformaFuncionGeneral.setCombosCodigoDesdeBusquedaid_vendedor(TO_REPLACE);");
			vendedorSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeVendedor(true);
			vendedorSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeVendedor(ProformaConstantesFunciones.SNOMBREOPCION);
			//vendedorSessionBean.setisBusquedaDesdeForeignKeySesionProforma(true);
			//vendedorSessionBean.setlidProformaActual(this.idProformaActual);

			proformaSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyProforma(true);
			proformaSessionBean.setlIdProformaActualForeignKey(this.idProformaActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}

	public String registrarSesionProformaParaBusquedaCentroCostos() throws Exception {
		Boolean isPaginaPopupCentroCosto=false;

		try {

			if(proformaSessionBean==null) {
				proformaSessionBean=new ProformaSessionBean();
			}

			if(centrocostoSessionBean==null) {
				centrocostoSessionBean=new CentroCostoSessionBean();
			}

			centrocostoSessionBean.setsPathNavegacionActual(proformaSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+CentroCostoConstantesFunciones.SCLASSWEBTITULO);
			centrocostoSessionBean.setisPermiteRecargarInformacion(false);
			centrocostoSessionBean.setisPaginaPopup(true);
			isPaginaPopupCentroCosto=centrocostoSessionBean.getisPaginaPopup();
			centrocostoSessionBean.setisPaginaPopup(false);
			centrocostoSessionBean.setEstaModoBusqueda(true);
			centrocostoSessionBean.setsFuncionBusquedaRapida("window.opener.proformaFuncionGeneral.setCombosCodigoDesdeBusquedaid_centro_costo(TO_REPLACE);");
			centrocostoSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeCentroCosto(true);
			centrocostoSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeCentroCosto(ProformaConstantesFunciones.SNOMBREOPCION);
			//centrocostoSessionBean.setisBusquedaDesdeForeignKeySesionProforma(true);
			//centrocostoSessionBean.setlidProformaActual(this.idProformaActual);

			proformaSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyProforma(true);
			proformaSessionBean.setlIdProformaActualForeignKey(this.idProformaActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}

	public String registrarSesionProformaParaBusquedaTipoCambios() throws Exception {
		Boolean isPaginaPopupTipoCambio=false;

		try {

			if(proformaSessionBean==null) {
				proformaSessionBean=new ProformaSessionBean();
			}

			if(tipocambioSessionBean==null) {
				tipocambioSessionBean=new TipoCambioSessionBean();
			}

			tipocambioSessionBean.setsPathNavegacionActual(proformaSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+TipoCambioConstantesFunciones.SCLASSWEBTITULO);
			tipocambioSessionBean.setisPermiteRecargarInformacion(false);
			tipocambioSessionBean.setisPaginaPopup(true);
			isPaginaPopupTipoCambio=tipocambioSessionBean.getisPaginaPopup();
			tipocambioSessionBean.setisPaginaPopup(false);
			tipocambioSessionBean.setEstaModoBusqueda(true);
			tipocambioSessionBean.setsFuncionBusquedaRapida("window.opener.proformaFuncionGeneral.setCombosCodigoDesdeBusquedaid_tipo_cambio(TO_REPLACE);");
			tipocambioSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeTipoCambio(true);
			tipocambioSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeTipoCambio(ProformaConstantesFunciones.SNOMBREOPCION);
			//tipocambioSessionBean.setisBusquedaDesdeForeignKeySesionProforma(true);
			//tipocambioSessionBean.setlidProformaActual(this.idProformaActual);

			proformaSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyProforma(true);
			proformaSessionBean.setlIdProformaActualForeignKey(this.idProformaActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}
	
	
	public void guardarDatosBusquedaSession() throws Exception {
		
		//ProformaSessionBean proformaSessionBean=new ProformaSessionBean();
		
		if(this.proformaSessionBean==null) {
			this.proformaSessionBean=new ProformaSessionBean();
		}
		
		this.proformaSessionBean.setsUltimaBusquedaProforma(this.getsAccionBusqueda());
		this.proformaSessionBean.setiNumeroPaginacion(this.getiNumeroPaginacion());
		this.proformaSessionBean.setiNumeroPaginacionPagina(this.getiNumeroPaginacionPagina());
		
		if(this.getsAccionBusqueda().equals("Todos")) {
			;
		}
		

		else if(this.getsAccionBusqueda().equals("FK_IdCentroCosto")) {
			proformaSessionBean.setid_centro_costo(this.getid_centro_costoFK_IdCentroCosto());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdCliente")) {
			proformaSessionBean.setid_cliente(this.getid_clienteFK_IdCliente());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdConsignatario")) {
			proformaSessionBean.setid_consignatario(this.getid_consignatarioFK_IdConsignatario());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEjercicio")) {
			proformaSessionBean.setid_ejercicio(this.getid_ejercicioFK_IdEjercicio());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEmpleado")) {
			proformaSessionBean.setid_empleado(this.getid_empleadoFK_IdEmpleado());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
			proformaSessionBean.setid_empresa(this.getid_empresaFK_IdEmpresa());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEstadoProforma")) {
			proformaSessionBean.setid_estado_proforma(this.getid_estado_proformaFK_IdEstadoProforma());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdFormato")) {
			proformaSessionBean.setid_formato(this.getid_formatoFK_IdFormato());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdMoneda")) {
			proformaSessionBean.setid_moneda(this.getid_monedaFK_IdMoneda());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdPeriodo")) {
			proformaSessionBean.setid_periodo(this.getid_periodoFK_IdPeriodo());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdRutaTransporte")) {
			proformaSessionBean.setid_ruta_transporte(this.getid_ruta_transporteFK_IdRutaTransporte());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdSubCliente")) {
			proformaSessionBean.setid_sub_cliente(this.getid_sub_clienteFK_IdSubCliente());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
			proformaSessionBean.setid_sucursal(this.getid_sucursalFK_IdSucursal());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoCambio")) {
			proformaSessionBean.setid_tipo_cambio(this.getid_tipo_cambioFK_IdTipoCambio());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoPrecio")) {
			proformaSessionBean.setid_tipo_precio(this.getid_tipo_precioFK_IdTipoPrecio());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoProforma")) {
			proformaSessionBean.setid_tipo_proforma(this.getid_tipo_proformaFK_IdTipoProforma());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoViaTransporte")) {
			proformaSessionBean.setid_tipo_via_transporte(this.getid_tipo_via_transporteFK_IdTipoViaTransporte());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTransporte")) {
			proformaSessionBean.setid_transporte(this.getid_transporteFK_IdTransporte());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdUsuario")) {
			proformaSessionBean.setid_usuario(this.getid_usuarioFK_IdUsuario());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdVendedor")) {
			proformaSessionBean.setid_vendedor(this.getid_vendedorFK_IdVendedor());	
		}
		
	}
	
	public void traerDatosBusquedaDesdeSession() throws Exception {
		//ProformaSessionBean proformaSessionBean=new ProformaSessionBean();
		
		if(this.proformaSessionBean==null) {
			this.proformaSessionBean=new ProformaSessionBean();
		}
		
		if(this.proformaSessionBean.getsUltimaBusquedaProforma()!=null&&!this.proformaSessionBean.getsUltimaBusquedaProforma().equals("")) {
			this.setsAccionBusqueda(proformaSessionBean.getsUltimaBusquedaProforma());
			this.setiNumeroPaginacion(proformaSessionBean.getiNumeroPaginacion());
			this.setiNumeroPaginacionPagina(proformaSessionBean.getiNumeroPaginacionPagina());		
				
			if(this.getsAccionBusqueda().equals("Todos")) {
				;
			}
			

			 else if(this.getsAccionBusqueda().equals("FK_IdCentroCosto")) {
				this.setid_centro_costoFK_IdCentroCosto(proformaSessionBean.getid_centro_costo());
				proformaSessionBean.setid_centro_costo(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdCliente")) {
				this.setid_clienteFK_IdCliente(proformaSessionBean.getid_cliente());
				proformaSessionBean.setid_cliente(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdConsignatario")) {
				this.setid_consignatarioFK_IdConsignatario(proformaSessionBean.getid_consignatario());
				proformaSessionBean.setid_consignatario(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEjercicio")) {
				this.setid_ejercicioFK_IdEjercicio(proformaSessionBean.getid_ejercicio());
				proformaSessionBean.setid_ejercicio(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEmpleado")) {
				this.setid_empleadoFK_IdEmpleado(proformaSessionBean.getid_empleado());
				proformaSessionBean.setid_empleado(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
				this.setid_empresaFK_IdEmpresa(proformaSessionBean.getid_empresa());
				proformaSessionBean.setid_empresa(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEstadoProforma")) {
				this.setid_estado_proformaFK_IdEstadoProforma(proformaSessionBean.getid_estado_proforma());
				proformaSessionBean.setid_estado_proforma(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdFormato")) {
				this.setid_formatoFK_IdFormato(proformaSessionBean.getid_formato());
				proformaSessionBean.setid_formato(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdMoneda")) {
				this.setid_monedaFK_IdMoneda(proformaSessionBean.getid_moneda());
				proformaSessionBean.setid_moneda(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdPeriodo")) {
				this.setid_periodoFK_IdPeriodo(proformaSessionBean.getid_periodo());
				proformaSessionBean.setid_periodo(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdRutaTransporte")) {
				this.setid_ruta_transporteFK_IdRutaTransporte(proformaSessionBean.getid_ruta_transporte());
				proformaSessionBean.setid_ruta_transporte(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdSubCliente")) {
				this.setid_sub_clienteFK_IdSubCliente(proformaSessionBean.getid_sub_cliente());
				proformaSessionBean.setid_sub_cliente(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
				this.setid_sucursalFK_IdSucursal(proformaSessionBean.getid_sucursal());
				proformaSessionBean.setid_sucursal(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoCambio")) {
				this.setid_tipo_cambioFK_IdTipoCambio(proformaSessionBean.getid_tipo_cambio());
				proformaSessionBean.setid_tipo_cambio(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoPrecio")) {
				this.setid_tipo_precioFK_IdTipoPrecio(proformaSessionBean.getid_tipo_precio());
				proformaSessionBean.setid_tipo_precio(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoProforma")) {
				this.setid_tipo_proformaFK_IdTipoProforma(proformaSessionBean.getid_tipo_proforma());
				proformaSessionBean.setid_tipo_proforma(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoViaTransporte")) {
				this.setid_tipo_via_transporteFK_IdTipoViaTransporte(proformaSessionBean.getid_tipo_via_transporte());
				proformaSessionBean.setid_tipo_via_transporte(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTransporte")) {
				this.setid_transporteFK_IdTransporte(proformaSessionBean.getid_transporte());
				proformaSessionBean.setid_transporte(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdUsuario")) {
				this.setid_usuarioFK_IdUsuario(proformaSessionBean.getid_usuario());
				proformaSessionBean.setid_usuario(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdVendedor")) {
				this.setid_vendedorFK_IdVendedor(proformaSessionBean.getid_vendedor());
				proformaSessionBean.setid_vendedor(null);
			}
		}
		
		this.proformaSessionBean.setsUltimaBusquedaProforma("");
		this.proformaSessionBean.setiNumeroPaginacion(ProformaConstantesFunciones.INUMEROPAGINACION);
		this.proformaSessionBean.setiNumeroPaginacionPagina(0);
		
	}
	
	public void procesoActualizarFilaTotales(Boolean esCampoValor,String sTipo) {
		try {
			this.actualizarFilaTotales();
				
			this.traerValoresTablaTotales();
			
			this.inicializarActualizarBindingTablaProforma(false);
			
			
			
			
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	
	public void updateBusquedasFormularioProforma() {
		this.updateBorderResaltarBusquedasFormularioProforma();
		this.updateVisibilidadBusquedasFormularioProforma();
		this.updateHabilitarBusquedasFormularioProforma();
	}
	
	public void updateBorderResaltarBusquedasFormularioProforma() {					
	//BYDAN_BUSQUEDAS
		
	int index=0;
		
	if(this.jTabbedPaneBusquedasProforma.getComponents().length>0) {
	

		if(this.proformaConstantesFunciones.resaltarFK_IdCentroCostoProforma!=null) {
			index= this.jTabbedPaneBusquedasProforma.indexOfComponent(this.jPanelFK_IdCentroCostoProforma);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasProforma.getComponent(index);
				jPanel.setBorder(this.proformaConstantesFunciones.resaltarFK_IdCentroCostoProforma);
			}
		}

		if(this.proformaConstantesFunciones.resaltarFK_IdClienteProforma!=null) {
			index= this.jTabbedPaneBusquedasProforma.indexOfComponent(this.jPanelFK_IdClienteProforma);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasProforma.getComponent(index);
				jPanel.setBorder(this.proformaConstantesFunciones.resaltarFK_IdClienteProforma);
			}
		}

		if(this.proformaConstantesFunciones.resaltarFK_IdConsignatarioProforma!=null) {
			index= this.jTabbedPaneBusquedasProforma.indexOfComponent(this.jPanelFK_IdConsignatarioProforma);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasProforma.getComponent(index);
				jPanel.setBorder(this.proformaConstantesFunciones.resaltarFK_IdConsignatarioProforma);
			}
		}

		if(this.proformaConstantesFunciones.resaltarFK_IdEmpleadoProforma!=null) {
			index= this.jTabbedPaneBusquedasProforma.indexOfComponent(this.jPanelFK_IdEmpleadoProforma);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasProforma.getComponent(index);
				jPanel.setBorder(this.proformaConstantesFunciones.resaltarFK_IdEmpleadoProforma);
			}
		}

		if(this.proformaConstantesFunciones.resaltarFK_IdEstadoProformaProforma!=null) {
			index= this.jTabbedPaneBusquedasProforma.indexOfComponent(this.jPanelFK_IdEstadoProformaProforma);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasProforma.getComponent(index);
				jPanel.setBorder(this.proformaConstantesFunciones.resaltarFK_IdEstadoProformaProforma);
			}
		}

		if(this.proformaConstantesFunciones.resaltarFK_IdFormatoProforma!=null) {
			index= this.jTabbedPaneBusquedasProforma.indexOfComponent(this.jPanelFK_IdFormatoProforma);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasProforma.getComponent(index);
				jPanel.setBorder(this.proformaConstantesFunciones.resaltarFK_IdFormatoProforma);
			}
		}

		if(this.proformaConstantesFunciones.resaltarFK_IdRutaTransporteProforma!=null) {
			index= this.jTabbedPaneBusquedasProforma.indexOfComponent(this.jPanelFK_IdRutaTransporteProforma);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasProforma.getComponent(index);
				jPanel.setBorder(this.proformaConstantesFunciones.resaltarFK_IdRutaTransporteProforma);
			}
		}

		if(this.proformaConstantesFunciones.resaltarFK_IdSubClienteProforma!=null) {
			index= this.jTabbedPaneBusquedasProforma.indexOfComponent(this.jPanelFK_IdSubClienteProforma);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasProforma.getComponent(index);
				jPanel.setBorder(this.proformaConstantesFunciones.resaltarFK_IdSubClienteProforma);
			}
		}

		if(this.proformaConstantesFunciones.resaltarFK_IdTipoCambioProforma!=null) {
			index= this.jTabbedPaneBusquedasProforma.indexOfComponent(this.jPanelFK_IdTipoCambioProforma);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasProforma.getComponent(index);
				jPanel.setBorder(this.proformaConstantesFunciones.resaltarFK_IdTipoCambioProforma);
			}
		}

		if(this.proformaConstantesFunciones.resaltarFK_IdTipoPrecioProforma!=null) {
			index= this.jTabbedPaneBusquedasProforma.indexOfComponent(this.jPanelFK_IdTipoPrecioProforma);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasProforma.getComponent(index);
				jPanel.setBorder(this.proformaConstantesFunciones.resaltarFK_IdTipoPrecioProforma);
			}
		}

		if(this.proformaConstantesFunciones.resaltarFK_IdTipoProformaProforma!=null) {
			index= this.jTabbedPaneBusquedasProforma.indexOfComponent(this.jPanelFK_IdTipoProformaProforma);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasProforma.getComponent(index);
				jPanel.setBorder(this.proformaConstantesFunciones.resaltarFK_IdTipoProformaProforma);
			}
		}

		if(this.proformaConstantesFunciones.resaltarFK_IdTipoViaTransporteProforma!=null) {
			index= this.jTabbedPaneBusquedasProforma.indexOfComponent(this.jPanelFK_IdTipoViaTransporteProforma);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasProforma.getComponent(index);
				jPanel.setBorder(this.proformaConstantesFunciones.resaltarFK_IdTipoViaTransporteProforma);
			}
		}

		if(this.proformaConstantesFunciones.resaltarFK_IdTransporteProforma!=null) {
			index= this.jTabbedPaneBusquedasProforma.indexOfComponent(this.jPanelFK_IdTransporteProforma);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasProforma.getComponent(index);
				jPanel.setBorder(this.proformaConstantesFunciones.resaltarFK_IdTransporteProforma);
			}
		}

		if(this.proformaConstantesFunciones.resaltarFK_IdVendedorProforma!=null) {
			index= this.jTabbedPaneBusquedasProforma.indexOfComponent(this.jPanelFK_IdVendedorProforma);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasProforma.getComponent(index);
				jPanel.setBorder(this.proformaConstantesFunciones.resaltarFK_IdVendedorProforma);
			}
		}
	}	
	
	}
	
	public void updateVisibilidadBusquedasFormularioProforma() {
	//BYDAN_BUSQUEDAS
	
	int index=0;
	JPanel jPanel=null;
		
	if(this.jTabbedPaneBusquedasProforma.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasProforma.indexOfComponent(this.jPanelFK_IdCentroCostoProforma);
			jPanel=(JPanel)this.jTabbedPaneBusquedasProforma.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.proformaConstantesFunciones.mostrarFK_IdCentroCostoProforma);
			if(!this.proformaConstantesFunciones.mostrarFK_IdCentroCostoProforma && index>-1) {
				this.jTabbedPaneBusquedasProforma.remove(index);
			}

			index= this.jTabbedPaneBusquedasProforma.indexOfComponent(this.jPanelFK_IdClienteProforma);
			jPanel=(JPanel)this.jTabbedPaneBusquedasProforma.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.proformaConstantesFunciones.mostrarFK_IdClienteProforma);
			if(!this.proformaConstantesFunciones.mostrarFK_IdClienteProforma && index>-1) {
				this.jTabbedPaneBusquedasProforma.remove(index);
			}

			index= this.jTabbedPaneBusquedasProforma.indexOfComponent(this.jPanelFK_IdConsignatarioProforma);
			jPanel=(JPanel)this.jTabbedPaneBusquedasProforma.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.proformaConstantesFunciones.mostrarFK_IdConsignatarioProforma);
			if(!this.proformaConstantesFunciones.mostrarFK_IdConsignatarioProforma && index>-1) {
				this.jTabbedPaneBusquedasProforma.remove(index);
			}

			index= this.jTabbedPaneBusquedasProforma.indexOfComponent(this.jPanelFK_IdEmpleadoProforma);
			jPanel=(JPanel)this.jTabbedPaneBusquedasProforma.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.proformaConstantesFunciones.mostrarFK_IdEmpleadoProforma);
			if(!this.proformaConstantesFunciones.mostrarFK_IdEmpleadoProforma && index>-1) {
				this.jTabbedPaneBusquedasProforma.remove(index);
			}

			index= this.jTabbedPaneBusquedasProforma.indexOfComponent(this.jPanelFK_IdEstadoProformaProforma);
			jPanel=(JPanel)this.jTabbedPaneBusquedasProforma.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.proformaConstantesFunciones.mostrarFK_IdEstadoProformaProforma);
			if(!this.proformaConstantesFunciones.mostrarFK_IdEstadoProformaProforma && index>-1) {
				this.jTabbedPaneBusquedasProforma.remove(index);
			}

			index= this.jTabbedPaneBusquedasProforma.indexOfComponent(this.jPanelFK_IdFormatoProforma);
			jPanel=(JPanel)this.jTabbedPaneBusquedasProforma.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.proformaConstantesFunciones.mostrarFK_IdFormatoProforma);
			if(!this.proformaConstantesFunciones.mostrarFK_IdFormatoProforma && index>-1) {
				this.jTabbedPaneBusquedasProforma.remove(index);
			}

			index= this.jTabbedPaneBusquedasProforma.indexOfComponent(this.jPanelFK_IdRutaTransporteProforma);
			jPanel=(JPanel)this.jTabbedPaneBusquedasProforma.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.proformaConstantesFunciones.mostrarFK_IdRutaTransporteProforma);
			if(!this.proformaConstantesFunciones.mostrarFK_IdRutaTransporteProforma && index>-1) {
				this.jTabbedPaneBusquedasProforma.remove(index);
			}

			index= this.jTabbedPaneBusquedasProforma.indexOfComponent(this.jPanelFK_IdSubClienteProforma);
			jPanel=(JPanel)this.jTabbedPaneBusquedasProforma.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.proformaConstantesFunciones.mostrarFK_IdSubClienteProforma);
			if(!this.proformaConstantesFunciones.mostrarFK_IdSubClienteProforma && index>-1) {
				this.jTabbedPaneBusquedasProforma.remove(index);
			}

			index= this.jTabbedPaneBusquedasProforma.indexOfComponent(this.jPanelFK_IdTipoCambioProforma);
			jPanel=(JPanel)this.jTabbedPaneBusquedasProforma.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.proformaConstantesFunciones.mostrarFK_IdTipoCambioProforma);
			if(!this.proformaConstantesFunciones.mostrarFK_IdTipoCambioProforma && index>-1) {
				this.jTabbedPaneBusquedasProforma.remove(index);
			}

			index= this.jTabbedPaneBusquedasProforma.indexOfComponent(this.jPanelFK_IdTipoPrecioProforma);
			jPanel=(JPanel)this.jTabbedPaneBusquedasProforma.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.proformaConstantesFunciones.mostrarFK_IdTipoPrecioProforma);
			if(!this.proformaConstantesFunciones.mostrarFK_IdTipoPrecioProforma && index>-1) {
				this.jTabbedPaneBusquedasProforma.remove(index);
			}

			index= this.jTabbedPaneBusquedasProforma.indexOfComponent(this.jPanelFK_IdTipoProformaProforma);
			jPanel=(JPanel)this.jTabbedPaneBusquedasProforma.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.proformaConstantesFunciones.mostrarFK_IdTipoProformaProforma);
			if(!this.proformaConstantesFunciones.mostrarFK_IdTipoProformaProforma && index>-1) {
				this.jTabbedPaneBusquedasProforma.remove(index);
			}

			index= this.jTabbedPaneBusquedasProforma.indexOfComponent(this.jPanelFK_IdTipoViaTransporteProforma);
			jPanel=(JPanel)this.jTabbedPaneBusquedasProforma.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.proformaConstantesFunciones.mostrarFK_IdTipoViaTransporteProforma);
			if(!this.proformaConstantesFunciones.mostrarFK_IdTipoViaTransporteProforma && index>-1) {
				this.jTabbedPaneBusquedasProforma.remove(index);
			}

			index= this.jTabbedPaneBusquedasProforma.indexOfComponent(this.jPanelFK_IdTransporteProforma);
			jPanel=(JPanel)this.jTabbedPaneBusquedasProforma.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.proformaConstantesFunciones.mostrarFK_IdTransporteProforma);
			if(!this.proformaConstantesFunciones.mostrarFK_IdTransporteProforma && index>-1) {
				this.jTabbedPaneBusquedasProforma.remove(index);
			}

			index= this.jTabbedPaneBusquedasProforma.indexOfComponent(this.jPanelFK_IdVendedorProforma);
			jPanel=(JPanel)this.jTabbedPaneBusquedasProforma.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.proformaConstantesFunciones.mostrarFK_IdVendedorProforma);
			if(!this.proformaConstantesFunciones.mostrarFK_IdVendedorProforma && index>-1) {
				this.jTabbedPaneBusquedasProforma.remove(index);
			}
	}	
	
	}
	
	public void updateHabilitarBusquedasFormularioProforma() {
	
	//BYDAN_BUSQUEDAS		
		int index=0;
		JPanel jPanel=null;
			
		if(this.jTabbedPaneBusquedasProforma.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasProforma.indexOfComponent(this.jPanelFK_IdCentroCostoProforma);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasProforma.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.proformaConstantesFunciones.activarFK_IdCentroCostoProforma);
				this.jTabbedPaneBusquedasProforma.setEnabledAt(index,this.proformaConstantesFunciones.activarFK_IdCentroCostoProforma);
			}

			index= this.jTabbedPaneBusquedasProforma.indexOfComponent(this.jPanelFK_IdClienteProforma);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasProforma.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.proformaConstantesFunciones.activarFK_IdClienteProforma);
				this.jTabbedPaneBusquedasProforma.setEnabledAt(index,this.proformaConstantesFunciones.activarFK_IdClienteProforma);
			}

			index= this.jTabbedPaneBusquedasProforma.indexOfComponent(this.jPanelFK_IdConsignatarioProforma);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasProforma.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.proformaConstantesFunciones.activarFK_IdConsignatarioProforma);
				this.jTabbedPaneBusquedasProforma.setEnabledAt(index,this.proformaConstantesFunciones.activarFK_IdConsignatarioProforma);
			}

			index= this.jTabbedPaneBusquedasProforma.indexOfComponent(this.jPanelFK_IdEmpleadoProforma);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasProforma.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.proformaConstantesFunciones.activarFK_IdEmpleadoProforma);
				this.jTabbedPaneBusquedasProforma.setEnabledAt(index,this.proformaConstantesFunciones.activarFK_IdEmpleadoProforma);
			}

			index= this.jTabbedPaneBusquedasProforma.indexOfComponent(this.jPanelFK_IdEstadoProformaProforma);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasProforma.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.proformaConstantesFunciones.activarFK_IdEstadoProformaProforma);
				this.jTabbedPaneBusquedasProforma.setEnabledAt(index,this.proformaConstantesFunciones.activarFK_IdEstadoProformaProforma);
			}

			index= this.jTabbedPaneBusquedasProforma.indexOfComponent(this.jPanelFK_IdFormatoProforma);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasProforma.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.proformaConstantesFunciones.activarFK_IdFormatoProforma);
				this.jTabbedPaneBusquedasProforma.setEnabledAt(index,this.proformaConstantesFunciones.activarFK_IdFormatoProforma);
			}

			index= this.jTabbedPaneBusquedasProforma.indexOfComponent(this.jPanelFK_IdRutaTransporteProforma);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasProforma.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.proformaConstantesFunciones.activarFK_IdRutaTransporteProforma);
				this.jTabbedPaneBusquedasProforma.setEnabledAt(index,this.proformaConstantesFunciones.activarFK_IdRutaTransporteProforma);
			}

			index= this.jTabbedPaneBusquedasProforma.indexOfComponent(this.jPanelFK_IdSubClienteProforma);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasProforma.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.proformaConstantesFunciones.activarFK_IdSubClienteProforma);
				this.jTabbedPaneBusquedasProforma.setEnabledAt(index,this.proformaConstantesFunciones.activarFK_IdSubClienteProforma);
			}

			index= this.jTabbedPaneBusquedasProforma.indexOfComponent(this.jPanelFK_IdTipoCambioProforma);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasProforma.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.proformaConstantesFunciones.activarFK_IdTipoCambioProforma);
				this.jTabbedPaneBusquedasProforma.setEnabledAt(index,this.proformaConstantesFunciones.activarFK_IdTipoCambioProforma);
			}

			index= this.jTabbedPaneBusquedasProforma.indexOfComponent(this.jPanelFK_IdTipoPrecioProforma);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasProforma.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.proformaConstantesFunciones.activarFK_IdTipoPrecioProforma);
				this.jTabbedPaneBusquedasProforma.setEnabledAt(index,this.proformaConstantesFunciones.activarFK_IdTipoPrecioProforma);
			}

			index= this.jTabbedPaneBusquedasProforma.indexOfComponent(this.jPanelFK_IdTipoProformaProforma);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasProforma.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.proformaConstantesFunciones.activarFK_IdTipoProformaProforma);
				this.jTabbedPaneBusquedasProforma.setEnabledAt(index,this.proformaConstantesFunciones.activarFK_IdTipoProformaProforma);
			}

			index= this.jTabbedPaneBusquedasProforma.indexOfComponent(this.jPanelFK_IdTipoViaTransporteProforma);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasProforma.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.proformaConstantesFunciones.activarFK_IdTipoViaTransporteProforma);
				this.jTabbedPaneBusquedasProforma.setEnabledAt(index,this.proformaConstantesFunciones.activarFK_IdTipoViaTransporteProforma);
			}

			index= this.jTabbedPaneBusquedasProforma.indexOfComponent(this.jPanelFK_IdTransporteProforma);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasProforma.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.proformaConstantesFunciones.activarFK_IdTransporteProforma);
				this.jTabbedPaneBusquedasProforma.setEnabledAt(index,this.proformaConstantesFunciones.activarFK_IdTransporteProforma);
			}

			index= this.jTabbedPaneBusquedasProforma.indexOfComponent(this.jPanelFK_IdVendedorProforma);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasProforma.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.proformaConstantesFunciones.activarFK_IdVendedorProforma);
				this.jTabbedPaneBusquedasProforma.setEnabledAt(index,this.proformaConstantesFunciones.activarFK_IdVendedorProforma);
			}
		}	
	
	}
	
	
	public void resaltarPanelBusquedaProforma(String sTipoBusqueda) {
		Boolean existe=false;
		//BYDAN_BUSQUEDAS
		
		int index=0;
		Border resaltar = Funciones2.getBorderResaltar(this.parametroGeneralUsuario,"TAB");

		if(sTipoBusqueda.equals("FK_IdCentroCosto")) {
			index= this.jTabbedPaneBusquedasProforma.indexOfComponent(this.jPanelFK_IdCentroCostoProforma);

			this.jTabbedPaneBusquedasProforma.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasProforma.getComponent(index);

			this.proformaConstantesFunciones.setResaltarFK_IdCentroCostoProforma(resaltar);

			jPanel.setBorder(this.proformaConstantesFunciones.resaltarFK_IdCentroCostoProforma);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdCliente")) {
			index= this.jTabbedPaneBusquedasProforma.indexOfComponent(this.jPanelFK_IdClienteProforma);

			this.jTabbedPaneBusquedasProforma.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasProforma.getComponent(index);

			this.proformaConstantesFunciones.setResaltarFK_IdClienteProforma(resaltar);

			jPanel.setBorder(this.proformaConstantesFunciones.resaltarFK_IdClienteProforma);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdConsignatario")) {
			index= this.jTabbedPaneBusquedasProforma.indexOfComponent(this.jPanelFK_IdConsignatarioProforma);

			this.jTabbedPaneBusquedasProforma.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasProforma.getComponent(index);

			this.proformaConstantesFunciones.setResaltarFK_IdConsignatarioProforma(resaltar);

			jPanel.setBorder(this.proformaConstantesFunciones.resaltarFK_IdConsignatarioProforma);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdEmpleado")) {
			index= this.jTabbedPaneBusquedasProforma.indexOfComponent(this.jPanelFK_IdEmpleadoProforma);

			this.jTabbedPaneBusquedasProforma.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasProforma.getComponent(index);

			this.proformaConstantesFunciones.setResaltarFK_IdEmpleadoProforma(resaltar);

			jPanel.setBorder(this.proformaConstantesFunciones.resaltarFK_IdEmpleadoProforma);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdEstadoProforma")) {
			index= this.jTabbedPaneBusquedasProforma.indexOfComponent(this.jPanelFK_IdEstadoProformaProforma);

			this.jTabbedPaneBusquedasProforma.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasProforma.getComponent(index);

			this.proformaConstantesFunciones.setResaltarFK_IdEstadoProformaProforma(resaltar);

			jPanel.setBorder(this.proformaConstantesFunciones.resaltarFK_IdEstadoProformaProforma);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdFormato")) {
			index= this.jTabbedPaneBusquedasProforma.indexOfComponent(this.jPanelFK_IdFormatoProforma);

			this.jTabbedPaneBusquedasProforma.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasProforma.getComponent(index);

			this.proformaConstantesFunciones.setResaltarFK_IdFormatoProforma(resaltar);

			jPanel.setBorder(this.proformaConstantesFunciones.resaltarFK_IdFormatoProforma);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdRutaTransporte")) {
			index= this.jTabbedPaneBusquedasProforma.indexOfComponent(this.jPanelFK_IdRutaTransporteProforma);

			this.jTabbedPaneBusquedasProforma.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasProforma.getComponent(index);

			this.proformaConstantesFunciones.setResaltarFK_IdRutaTransporteProforma(resaltar);

			jPanel.setBorder(this.proformaConstantesFunciones.resaltarFK_IdRutaTransporteProforma);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdSubCliente")) {
			index= this.jTabbedPaneBusquedasProforma.indexOfComponent(this.jPanelFK_IdSubClienteProforma);

			this.jTabbedPaneBusquedasProforma.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasProforma.getComponent(index);

			this.proformaConstantesFunciones.setResaltarFK_IdSubClienteProforma(resaltar);

			jPanel.setBorder(this.proformaConstantesFunciones.resaltarFK_IdSubClienteProforma);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoCambio")) {
			index= this.jTabbedPaneBusquedasProforma.indexOfComponent(this.jPanelFK_IdTipoCambioProforma);

			this.jTabbedPaneBusquedasProforma.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasProforma.getComponent(index);

			this.proformaConstantesFunciones.setResaltarFK_IdTipoCambioProforma(resaltar);

			jPanel.setBorder(this.proformaConstantesFunciones.resaltarFK_IdTipoCambioProforma);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoPrecio")) {
			index= this.jTabbedPaneBusquedasProforma.indexOfComponent(this.jPanelFK_IdTipoPrecioProforma);

			this.jTabbedPaneBusquedasProforma.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasProforma.getComponent(index);

			this.proformaConstantesFunciones.setResaltarFK_IdTipoPrecioProforma(resaltar);

			jPanel.setBorder(this.proformaConstantesFunciones.resaltarFK_IdTipoPrecioProforma);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoProforma")) {
			index= this.jTabbedPaneBusquedasProforma.indexOfComponent(this.jPanelFK_IdTipoProformaProforma);

			this.jTabbedPaneBusquedasProforma.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasProforma.getComponent(index);

			this.proformaConstantesFunciones.setResaltarFK_IdTipoProformaProforma(resaltar);

			jPanel.setBorder(this.proformaConstantesFunciones.resaltarFK_IdTipoProformaProforma);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoViaTransporte")) {
			index= this.jTabbedPaneBusquedasProforma.indexOfComponent(this.jPanelFK_IdTipoViaTransporteProforma);

			this.jTabbedPaneBusquedasProforma.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasProforma.getComponent(index);

			this.proformaConstantesFunciones.setResaltarFK_IdTipoViaTransporteProforma(resaltar);

			jPanel.setBorder(this.proformaConstantesFunciones.resaltarFK_IdTipoViaTransporteProforma);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTransporte")) {
			index= this.jTabbedPaneBusquedasProforma.indexOfComponent(this.jPanelFK_IdTransporteProforma);

			this.jTabbedPaneBusquedasProforma.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasProforma.getComponent(index);

			this.proformaConstantesFunciones.setResaltarFK_IdTransporteProforma(resaltar);

			jPanel.setBorder(this.proformaConstantesFunciones.resaltarFK_IdTransporteProforma);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdVendedor")) {
			index= this.jTabbedPaneBusquedasProforma.indexOfComponent(this.jPanelFK_IdVendedorProforma);

			this.jTabbedPaneBusquedasProforma.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasProforma.getComponent(index);

			this.proformaConstantesFunciones.setResaltarFK_IdVendedorProforma(resaltar);

			jPanel.setBorder(this.proformaConstantesFunciones.resaltarFK_IdVendedorProforma);
			existe=true;
		}
		

		if(existe) {
			
			this.jTtoolBarProforma.setBorder(resaltar);
			
		}
	}	
	
	//NO FUNCIONA
	public void windowClosed(WindowEvent e) {	
	}
		
	public void windowClosing(WindowEvent e) {	    	    
	}

	public void windowOpened(WindowEvent e) {	    
	}

	public void windowIconified(WindowEvent e) {	    
	}

	public void windowDeiconified(WindowEvent e) {	    
	}

	public void windowActivated(WindowEvent e) {	    
	}

	public void windowDeactivated(WindowEvent e) {	    
	}

	public void windowGainedFocus(WindowEvent e) {	    
	}

	public void windowLostFocus(WindowEvent e) {	    
	}
	
	public void updateControlesFormularioProforma() throws Exception {

		if(this.jInternalFrameDetalleFormProforma==null) { //if(!this.conCargarFormDetalle) {			
			this.inicializarFormDetalle();
		}
		
		this.updateBorderResaltarControlesFormularioProforma();
		this.updateVisibilidadResaltarControlesFormularioProforma();
		this.updateHabilitarResaltarControlesFormularioProforma();
		
	}
	
	public void updateBorderResaltarControlesFormularioProforma() throws Exception {
		if(this.jInternalFrameDetalleFormProforma==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
	
		if(this.proformaConstantesFunciones.resaltaridProforma!=null && this.jInternalFrameDetalleFormProforma!=null) {this.jInternalFrameDetalleFormProforma.jLabelidProforma.setBorder(this.proformaConstantesFunciones.resaltaridProforma);}
		if(this.proformaConstantesFunciones.resaltarid_empresaProforma!=null && this.jInternalFrameDetalleFormProforma!=null) {this.jInternalFrameDetalleFormProforma.jComboBoxid_empresaProforma.setBorder(this.proformaConstantesFunciones.resaltarid_empresaProforma);}
		if(this.proformaConstantesFunciones.resaltarid_sucursalProforma!=null && this.jInternalFrameDetalleFormProforma!=null) {this.jInternalFrameDetalleFormProforma.jComboBoxid_sucursalProforma.setBorder(this.proformaConstantesFunciones.resaltarid_sucursalProforma);}
		if(this.proformaConstantesFunciones.resaltarid_usuarioProforma!=null && this.jInternalFrameDetalleFormProforma!=null) {this.jInternalFrameDetalleFormProforma.jComboBoxid_usuarioProforma.setBorder(this.proformaConstantesFunciones.resaltarid_usuarioProforma);}
		if(this.proformaConstantesFunciones.resaltarid_ejercicioProforma!=null && this.jInternalFrameDetalleFormProforma!=null) {this.jInternalFrameDetalleFormProforma.jComboBoxid_ejercicioProforma.setBorder(this.proformaConstantesFunciones.resaltarid_ejercicioProforma);}
		if(this.proformaConstantesFunciones.resaltarid_periodoProforma!=null && this.jInternalFrameDetalleFormProforma!=null) {this.jInternalFrameDetalleFormProforma.jComboBoxid_periodoProforma.setBorder(this.proformaConstantesFunciones.resaltarid_periodoProforma);}
		if(this.proformaConstantesFunciones.resaltarid_anioProforma!=null && this.jInternalFrameDetalleFormProforma!=null) {this.jInternalFrameDetalleFormProforma.jComboBoxid_anioProforma.setBorder(this.proformaConstantesFunciones.resaltarid_anioProforma);}
		if(this.proformaConstantesFunciones.resaltarid_mesProforma!=null && this.jInternalFrameDetalleFormProforma!=null) {this.jInternalFrameDetalleFormProforma.jComboBoxid_mesProforma.setBorder(this.proformaConstantesFunciones.resaltarid_mesProforma);}
		if(this.proformaConstantesFunciones.resaltarnumero_pre_impresoProforma!=null && this.jInternalFrameDetalleFormProforma!=null) {this.jInternalFrameDetalleFormProforma.jTextFieldnumero_pre_impresoProforma.setBorder(this.proformaConstantesFunciones.resaltarnumero_pre_impresoProforma);}
		if(this.proformaConstantesFunciones.resaltarfecha_emisionProforma!=null && this.jInternalFrameDetalleFormProforma!=null) {this.jInternalFrameDetalleFormProforma.jDateChooserfecha_emisionProforma.setBorder(this.proformaConstantesFunciones.resaltarfecha_emisionProforma);}
		if(this.proformaConstantesFunciones.resaltardiasProforma!=null && this.jInternalFrameDetalleFormProforma!=null) {this.jInternalFrameDetalleFormProforma.jTextFielddiasProforma.setBorder(this.proformaConstantesFunciones.resaltardiasProforma);}
		if(this.proformaConstantesFunciones.resaltarfecha_vencimientoProforma!=null && this.jInternalFrameDetalleFormProforma!=null) {this.jInternalFrameDetalleFormProforma.jDateChooserfecha_vencimientoProforma.setBorder(this.proformaConstantesFunciones.resaltarfecha_vencimientoProforma);}
		if(this.proformaConstantesFunciones.resaltarid_monedaProforma!=null && this.jInternalFrameDetalleFormProforma!=null) {this.jInternalFrameDetalleFormProforma.jComboBoxid_monedaProforma.setBorder(this.proformaConstantesFunciones.resaltarid_monedaProforma);}
		if(this.proformaConstantesFunciones.resaltarcotizacionProforma!=null && this.jInternalFrameDetalleFormProforma!=null) {this.jInternalFrameDetalleFormProforma.jTextFieldcotizacionProforma.setBorder(this.proformaConstantesFunciones.resaltarcotizacionProforma);}
		if(this.proformaConstantesFunciones.resaltarid_empleadoProforma!=null && this.jInternalFrameDetalleFormProforma!=null) {this.jInternalFrameDetalleFormProforma.jComboBoxid_empleadoProforma.setBorder(this.proformaConstantesFunciones.resaltarid_empleadoProforma);}
		if(this.proformaConstantesFunciones.resaltarid_formatoProforma!=null && this.jInternalFrameDetalleFormProforma!=null) {this.jInternalFrameDetalleFormProforma.jComboBoxid_formatoProforma.setBorder(this.proformaConstantesFunciones.resaltarid_formatoProforma);}
		if(this.proformaConstantesFunciones.resaltarid_estado_proformaProforma!=null && this.jInternalFrameDetalleFormProforma!=null) {this.jInternalFrameDetalleFormProforma.jComboBoxid_estado_proformaProforma.setBorder(this.proformaConstantesFunciones.resaltarid_estado_proformaProforma);}
		if(this.proformaConstantesFunciones.resaltardireccionProforma!=null && this.jInternalFrameDetalleFormProforma!=null) {this.jInternalFrameDetalleFormProforma.jTextAreadireccionProforma.setBorder(this.proformaConstantesFunciones.resaltardireccionProforma);}
		if(this.proformaConstantesFunciones.resaltarid_clienteProforma!=null && this.jInternalFrameDetalleFormProforma!=null) {this.jInternalFrameDetalleFormProforma.jComboBoxid_clienteProforma.setBorder(this.proformaConstantesFunciones.resaltarid_clienteProforma);}
		if(this.proformaConstantesFunciones.resaltarrucProforma!=null && this.jInternalFrameDetalleFormProforma!=null) {this.jInternalFrameDetalleFormProforma.jTextFieldrucProforma.setBorder(this.proformaConstantesFunciones.resaltarrucProforma);}
		if(this.proformaConstantesFunciones.resaltares_ofertaProforma!=null && this.jInternalFrameDetalleFormProforma!=null) {this.jInternalFrameDetalleFormProforma.jCheckBoxes_ofertaProforma.setBorderPainted(true);this.jInternalFrameDetalleFormProforma.jCheckBoxes_ofertaProforma.setBorder(this.proformaConstantesFunciones.resaltares_ofertaProforma);}
		if(this.proformaConstantesFunciones.resaltartelefonoProforma!=null && this.jInternalFrameDetalleFormProforma!=null) {this.jInternalFrameDetalleFormProforma.jTextFieldtelefonoProforma.setBorder(this.proformaConstantesFunciones.resaltartelefonoProforma);}
		if(this.proformaConstantesFunciones.resaltarid_tipo_precioProforma!=null && this.jInternalFrameDetalleFormProforma!=null) {this.jInternalFrameDetalleFormProforma.jComboBoxid_tipo_precioProforma.setBorder(this.proformaConstantesFunciones.resaltarid_tipo_precioProforma);}
		if(this.proformaConstantesFunciones.resaltarid_vendedorProforma!=null && this.jInternalFrameDetalleFormProforma!=null) {this.jInternalFrameDetalleFormProforma.jComboBoxid_vendedorProforma.setBorder(this.proformaConstantesFunciones.resaltarid_vendedorProforma);}
		if(this.proformaConstantesFunciones.resaltarid_sub_clienteProforma!=null && this.jInternalFrameDetalleFormProforma!=null) {this.jInternalFrameDetalleFormProforma.jComboBoxid_sub_clienteProforma.setBorder(this.proformaConstantesFunciones.resaltarid_sub_clienteProforma);}
		if(this.proformaConstantesFunciones.resaltarid_tipo_via_transporteProforma!=null && this.jInternalFrameDetalleFormProforma!=null) {this.jInternalFrameDetalleFormProforma.jComboBoxid_tipo_via_transporteProforma.setBorder(this.proformaConstantesFunciones.resaltarid_tipo_via_transporteProforma);}
		if(this.proformaConstantesFunciones.resaltarid_transporteProforma!=null && this.jInternalFrameDetalleFormProforma!=null) {this.jInternalFrameDetalleFormProforma.jComboBoxid_transporteProforma.setBorder(this.proformaConstantesFunciones.resaltarid_transporteProforma);}
		if(this.proformaConstantesFunciones.resaltarid_ruta_transporteProforma!=null && this.jInternalFrameDetalleFormProforma!=null) {this.jInternalFrameDetalleFormProforma.jComboBoxid_ruta_transporteProforma.setBorder(this.proformaConstantesFunciones.resaltarid_ruta_transporteProforma);}
		if(this.proformaConstantesFunciones.resaltardescripcionProforma!=null && this.jInternalFrameDetalleFormProforma!=null) {this.jInternalFrameDetalleFormProforma.jTextAreadescripcionProforma.setBorder(this.proformaConstantesFunciones.resaltardescripcionProforma);}
		if(this.proformaConstantesFunciones.resaltardescuento_porcentajeProforma!=null && this.jInternalFrameDetalleFormProforma!=null) {this.jInternalFrameDetalleFormProforma.jTextFielddescuento_porcentajeProforma.setBorder(this.proformaConstantesFunciones.resaltardescuento_porcentajeProforma);}
		if(this.proformaConstantesFunciones.resaltarmonto_con_ivaProforma!=null && this.jInternalFrameDetalleFormProforma!=null) {this.jInternalFrameDetalleFormProforma.jTextFieldmonto_con_ivaProforma.setBorder(this.proformaConstantesFunciones.resaltarmonto_con_ivaProforma);}
		if(this.proformaConstantesFunciones.resaltarsumanProforma!=null && this.jInternalFrameDetalleFormProforma!=null) {this.jInternalFrameDetalleFormProforma.jTextFieldsumanProforma.setBorder(this.proformaConstantesFunciones.resaltarsumanProforma);}
		if(this.proformaConstantesFunciones.resaltardescuento_valorProforma!=null && this.jInternalFrameDetalleFormProforma!=null) {this.jInternalFrameDetalleFormProforma.jTextFielddescuento_valorProforma.setBorder(this.proformaConstantesFunciones.resaltardescuento_valorProforma);}
		if(this.proformaConstantesFunciones.resaltarmonto_sin_ivaProforma!=null && this.jInternalFrameDetalleFormProforma!=null) {this.jInternalFrameDetalleFormProforma.jTextFieldmonto_sin_ivaProforma.setBorder(this.proformaConstantesFunciones.resaltarmonto_sin_ivaProforma);}
		if(this.proformaConstantesFunciones.resaltardescuento_generalProforma!=null && this.jInternalFrameDetalleFormProforma!=null) {this.jInternalFrameDetalleFormProforma.jTextFielddescuento_generalProforma.setBorder(this.proformaConstantesFunciones.resaltardescuento_generalProforma);}
		if(this.proformaConstantesFunciones.resaltarfleteProforma!=null && this.jInternalFrameDetalleFormProforma!=null) {this.jInternalFrameDetalleFormProforma.jTextFieldfleteProforma.setBorder(this.proformaConstantesFunciones.resaltarfleteProforma);}
		if(this.proformaConstantesFunciones.resaltarultimo_costoProforma!=null && this.jInternalFrameDetalleFormProforma!=null) {this.jInternalFrameDetalleFormProforma.jTextFieldultimo_costoProforma.setBorder(this.proformaConstantesFunciones.resaltarultimo_costoProforma);}
		if(this.proformaConstantesFunciones.resaltarsubtotalProforma!=null && this.jInternalFrameDetalleFormProforma!=null) {this.jInternalFrameDetalleFormProforma.jTextFieldsubtotalProforma.setBorder(this.proformaConstantesFunciones.resaltarsubtotalProforma);}
		if(this.proformaConstantesFunciones.resaltarotros_cargosProforma!=null && this.jInternalFrameDetalleFormProforma!=null) {this.jInternalFrameDetalleFormProforma.jTextFieldotros_cargosProforma.setBorder(this.proformaConstantesFunciones.resaltarotros_cargosProforma);}
		if(this.proformaConstantesFunciones.resaltarmargen_utilidadProforma!=null && this.jInternalFrameDetalleFormProforma!=null) {this.jInternalFrameDetalleFormProforma.jTextFieldmargen_utilidadProforma.setBorder(this.proformaConstantesFunciones.resaltarmargen_utilidadProforma);}
		if(this.proformaConstantesFunciones.resaltarivaProforma!=null && this.jInternalFrameDetalleFormProforma!=null) {this.jInternalFrameDetalleFormProforma.jTextFieldivaProforma.setBorder(this.proformaConstantesFunciones.resaltarivaProforma);}
		if(this.proformaConstantesFunciones.resaltarfinanciamientoProforma!=null && this.jInternalFrameDetalleFormProforma!=null) {this.jInternalFrameDetalleFormProforma.jTextFieldfinanciamientoProforma.setBorder(this.proformaConstantesFunciones.resaltarfinanciamientoProforma);}
		if(this.proformaConstantesFunciones.resaltartotalProforma!=null && this.jInternalFrameDetalleFormProforma!=null) {this.jInternalFrameDetalleFormProforma.jTextFieldtotalProforma.setBorder(this.proformaConstantesFunciones.resaltartotalProforma);}
		if(this.proformaConstantesFunciones.resaltarotros_valoresProforma!=null && this.jInternalFrameDetalleFormProforma!=null) {this.jInternalFrameDetalleFormProforma.jTextFieldotros_valoresProforma.setBorder(this.proformaConstantesFunciones.resaltarotros_valoresProforma);}
		if(this.proformaConstantesFunciones.resaltaranticipoProforma!=null && this.jInternalFrameDetalleFormProforma!=null) {this.jInternalFrameDetalleFormProforma.jTextFieldanticipoProforma.setBorder(this.proformaConstantesFunciones.resaltaranticipoProforma);}
		if(this.proformaConstantesFunciones.resaltariceProforma!=null && this.jInternalFrameDetalleFormProforma!=null) {this.jInternalFrameDetalleFormProforma.jTextFieldiceProforma.setBorder(this.proformaConstantesFunciones.resaltariceProforma);}
		if(this.proformaConstantesFunciones.resaltarmonto_retencionProforma!=null && this.jInternalFrameDetalleFormProforma!=null) {this.jInternalFrameDetalleFormProforma.jTextFieldmonto_retencionProforma.setBorder(this.proformaConstantesFunciones.resaltarmonto_retencionProforma);}
		if(this.proformaConstantesFunciones.resaltarfechaProforma!=null && this.jInternalFrameDetalleFormProforma!=null) {this.jInternalFrameDetalleFormProforma.jDateChooserfechaProforma.setBorder(this.proformaConstantesFunciones.resaltarfechaProforma);}
		if(this.proformaConstantesFunciones.resaltarfecha_servidorProforma!=null && this.jInternalFrameDetalleFormProforma!=null) {this.jInternalFrameDetalleFormProforma.jDateChooserfecha_servidorProforma.setBorder(this.proformaConstantesFunciones.resaltarfecha_servidorProforma);}
		if(this.proformaConstantesFunciones.resaltarhora_inicioProforma!=null && this.jInternalFrameDetalleFormProforma!=null) {this.jInternalFrameDetalleFormProforma.jSpinnerhora_inicioProforma.setBorder(this.proformaConstantesFunciones.resaltarhora_inicioProforma);}
		if(this.proformaConstantesFunciones.resaltarhora_finProforma!=null && this.jInternalFrameDetalleFormProforma!=null) {this.jInternalFrameDetalleFormProforma.jSpinnerhora_finProforma.setBorder(this.proformaConstantesFunciones.resaltarhora_finProforma);}
		if(this.proformaConstantesFunciones.resaltarid_centro_costoProforma!=null && this.jInternalFrameDetalleFormProforma!=null) {this.jInternalFrameDetalleFormProforma.jComboBoxid_centro_costoProforma.setBorder(this.proformaConstantesFunciones.resaltarid_centro_costoProforma);}
		if(this.proformaConstantesFunciones.resaltarid_tipo_proformaProforma!=null && this.jInternalFrameDetalleFormProforma!=null) {this.jInternalFrameDetalleFormProforma.jComboBoxid_tipo_proformaProforma.setBorder(this.proformaConstantesFunciones.resaltarid_tipo_proformaProforma);}
		if(this.proformaConstantesFunciones.resaltarid_consignatarioProforma!=null && this.jInternalFrameDetalleFormProforma!=null) {this.jInternalFrameDetalleFormProforma.jComboBoxid_consignatarioProforma.setBorder(this.proformaConstantesFunciones.resaltarid_consignatarioProforma);}
		if(this.proformaConstantesFunciones.resaltarid_tipo_cambioProforma!=null && this.jInternalFrameDetalleFormProforma!=null) {this.jInternalFrameDetalleFormProforma.jComboBoxid_tipo_cambioProforma.setBorder(this.proformaConstantesFunciones.resaltarid_tipo_cambioProforma);}
	}
	
	public void updateVisibilidadResaltarControlesFormularioProforma() throws Exception {		
		if(this.jInternalFrameDetalleFormProforma==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormProforma!=null) {
	
		//this.jInternalFrameDetalleFormProforma.jLabelidProforma.setVisible(this.proformaConstantesFunciones.mostraridProforma);
		this.jInternalFrameDetalleFormProforma.jPanelidProforma.setVisible(this.proformaConstantesFunciones.mostraridProforma);
		//this.jInternalFrameDetalleFormProforma.jComboBoxid_empresaProforma.setVisible(this.proformaConstantesFunciones.mostrarid_empresaProforma);
		this.jInternalFrameDetalleFormProforma.jPanelid_empresaProforma.setVisible(this.proformaConstantesFunciones.mostrarid_empresaProforma);
		//this.jInternalFrameDetalleFormProforma.jComboBoxid_sucursalProforma.setVisible(this.proformaConstantesFunciones.mostrarid_sucursalProforma);
		this.jInternalFrameDetalleFormProforma.jPanelid_sucursalProforma.setVisible(this.proformaConstantesFunciones.mostrarid_sucursalProforma);
		//this.jInternalFrameDetalleFormProforma.jComboBoxid_usuarioProforma.setVisible(this.proformaConstantesFunciones.mostrarid_usuarioProforma);
		this.jInternalFrameDetalleFormProforma.jPanelid_usuarioProforma.setVisible(this.proformaConstantesFunciones.mostrarid_usuarioProforma);
		//this.jInternalFrameDetalleFormProforma.jComboBoxid_ejercicioProforma.setVisible(this.proformaConstantesFunciones.mostrarid_ejercicioProforma);
		this.jInternalFrameDetalleFormProforma.jPanelid_ejercicioProforma.setVisible(this.proformaConstantesFunciones.mostrarid_ejercicioProforma);
		//this.jInternalFrameDetalleFormProforma.jComboBoxid_periodoProforma.setVisible(this.proformaConstantesFunciones.mostrarid_periodoProforma);
		this.jInternalFrameDetalleFormProforma.jPanelid_periodoProforma.setVisible(this.proformaConstantesFunciones.mostrarid_periodoProforma);
		//this.jInternalFrameDetalleFormProforma.jComboBoxid_anioProforma.setVisible(this.proformaConstantesFunciones.mostrarid_anioProforma);
		this.jInternalFrameDetalleFormProforma.jPanelid_anioProforma.setVisible(this.proformaConstantesFunciones.mostrarid_anioProforma);
		//this.jInternalFrameDetalleFormProforma.jComboBoxid_mesProforma.setVisible(this.proformaConstantesFunciones.mostrarid_mesProforma);
		this.jInternalFrameDetalleFormProforma.jPanelid_mesProforma.setVisible(this.proformaConstantesFunciones.mostrarid_mesProforma);
		//this.jInternalFrameDetalleFormProforma.jTextFieldnumero_pre_impresoProforma.setVisible(this.proformaConstantesFunciones.mostrarnumero_pre_impresoProforma);
		this.jInternalFrameDetalleFormProforma.jPanelnumero_pre_impresoProforma.setVisible(this.proformaConstantesFunciones.mostrarnumero_pre_impresoProforma);
		//this.jInternalFrameDetalleFormProforma.jDateChooserfecha_emisionProforma.setVisible(this.proformaConstantesFunciones.mostrarfecha_emisionProforma);
		this.jInternalFrameDetalleFormProforma.jPanelfecha_emisionProforma.setVisible(this.proformaConstantesFunciones.mostrarfecha_emisionProforma);
		//this.jInternalFrameDetalleFormProforma.jTextFielddiasProforma.setVisible(this.proformaConstantesFunciones.mostrardiasProforma);
		this.jInternalFrameDetalleFormProforma.jPaneldiasProforma.setVisible(this.proformaConstantesFunciones.mostrardiasProforma);
		//this.jInternalFrameDetalleFormProforma.jDateChooserfecha_vencimientoProforma.setVisible(this.proformaConstantesFunciones.mostrarfecha_vencimientoProforma);
		this.jInternalFrameDetalleFormProforma.jPanelfecha_vencimientoProforma.setVisible(this.proformaConstantesFunciones.mostrarfecha_vencimientoProforma);
		//this.jInternalFrameDetalleFormProforma.jComboBoxid_monedaProforma.setVisible(this.proformaConstantesFunciones.mostrarid_monedaProforma);
		this.jInternalFrameDetalleFormProforma.jPanelid_monedaProforma.setVisible(this.proformaConstantesFunciones.mostrarid_monedaProforma);
		//this.jInternalFrameDetalleFormProforma.jTextFieldcotizacionProforma.setVisible(this.proformaConstantesFunciones.mostrarcotizacionProforma);
		this.jInternalFrameDetalleFormProforma.jPanelcotizacionProforma.setVisible(this.proformaConstantesFunciones.mostrarcotizacionProforma);
		//this.jInternalFrameDetalleFormProforma.jComboBoxid_empleadoProforma.setVisible(this.proformaConstantesFunciones.mostrarid_empleadoProforma);
		this.jInternalFrameDetalleFormProforma.jPanelid_empleadoProforma.setVisible(this.proformaConstantesFunciones.mostrarid_empleadoProforma);
			this.jInternalFrameDetalleFormProforma.jButtonid_empleadoProforma.setVisible(this.proformaConstantesFunciones.mostrarid_empleadoProforma);
		//this.jInternalFrameDetalleFormProforma.jComboBoxid_formatoProforma.setVisible(this.proformaConstantesFunciones.mostrarid_formatoProforma);
		this.jInternalFrameDetalleFormProforma.jPanelid_formatoProforma.setVisible(this.proformaConstantesFunciones.mostrarid_formatoProforma);
		//this.jInternalFrameDetalleFormProforma.jComboBoxid_estado_proformaProforma.setVisible(this.proformaConstantesFunciones.mostrarid_estado_proformaProforma);
		this.jInternalFrameDetalleFormProforma.jPanelid_estado_proformaProforma.setVisible(this.proformaConstantesFunciones.mostrarid_estado_proformaProforma);
		//this.jInternalFrameDetalleFormProforma.jTextAreadireccionProforma.setVisible(this.proformaConstantesFunciones.mostrardireccionProforma);
		this.jInternalFrameDetalleFormProforma.jPaneldireccionProforma.setVisible(this.proformaConstantesFunciones.mostrardireccionProforma);
		//this.jInternalFrameDetalleFormProforma.jComboBoxid_clienteProforma.setVisible(this.proformaConstantesFunciones.mostrarid_clienteProforma);
		this.jInternalFrameDetalleFormProforma.jPanelid_clienteProforma.setVisible(this.proformaConstantesFunciones.mostrarid_clienteProforma);
			this.jInternalFrameDetalleFormProforma.jButtonid_clienteProforma.setVisible(this.proformaConstantesFunciones.mostrarid_clienteProforma);
		//this.jInternalFrameDetalleFormProforma.jTextFieldrucProforma.setVisible(this.proformaConstantesFunciones.mostrarrucProforma);
		this.jInternalFrameDetalleFormProforma.jPanelrucProforma.setVisible(this.proformaConstantesFunciones.mostrarrucProforma);
		//this.jInternalFrameDetalleFormProforma.jCheckBoxes_ofertaProforma.setVisible(this.proformaConstantesFunciones.mostrares_ofertaProforma);
		this.jInternalFrameDetalleFormProforma.jPaneles_ofertaProforma.setVisible(this.proformaConstantesFunciones.mostrares_ofertaProforma);
		//this.jInternalFrameDetalleFormProforma.jTextFieldtelefonoProforma.setVisible(this.proformaConstantesFunciones.mostrartelefonoProforma);
		this.jInternalFrameDetalleFormProforma.jPaneltelefonoProforma.setVisible(this.proformaConstantesFunciones.mostrartelefonoProforma);
		//this.jInternalFrameDetalleFormProforma.jComboBoxid_tipo_precioProforma.setVisible(this.proformaConstantesFunciones.mostrarid_tipo_precioProforma);
		this.jInternalFrameDetalleFormProforma.jPanelid_tipo_precioProforma.setVisible(this.proformaConstantesFunciones.mostrarid_tipo_precioProforma);
		//this.jInternalFrameDetalleFormProforma.jComboBoxid_vendedorProforma.setVisible(this.proformaConstantesFunciones.mostrarid_vendedorProforma);
		this.jInternalFrameDetalleFormProforma.jPanelid_vendedorProforma.setVisible(this.proformaConstantesFunciones.mostrarid_vendedorProforma);
			this.jInternalFrameDetalleFormProforma.jButtonid_vendedorProforma.setVisible(this.proformaConstantesFunciones.mostrarid_vendedorProforma);
		//this.jInternalFrameDetalleFormProforma.jComboBoxid_sub_clienteProforma.setVisible(this.proformaConstantesFunciones.mostrarid_sub_clienteProforma);
		this.jInternalFrameDetalleFormProforma.jPanelid_sub_clienteProforma.setVisible(this.proformaConstantesFunciones.mostrarid_sub_clienteProforma);
		//this.jInternalFrameDetalleFormProforma.jComboBoxid_tipo_via_transporteProforma.setVisible(this.proformaConstantesFunciones.mostrarid_tipo_via_transporteProforma);
		this.jInternalFrameDetalleFormProforma.jPanelid_tipo_via_transporteProforma.setVisible(this.proformaConstantesFunciones.mostrarid_tipo_via_transporteProforma);
		//this.jInternalFrameDetalleFormProforma.jComboBoxid_transporteProforma.setVisible(this.proformaConstantesFunciones.mostrarid_transporteProforma);
		this.jInternalFrameDetalleFormProforma.jPanelid_transporteProforma.setVisible(this.proformaConstantesFunciones.mostrarid_transporteProforma);
		//this.jInternalFrameDetalleFormProforma.jComboBoxid_ruta_transporteProforma.setVisible(this.proformaConstantesFunciones.mostrarid_ruta_transporteProforma);
		this.jInternalFrameDetalleFormProforma.jPanelid_ruta_transporteProforma.setVisible(this.proformaConstantesFunciones.mostrarid_ruta_transporteProforma);
		//this.jInternalFrameDetalleFormProforma.jTextAreadescripcionProforma.setVisible(this.proformaConstantesFunciones.mostrardescripcionProforma);
		this.jInternalFrameDetalleFormProforma.jPaneldescripcionProforma.setVisible(this.proformaConstantesFunciones.mostrardescripcionProforma);
		//this.jInternalFrameDetalleFormProforma.jTextFielddescuento_porcentajeProforma.setVisible(this.proformaConstantesFunciones.mostrardescuento_porcentajeProforma);
		this.jInternalFrameDetalleFormProforma.jPaneldescuento_porcentajeProforma.setVisible(this.proformaConstantesFunciones.mostrardescuento_porcentajeProforma);
		//this.jInternalFrameDetalleFormProforma.jTextFieldmonto_con_ivaProforma.setVisible(this.proformaConstantesFunciones.mostrarmonto_con_ivaProforma);
		this.jInternalFrameDetalleFormProforma.jPanelmonto_con_ivaProforma.setVisible(this.proformaConstantesFunciones.mostrarmonto_con_ivaProforma);
		//this.jInternalFrameDetalleFormProforma.jTextFieldsumanProforma.setVisible(this.proformaConstantesFunciones.mostrarsumanProforma);
		this.jInternalFrameDetalleFormProforma.jPanelsumanProforma.setVisible(this.proformaConstantesFunciones.mostrarsumanProforma);
		//this.jInternalFrameDetalleFormProforma.jTextFielddescuento_valorProforma.setVisible(this.proformaConstantesFunciones.mostrardescuento_valorProforma);
		this.jInternalFrameDetalleFormProforma.jPaneldescuento_valorProforma.setVisible(this.proformaConstantesFunciones.mostrardescuento_valorProforma);
		//this.jInternalFrameDetalleFormProforma.jTextFieldmonto_sin_ivaProforma.setVisible(this.proformaConstantesFunciones.mostrarmonto_sin_ivaProforma);
		this.jInternalFrameDetalleFormProforma.jPanelmonto_sin_ivaProforma.setVisible(this.proformaConstantesFunciones.mostrarmonto_sin_ivaProforma);
		//this.jInternalFrameDetalleFormProforma.jTextFielddescuento_generalProforma.setVisible(this.proformaConstantesFunciones.mostrardescuento_generalProforma);
		this.jInternalFrameDetalleFormProforma.jPaneldescuento_generalProforma.setVisible(this.proformaConstantesFunciones.mostrardescuento_generalProforma);
		//this.jInternalFrameDetalleFormProforma.jTextFieldfleteProforma.setVisible(this.proformaConstantesFunciones.mostrarfleteProforma);
		this.jInternalFrameDetalleFormProforma.jPanelfleteProforma.setVisible(this.proformaConstantesFunciones.mostrarfleteProforma);
		//this.jInternalFrameDetalleFormProforma.jTextFieldultimo_costoProforma.setVisible(this.proformaConstantesFunciones.mostrarultimo_costoProforma);
		this.jInternalFrameDetalleFormProforma.jPanelultimo_costoProforma.setVisible(this.proformaConstantesFunciones.mostrarultimo_costoProforma);
		//this.jInternalFrameDetalleFormProforma.jTextFieldsubtotalProforma.setVisible(this.proformaConstantesFunciones.mostrarsubtotalProforma);
		this.jInternalFrameDetalleFormProforma.jPanelsubtotalProforma.setVisible(this.proformaConstantesFunciones.mostrarsubtotalProforma);
		//this.jInternalFrameDetalleFormProforma.jTextFieldotros_cargosProforma.setVisible(this.proformaConstantesFunciones.mostrarotros_cargosProforma);
		this.jInternalFrameDetalleFormProforma.jPanelotros_cargosProforma.setVisible(this.proformaConstantesFunciones.mostrarotros_cargosProforma);
		//this.jInternalFrameDetalleFormProforma.jTextFieldmargen_utilidadProforma.setVisible(this.proformaConstantesFunciones.mostrarmargen_utilidadProforma);
		this.jInternalFrameDetalleFormProforma.jPanelmargen_utilidadProforma.setVisible(this.proformaConstantesFunciones.mostrarmargen_utilidadProforma);
		//this.jInternalFrameDetalleFormProforma.jTextFieldivaProforma.setVisible(this.proformaConstantesFunciones.mostrarivaProforma);
		this.jInternalFrameDetalleFormProforma.jPanelivaProforma.setVisible(this.proformaConstantesFunciones.mostrarivaProforma);
		//this.jInternalFrameDetalleFormProforma.jTextFieldfinanciamientoProforma.setVisible(this.proformaConstantesFunciones.mostrarfinanciamientoProforma);
		this.jInternalFrameDetalleFormProforma.jPanelfinanciamientoProforma.setVisible(this.proformaConstantesFunciones.mostrarfinanciamientoProforma);
		//this.jInternalFrameDetalleFormProforma.jTextFieldtotalProforma.setVisible(this.proformaConstantesFunciones.mostrartotalProforma);
		this.jInternalFrameDetalleFormProforma.jPaneltotalProforma.setVisible(this.proformaConstantesFunciones.mostrartotalProforma);
		//this.jInternalFrameDetalleFormProforma.jTextFieldotros_valoresProforma.setVisible(this.proformaConstantesFunciones.mostrarotros_valoresProforma);
		this.jInternalFrameDetalleFormProforma.jPanelotros_valoresProforma.setVisible(this.proformaConstantesFunciones.mostrarotros_valoresProforma);
		//this.jInternalFrameDetalleFormProforma.jTextFieldanticipoProforma.setVisible(this.proformaConstantesFunciones.mostraranticipoProforma);
		this.jInternalFrameDetalleFormProforma.jPanelanticipoProforma.setVisible(this.proformaConstantesFunciones.mostraranticipoProforma);
		//this.jInternalFrameDetalleFormProforma.jTextFieldiceProforma.setVisible(this.proformaConstantesFunciones.mostrariceProforma);
		this.jInternalFrameDetalleFormProforma.jPaneliceProforma.setVisible(this.proformaConstantesFunciones.mostrariceProforma);
		//this.jInternalFrameDetalleFormProforma.jTextFieldmonto_retencionProforma.setVisible(this.proformaConstantesFunciones.mostrarmonto_retencionProforma);
		this.jInternalFrameDetalleFormProforma.jPanelmonto_retencionProforma.setVisible(this.proformaConstantesFunciones.mostrarmonto_retencionProforma);
		//this.jInternalFrameDetalleFormProforma.jDateChooserfechaProforma.setVisible(this.proformaConstantesFunciones.mostrarfechaProforma);
		this.jInternalFrameDetalleFormProforma.jPanelfechaProforma.setVisible(this.proformaConstantesFunciones.mostrarfechaProforma);
		//this.jInternalFrameDetalleFormProforma.jDateChooserfecha_servidorProforma.setVisible(this.proformaConstantesFunciones.mostrarfecha_servidorProforma);
		this.jInternalFrameDetalleFormProforma.jPanelfecha_servidorProforma.setVisible(this.proformaConstantesFunciones.mostrarfecha_servidorProforma);
		//this.jInternalFrameDetalleFormProforma.jSpinnerhora_inicioProforma.setVisible(this.proformaConstantesFunciones.mostrarhora_inicioProforma);
		this.jInternalFrameDetalleFormProforma.jPanelhora_inicioProforma.setVisible(this.proformaConstantesFunciones.mostrarhora_inicioProforma);
		//this.jInternalFrameDetalleFormProforma.jSpinnerhora_finProforma.setVisible(this.proformaConstantesFunciones.mostrarhora_finProforma);
		this.jInternalFrameDetalleFormProforma.jPanelhora_finProforma.setVisible(this.proformaConstantesFunciones.mostrarhora_finProforma);
		//this.jInternalFrameDetalleFormProforma.jComboBoxid_centro_costoProforma.setVisible(this.proformaConstantesFunciones.mostrarid_centro_costoProforma);
		this.jInternalFrameDetalleFormProforma.jPanelid_centro_costoProforma.setVisible(this.proformaConstantesFunciones.mostrarid_centro_costoProforma);
			this.jInternalFrameDetalleFormProforma.jButtonid_centro_costoProforma.setVisible(this.proformaConstantesFunciones.mostrarid_centro_costoProforma);
		//this.jInternalFrameDetalleFormProforma.jComboBoxid_tipo_proformaProforma.setVisible(this.proformaConstantesFunciones.mostrarid_tipo_proformaProforma);
		this.jInternalFrameDetalleFormProforma.jPanelid_tipo_proformaProforma.setVisible(this.proformaConstantesFunciones.mostrarid_tipo_proformaProforma);
		//this.jInternalFrameDetalleFormProforma.jComboBoxid_consignatarioProforma.setVisible(this.proformaConstantesFunciones.mostrarid_consignatarioProforma);
		this.jInternalFrameDetalleFormProforma.jPanelid_consignatarioProforma.setVisible(this.proformaConstantesFunciones.mostrarid_consignatarioProforma);
		//this.jInternalFrameDetalleFormProforma.jComboBoxid_tipo_cambioProforma.setVisible(this.proformaConstantesFunciones.mostrarid_tipo_cambioProforma);
		this.jInternalFrameDetalleFormProforma.jPanelid_tipo_cambioProforma.setVisible(this.proformaConstantesFunciones.mostrarid_tipo_cambioProforma);
			this.jInternalFrameDetalleFormProforma.jButtonid_tipo_cambioProforma.setVisible(this.proformaConstantesFunciones.mostrarid_tipo_cambioProforma);
		}
	}
	
	public void updateHabilitarResaltarControlesFormularioProforma() throws Exception {
		if(this.jInternalFrameDetalleFormProforma==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormProforma!=null) {
	
		this.jInternalFrameDetalleFormProforma.jLabelidProforma.setEnabled(this.proformaConstantesFunciones.activaridProforma);
		this.jInternalFrameDetalleFormProforma.jComboBoxid_empresaProforma.setEnabled(this.proformaConstantesFunciones.activarid_empresaProforma);
		this.jInternalFrameDetalleFormProforma.jComboBoxid_sucursalProforma.setEnabled(this.proformaConstantesFunciones.activarid_sucursalProforma);
		this.jInternalFrameDetalleFormProforma.jComboBoxid_usuarioProforma.setEnabled(this.proformaConstantesFunciones.activarid_usuarioProforma);
		this.jInternalFrameDetalleFormProforma.jComboBoxid_ejercicioProforma.setEnabled(this.proformaConstantesFunciones.activarid_ejercicioProforma);
		this.jInternalFrameDetalleFormProforma.jComboBoxid_periodoProforma.setEnabled(this.proformaConstantesFunciones.activarid_periodoProforma);
		this.jInternalFrameDetalleFormProforma.jComboBoxid_anioProforma.setEnabled(this.proformaConstantesFunciones.activarid_anioProforma);
		this.jInternalFrameDetalleFormProforma.jComboBoxid_mesProforma.setEnabled(this.proformaConstantesFunciones.activarid_mesProforma);
		this.jInternalFrameDetalleFormProforma.jTextFieldnumero_pre_impresoProforma.setEnabled(this.proformaConstantesFunciones.activarnumero_pre_impresoProforma);
		this.jInternalFrameDetalleFormProforma.jDateChooserfecha_emisionProforma.setEnabled(this.proformaConstantesFunciones.activarfecha_emisionProforma);
		this.jInternalFrameDetalleFormProforma.jTextFielddiasProforma.setEnabled(this.proformaConstantesFunciones.activardiasProforma);
		this.jInternalFrameDetalleFormProforma.jDateChooserfecha_vencimientoProforma.setEnabled(this.proformaConstantesFunciones.activarfecha_vencimientoProforma);
		this.jInternalFrameDetalleFormProforma.jComboBoxid_monedaProforma.setEnabled(this.proformaConstantesFunciones.activarid_monedaProforma);
		this.jInternalFrameDetalleFormProforma.jTextFieldcotizacionProforma.setEnabled(this.proformaConstantesFunciones.activarcotizacionProforma);
		this.jInternalFrameDetalleFormProforma.jComboBoxid_empleadoProforma.setEnabled(this.proformaConstantesFunciones.activarid_empleadoProforma);
			this.jInternalFrameDetalleFormProforma.jButtonid_empleadoProforma.setEnabled(this.proformaConstantesFunciones.activarid_empleadoProforma);
		this.jInternalFrameDetalleFormProforma.jComboBoxid_formatoProforma.setEnabled(this.proformaConstantesFunciones.activarid_formatoProforma);
		this.jInternalFrameDetalleFormProforma.jComboBoxid_estado_proformaProforma.setEnabled(this.proformaConstantesFunciones.activarid_estado_proformaProforma);
		this.jInternalFrameDetalleFormProforma.jTextAreadireccionProforma.setEnabled(this.proformaConstantesFunciones.activardireccionProforma);
		this.jInternalFrameDetalleFormProforma.jComboBoxid_clienteProforma.setEnabled(this.proformaConstantesFunciones.activarid_clienteProforma);
			this.jInternalFrameDetalleFormProforma.jButtonid_clienteProforma.setEnabled(this.proformaConstantesFunciones.activarid_clienteProforma);
		this.jInternalFrameDetalleFormProforma.jTextFieldrucProforma.setEnabled(this.proformaConstantesFunciones.activarrucProforma);
		this.jInternalFrameDetalleFormProforma.jCheckBoxes_ofertaProforma.setEnabled(this.proformaConstantesFunciones.activares_ofertaProforma);
		this.jInternalFrameDetalleFormProforma.jTextFieldtelefonoProforma.setEnabled(this.proformaConstantesFunciones.activartelefonoProforma);
		this.jInternalFrameDetalleFormProforma.jComboBoxid_tipo_precioProforma.setEnabled(this.proformaConstantesFunciones.activarid_tipo_precioProforma);
		this.jInternalFrameDetalleFormProforma.jComboBoxid_vendedorProforma.setEnabled(this.proformaConstantesFunciones.activarid_vendedorProforma);
			this.jInternalFrameDetalleFormProforma.jButtonid_vendedorProforma.setEnabled(this.proformaConstantesFunciones.activarid_vendedorProforma);
		this.jInternalFrameDetalleFormProforma.jComboBoxid_sub_clienteProforma.setEnabled(this.proformaConstantesFunciones.activarid_sub_clienteProforma);
		this.jInternalFrameDetalleFormProforma.jComboBoxid_tipo_via_transporteProforma.setEnabled(this.proformaConstantesFunciones.activarid_tipo_via_transporteProforma);
		this.jInternalFrameDetalleFormProforma.jComboBoxid_transporteProforma.setEnabled(this.proformaConstantesFunciones.activarid_transporteProforma);
		this.jInternalFrameDetalleFormProforma.jComboBoxid_ruta_transporteProforma.setEnabled(this.proformaConstantesFunciones.activarid_ruta_transporteProforma);
		this.jInternalFrameDetalleFormProforma.jTextAreadescripcionProforma.setEnabled(this.proformaConstantesFunciones.activardescripcionProforma);
		this.jInternalFrameDetalleFormProforma.jTextFielddescuento_porcentajeProforma.setEnabled(this.proformaConstantesFunciones.activardescuento_porcentajeProforma);
		this.jInternalFrameDetalleFormProforma.jTextFieldmonto_con_ivaProforma.setEnabled(this.proformaConstantesFunciones.activarmonto_con_ivaProforma);
		this.jInternalFrameDetalleFormProforma.jTextFieldsumanProforma.setEnabled(this.proformaConstantesFunciones.activarsumanProforma);
		this.jInternalFrameDetalleFormProforma.jTextFielddescuento_valorProforma.setEnabled(this.proformaConstantesFunciones.activardescuento_valorProforma);
		this.jInternalFrameDetalleFormProforma.jTextFieldmonto_sin_ivaProforma.setEnabled(this.proformaConstantesFunciones.activarmonto_sin_ivaProforma);
		this.jInternalFrameDetalleFormProforma.jTextFielddescuento_generalProforma.setEnabled(this.proformaConstantesFunciones.activardescuento_generalProforma);
		this.jInternalFrameDetalleFormProforma.jTextFieldfleteProforma.setEnabled(this.proformaConstantesFunciones.activarfleteProforma);
		this.jInternalFrameDetalleFormProforma.jTextFieldultimo_costoProforma.setEnabled(this.proformaConstantesFunciones.activarultimo_costoProforma);
		this.jInternalFrameDetalleFormProforma.jTextFieldsubtotalProforma.setEnabled(this.proformaConstantesFunciones.activarsubtotalProforma);
		this.jInternalFrameDetalleFormProforma.jTextFieldotros_cargosProforma.setEnabled(this.proformaConstantesFunciones.activarotros_cargosProforma);
		this.jInternalFrameDetalleFormProforma.jTextFieldmargen_utilidadProforma.setEnabled(this.proformaConstantesFunciones.activarmargen_utilidadProforma);
		this.jInternalFrameDetalleFormProforma.jTextFieldivaProforma.setEnabled(this.proformaConstantesFunciones.activarivaProforma);
		this.jInternalFrameDetalleFormProforma.jTextFieldfinanciamientoProforma.setEnabled(this.proformaConstantesFunciones.activarfinanciamientoProforma);
		this.jInternalFrameDetalleFormProforma.jTextFieldtotalProforma.setEnabled(this.proformaConstantesFunciones.activartotalProforma);
		this.jInternalFrameDetalleFormProforma.jTextFieldotros_valoresProforma.setEnabled(this.proformaConstantesFunciones.activarotros_valoresProforma);
		this.jInternalFrameDetalleFormProforma.jTextFieldanticipoProforma.setEnabled(this.proformaConstantesFunciones.activaranticipoProforma);
		this.jInternalFrameDetalleFormProforma.jTextFieldiceProforma.setEnabled(this.proformaConstantesFunciones.activariceProforma);
		this.jInternalFrameDetalleFormProforma.jTextFieldmonto_retencionProforma.setEnabled(this.proformaConstantesFunciones.activarmonto_retencionProforma);
		this.jInternalFrameDetalleFormProforma.jDateChooserfechaProforma.setEnabled(this.proformaConstantesFunciones.activarfechaProforma);
		this.jInternalFrameDetalleFormProforma.jDateChooserfecha_servidorProforma.setEnabled(this.proformaConstantesFunciones.activarfecha_servidorProforma);
		this.jInternalFrameDetalleFormProforma.jSpinnerhora_inicioProforma.setEnabled(this.proformaConstantesFunciones.activarhora_inicioProforma);
		this.jInternalFrameDetalleFormProforma.jSpinnerhora_finProforma.setEnabled(this.proformaConstantesFunciones.activarhora_finProforma);
		this.jInternalFrameDetalleFormProforma.jComboBoxid_centro_costoProforma.setEnabled(this.proformaConstantesFunciones.activarid_centro_costoProforma);
			this.jInternalFrameDetalleFormProforma.jButtonid_centro_costoProforma.setEnabled(this.proformaConstantesFunciones.activarid_centro_costoProforma);
		this.jInternalFrameDetalleFormProforma.jComboBoxid_tipo_proformaProforma.setEnabled(this.proformaConstantesFunciones.activarid_tipo_proformaProforma);
		this.jInternalFrameDetalleFormProforma.jComboBoxid_consignatarioProforma.setEnabled(this.proformaConstantesFunciones.activarid_consignatarioProforma);
		this.jInternalFrameDetalleFormProforma.jComboBoxid_tipo_cambioProforma.setEnabled(this.proformaConstantesFunciones.activarid_tipo_cambioProforma);
			this.jInternalFrameDetalleFormProforma.jButtonid_tipo_cambioProforma.setEnabled(this.proformaConstantesFunciones.activarid_tipo_cambioProforma);
		}
	}
	
		
}