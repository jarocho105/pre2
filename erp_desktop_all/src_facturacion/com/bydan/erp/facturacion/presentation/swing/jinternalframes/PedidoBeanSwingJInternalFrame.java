/*
*AVISO LEGAL
Â© Copyright
*Este programa esta protegido por la ley de derechos de autor.
*La reproduccion o distribucion ilicita de este programa o de cualquiera de
*sus partes esta penado por la ley con severas sanciones civiles y penales,
*y seran objeto de todas las sanciones legales que correspondan.

*Su contenido no puede copiarse para fines comerciales o de otras,
*ni puede mostrarse, incluso en una version modificada, en otros sitios Web.
Solo esta permitido colocar hipervinculos al sitio web.
*/
package com.bydan.erp.facturacion.presentation.swing.jinternalframes;


import java.sql.Time;


import com.bydan.erp.seguridad.business.entity.Usuario;
import com.bydan.erp.seguridad.business.entity.ResumenUsuario;
import com.bydan.erp.seguridad.business.entity.Opcion;
import com.bydan.erp.seguridad.business.entity.PerfilOpcion;
import com.bydan.erp.seguridad.business.entity.PerfilCampo;
import com.bydan.erp.seguridad.business.entity.PerfilAccion;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralSg;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralUsuario;
import com.bydan.erp.seguridad.business.entity.Modulo;
import com.bydan.erp.seguridad.business.entity.Accion;

import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneralAdditional;
import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneral;


//import com.bydan.erp.seguridad.business.entity.PerfilAccion;


import com.bydan.erp.seguridad.util.SistemaConstantesFunciones;
import com.bydan.erp.seguridad.util.SistemaConstantesFuncionesAdditional;
import com.bydan.erp.seguridad.business.logic.SistemaLogicAdditional;

import com.bydan.erp.facturacion.util.PedidoConstantesFunciones;
import com.bydan.erp.facturacion.util.PedidoParameterReturnGeneral;
//import com.bydan.erp.facturacion.util.PedidoParameterGeneral;
//import com.bydan.erp.facturacion.presentation.report.source.PedidoBean;
import com.bydan.framework.erp.business.dataaccess.ConstantesSql;
import com.bydan.framework.erp.business.entity.Classe;
import com.bydan.framework.erp.business.entity.DatoGeneral;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterGeneral;
import com.bydan.framework.erp.business.entity.OrderBy;
import com.bydan.framework.erp.business.entity.DatoGeneralMinimo;
import com.bydan.framework.erp.business.entity.GeneralEntity;
import com.bydan.framework.erp.business.entity.Mensajes;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterReturnGeneral;
//import com.bydan.framework.erp.business.entity.MaintenanceType;
import com.bydan.framework.erp.util.MaintenanceType;
import com.bydan.framework.erp.util.FuncionesReporte;
import com.bydan.framework.erp.business.logic.DatosCliente;
import com.bydan.framework.erp.business.logic.Pagination;

import com.bydan.erp.facturacion.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralTotalModel;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralOrderByModel;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverter;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverterFromDate;
import com.bydan.framework.erp.presentation.desktop.swing.DateRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.DateEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.TextFieldRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.RunnableProceso;
import com.bydan.framework.erp.presentation.desktop.swing.*;
//import com.bydan.framework.erp.presentation.desktop.swing.TextFieldEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.HeaderRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.JInternalFrameBase;
import com.bydan.framework.erp.presentation.desktop.swing.FuncionesSwing;
import com.bydan.framework.erp.presentation.desktop.swing.MainJFrame;
import com.bydan.framework.erp.resources.imagenes.AuxiliarImagenes;
import com.bydan.erp.facturacion.resources.reportes.AuxiliarReportes;


import com.bydan.erp.facturacion.util.*;
import com.bydan.erp.facturacion.business.logic.*;

import com.bydan.erp.seguridad.business.logic.*;
import com.bydan.erp.contabilidad.business.logic.*;
import com.bydan.erp.nomina.business.logic.*;
import com.bydan.erp.inventario.business.logic.*;
import com.bydan.erp.cartera.business.logic.*;
import com.bydan.erp.comisiones.business.logic.*;
import com.bydan.erp.importaciones.business.logic.*;
import com.bydan.erp.tesoreria.business.logic.*;

//EJB

//PARAMETROS


//EJB PARAMETROS

import com.bydan.framework.erp.business.logic.*;
import com.bydan.framework.erp.util.*;

import com.bydan.erp.facturacion.business.entity.*;
//import com.bydan.framework.erp.business.entity.ConexionBeanFace;
//import com.bydan.framework.erp.business.entity.Mensajes;


import com.bydan.erp.seguridad.presentation.swing.jinternalframes.*;
import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.*;
import com.bydan.erp.nomina.presentation.swing.jinternalframes.*;
import com.bydan.erp.inventario.presentation.swing.jinternalframes.*;
import com.bydan.erp.cartera.presentation.swing.jinternalframes.*;
import com.bydan.erp.comisiones.presentation.swing.jinternalframes.*;
import com.bydan.erp.importaciones.presentation.swing.jinternalframes.*;
import com.bydan.erp.tesoreria.presentation.swing.jinternalframes.*;

import com.bydan.erp.seguridad.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.nomina.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.inventario.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.cartera.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.comisiones.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.importaciones.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.tesoreria.presentation.swing.jinternalframes.auxiliar.*;






import javax.imageio.ImageIO;
import java.net.NetworkInterface;
import java.net.InterfaceAddress;
import java.net.InetAddress;
import javax.naming.InitialContext;
import java.lang.Long;
import java.util.Date;
import java.util.Enumeration;
import java.util.Iterator;
import java.util.Set;
import java.util.HashSet;
import java.util.List;
import java.util.ArrayList;
import java.io.Serializable;
import java.util.Hashtable;
import java.util.Collections;
import java.io.File;
import java.io.FileInputStream;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.BufferedReader;
import java.io.FileReader;
import java.util.HashMap;
import java.util.Map;
import java.io.PrintWriter;
import java.sql.SQLException;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.stream.StreamSource;

import org.xml.sax.EntityResolver;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;

import org.w3c.dom.Document;
import org.w3c.dom.Document;
import org.w3c.dom.NodeList;
import org.w3c.dom.Node;
import org.w3c.dom.Element;

import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.util.CellRangeAddress;

import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;


import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRRuntimeException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.engine.export.JRHtmlExporter;
import net.sf.jasperreports.j2ee.servlets.BaseHttpServlet;
import net.sf.jasperreports.engine.JRExporterParameter;
import net.sf.jasperreports.engine.data.JRBeanArrayDataSource;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;

import org.apache.log4j.Logger;

import com.bydan.framework.erp.business.entity.Reporte;


//VALIDACION
import org.hibernate.validator.ClassValidator;
import org.hibernate.validator.InvalidValue;

import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.JasperRunManager;
import net.sf.jasperreports.engine.export.JExcelApiExporter;
import net.sf.jasperreports.engine.export.JRCsvExporter;
import net.sf.jasperreports.engine.export.JRRtfExporter;
import net.sf.jasperreports.engine.export.JRXlsExporter;
import net.sf.jasperreports.engine.export.JRXlsExporterParameter;
import net.sf.jasperreports.engine.util.JRSaver;
import net.sf.jasperreports.engine.xml.JRXmlWriter;


import com.bydan.erp.facturacion.presentation.web.jsf.sessionbean.*;

import java.util.EventObject;
import javax.swing.*;
import javax.swing.border.Border;
import javax.swing.border.TitledBorder;
import javax.swing.border.EmptyBorder;
import javax.swing.event.*;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import java.awt.*;
import java.awt.event.*;

import org.jdesktop.beansbinding.Binding.SyncFailure;
import org.jdesktop.beansbinding.BindingListener;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.ELProperty;
import org.jdesktop.beansbinding.AutoBinding.UpdateStrategy;
import org.jdesktop.beansbinding.PropertyStateEvent;
import org.jdesktop.swingbinding.JComboBoxBinding;
import org.jdesktop.swingbinding.SwingBindings;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeEvent;

import com.toedter.calendar.JDateChooser;


import com.bydan.erp.seguridad.business.entity.*;
import com.bydan.erp.contabilidad.business.entity.*;
import com.bydan.erp.nomina.business.entity.*;
import com.bydan.erp.inventario.business.entity.*;
import com.bydan.erp.cartera.business.entity.*;
import com.bydan.erp.comisiones.business.entity.*;
import com.bydan.erp.importaciones.business.entity.*;
import com.bydan.erp.tesoreria.business.entity.*;
import com.bydan.erp.seguridad.util.*;
import com.bydan.erp.contabilidad.util.*;
import com.bydan.erp.nomina.util.*;
import com.bydan.erp.inventario.util.*;
import com.bydan.erp.cartera.util.*;
import com.bydan.erp.comisiones.util.*;
import com.bydan.erp.importaciones.util.*;
import com.bydan.erp.tesoreria.util.*;
import com.bydan.erp.seguridad.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.contabilidad.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.nomina.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.inventario.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.cartera.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.comisiones.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.importaciones.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.tesoreria.presentation.web.jsf.sessionbean.*;


@SuppressWarnings("unused")
public class PedidoBeanSwingJInternalFrame extends PedidoJInternalFrame implements WindowListener,WindowFocusListener
{				
	
	public static final long serialVersionUID = 1L;
	
	public static Logger logger = Logger.getLogger(PedidoBeanSwingJInternalFrame.class);  
	
	public static ClassValidator<Pedido> pedidoValidator = new ClassValidator<Pedido>(Pedido.class);
	
	public InvalidValue[] invalidValues=null;
		

	//Ejb Foreign Keys
	
	public Pedido pedido;	
	public Pedido pedidoAux;
	public Pedido pedidoAnterior;//USADO PARA MANEJAR FOCUS GAINED,LOST
	public Pedido pedidoTotales;
	public Long idPedidoActual;
	public Long iIdNuevoPedido=0L;
	public int rowIndexActual=0;
	
	
	
	
	public String sFinalQueryComboEmpresa="";

	public List<Empresa> empresasForeignKey;

	public List<Empresa> getempresasForeignKey() {
		return empresasForeignKey;
	}

	public void setempresasForeignKey(List<Empresa> empresasForeignKey) {
		this.empresasForeignKey = empresasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Empresa empresaForeignKey;

	public Empresa getempresaForeignKey() {
		return empresaForeignKey;
	}

	public void setempresaForeignKey(Empresa empresaForeignKey) {
		this.empresaForeignKey = empresaForeignKey;
	}

	public String sFinalQueryComboSucursal="";

	public List<Sucursal> sucursalsForeignKey;

	public List<Sucursal> getsucursalsForeignKey() {
		return sucursalsForeignKey;
	}

	public void setsucursalsForeignKey(List<Sucursal> sucursalsForeignKey) {
		this.sucursalsForeignKey = sucursalsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Sucursal sucursalForeignKey;

	public Sucursal getsucursalForeignKey() {
		return sucursalForeignKey;
	}

	public void setsucursalForeignKey(Sucursal sucursalForeignKey) {
		this.sucursalForeignKey = sucursalForeignKey;
	}

	public String sFinalQueryComboEjercicio="";

	public List<Ejercicio> ejerciciosForeignKey;

	public List<Ejercicio> getejerciciosForeignKey() {
		return ejerciciosForeignKey;
	}

	public void setejerciciosForeignKey(List<Ejercicio> ejerciciosForeignKey) {
		this.ejerciciosForeignKey = ejerciciosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Ejercicio ejercicioForeignKey;

	public Ejercicio getejercicioForeignKey() {
		return ejercicioForeignKey;
	}

	public void setejercicioForeignKey(Ejercicio ejercicioForeignKey) {
		this.ejercicioForeignKey = ejercicioForeignKey;
	}

	public String sFinalQueryComboPeriodo="";

	public List<Periodo> periodosForeignKey;

	public List<Periodo> getperiodosForeignKey() {
		return periodosForeignKey;
	}

	public void setperiodosForeignKey(List<Periodo> periodosForeignKey) {
		this.periodosForeignKey = periodosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Periodo periodoForeignKey;

	public Periodo getperiodoForeignKey() {
		return periodoForeignKey;
	}

	public void setperiodoForeignKey(Periodo periodoForeignKey) {
		this.periodoForeignKey = periodoForeignKey;
	}

	public String sFinalQueryComboAnio="";

	public List<Anio> aniosForeignKey;

	public List<Anio> getaniosForeignKey() {
		return aniosForeignKey;
	}

	public void setaniosForeignKey(List<Anio> aniosForeignKey) {
		this.aniosForeignKey = aniosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Anio anioForeignKey;

	public Anio getanioForeignKey() {
		return anioForeignKey;
	}

	public void setanioForeignKey(Anio anioForeignKey) {
		this.anioForeignKey = anioForeignKey;
	}

	public String sFinalQueryComboMes="";

	public List<Mes> messForeignKey;

	public List<Mes> getmessForeignKey() {
		return messForeignKey;
	}

	public void setmessForeignKey(List<Mes> messForeignKey) {
		this.messForeignKey = messForeignKey;
	}

	//OBJETO FK ACTUAL
	public Mes mesForeignKey;

	public Mes getmesForeignKey() {
		return mesForeignKey;
	}

	public void setmesForeignKey(Mes mesForeignKey) {
		this.mesForeignKey = mesForeignKey;
	}

	public String sFinalQueryComboUsuario="";

	public List<Usuario> usuariosForeignKey;

	public List<Usuario> getusuariosForeignKey() {
		return usuariosForeignKey;
	}

	public void setusuariosForeignKey(List<Usuario> usuariosForeignKey) {
		this.usuariosForeignKey = usuariosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Usuario usuarioForeignKey;

	public Usuario getusuarioForeignKey() {
		return usuarioForeignKey;
	}

	public void setusuarioForeignKey(Usuario usuarioForeignKey) {
		this.usuarioForeignKey = usuarioForeignKey;
	}

	public String sFinalQueryComboMoneda="";

	public List<Moneda> monedasForeignKey;

	public List<Moneda> getmonedasForeignKey() {
		return monedasForeignKey;
	}

	public void setmonedasForeignKey(List<Moneda> monedasForeignKey) {
		this.monedasForeignKey = monedasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Moneda monedaForeignKey;

	public Moneda getmonedaForeignKey() {
		return monedaForeignKey;
	}

	public void setmonedaForeignKey(Moneda monedaForeignKey) {
		this.monedaForeignKey = monedaForeignKey;
	}

	public String sFinalQueryComboEmpleado="";

	public List<Empleado> empleadosForeignKey;

	public List<Empleado> getempleadosForeignKey() {
		return empleadosForeignKey;
	}

	public void setempleadosForeignKey(List<Empleado> empleadosForeignKey) {
		this.empleadosForeignKey = empleadosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Empleado empleadoForeignKey;

	public Empleado getempleadoForeignKey() {
		return empleadoForeignKey;
	}

	public void setempleadoForeignKey(Empleado empleadoForeignKey) {
		this.empleadoForeignKey = empleadoForeignKey;
	}

	public String sFinalQueryComboTipoPrecio="";

	public List<TipoPrecio> tipopreciosForeignKey;

	public List<TipoPrecio> gettipopreciosForeignKey() {
		return tipopreciosForeignKey;
	}

	public void settipopreciosForeignKey(List<TipoPrecio> tipopreciosForeignKey) {
		this.tipopreciosForeignKey = tipopreciosForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoPrecio tipoprecioForeignKey;

	public TipoPrecio gettipoprecioForeignKey() {
		return tipoprecioForeignKey;
	}

	public void settipoprecioForeignKey(TipoPrecio tipoprecioForeignKey) {
		this.tipoprecioForeignKey = tipoprecioForeignKey;
	}

	public String sFinalQueryComboFormato="";

	public List<Formato> formatosForeignKey;

	public List<Formato> getformatosForeignKey() {
		return formatosForeignKey;
	}

	public void setformatosForeignKey(List<Formato> formatosForeignKey) {
		this.formatosForeignKey = formatosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Formato formatoForeignKey;

	public Formato getformatoForeignKey() {
		return formatoForeignKey;
	}

	public void setformatoForeignKey(Formato formatoForeignKey) {
		this.formatoForeignKey = formatoForeignKey;
	}

	public String sFinalQueryComboCliente="";

	public List<Cliente> clientesForeignKey;

	public List<Cliente> getclientesForeignKey() {
		return clientesForeignKey;
	}

	public void setclientesForeignKey(List<Cliente> clientesForeignKey) {
		this.clientesForeignKey = clientesForeignKey;
	}

	//OBJETO FK ACTUAL
	public Cliente clienteForeignKey;

	public Cliente getclienteForeignKey() {
		return clienteForeignKey;
	}

	public void setclienteForeignKey(Cliente clienteForeignKey) {
		this.clienteForeignKey = clienteForeignKey;
	}

	public String sFinalQueryComboSubCliente="";

	public List<SubCliente> subclientesForeignKey;

	public List<SubCliente> getsubclientesForeignKey() {
		return subclientesForeignKey;
	}

	public void setsubclientesForeignKey(List<SubCliente> subclientesForeignKey) {
		this.subclientesForeignKey = subclientesForeignKey;
	}

	//OBJETO FK ACTUAL
	public SubCliente subclienteForeignKey;

	public SubCliente getsubclienteForeignKey() {
		return subclienteForeignKey;
	}

	public void setsubclienteForeignKey(SubCliente subclienteForeignKey) {
		this.subclienteForeignKey = subclienteForeignKey;
	}

	public String sFinalQueryComboVendedor="";

	public List<Vendedor> vendedorsForeignKey;

	public List<Vendedor> getvendedorsForeignKey() {
		return vendedorsForeignKey;
	}

	public void setvendedorsForeignKey(List<Vendedor> vendedorsForeignKey) {
		this.vendedorsForeignKey = vendedorsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Vendedor vendedorForeignKey;

	public Vendedor getvendedorForeignKey() {
		return vendedorForeignKey;
	}

	public void setvendedorForeignKey(Vendedor vendedorForeignKey) {
		this.vendedorForeignKey = vendedorForeignKey;
	}

	public String sFinalQueryComboConsultor="";

	public List<Consultor> consultorsForeignKey;

	public List<Consultor> getconsultorsForeignKey() {
		return consultorsForeignKey;
	}

	public void setconsultorsForeignKey(List<Consultor> consultorsForeignKey) {
		this.consultorsForeignKey = consultorsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Consultor consultorForeignKey;

	public Consultor getconsultorForeignKey() {
		return consultorForeignKey;
	}

	public void setconsultorForeignKey(Consultor consultorForeignKey) {
		this.consultorForeignKey = consultorForeignKey;
	}

	public String sFinalQueryComboResponsable="";

	public List<Responsable> responsablesForeignKey;

	public List<Responsable> getresponsablesForeignKey() {
		return responsablesForeignKey;
	}

	public void setresponsablesForeignKey(List<Responsable> responsablesForeignKey) {
		this.responsablesForeignKey = responsablesForeignKey;
	}

	//OBJETO FK ACTUAL
	public Responsable responsableForeignKey;

	public Responsable getresponsableForeignKey() {
		return responsableForeignKey;
	}

	public void setresponsableForeignKey(Responsable responsableForeignKey) {
		this.responsableForeignKey = responsableForeignKey;
	}

	public String sFinalQueryComboEstadoPedido="";

	public List<EstadoPedido> estadopedidosForeignKey;

	public List<EstadoPedido> getestadopedidosForeignKey() {
		return estadopedidosForeignKey;
	}

	public void setestadopedidosForeignKey(List<EstadoPedido> estadopedidosForeignKey) {
		this.estadopedidosForeignKey = estadopedidosForeignKey;
	}

	//OBJETO FK ACTUAL
	public EstadoPedido estadopedidoForeignKey;

	public EstadoPedido getestadopedidoForeignKey() {
		return estadopedidoForeignKey;
	}

	public void setestadopedidoForeignKey(EstadoPedido estadopedidoForeignKey) {
		this.estadopedidoForeignKey = estadopedidoForeignKey;
	}

	public String sFinalQueryComboTransporte="";

	public List<Transporte> transportesForeignKey;

	public List<Transporte> gettransportesForeignKey() {
		return transportesForeignKey;
	}

	public void settransportesForeignKey(List<Transporte> transportesForeignKey) {
		this.transportesForeignKey = transportesForeignKey;
	}

	//OBJETO FK ACTUAL
	public Transporte transporteForeignKey;

	public Transporte gettransporteForeignKey() {
		return transporteForeignKey;
	}

	public void settransporteForeignKey(Transporte transporteForeignKey) {
		this.transporteForeignKey = transporteForeignKey;
	}

	public String sFinalQueryComboRutaTransporte="";

	public List<RutaTransporte> rutatransportesForeignKey;

	public List<RutaTransporte> getrutatransportesForeignKey() {
		return rutatransportesForeignKey;
	}

	public void setrutatransportesForeignKey(List<RutaTransporte> rutatransportesForeignKey) {
		this.rutatransportesForeignKey = rutatransportesForeignKey;
	}

	//OBJETO FK ACTUAL
	public RutaTransporte rutatransporteForeignKey;

	public RutaTransporte getrutatransporteForeignKey() {
		return rutatransporteForeignKey;
	}

	public void setrutatransporteForeignKey(RutaTransporte rutatransporteForeignKey) {
		this.rutatransporteForeignKey = rutatransporteForeignKey;
	}

	public String sFinalQueryComboTipoLlamada="";

	public List<TipoLlamada> tipollamadasForeignKey;

	public List<TipoLlamada> gettipollamadasForeignKey() {
		return tipollamadasForeignKey;
	}

	public void settipollamadasForeignKey(List<TipoLlamada> tipollamadasForeignKey) {
		this.tipollamadasForeignKey = tipollamadasForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoLlamada tipollamadaForeignKey;

	public TipoLlamada gettipollamadaForeignKey() {
		return tipollamadaForeignKey;
	}

	public void settipollamadaForeignKey(TipoLlamada tipollamadaForeignKey) {
		this.tipollamadaForeignKey = tipollamadaForeignKey;
	}

	public String sFinalQueryComboTransportista="";

	public List<Transportista> transportistasForeignKey;

	public List<Transportista> gettransportistasForeignKey() {
		return transportistasForeignKey;
	}

	public void settransportistasForeignKey(List<Transportista> transportistasForeignKey) {
		this.transportistasForeignKey = transportistasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Transportista transportistaForeignKey;

	public Transportista gettransportistaForeignKey() {
		return transportistaForeignKey;
	}

	public void settransportistaForeignKey(Transportista transportistaForeignKey) {
		this.transportistaForeignKey = transportistaForeignKey;
	}

	public String sFinalQueryComboTipoCambio="";

	public List<TipoCambio> tipocambiosForeignKey;

	public List<TipoCambio> gettipocambiosForeignKey() {
		return tipocambiosForeignKey;
	}

	public void settipocambiosForeignKey(List<TipoCambio> tipocambiosForeignKey) {
		this.tipocambiosForeignKey = tipocambiosForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoCambio tipocambioForeignKey;

	public TipoCambio gettipocambioForeignKey() {
		return tipocambioForeignKey;
	}

	public void settipocambioForeignKey(TipoCambio tipocambioForeignKey) {
		this.tipocambioForeignKey = tipocambioForeignKey;
	}

	public String sFinalQueryComboCentroCosto="";

	public List<CentroCosto> centrocostosForeignKey;

	public List<CentroCosto> getcentrocostosForeignKey() {
		return centrocostosForeignKey;
	}

	public void setcentrocostosForeignKey(List<CentroCosto> centrocostosForeignKey) {
		this.centrocostosForeignKey = centrocostosForeignKey;
	}

	//OBJETO FK ACTUAL
	public CentroCosto centrocostoForeignKey;

	public CentroCosto getcentrocostoForeignKey() {
		return centrocostoForeignKey;
	}

	public void setcentrocostoForeignKey(CentroCosto centrocostoForeignKey) {
		this.centrocostoForeignKey = centrocostoForeignKey;
	}

	public String sFinalQueryComboZona="";

	public List<Zona> zonasForeignKey;

	public List<Zona> getzonasForeignKey() {
		return zonasForeignKey;
	}

	public void setzonasForeignKey(List<Zona> zonasForeignKey) {
		this.zonasForeignKey = zonasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Zona zonaForeignKey;

	public Zona getzonaForeignKey() {
		return zonaForeignKey;
	}

	public void setzonaForeignKey(Zona zonaForeignKey) {
		this.zonaForeignKey = zonaForeignKey;
	}

		
	
	
	
	//BUSQUEDA INTERNA FK
	public Long idEmpleadoActual=0L;

	public Long getidEmpleadoActual() {
		return idEmpleadoActual;
	}

	public void setidEmpleadoActual(Long idEmpleadoActual) {
		this.idEmpleadoActual= idEmpleadoActual;
	}
	public Long idClienteActual=0L;

	public Long getidClienteActual() {
		return idClienteActual;
	}

	public void setidClienteActual(Long idClienteActual) {
		this.idClienteActual= idClienteActual;
	}
	public Long idVendedorActual=0L;

	public Long getidVendedorActual() {
		return idVendedorActual;
	}

	public void setidVendedorActual(Long idVendedorActual) {
		this.idVendedorActual= idVendedorActual;
	}
	public Long idTipoCambioActual=0L;

	public Long getidTipoCambioActual() {
		return idTipoCambioActual;
	}

	public void setidTipoCambioActual(Long idTipoCambioActual) {
		this.idTipoCambioActual= idTipoCambioActual;
	}
	public Long idCentroCostoActual=0L;

	public Long getidCentroCostoActual() {
		return idCentroCostoActual;
	}

	public void setidCentroCostoActual(Long idCentroCostoActual) {
		this.idCentroCostoActual= idCentroCostoActual;
	}
	
	

	public Boolean isTienePermisosDetallePedido=false;

	public Boolean getIsTienePermisosDetallePedido() {
		return isTienePermisosDetallePedido;
	}

	public void setIsTienePermisosDetallePedido(Boolean isTienePermisosDetallePedido) {
		this.isTienePermisosDetallePedido= isTienePermisosDetallePedido;
	}

	
	
	//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
	public String sFinalQueryGeneral="";
	public Boolean isEntroOnLoad=false;
	public Boolean isErrorGuardar=false;
	
	public Boolean isGuardarCambiosEnLote=false;
	public Boolean isCargarCombosDependencia=false;
	public Boolean isSeleccionarTodos=false;
	public Boolean isSeleccionados=false;
	public Boolean conGraficoReporte=false;
	
	public Boolean isPostAccionNuevo=false;
	public Boolean isPostAccionSinCerrar=false;
	public Boolean isPostAccionSinMensaje=false;
	
	
	public Boolean esControlTabla=false;
	
	public Boolean isPermisoTodoPedido;
	public Boolean isPermisoNuevoPedido;
	public Boolean isPermisoActualizarPedido;
	public Boolean isPermisoActualizarOriginalPedido;
	public Boolean isPermisoEliminarPedido;
	public Boolean isPermisoGuardarCambiosPedido;
	public Boolean isPermisoConsultaPedido;
	public Boolean isPermisoBusquedaPedido;
	public Boolean isPermisoReportePedido;
	public Boolean isPermisoPaginacionMedioPedido;
	public Boolean isPermisoPaginacionAltoPedido;
	public Boolean isPermisoPaginacionTodoPedido;
	public Boolean isPermisoCopiarPedido;
	public Boolean isPermisoVerFormPedido;
	public Boolean isPermisoDuplicarPedido;
	public Boolean isPermisoOrdenPedido;
	
	
	public ArrayList<DatoGeneral> arrDatoGeneral;
	public ArrayList<String> arrDatoGeneralNo;
	ArrayList<Classe> classesActual=new ArrayList<Classe>();
	
	public List<Accion> accions;	
	public List<Accion> accionsFormulario;
	
	
	public ArrayList<DatoGeneralMinimo> arrDatoGeneralMinimos;
	
	public ArrayList<Reporte> tiposArchivosReportes;
	public ArrayList<Reporte> tiposArchivosReportesDinamico;
	public ArrayList<Reporte> tiposReportes;
	public ArrayList<Reporte> tiposReportesDinamico;
	public ArrayList<Reporte> tiposGraficosReportes;
	public ArrayList<Reporte> tiposPaginacion;
	public ArrayList<Reporte> tiposRelaciones;
	public ArrayList<Reporte> tiposAcciones;
	public ArrayList<Reporte> tiposAccionesFormulario;
	public ArrayList<Reporte> tiposSeleccionar;
	
	public ArrayList<Reporte> tiposColumnasSelect;
	public ArrayList<Reporte> tiposRelacionesSelect;
	
	
	public Integer iNumeroPaginacion;
	public Integer iNumeroPaginacionPagina;
	public Pagination pagination;
	public DatosCliente datosCliente;
	public DatosDeep datosDeep;
	public String sTipoArchivoReporte="";
	public String sTipoArchivoReporteDinamico="";
	public String sTipoReporte="";
	public String sTipoReporteDinamico="";
	public String sTipoGraficoReporte="";
	public String sTipoPaginacion="";
	public String sTipoRelacion="";
	public String sTipoAccion="";
	public String sTipoAccionFormulario="";
	public String sTipoSeleccionar="";	
	public String sDetalleReporte="";
	public Boolean isMostrarNumeroPaginacion;
	public String sTipoReporteExtra="";
	public String sValorCampoGeneral="";
	public Boolean esReporteDinamico=false;
	public Boolean esReporteAccionProceso=false;
	public Boolean esRecargarFks=false;
	public String sPathReporteDinamico="";
	
	public PedidoParameterReturnGeneral pedidoReturnGeneral;
	public PedidoParameterReturnGeneral pedidoParameterGeneral;
	
	

	public DetallePedidoLogic detallepedidoLogic=null;

	public DetallePedidoLogic getDetallePedidoLogic() {
		return detallepedidoLogic;
	}

	public void setDetallePedidoLogic(DetallePedidoLogic detallepedidoLogic) {
		this.detallepedidoLogic = detallepedidoLogic;
	}
 	
	public JasperPrint jasperPrint = null;
	
	public Long lIdUsuarioSesion=0L;				
	
	public Boolean isEsNuevoPedido=false;
	public Boolean esParaAccionDesdeFormularioPedido=false;
	public Boolean isEsMantenimientoRelacionesRelacionadoUnico=false;
	public Boolean isEsMantenimientoRelaciones=false;
	public Boolean isEsMantenimientoRelacionado=false;	
	public Boolean isContieneImagenes=false;
		
	//public Boolean conTotales=false; //Viene heredado de JInternalFrameBase
	//public Boolean esParaBusquedaForeignKey=false;
	
	
	protected PedidoSessionBeanAdditional pedidoSessionBeanAdditional=null;
	
	public PedidoSessionBeanAdditional getPedidoSessionBeanAdditional() {
		return this.pedidoSessionBeanAdditional;
	}
	
	public void setPedidoSessionBeanAdditional(PedidoSessionBeanAdditional pedidoSessionBeanAdditional) {
		try {
			this.pedidoSessionBeanAdditional=pedidoSessionBeanAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	protected PedidoBeanSwingJInternalFrameAdditional pedidoBeanSwingJInternalFrameAdditional=null;
	//public class PedidoBeanSwingJInternalFrame
	
	public PedidoBeanSwingJInternalFrameAdditional getPedidoBeanSwingJInternalFrameAdditional() {
		return this.pedidoBeanSwingJInternalFrameAdditional;
	}
	
	public void setPedidoBeanSwingJInternalFrameAdditional(PedidoBeanSwingJInternalFrameAdditional pedidoBeanSwingJInternalFrameAdditional) {
		try {
			this.pedidoBeanSwingJInternalFrameAdditional=pedidoBeanSwingJInternalFrameAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	//ESTA EN PADRE
	
	//public PedidoLogic pedidoLogic;
	public SistemaLogicAdditional sistemaLogicAdditional;
	
	
	public Pedido pedidoBean;
	public PedidoConstantesFunciones pedidoConstantesFunciones;
	//public PedidoParameterReturnGeneral pedidoReturnGeneral;
	
	//FK
	
	public EmpresaLogic empresaLogic;
	public SucursalLogic sucursalLogic;
	public EjercicioLogic ejercicioLogic;
	public PeriodoLogic periodoLogic;
	public AnioLogic anioLogic;
	public MesLogic mesLogic;
	public UsuarioLogic usuarioLogic;
	public MonedaLogic monedaLogic;
	public EmpleadoLogic empleadoLogic;
	public TipoPrecioLogic tipoprecioLogic;
	public FormatoLogic formatoLogic;
	public ClienteLogic clienteLogic;
	public SubClienteLogic subclienteLogic;
	public VendedorLogic vendedorLogic;
	public ConsultorLogic consultorLogic;
	public ResponsableLogic responsableLogic;
	public EstadoPedidoLogic estadopedidoLogic;
	public TransporteLogic transporteLogic;
	public RutaTransporteLogic rutatransporteLogic;
	public TipoLlamadaLogic tipollamadaLogic;
	public TransportistaLogic transportistaLogic;
	public TipoCambioLogic tipocambioLogic;
	public CentroCostoLogic centrocostoLogic;
	public ZonaLogic zonaLogic;
	
	//PARAMETROS
	
	
	//public List<Pedido> pedidos;	
	//public List<Pedido> pedidosEliminados;
	//public List<Pedido> pedidosAux;
	
	public String sAccionMantenimiento="";
	public String sAccionBusqueda="";
	public String sAccionAdicional="";
	public String sUltimaBusqueda="";
	
	public Mensaje mensaje;
	
	
	public String sVisibilidadTablaBusquedas="";					
	public String sVisibilidadTablaElementos="";	
	public String sVisibilidadTablaAcciones="";			
	
	public Boolean isVisibilidadCeldaNuevoPedido=false;
	public Boolean isVisibilidadCeldaDuplicarPedido=true;
	public Boolean isVisibilidadCeldaCopiarPedido=true;
	public Boolean isVisibilidadCeldaVerFormPedido=true;
	public Boolean isVisibilidadCeldaOrdenPedido=true;
	public Boolean isVisibilidadCeldaNuevoRelacionesPedido=false;
	public Boolean isVisibilidadCeldaModificarPedido=false;
	public Boolean isVisibilidadCeldaActualizarPedido=false;
	public Boolean isVisibilidadCeldaEliminarPedido=false;
	public Boolean isVisibilidadCeldaCancelarPedido=false;
	public Boolean isVisibilidadCeldaGuardarPedido=false;	
	public Boolean isVisibilidadCeldaGuardarCambiosPedido=false;	
	
	
	public Boolean isVisibilidadFK_IdAnio=false;
	public Boolean isVisibilidadFK_IdCentroCosto=false;
	public Boolean isVisibilidadFK_IdCliente=false;
	public Boolean isVisibilidadFK_IdConsultor=false;
	public Boolean isVisibilidadFK_IdEjercicio=false;
	public Boolean isVisibilidadFK_IdEmpleado=false;
	public Boolean isVisibilidadFK_IdEmpresa=false;
	public Boolean isVisibilidadFK_IdEstadoPedido=false;
	public Boolean isVisibilidadFK_IdFormato=false;
	public Boolean isVisibilidadFK_IdMes=false;
	public Boolean isVisibilidadFK_IdMoneda=false;
	public Boolean isVisibilidadFK_IdPeriodo=false;
	public Boolean isVisibilidadFK_IdResponsable=false;
	public Boolean isVisibilidadFK_IdRutaTransporte=false;
	public Boolean isVisibilidadFK_IdSubCliente=false;
	public Boolean isVisibilidadFK_IdSucursal=false;
	public Boolean isVisibilidadFK_IdTipoCambio=false;
	public Boolean isVisibilidadFK_IdTipoLlamada=false;
	public Boolean isVisibilidadFK_IdTipoPrecio=false;
	public Boolean isVisibilidadFK_IdTransporte=false;
	public Boolean isVisibilidadFK_IdTransportista=false;
	public Boolean isVisibilidadFK_IdUsuario=false;
	public Boolean isVisibilidadFK_IdVendedor=false;
	public Boolean isVisibilidadFK_IdZona=false;
	
	public Long getiIdNuevoPedido() {
		return this.iIdNuevoPedido;
	}

	public void setiIdNuevoPedido(Long iIdNuevoPedido) {
		this.iIdNuevoPedido = iIdNuevoPedido;
	}
	
	public Long getidPedidoActual() {
		return this.idPedidoActual;
	}

	public void setidPedidoActual(Long idPedidoActual) {
		this.idPedidoActual = idPedidoActual;
	}
	
	public int getrowIndexActual() {
		return this.rowIndexActual;
	}

	public void setrowIndexActual(int rowIndexActual) {
		this.rowIndexActual=rowIndexActual;
	}
	
	
	public Pedido getpedido() {
		return this.pedido;
	}

	public void setpedido(Pedido pedido) {
		this.pedido = pedido;
	}
	
	public Pedido getpedidoAux() {
		return this.pedidoAux;
	}

	public void setpedidoAux(Pedido pedidoAux) {
		this.pedidoAux = pedidoAux;
	}				
	
	public Pedido getpedidoAnterior() {
		return this.pedidoAnterior;
	}

	public void setpedidoAnterior(Pedido pedidoAnterior) {
		this.pedidoAnterior = pedidoAnterior;
	}	
	
	public Pedido getpedidoTotales() {
		return this.pedidoTotales;
	}

	public void setpedidoTotales(Pedido pedidoTotales) {
		this.pedidoTotales = pedidoTotales;
	}	
	
	public Pedido getpedidoBean() {
		return this.pedidoBean;
	}

	public void setpedidoBean(Pedido pedidoBean) {
		this.pedidoBean = pedidoBean;
	}	
	
	public PedidoParameterReturnGeneral getpedidoReturnGeneral() {
		return this.pedidoReturnGeneral;
	}

	public void setpedidoReturnGeneral(PedidoParameterReturnGeneral pedidoReturnGeneral) {
		this.pedidoReturnGeneral = pedidoReturnGeneral;
	}	
	
	
	public Long id_anioFK_IdAnio=null;

	public Long getid_anioFK_IdAnio() {
		return this.id_anioFK_IdAnio;
	}

	public void setid_anioFK_IdAnio(Long id_anioFK_IdAnio) {
		this.id_anioFK_IdAnio = id_anioFK_IdAnio;
	}

	public Long id_centro_costoFK_IdCentroCosto=null;

	public Long getid_centro_costoFK_IdCentroCosto() {
		return this.id_centro_costoFK_IdCentroCosto;
	}

	public void setid_centro_costoFK_IdCentroCosto(Long id_centro_costoFK_IdCentroCosto) {
		this.id_centro_costoFK_IdCentroCosto = id_centro_costoFK_IdCentroCosto;
	}

	public Long id_clienteFK_IdCliente=-1L;

	public Long getid_clienteFK_IdCliente() {
		return this.id_clienteFK_IdCliente;
	}

	public void setid_clienteFK_IdCliente(Long id_clienteFK_IdCliente) {
		this.id_clienteFK_IdCliente = id_clienteFK_IdCliente;
	}

	public Long id_consultorFK_IdConsultor=null;

	public Long getid_consultorFK_IdConsultor() {
		return this.id_consultorFK_IdConsultor;
	}

	public void setid_consultorFK_IdConsultor(Long id_consultorFK_IdConsultor) {
		this.id_consultorFK_IdConsultor = id_consultorFK_IdConsultor;
	}

	public Long id_ejercicioFK_IdEjercicio=-1L;

	public Long getid_ejercicioFK_IdEjercicio() {
		return this.id_ejercicioFK_IdEjercicio;
	}

	public void setid_ejercicioFK_IdEjercicio(Long id_ejercicioFK_IdEjercicio) {
		this.id_ejercicioFK_IdEjercicio = id_ejercicioFK_IdEjercicio;
	}

	public Long id_empleadoFK_IdEmpleado=-1L;

	public Long getid_empleadoFK_IdEmpleado() {
		return this.id_empleadoFK_IdEmpleado;
	}

	public void setid_empleadoFK_IdEmpleado(Long id_empleadoFK_IdEmpleado) {
		this.id_empleadoFK_IdEmpleado = id_empleadoFK_IdEmpleado;
	}

	public Long id_empresaFK_IdEmpresa=-1L;

	public Long getid_empresaFK_IdEmpresa() {
		return this.id_empresaFK_IdEmpresa;
	}

	public void setid_empresaFK_IdEmpresa(Long id_empresaFK_IdEmpresa) {
		this.id_empresaFK_IdEmpresa = id_empresaFK_IdEmpresa;
	}

	public Long id_estado_pedidoFK_IdEstadoPedido=1L;

	public Long getid_estado_pedidoFK_IdEstadoPedido() {
		return this.id_estado_pedidoFK_IdEstadoPedido;
	}

	public void setid_estado_pedidoFK_IdEstadoPedido(Long id_estado_pedidoFK_IdEstadoPedido) {
		this.id_estado_pedidoFK_IdEstadoPedido = id_estado_pedidoFK_IdEstadoPedido;
	}

	public Long id_formatoFK_IdFormato=null;

	public Long getid_formatoFK_IdFormato() {
		return this.id_formatoFK_IdFormato;
	}

	public void setid_formatoFK_IdFormato(Long id_formatoFK_IdFormato) {
		this.id_formatoFK_IdFormato = id_formatoFK_IdFormato;
	}

	public Long id_mesFK_IdMes=null;

	public Long getid_mesFK_IdMes() {
		return this.id_mesFK_IdMes;
	}

	public void setid_mesFK_IdMes(Long id_mesFK_IdMes) {
		this.id_mesFK_IdMes = id_mesFK_IdMes;
	}

	public Long id_monedaFK_IdMoneda=-1L;

	public Long getid_monedaFK_IdMoneda() {
		return this.id_monedaFK_IdMoneda;
	}

	public void setid_monedaFK_IdMoneda(Long id_monedaFK_IdMoneda) {
		this.id_monedaFK_IdMoneda = id_monedaFK_IdMoneda;
	}

	public Long id_periodoFK_IdPeriodo=-1L;

	public Long getid_periodoFK_IdPeriodo() {
		return this.id_periodoFK_IdPeriodo;
	}

	public void setid_periodoFK_IdPeriodo(Long id_periodoFK_IdPeriodo) {
		this.id_periodoFK_IdPeriodo = id_periodoFK_IdPeriodo;
	}

	public Long id_responsableFK_IdResponsable=null;

	public Long getid_responsableFK_IdResponsable() {
		return this.id_responsableFK_IdResponsable;
	}

	public void setid_responsableFK_IdResponsable(Long id_responsableFK_IdResponsable) {
		this.id_responsableFK_IdResponsable = id_responsableFK_IdResponsable;
	}

	public Long id_ruta_transporteFK_IdRutaTransporte=null;

	public Long getid_ruta_transporteFK_IdRutaTransporte() {
		return this.id_ruta_transporteFK_IdRutaTransporte;
	}

	public void setid_ruta_transporteFK_IdRutaTransporte(Long id_ruta_transporteFK_IdRutaTransporte) {
		this.id_ruta_transporteFK_IdRutaTransporte = id_ruta_transporteFK_IdRutaTransporte;
	}

	public Long id_sub_clienteFK_IdSubCliente=null;

	public Long getid_sub_clienteFK_IdSubCliente() {
		return this.id_sub_clienteFK_IdSubCliente;
	}

	public void setid_sub_clienteFK_IdSubCliente(Long id_sub_clienteFK_IdSubCliente) {
		this.id_sub_clienteFK_IdSubCliente = id_sub_clienteFK_IdSubCliente;
	}

	public Long id_sucursalFK_IdSucursal=-1L;

	public Long getid_sucursalFK_IdSucursal() {
		return this.id_sucursalFK_IdSucursal;
	}

	public void setid_sucursalFK_IdSucursal(Long id_sucursalFK_IdSucursal) {
		this.id_sucursalFK_IdSucursal = id_sucursalFK_IdSucursal;
	}

	public Long id_tipo_cambioFK_IdTipoCambio=null;

	public Long getid_tipo_cambioFK_IdTipoCambio() {
		return this.id_tipo_cambioFK_IdTipoCambio;
	}

	public void setid_tipo_cambioFK_IdTipoCambio(Long id_tipo_cambioFK_IdTipoCambio) {
		this.id_tipo_cambioFK_IdTipoCambio = id_tipo_cambioFK_IdTipoCambio;
	}

	public Long id_tipo_llamadaFK_IdTipoLlamada=null;

	public Long getid_tipo_llamadaFK_IdTipoLlamada() {
		return this.id_tipo_llamadaFK_IdTipoLlamada;
	}

	public void setid_tipo_llamadaFK_IdTipoLlamada(Long id_tipo_llamadaFK_IdTipoLlamada) {
		this.id_tipo_llamadaFK_IdTipoLlamada = id_tipo_llamadaFK_IdTipoLlamada;
	}

	public Long id_tipo_precioFK_IdTipoPrecio=-1L;

	public Long getid_tipo_precioFK_IdTipoPrecio() {
		return this.id_tipo_precioFK_IdTipoPrecio;
	}

	public void setid_tipo_precioFK_IdTipoPrecio(Long id_tipo_precioFK_IdTipoPrecio) {
		this.id_tipo_precioFK_IdTipoPrecio = id_tipo_precioFK_IdTipoPrecio;
	}

	public Long id_transporteFK_IdTransporte=null;

	public Long getid_transporteFK_IdTransporte() {
		return this.id_transporteFK_IdTransporte;
	}

	public void setid_transporteFK_IdTransporte(Long id_transporteFK_IdTransporte) {
		this.id_transporteFK_IdTransporte = id_transporteFK_IdTransporte;
	}

	public Long id_transportistaFK_IdTransportista=null;

	public Long getid_transportistaFK_IdTransportista() {
		return this.id_transportistaFK_IdTransportista;
	}

	public void setid_transportistaFK_IdTransportista(Long id_transportistaFK_IdTransportista) {
		this.id_transportistaFK_IdTransportista = id_transportistaFK_IdTransportista;
	}

	public Long id_usuarioFK_IdUsuario=-1L;

	public Long getid_usuarioFK_IdUsuario() {
		return this.id_usuarioFK_IdUsuario;
	}

	public void setid_usuarioFK_IdUsuario(Long id_usuarioFK_IdUsuario) {
		this.id_usuarioFK_IdUsuario = id_usuarioFK_IdUsuario;
	}

	public Long id_vendedorFK_IdVendedor=null;

	public Long getid_vendedorFK_IdVendedor() {
		return this.id_vendedorFK_IdVendedor;
	}

	public void setid_vendedorFK_IdVendedor(Long id_vendedorFK_IdVendedor) {
		this.id_vendedorFK_IdVendedor = id_vendedorFK_IdVendedor;
	}

	public Long id_zonaFK_IdZona=null;

	public Long getid_zonaFK_IdZona() {
		return this.id_zonaFK_IdZona;
	}

	public void setid_zonaFK_IdZona(Long id_zonaFK_IdZona) {
		this.id_zonaFK_IdZona = id_zonaFK_IdZona;
	}

		
	
	//ELEMENTOS TABLAS PARAMETOS
	
	
	
	
	
	
	//ELEMENTOS TABLAS PARAMETOS_FIN
	
	
	public PedidoLogic getPedidoLogic()	{		
		return pedidoLogic;
	}

	public void setPedidoLogic(PedidoLogic pedidoLogic) {
		this.pedidoLogic = pedidoLogic;
	}
	
	
	public void setsFinalQueryGeneral(String sFinalQueryGeneral) {
		this.sFinalQueryGeneral=sFinalQueryGeneral;
	}
	
	public String getsFinalQueryGeneral() {
		return this.sFinalQueryGeneral;
	}
		
	public Boolean getIsGuardarCambiosEnLote() {
		return isGuardarCambiosEnLote;
	}

	public void setIsGuardarCambiosEnLote(Boolean isGuardarCambiosEnLote) {
		this.isGuardarCambiosEnLote = isGuardarCambiosEnLote;
	}
	
	public Boolean getIsCargarCombosDependencia() {
		return isCargarCombosDependencia;
	}

	public void setIsCargarCombosDependencia(Boolean isCargarCombosDependencia) {
		this.isCargarCombosDependencia = isCargarCombosDependencia;
	}
	
	public Boolean getIsEsNuevoPedido() {
		return isEsNuevoPedido;
	}

	public void setIsEsNuevoPedido(Boolean isEsNuevoPedido) {
		this.isEsNuevoPedido = isEsNuevoPedido;
	}

	public Boolean getEsParaAccionDesdeFormularioPedido() {
		return esParaAccionDesdeFormularioPedido;
	}
	
	public void setEsParaAccionDesdeFormularioPedido(Boolean esParaAccionDesdeFormularioPedido) {
		this.esParaAccionDesdeFormularioPedido = esParaAccionDesdeFormularioPedido;
	}
	
	public Boolean getIsEsMantenimientoRelacionesRelacionadoUnico() {
		return isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public void setIsEsMantenimientoRelacionesRelacionadoUnico(Boolean isEsMantenimientoRelacionesRelacionadoUnico) {
		this.isEsMantenimientoRelacionesRelacionadoUnico = isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public Boolean getIsEsMantenimientoRelaciones() {
		return isEsMantenimientoRelaciones;
	}

	public void setIsEsMantenimientoRelaciones(Boolean isEsMantenimientoRelaciones) {
		this.isEsMantenimientoRelaciones = isEsMantenimientoRelaciones;
	}

	public Boolean getIsEsMantenimientoRelacionado() {
		return isEsMantenimientoRelacionado;
	}

	public void setIsEsMantenimientoRelacionado(Boolean isEsMantenimientoRelacionado) {
		this.isEsMantenimientoRelacionado = isEsMantenimientoRelacionado;
	}

	public Boolean getesParaBusquedaForeignKey() {
		return esParaBusquedaForeignKey;
	}

	public void setesParaBusquedaForeignKey(Boolean esParaBusquedaForeignKey) {
		this.esParaBusquedaForeignKey = esParaBusquedaForeignKey;
	}

	public Boolean getIsContieneImagenes() {
		return isContieneImagenes;
	}

	public void setIsContieneImagenes(Boolean isContieneImagenes) {
		this.isContieneImagenes = isContieneImagenes;
	}		
	
	
	public void cargarCombosEmpresasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.empresasForeignKey=new ArrayList<Empresa>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EmpresaLogic empresaLogic=new EmpresaLogic();

			//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

			if(this.pedidoSessionBean==null) {
				this.pedidoSessionBean=new PedidoSessionBean();
			}

			if(!this.pedidoSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

					empresaLogic.getTodosEmpresasWithConnection(sFinalQuery,new Pagination());

					this.empresasForeignKey=empresaLogic.getEmpresas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEmpresa(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					empresaLogic.getEntityWithConnection(pedidoSessionBean.getlidEmpresaActual());
					this.empresasForeignKey.add(empresaLogic.getEmpresa());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosSucursalsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.sucursalsForeignKey=new ArrayList<Sucursal>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			SucursalLogic sucursalLogic=new SucursalLogic();

			//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

			if(this.pedidoSessionBean==null) {
				this.pedidoSessionBean=new PedidoSessionBean();
			}

			if(!this.pedidoSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

					sucursalLogic.getTodosSucursalsWithConnection(sFinalQuery,new Pagination());

					this.sucursalsForeignKey=sucursalLogic.getSucursals();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaSucursal(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					sucursalLogic.getEntityWithConnection(pedidoSessionBean.getlidSucursalActual());
					this.sucursalsForeignKey.add(sucursalLogic.getSucursal());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEjerciciosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.ejerciciosForeignKey=new ArrayList<Ejercicio>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EjercicioLogic ejercicioLogic=new EjercicioLogic();

			//ejercicioLogic.getEjercicioDataAccess().setIsForForeingKeyData(true);

			if(this.pedidoSessionBean==null) {
				this.pedidoSessionBean=new PedidoSessionBean();
			}

			if(!this.pedidoSessionBean.getisBusquedaDesdeForeignKeySesionEjercicio()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//ejercicioLogic.getEjercicioDataAccess().setIsForForeingKeyData(true);

					ejercicioLogic.getTodosEjerciciosWithConnection(sFinalQuery,new Pagination());

					this.ejerciciosForeignKey=ejercicioLogic.getEjercicios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEjercicio(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					ejercicioLogic.getEntityWithConnection(pedidoSessionBean.getlidEjercicioActual());
					this.ejerciciosForeignKey.add(ejercicioLogic.getEjercicio());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosPeriodosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.periodosForeignKey=new ArrayList<Periodo>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			PeriodoLogic periodoLogic=new PeriodoLogic();

			//periodoLogic.getPeriodoDataAccess().setIsForForeingKeyData(true);

			if(this.pedidoSessionBean==null) {
				this.pedidoSessionBean=new PedidoSessionBean();
			}

			if(!this.pedidoSessionBean.getisBusquedaDesdeForeignKeySesionPeriodo()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//periodoLogic.getPeriodoDataAccess().setIsForForeingKeyData(true);

					periodoLogic.getTodosPeriodosWithConnection(sFinalQuery,new Pagination());

					this.periodosForeignKey=periodoLogic.getPeriodos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaPeriodo(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					periodoLogic.getEntityWithConnection(pedidoSessionBean.getlidPeriodoActual());
					this.periodosForeignKey.add(periodoLogic.getPeriodo());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosAniosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.aniosForeignKey=new ArrayList<Anio>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			AnioLogic anioLogic=new AnioLogic();

			//anioLogic.getAnioDataAccess().setIsForForeingKeyData(true);

			if(this.pedidoSessionBean==null) {
				this.pedidoSessionBean=new PedidoSessionBean();
			}

			if(!this.pedidoSessionBean.getisBusquedaDesdeForeignKeySesionAnio()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//anioLogic.getAnioDataAccess().setIsForForeingKeyData(true);

					anioLogic.getTodosAniosWithConnection(sFinalQuery,new Pagination());

					this.aniosForeignKey=anioLogic.getAnios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaAnio(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					anioLogic.getEntityWithConnection(pedidoSessionBean.getlidAnioActual());
					this.aniosForeignKey.add(anioLogic.getAnio());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosMessForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.messForeignKey=new ArrayList<Mes>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			MesLogic mesLogic=new MesLogic();

			//mesLogic.getMesDataAccess().setIsForForeingKeyData(true);

			if(this.pedidoSessionBean==null) {
				this.pedidoSessionBean=new PedidoSessionBean();
			}

			if(!this.pedidoSessionBean.getisBusquedaDesdeForeignKeySesionMes()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//mesLogic.getMesDataAccess().setIsForForeingKeyData(true);

					mesLogic.getTodosMessWithConnection(sFinalQuery,new Pagination());

					this.messForeignKey=mesLogic.getMess();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaMes(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					mesLogic.getEntityWithConnection(pedidoSessionBean.getlidMesActual());
					this.messForeignKey.add(mesLogic.getMes());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosUsuariosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.usuariosForeignKey=new ArrayList<Usuario>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			UsuarioLogic usuarioLogic=new UsuarioLogic();

			//usuarioLogic.getUsuarioDataAccess().setIsForForeingKeyData(true);

			if(this.pedidoSessionBean==null) {
				this.pedidoSessionBean=new PedidoSessionBean();
			}

			if(!this.pedidoSessionBean.getisBusquedaDesdeForeignKeySesionUsuario()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//usuarioLogic.getUsuarioDataAccess().setIsForForeingKeyData(true);

					usuarioLogic.getTodosUsuariosWithConnection(sFinalQuery,new Pagination());

					this.usuariosForeignKey=usuarioLogic.getUsuarios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaUsuario(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					usuarioLogic.getEntityWithConnection(pedidoSessionBean.getlidUsuarioActual());
					this.usuariosForeignKey.add(usuarioLogic.getUsuario());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosMonedasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.monedasForeignKey=new ArrayList<Moneda>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			MonedaLogic monedaLogic=new MonedaLogic();

			//monedaLogic.getMonedaDataAccess().setIsForForeingKeyData(true);

			if(this.pedidoSessionBean==null) {
				this.pedidoSessionBean=new PedidoSessionBean();
			}

			if(!this.pedidoSessionBean.getisBusquedaDesdeForeignKeySesionMoneda()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//monedaLogic.getMonedaDataAccess().setIsForForeingKeyData(true);

					monedaLogic.getTodosMonedasWithConnection(sFinalQuery,new Pagination());

					this.monedasForeignKey=monedaLogic.getMonedas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaMoneda(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					monedaLogic.getEntityWithConnection(pedidoSessionBean.getlidMonedaActual());
					this.monedasForeignKey.add(monedaLogic.getMoneda());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEmpleadosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.empleadosForeignKey=new ArrayList<Empleado>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EmpleadoLogic empleadoLogic=new EmpleadoLogic();

			//empleadoLogic.getEmpleadoDataAccess().setIsForForeingKeyData(true);

			if(this.pedidoSessionBean==null) {
				this.pedidoSessionBean=new PedidoSessionBean();
			}

			if(!this.pedidoSessionBean.getisBusquedaDesdeForeignKeySesionEmpleado()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//empleadoLogic.getEmpleadoDataAccess().setIsForForeingKeyData(true);

					empleadoLogic.getTodosEmpleadosWithConnection(sFinalQuery,new Pagination());

					this.empleadosForeignKey=empleadoLogic.getEmpleados();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEmpleado(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					empleadoLogic.getEntityWithConnection(pedidoSessionBean.getlidEmpleadoActual());
					this.empleadosForeignKey.add(empleadoLogic.getEmpleado());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoPreciosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipopreciosForeignKey=new ArrayList<TipoPrecio>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoPrecioLogic tipoprecioLogic=new TipoPrecioLogic();

			//tipoprecioLogic.getTipoPrecioDataAccess().setIsForForeingKeyData(true);

			if(this.pedidoSessionBean==null) {
				this.pedidoSessionBean=new PedidoSessionBean();
			}

			if(!this.pedidoSessionBean.getisBusquedaDesdeForeignKeySesionTipoPrecio()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tipoprecioLogic.getTipoPrecioDataAccess().setIsForForeingKeyData(true);

					tipoprecioLogic.getTodosTipoPreciosWithConnection(sFinalQuery,new Pagination());

					this.tipopreciosForeignKey=tipoprecioLogic.getTipoPrecios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoPrecio(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipoprecioLogic.getEntityWithConnection(pedidoSessionBean.getlidTipoPrecioActual());
					this.tipopreciosForeignKey.add(tipoprecioLogic.getTipoPrecio());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosFormatosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.formatosForeignKey=new ArrayList<Formato>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			Formato formatoNulo = new Formato();

			FormatoLogic formatoLogic=new FormatoLogic();

			//formatoLogic.getFormatoDataAccess().setIsForForeingKeyData(true);

			if(this.pedidoSessionBean==null) {
				this.pedidoSessionBean=new PedidoSessionBean();
			}

			if(!this.pedidoSessionBean.getisBusquedaDesdeForeignKeySesionFormato()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//formatoLogic.getFormatoDataAccess().setIsForForeingKeyData(true);

					formatoLogic.getTodosFormatosWithConnection(sFinalQuery,new Pagination());

					this.formatosForeignKey=formatoLogic.getFormatos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.formatosForeignKey.add(0, formatoNulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaFormato(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					formatoLogic.getEntityWithConnection(pedidoSessionBean.getlidFormatoActual());
					this.formatosForeignKey.add(formatoLogic.getFormato());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosClientesForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.clientesForeignKey=new ArrayList<Cliente>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			ClienteLogic clienteLogic=new ClienteLogic();

			//clienteLogic.getClienteDataAccess().setIsForForeingKeyData(true);

			if(this.pedidoSessionBean==null) {
				this.pedidoSessionBean=new PedidoSessionBean();
			}

			if(!this.pedidoSessionBean.getisBusquedaDesdeForeignKeySesionCliente()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//clienteLogic.getClienteDataAccess().setIsForForeingKeyData(true);

					clienteLogic.getTodosClientesWithConnection(sFinalQuery,new Pagination());

					this.clientesForeignKey=clienteLogic.getClientes();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCliente(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteLogic.getEntityWithConnection(pedidoSessionBean.getlidClienteActual());
					this.clientesForeignKey.add(clienteLogic.getCliente());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosSubClientesForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.subclientesForeignKey=new ArrayList<SubCliente>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			SubCliente subclienteNulo = new SubCliente();

			SubClienteLogic subclienteLogic=new SubClienteLogic();

			//subclienteLogic.getSubClienteDataAccess().setIsForForeingKeyData(true);

			if(this.pedidoSessionBean==null) {
				this.pedidoSessionBean=new PedidoSessionBean();
			}

			if(!this.pedidoSessionBean.getisBusquedaDesdeForeignKeySesionSubCliente()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//subclienteLogic.getSubClienteDataAccess().setIsForForeingKeyData(true);

					subclienteLogic.getTodosSubClientesWithConnection(sFinalQuery,new Pagination());

					this.subclientesForeignKey=subclienteLogic.getSubClientes();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.subclientesForeignKey.add(0, subclienteNulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaSubCliente(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					subclienteLogic.getEntityWithConnection(pedidoSessionBean.getlidSubClienteActual());
					this.subclientesForeignKey.add(subclienteLogic.getSubCliente());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosVendedorsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.vendedorsForeignKey=new ArrayList<Vendedor>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			Vendedor vendedorNulo = new Vendedor();

			VendedorLogic vendedorLogic=new VendedorLogic();

			//vendedorLogic.getVendedorDataAccess().setIsForForeingKeyData(true);

			if(this.pedidoSessionBean==null) {
				this.pedidoSessionBean=new PedidoSessionBean();
			}

			if(!this.pedidoSessionBean.getisBusquedaDesdeForeignKeySesionVendedor()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//vendedorLogic.getVendedorDataAccess().setIsForForeingKeyData(true);

					vendedorLogic.getTodosVendedorsWithConnection(sFinalQuery,new Pagination());

					this.vendedorsForeignKey=vendedorLogic.getVendedors();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.vendedorsForeignKey.add(0, vendedorNulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaVendedor(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					vendedorLogic.getEntityWithConnection(pedidoSessionBean.getlidVendedorActual());
					this.vendedorsForeignKey.add(vendedorLogic.getVendedor());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosConsultorsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.consultorsForeignKey=new ArrayList<Consultor>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			Consultor consultorNulo = new Consultor();

			ConsultorLogic consultorLogic=new ConsultorLogic();

			//consultorLogic.getConsultorDataAccess().setIsForForeingKeyData(true);

			if(this.pedidoSessionBean==null) {
				this.pedidoSessionBean=new PedidoSessionBean();
			}

			if(!this.pedidoSessionBean.getisBusquedaDesdeForeignKeySesionConsultor()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//consultorLogic.getConsultorDataAccess().setIsForForeingKeyData(true);

					consultorLogic.getTodosConsultorsWithConnection(sFinalQuery,new Pagination());

					this.consultorsForeignKey=consultorLogic.getConsultors();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.consultorsForeignKey.add(0, consultorNulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaConsultor(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					consultorLogic.getEntityWithConnection(pedidoSessionBean.getlidConsultorActual());
					this.consultorsForeignKey.add(consultorLogic.getConsultor());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosResponsablesForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.responsablesForeignKey=new ArrayList<Responsable>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			Responsable responsableNulo = new Responsable();

			ResponsableLogic responsableLogic=new ResponsableLogic();

			//responsableLogic.getResponsableDataAccess().setIsForForeingKeyData(true);

			if(this.pedidoSessionBean==null) {
				this.pedidoSessionBean=new PedidoSessionBean();
			}

			if(!this.pedidoSessionBean.getisBusquedaDesdeForeignKeySesionResponsable()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//responsableLogic.getResponsableDataAccess().setIsForForeingKeyData(true);

					responsableLogic.getTodosResponsablesWithConnection(sFinalQuery,new Pagination());

					this.responsablesForeignKey=responsableLogic.getResponsables();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.responsablesForeignKey.add(0, responsableNulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaResponsable(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					responsableLogic.getEntityWithConnection(pedidoSessionBean.getlidResponsableActual());
					this.responsablesForeignKey.add(responsableLogic.getResponsable());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEstadoPedidosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.estadopedidosForeignKey=new ArrayList<EstadoPedido>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EstadoPedidoLogic estadopedidoLogic=new EstadoPedidoLogic();

			//estadopedidoLogic.getEstadoPedidoDataAccess().setIsForForeingKeyData(true);

			if(this.pedidoSessionBean==null) {
				this.pedidoSessionBean=new PedidoSessionBean();
			}

			if(!this.pedidoSessionBean.getisBusquedaDesdeForeignKeySesionEstadoPedido()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//estadopedidoLogic.getEstadoPedidoDataAccess().setIsForForeingKeyData(true);

					estadopedidoLogic.getTodosEstadoPedidosWithConnection(sFinalQuery,new Pagination());

					this.estadopedidosForeignKey=estadopedidoLogic.getEstadoPedidos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEstadoPedido(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					estadopedidoLogic.getEntityWithConnection(pedidoSessionBean.getlidEstadoPedidoActual());
					this.estadopedidosForeignKey.add(estadopedidoLogic.getEstadoPedido());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTransportesForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.transportesForeignKey=new ArrayList<Transporte>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			Transporte transporteNulo = new Transporte();

			TransporteLogic transporteLogic=new TransporteLogic();

			//transporteLogic.getTransporteDataAccess().setIsForForeingKeyData(true);

			if(this.pedidoSessionBean==null) {
				this.pedidoSessionBean=new PedidoSessionBean();
			}

			if(!this.pedidoSessionBean.getisBusquedaDesdeForeignKeySesionTransporte()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//transporteLogic.getTransporteDataAccess().setIsForForeingKeyData(true);

					transporteLogic.getTodosTransportesWithConnection(sFinalQuery,new Pagination());

					this.transportesForeignKey=transporteLogic.getTransportes();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.transportesForeignKey.add(0, transporteNulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTransporte(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					transporteLogic.getEntityWithConnection(pedidoSessionBean.getlidTransporteActual());
					this.transportesForeignKey.add(transporteLogic.getTransporte());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosRutaTransportesForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.rutatransportesForeignKey=new ArrayList<RutaTransporte>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			RutaTransporte rutatransporteNulo = new RutaTransporte();

			RutaTransporteLogic rutatransporteLogic=new RutaTransporteLogic();

			//rutatransporteLogic.getRutaTransporteDataAccess().setIsForForeingKeyData(true);

			if(this.pedidoSessionBean==null) {
				this.pedidoSessionBean=new PedidoSessionBean();
			}

			if(!this.pedidoSessionBean.getisBusquedaDesdeForeignKeySesionRutaTransporte()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//rutatransporteLogic.getRutaTransporteDataAccess().setIsForForeingKeyData(true);

					rutatransporteLogic.getTodosRutaTransportesWithConnection(sFinalQuery,new Pagination());

					this.rutatransportesForeignKey=rutatransporteLogic.getRutaTransportes();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.rutatransportesForeignKey.add(0, rutatransporteNulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaRutaTransporte(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					rutatransporteLogic.getEntityWithConnection(pedidoSessionBean.getlidRutaTransporteActual());
					this.rutatransportesForeignKey.add(rutatransporteLogic.getRutaTransporte());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoLlamadasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipollamadasForeignKey=new ArrayList<TipoLlamada>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoLlamada tipollamadaNulo = new TipoLlamada();

			TipoLlamadaLogic tipollamadaLogic=new TipoLlamadaLogic();

			//tipollamadaLogic.getTipoLlamadaDataAccess().setIsForForeingKeyData(true);

			if(this.pedidoSessionBean==null) {
				this.pedidoSessionBean=new PedidoSessionBean();
			}

			if(!this.pedidoSessionBean.getisBusquedaDesdeForeignKeySesionTipoLlamada()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tipollamadaLogic.getTipoLlamadaDataAccess().setIsForForeingKeyData(true);

					tipollamadaLogic.getTodosTipoLlamadasWithConnection(sFinalQuery,new Pagination());

					this.tipollamadasForeignKey=tipollamadaLogic.getTipoLlamadas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.tipollamadasForeignKey.add(0, tipollamadaNulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoLlamada(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipollamadaLogic.getEntityWithConnection(pedidoSessionBean.getlidTipoLlamadaActual());
					this.tipollamadasForeignKey.add(tipollamadaLogic.getTipoLlamada());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTransportistasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.transportistasForeignKey=new ArrayList<Transportista>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			Transportista transportistaNulo = new Transportista();

			TransportistaLogic transportistaLogic=new TransportistaLogic();

			//transportistaLogic.getTransportistaDataAccess().setIsForForeingKeyData(true);

			if(this.pedidoSessionBean==null) {
				this.pedidoSessionBean=new PedidoSessionBean();
			}

			if(!this.pedidoSessionBean.getisBusquedaDesdeForeignKeySesionTransportista()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//transportistaLogic.getTransportistaDataAccess().setIsForForeingKeyData(true);

					transportistaLogic.getTodosTransportistasWithConnection(sFinalQuery,new Pagination());

					this.transportistasForeignKey=transportistaLogic.getTransportistas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.transportistasForeignKey.add(0, transportistaNulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTransportista(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					transportistaLogic.getEntityWithConnection(pedidoSessionBean.getlidTransportistaActual());
					this.transportistasForeignKey.add(transportistaLogic.getTransportista());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoCambiosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipocambiosForeignKey=new ArrayList<TipoCambio>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoCambio tipocambioNulo = new TipoCambio();

			TipoCambioLogic tipocambioLogic=new TipoCambioLogic();

			//tipocambioLogic.getTipoCambioDataAccess().setIsForForeingKeyData(true);

			if(this.pedidoSessionBean==null) {
				this.pedidoSessionBean=new PedidoSessionBean();
			}

			if(!this.pedidoSessionBean.getisBusquedaDesdeForeignKeySesionTipoCambio()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tipocambioLogic.getTipoCambioDataAccess().setIsForForeingKeyData(true);

					tipocambioLogic.getTodosTipoCambiosWithConnection(sFinalQuery,new Pagination());

					this.tipocambiosForeignKey=tipocambioLogic.getTipoCambios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.tipocambiosForeignKey.add(0, tipocambioNulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoCambio(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipocambioLogic.getEntityWithConnection(pedidoSessionBean.getlidTipoCambioActual());
					this.tipocambiosForeignKey.add(tipocambioLogic.getTipoCambio());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCentroCostosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.centrocostosForeignKey=new ArrayList<CentroCosto>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CentroCosto centrocostoNulo = new CentroCosto();

			CentroCostoLogic centrocostoLogic=new CentroCostoLogic();

			//centrocostoLogic.getCentroCostoDataAccess().setIsForForeingKeyData(true);

			if(this.pedidoSessionBean==null) {
				this.pedidoSessionBean=new PedidoSessionBean();
			}

			if(!this.pedidoSessionBean.getisBusquedaDesdeForeignKeySesionCentroCosto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//centrocostoLogic.getCentroCostoDataAccess().setIsForForeingKeyData(true);

					centrocostoLogic.getTodosCentroCostosWithConnection(sFinalQuery,new Pagination());

					this.centrocostosForeignKey=centrocostoLogic.getCentroCostos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.centrocostosForeignKey.add(0, centrocostoNulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCentroCosto(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					centrocostoLogic.getEntityWithConnection(pedidoSessionBean.getlidCentroCostoActual());
					this.centrocostosForeignKey.add(centrocostoLogic.getCentroCosto());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosZonasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.zonasForeignKey=new ArrayList<Zona>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			Zona zonaNulo = new Zona();

			ZonaLogic zonaLogic=new ZonaLogic();

			//zonaLogic.getZonaDataAccess().setIsForForeingKeyData(true);

			if(this.pedidoSessionBean==null) {
				this.pedidoSessionBean=new PedidoSessionBean();
			}

			if(!this.pedidoSessionBean.getisBusquedaDesdeForeignKeySesionZona()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//zonaLogic.getZonaDataAccess().setIsForForeingKeyData(true);

					zonaLogic.getTodosZonasWithConnection(sFinalQuery,new Pagination());

					this.zonasForeignKey=zonaLogic.getZonas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.zonasForeignKey.add(0, zonaNulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaZona(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					zonaLogic.getEntityWithConnection(pedidoSessionBean.getlidZonaActual());
					this.zonasForeignKey.add(zonaLogic.getZona());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	
	public void setActualEmpresaForeignKey(Long idEmpresaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(empresaTemp!=null) {

					if(this.pedido!=null) {
						this.pedido.setEmpresa(empresaTemp);
					}

					if(this.jInternalFrameDetalleFormPedido!=null) {
						this.jInternalFrameDetalleFormPedido.jComboBoxid_empresaPedido.setSelectedItem(empresaTemp);
					}
				} else {
					//jComboBoxid_empresaPedido.setSelectedItem(empresaTemp);
					if(this.jInternalFrameDetalleFormPedido!=null) {
						if(this.jInternalFrameDetalleFormPedido.jComboBoxid_empresaPedido.getItemCount()>0) {
							this.jInternalFrameDetalleFormPedido.jComboBoxid_empresaPedido.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEmpresaForeignKeyDescripcion(Long idEmpresaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}


			sDescripcion=EmpresaConstantesFunciones.getEmpresaDescripcion(empresaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEmpresaForeignKeyGenerico(Long idEmpresaSeleccionado,JComboBox jComboBoxid_empresaPedidoGenerico)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(empresaTemp!=null) {
				jComboBoxid_empresaPedidoGenerico.setSelectedItem(empresaTemp);
			} else {
				if(jComboBoxid_empresaPedidoGenerico!=null && jComboBoxid_empresaPedidoGenerico.getItemCount()>0) {
					jComboBoxid_empresaPedidoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualSucursalForeignKey(Long idSucursalSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(sucursalTemp!=null) {

					if(this.pedido!=null) {
						this.pedido.setSucursal(sucursalTemp);
					}

					if(this.jInternalFrameDetalleFormPedido!=null) {
						this.jInternalFrameDetalleFormPedido.jComboBoxid_sucursalPedido.setSelectedItem(sucursalTemp);
					}
				} else {
					//jComboBoxid_sucursalPedido.setSelectedItem(sucursalTemp);
					if(this.jInternalFrameDetalleFormPedido!=null) {
						if(this.jInternalFrameDetalleFormPedido.jComboBoxid_sucursalPedido.getItemCount()>0) {
							this.jInternalFrameDetalleFormPedido.jComboBoxid_sucursalPedido.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualSucursalForeignKeyDescripcion(Long idSucursalSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}


			sDescripcion=SucursalConstantesFunciones.getSucursalDescripcion(sucursalTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualSucursalForeignKeyGenerico(Long idSucursalSeleccionado,JComboBox jComboBoxid_sucursalPedidoGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sucursalTemp!=null) {
				jComboBoxid_sucursalPedidoGenerico.setSelectedItem(sucursalTemp);
			} else {
				if(jComboBoxid_sucursalPedidoGenerico!=null && jComboBoxid_sucursalPedidoGenerico.getItemCount()>0) {
					jComboBoxid_sucursalPedidoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEjercicioForeignKey(Long idEjercicioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Ejercicio  ejercicioTemp=null;

			for(Ejercicio ejercicioAux:ejerciciosForeignKey) {
				if(ejercicioAux.getId()!=null && ejercicioAux.getId().equals(idEjercicioSeleccionado)) {
					ejercicioTemp=ejercicioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(ejercicioTemp!=null) {

					if(this.pedido!=null) {
						this.pedido.setEjercicio(ejercicioTemp);
					}

					if(this.jInternalFrameDetalleFormPedido!=null) {
						this.jInternalFrameDetalleFormPedido.jComboBoxid_ejercicioPedido.setSelectedItem(ejercicioTemp);
					}
				} else {
					//jComboBoxid_ejercicioPedido.setSelectedItem(ejercicioTemp);
					if(this.jInternalFrameDetalleFormPedido!=null) {
						if(this.jInternalFrameDetalleFormPedido.jComboBoxid_ejercicioPedido.getItemCount()>0) {
							this.jInternalFrameDetalleFormPedido.jComboBoxid_ejercicioPedido.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEjercicioForeignKeyDescripcion(Long idEjercicioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Ejercicio  ejercicioTemp=null;

			for(Ejercicio ejercicioAux:ejerciciosForeignKey) {
				if(ejercicioAux.getId()!=null && ejercicioAux.getId().equals(idEjercicioSeleccionado)) {
					ejercicioTemp=ejercicioAux;
					break;
				}
			}


			sDescripcion=EjercicioConstantesFunciones.getEjercicioDescripcion(ejercicioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEjercicioForeignKeyGenerico(Long idEjercicioSeleccionado,JComboBox jComboBoxid_ejercicioPedidoGenerico)throws Exception
	{
		try
		{
			Ejercicio  ejercicioTemp=null;

			for(Ejercicio ejercicioAux:ejerciciosForeignKey) {
				if(ejercicioAux.getId()!=null && ejercicioAux.getId().equals(idEjercicioSeleccionado)) {
					ejercicioTemp=ejercicioAux;
					break;
				}
			}

			if(ejercicioTemp!=null) {
				jComboBoxid_ejercicioPedidoGenerico.setSelectedItem(ejercicioTemp);
			} else {
				if(jComboBoxid_ejercicioPedidoGenerico!=null && jComboBoxid_ejercicioPedidoGenerico.getItemCount()>0) {
					jComboBoxid_ejercicioPedidoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualPeriodoForeignKey(Long idPeriodoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Periodo  periodoTemp=null;

			for(Periodo periodoAux:periodosForeignKey) {
				if(periodoAux.getId()!=null && periodoAux.getId().equals(idPeriodoSeleccionado)) {
					periodoTemp=periodoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(periodoTemp!=null) {

					if(this.pedido!=null) {
						this.pedido.setPeriodo(periodoTemp);
					}

					if(this.jInternalFrameDetalleFormPedido!=null) {
						this.jInternalFrameDetalleFormPedido.jComboBoxid_periodoPedido.setSelectedItem(periodoTemp);
					}
				} else {
					//jComboBoxid_periodoPedido.setSelectedItem(periodoTemp);
					if(this.jInternalFrameDetalleFormPedido!=null) {
						if(this.jInternalFrameDetalleFormPedido.jComboBoxid_periodoPedido.getItemCount()>0) {
							this.jInternalFrameDetalleFormPedido.jComboBoxid_periodoPedido.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualPeriodoForeignKeyDescripcion(Long idPeriodoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Periodo  periodoTemp=null;

			for(Periodo periodoAux:periodosForeignKey) {
				if(periodoAux.getId()!=null && periodoAux.getId().equals(idPeriodoSeleccionado)) {
					periodoTemp=periodoAux;
					break;
				}
			}


			sDescripcion=PeriodoConstantesFunciones.getPeriodoDescripcion(periodoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualPeriodoForeignKeyGenerico(Long idPeriodoSeleccionado,JComboBox jComboBoxid_periodoPedidoGenerico)throws Exception
	{
		try
		{
			Periodo  periodoTemp=null;

			for(Periodo periodoAux:periodosForeignKey) {
				if(periodoAux.getId()!=null && periodoAux.getId().equals(idPeriodoSeleccionado)) {
					periodoTemp=periodoAux;
					break;
				}
			}

			if(periodoTemp!=null) {
				jComboBoxid_periodoPedidoGenerico.setSelectedItem(periodoTemp);
			} else {
				if(jComboBoxid_periodoPedidoGenerico!=null && jComboBoxid_periodoPedidoGenerico.getItemCount()>0) {
					jComboBoxid_periodoPedidoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualAnioForeignKey(Long idAnioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Anio  anioTemp=null;

			for(Anio anioAux:aniosForeignKey) {
				if(anioAux.getId()!=null && anioAux.getId().equals(idAnioSeleccionado)) {
					anioTemp=anioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(anioTemp!=null) {

					if(this.pedido!=null) {
						this.pedido.setAnio(anioTemp);
					}

					if(this.jInternalFrameDetalleFormPedido!=null) {
						this.jInternalFrameDetalleFormPedido.jComboBoxid_anioPedido.setSelectedItem(anioTemp);
					}
				} else {
					//jComboBoxid_anioPedido.setSelectedItem(anioTemp);
					if(this.jInternalFrameDetalleFormPedido!=null) {
						if(this.jInternalFrameDetalleFormPedido.jComboBoxid_anioPedido.getItemCount()>0) {
							this.jInternalFrameDetalleFormPedido.jComboBoxid_anioPedido.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualAnioForeignKeyDescripcion(Long idAnioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Anio  anioTemp=null;

			for(Anio anioAux:aniosForeignKey) {
				if(anioAux.getId()!=null && anioAux.getId().equals(idAnioSeleccionado)) {
					anioTemp=anioAux;
					break;
				}
			}


			sDescripcion=AnioConstantesFunciones.getAnioDescripcion(anioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualAnioForeignKeyGenerico(Long idAnioSeleccionado,JComboBox jComboBoxid_anioPedidoGenerico)throws Exception
	{
		try
		{
			Anio  anioTemp=null;

			for(Anio anioAux:aniosForeignKey) {
				if(anioAux.getId()!=null && anioAux.getId().equals(idAnioSeleccionado)) {
					anioTemp=anioAux;
					break;
				}
			}

			if(anioTemp!=null) {
				jComboBoxid_anioPedidoGenerico.setSelectedItem(anioTemp);
			} else {
				if(jComboBoxid_anioPedidoGenerico!=null && jComboBoxid_anioPedidoGenerico.getItemCount()>0) {
					jComboBoxid_anioPedidoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualMesForeignKey(Long idMesSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Mes  mesTemp=null;

			for(Mes mesAux:messForeignKey) {
				if(mesAux.getId()!=null && mesAux.getId().equals(idMesSeleccionado)) {
					mesTemp=mesAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(mesTemp!=null) {

					if(this.pedido!=null) {
						this.pedido.setMes(mesTemp);
					}

					if(this.jInternalFrameDetalleFormPedido!=null) {
						this.jInternalFrameDetalleFormPedido.jComboBoxid_mesPedido.setSelectedItem(mesTemp);
					}
				} else {
					//jComboBoxid_mesPedido.setSelectedItem(mesTemp);
					if(this.jInternalFrameDetalleFormPedido!=null) {
						if(this.jInternalFrameDetalleFormPedido.jComboBoxid_mesPedido.getItemCount()>0) {
							this.jInternalFrameDetalleFormPedido.jComboBoxid_mesPedido.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualMesForeignKeyDescripcion(Long idMesSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Mes  mesTemp=null;

			for(Mes mesAux:messForeignKey) {
				if(mesAux.getId()!=null && mesAux.getId().equals(idMesSeleccionado)) {
					mesTemp=mesAux;
					break;
				}
			}


			sDescripcion=MesConstantesFunciones.getMesDescripcion(mesTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualMesForeignKeyGenerico(Long idMesSeleccionado,JComboBox jComboBoxid_mesPedidoGenerico)throws Exception
	{
		try
		{
			Mes  mesTemp=null;

			for(Mes mesAux:messForeignKey) {
				if(mesAux.getId()!=null && mesAux.getId().equals(idMesSeleccionado)) {
					mesTemp=mesAux;
					break;
				}
			}

			if(mesTemp!=null) {
				jComboBoxid_mesPedidoGenerico.setSelectedItem(mesTemp);
			} else {
				if(jComboBoxid_mesPedidoGenerico!=null && jComboBoxid_mesPedidoGenerico.getItemCount()>0) {
					jComboBoxid_mesPedidoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualUsuarioForeignKey(Long idUsuarioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Usuario  usuarioTemp=null;

			for(Usuario usuarioAux:usuariosForeignKey) {
				if(usuarioAux.getId()!=null && usuarioAux.getId().equals(idUsuarioSeleccionado)) {
					usuarioTemp=usuarioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(usuarioTemp!=null) {

					if(this.pedido!=null) {
						this.pedido.setUsuario(usuarioTemp);
					}

					if(this.jInternalFrameDetalleFormPedido!=null) {
						this.jInternalFrameDetalleFormPedido.jComboBoxid_usuarioPedido.setSelectedItem(usuarioTemp);
					}
				} else {
					//jComboBoxid_usuarioPedido.setSelectedItem(usuarioTemp);
					if(this.jInternalFrameDetalleFormPedido!=null) {
						if(this.jInternalFrameDetalleFormPedido.jComboBoxid_usuarioPedido.getItemCount()>0) {
							this.jInternalFrameDetalleFormPedido.jComboBoxid_usuarioPedido.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualUsuarioForeignKeyDescripcion(Long idUsuarioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Usuario  usuarioTemp=null;

			for(Usuario usuarioAux:usuariosForeignKey) {
				if(usuarioAux.getId()!=null && usuarioAux.getId().equals(idUsuarioSeleccionado)) {
					usuarioTemp=usuarioAux;
					break;
				}
			}


			sDescripcion=UsuarioConstantesFunciones.getUsuarioDescripcion(usuarioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualUsuarioForeignKeyGenerico(Long idUsuarioSeleccionado,JComboBox jComboBoxid_usuarioPedidoGenerico)throws Exception
	{
		try
		{
			Usuario  usuarioTemp=null;

			for(Usuario usuarioAux:usuariosForeignKey) {
				if(usuarioAux.getId()!=null && usuarioAux.getId().equals(idUsuarioSeleccionado)) {
					usuarioTemp=usuarioAux;
					break;
				}
			}

			if(usuarioTemp!=null) {
				jComboBoxid_usuarioPedidoGenerico.setSelectedItem(usuarioTemp);
			} else {
				if(jComboBoxid_usuarioPedidoGenerico!=null && jComboBoxid_usuarioPedidoGenerico.getItemCount()>0) {
					jComboBoxid_usuarioPedidoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualMonedaForeignKey(Long idMonedaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Moneda  monedaTemp=null;

			for(Moneda monedaAux:monedasForeignKey) {
				if(monedaAux.getId()!=null && monedaAux.getId().equals(idMonedaSeleccionado)) {
					monedaTemp=monedaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(monedaTemp!=null) {

					if(this.pedido!=null) {
						this.pedido.setMoneda(monedaTemp);
					}

					if(this.jInternalFrameDetalleFormPedido!=null) {
						this.jInternalFrameDetalleFormPedido.jComboBoxid_monedaPedido.setSelectedItem(monedaTemp);
					}
				} else {
					//jComboBoxid_monedaPedido.setSelectedItem(monedaTemp);
					if(this.jInternalFrameDetalleFormPedido!=null) {
						if(this.jInternalFrameDetalleFormPedido.jComboBoxid_monedaPedido.getItemCount()>0) {
							this.jInternalFrameDetalleFormPedido.jComboBoxid_monedaPedido.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualMonedaForeignKeyDescripcion(Long idMonedaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Moneda  monedaTemp=null;

			for(Moneda monedaAux:monedasForeignKey) {
				if(monedaAux.getId()!=null && monedaAux.getId().equals(idMonedaSeleccionado)) {
					monedaTemp=monedaAux;
					break;
				}
			}


			sDescripcion=MonedaConstantesFunciones.getMonedaDescripcion(monedaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualMonedaForeignKeyGenerico(Long idMonedaSeleccionado,JComboBox jComboBoxid_monedaPedidoGenerico)throws Exception
	{
		try
		{
			Moneda  monedaTemp=null;

			for(Moneda monedaAux:monedasForeignKey) {
				if(monedaAux.getId()!=null && monedaAux.getId().equals(idMonedaSeleccionado)) {
					monedaTemp=monedaAux;
					break;
				}
			}

			if(monedaTemp!=null) {
				jComboBoxid_monedaPedidoGenerico.setSelectedItem(monedaTemp);
			} else {
				if(jComboBoxid_monedaPedidoGenerico!=null && jComboBoxid_monedaPedidoGenerico.getItemCount()>0) {
					jComboBoxid_monedaPedidoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEmpleadoForeignKey(Long idEmpleadoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Empleado  empleadoTemp=null;

			for(Empleado empleadoAux:empleadosForeignKey) {
				if(empleadoAux.getId()!=null && empleadoAux.getId().equals(idEmpleadoSeleccionado)) {
					empleadoTemp=empleadoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(empleadoTemp!=null) {

					if(this.pedido!=null) {
						this.pedido.setEmpleado(empleadoTemp);
					}

					if(this.jInternalFrameDetalleFormPedido!=null) {
						this.jInternalFrameDetalleFormPedido.jComboBoxid_empleadoPedido.setSelectedItem(empleadoTemp);
					}
				} else {
					//jComboBoxid_empleadoPedido.setSelectedItem(empleadoTemp);
					if(this.jInternalFrameDetalleFormPedido!=null) {
						if(this.jInternalFrameDetalleFormPedido.jComboBoxid_empleadoPedido.getItemCount()>0) {
							this.jInternalFrameDetalleFormPedido.jComboBoxid_empleadoPedido.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdEmpleado") || sFormularioTipoBusqueda.equals("Todos")){
					if(empleadoTemp!=null && jComboBoxid_empleadoFK_IdEmpleadoPedido!=null) {
						jComboBoxid_empleadoFK_IdEmpleadoPedido.setSelectedItem(empleadoTemp);
					} else {
						if(jComboBoxid_empleadoFK_IdEmpleadoPedido!=null) {
							//jComboBoxid_empleadoFK_IdEmpleadoPedido.setSelectedItem(empleadoTemp);
							if(jComboBoxid_empleadoFK_IdEmpleadoPedido.getItemCount()>0) {
								jComboBoxid_empleadoFK_IdEmpleadoPedido.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEmpleadoForeignKeyDescripcion(Long idEmpleadoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Empleado  empleadoTemp=null;

			for(Empleado empleadoAux:empleadosForeignKey) {
				if(empleadoAux.getId()!=null && empleadoAux.getId().equals(idEmpleadoSeleccionado)) {
					empleadoTemp=empleadoAux;
					break;
				}
			}


			sDescripcion=EmpleadoConstantesFunciones.getEmpleadoDescripcion(empleadoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEmpleadoForeignKeyGenerico(Long idEmpleadoSeleccionado,JComboBox jComboBoxid_empleadoPedidoGenerico)throws Exception
	{
		try
		{
			Empleado  empleadoTemp=null;

			for(Empleado empleadoAux:empleadosForeignKey) {
				if(empleadoAux.getId()!=null && empleadoAux.getId().equals(idEmpleadoSeleccionado)) {
					empleadoTemp=empleadoAux;
					break;
				}
			}

			if(empleadoTemp!=null) {
				jComboBoxid_empleadoPedidoGenerico.setSelectedItem(empleadoTemp);
			} else {
				if(jComboBoxid_empleadoPedidoGenerico!=null && jComboBoxid_empleadoPedidoGenerico.getItemCount()>0) {
					jComboBoxid_empleadoPedidoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoPrecioForeignKey(Long idTipoPrecioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoPrecio  tipoprecioTemp=null;

			for(TipoPrecio tipoprecioAux:tipopreciosForeignKey) {
				if(tipoprecioAux.getId()!=null && tipoprecioAux.getId().equals(idTipoPrecioSeleccionado)) {
					tipoprecioTemp=tipoprecioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipoprecioTemp!=null) {

					if(this.pedido!=null) {
						this.pedido.setTipoPrecio(tipoprecioTemp);
					}

					if(this.jInternalFrameDetalleFormPedido!=null) {
						this.jInternalFrameDetalleFormPedido.jComboBoxid_tipo_precioPedido.setSelectedItem(tipoprecioTemp);
					}
				} else {
					//jComboBoxid_tipo_precioPedido.setSelectedItem(tipoprecioTemp);
					if(this.jInternalFrameDetalleFormPedido!=null) {
						if(this.jInternalFrameDetalleFormPedido.jComboBoxid_tipo_precioPedido.getItemCount()>0) {
							this.jInternalFrameDetalleFormPedido.jComboBoxid_tipo_precioPedido.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoPrecio") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipoprecioTemp!=null && jComboBoxid_tipo_precioFK_IdTipoPrecioPedido!=null) {
						jComboBoxid_tipo_precioFK_IdTipoPrecioPedido.setSelectedItem(tipoprecioTemp);
					} else {
						if(jComboBoxid_tipo_precioFK_IdTipoPrecioPedido!=null) {
							//jComboBoxid_tipo_precioFK_IdTipoPrecioPedido.setSelectedItem(tipoprecioTemp);
							if(jComboBoxid_tipo_precioFK_IdTipoPrecioPedido.getItemCount()>0) {
								jComboBoxid_tipo_precioFK_IdTipoPrecioPedido.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoPrecioForeignKeyDescripcion(Long idTipoPrecioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoPrecio  tipoprecioTemp=null;

			for(TipoPrecio tipoprecioAux:tipopreciosForeignKey) {
				if(tipoprecioAux.getId()!=null && tipoprecioAux.getId().equals(idTipoPrecioSeleccionado)) {
					tipoprecioTemp=tipoprecioAux;
					break;
				}
			}


			sDescripcion=TipoPrecioConstantesFunciones.getTipoPrecioDescripcion(tipoprecioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoPrecioForeignKeyGenerico(Long idTipoPrecioSeleccionado,JComboBox jComboBoxid_tipo_precioPedidoGenerico)throws Exception
	{
		try
		{
			TipoPrecio  tipoprecioTemp=null;

			for(TipoPrecio tipoprecioAux:tipopreciosForeignKey) {
				if(tipoprecioAux.getId()!=null && tipoprecioAux.getId().equals(idTipoPrecioSeleccionado)) {
					tipoprecioTemp=tipoprecioAux;
					break;
				}
			}

			if(tipoprecioTemp!=null) {
				jComboBoxid_tipo_precioPedidoGenerico.setSelectedItem(tipoprecioTemp);
			} else {
				if(jComboBoxid_tipo_precioPedidoGenerico!=null && jComboBoxid_tipo_precioPedidoGenerico.getItemCount()>0) {
					jComboBoxid_tipo_precioPedidoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualFormatoForeignKey(Long idFormatoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Formato  formatoTemp=null;

			for(Formato formatoAux:formatosForeignKey) {
				if(formatoAux.getId()!=null && formatoAux.getId().equals(idFormatoSeleccionado)) {
					formatoTemp=formatoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(formatoTemp!=null) {

					if(this.pedido!=null) {
						this.pedido.setFormato(formatoTemp);
					}

					if(this.jInternalFrameDetalleFormPedido!=null) {
						this.jInternalFrameDetalleFormPedido.jComboBoxid_formatoPedido.setSelectedItem(formatoTemp);
					}
				} else {
					//jComboBoxid_formatoPedido.setSelectedItem(formatoTemp);
					if(this.jInternalFrameDetalleFormPedido!=null) {
						if(this.jInternalFrameDetalleFormPedido.jComboBoxid_formatoPedido.getItemCount()>0) {
							this.jInternalFrameDetalleFormPedido.jComboBoxid_formatoPedido.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdFormato") || sFormularioTipoBusqueda.equals("Todos")){
					if(formatoTemp!=null && jComboBoxid_formatoFK_IdFormatoPedido!=null) {
						jComboBoxid_formatoFK_IdFormatoPedido.setSelectedItem(formatoTemp);
					} else {
						if(jComboBoxid_formatoFK_IdFormatoPedido!=null) {
							//jComboBoxid_formatoFK_IdFormatoPedido.setSelectedItem(formatoTemp);
							if(jComboBoxid_formatoFK_IdFormatoPedido.getItemCount()>0) {
								jComboBoxid_formatoFK_IdFormatoPedido.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualFormatoForeignKeyDescripcion(Long idFormatoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Formato  formatoTemp=null;

			for(Formato formatoAux:formatosForeignKey) {
				if(formatoAux.getId()!=null && formatoAux.getId().equals(idFormatoSeleccionado)) {
					formatoTemp=formatoAux;
					break;
				}
			}


			sDescripcion=FormatoConstantesFunciones.getFormatoDescripcion(formatoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualFormatoForeignKeyGenerico(Long idFormatoSeleccionado,JComboBox jComboBoxid_formatoPedidoGenerico)throws Exception
	{
		try
		{
			Formato  formatoTemp=null;

			for(Formato formatoAux:formatosForeignKey) {
				if(formatoAux.getId()!=null && formatoAux.getId().equals(idFormatoSeleccionado)) {
					formatoTemp=formatoAux;
					break;
				}
			}

			if(formatoTemp!=null) {
				jComboBoxid_formatoPedidoGenerico.setSelectedItem(formatoTemp);
			} else {
				if(jComboBoxid_formatoPedidoGenerico!=null && jComboBoxid_formatoPedidoGenerico.getItemCount()>0) {
					jComboBoxid_formatoPedidoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualClienteForeignKey(Long idClienteSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Cliente  clienteTemp=null;

			for(Cliente clienteAux:clientesForeignKey) {
				if(clienteAux.getId()!=null && clienteAux.getId().equals(idClienteSeleccionado)) {
					clienteTemp=clienteAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(clienteTemp!=null) {

					if(this.pedido!=null) {
						this.pedido.setCliente(clienteTemp);
					}

					if(this.jInternalFrameDetalleFormPedido!=null) {
						this.jInternalFrameDetalleFormPedido.jComboBoxid_clientePedido.setSelectedItem(clienteTemp);
					}
				} else {
					//jComboBoxid_clientePedido.setSelectedItem(clienteTemp);
					if(this.jInternalFrameDetalleFormPedido!=null) {
						if(this.jInternalFrameDetalleFormPedido.jComboBoxid_clientePedido.getItemCount()>0) {
							this.jInternalFrameDetalleFormPedido.jComboBoxid_clientePedido.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdCliente") || sFormularioTipoBusqueda.equals("Todos")){
					if(clienteTemp!=null && jComboBoxid_clienteFK_IdClientePedido!=null) {
						jComboBoxid_clienteFK_IdClientePedido.setSelectedItem(clienteTemp);
					} else {
						if(jComboBoxid_clienteFK_IdClientePedido!=null) {
							//jComboBoxid_clienteFK_IdClientePedido.setSelectedItem(clienteTemp);
							if(jComboBoxid_clienteFK_IdClientePedido.getItemCount()>0) {
								jComboBoxid_clienteFK_IdClientePedido.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualClienteForeignKeyDescripcion(Long idClienteSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Cliente  clienteTemp=null;

			for(Cliente clienteAux:clientesForeignKey) {
				if(clienteAux.getId()!=null && clienteAux.getId().equals(idClienteSeleccionado)) {
					clienteTemp=clienteAux;
					break;
				}
			}


			sDescripcion=ClienteConstantesFunciones.getClienteDescripcion(clienteTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualClienteForeignKeyGenerico(Long idClienteSeleccionado,JComboBox jComboBoxid_clientePedidoGenerico)throws Exception
	{
		try
		{
			Cliente  clienteTemp=null;

			for(Cliente clienteAux:clientesForeignKey) {
				if(clienteAux.getId()!=null && clienteAux.getId().equals(idClienteSeleccionado)) {
					clienteTemp=clienteAux;
					break;
				}
			}

			if(clienteTemp!=null) {
				jComboBoxid_clientePedidoGenerico.setSelectedItem(clienteTemp);
			} else {
				if(jComboBoxid_clientePedidoGenerico!=null && jComboBoxid_clientePedidoGenerico.getItemCount()>0) {
					jComboBoxid_clientePedidoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualSubClienteForeignKey(Long idSubClienteSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			SubCliente  subclienteTemp=null;

			for(SubCliente subclienteAux:subclientesForeignKey) {
				if(subclienteAux.getId()!=null && subclienteAux.getId().equals(idSubClienteSeleccionado)) {
					subclienteTemp=subclienteAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(subclienteTemp!=null) {

					if(this.pedido!=null) {
						this.pedido.setSubCliente(subclienteTemp);
					}

					if(this.jInternalFrameDetalleFormPedido!=null) {
						this.jInternalFrameDetalleFormPedido.jComboBoxid_sub_clientePedido.setSelectedItem(subclienteTemp);
					}
				} else {
					//jComboBoxid_sub_clientePedido.setSelectedItem(subclienteTemp);
					if(this.jInternalFrameDetalleFormPedido!=null) {
						if(this.jInternalFrameDetalleFormPedido.jComboBoxid_sub_clientePedido.getItemCount()>0) {
							this.jInternalFrameDetalleFormPedido.jComboBoxid_sub_clientePedido.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdSubCliente") || sFormularioTipoBusqueda.equals("Todos")){
					if(subclienteTemp!=null && jComboBoxid_sub_clienteFK_IdSubClientePedido!=null) {
						jComboBoxid_sub_clienteFK_IdSubClientePedido.setSelectedItem(subclienteTemp);
					} else {
						if(jComboBoxid_sub_clienteFK_IdSubClientePedido!=null) {
							//jComboBoxid_sub_clienteFK_IdSubClientePedido.setSelectedItem(subclienteTemp);
							if(jComboBoxid_sub_clienteFK_IdSubClientePedido.getItemCount()>0) {
								jComboBoxid_sub_clienteFK_IdSubClientePedido.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualSubClienteForeignKeyDescripcion(Long idSubClienteSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			SubCliente  subclienteTemp=null;

			for(SubCliente subclienteAux:subclientesForeignKey) {
				if(subclienteAux.getId()!=null && subclienteAux.getId().equals(idSubClienteSeleccionado)) {
					subclienteTemp=subclienteAux;
					break;
				}
			}


			sDescripcion=SubClienteConstantesFunciones.getSubClienteDescripcion(subclienteTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualSubClienteForeignKeyGenerico(Long idSubClienteSeleccionado,JComboBox jComboBoxid_sub_clientePedidoGenerico)throws Exception
	{
		try
		{
			SubCliente  subclienteTemp=null;

			for(SubCliente subclienteAux:subclientesForeignKey) {
				if(subclienteAux.getId()!=null && subclienteAux.getId().equals(idSubClienteSeleccionado)) {
					subclienteTemp=subclienteAux;
					break;
				}
			}

			if(subclienteTemp!=null) {
				jComboBoxid_sub_clientePedidoGenerico.setSelectedItem(subclienteTemp);
			} else {
				if(jComboBoxid_sub_clientePedidoGenerico!=null && jComboBoxid_sub_clientePedidoGenerico.getItemCount()>0) {
					jComboBoxid_sub_clientePedidoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualVendedorForeignKey(Long idVendedorSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Vendedor  vendedorTemp=null;

			for(Vendedor vendedorAux:vendedorsForeignKey) {
				if(vendedorAux.getId()!=null && vendedorAux.getId().equals(idVendedorSeleccionado)) {
					vendedorTemp=vendedorAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(vendedorTemp!=null) {

					if(this.pedido!=null) {
						this.pedido.setVendedor(vendedorTemp);
					}

					if(this.jInternalFrameDetalleFormPedido!=null) {
						this.jInternalFrameDetalleFormPedido.jComboBoxid_vendedorPedido.setSelectedItem(vendedorTemp);
					}
				} else {
					//jComboBoxid_vendedorPedido.setSelectedItem(vendedorTemp);
					if(this.jInternalFrameDetalleFormPedido!=null) {
						if(this.jInternalFrameDetalleFormPedido.jComboBoxid_vendedorPedido.getItemCount()>0) {
							this.jInternalFrameDetalleFormPedido.jComboBoxid_vendedorPedido.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdVendedor") || sFormularioTipoBusqueda.equals("Todos")){
					if(vendedorTemp!=null && jComboBoxid_vendedorFK_IdVendedorPedido!=null) {
						jComboBoxid_vendedorFK_IdVendedorPedido.setSelectedItem(vendedorTemp);
					} else {
						if(jComboBoxid_vendedorFK_IdVendedorPedido!=null) {
							//jComboBoxid_vendedorFK_IdVendedorPedido.setSelectedItem(vendedorTemp);
							if(jComboBoxid_vendedorFK_IdVendedorPedido.getItemCount()>0) {
								jComboBoxid_vendedorFK_IdVendedorPedido.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualVendedorForeignKeyDescripcion(Long idVendedorSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Vendedor  vendedorTemp=null;

			for(Vendedor vendedorAux:vendedorsForeignKey) {
				if(vendedorAux.getId()!=null && vendedorAux.getId().equals(idVendedorSeleccionado)) {
					vendedorTemp=vendedorAux;
					break;
				}
			}


			sDescripcion=VendedorConstantesFunciones.getVendedorDescripcion(vendedorTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualVendedorForeignKeyGenerico(Long idVendedorSeleccionado,JComboBox jComboBoxid_vendedorPedidoGenerico)throws Exception
	{
		try
		{
			Vendedor  vendedorTemp=null;

			for(Vendedor vendedorAux:vendedorsForeignKey) {
				if(vendedorAux.getId()!=null && vendedorAux.getId().equals(idVendedorSeleccionado)) {
					vendedorTemp=vendedorAux;
					break;
				}
			}

			if(vendedorTemp!=null) {
				jComboBoxid_vendedorPedidoGenerico.setSelectedItem(vendedorTemp);
			} else {
				if(jComboBoxid_vendedorPedidoGenerico!=null && jComboBoxid_vendedorPedidoGenerico.getItemCount()>0) {
					jComboBoxid_vendedorPedidoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualConsultorForeignKey(Long idConsultorSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Consultor  consultorTemp=null;

			for(Consultor consultorAux:consultorsForeignKey) {
				if(consultorAux.getId()!=null && consultorAux.getId().equals(idConsultorSeleccionado)) {
					consultorTemp=consultorAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(consultorTemp!=null) {

					if(this.pedido!=null) {
						this.pedido.setConsultor(consultorTemp);
					}

					if(this.jInternalFrameDetalleFormPedido!=null) {
						this.jInternalFrameDetalleFormPedido.jComboBoxid_consultorPedido.setSelectedItem(consultorTemp);
					}
				} else {
					//jComboBoxid_consultorPedido.setSelectedItem(consultorTemp);
					if(this.jInternalFrameDetalleFormPedido!=null) {
						if(this.jInternalFrameDetalleFormPedido.jComboBoxid_consultorPedido.getItemCount()>0) {
							this.jInternalFrameDetalleFormPedido.jComboBoxid_consultorPedido.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdConsultor") || sFormularioTipoBusqueda.equals("Todos")){
					if(consultorTemp!=null && jComboBoxid_consultorFK_IdConsultorPedido!=null) {
						jComboBoxid_consultorFK_IdConsultorPedido.setSelectedItem(consultorTemp);
					} else {
						if(jComboBoxid_consultorFK_IdConsultorPedido!=null) {
							//jComboBoxid_consultorFK_IdConsultorPedido.setSelectedItem(consultorTemp);
							if(jComboBoxid_consultorFK_IdConsultorPedido.getItemCount()>0) {
								jComboBoxid_consultorFK_IdConsultorPedido.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualConsultorForeignKeyDescripcion(Long idConsultorSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Consultor  consultorTemp=null;

			for(Consultor consultorAux:consultorsForeignKey) {
				if(consultorAux.getId()!=null && consultorAux.getId().equals(idConsultorSeleccionado)) {
					consultorTemp=consultorAux;
					break;
				}
			}


			sDescripcion=ConsultorConstantesFunciones.getConsultorDescripcion(consultorTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualConsultorForeignKeyGenerico(Long idConsultorSeleccionado,JComboBox jComboBoxid_consultorPedidoGenerico)throws Exception
	{
		try
		{
			Consultor  consultorTemp=null;

			for(Consultor consultorAux:consultorsForeignKey) {
				if(consultorAux.getId()!=null && consultorAux.getId().equals(idConsultorSeleccionado)) {
					consultorTemp=consultorAux;
					break;
				}
			}

			if(consultorTemp!=null) {
				jComboBoxid_consultorPedidoGenerico.setSelectedItem(consultorTemp);
			} else {
				if(jComboBoxid_consultorPedidoGenerico!=null && jComboBoxid_consultorPedidoGenerico.getItemCount()>0) {
					jComboBoxid_consultorPedidoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualResponsableForeignKey(Long idResponsableSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Responsable  responsableTemp=null;

			for(Responsable responsableAux:responsablesForeignKey) {
				if(responsableAux.getId()!=null && responsableAux.getId().equals(idResponsableSeleccionado)) {
					responsableTemp=responsableAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(responsableTemp!=null) {

					if(this.pedido!=null) {
						this.pedido.setResponsable(responsableTemp);
					}

					if(this.jInternalFrameDetalleFormPedido!=null) {
						this.jInternalFrameDetalleFormPedido.jComboBoxid_responsablePedido.setSelectedItem(responsableTemp);
					}
				} else {
					//jComboBoxid_responsablePedido.setSelectedItem(responsableTemp);
					if(this.jInternalFrameDetalleFormPedido!=null) {
						if(this.jInternalFrameDetalleFormPedido.jComboBoxid_responsablePedido.getItemCount()>0) {
							this.jInternalFrameDetalleFormPedido.jComboBoxid_responsablePedido.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdResponsable") || sFormularioTipoBusqueda.equals("Todos")){
					if(responsableTemp!=null && jComboBoxid_responsableFK_IdResponsablePedido!=null) {
						jComboBoxid_responsableFK_IdResponsablePedido.setSelectedItem(responsableTemp);
					} else {
						if(jComboBoxid_responsableFK_IdResponsablePedido!=null) {
							//jComboBoxid_responsableFK_IdResponsablePedido.setSelectedItem(responsableTemp);
							if(jComboBoxid_responsableFK_IdResponsablePedido.getItemCount()>0) {
								jComboBoxid_responsableFK_IdResponsablePedido.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualResponsableForeignKeyDescripcion(Long idResponsableSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Responsable  responsableTemp=null;

			for(Responsable responsableAux:responsablesForeignKey) {
				if(responsableAux.getId()!=null && responsableAux.getId().equals(idResponsableSeleccionado)) {
					responsableTemp=responsableAux;
					break;
				}
			}


			sDescripcion=ResponsableConstantesFunciones.getResponsableDescripcion(responsableTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualResponsableForeignKeyGenerico(Long idResponsableSeleccionado,JComboBox jComboBoxid_responsablePedidoGenerico)throws Exception
	{
		try
		{
			Responsable  responsableTemp=null;

			for(Responsable responsableAux:responsablesForeignKey) {
				if(responsableAux.getId()!=null && responsableAux.getId().equals(idResponsableSeleccionado)) {
					responsableTemp=responsableAux;
					break;
				}
			}

			if(responsableTemp!=null) {
				jComboBoxid_responsablePedidoGenerico.setSelectedItem(responsableTemp);
			} else {
				if(jComboBoxid_responsablePedidoGenerico!=null && jComboBoxid_responsablePedidoGenerico.getItemCount()>0) {
					jComboBoxid_responsablePedidoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEstadoPedidoForeignKey(Long idEstadoPedidoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			EstadoPedido  estadopedidoTemp=null;

			for(EstadoPedido estadopedidoAux:estadopedidosForeignKey) {
				if(estadopedidoAux.getId()!=null && estadopedidoAux.getId().equals(idEstadoPedidoSeleccionado)) {
					estadopedidoTemp=estadopedidoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(estadopedidoTemp!=null) {

					if(this.pedido!=null) {
						this.pedido.setEstadoPedido(estadopedidoTemp);
					}

					if(this.jInternalFrameDetalleFormPedido!=null) {
						this.jInternalFrameDetalleFormPedido.jComboBoxid_estado_pedidoPedido.setSelectedItem(estadopedidoTemp);
					}
				} else {
					//jComboBoxid_estado_pedidoPedido.setSelectedItem(estadopedidoTemp);
					if(this.jInternalFrameDetalleFormPedido!=null) {
						if(this.jInternalFrameDetalleFormPedido.jComboBoxid_estado_pedidoPedido.getItemCount()>0) {
							this.jInternalFrameDetalleFormPedido.jComboBoxid_estado_pedidoPedido.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdEstadoPedido") || sFormularioTipoBusqueda.equals("Todos")){
					if(estadopedidoTemp!=null && jComboBoxid_estado_pedidoFK_IdEstadoPedidoPedido!=null) {
						jComboBoxid_estado_pedidoFK_IdEstadoPedidoPedido.setSelectedItem(estadopedidoTemp);
					} else {
						if(jComboBoxid_estado_pedidoFK_IdEstadoPedidoPedido!=null) {
							//jComboBoxid_estado_pedidoFK_IdEstadoPedidoPedido.setSelectedItem(estadopedidoTemp);
							if(jComboBoxid_estado_pedidoFK_IdEstadoPedidoPedido.getItemCount()>0) {
								jComboBoxid_estado_pedidoFK_IdEstadoPedidoPedido.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEstadoPedidoForeignKeyDescripcion(Long idEstadoPedidoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			EstadoPedido  estadopedidoTemp=null;

			for(EstadoPedido estadopedidoAux:estadopedidosForeignKey) {
				if(estadopedidoAux.getId()!=null && estadopedidoAux.getId().equals(idEstadoPedidoSeleccionado)) {
					estadopedidoTemp=estadopedidoAux;
					break;
				}
			}


			sDescripcion=EstadoPedidoConstantesFunciones.getEstadoPedidoDescripcion(estadopedidoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEstadoPedidoForeignKeyGenerico(Long idEstadoPedidoSeleccionado,JComboBox jComboBoxid_estado_pedidoPedidoGenerico)throws Exception
	{
		try
		{
			EstadoPedido  estadopedidoTemp=null;

			for(EstadoPedido estadopedidoAux:estadopedidosForeignKey) {
				if(estadopedidoAux.getId()!=null && estadopedidoAux.getId().equals(idEstadoPedidoSeleccionado)) {
					estadopedidoTemp=estadopedidoAux;
					break;
				}
			}

			if(estadopedidoTemp!=null) {
				jComboBoxid_estado_pedidoPedidoGenerico.setSelectedItem(estadopedidoTemp);
			} else {
				if(jComboBoxid_estado_pedidoPedidoGenerico!=null && jComboBoxid_estado_pedidoPedidoGenerico.getItemCount()>0) {
					jComboBoxid_estado_pedidoPedidoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTransporteForeignKey(Long idTransporteSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Transporte  transporteTemp=null;

			for(Transporte transporteAux:transportesForeignKey) {
				if(transporteAux.getId()!=null && transporteAux.getId().equals(idTransporteSeleccionado)) {
					transporteTemp=transporteAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(transporteTemp!=null) {

					if(this.pedido!=null) {
						this.pedido.setTransporte(transporteTemp);
					}

					if(this.jInternalFrameDetalleFormPedido!=null) {
						this.jInternalFrameDetalleFormPedido.jComboBoxid_transportePedido.setSelectedItem(transporteTemp);
					}
				} else {
					//jComboBoxid_transportePedido.setSelectedItem(transporteTemp);
					if(this.jInternalFrameDetalleFormPedido!=null) {
						if(this.jInternalFrameDetalleFormPedido.jComboBoxid_transportePedido.getItemCount()>0) {
							this.jInternalFrameDetalleFormPedido.jComboBoxid_transportePedido.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTransporte") || sFormularioTipoBusqueda.equals("Todos")){
					if(transporteTemp!=null && jComboBoxid_transporteFK_IdTransportePedido!=null) {
						jComboBoxid_transporteFK_IdTransportePedido.setSelectedItem(transporteTemp);
					} else {
						if(jComboBoxid_transporteFK_IdTransportePedido!=null) {
							//jComboBoxid_transporteFK_IdTransportePedido.setSelectedItem(transporteTemp);
							if(jComboBoxid_transporteFK_IdTransportePedido.getItemCount()>0) {
								jComboBoxid_transporteFK_IdTransportePedido.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTransporteForeignKeyDescripcion(Long idTransporteSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Transporte  transporteTemp=null;

			for(Transporte transporteAux:transportesForeignKey) {
				if(transporteAux.getId()!=null && transporteAux.getId().equals(idTransporteSeleccionado)) {
					transporteTemp=transporteAux;
					break;
				}
			}


			sDescripcion=TransporteConstantesFunciones.getTransporteDescripcion(transporteTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTransporteForeignKeyGenerico(Long idTransporteSeleccionado,JComboBox jComboBoxid_transportePedidoGenerico)throws Exception
	{
		try
		{
			Transporte  transporteTemp=null;

			for(Transporte transporteAux:transportesForeignKey) {
				if(transporteAux.getId()!=null && transporteAux.getId().equals(idTransporteSeleccionado)) {
					transporteTemp=transporteAux;
					break;
				}
			}

			if(transporteTemp!=null) {
				jComboBoxid_transportePedidoGenerico.setSelectedItem(transporteTemp);
			} else {
				if(jComboBoxid_transportePedidoGenerico!=null && jComboBoxid_transportePedidoGenerico.getItemCount()>0) {
					jComboBoxid_transportePedidoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualRutaTransporteForeignKey(Long idRutaTransporteSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			RutaTransporte  rutatransporteTemp=null;

			for(RutaTransporte rutatransporteAux:rutatransportesForeignKey) {
				if(rutatransporteAux.getId()!=null && rutatransporteAux.getId().equals(idRutaTransporteSeleccionado)) {
					rutatransporteTemp=rutatransporteAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(rutatransporteTemp!=null) {

					if(this.pedido!=null) {
						this.pedido.setRutaTransporte(rutatransporteTemp);
					}

					if(this.jInternalFrameDetalleFormPedido!=null) {
						this.jInternalFrameDetalleFormPedido.jComboBoxid_ruta_transportePedido.setSelectedItem(rutatransporteTemp);
					}
				} else {
					//jComboBoxid_ruta_transportePedido.setSelectedItem(rutatransporteTemp);
					if(this.jInternalFrameDetalleFormPedido!=null) {
						if(this.jInternalFrameDetalleFormPedido.jComboBoxid_ruta_transportePedido.getItemCount()>0) {
							this.jInternalFrameDetalleFormPedido.jComboBoxid_ruta_transportePedido.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdRutaTransporte") || sFormularioTipoBusqueda.equals("Todos")){
					if(rutatransporteTemp!=null && jComboBoxid_ruta_transporteFK_IdRutaTransportePedido!=null) {
						jComboBoxid_ruta_transporteFK_IdRutaTransportePedido.setSelectedItem(rutatransporteTemp);
					} else {
						if(jComboBoxid_ruta_transporteFK_IdRutaTransportePedido!=null) {
							//jComboBoxid_ruta_transporteFK_IdRutaTransportePedido.setSelectedItem(rutatransporteTemp);
							if(jComboBoxid_ruta_transporteFK_IdRutaTransportePedido.getItemCount()>0) {
								jComboBoxid_ruta_transporteFK_IdRutaTransportePedido.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualRutaTransporteForeignKeyDescripcion(Long idRutaTransporteSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			RutaTransporte  rutatransporteTemp=null;

			for(RutaTransporte rutatransporteAux:rutatransportesForeignKey) {
				if(rutatransporteAux.getId()!=null && rutatransporteAux.getId().equals(idRutaTransporteSeleccionado)) {
					rutatransporteTemp=rutatransporteAux;
					break;
				}
			}


			sDescripcion=RutaTransporteConstantesFunciones.getRutaTransporteDescripcion(rutatransporteTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualRutaTransporteForeignKeyGenerico(Long idRutaTransporteSeleccionado,JComboBox jComboBoxid_ruta_transportePedidoGenerico)throws Exception
	{
		try
		{
			RutaTransporte  rutatransporteTemp=null;

			for(RutaTransporte rutatransporteAux:rutatransportesForeignKey) {
				if(rutatransporteAux.getId()!=null && rutatransporteAux.getId().equals(idRutaTransporteSeleccionado)) {
					rutatransporteTemp=rutatransporteAux;
					break;
				}
			}

			if(rutatransporteTemp!=null) {
				jComboBoxid_ruta_transportePedidoGenerico.setSelectedItem(rutatransporteTemp);
			} else {
				if(jComboBoxid_ruta_transportePedidoGenerico!=null && jComboBoxid_ruta_transportePedidoGenerico.getItemCount()>0) {
					jComboBoxid_ruta_transportePedidoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoLlamadaForeignKey(Long idTipoLlamadaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoLlamada  tipollamadaTemp=null;

			for(TipoLlamada tipollamadaAux:tipollamadasForeignKey) {
				if(tipollamadaAux.getId()!=null && tipollamadaAux.getId().equals(idTipoLlamadaSeleccionado)) {
					tipollamadaTemp=tipollamadaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipollamadaTemp!=null) {

					if(this.pedido!=null) {
						this.pedido.setTipoLlamada(tipollamadaTemp);
					}

					if(this.jInternalFrameDetalleFormPedido!=null) {
						this.jInternalFrameDetalleFormPedido.jComboBoxid_tipo_llamadaPedido.setSelectedItem(tipollamadaTemp);
					}
				} else {
					//jComboBoxid_tipo_llamadaPedido.setSelectedItem(tipollamadaTemp);
					if(this.jInternalFrameDetalleFormPedido!=null) {
						if(this.jInternalFrameDetalleFormPedido.jComboBoxid_tipo_llamadaPedido.getItemCount()>0) {
							this.jInternalFrameDetalleFormPedido.jComboBoxid_tipo_llamadaPedido.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoLlamada") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipollamadaTemp!=null && jComboBoxid_tipo_llamadaFK_IdTipoLlamadaPedido!=null) {
						jComboBoxid_tipo_llamadaFK_IdTipoLlamadaPedido.setSelectedItem(tipollamadaTemp);
					} else {
						if(jComboBoxid_tipo_llamadaFK_IdTipoLlamadaPedido!=null) {
							//jComboBoxid_tipo_llamadaFK_IdTipoLlamadaPedido.setSelectedItem(tipollamadaTemp);
							if(jComboBoxid_tipo_llamadaFK_IdTipoLlamadaPedido.getItemCount()>0) {
								jComboBoxid_tipo_llamadaFK_IdTipoLlamadaPedido.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoLlamadaForeignKeyDescripcion(Long idTipoLlamadaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoLlamada  tipollamadaTemp=null;

			for(TipoLlamada tipollamadaAux:tipollamadasForeignKey) {
				if(tipollamadaAux.getId()!=null && tipollamadaAux.getId().equals(idTipoLlamadaSeleccionado)) {
					tipollamadaTemp=tipollamadaAux;
					break;
				}
			}


			sDescripcion=TipoLlamadaConstantesFunciones.getTipoLlamadaDescripcion(tipollamadaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoLlamadaForeignKeyGenerico(Long idTipoLlamadaSeleccionado,JComboBox jComboBoxid_tipo_llamadaPedidoGenerico)throws Exception
	{
		try
		{
			TipoLlamada  tipollamadaTemp=null;

			for(TipoLlamada tipollamadaAux:tipollamadasForeignKey) {
				if(tipollamadaAux.getId()!=null && tipollamadaAux.getId().equals(idTipoLlamadaSeleccionado)) {
					tipollamadaTemp=tipollamadaAux;
					break;
				}
			}

			if(tipollamadaTemp!=null) {
				jComboBoxid_tipo_llamadaPedidoGenerico.setSelectedItem(tipollamadaTemp);
			} else {
				if(jComboBoxid_tipo_llamadaPedidoGenerico!=null && jComboBoxid_tipo_llamadaPedidoGenerico.getItemCount()>0) {
					jComboBoxid_tipo_llamadaPedidoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTransportistaForeignKey(Long idTransportistaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Transportista  transportistaTemp=null;

			for(Transportista transportistaAux:transportistasForeignKey) {
				if(transportistaAux.getId()!=null && transportistaAux.getId().equals(idTransportistaSeleccionado)) {
					transportistaTemp=transportistaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(transportistaTemp!=null) {

					if(this.pedido!=null) {
						this.pedido.setTransportista(transportistaTemp);
					}

					if(this.jInternalFrameDetalleFormPedido!=null) {
						this.jInternalFrameDetalleFormPedido.jComboBoxid_transportistaPedido.setSelectedItem(transportistaTemp);
					}
				} else {
					//jComboBoxid_transportistaPedido.setSelectedItem(transportistaTemp);
					if(this.jInternalFrameDetalleFormPedido!=null) {
						if(this.jInternalFrameDetalleFormPedido.jComboBoxid_transportistaPedido.getItemCount()>0) {
							this.jInternalFrameDetalleFormPedido.jComboBoxid_transportistaPedido.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTransportista") || sFormularioTipoBusqueda.equals("Todos")){
					if(transportistaTemp!=null && jComboBoxid_transportistaFK_IdTransportistaPedido!=null) {
						jComboBoxid_transportistaFK_IdTransportistaPedido.setSelectedItem(transportistaTemp);
					} else {
						if(jComboBoxid_transportistaFK_IdTransportistaPedido!=null) {
							//jComboBoxid_transportistaFK_IdTransportistaPedido.setSelectedItem(transportistaTemp);
							if(jComboBoxid_transportistaFK_IdTransportistaPedido.getItemCount()>0) {
								jComboBoxid_transportistaFK_IdTransportistaPedido.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTransportistaForeignKeyDescripcion(Long idTransportistaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Transportista  transportistaTemp=null;

			for(Transportista transportistaAux:transportistasForeignKey) {
				if(transportistaAux.getId()!=null && transportistaAux.getId().equals(idTransportistaSeleccionado)) {
					transportistaTemp=transportistaAux;
					break;
				}
			}


			sDescripcion=TransportistaConstantesFunciones.getTransportistaDescripcion(transportistaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTransportistaForeignKeyGenerico(Long idTransportistaSeleccionado,JComboBox jComboBoxid_transportistaPedidoGenerico)throws Exception
	{
		try
		{
			Transportista  transportistaTemp=null;

			for(Transportista transportistaAux:transportistasForeignKey) {
				if(transportistaAux.getId()!=null && transportistaAux.getId().equals(idTransportistaSeleccionado)) {
					transportistaTemp=transportistaAux;
					break;
				}
			}

			if(transportistaTemp!=null) {
				jComboBoxid_transportistaPedidoGenerico.setSelectedItem(transportistaTemp);
			} else {
				if(jComboBoxid_transportistaPedidoGenerico!=null && jComboBoxid_transportistaPedidoGenerico.getItemCount()>0) {
					jComboBoxid_transportistaPedidoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoCambioForeignKey(Long idTipoCambioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoCambio  tipocambioTemp=null;

			for(TipoCambio tipocambioAux:tipocambiosForeignKey) {
				if(tipocambioAux.getId()!=null && tipocambioAux.getId().equals(idTipoCambioSeleccionado)) {
					tipocambioTemp=tipocambioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipocambioTemp!=null) {

					if(this.pedido!=null) {
						this.pedido.setTipoCambio(tipocambioTemp);
					}

					if(this.jInternalFrameDetalleFormPedido!=null) {
						this.jInternalFrameDetalleFormPedido.jComboBoxid_tipo_cambioPedido.setSelectedItem(tipocambioTemp);
					}
				} else {
					//jComboBoxid_tipo_cambioPedido.setSelectedItem(tipocambioTemp);
					if(this.jInternalFrameDetalleFormPedido!=null) {
						if(this.jInternalFrameDetalleFormPedido.jComboBoxid_tipo_cambioPedido.getItemCount()>0) {
							this.jInternalFrameDetalleFormPedido.jComboBoxid_tipo_cambioPedido.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoCambio") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipocambioTemp!=null && jComboBoxid_tipo_cambioFK_IdTipoCambioPedido!=null) {
						jComboBoxid_tipo_cambioFK_IdTipoCambioPedido.setSelectedItem(tipocambioTemp);
					} else {
						if(jComboBoxid_tipo_cambioFK_IdTipoCambioPedido!=null) {
							//jComboBoxid_tipo_cambioFK_IdTipoCambioPedido.setSelectedItem(tipocambioTemp);
							if(jComboBoxid_tipo_cambioFK_IdTipoCambioPedido.getItemCount()>0) {
								jComboBoxid_tipo_cambioFK_IdTipoCambioPedido.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoCambioForeignKeyDescripcion(Long idTipoCambioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoCambio  tipocambioTemp=null;

			for(TipoCambio tipocambioAux:tipocambiosForeignKey) {
				if(tipocambioAux.getId()!=null && tipocambioAux.getId().equals(idTipoCambioSeleccionado)) {
					tipocambioTemp=tipocambioAux;
					break;
				}
			}


			sDescripcion=TipoCambioConstantesFunciones.getTipoCambioDescripcion(tipocambioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoCambioForeignKeyGenerico(Long idTipoCambioSeleccionado,JComboBox jComboBoxid_tipo_cambioPedidoGenerico)throws Exception
	{
		try
		{
			TipoCambio  tipocambioTemp=null;

			for(TipoCambio tipocambioAux:tipocambiosForeignKey) {
				if(tipocambioAux.getId()!=null && tipocambioAux.getId().equals(idTipoCambioSeleccionado)) {
					tipocambioTemp=tipocambioAux;
					break;
				}
			}

			if(tipocambioTemp!=null) {
				jComboBoxid_tipo_cambioPedidoGenerico.setSelectedItem(tipocambioTemp);
			} else {
				if(jComboBoxid_tipo_cambioPedidoGenerico!=null && jComboBoxid_tipo_cambioPedidoGenerico.getItemCount()>0) {
					jComboBoxid_tipo_cambioPedidoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCentroCostoForeignKey(Long idCentroCostoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			CentroCosto  centrocostoTemp=null;

			for(CentroCosto centrocostoAux:centrocostosForeignKey) {
				if(centrocostoAux.getId()!=null && centrocostoAux.getId().equals(idCentroCostoSeleccionado)) {
					centrocostoTemp=centrocostoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(centrocostoTemp!=null) {

					if(this.pedido!=null) {
						this.pedido.setCentroCosto(centrocostoTemp);
					}

					if(this.jInternalFrameDetalleFormPedido!=null) {
						this.jInternalFrameDetalleFormPedido.jComboBoxid_centro_costoPedido.setSelectedItem(centrocostoTemp);
					}
				} else {
					//jComboBoxid_centro_costoPedido.setSelectedItem(centrocostoTemp);
					if(this.jInternalFrameDetalleFormPedido!=null) {
						if(this.jInternalFrameDetalleFormPedido.jComboBoxid_centro_costoPedido.getItemCount()>0) {
							this.jInternalFrameDetalleFormPedido.jComboBoxid_centro_costoPedido.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdCentroCosto") || sFormularioTipoBusqueda.equals("Todos")){
					if(centrocostoTemp!=null && jComboBoxid_centro_costoFK_IdCentroCostoPedido!=null) {
						jComboBoxid_centro_costoFK_IdCentroCostoPedido.setSelectedItem(centrocostoTemp);
					} else {
						if(jComboBoxid_centro_costoFK_IdCentroCostoPedido!=null) {
							//jComboBoxid_centro_costoFK_IdCentroCostoPedido.setSelectedItem(centrocostoTemp);
							if(jComboBoxid_centro_costoFK_IdCentroCostoPedido.getItemCount()>0) {
								jComboBoxid_centro_costoFK_IdCentroCostoPedido.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCentroCostoForeignKeyDescripcion(Long idCentroCostoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			CentroCosto  centrocostoTemp=null;

			for(CentroCosto centrocostoAux:centrocostosForeignKey) {
				if(centrocostoAux.getId()!=null && centrocostoAux.getId().equals(idCentroCostoSeleccionado)) {
					centrocostoTemp=centrocostoAux;
					break;
				}
			}


			sDescripcion=CentroCostoConstantesFunciones.getCentroCostoDescripcion(centrocostoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCentroCostoForeignKeyGenerico(Long idCentroCostoSeleccionado,JComboBox jComboBoxid_centro_costoPedidoGenerico)throws Exception
	{
		try
		{
			CentroCosto  centrocostoTemp=null;

			for(CentroCosto centrocostoAux:centrocostosForeignKey) {
				if(centrocostoAux.getId()!=null && centrocostoAux.getId().equals(idCentroCostoSeleccionado)) {
					centrocostoTemp=centrocostoAux;
					break;
				}
			}

			if(centrocostoTemp!=null) {
				jComboBoxid_centro_costoPedidoGenerico.setSelectedItem(centrocostoTemp);
			} else {
				if(jComboBoxid_centro_costoPedidoGenerico!=null && jComboBoxid_centro_costoPedidoGenerico.getItemCount()>0) {
					jComboBoxid_centro_costoPedidoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualZonaForeignKey(Long idZonaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Zona  zonaTemp=null;

			for(Zona zonaAux:zonasForeignKey) {
				if(zonaAux.getId()!=null && zonaAux.getId().equals(idZonaSeleccionado)) {
					zonaTemp=zonaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(zonaTemp!=null) {

					if(this.pedido!=null) {
						this.pedido.setZona(zonaTemp);
					}

					if(this.jInternalFrameDetalleFormPedido!=null) {
						this.jInternalFrameDetalleFormPedido.jComboBoxid_zonaPedido.setSelectedItem(zonaTemp);
					}
				} else {
					//jComboBoxid_zonaPedido.setSelectedItem(zonaTemp);
					if(this.jInternalFrameDetalleFormPedido!=null) {
						if(this.jInternalFrameDetalleFormPedido.jComboBoxid_zonaPedido.getItemCount()>0) {
							this.jInternalFrameDetalleFormPedido.jComboBoxid_zonaPedido.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdZona") || sFormularioTipoBusqueda.equals("Todos")){
					if(zonaTemp!=null && jComboBoxid_zonaFK_IdZonaPedido!=null) {
						jComboBoxid_zonaFK_IdZonaPedido.setSelectedItem(zonaTemp);
					} else {
						if(jComboBoxid_zonaFK_IdZonaPedido!=null) {
							//jComboBoxid_zonaFK_IdZonaPedido.setSelectedItem(zonaTemp);
							if(jComboBoxid_zonaFK_IdZonaPedido.getItemCount()>0) {
								jComboBoxid_zonaFK_IdZonaPedido.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualZonaForeignKeyDescripcion(Long idZonaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Zona  zonaTemp=null;

			for(Zona zonaAux:zonasForeignKey) {
				if(zonaAux.getId()!=null && zonaAux.getId().equals(idZonaSeleccionado)) {
					zonaTemp=zonaAux;
					break;
				}
			}


			sDescripcion=ZonaConstantesFunciones.getZonaDescripcion(zonaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualZonaForeignKeyGenerico(Long idZonaSeleccionado,JComboBox jComboBoxid_zonaPedidoGenerico)throws Exception
	{
		try
		{
			Zona  zonaTemp=null;

			for(Zona zonaAux:zonasForeignKey) {
				if(zonaAux.getId()!=null && zonaAux.getId().equals(idZonaSeleccionado)) {
					zonaTemp=zonaAux;
					break;
				}
			}

			if(zonaTemp!=null) {
				jComboBoxid_zonaPedidoGenerico.setSelectedItem(zonaTemp);
			} else {
				if(jComboBoxid_zonaPedidoGenerico!=null && jComboBoxid_zonaPedidoGenerico.getItemCount()>0) {
					jComboBoxid_zonaPedidoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	
	
	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEmpresaForeignKey(Pedido pedido,JComboBox jComboBoxid_empresaPedidoGenerico)throws Exception
	{
		try
		{
			Empresa  empresaAux=new Empresa();

			if(jComboBoxid_empresaPedidoGenerico==null) {
				empresaAux=(Empresa)this.jInternalFrameDetalleFormPedido.jComboBoxid_empresaPedido.getSelectedItem();
			} else {
				empresaAux=(Empresa)jComboBoxid_empresaPedidoGenerico.getSelectedItem();
			}

			if(empresaAux!=null && empresaAux.getId()!=null) {
				pedido.setid_empresa(empresaAux.getId());
				pedido.setempresa_descripcion(PedidoConstantesFunciones.getEmpresaDescripcion(empresaAux));
				pedido.setEmpresa(empresaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarSucursalForeignKey(Pedido pedido,JComboBox jComboBoxid_sucursalPedidoGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalAux=new Sucursal();

			if(jComboBoxid_sucursalPedidoGenerico==null) {
				sucursalAux=(Sucursal)this.jInternalFrameDetalleFormPedido.jComboBoxid_sucursalPedido.getSelectedItem();
			} else {
				sucursalAux=(Sucursal)jComboBoxid_sucursalPedidoGenerico.getSelectedItem();
			}

			if(sucursalAux!=null && sucursalAux.getId()!=null) {
				pedido.setid_sucursal(sucursalAux.getId());
				pedido.setsucursal_descripcion(PedidoConstantesFunciones.getSucursalDescripcion(sucursalAux));
				pedido.setSucursal(sucursalAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEjercicioForeignKey(Pedido pedido,JComboBox jComboBoxid_ejercicioPedidoGenerico)throws Exception
	{
		try
		{
			Ejercicio  ejercicioAux=new Ejercicio();

			if(jComboBoxid_ejercicioPedidoGenerico==null) {
				ejercicioAux=(Ejercicio)this.jInternalFrameDetalleFormPedido.jComboBoxid_ejercicioPedido.getSelectedItem();
			} else {
				ejercicioAux=(Ejercicio)jComboBoxid_ejercicioPedidoGenerico.getSelectedItem();
			}

			if(ejercicioAux!=null && ejercicioAux.getId()!=null) {
				pedido.setid_ejercicio(ejercicioAux.getId());
				pedido.setejercicio_descripcion(PedidoConstantesFunciones.getEjercicioDescripcion(ejercicioAux));
				pedido.setEjercicio(ejercicioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarPeriodoForeignKey(Pedido pedido,JComboBox jComboBoxid_periodoPedidoGenerico)throws Exception
	{
		try
		{
			Periodo  periodoAux=new Periodo();

			if(jComboBoxid_periodoPedidoGenerico==null) {
				periodoAux=(Periodo)this.jInternalFrameDetalleFormPedido.jComboBoxid_periodoPedido.getSelectedItem();
			} else {
				periodoAux=(Periodo)jComboBoxid_periodoPedidoGenerico.getSelectedItem();
			}

			if(periodoAux!=null && periodoAux.getId()!=null) {
				if(periodoAux.getid_estado_periodo().equals(0L)) {
					throw new Exception("Periodo INACTIVO, NO PUEDE GUARDAR LA INFORMACION CONSULTE CON EL ADMINISTRADOR");
				}

				pedido.setid_periodo(periodoAux.getId());
				pedido.setperiodo_descripcion(PedidoConstantesFunciones.getPeriodoDescripcion(periodoAux));
				pedido.setPeriodo(periodoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarAnioForeignKey(Pedido pedido,JComboBox jComboBoxid_anioPedidoGenerico)throws Exception
	{
		try
		{
			Anio  anioAux=new Anio();

			if(jComboBoxid_anioPedidoGenerico==null) {
				anioAux=(Anio)this.jInternalFrameDetalleFormPedido.jComboBoxid_anioPedido.getSelectedItem();
			} else {
				anioAux=(Anio)jComboBoxid_anioPedidoGenerico.getSelectedItem();
			}

			if(anioAux!=null) {
				pedido.setid_anio(anioAux.getId());
				pedido.setanio_descripcion(PedidoConstantesFunciones.getAnioDescripcion(anioAux));
				pedido.setAnio(anioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarMesForeignKey(Pedido pedido,JComboBox jComboBoxid_mesPedidoGenerico)throws Exception
	{
		try
		{
			Mes  mesAux=new Mes();

			if(jComboBoxid_mesPedidoGenerico==null) {
				mesAux=(Mes)this.jInternalFrameDetalleFormPedido.jComboBoxid_mesPedido.getSelectedItem();
			} else {
				mesAux=(Mes)jComboBoxid_mesPedidoGenerico.getSelectedItem();
			}

			if(mesAux!=null) {
				pedido.setid_mes(mesAux.getId());
				pedido.setmes_descripcion(PedidoConstantesFunciones.getMesDescripcion(mesAux));
				pedido.setMes(mesAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarUsuarioForeignKey(Pedido pedido,JComboBox jComboBoxid_usuarioPedidoGenerico)throws Exception
	{
		try
		{
			Usuario  usuarioAux=new Usuario();

			if(jComboBoxid_usuarioPedidoGenerico==null) {
				usuarioAux=(Usuario)this.jInternalFrameDetalleFormPedido.jComboBoxid_usuarioPedido.getSelectedItem();
			} else {
				usuarioAux=(Usuario)jComboBoxid_usuarioPedidoGenerico.getSelectedItem();
			}

			if(usuarioAux!=null && usuarioAux.getId()!=null) {
				pedido.setid_usuario(usuarioAux.getId());
				pedido.setusuario_descripcion(PedidoConstantesFunciones.getUsuarioDescripcion(usuarioAux));
				pedido.setUsuario(usuarioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarMonedaForeignKey(Pedido pedido,JComboBox jComboBoxid_monedaPedidoGenerico)throws Exception
	{
		try
		{
			Moneda  monedaAux=new Moneda();

			if(jComboBoxid_monedaPedidoGenerico==null) {
				monedaAux=(Moneda)this.jInternalFrameDetalleFormPedido.jComboBoxid_monedaPedido.getSelectedItem();
			} else {
				monedaAux=(Moneda)jComboBoxid_monedaPedidoGenerico.getSelectedItem();
			}

			if(monedaAux!=null && monedaAux.getId()!=null) {
				pedido.setid_moneda(monedaAux.getId());
				pedido.setmoneda_descripcion(PedidoConstantesFunciones.getMonedaDescripcion(monedaAux));
				pedido.setMoneda(monedaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEmpleadoForeignKey(Pedido pedido,JComboBox jComboBoxid_empleadoPedidoGenerico)throws Exception
	{
		try
		{
			Empleado  empleadoAux=new Empleado();

			if(jComboBoxid_empleadoPedidoGenerico==null) {
				empleadoAux=(Empleado)this.jInternalFrameDetalleFormPedido.jComboBoxid_empleadoPedido.getSelectedItem();
			} else {
				empleadoAux=(Empleado)jComboBoxid_empleadoPedidoGenerico.getSelectedItem();
			}

			if(empleadoAux!=null && empleadoAux.getId()!=null) {
				pedido.setid_empleado(empleadoAux.getId());
				pedido.setempleado_descripcion(PedidoConstantesFunciones.getEmpleadoDescripcion(empleadoAux));
				pedido.setEmpleado(empleadoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoPrecioForeignKey(Pedido pedido,JComboBox jComboBoxid_tipo_precioPedidoGenerico)throws Exception
	{
		try
		{
			TipoPrecio  tipoprecioAux=new TipoPrecio();

			if(jComboBoxid_tipo_precioPedidoGenerico==null) {
				tipoprecioAux=(TipoPrecio)this.jInternalFrameDetalleFormPedido.jComboBoxid_tipo_precioPedido.getSelectedItem();
			} else {
				tipoprecioAux=(TipoPrecio)jComboBoxid_tipo_precioPedidoGenerico.getSelectedItem();
			}

			if(tipoprecioAux!=null && tipoprecioAux.getId()!=null) {
				pedido.setid_tipo_precio(tipoprecioAux.getId());
				pedido.settipoprecio_descripcion(PedidoConstantesFunciones.getTipoPrecioDescripcion(tipoprecioAux));
				pedido.setTipoPrecio(tipoprecioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarFormatoForeignKey(Pedido pedido,JComboBox jComboBoxid_formatoPedidoGenerico)throws Exception
	{
		try
		{
			Formato  formatoAux=new Formato();

			if(jComboBoxid_formatoPedidoGenerico==null) {
				formatoAux=(Formato)this.jInternalFrameDetalleFormPedido.jComboBoxid_formatoPedido.getSelectedItem();
			} else {
				formatoAux=(Formato)jComboBoxid_formatoPedidoGenerico.getSelectedItem();
			}

			if(formatoAux!=null) {
				pedido.setid_formato(formatoAux.getId());
				pedido.setformato_descripcion(PedidoConstantesFunciones.getFormatoDescripcion(formatoAux));
				pedido.setFormato(formatoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarClienteForeignKey(Pedido pedido,JComboBox jComboBoxid_clientePedidoGenerico)throws Exception
	{
		try
		{
			Cliente  clienteAux=new Cliente();

			if(jComboBoxid_clientePedidoGenerico==null) {
				clienteAux=(Cliente)this.jInternalFrameDetalleFormPedido.jComboBoxid_clientePedido.getSelectedItem();
			} else {
				clienteAux=(Cliente)jComboBoxid_clientePedidoGenerico.getSelectedItem();
			}

			if(clienteAux!=null && clienteAux.getId()!=null) {
				pedido.setid_cliente(clienteAux.getId());
				pedido.setcliente_descripcion(PedidoConstantesFunciones.getClienteDescripcion(clienteAux));
				pedido.setCliente(clienteAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarSubClienteForeignKey(Pedido pedido,JComboBox jComboBoxid_sub_clientePedidoGenerico)throws Exception
	{
		try
		{
			SubCliente  subclienteAux=new SubCliente();

			if(jComboBoxid_sub_clientePedidoGenerico==null) {
				subclienteAux=(SubCliente)this.jInternalFrameDetalleFormPedido.jComboBoxid_sub_clientePedido.getSelectedItem();
			} else {
				subclienteAux=(SubCliente)jComboBoxid_sub_clientePedidoGenerico.getSelectedItem();
			}

			if(subclienteAux!=null) {
				pedido.setid_sub_cliente(subclienteAux.getId());
				pedido.setsubcliente_descripcion(PedidoConstantesFunciones.getSubClienteDescripcion(subclienteAux));
				pedido.setSubCliente(subclienteAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarVendedorForeignKey(Pedido pedido,JComboBox jComboBoxid_vendedorPedidoGenerico)throws Exception
	{
		try
		{
			Vendedor  vendedorAux=new Vendedor();

			if(jComboBoxid_vendedorPedidoGenerico==null) {
				vendedorAux=(Vendedor)this.jInternalFrameDetalleFormPedido.jComboBoxid_vendedorPedido.getSelectedItem();
			} else {
				vendedorAux=(Vendedor)jComboBoxid_vendedorPedidoGenerico.getSelectedItem();
			}

			if(vendedorAux!=null) {
				pedido.setid_vendedor(vendedorAux.getId());
				pedido.setvendedor_descripcion(PedidoConstantesFunciones.getVendedorDescripcion(vendedorAux));
				pedido.setVendedor(vendedorAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarConsultorForeignKey(Pedido pedido,JComboBox jComboBoxid_consultorPedidoGenerico)throws Exception
	{
		try
		{
			Consultor  consultorAux=new Consultor();

			if(jComboBoxid_consultorPedidoGenerico==null) {
				consultorAux=(Consultor)this.jInternalFrameDetalleFormPedido.jComboBoxid_consultorPedido.getSelectedItem();
			} else {
				consultorAux=(Consultor)jComboBoxid_consultorPedidoGenerico.getSelectedItem();
			}

			if(consultorAux!=null) {
				pedido.setid_consultor(consultorAux.getId());
				pedido.setconsultor_descripcion(PedidoConstantesFunciones.getConsultorDescripcion(consultorAux));
				pedido.setConsultor(consultorAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarResponsableForeignKey(Pedido pedido,JComboBox jComboBoxid_responsablePedidoGenerico)throws Exception
	{
		try
		{
			Responsable  responsableAux=new Responsable();

			if(jComboBoxid_responsablePedidoGenerico==null) {
				responsableAux=(Responsable)this.jInternalFrameDetalleFormPedido.jComboBoxid_responsablePedido.getSelectedItem();
			} else {
				responsableAux=(Responsable)jComboBoxid_responsablePedidoGenerico.getSelectedItem();
			}

			if(responsableAux!=null) {
				pedido.setid_responsable(responsableAux.getId());
				pedido.setresponsable_descripcion(PedidoConstantesFunciones.getResponsableDescripcion(responsableAux));
				pedido.setResponsable(responsableAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEstadoPedidoForeignKey(Pedido pedido,JComboBox jComboBoxid_estado_pedidoPedidoGenerico)throws Exception
	{
		try
		{
			EstadoPedido  estadopedidoAux=new EstadoPedido();

			if(jComboBoxid_estado_pedidoPedidoGenerico==null) {
				estadopedidoAux=(EstadoPedido)this.jInternalFrameDetalleFormPedido.jComboBoxid_estado_pedidoPedido.getSelectedItem();
			} else {
				estadopedidoAux=(EstadoPedido)jComboBoxid_estado_pedidoPedidoGenerico.getSelectedItem();
			}

			if(estadopedidoAux!=null && estadopedidoAux.getId()!=null) {
				pedido.setid_estado_pedido(estadopedidoAux.getId());
				pedido.setestadopedido_descripcion(PedidoConstantesFunciones.getEstadoPedidoDescripcion(estadopedidoAux));
				pedido.setEstadoPedido(estadopedidoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTransporteForeignKey(Pedido pedido,JComboBox jComboBoxid_transportePedidoGenerico)throws Exception
	{
		try
		{
			Transporte  transporteAux=new Transporte();

			if(jComboBoxid_transportePedidoGenerico==null) {
				transporteAux=(Transporte)this.jInternalFrameDetalleFormPedido.jComboBoxid_transportePedido.getSelectedItem();
			} else {
				transporteAux=(Transporte)jComboBoxid_transportePedidoGenerico.getSelectedItem();
			}

			if(transporteAux!=null) {
				pedido.setid_transporte(transporteAux.getId());
				pedido.settransporte_descripcion(PedidoConstantesFunciones.getTransporteDescripcion(transporteAux));
				pedido.setTransporte(transporteAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarRutaTransporteForeignKey(Pedido pedido,JComboBox jComboBoxid_ruta_transportePedidoGenerico)throws Exception
	{
		try
		{
			RutaTransporte  rutatransporteAux=new RutaTransporte();

			if(jComboBoxid_ruta_transportePedidoGenerico==null) {
				rutatransporteAux=(RutaTransporte)this.jInternalFrameDetalleFormPedido.jComboBoxid_ruta_transportePedido.getSelectedItem();
			} else {
				rutatransporteAux=(RutaTransporte)jComboBoxid_ruta_transportePedidoGenerico.getSelectedItem();
			}

			if(rutatransporteAux!=null) {
				pedido.setid_ruta_transporte(rutatransporteAux.getId());
				pedido.setrutatransporte_descripcion(PedidoConstantesFunciones.getRutaTransporteDescripcion(rutatransporteAux));
				pedido.setRutaTransporte(rutatransporteAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoLlamadaForeignKey(Pedido pedido,JComboBox jComboBoxid_tipo_llamadaPedidoGenerico)throws Exception
	{
		try
		{
			TipoLlamada  tipollamadaAux=new TipoLlamada();

			if(jComboBoxid_tipo_llamadaPedidoGenerico==null) {
				tipollamadaAux=(TipoLlamada)this.jInternalFrameDetalleFormPedido.jComboBoxid_tipo_llamadaPedido.getSelectedItem();
			} else {
				tipollamadaAux=(TipoLlamada)jComboBoxid_tipo_llamadaPedidoGenerico.getSelectedItem();
			}

			if(tipollamadaAux!=null) {
				pedido.setid_tipo_llamada(tipollamadaAux.getId());
				pedido.settipollamada_descripcion(PedidoConstantesFunciones.getTipoLlamadaDescripcion(tipollamadaAux));
				pedido.setTipoLlamada(tipollamadaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTransportistaForeignKey(Pedido pedido,JComboBox jComboBoxid_transportistaPedidoGenerico)throws Exception
	{
		try
		{
			Transportista  transportistaAux=new Transportista();

			if(jComboBoxid_transportistaPedidoGenerico==null) {
				transportistaAux=(Transportista)this.jInternalFrameDetalleFormPedido.jComboBoxid_transportistaPedido.getSelectedItem();
			} else {
				transportistaAux=(Transportista)jComboBoxid_transportistaPedidoGenerico.getSelectedItem();
			}

			if(transportistaAux!=null) {
				pedido.setid_transportista(transportistaAux.getId());
				pedido.settransportista_descripcion(PedidoConstantesFunciones.getTransportistaDescripcion(transportistaAux));
				pedido.setTransportista(transportistaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoCambioForeignKey(Pedido pedido,JComboBox jComboBoxid_tipo_cambioPedidoGenerico)throws Exception
	{
		try
		{
			TipoCambio  tipocambioAux=new TipoCambio();

			if(jComboBoxid_tipo_cambioPedidoGenerico==null) {
				tipocambioAux=(TipoCambio)this.jInternalFrameDetalleFormPedido.jComboBoxid_tipo_cambioPedido.getSelectedItem();
			} else {
				tipocambioAux=(TipoCambio)jComboBoxid_tipo_cambioPedidoGenerico.getSelectedItem();
			}

			if(tipocambioAux!=null) {
				pedido.setid_tipo_cambio(tipocambioAux.getId());
				pedido.settipocambio_descripcion(PedidoConstantesFunciones.getTipoCambioDescripcion(tipocambioAux));
				pedido.setTipoCambio(tipocambioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCentroCostoForeignKey(Pedido pedido,JComboBox jComboBoxid_centro_costoPedidoGenerico)throws Exception
	{
		try
		{
			CentroCosto  centrocostoAux=new CentroCosto();

			if(jComboBoxid_centro_costoPedidoGenerico==null) {
				centrocostoAux=(CentroCosto)this.jInternalFrameDetalleFormPedido.jComboBoxid_centro_costoPedido.getSelectedItem();
			} else {
				centrocostoAux=(CentroCosto)jComboBoxid_centro_costoPedidoGenerico.getSelectedItem();
			}

			if(centrocostoAux!=null) {
				pedido.setid_centro_costo(centrocostoAux.getId());
				pedido.setcentrocosto_descripcion(PedidoConstantesFunciones.getCentroCostoDescripcion(centrocostoAux));
				pedido.setCentroCosto(centrocostoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarZonaForeignKey(Pedido pedido,JComboBox jComboBoxid_zonaPedidoGenerico)throws Exception
	{
		try
		{
			Zona  zonaAux=new Zona();

			if(jComboBoxid_zonaPedidoGenerico==null) {
				zonaAux=(Zona)this.jInternalFrameDetalleFormPedido.jComboBoxid_zonaPedido.getSelectedItem();
			} else {
				zonaAux=(Zona)jComboBoxid_zonaPedidoGenerico.getSelectedItem();
			}

			if(zonaAux!=null) {
				pedido.setid_zona(zonaAux.getId());
				pedido.setzona_descripcion(PedidoConstantesFunciones.getZonaDescripcion(zonaAux));
				pedido.setZona(zonaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	


		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEmpresasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEmpresa=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PedidoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPedido!=null) { 
							this.jInternalFrameDetalleFormPedido.jComboBoxid_empresaPedido.removeAllItems();

							for(Empresa empresa:this.empresasForeignKey) {
								this.jInternalFrameDetalleFormPedido.jComboBoxid_empresaPedido.addItem(empresa);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPedido!=null) { 
					}

					if(!PedidoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameSucursalsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingSucursal=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PedidoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPedido!=null) { 
							this.jInternalFrameDetalleFormPedido.jComboBoxid_sucursalPedido.removeAllItems();

							for(Sucursal sucursal:this.sucursalsForeignKey) {
								this.jInternalFrameDetalleFormPedido.jComboBoxid_sucursalPedido.addItem(sucursal);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPedido!=null) { 
					}

					if(!PedidoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEjerciciosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEjercicio=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PedidoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPedido!=null) { 
							this.jInternalFrameDetalleFormPedido.jComboBoxid_ejercicioPedido.removeAllItems();

							for(Ejercicio ejercicio:this.ejerciciosForeignKey) {
								this.jInternalFrameDetalleFormPedido.jComboBoxid_ejercicioPedido.addItem(ejercicio);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPedido!=null) { 
					}

					if(!PedidoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFramePeriodosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingPeriodo=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PedidoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPedido!=null) { 
							this.jInternalFrameDetalleFormPedido.jComboBoxid_periodoPedido.removeAllItems();

							for(Periodo periodo:this.periodosForeignKey) {
								this.jInternalFrameDetalleFormPedido.jComboBoxid_periodoPedido.addItem(periodo);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPedido!=null) { 
					}

					if(!PedidoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameAniosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingAnio=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PedidoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPedido!=null) { 
							this.jInternalFrameDetalleFormPedido.jComboBoxid_anioPedido.removeAllItems();

							for(Anio anio:this.aniosForeignKey) {
								this.jInternalFrameDetalleFormPedido.jComboBoxid_anioPedido.addItem(anio);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPedido!=null) { 
					}

					if(!PedidoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameMessForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingMes=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PedidoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPedido!=null) { 
							this.jInternalFrameDetalleFormPedido.jComboBoxid_mesPedido.removeAllItems();

							for(Mes mes:this.messForeignKey) {
								this.jInternalFrameDetalleFormPedido.jComboBoxid_mesPedido.addItem(mes);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPedido!=null) { 
					}

					if(!PedidoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameUsuariosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingUsuario=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PedidoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPedido!=null) { 
							this.jInternalFrameDetalleFormPedido.jComboBoxid_usuarioPedido.removeAllItems();

							for(Usuario usuario:this.usuariosForeignKey) {
								this.jInternalFrameDetalleFormPedido.jComboBoxid_usuarioPedido.addItem(usuario);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPedido!=null) { 
					}

					if(!PedidoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameMonedasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingMoneda=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PedidoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPedido!=null) { 
							this.jInternalFrameDetalleFormPedido.jComboBoxid_monedaPedido.removeAllItems();

							for(Moneda moneda:this.monedasForeignKey) {
								this.jInternalFrameDetalleFormPedido.jComboBoxid_monedaPedido.addItem(moneda);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPedido!=null) { 
					}

					if(!PedidoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEmpleadosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEmpleado=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PedidoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPedido!=null) { 
							this.jInternalFrameDetalleFormPedido.jComboBoxid_empleadoPedido.removeAllItems();

							for(Empleado empleado:this.empleadosForeignKey) {
								this.jInternalFrameDetalleFormPedido.jComboBoxid_empleadoPedido.addItem(empleado);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPedido!=null) { 
					}

					if(!PedidoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdEmpleado") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!PedidoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_empleadoFK_IdEmpleadoPedido.removeAllItems();

							for(Empleado empleado:this.empleadosForeignKey) {
								this.jComboBoxid_empleadoFK_IdEmpleadoPedido.addItem(empleado);
							}
						}

						if(!PedidoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoPreciosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoPrecio=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PedidoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPedido!=null) { 
							this.jInternalFrameDetalleFormPedido.jComboBoxid_tipo_precioPedido.removeAllItems();

							for(TipoPrecio tipoprecio:this.tipopreciosForeignKey) {
								this.jInternalFrameDetalleFormPedido.jComboBoxid_tipo_precioPedido.addItem(tipoprecio);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPedido!=null) { 
					}

					if(!PedidoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoPrecio") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!PedidoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_precioFK_IdTipoPrecioPedido.removeAllItems();

							for(TipoPrecio tipoprecio:this.tipopreciosForeignKey) {
								this.jComboBoxid_tipo_precioFK_IdTipoPrecioPedido.addItem(tipoprecio);
							}
						}

						if(!PedidoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameFormatosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingFormato=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PedidoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPedido!=null) { 
							this.jInternalFrameDetalleFormPedido.jComboBoxid_formatoPedido.removeAllItems();

							for(Formato formato:this.formatosForeignKey) {
								this.jInternalFrameDetalleFormPedido.jComboBoxid_formatoPedido.addItem(formato);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPedido!=null) { 
					}

					if(!PedidoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdFormato") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!PedidoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_formatoFK_IdFormatoPedido.removeAllItems();

							for(Formato formato:this.formatosForeignKey) {
								this.jComboBoxid_formatoFK_IdFormatoPedido.addItem(formato);
							}
						}

						if(!PedidoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameClientesForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCliente=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PedidoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPedido!=null) { 
							this.jInternalFrameDetalleFormPedido.jComboBoxid_clientePedido.removeAllItems();

							for(Cliente cliente:this.clientesForeignKey) {
								this.jInternalFrameDetalleFormPedido.jComboBoxid_clientePedido.addItem(cliente);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPedido!=null) { 
					}

					if(!PedidoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdCliente") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!PedidoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_clienteFK_IdClientePedido.removeAllItems();

							for(Cliente cliente:this.clientesForeignKey) {
								this.jComboBoxid_clienteFK_IdClientePedido.addItem(cliente);
							}
						}

						if(!PedidoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameSubClientesForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingSubCliente=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PedidoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPedido!=null) { 
							this.jInternalFrameDetalleFormPedido.jComboBoxid_sub_clientePedido.removeAllItems();

							for(SubCliente subcliente:this.subclientesForeignKey) {
								this.jInternalFrameDetalleFormPedido.jComboBoxid_sub_clientePedido.addItem(subcliente);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPedido!=null) { 
					}

					if(!PedidoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdSubCliente") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!PedidoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_sub_clienteFK_IdSubClientePedido.removeAllItems();

							for(SubCliente subcliente:this.subclientesForeignKey) {
								this.jComboBoxid_sub_clienteFK_IdSubClientePedido.addItem(subcliente);
							}
						}

						if(!PedidoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameVendedorsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingVendedor=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PedidoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPedido!=null) { 
							this.jInternalFrameDetalleFormPedido.jComboBoxid_vendedorPedido.removeAllItems();

							for(Vendedor vendedor:this.vendedorsForeignKey) {
								this.jInternalFrameDetalleFormPedido.jComboBoxid_vendedorPedido.addItem(vendedor);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPedido!=null) { 
					}

					if(!PedidoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdVendedor") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!PedidoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_vendedorFK_IdVendedorPedido.removeAllItems();

							for(Vendedor vendedor:this.vendedorsForeignKey) {
								this.jComboBoxid_vendedorFK_IdVendedorPedido.addItem(vendedor);
							}
						}

						if(!PedidoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameConsultorsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingConsultor=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PedidoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPedido!=null) { 
							this.jInternalFrameDetalleFormPedido.jComboBoxid_consultorPedido.removeAllItems();

							for(Consultor consultor:this.consultorsForeignKey) {
								this.jInternalFrameDetalleFormPedido.jComboBoxid_consultorPedido.addItem(consultor);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPedido!=null) { 
					}

					if(!PedidoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdConsultor") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!PedidoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_consultorFK_IdConsultorPedido.removeAllItems();

							for(Consultor consultor:this.consultorsForeignKey) {
								this.jComboBoxid_consultorFK_IdConsultorPedido.addItem(consultor);
							}
						}

						if(!PedidoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameResponsablesForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingResponsable=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PedidoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPedido!=null) { 
							this.jInternalFrameDetalleFormPedido.jComboBoxid_responsablePedido.removeAllItems();

							for(Responsable responsable:this.responsablesForeignKey) {
								this.jInternalFrameDetalleFormPedido.jComboBoxid_responsablePedido.addItem(responsable);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPedido!=null) { 
					}

					if(!PedidoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdResponsable") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!PedidoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_responsableFK_IdResponsablePedido.removeAllItems();

							for(Responsable responsable:this.responsablesForeignKey) {
								this.jComboBoxid_responsableFK_IdResponsablePedido.addItem(responsable);
							}
						}

						if(!PedidoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEstadoPedidosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEstadoPedido=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PedidoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPedido!=null) { 
							this.jInternalFrameDetalleFormPedido.jComboBoxid_estado_pedidoPedido.removeAllItems();

							for(EstadoPedido estadopedido:this.estadopedidosForeignKey) {
								this.jInternalFrameDetalleFormPedido.jComboBoxid_estado_pedidoPedido.addItem(estadopedido);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPedido!=null) { 
					}

					if(!PedidoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdEstadoPedido") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!PedidoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_estado_pedidoFK_IdEstadoPedidoPedido.removeAllItems();

							for(EstadoPedido estadopedido:this.estadopedidosForeignKey) {
								this.jComboBoxid_estado_pedidoFK_IdEstadoPedidoPedido.addItem(estadopedido);
							}
						}

						if(!PedidoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTransportesForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTransporte=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PedidoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPedido!=null) { 
							this.jInternalFrameDetalleFormPedido.jComboBoxid_transportePedido.removeAllItems();

							for(Transporte transporte:this.transportesForeignKey) {
								this.jInternalFrameDetalleFormPedido.jComboBoxid_transportePedido.addItem(transporte);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPedido!=null) { 
					}

					if(!PedidoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTransporte") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!PedidoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_transporteFK_IdTransportePedido.removeAllItems();

							for(Transporte transporte:this.transportesForeignKey) {
								this.jComboBoxid_transporteFK_IdTransportePedido.addItem(transporte);
							}
						}

						if(!PedidoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameRutaTransportesForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingRutaTransporte=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PedidoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPedido!=null) { 
							this.jInternalFrameDetalleFormPedido.jComboBoxid_ruta_transportePedido.removeAllItems();

							for(RutaTransporte rutatransporte:this.rutatransportesForeignKey) {
								this.jInternalFrameDetalleFormPedido.jComboBoxid_ruta_transportePedido.addItem(rutatransporte);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPedido!=null) { 
					}

					if(!PedidoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdRutaTransporte") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!PedidoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_ruta_transporteFK_IdRutaTransportePedido.removeAllItems();

							for(RutaTransporte rutatransporte:this.rutatransportesForeignKey) {
								this.jComboBoxid_ruta_transporteFK_IdRutaTransportePedido.addItem(rutatransporte);
							}
						}

						if(!PedidoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoLlamadasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoLlamada=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PedidoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPedido!=null) { 
							this.jInternalFrameDetalleFormPedido.jComboBoxid_tipo_llamadaPedido.removeAllItems();

							for(TipoLlamada tipollamada:this.tipollamadasForeignKey) {
								this.jInternalFrameDetalleFormPedido.jComboBoxid_tipo_llamadaPedido.addItem(tipollamada);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPedido!=null) { 
					}

					if(!PedidoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoLlamada") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!PedidoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_llamadaFK_IdTipoLlamadaPedido.removeAllItems();

							for(TipoLlamada tipollamada:this.tipollamadasForeignKey) {
								this.jComboBoxid_tipo_llamadaFK_IdTipoLlamadaPedido.addItem(tipollamada);
							}
						}

						if(!PedidoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTransportistasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTransportista=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PedidoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPedido!=null) { 
							this.jInternalFrameDetalleFormPedido.jComboBoxid_transportistaPedido.removeAllItems();

							for(Transportista transportista:this.transportistasForeignKey) {
								this.jInternalFrameDetalleFormPedido.jComboBoxid_transportistaPedido.addItem(transportista);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPedido!=null) { 
					}

					if(!PedidoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTransportista") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!PedidoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_transportistaFK_IdTransportistaPedido.removeAllItems();

							for(Transportista transportista:this.transportistasForeignKey) {
								this.jComboBoxid_transportistaFK_IdTransportistaPedido.addItem(transportista);
							}
						}

						if(!PedidoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoCambiosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoCambio=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PedidoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPedido!=null) { 
							this.jInternalFrameDetalleFormPedido.jComboBoxid_tipo_cambioPedido.removeAllItems();

							for(TipoCambio tipocambio:this.tipocambiosForeignKey) {
								this.jInternalFrameDetalleFormPedido.jComboBoxid_tipo_cambioPedido.addItem(tipocambio);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPedido!=null) { 
					}

					if(!PedidoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoCambio") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!PedidoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_cambioFK_IdTipoCambioPedido.removeAllItems();

							for(TipoCambio tipocambio:this.tipocambiosForeignKey) {
								this.jComboBoxid_tipo_cambioFK_IdTipoCambioPedido.addItem(tipocambio);
							}
						}

						if(!PedidoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCentroCostosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCentroCosto=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PedidoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPedido!=null) { 
							this.jInternalFrameDetalleFormPedido.jComboBoxid_centro_costoPedido.removeAllItems();

							for(CentroCosto centrocosto:this.centrocostosForeignKey) {
								this.jInternalFrameDetalleFormPedido.jComboBoxid_centro_costoPedido.addItem(centrocosto);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPedido!=null) { 
					}

					if(!PedidoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdCentroCosto") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!PedidoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_centro_costoFK_IdCentroCostoPedido.removeAllItems();

							for(CentroCosto centrocosto:this.centrocostosForeignKey) {
								this.jComboBoxid_centro_costoFK_IdCentroCostoPedido.addItem(centrocosto);
							}
						}

						if(!PedidoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameZonasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingZona=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PedidoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPedido!=null) { 
							this.jInternalFrameDetalleFormPedido.jComboBoxid_zonaPedido.removeAllItems();

							for(Zona zona:this.zonasForeignKey) {
								this.jInternalFrameDetalleFormPedido.jComboBoxid_zonaPedido.addItem(zona);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPedido!=null) { 
					}

					if(!PedidoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdZona") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!PedidoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_zonaFK_IdZonaPedido.removeAllItems();

							for(Zona zona:this.zonasForeignKey) {
								this.jComboBoxid_zonaFK_IdZonaPedido.addItem(zona);
							}
						}

						if(!PedidoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

	


		public void setSelectedItemCombosFrameEmpresaForeignKey(Empresa empresa,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPedido!=null) {
							this.jInternalFrameDetalleFormPedido.jComboBoxid_empresaPedido.setSelectedItem(empresa);
						}
					} else {
						if(this.jInternalFrameDetalleFormPedido!=null) {
							this.jInternalFrameDetalleFormPedido.jComboBoxid_empresaPedido.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameSucursalForeignKey(Sucursal sucursal,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPedido!=null) {
							this.jInternalFrameDetalleFormPedido.jComboBoxid_sucursalPedido.setSelectedItem(sucursal);
						}
					} else {
						if(this.jInternalFrameDetalleFormPedido!=null) {
							this.jInternalFrameDetalleFormPedido.jComboBoxid_sucursalPedido.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEjercicioForeignKey(Ejercicio ejercicio,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPedido!=null) {
							this.jInternalFrameDetalleFormPedido.jComboBoxid_ejercicioPedido.setSelectedItem(ejercicio);
						}
					} else {
						if(this.jInternalFrameDetalleFormPedido!=null) {
							this.jInternalFrameDetalleFormPedido.jComboBoxid_ejercicioPedido.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFramePeriodoForeignKey(Periodo periodo,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPedido!=null) {
							this.jInternalFrameDetalleFormPedido.jComboBoxid_periodoPedido.setSelectedItem(periodo);
						}
					} else {
						if(this.jInternalFrameDetalleFormPedido!=null) {
							this.jInternalFrameDetalleFormPedido.jComboBoxid_periodoPedido.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameAnioForeignKey(Anio anio,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPedido!=null) {
							this.jInternalFrameDetalleFormPedido.jComboBoxid_anioPedido.setSelectedItem(anio);
						}
					} else {
						if(this.jInternalFrameDetalleFormPedido!=null) {
							this.jInternalFrameDetalleFormPedido.jComboBoxid_anioPedido.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameMesForeignKey(Mes mes,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPedido!=null) {
							this.jInternalFrameDetalleFormPedido.jComboBoxid_mesPedido.setSelectedItem(mes);
						}
					} else {
						if(this.jInternalFrameDetalleFormPedido!=null) {
							this.jInternalFrameDetalleFormPedido.jComboBoxid_mesPedido.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameUsuarioForeignKey(Usuario usuario,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPedido!=null) {
							this.jInternalFrameDetalleFormPedido.jComboBoxid_usuarioPedido.setSelectedItem(usuario);
						}
					} else {
						if(this.jInternalFrameDetalleFormPedido!=null) {
							this.jInternalFrameDetalleFormPedido.jComboBoxid_usuarioPedido.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameMonedaForeignKey(Moneda moneda,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPedido!=null) {
							this.jInternalFrameDetalleFormPedido.jComboBoxid_monedaPedido.setSelectedItem(moneda);
						}
					} else {
						if(this.jInternalFrameDetalleFormPedido!=null) {
							this.jInternalFrameDetalleFormPedido.jComboBoxid_monedaPedido.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEmpleadoForeignKey(Empleado empleado,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPedido!=null) {
							this.jInternalFrameDetalleFormPedido.jComboBoxid_empleadoPedido.setSelectedItem(empleado);
						}
					} else {
						if(this.jInternalFrameDetalleFormPedido!=null) {
							this.jInternalFrameDetalleFormPedido.jComboBoxid_empleadoPedido.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_empleadoFK_IdEmpleadoPedido.setSelectedItem(empleado);
						} else {
							this.jComboBoxid_empleadoFK_IdEmpleadoPedido.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoPrecioForeignKey(TipoPrecio tipoprecio,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPedido!=null) {
							this.jInternalFrameDetalleFormPedido.jComboBoxid_tipo_precioPedido.setSelectedItem(tipoprecio);
						}
					} else {
						if(this.jInternalFrameDetalleFormPedido!=null) {
							this.jInternalFrameDetalleFormPedido.jComboBoxid_tipo_precioPedido.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_precioFK_IdTipoPrecioPedido.setSelectedItem(tipoprecio);
						} else {
							this.jComboBoxid_tipo_precioFK_IdTipoPrecioPedido.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameFormatoForeignKey(Formato formato,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPedido!=null) {
							this.jInternalFrameDetalleFormPedido.jComboBoxid_formatoPedido.setSelectedItem(formato);
						}
					} else {
						if(this.jInternalFrameDetalleFormPedido!=null) {
							this.jInternalFrameDetalleFormPedido.jComboBoxid_formatoPedido.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_formatoFK_IdFormatoPedido.setSelectedItem(formato);
						} else {
							this.jComboBoxid_formatoFK_IdFormatoPedido.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameClienteForeignKey(Cliente cliente,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPedido!=null) {
							this.jInternalFrameDetalleFormPedido.jComboBoxid_clientePedido.setSelectedItem(cliente);
						}
					} else {
						if(this.jInternalFrameDetalleFormPedido!=null) {
							this.jInternalFrameDetalleFormPedido.jComboBoxid_clientePedido.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_clienteFK_IdClientePedido.setSelectedItem(cliente);
						} else {
							this.jComboBoxid_clienteFK_IdClientePedido.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameSubClienteForeignKey(SubCliente subcliente,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPedido!=null) {
							this.jInternalFrameDetalleFormPedido.jComboBoxid_sub_clientePedido.setSelectedItem(subcliente);
						}
					} else {
						if(this.jInternalFrameDetalleFormPedido!=null) {
							this.jInternalFrameDetalleFormPedido.jComboBoxid_sub_clientePedido.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_sub_clienteFK_IdSubClientePedido.setSelectedItem(subcliente);
						} else {
							this.jComboBoxid_sub_clienteFK_IdSubClientePedido.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameVendedorForeignKey(Vendedor vendedor,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPedido!=null) {
							this.jInternalFrameDetalleFormPedido.jComboBoxid_vendedorPedido.setSelectedItem(vendedor);
						}
					} else {
						if(this.jInternalFrameDetalleFormPedido!=null) {
							this.jInternalFrameDetalleFormPedido.jComboBoxid_vendedorPedido.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_vendedorFK_IdVendedorPedido.setSelectedItem(vendedor);
						} else {
							this.jComboBoxid_vendedorFK_IdVendedorPedido.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameConsultorForeignKey(Consultor consultor,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPedido!=null) {
							this.jInternalFrameDetalleFormPedido.jComboBoxid_consultorPedido.setSelectedItem(consultor);
						}
					} else {
						if(this.jInternalFrameDetalleFormPedido!=null) {
							this.jInternalFrameDetalleFormPedido.jComboBoxid_consultorPedido.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_consultorFK_IdConsultorPedido.setSelectedItem(consultor);
						} else {
							this.jComboBoxid_consultorFK_IdConsultorPedido.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameResponsableForeignKey(Responsable responsable,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPedido!=null) {
							this.jInternalFrameDetalleFormPedido.jComboBoxid_responsablePedido.setSelectedItem(responsable);
						}
					} else {
						if(this.jInternalFrameDetalleFormPedido!=null) {
							this.jInternalFrameDetalleFormPedido.jComboBoxid_responsablePedido.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_responsableFK_IdResponsablePedido.setSelectedItem(responsable);
						} else {
							this.jComboBoxid_responsableFK_IdResponsablePedido.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEstadoPedidoForeignKey(EstadoPedido estadopedido,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPedido!=null) {
							this.jInternalFrameDetalleFormPedido.jComboBoxid_estado_pedidoPedido.setSelectedItem(estadopedido);
						}
					} else {
						if(this.jInternalFrameDetalleFormPedido!=null) {
							this.jInternalFrameDetalleFormPedido.jComboBoxid_estado_pedidoPedido.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_estado_pedidoFK_IdEstadoPedidoPedido.setSelectedItem(estadopedido);
						} else {
							this.jComboBoxid_estado_pedidoFK_IdEstadoPedidoPedido.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTransporteForeignKey(Transporte transporte,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPedido!=null) {
							this.jInternalFrameDetalleFormPedido.jComboBoxid_transportePedido.setSelectedItem(transporte);
						}
					} else {
						if(this.jInternalFrameDetalleFormPedido!=null) {
							this.jInternalFrameDetalleFormPedido.jComboBoxid_transportePedido.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_transporteFK_IdTransportePedido.setSelectedItem(transporte);
						} else {
							this.jComboBoxid_transporteFK_IdTransportePedido.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameRutaTransporteForeignKey(RutaTransporte rutatransporte,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPedido!=null) {
							this.jInternalFrameDetalleFormPedido.jComboBoxid_ruta_transportePedido.setSelectedItem(rutatransporte);
						}
					} else {
						if(this.jInternalFrameDetalleFormPedido!=null) {
							this.jInternalFrameDetalleFormPedido.jComboBoxid_ruta_transportePedido.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_ruta_transporteFK_IdRutaTransportePedido.setSelectedItem(rutatransporte);
						} else {
							this.jComboBoxid_ruta_transporteFK_IdRutaTransportePedido.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoLlamadaForeignKey(TipoLlamada tipollamada,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPedido!=null) {
							this.jInternalFrameDetalleFormPedido.jComboBoxid_tipo_llamadaPedido.setSelectedItem(tipollamada);
						}
					} else {
						if(this.jInternalFrameDetalleFormPedido!=null) {
							this.jInternalFrameDetalleFormPedido.jComboBoxid_tipo_llamadaPedido.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_llamadaFK_IdTipoLlamadaPedido.setSelectedItem(tipollamada);
						} else {
							this.jComboBoxid_tipo_llamadaFK_IdTipoLlamadaPedido.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTransportistaForeignKey(Transportista transportista,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPedido!=null) {
							this.jInternalFrameDetalleFormPedido.jComboBoxid_transportistaPedido.setSelectedItem(transportista);
						}
					} else {
						if(this.jInternalFrameDetalleFormPedido!=null) {
							this.jInternalFrameDetalleFormPedido.jComboBoxid_transportistaPedido.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_transportistaFK_IdTransportistaPedido.setSelectedItem(transportista);
						} else {
							this.jComboBoxid_transportistaFK_IdTransportistaPedido.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoCambioForeignKey(TipoCambio tipocambio,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPedido!=null) {
							this.jInternalFrameDetalleFormPedido.jComboBoxid_tipo_cambioPedido.setSelectedItem(tipocambio);
						}
					} else {
						if(this.jInternalFrameDetalleFormPedido!=null) {
							this.jInternalFrameDetalleFormPedido.jComboBoxid_tipo_cambioPedido.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_cambioFK_IdTipoCambioPedido.setSelectedItem(tipocambio);
						} else {
							this.jComboBoxid_tipo_cambioFK_IdTipoCambioPedido.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCentroCostoForeignKey(CentroCosto centrocosto,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPedido!=null) {
							this.jInternalFrameDetalleFormPedido.jComboBoxid_centro_costoPedido.setSelectedItem(centrocosto);
						}
					} else {
						if(this.jInternalFrameDetalleFormPedido!=null) {
							this.jInternalFrameDetalleFormPedido.jComboBoxid_centro_costoPedido.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_centro_costoFK_IdCentroCostoPedido.setSelectedItem(centrocosto);
						} else {
							this.jComboBoxid_centro_costoFK_IdCentroCostoPedido.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameZonaForeignKey(Zona zona,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPedido!=null) {
							this.jInternalFrameDetalleFormPedido.jComboBoxid_zonaPedido.setSelectedItem(zona);
						}
					} else {
						if(this.jInternalFrameDetalleFormPedido!=null) {
							this.jInternalFrameDetalleFormPedido.jComboBoxid_zonaPedido.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_zonaFK_IdZonaPedido.setSelectedItem(zona);
						} else {
							this.jComboBoxid_zonaFK_IdZonaPedido.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

	


	
	public void refrescarForeignKeysDescripcionesPedido() throws Exception {
		//SI FUNCIONA DEEPLOAD ESTO VA AL ULTIMO
		if(Constantes.ISUSAEJBLOGICLAYER) {
			PedidoConstantesFunciones.refrescarForeignKeysDescripcionesPedido(this.pedidoLogic.getPedidos());
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			PedidoConstantesFunciones.refrescarForeignKeysDescripcionesPedido(this.pedidos);
		}
		
		/*
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		classes.add(new Classe(Empresa.class));
		classes.add(new Classe(Sucursal.class));
		classes.add(new Classe(Ejercicio.class));
		classes.add(new Classe(Periodo.class));
		classes.add(new Classe(Anio.class));
		classes.add(new Classe(Mes.class));
		classes.add(new Classe(Usuario.class));
		classes.add(new Classe(Moneda.class));
		classes.add(new Classe(Empleado.class));
		classes.add(new Classe(TipoPrecio.class));
		classes.add(new Classe(Formato.class));
		classes.add(new Classe(Cliente.class));
		classes.add(new Classe(SubCliente.class));
		classes.add(new Classe(Vendedor.class));
		classes.add(new Classe(Consultor.class));
		classes.add(new Classe(Responsable.class));
		classes.add(new Classe(EstadoPedido.class));
		classes.add(new Classe(Transporte.class));
		classes.add(new Classe(RutaTransporte.class));
		classes.add(new Classe(TipoLlamada.class));
		classes.add(new Classe(Transportista.class));
		classes.add(new Classe(TipoCambio.class));
		classes.add(new Classe(CentroCosto.class));
		classes.add(new Classe(Zona.class));
			
		if(Constantes.ISUSAEJBLOGICLAYER) {
			//USA LOS OBJETOS DE LOGIC DIRECTAMENTE
			//pedidoLogic.setPedidos(this.pedidos);
			pedidoLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
	
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		*/				
	}	
	
	
	
	public Integer getiNumeroPaginacion() {
		return iNumeroPaginacion;
	}

	public void setiNumeroPaginacion(Integer iNumeroPaginacion) {
		this.iNumeroPaginacion= iNumeroPaginacion;
	}
	
	public Integer getiNumeroPaginacionPagina() {
		return iNumeroPaginacionPagina;
	}

	public void setiNumeroPaginacionPagina(Integer iNumeroPaginacionPagina) {
		this.iNumeroPaginacionPagina= iNumeroPaginacionPagina;
	}
	
	
	public Boolean getIsSeleccionarTodos() {
		return this.isSeleccionarTodos;
	}

	public void setIsSeleccionarTodos(Boolean isSeleccionarTodos) {
		this.isSeleccionarTodos= isSeleccionarTodos;
	}
	
	public Boolean getEsControlTabla() {
		return this.esControlTabla;
	}

	public void setEsControlTabla(Boolean esControlTabla) {
		this.esControlTabla= esControlTabla;
	}
	
	public Boolean getIsSeleccionados() {
		return this.isSeleccionados;
	}

	public void setIsSeleccionados(Boolean isSeleccionados) {
		this.isSeleccionados= isSeleccionados;
	}
	
	public Boolean getIsPostAccionNuevo() {
		return this.isPostAccionNuevo;
	}

	public void setIsPostAccionNuevo(Boolean isPostAccionNuevo) {
		this.isPostAccionNuevo= isPostAccionNuevo;
	}
	
	public Boolean getIsPostAccionSinCerrar() {
		return this.isPostAccionSinCerrar;
	}

	public void setIsPostAccionSinCerrar(Boolean isPostAccionSinCerrar) {
		this.isPostAccionSinCerrar= isPostAccionSinCerrar;
	}
	
	public Boolean getIsPostAccionSinMensaje() {
		return this.isPostAccionSinMensaje;
	}

	public void setIsPostAccionSinMensaje(Boolean isPostAccionSinMensaje) {
		this.isPostAccionSinMensaje= isPostAccionSinMensaje;
	}
	
	public Boolean getConGraficoReporte() {
		return this.conGraficoReporte;
	}

	public void setConGraficoReporte(Boolean conGraficoReporte) {
		this.conGraficoReporte= conGraficoReporte;
	}
	
	
	public ArrayList<Reporte> gettiposArchivosReportes() {
		return this.tiposArchivosReportes;
	}
	
	public void settiposArchivosReportes(ArrayList<Reporte> tiposArchivosReportes) {
		this.tiposArchivosReportes = tiposArchivosReportes;
	}
	
	//TIPOS ARCHIVOS DINAMICOS
	public ArrayList<Reporte> gettiposArchivosReportesDinamico() {
		return this.tiposArchivosReportesDinamico;
	}
	
	public void settiposArchivosReportesDinamico(ArrayList<Reporte> tiposArchivosReportesDinamico) {
		this.tiposArchivosReportesDinamico = tiposArchivosReportesDinamico;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportes() {
		return this.tiposReportes;
	}
	
	public void settiposReportes(ArrayList<Reporte> tiposReportes) {
		this.tiposReportes = tiposReportes;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportesDinamico() {
		return this.tiposReportesDinamico;
	}
	
	public void settiposReportesDinamico(ArrayList<Reporte> tiposReportesDinamico) {
		this.tiposReportesDinamico = tiposReportesDinamico;
	}
	
	//TIPOS GRAFICOS REPORTES
	public ArrayList<Reporte> gettiposGraficosReportes() {
		return this.tiposGraficosReportes;
	}
	
	public void settiposGraficosReportes(ArrayList<Reporte> tiposGraficosReportes) {
		this.tiposGraficosReportes = tiposGraficosReportes;
	}
	
	public ArrayList<Reporte> gettiposPaginacion() {
		return this.tiposPaginacion;
	}
	
	public void settiposPaginacion(ArrayList<Reporte> tiposPaginacion) {
		this.tiposPaginacion = tiposPaginacion;
	}
	
	public ArrayList<Reporte> gettiposRelaciones() {
		return this.tiposRelaciones;
	}
	
	public void settiposRelaciones(ArrayList<Reporte> tiposRelaciones) {
		this.tiposRelaciones= tiposRelaciones;
	}
	
	public ArrayList<Reporte> gettiposAcciones() {
		return this.tiposAcciones;
	}
	
	public void settiposAcciones(ArrayList<Reporte> tiposAcciones) {
		this.tiposAcciones = tiposAcciones;
	}
	
	public ArrayList<Reporte> gettiposAccionesFormulario() {
		return this.tiposAccionesFormulario;
	}
	
	public void settiposAccionesFormulario(ArrayList<Reporte> tiposAccionesFormulario) {
		this.tiposAccionesFormulario = tiposAccionesFormulario;
	}
	
	public ArrayList<Reporte> gettiposSeleccionar() {
		return this.tiposSeleccionar;
	}
	
	public void settiposSeleccionar(ArrayList<Reporte> tiposSeleccionar) {
		this.tiposSeleccionar = tiposSeleccionar;
	}
	
	public ArrayList<Reporte> gettiposColumnasSelect() {
		return this.tiposColumnasSelect;
	}
	
	public void settiposColumnasSelect(ArrayList<Reporte> tiposColumnasSelect) {
		this.tiposColumnasSelect = tiposColumnasSelect;
	}
		
	public ArrayList<Reporte> gettiposRelacionesSelect() {
		return this.tiposRelacionesSelect;
	}
	
	public void settiposRelacionesSelect(ArrayList<Reporte> tiposRelacionesSelect) {
		this.tiposRelacionesSelect = tiposRelacionesSelect;
	}
	
	public Long getIIdUsuarioSesion() {
		return lIdUsuarioSesion;
	}

	public void setIIdUsuarioSesion(Long lIdUsuarioSesion) {
		this.lIdUsuarioSesion = lIdUsuarioSesion;
	}
	
	
	public List<Accion> getAccions() {
		return this.accions;
	}

	public void setAccions(List<Accion> accions) {
		this.accions = accions;
	}
	
	public List<Accion> getAccionsFormulario() {
		return this.accionsFormulario;
	}

	public void setAccionsFormulario(List<Accion> accionsFormulario) {
		this.accionsFormulario = accionsFormulario;
	}
	
	public String getsAccionMantenimiento() {
		return sAccionMantenimiento;
	}

	public void setsAccionMantenimiento(String sAccionMantenimiento) {
		this.sAccionMantenimiento = sAccionMantenimiento;
	}

	public String getsAccionBusqueda() {
		return sAccionBusqueda;
	}

	public void setsAccionBusqueda(String sAccionBusqueda) {
		this.sAccionBusqueda = sAccionBusqueda;
	}

	public String getsAccionAdicional() {
		return sAccionAdicional;
	}

	public void setsAccionAdicional(String sAccionAdicional) {
		this.sAccionAdicional = sAccionAdicional;
	}

	public String getsUltimaBusqueda() {
		return sUltimaBusqueda;
	}

	public void setsUltimaBusqueda(String sUltimaBusqueda) {
		this.sUltimaBusqueda = sUltimaBusqueda;
	}
	
	public String getsTipoArchivoReporte() {
		return sTipoArchivoReporte;
	}

	public void setsTipoArchivoReporte(String sTipoArchivoReporte) {
		this.sTipoArchivoReporte = sTipoArchivoReporte;
	}
	
	public String getsTipoArchivoReporteDinamico() {
		return sTipoArchivoReporteDinamico;
	}

	public void setsTipoArchivoReporteDinamico(String sTipoArchivoReporteDinamico) {
		this.sTipoArchivoReporteDinamico = sTipoArchivoReporteDinamico;
	}
	
	public String getsTipoReporte() {
		return sTipoReporte;
	}

	public void setsTipoReporte(String sTipoReporte) {
		this.sTipoReporte = sTipoReporte;
	}
	
	public String getsTipoReporteDinamico() {
		return sTipoReporteDinamico;
	}

	public void setsTipoReporteDinamico(String sTipoReporteDinamico) {
		this.sTipoReporteDinamico = sTipoReporteDinamico;
	}
	
	public String getsTipoGraficoReporte() {
		return sTipoGraficoReporte;
	}

	public void setsTipoGraficoReporte(String sTipoGraficoReporte) {
		this.sTipoGraficoReporte = sTipoGraficoReporte;
	}
	
	public String getsTipoPaginacion() {
		return sTipoPaginacion;
	}

	public void setsTipoPaginacion(String sTipoPaginacion) {
		this.sTipoPaginacion = sTipoPaginacion;
	}
	
	public String getsTipoRelacion() {
		return sTipoRelacion;
	}

	public void setsTipoRelacion(String sTipoRelacion) {
		this.sTipoRelacion = sTipoRelacion;
	}
	
	public String getsTipoAccion() {
		return sTipoAccion;
	}

	public void setsTipoAccion(String sTipoAccion) {
		this.sTipoAccion = sTipoAccion;
	}
	
	public String getsTipoAccionFormulario() {
		return sTipoAccionFormulario;
	}

	public void setsTipoAccionFormulario(String sTipoAccionFormulario) {
		this.sTipoAccionFormulario = sTipoAccionFormulario;
	}
	
	public String getsTipoSeleccionar() {
		return sTipoSeleccionar;
	}

	public void setsTipoSeleccionar(String sTipoSeleccionar) {
		this.sTipoSeleccionar = sTipoSeleccionar;
	}
	
	public String getsValorCampoGeneral() {
		return sValorCampoGeneral;
	}

	public void setsValorCampoGeneral(String sValorCampoGeneral) {
		this.sValorCampoGeneral = sValorCampoGeneral;
	}			

	public String getsDetalleReporte() {
		return sDetalleReporte;
	}

	public void setsDetalleReporte(String sDetalleReporte) {
		this.sDetalleReporte = sDetalleReporte;
	}
	
	
	public String getsTipoReporteExtra() {
		return sTipoReporteExtra;
	}

	public void setsTipoReporteExtra(String sTipoReporteExtra) {
		this.sTipoReporteExtra = sTipoReporteExtra;
	}
	
	public Boolean getesReporteDinamico() {
		return esReporteDinamico;
	}	
	
	public void setesReporteDinamico(Boolean esReporteDinamico) {
		this.esReporteDinamico = esReporteDinamico;
	}
	
	public Boolean getesRecargarFks() {
		return esRecargarFks;
	}	
	
	public void setesRecargarFks(Boolean esRecargarFks) {
		this.esRecargarFks = esRecargarFks;
	}
	
	public Boolean getesReporteAccionProceso() {
		return esReporteAccionProceso;
	}	
	
	public void setesReporteAccionProceso(Boolean esReporteAccionProceso) {
		this.esReporteAccionProceso= esReporteAccionProceso;
	}
		
	public PedidoParameterReturnGeneral getPedidoParameterGeneral() {
		return this.pedidoParameterGeneral;
	}
	
	public void setPedidoParameterGeneral(PedidoParameterReturnGeneral pedidoParameterGeneral) {
		this.pedidoParameterGeneral = pedidoParameterGeneral;
	}
	
	public String getsPathReporteDinamico() {
		return sPathReporteDinamico;
	}

	public void setsPathReporteDinamico(String sPathReporteDinamico) {
		this.sPathReporteDinamico = sPathReporteDinamico;
	}
		
	public Boolean getisMostrarNumeroPaginacion() {
		return isMostrarNumeroPaginacion;
	}

	public void setisMostrarNumeroPaginacion(Boolean isMostrarNumeroPaginacion) {
		this.isMostrarNumeroPaginacion = isMostrarNumeroPaginacion;
	}
	
	public Mensaje getMensaje() {
		return mensaje;
	}

	public void setMensaje(Mensaje mensaje) {
		this.mensaje = mensaje;
	}
	
	public Boolean getIsPermisoTodoPedido() {
		return isPermisoTodoPedido;
	}

	public void setIsPermisoTodoPedido(Boolean isPermisoTodoPedido) {
		this.isPermisoTodoPedido = isPermisoTodoPedido;
	}

	public Boolean getIsPermisoNuevoPedido() {
		return isPermisoNuevoPedido;
	}

	public void setIsPermisoNuevoPedido(Boolean isPermisoNuevoPedido) {
		this.isPermisoNuevoPedido = isPermisoNuevoPedido;
	}

	public Boolean getIsPermisoActualizarPedido() {
		return isPermisoActualizarPedido;
	}

	public void setIsPermisoActualizarPedido(Boolean isPermisoActualizarPedido) {
		this.isPermisoActualizarPedido = isPermisoActualizarPedido;
	}

	public Boolean getIsPermisoEliminarPedido() {
		return isPermisoEliminarPedido;
	}

	public void setIsPermisoEliminarPedido(Boolean isPermisoEliminarPedido) {
		this.isPermisoEliminarPedido = isPermisoEliminarPedido;
	}

	public Boolean getIsPermisoGuardarCambiosPedido() {
		return isPermisoGuardarCambiosPedido;
	}

	public void setIsPermisoGuardarCambiosPedido(Boolean isPermisoGuardarCambiosPedido) {
		this.isPermisoGuardarCambiosPedido = isPermisoGuardarCambiosPedido;
	}
	
	public Boolean getIsPermisoConsultaPedido() {
		return isPermisoConsultaPedido;
	}

	public void setIsPermisoConsultaPedido(Boolean isPermisoConsultaPedido) {
		this.isPermisoConsultaPedido = isPermisoConsultaPedido;
	}

	public Boolean getIsPermisoBusquedaPedido() {
		return isPermisoBusquedaPedido;
	}

	public void setIsPermisoBusquedaPedido(Boolean isPermisoBusquedaPedido) {
		this.isPermisoBusquedaPedido = isPermisoBusquedaPedido;
	}

	public Boolean getIsPermisoReportePedido() {
		return isPermisoReportePedido;
	}

	public void setIsPermisoReportePedido(Boolean isPermisoReportePedido) {
		this.isPermisoReportePedido = isPermisoReportePedido;
	}
	
	public Boolean getIsPermisoPaginacionMedioPedido() {
		return isPermisoPaginacionMedioPedido;
	}

	public void setIsPermisoPaginacionMedioPedido(Boolean isPermisoPaginacionMedioPedido) {
		this.isPermisoPaginacionMedioPedido = isPermisoPaginacionMedioPedido;
	}
	
	public Boolean getIsPermisoPaginacionTodoPedido() {
		return isPermisoPaginacionTodoPedido;
	}

	public void setIsPermisoPaginacionTodoPedido(Boolean isPermisoPaginacionTodoPedido) {
		this.isPermisoPaginacionTodoPedido = isPermisoPaginacionTodoPedido;
	}
	
	public Boolean getIsPermisoPaginacionAltoPedido() {
		return isPermisoPaginacionAltoPedido;
	}

	public void setIsPermisoPaginacionAltoPedido(Boolean isPermisoPaginacionAltoPedido) {
		this.isPermisoPaginacionAltoPedido = isPermisoPaginacionAltoPedido;
	}
	
	public Boolean getIsPermisoCopiarPedido() {
		return isPermisoCopiarPedido;
	}

	public void setIsPermisoCopiarPedido(Boolean isPermisoCopiarPedido) {
		this.isPermisoCopiarPedido = isPermisoCopiarPedido;
	}
	
	public Boolean getIsPermisoVerFormPedido() {
		return isPermisoVerFormPedido;
	}

	public void setIsPermisoVerFormPedido(Boolean isPermisoVerFormPedido) {
		this.isPermisoVerFormPedido = isPermisoVerFormPedido;
	}
	
	public Boolean getIsPermisoDuplicarPedido() {
		return isPermisoDuplicarPedido;
	}

	public void setIsPermisoDuplicarPedido(Boolean isPermisoDuplicarPedido) {
		this.isPermisoDuplicarPedido = isPermisoDuplicarPedido;
	}
	
	public Boolean getIsPermisoOrdenPedido() {
		return isPermisoOrdenPedido;
	}

	public void setIsPermisoOrdenPedido(Boolean isPermisoOrdenPedido) {
		this.isPermisoOrdenPedido = isPermisoOrdenPedido;
	}
	
	public String getsVisibilidadTablaBusquedas() {
		return sVisibilidadTablaBusquedas;
	}

	public void setsVisibilidadTablaBusquedas(String sVisibilidadTablaBusquedas) {
		this.sVisibilidadTablaBusquedas = sVisibilidadTablaBusquedas;
	}
	
	public String getsVisibilidadTablaElementos() {
		return sVisibilidadTablaElementos;
	}

	public void setsVisibilidadTablaElementos(String sVisibilidadTablaElementos) {
		this.sVisibilidadTablaElementos = sVisibilidadTablaElementos;
	}

	public String getsVisibilidadTablaAcciones() {
		return sVisibilidadTablaAcciones;
	}

	public void setsVisibilidadTablaAcciones(String sVisibilidadTablaAcciones) {
		this.sVisibilidadTablaAcciones = sVisibilidadTablaAcciones;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoPedido() {
		return isVisibilidadCeldaNuevoPedido;
	}

	public void setIsVisibilidadCeldaNuevoPedido(Boolean isVisibilidadCeldaNuevoPedido) {
		this.isVisibilidadCeldaNuevoPedido = isVisibilidadCeldaNuevoPedido;
	}
	
	public Boolean getIsVisibilidadCeldaDuplicarPedido() {
		return isVisibilidadCeldaDuplicarPedido;
	}

	public void setIsVisibilidadCeldaDuplicarPedido(Boolean isVisibilidadCeldaDuplicarPedido) {
		this.isVisibilidadCeldaDuplicarPedido = isVisibilidadCeldaDuplicarPedido;
	}
	
	public Boolean getIsVisibilidadCeldaCopiarPedido() {
		return isVisibilidadCeldaCopiarPedido;
	}

	public void setIsVisibilidadCeldaCopiarPedido(Boolean isVisibilidadCeldaCopiarPedido) {
		this.isVisibilidadCeldaCopiarPedido = isVisibilidadCeldaCopiarPedido;
	}
	
	public Boolean getIsVisibilidadCeldaVerFormPedido() {
		return isVisibilidadCeldaVerFormPedido;
	}

	public void setIsVisibilidadCeldaVerFormPedido(Boolean isVisibilidadCeldaVerFormPedido) {
		this.isVisibilidadCeldaVerFormPedido = isVisibilidadCeldaVerFormPedido;
	}
	
	public Boolean getIsVisibilidadCeldaOrdenPedido() {
		return isVisibilidadCeldaOrdenPedido;
	}

	public void setIsVisibilidadCeldaOrdenPedido(Boolean isVisibilidadCeldaOrdenPedido) {
		this.isVisibilidadCeldaOrdenPedido = isVisibilidadCeldaOrdenPedido;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoRelacionesPedido() {
		return isVisibilidadCeldaNuevoRelacionesPedido;
	}

	public void setIsVisibilidadCeldaNuevoRelacionesPedido(Boolean isVisibilidadCeldaNuevoRelacionesPedido) {
		this.isVisibilidadCeldaNuevoRelacionesPedido = isVisibilidadCeldaNuevoRelacionesPedido;
	}
	
	public Boolean getIsVisibilidadCeldaModificarPedido() {
		return isVisibilidadCeldaModificarPedido;
	}

	public void setIsVisibilidadCeldaModificarPedido(Boolean isVisibilidadCeldaModificarPedido) {
		this.isVisibilidadCeldaModificarPedido = isVisibilidadCeldaModificarPedido;
	}
	
	public Boolean getIsVisibilidadCeldaActualizarPedido() {
		return isVisibilidadCeldaActualizarPedido;
	}

	public void setIsVisibilidadCeldaActualizarPedido(Boolean isVisibilidadCeldaActualizarPedido) {
		this.isVisibilidadCeldaActualizarPedido = isVisibilidadCeldaActualizarPedido;
	}

	public Boolean getIsVisibilidadCeldaEliminarPedido() {
		return isVisibilidadCeldaEliminarPedido;
	}

	public void setIsVisibilidadCeldaEliminarPedido(Boolean isVisibilidadCeldaEliminarPedido) {
		this.isVisibilidadCeldaEliminarPedido = isVisibilidadCeldaEliminarPedido;
	}

	public Boolean getIsVisibilidadCeldaCancelarPedido() {
		return isVisibilidadCeldaCancelarPedido;
	}

	public void setIsVisibilidadCeldaCancelarPedido(Boolean isVisibilidadCeldaCancelarPedido) {
		this.isVisibilidadCeldaCancelarPedido = isVisibilidadCeldaCancelarPedido;
	}

	public Boolean getIsVisibilidadCeldaGuardarPedido() {
		return isVisibilidadCeldaGuardarPedido;
	}

	public void setIsVisibilidadCeldaGuardarPedido(Boolean isVisibilidadCeldaGuardarPedido) {
		this.isVisibilidadCeldaGuardarPedido = isVisibilidadCeldaGuardarPedido;
	}
	
	public Boolean getIsVisibilidadCeldaGuardarCambiosPedido() {
		return isVisibilidadCeldaGuardarCambiosPedido;
	}

	public void setIsVisibilidadCeldaGuardarCambiosPedido(Boolean isVisibilidadCeldaGuardarCambiosPedido) {
		this.isVisibilidadCeldaGuardarCambiosPedido = isVisibilidadCeldaGuardarCambiosPedido;
	}
		
	public PedidoSessionBean getpedidoSessionBean() {
		return this.pedidoSessionBean;
	}
	
	public void setpedidoSessionBean(PedidoSessionBean pedidoSessionBean) {
		this.pedidoSessionBean=pedidoSessionBean;
	}
	
	
	public Boolean getisVisibilidadFK_IdAnio() {
		return this.isVisibilidadFK_IdAnio;
	}

	public void setisVisibilidadFK_IdAnio(Boolean isVisibilidadFK_IdAnio) {
		this.isVisibilidadFK_IdAnio=isVisibilidadFK_IdAnio;
	}

	public Boolean getisVisibilidadFK_IdCentroCosto() {
		return this.isVisibilidadFK_IdCentroCosto;
	}

	public void setisVisibilidadFK_IdCentroCosto(Boolean isVisibilidadFK_IdCentroCosto) {
		this.isVisibilidadFK_IdCentroCosto=isVisibilidadFK_IdCentroCosto;
	}

	public Boolean getisVisibilidadFK_IdCliente() {
		return this.isVisibilidadFK_IdCliente;
	}

	public void setisVisibilidadFK_IdCliente(Boolean isVisibilidadFK_IdCliente) {
		this.isVisibilidadFK_IdCliente=isVisibilidadFK_IdCliente;
	}

	public Boolean getisVisibilidadFK_IdConsultor() {
		return this.isVisibilidadFK_IdConsultor;
	}

	public void setisVisibilidadFK_IdConsultor(Boolean isVisibilidadFK_IdConsultor) {
		this.isVisibilidadFK_IdConsultor=isVisibilidadFK_IdConsultor;
	}

	public Boolean getisVisibilidadFK_IdEjercicio() {
		return this.isVisibilidadFK_IdEjercicio;
	}

	public void setisVisibilidadFK_IdEjercicio(Boolean isVisibilidadFK_IdEjercicio) {
		this.isVisibilidadFK_IdEjercicio=isVisibilidadFK_IdEjercicio;
	}

	public Boolean getisVisibilidadFK_IdEmpleado() {
		return this.isVisibilidadFK_IdEmpleado;
	}

	public void setisVisibilidadFK_IdEmpleado(Boolean isVisibilidadFK_IdEmpleado) {
		this.isVisibilidadFK_IdEmpleado=isVisibilidadFK_IdEmpleado;
	}

	public Boolean getisVisibilidadFK_IdEmpresa() {
		return this.isVisibilidadFK_IdEmpresa;
	}

	public void setisVisibilidadFK_IdEmpresa(Boolean isVisibilidadFK_IdEmpresa) {
		this.isVisibilidadFK_IdEmpresa=isVisibilidadFK_IdEmpresa;
	}

	public Boolean getisVisibilidadFK_IdEstadoPedido() {
		return this.isVisibilidadFK_IdEstadoPedido;
	}

	public void setisVisibilidadFK_IdEstadoPedido(Boolean isVisibilidadFK_IdEstadoPedido) {
		this.isVisibilidadFK_IdEstadoPedido=isVisibilidadFK_IdEstadoPedido;
	}

	public Boolean getisVisibilidadFK_IdFormato() {
		return this.isVisibilidadFK_IdFormato;
	}

	public void setisVisibilidadFK_IdFormato(Boolean isVisibilidadFK_IdFormato) {
		this.isVisibilidadFK_IdFormato=isVisibilidadFK_IdFormato;
	}

	public Boolean getisVisibilidadFK_IdMes() {
		return this.isVisibilidadFK_IdMes;
	}

	public void setisVisibilidadFK_IdMes(Boolean isVisibilidadFK_IdMes) {
		this.isVisibilidadFK_IdMes=isVisibilidadFK_IdMes;
	}

	public Boolean getisVisibilidadFK_IdMoneda() {
		return this.isVisibilidadFK_IdMoneda;
	}

	public void setisVisibilidadFK_IdMoneda(Boolean isVisibilidadFK_IdMoneda) {
		this.isVisibilidadFK_IdMoneda=isVisibilidadFK_IdMoneda;
	}

	public Boolean getisVisibilidadFK_IdPeriodo() {
		return this.isVisibilidadFK_IdPeriodo;
	}

	public void setisVisibilidadFK_IdPeriodo(Boolean isVisibilidadFK_IdPeriodo) {
		this.isVisibilidadFK_IdPeriodo=isVisibilidadFK_IdPeriodo;
	}

	public Boolean getisVisibilidadFK_IdResponsable() {
		return this.isVisibilidadFK_IdResponsable;
	}

	public void setisVisibilidadFK_IdResponsable(Boolean isVisibilidadFK_IdResponsable) {
		this.isVisibilidadFK_IdResponsable=isVisibilidadFK_IdResponsable;
	}

	public Boolean getisVisibilidadFK_IdRutaTransporte() {
		return this.isVisibilidadFK_IdRutaTransporte;
	}

	public void setisVisibilidadFK_IdRutaTransporte(Boolean isVisibilidadFK_IdRutaTransporte) {
		this.isVisibilidadFK_IdRutaTransporte=isVisibilidadFK_IdRutaTransporte;
	}

	public Boolean getisVisibilidadFK_IdSubCliente() {
		return this.isVisibilidadFK_IdSubCliente;
	}

	public void setisVisibilidadFK_IdSubCliente(Boolean isVisibilidadFK_IdSubCliente) {
		this.isVisibilidadFK_IdSubCliente=isVisibilidadFK_IdSubCliente;
	}

	public Boolean getisVisibilidadFK_IdSucursal() {
		return this.isVisibilidadFK_IdSucursal;
	}

	public void setisVisibilidadFK_IdSucursal(Boolean isVisibilidadFK_IdSucursal) {
		this.isVisibilidadFK_IdSucursal=isVisibilidadFK_IdSucursal;
	}

	public Boolean getisVisibilidadFK_IdTipoCambio() {
		return this.isVisibilidadFK_IdTipoCambio;
	}

	public void setisVisibilidadFK_IdTipoCambio(Boolean isVisibilidadFK_IdTipoCambio) {
		this.isVisibilidadFK_IdTipoCambio=isVisibilidadFK_IdTipoCambio;
	}

	public Boolean getisVisibilidadFK_IdTipoLlamada() {
		return this.isVisibilidadFK_IdTipoLlamada;
	}

	public void setisVisibilidadFK_IdTipoLlamada(Boolean isVisibilidadFK_IdTipoLlamada) {
		this.isVisibilidadFK_IdTipoLlamada=isVisibilidadFK_IdTipoLlamada;
	}

	public Boolean getisVisibilidadFK_IdTipoPrecio() {
		return this.isVisibilidadFK_IdTipoPrecio;
	}

	public void setisVisibilidadFK_IdTipoPrecio(Boolean isVisibilidadFK_IdTipoPrecio) {
		this.isVisibilidadFK_IdTipoPrecio=isVisibilidadFK_IdTipoPrecio;
	}

	public Boolean getisVisibilidadFK_IdTransporte() {
		return this.isVisibilidadFK_IdTransporte;
	}

	public void setisVisibilidadFK_IdTransporte(Boolean isVisibilidadFK_IdTransporte) {
		this.isVisibilidadFK_IdTransporte=isVisibilidadFK_IdTransporte;
	}

	public Boolean getisVisibilidadFK_IdTransportista() {
		return this.isVisibilidadFK_IdTransportista;
	}

	public void setisVisibilidadFK_IdTransportista(Boolean isVisibilidadFK_IdTransportista) {
		this.isVisibilidadFK_IdTransportista=isVisibilidadFK_IdTransportista;
	}

	public Boolean getisVisibilidadFK_IdUsuario() {
		return this.isVisibilidadFK_IdUsuario;
	}

	public void setisVisibilidadFK_IdUsuario(Boolean isVisibilidadFK_IdUsuario) {
		this.isVisibilidadFK_IdUsuario=isVisibilidadFK_IdUsuario;
	}

	public Boolean getisVisibilidadFK_IdVendedor() {
		return this.isVisibilidadFK_IdVendedor;
	}

	public void setisVisibilidadFK_IdVendedor(Boolean isVisibilidadFK_IdVendedor) {
		this.isVisibilidadFK_IdVendedor=isVisibilidadFK_IdVendedor;
	}

	public Boolean getisVisibilidadFK_IdZona() {
		return this.isVisibilidadFK_IdZona;
	}

	public void setisVisibilidadFK_IdZona(Boolean isVisibilidadFK_IdZona) {
		this.isVisibilidadFK_IdZona=isVisibilidadFK_IdZona;
	}

	
	
	public void setVariablesFormularioToObjetoActualForeignKeysPedido(Pedido pedido)throws Exception {
		try {
			
				this.setActualParaGuardarEmpresaForeignKey(pedido,null);
				this.setActualParaGuardarSucursalForeignKey(pedido,null);
				this.setActualParaGuardarEjercicioForeignKey(pedido,null);
				this.setActualParaGuardarPeriodoForeignKey(pedido,null);
				this.setActualParaGuardarAnioForeignKey(pedido,null);
				this.setActualParaGuardarMesForeignKey(pedido,null);
				this.setActualParaGuardarUsuarioForeignKey(pedido,null);
				this.setActualParaGuardarMonedaForeignKey(pedido,null);
				this.setActualParaGuardarEmpleadoForeignKey(pedido,null);
				this.setActualParaGuardarTipoPrecioForeignKey(pedido,null);
				this.setActualParaGuardarFormatoForeignKey(pedido,null);
				this.setActualParaGuardarClienteForeignKey(pedido,null);
				this.setActualParaGuardarSubClienteForeignKey(pedido,null);
				this.setActualParaGuardarVendedorForeignKey(pedido,null);
				this.setActualParaGuardarConsultorForeignKey(pedido,null);
				this.setActualParaGuardarResponsableForeignKey(pedido,null);
				this.setActualParaGuardarEstadoPedidoForeignKey(pedido,null);
				this.setActualParaGuardarTransporteForeignKey(pedido,null);
				this.setActualParaGuardarRutaTransporteForeignKey(pedido,null);
				this.setActualParaGuardarTipoLlamadaForeignKey(pedido,null);
				this.setActualParaGuardarTransportistaForeignKey(pedido,null);
				this.setActualParaGuardarTipoCambioForeignKey(pedido,null);
				this.setActualParaGuardarCentroCostoForeignKey(pedido,null);
				this.setActualParaGuardarZonaForeignKey(pedido,null);
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarLicenciaCliente(DatosCliente datosCliente) throws Exception {
		Boolean existe=false;
			
		try {
				InputStream reportFile=null;
				
				String sPath=this.parametroGeneralUsuario.getpath_exportar()+"erp_bydan/license/license.xml";
				
				reportFile = new FileInputStream(sPath);
				
				Document documentBuilder=null;
				
				if(this.constantes2.DOCUMENT_BUILDER==null) {
					documentBuilder=Funciones2.parseXml(reportFile);
				} else {
					documentBuilder=this.constantes2.DOCUMENT_BUILDER;
				}
				
				//GlobalSeguridad.readXml(documentBuilder);
				
				String sNamePCServerLicencia="";
				String sClaveSistemaLicencia="";
				Date dFechaServerLicencia=null;
				
				//CARGAR ELEMENTOS DE LICENCIA
				NodeList nodeList = documentBuilder.getElementsByTagName("Licencia");
				
				for (int iIndice = 0; iIndice < nodeList.getLength(); iIndice++) {
					Node node = nodeList.item(iIndice);
				
					if (node.getNodeType() == Node.ELEMENT_NODE) {
						Element element = (Element) node;
						 
						sNamePCServerLicencia=element.getElementsByTagName("NombrePc").item(0).getTextContent();
						sClaveSistemaLicencia=element.getElementsByTagName("ClaveSistema").item(0).getTextContent();
						
						existe=true;
						break;
					}
				}														
			
				
			if(existe) {
				datosCliente.setsClaveSistema(sClaveSistemaLicencia);
				
				if(!datosCliente.getsNamePCServer().equals(sNamePCServerLicencia)
					&& !datosCliente.getsNamePCServer().equals("")) {
					
					datosCliente.setsNamePCServer(sNamePCServerLicencia);
				}
			} else {
				throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
			}
		} catch(Exception e) {
			throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
		}						
	}
	
	public void cargarDatosCliente() throws Exception {
		String sPrimerMacAddress="";		
		String sHostName="";		 
		String sHostIp="";		  
		String sHostUser="";
		
		
		sPrimerMacAddress=FuncionesNetwork.getPrimerMacAddress();		
		sHostName=FuncionesNetwork.getHostName();		 
		sHostIp=FuncionesNetwork.getHostIp();		  
		sHostUser=FuncionesNetwork.getHostUser();
		
		
		this.datosCliente=new DatosCliente();
		if(lIdUsuarioSesion!=null){datosCliente.setIdUsuario(this.lIdUsuarioSesion);}
		
		//SERVIDOR WEB Y TALVEZ SERVIDOR SWING WINDOWS
		this.datosCliente.setsUsuarioPCServer(sHostUser);
		this.datosCliente.setsNamePCServer(sHostName);
		this.datosCliente.setsIPPCServer(sHostIp);
		this.datosCliente.setsMacAddressPCServer(sPrimerMacAddress);
			
			//CLIENTE SWING WINDOWS
			this.datosCliente.setIsClienteWeb(false);
			
			this.datosCliente.setsUsuarioPC(sHostUser);
			this.datosCliente.setsNamePC(sHostName);
			this.datosCliente.setsIPPC(sHostIp);
			this.datosCliente.setsMacAddressPC(sPrimerMacAddress);	
			
			
			//this.cargarLicenciaCliente(this.datosCliente);
			
	}
	
	public void bugActualizarReferenciaActual(Pedido pedido,Pedido pedidoAux) throws Exception {
		//ARCHITECTURE		
		//EL ID NEGATIVO GUARDADO EN ORIGINAL SIRVE PARA VERIFICAR Y ACTUALIZAR EL REGISTRO NUEVO (ID,VERSIONROW)
		this.setCamposBaseDesdeOriginalPedido(pedido);
					
		//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
		pedidoAux.setId(pedido.getId());
		pedidoAux.setVersionRow(pedido.getVersionRow());					
	}
	
	public void ejecutarMantenimiento(MaintenanceType maintenanceType)throws Exception {	
		try	{								
			
			//this.startProcessPedido();
		
			int intSelectedRow = this.jTableDatosPedido.getSelectedRow();	       
			
			//PUEDE SER -1 CUANDO SE ELIMINA EN GUARDAR CAMBIOS
			if(intSelectedRow>=0 && maintenanceType!=MaintenanceType.GUARDARCAMBIOS) {
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
					
				//ARCHITECTURE
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
					this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
				}
				
				//ARCHITECTURE
				
				if(PedidoJInternalFrame.ISBINDING_MANUAL_TABLA) {
					//this.setVariablesFormularioToObjetoActualPedido(this.pedido,true);
				}
				
				this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
			}
			
			//LUEGO DE TRAER DATOS CORRESPONDIENTES QUE COINCIDA LISTA TABLA QUITO FILA TOTALES
			if(this.conTotales) {
				//MEJOR LO DEJO, SI EXISTE EXCEPCION SE PIEDE FILA TOTALES Y ORDEN INDICE FILA ACTUAL
				//this.quitarFilaTotales();
			}
			
			this.cargarDatosCliente();
			
			this.datosDeep=new DatosDeep();
			
			//SE CAMBIA ESTADOS CON ERROR, ENTONCES SE EJECUTA ANTES
			//this.invalidValues = pedidoValidator.getInvalidValues(this.pedido);
			
			//if(this.invalidValues==null || this.invalidValues.length<=0) {
			
			pedidoLogic.setDatosCliente(datosCliente);
			pedidoLogic.setIsConDeep(false);
			
			if(maintenanceType==MaintenanceType.NUEVO) {
				pedidoAux=new  Pedido();
				
				pedidoAux.setIsNew(true);
				pedidoAux.setIsChanged(true);
				
				pedidoAux.setPedidoOriginal(this.pedido);
				
				pedidoAux.setId(this.pedido.getId());	
				pedidoAux.setVersionRow(this.pedido.getVersionRow());	
				pedidoAux.setid_empresa(this.pedido.getid_empresa());	
				pedidoAux.setid_sucursal(this.pedido.getid_sucursal());	
				pedidoAux.setid_ejercicio(this.pedido.getid_ejercicio());	
				pedidoAux.setid_periodo(this.pedido.getid_periodo());	
				pedidoAux.setid_anio(this.pedido.getid_anio());	
				pedidoAux.setid_mes(this.pedido.getid_mes());	
				pedidoAux.setid_usuario(this.pedido.getid_usuario());	
				pedidoAux.setnumero(this.pedido.getnumero());	
				pedidoAux.setpre_impreso(this.pedido.getpre_impreso());	
				pedidoAux.setfecha_emision(this.pedido.getfecha_emision());	
				pedidoAux.setfecha_entrega(this.pedido.getfecha_entrega());	
				pedidoAux.setid_moneda(this.pedido.getid_moneda());	
				pedidoAux.setcotizacion(this.pedido.getcotizacion());	
				pedidoAux.setid_empleado(this.pedido.getid_empleado());	
				pedidoAux.setid_tipo_precio(this.pedido.getid_tipo_precio());	
				
				if(this.pedido.getid_formato()!=null && this.pedido.getid_formato()>0L) {
					pedidoAux.setid_formato(this.pedido.getid_formato());
				} else {
					pedidoAux.setid_formato(null);
				}	
				pedidoAux.setdireccion(this.pedido.getdireccion());	
				pedidoAux.setid_cliente(this.pedido.getid_cliente());	
				pedidoAux.settelefono(this.pedido.gettelefono());	
				pedidoAux.setruc(this.pedido.getruc());	
				
				if(this.pedido.getid_sub_cliente()!=null && this.pedido.getid_sub_cliente()>0L) {
					pedidoAux.setid_sub_cliente(this.pedido.getid_sub_cliente());
				} else {
					pedidoAux.setid_sub_cliente(null);
				}	
				
				if(this.pedido.getid_vendedor()!=null && this.pedido.getid_vendedor()>0L) {
					pedidoAux.setid_vendedor(this.pedido.getid_vendedor());
				} else {
					pedidoAux.setid_vendedor(null);
				}	
				
				if(this.pedido.getid_consultor()!=null && this.pedido.getid_consultor()>0L) {
					pedidoAux.setid_consultor(this.pedido.getid_consultor());
				} else {
					pedidoAux.setid_consultor(null);
				}	
				pedidoAux.setorden(this.pedido.getorden());	
				
				if(this.pedido.getid_responsable()!=null && this.pedido.getid_responsable()>0L) {
					pedidoAux.setid_responsable(this.pedido.getid_responsable());
				} else {
					pedidoAux.setid_responsable(null);
				}	
				pedidoAux.setid_estado_pedido(this.pedido.getid_estado_pedido());	
				
				if(this.pedido.getid_transporte()!=null && this.pedido.getid_transporte()>0L) {
					pedidoAux.setid_transporte(this.pedido.getid_transporte());
				} else {
					pedidoAux.setid_transporte(null);
				}	
				
				if(this.pedido.getid_ruta_transporte()!=null && this.pedido.getid_ruta_transporte()>0L) {
					pedidoAux.setid_ruta_transporte(this.pedido.getid_ruta_transporte());
				} else {
					pedidoAux.setid_ruta_transporte(null);
				}	
				pedidoAux.setvalor_ruta(this.pedido.getvalor_ruta());	
				
				if(this.pedido.getid_tipo_llamada()!=null && this.pedido.getid_tipo_llamada()>0L) {
					pedidoAux.setid_tipo_llamada(this.pedido.getid_tipo_llamada());
				} else {
					pedidoAux.setid_tipo_llamada(null);
				}	
				
				if(this.pedido.getid_transportista()!=null && this.pedido.getid_transportista()>0L) {
					pedidoAux.setid_transportista(this.pedido.getid_transportista());
				} else {
					pedidoAux.setid_transportista(null);
				}	
				pedidoAux.sethora_inicio(this.pedido.gethora_inicio());	
				pedidoAux.sethora_fin(this.pedido.gethora_fin());	
				pedidoAux.setdescripcion(this.pedido.getdescripcion());	
				pedidoAux.setcupo(this.pedido.getcupo());	
				pedidoAux.setsaldo(this.pedido.getsaldo());	
				pedidoAux.setpedidos(this.pedido.getpedidos());	
				pedidoAux.setdocumentos(this.pedido.getdocumentos());	
				pedidoAux.setdisponible(this.pedido.getdisponible());	
				pedidoAux.setdescuento_porcentaje(this.pedido.getdescuento_porcentaje());	
				pedidoAux.settotal_con_iva(this.pedido.gettotal_con_iva());	
				pedidoAux.setsuman(this.pedido.getsuman());	
				pedidoAux.setdescuento_valor(this.pedido.getdescuento_valor());	
				pedidoAux.settotal_sin_iva(this.pedido.gettotal_sin_iva());	
				pedidoAux.setdescuento_total(this.pedido.getdescuento_total());	
				pedidoAux.setflete(this.pedido.getflete());	
				pedidoAux.settotal(this.pedido.gettotal());	
				pedidoAux.setsubtotal(this.pedido.getsubtotal());	
				pedidoAux.setotro(this.pedido.getotro());	
				pedidoAux.setultimo_costo(this.pedido.getultimo_costo());	
				pedidoAux.setiva(this.pedido.getiva());	
				pedidoAux.setfinanciamiento(this.pedido.getfinanciamiento());	
				pedidoAux.setmargen_utilidad(this.pedido.getmargen_utilidad());	
				pedidoAux.setotros_valores(this.pedido.getotros_valores());	
				pedidoAux.setanticipo(this.pedido.getanticipo());	
				
				if(this.pedido.getid_tipo_cambio()!=null && this.pedido.getid_tipo_cambio()>0L) {
					pedidoAux.setid_tipo_cambio(this.pedido.getid_tipo_cambio());
				} else {
					pedidoAux.setid_tipo_cambio(null);
				}	
				
				if(this.pedido.getid_centro_costo()!=null && this.pedido.getid_centro_costo()>0L) {
					pedidoAux.setid_centro_costo(this.pedido.getid_centro_costo());
				} else {
					pedidoAux.setid_centro_costo(null);
				}	
				
				if(this.pedido.getid_zona()!=null && this.pedido.getid_zona()>0L) {
					pedidoAux.setid_zona(this.pedido.getid_zona());
				} else {
					pedidoAux.setid_zona(null);
				}	
				pedidoAux.setfecha(this.pedido.getfecha());	
				pedidoAux.setnumero_fue(this.pedido.getnumero_fue());	
				pedidoAux.setfecha_servidor(this.pedido.getfecha_servidor());	
				pedidoAux.setmonto_retencion(this.pedido.getmonto_retencion());	
				pedidoAux.setice(this.pedido.getice());	
								
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.pedidoSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.pedidoSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(pedidoAux,pedidoLogic.getPedidos());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(pedidoAux,pedidos);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote  && !this.pedidoSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.pedidoSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidoLogic.savePedidos();//WithConnection
						//pedidoLogic.getSetVersionRowPedidos();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE		
					
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.pedido,pedidoAux);
					
					this.refrescarForeignKeysDescripcionesPedido();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.pedidoSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
							this.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame.detallepedidoLogic.getDetallePedidos().addAll(this.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame.detallepedidosEliminados);
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
							this.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame.detallepedidos.addAll(this.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame.detallepedidosEliminados);
						}
						//ARCHITECTURE	
						
						if(!this.pedidoSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
								if(this.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame.quitarFilaTotales();*/}
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
								if(this.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame.quitarFilaTotales();*/}	
							}
							//ARCHITECTURE
												
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								pedidoLogic.savePedidoRelaciones(pedidoAux,this.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame.detallepedidoLogic.getDetallePedidos());//WithConnection
								//pedidoLogic.getSetVersionRowPedidos();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.pedido,pedidoAux);
					
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							this.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame.detallepedidoLogic.setDetallePedidos(new ArrayList<DetallePedido>());
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							this.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame.detallepedidos= new ArrayList<DetallePedido>();
							}
							//ARCHITECTURE	
						} else {
							
							

							if(this.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame.quitarFilaTotales();}
							pedidoAux.setDetallePedidos(this.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame.detallepedidoLogic.getDetallePedidos());
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.pedidoSessionBean.getEstaModoGuardarRelaciones() 
									|| this.pedidoSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(pedidoAux,pedidoLogic.getPedidos());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(pedidoAux,pedidos);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.pedido,pedidoAux);												
						}
					}
				}
			} else if(maintenanceType==MaintenanceType.ACTUALIZAR) {
				pedidoAux=new  Pedido();
				
				//PUEDE QUE SE ACTUALIZE ALGUN REGISTRO NUEVO
				if(!this.pedidoSessionBean.getEsGuardarRelacionado() 
					|| (this.pedidoSessionBean.getEsGuardarRelacionado() && this.pedido.getId()>=0)) {
						
					pedidoAux.setIsNew(false);
				}
				
				pedidoAux.setIsDeleted(false);
			
				pedidoAux.setId(this.pedido.getId());	
				pedidoAux.setVersionRow(this.pedido.getVersionRow());	
				pedidoAux.setid_empresa(this.pedido.getid_empresa());	
				pedidoAux.setid_sucursal(this.pedido.getid_sucursal());	
				pedidoAux.setid_ejercicio(this.pedido.getid_ejercicio());	
				pedidoAux.setid_periodo(this.pedido.getid_periodo());	
				pedidoAux.setid_anio(this.pedido.getid_anio());	
				pedidoAux.setid_mes(this.pedido.getid_mes());	
				pedidoAux.setid_usuario(this.pedido.getid_usuario());	
				pedidoAux.setnumero(this.pedido.getnumero());	
				pedidoAux.setpre_impreso(this.pedido.getpre_impreso());	
				pedidoAux.setfecha_emision(this.pedido.getfecha_emision());	
				pedidoAux.setfecha_entrega(this.pedido.getfecha_entrega());	
				pedidoAux.setid_moneda(this.pedido.getid_moneda());	
				pedidoAux.setcotizacion(this.pedido.getcotizacion());	
				pedidoAux.setid_empleado(this.pedido.getid_empleado());	
				pedidoAux.setid_tipo_precio(this.pedido.getid_tipo_precio());	
				
				if(this.pedido.getid_formato()!=null && this.pedido.getid_formato()>0L) {
					pedidoAux.setid_formato(this.pedido.getid_formato());
				} else {
					pedidoAux.setid_formato(null);
				}	
				pedidoAux.setdireccion(this.pedido.getdireccion());	
				pedidoAux.setid_cliente(this.pedido.getid_cliente());	
				pedidoAux.settelefono(this.pedido.gettelefono());	
				pedidoAux.setruc(this.pedido.getruc());	
				
				if(this.pedido.getid_sub_cliente()!=null && this.pedido.getid_sub_cliente()>0L) {
					pedidoAux.setid_sub_cliente(this.pedido.getid_sub_cliente());
				} else {
					pedidoAux.setid_sub_cliente(null);
				}	
				
				if(this.pedido.getid_vendedor()!=null && this.pedido.getid_vendedor()>0L) {
					pedidoAux.setid_vendedor(this.pedido.getid_vendedor());
				} else {
					pedidoAux.setid_vendedor(null);
				}	
				
				if(this.pedido.getid_consultor()!=null && this.pedido.getid_consultor()>0L) {
					pedidoAux.setid_consultor(this.pedido.getid_consultor());
				} else {
					pedidoAux.setid_consultor(null);
				}	
				pedidoAux.setorden(this.pedido.getorden());	
				
				if(this.pedido.getid_responsable()!=null && this.pedido.getid_responsable()>0L) {
					pedidoAux.setid_responsable(this.pedido.getid_responsable());
				} else {
					pedidoAux.setid_responsable(null);
				}	
				pedidoAux.setid_estado_pedido(this.pedido.getid_estado_pedido());	
				
				if(this.pedido.getid_transporte()!=null && this.pedido.getid_transporte()>0L) {
					pedidoAux.setid_transporte(this.pedido.getid_transporte());
				} else {
					pedidoAux.setid_transporte(null);
				}	
				
				if(this.pedido.getid_ruta_transporte()!=null && this.pedido.getid_ruta_transporte()>0L) {
					pedidoAux.setid_ruta_transporte(this.pedido.getid_ruta_transporte());
				} else {
					pedidoAux.setid_ruta_transporte(null);
				}	
				pedidoAux.setvalor_ruta(this.pedido.getvalor_ruta());	
				
				if(this.pedido.getid_tipo_llamada()!=null && this.pedido.getid_tipo_llamada()>0L) {
					pedidoAux.setid_tipo_llamada(this.pedido.getid_tipo_llamada());
				} else {
					pedidoAux.setid_tipo_llamada(null);
				}	
				
				if(this.pedido.getid_transportista()!=null && this.pedido.getid_transportista()>0L) {
					pedidoAux.setid_transportista(this.pedido.getid_transportista());
				} else {
					pedidoAux.setid_transportista(null);
				}	
				pedidoAux.sethora_inicio(this.pedido.gethora_inicio());	
				pedidoAux.sethora_fin(this.pedido.gethora_fin());	
				pedidoAux.setdescripcion(this.pedido.getdescripcion());	
				pedidoAux.setcupo(this.pedido.getcupo());	
				pedidoAux.setsaldo(this.pedido.getsaldo());	
				pedidoAux.setpedidos(this.pedido.getpedidos());	
				pedidoAux.setdocumentos(this.pedido.getdocumentos());	
				pedidoAux.setdisponible(this.pedido.getdisponible());	
				pedidoAux.setdescuento_porcentaje(this.pedido.getdescuento_porcentaje());	
				pedidoAux.settotal_con_iva(this.pedido.gettotal_con_iva());	
				pedidoAux.setsuman(this.pedido.getsuman());	
				pedidoAux.setdescuento_valor(this.pedido.getdescuento_valor());	
				pedidoAux.settotal_sin_iva(this.pedido.gettotal_sin_iva());	
				pedidoAux.setdescuento_total(this.pedido.getdescuento_total());	
				pedidoAux.setflete(this.pedido.getflete());	
				pedidoAux.settotal(this.pedido.gettotal());	
				pedidoAux.setsubtotal(this.pedido.getsubtotal());	
				pedidoAux.setotro(this.pedido.getotro());	
				pedidoAux.setultimo_costo(this.pedido.getultimo_costo());	
				pedidoAux.setiva(this.pedido.getiva());	
				pedidoAux.setfinanciamiento(this.pedido.getfinanciamiento());	
				pedidoAux.setmargen_utilidad(this.pedido.getmargen_utilidad());	
				pedidoAux.setotros_valores(this.pedido.getotros_valores());	
				pedidoAux.setanticipo(this.pedido.getanticipo());	
				
				if(this.pedido.getid_tipo_cambio()!=null && this.pedido.getid_tipo_cambio()>0L) {
					pedidoAux.setid_tipo_cambio(this.pedido.getid_tipo_cambio());
				} else {
					pedidoAux.setid_tipo_cambio(null);
				}	
				
				if(this.pedido.getid_centro_costo()!=null && this.pedido.getid_centro_costo()>0L) {
					pedidoAux.setid_centro_costo(this.pedido.getid_centro_costo());
				} else {
					pedidoAux.setid_centro_costo(null);
				}	
				
				if(this.pedido.getid_zona()!=null && this.pedido.getid_zona()>0L) {
					pedidoAux.setid_zona(this.pedido.getid_zona());
				} else {
					pedidoAux.setid_zona(null);
				}	
				pedidoAux.setfecha(this.pedido.getfecha());	
				pedidoAux.setnumero_fue(this.pedido.getnumero_fue());	
				pedidoAux.setfecha_servidor(this.pedido.getfecha_servidor());	
				pedidoAux.setmonto_retencion(this.pedido.getmonto_retencion());	
				pedidoAux.setice(this.pedido.getice());	
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(pedidoAux,pedidoLogic.getPedidos());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(pedidoAux,pedidos);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote && !this.pedidoSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.pedidoSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidoLogic.savePedidos();//WithConnection
						//pedidoLogic.getSetVersionRowPedidos();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
					
					//TALVEZ ESTA DEMAS POR SER UPDATE
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.pedido,pedidoAux);
					
					this.refrescarForeignKeysDescripcionesPedido();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.pedidoSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
							this.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame.detallepedidoLogic.getDetallePedidos().addAll(this.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame.detallepedidosEliminados);
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
							this.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame.detallepedidos.addAll(this.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame.detallepedidosEliminados);
						}
						//ARCHITECTURE
						
						if(!this.pedidoSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
								if(this.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame.quitarFilaTotales();*/}
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
								if(this.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame.quitarFilaTotales();*/}	
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								pedidoLogic.savePedidoRelaciones(pedidoAux,this.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame.detallepedidoLogic.getDetallePedidos());//WithConnection
								//pedidoLogic.getSetVersionRowPedidos();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.pedido,pedidoAux);
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							this.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame.detallepedidoLogic.setDetallePedidos(new ArrayList<DetallePedido>());
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							this.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame.detallepedidos= new ArrayList<DetallePedido>();
							}
							//ARCHITECTURE
						} else {
							
							

							if(this.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame.quitarFilaTotales();}
							pedidoAux.setDetallePedidos(this.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame.detallepedidoLogic.getDetallePedidos());
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.pedidoSessionBean.getEstaModoGuardarRelaciones() 
									|| this.pedidoSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(pedidoAux,pedidoLogic.getPedidos());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(pedidoAux,pedidos);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.pedido,pedidoAux);
					
						}
					}
				}				
			} else if(maintenanceType==MaintenanceType.ELIMINAR) {
				pedidoAux=new  Pedido();
				
				pedidoAux.setIsNew(false);
				pedidoAux.setIsChanged(false);
				
				pedidoAux.setIsDeleted(true);
				
				pedidoAux.setId(this.pedido.getId());	
				pedidoAux.setVersionRow(this.pedido.getVersionRow());	
				pedidoAux.setid_empresa(this.pedido.getid_empresa());	
				pedidoAux.setid_sucursal(this.pedido.getid_sucursal());	
				pedidoAux.setid_ejercicio(this.pedido.getid_ejercicio());	
				pedidoAux.setid_periodo(this.pedido.getid_periodo());	
				pedidoAux.setid_anio(this.pedido.getid_anio());	
				pedidoAux.setid_mes(this.pedido.getid_mes());	
				pedidoAux.setid_usuario(this.pedido.getid_usuario());	
				pedidoAux.setnumero(this.pedido.getnumero());	
				pedidoAux.setpre_impreso(this.pedido.getpre_impreso());	
				pedidoAux.setfecha_emision(this.pedido.getfecha_emision());	
				pedidoAux.setfecha_entrega(this.pedido.getfecha_entrega());	
				pedidoAux.setid_moneda(this.pedido.getid_moneda());	
				pedidoAux.setcotizacion(this.pedido.getcotizacion());	
				pedidoAux.setid_empleado(this.pedido.getid_empleado());	
				pedidoAux.setid_tipo_precio(this.pedido.getid_tipo_precio());	
				
				if(this.pedido.getid_formato()!=null && this.pedido.getid_formato()>0L) {
					pedidoAux.setid_formato(this.pedido.getid_formato());
				} else {
					pedidoAux.setid_formato(null);
				}	
				pedidoAux.setdireccion(this.pedido.getdireccion());	
				pedidoAux.setid_cliente(this.pedido.getid_cliente());	
				pedidoAux.settelefono(this.pedido.gettelefono());	
				pedidoAux.setruc(this.pedido.getruc());	
				
				if(this.pedido.getid_sub_cliente()!=null && this.pedido.getid_sub_cliente()>0L) {
					pedidoAux.setid_sub_cliente(this.pedido.getid_sub_cliente());
				} else {
					pedidoAux.setid_sub_cliente(null);
				}	
				
				if(this.pedido.getid_vendedor()!=null && this.pedido.getid_vendedor()>0L) {
					pedidoAux.setid_vendedor(this.pedido.getid_vendedor());
				} else {
					pedidoAux.setid_vendedor(null);
				}	
				
				if(this.pedido.getid_consultor()!=null && this.pedido.getid_consultor()>0L) {
					pedidoAux.setid_consultor(this.pedido.getid_consultor());
				} else {
					pedidoAux.setid_consultor(null);
				}	
				pedidoAux.setorden(this.pedido.getorden());	
				
				if(this.pedido.getid_responsable()!=null && this.pedido.getid_responsable()>0L) {
					pedidoAux.setid_responsable(this.pedido.getid_responsable());
				} else {
					pedidoAux.setid_responsable(null);
				}	
				pedidoAux.setid_estado_pedido(this.pedido.getid_estado_pedido());	
				
				if(this.pedido.getid_transporte()!=null && this.pedido.getid_transporte()>0L) {
					pedidoAux.setid_transporte(this.pedido.getid_transporte());
				} else {
					pedidoAux.setid_transporte(null);
				}	
				
				if(this.pedido.getid_ruta_transporte()!=null && this.pedido.getid_ruta_transporte()>0L) {
					pedidoAux.setid_ruta_transporte(this.pedido.getid_ruta_transporte());
				} else {
					pedidoAux.setid_ruta_transporte(null);
				}	
				pedidoAux.setvalor_ruta(this.pedido.getvalor_ruta());	
				
				if(this.pedido.getid_tipo_llamada()!=null && this.pedido.getid_tipo_llamada()>0L) {
					pedidoAux.setid_tipo_llamada(this.pedido.getid_tipo_llamada());
				} else {
					pedidoAux.setid_tipo_llamada(null);
				}	
				
				if(this.pedido.getid_transportista()!=null && this.pedido.getid_transportista()>0L) {
					pedidoAux.setid_transportista(this.pedido.getid_transportista());
				} else {
					pedidoAux.setid_transportista(null);
				}	
				pedidoAux.sethora_inicio(this.pedido.gethora_inicio());	
				pedidoAux.sethora_fin(this.pedido.gethora_fin());	
				pedidoAux.setdescripcion(this.pedido.getdescripcion());	
				pedidoAux.setcupo(this.pedido.getcupo());	
				pedidoAux.setsaldo(this.pedido.getsaldo());	
				pedidoAux.setpedidos(this.pedido.getpedidos());	
				pedidoAux.setdocumentos(this.pedido.getdocumentos());	
				pedidoAux.setdisponible(this.pedido.getdisponible());	
				pedidoAux.setdescuento_porcentaje(this.pedido.getdescuento_porcentaje());	
				pedidoAux.settotal_con_iva(this.pedido.gettotal_con_iva());	
				pedidoAux.setsuman(this.pedido.getsuman());	
				pedidoAux.setdescuento_valor(this.pedido.getdescuento_valor());	
				pedidoAux.settotal_sin_iva(this.pedido.gettotal_sin_iva());	
				pedidoAux.setdescuento_total(this.pedido.getdescuento_total());	
				pedidoAux.setflete(this.pedido.getflete());	
				pedidoAux.settotal(this.pedido.gettotal());	
				pedidoAux.setsubtotal(this.pedido.getsubtotal());	
				pedidoAux.setotro(this.pedido.getotro());	
				pedidoAux.setultimo_costo(this.pedido.getultimo_costo());	
				pedidoAux.setiva(this.pedido.getiva());	
				pedidoAux.setfinanciamiento(this.pedido.getfinanciamiento());	
				pedidoAux.setmargen_utilidad(this.pedido.getmargen_utilidad());	
				pedidoAux.setotros_valores(this.pedido.getotros_valores());	
				pedidoAux.setanticipo(this.pedido.getanticipo());	
				
				if(this.pedido.getid_tipo_cambio()!=null && this.pedido.getid_tipo_cambio()>0L) {
					pedidoAux.setid_tipo_cambio(this.pedido.getid_tipo_cambio());
				} else {
					pedidoAux.setid_tipo_cambio(null);
				}	
				
				if(this.pedido.getid_centro_costo()!=null && this.pedido.getid_centro_costo()>0L) {
					pedidoAux.setid_centro_costo(this.pedido.getid_centro_costo());
				} else {
					pedidoAux.setid_centro_costo(null);
				}	
				
				if(this.pedido.getid_zona()!=null && this.pedido.getid_zona()>0L) {
					pedidoAux.setid_zona(this.pedido.getid_zona());
				} else {
					pedidoAux.setid_zona(null);
				}	
				pedidoAux.setfecha(this.pedido.getfecha());	
				pedidoAux.setnumero_fue(this.pedido.getnumero_fue());	
				pedidoAux.setfecha_servidor(this.pedido.getfecha_servidor());	
				pedidoAux.setmonto_retencion(this.pedido.getmonto_retencion());	
				pedidoAux.setice(this.pedido.getice());	
				
				if(this.pedidoSessionBean.getEsGuardarRelacionado()) {
					//ELEMENTO ACTUAL NO SE HA INGRESADO AL SISTEMA, NO SE PUEDE ELIMINAR ALGO QUE NO EXISTE
					if(this.pedidoAux.getId()>=0) {	
						this.pedidosEliminados.add(pedidoAux);											
					}
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					actualizarLista(pedidoAux,pedidoLogic.getPedidos());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(pedidoAux,pedidos);
				}
				//ARCHITECTURE
				
				
				if(!isGuardarCambiosEnLote && !this.pedidoSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.pedidoSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidoLogic.savePedidos();//WithConnection
						//pedidoLogic.getSetVersionRowPedidos();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.pedidoSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
							this.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame.detallepedidoLogic.getDetallePedidos().addAll(this.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame.detallepedidosEliminados);
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
							this.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame.detallepedidos.addAll(this.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame.detallepedidosEliminados);
						}
						//ARCHITECTURE
						
						
						if(!this.pedidoSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
								if(this.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame.quitarFilaTotales();*/}
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
								if(this.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame.quitarFilaTotales();*/}	
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								pedidoLogic.savePedidoRelaciones(pedidoAux,this.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame.detallepedidoLogic.getDetallePedidos());//WithConnection
								//pedidoLogic.getSetVersionRowPedidos();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							this.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame.detallepedidoLogic.setDetallePedidos(new ArrayList<DetallePedido>());
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							this.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame.detallepedidos= new ArrayList<DetallePedido>();
							}
							//ARCHITECTURE
						}
					}  else {
							
						

							if(this.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame.quitarFilaTotales();}
							pedidoAux.setDetallePedidos(this.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame.detallepedidoLogic.getDetallePedidos());
								
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							if(this.pedidoSessionBean.getEstaModoGuardarRelaciones() 
								|| this.pedidoSessionBean.getEsGuardarRelacionado())	{
								actualizarLista(pedidoAux,pedidoLogic.getPedidos());
							}
						} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
							actualizarLista(pedidoAux,pedidos);
						}
						//ARCHITECTURE
					}
				}				
			} else if(maintenanceType==MaintenanceType.GUARDARCAMBIOS) {		
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.getPedidos().addAll(this.pedidosEliminados);
					
					pedidoLogic.savePedidos();//WithConnection
					//pedidoLogic.getSetVersionRowPedidos();//WithConnection
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}	
				//ARCHITECTURE
				this.refrescarForeignKeysDescripcionesPedido();
				
				this.pedidosEliminados= new ArrayList<Pedido>();		
			}
			
			if(this.pedidoSessionBean.getEsGuardarRelacionado()) {
				 this.crearFilaTotales();
			}
			
			
									
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.pedidoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				if(!this.isPostAccionSinMensaje) {
					JOptionPane.showMessageDialog(this,"Pedido GUARDADO CORRECTAMENTE","MANTENIMIENTO DE Pedido",JOptionPane.INFORMATION_MESSAGE);
					if(maintenanceType==MaintenanceType.NUEVO || maintenanceType==MaintenanceType.ACTUALIZAR) {
						//CUANDO ES NUEVO SE PIERDE REFERENCIA NO SE PORQUE
						this.pedido=pedidoAux;
					}
				}
			}
			
			this.isErrorGuardar=false;
			
			this.inicializarInvalidValues();
		/*
		} else {
			this.mostrarInvalidValues();	
		}
		*/
			
		} catch(Exception e) {
			this.isErrorGuardar=true;
			
			this.crearFilaTotales();
			
			throw e;
		} finally {
      		//this.finishProcessPedido();
      	}
		
	}	
	
	public void actualizarRelaciones(Pedido pedidoLocal) throws Exception {
		
		if(this.pedidoSessionBean.getConGuardarRelaciones()) {			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
			
				pedidoLocal.setDetallePedidos(this.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame.detallepedidoLogic.getDetallePedidos());
			
			} else {
			
				pedidoLocal.setDetallePedidos(this.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame.detallepedidos);	
			}
		}
	}
	
	public void actualizarRelacionFkPadreActual(Pedido pedidoLocal) throws Exception {	
		if(this.pedidoSessionBean.getEsGuardarRelacionado()) {			
			
		
			if(this.jInternalFrameParent.getClass().equals(EmpresaDetalleFormJInternalFrame.class)) {
				EmpresaBeanSwingJInternalFrame empresaBeanSwingJInternalFrameLocal=(EmpresaBeanSwingJInternalFrame) ((EmpresaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				empresaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEmpresa(empresaBeanSwingJInternalFrameLocal.getempresa(),true);
				empresaBeanSwingJInternalFrameLocal.actualizarLista(empresaBeanSwingJInternalFrameLocal.empresa,this.empresasForeignKey);

				empresaBeanSwingJInternalFrameLocal.actualizarRelaciones(empresaBeanSwingJInternalFrameLocal.empresa);

				pedidoLocal.setEmpresa(empresaBeanSwingJInternalFrameLocal.empresa);

				this.addItemDefectoCombosForeignKeyEmpresa();
				this.cargarCombosFrameEmpresasForeignKey("Formulario");
				this.setActualEmpresaForeignKey(empresaBeanSwingJInternalFrameLocal.empresa.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(SucursalDetalleFormJInternalFrame.class)) {
				SucursalBeanSwingJInternalFrame sucursalBeanSwingJInternalFrameLocal=(SucursalBeanSwingJInternalFrame) ((SucursalDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				sucursalBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoSucursal(sucursalBeanSwingJInternalFrameLocal.getsucursal(),true);
				sucursalBeanSwingJInternalFrameLocal.actualizarLista(sucursalBeanSwingJInternalFrameLocal.sucursal,this.sucursalsForeignKey);

				sucursalBeanSwingJInternalFrameLocal.actualizarRelaciones(sucursalBeanSwingJInternalFrameLocal.sucursal);

				pedidoLocal.setSucursal(sucursalBeanSwingJInternalFrameLocal.sucursal);

				this.addItemDefectoCombosForeignKeySucursal();
				this.cargarCombosFrameSucursalsForeignKey("Formulario");
				this.setActualSucursalForeignKey(sucursalBeanSwingJInternalFrameLocal.sucursal.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EjercicioDetalleFormJInternalFrame.class)) {
				EjercicioBeanSwingJInternalFrame ejercicioBeanSwingJInternalFrameLocal=(EjercicioBeanSwingJInternalFrame) ((EjercicioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				ejercicioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEjercicio(ejercicioBeanSwingJInternalFrameLocal.getejercicio(),true);
				ejercicioBeanSwingJInternalFrameLocal.actualizarLista(ejercicioBeanSwingJInternalFrameLocal.ejercicio,this.ejerciciosForeignKey);

				ejercicioBeanSwingJInternalFrameLocal.actualizarRelaciones(ejercicioBeanSwingJInternalFrameLocal.ejercicio);

				pedidoLocal.setEjercicio(ejercicioBeanSwingJInternalFrameLocal.ejercicio);

				this.addItemDefectoCombosForeignKeyEjercicio();
				this.cargarCombosFrameEjerciciosForeignKey("Formulario");
				this.setActualEjercicioForeignKey(ejercicioBeanSwingJInternalFrameLocal.ejercicio.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(PeriodoDetalleFormJInternalFrame.class)) {
				PeriodoBeanSwingJInternalFrame periodoBeanSwingJInternalFrameLocal=(PeriodoBeanSwingJInternalFrame) ((PeriodoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				periodoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoPeriodo(periodoBeanSwingJInternalFrameLocal.getperiodo(),true);
				periodoBeanSwingJInternalFrameLocal.actualizarLista(periodoBeanSwingJInternalFrameLocal.periodo,this.periodosForeignKey);

				periodoBeanSwingJInternalFrameLocal.actualizarRelaciones(periodoBeanSwingJInternalFrameLocal.periodo);

				pedidoLocal.setPeriodo(periodoBeanSwingJInternalFrameLocal.periodo);

				this.addItemDefectoCombosForeignKeyPeriodo();
				this.cargarCombosFramePeriodosForeignKey("Formulario");
				this.setActualPeriodoForeignKey(periodoBeanSwingJInternalFrameLocal.periodo.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(AnioDetalleFormJInternalFrame.class)) {
				AnioBeanSwingJInternalFrame anioBeanSwingJInternalFrameLocal=(AnioBeanSwingJInternalFrame) ((AnioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				anioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoAnio(anioBeanSwingJInternalFrameLocal.getanio(),true);
				anioBeanSwingJInternalFrameLocal.actualizarLista(anioBeanSwingJInternalFrameLocal.anio,this.aniosForeignKey);

				anioBeanSwingJInternalFrameLocal.actualizarRelaciones(anioBeanSwingJInternalFrameLocal.anio);

				pedidoLocal.setAnio(anioBeanSwingJInternalFrameLocal.anio);

				this.addItemDefectoCombosForeignKeyAnio();
				this.cargarCombosFrameAniosForeignKey("Formulario");
				this.setActualAnioForeignKey(anioBeanSwingJInternalFrameLocal.anio.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(MesDetalleFormJInternalFrame.class)) {
				MesBeanSwingJInternalFrame mesBeanSwingJInternalFrameLocal=(MesBeanSwingJInternalFrame) ((MesDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				mesBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoMes(mesBeanSwingJInternalFrameLocal.getmes(),true);
				mesBeanSwingJInternalFrameLocal.actualizarLista(mesBeanSwingJInternalFrameLocal.mes,this.messForeignKey);

				mesBeanSwingJInternalFrameLocal.actualizarRelaciones(mesBeanSwingJInternalFrameLocal.mes);

				pedidoLocal.setMes(mesBeanSwingJInternalFrameLocal.mes);

				this.addItemDefectoCombosForeignKeyMes();
				this.cargarCombosFrameMessForeignKey("Formulario");
				this.setActualMesForeignKey(mesBeanSwingJInternalFrameLocal.mes.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(UsuarioDetalleFormJInternalFrame.class)) {
				UsuarioBeanSwingJInternalFrame usuarioBeanSwingJInternalFrameLocal=(UsuarioBeanSwingJInternalFrame) ((UsuarioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				usuarioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoUsuario(usuarioBeanSwingJInternalFrameLocal.getusuario(),true);
				usuarioBeanSwingJInternalFrameLocal.actualizarLista(usuarioBeanSwingJInternalFrameLocal.usuario,this.usuariosForeignKey);

				usuarioBeanSwingJInternalFrameLocal.actualizarRelaciones(usuarioBeanSwingJInternalFrameLocal.usuario);

				pedidoLocal.setUsuario(usuarioBeanSwingJInternalFrameLocal.usuario);

				this.addItemDefectoCombosForeignKeyUsuario();
				this.cargarCombosFrameUsuariosForeignKey("Formulario");
				this.setActualUsuarioForeignKey(usuarioBeanSwingJInternalFrameLocal.usuario.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(MonedaDetalleFormJInternalFrame.class)) {
				MonedaBeanSwingJInternalFrame monedaBeanSwingJInternalFrameLocal=(MonedaBeanSwingJInternalFrame) ((MonedaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				monedaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoMoneda(monedaBeanSwingJInternalFrameLocal.getmoneda(),true);
				monedaBeanSwingJInternalFrameLocal.actualizarLista(monedaBeanSwingJInternalFrameLocal.moneda,this.monedasForeignKey);

				monedaBeanSwingJInternalFrameLocal.actualizarRelaciones(monedaBeanSwingJInternalFrameLocal.moneda);

				pedidoLocal.setMoneda(monedaBeanSwingJInternalFrameLocal.moneda);

				this.addItemDefectoCombosForeignKeyMoneda();
				this.cargarCombosFrameMonedasForeignKey("Formulario");
				this.setActualMonedaForeignKey(monedaBeanSwingJInternalFrameLocal.moneda.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EmpleadoDetalleFormJInternalFrame.class)) {
				EmpleadoBeanSwingJInternalFrame empleadoBeanSwingJInternalFrameLocal=(EmpleadoBeanSwingJInternalFrame) ((EmpleadoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				empleadoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEmpleado(empleadoBeanSwingJInternalFrameLocal.getempleado(),true);
				empleadoBeanSwingJInternalFrameLocal.actualizarLista(empleadoBeanSwingJInternalFrameLocal.empleado,this.empleadosForeignKey);

				empleadoBeanSwingJInternalFrameLocal.actualizarRelaciones(empleadoBeanSwingJInternalFrameLocal.empleado);

				pedidoLocal.setEmpleado(empleadoBeanSwingJInternalFrameLocal.empleado);

				this.addItemDefectoCombosForeignKeyEmpleado();
				this.cargarCombosFrameEmpleadosForeignKey("Formulario");
				this.setActualEmpleadoForeignKey(empleadoBeanSwingJInternalFrameLocal.empleado.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoPrecioDetalleFormJInternalFrame.class)) {
				TipoPrecioBeanSwingJInternalFrame tipoprecioBeanSwingJInternalFrameLocal=(TipoPrecioBeanSwingJInternalFrame) ((TipoPrecioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipoprecioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoPrecio(tipoprecioBeanSwingJInternalFrameLocal.gettipoprecio(),true);
				tipoprecioBeanSwingJInternalFrameLocal.actualizarLista(tipoprecioBeanSwingJInternalFrameLocal.tipoprecio,this.tipopreciosForeignKey);

				tipoprecioBeanSwingJInternalFrameLocal.actualizarRelaciones(tipoprecioBeanSwingJInternalFrameLocal.tipoprecio);

				pedidoLocal.setTipoPrecio(tipoprecioBeanSwingJInternalFrameLocal.tipoprecio);

				this.addItemDefectoCombosForeignKeyTipoPrecio();
				this.cargarCombosFrameTipoPreciosForeignKey("Formulario");
				this.setActualTipoPrecioForeignKey(tipoprecioBeanSwingJInternalFrameLocal.tipoprecio.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(FormatoDetalleFormJInternalFrame.class)) {
				FormatoBeanSwingJInternalFrame formatoBeanSwingJInternalFrameLocal=(FormatoBeanSwingJInternalFrame) ((FormatoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				formatoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoFormato(formatoBeanSwingJInternalFrameLocal.getformato(),true);
				formatoBeanSwingJInternalFrameLocal.actualizarLista(formatoBeanSwingJInternalFrameLocal.formato,this.formatosForeignKey);

				formatoBeanSwingJInternalFrameLocal.actualizarRelaciones(formatoBeanSwingJInternalFrameLocal.formato);

				pedidoLocal.setFormato(formatoBeanSwingJInternalFrameLocal.formato);

				this.addItemDefectoCombosForeignKeyFormato();
				this.cargarCombosFrameFormatosForeignKey("Formulario");
				this.setActualFormatoForeignKey(formatoBeanSwingJInternalFrameLocal.formato.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(ClienteDetalleFormJInternalFrame.class)) {
				ClienteBeanSwingJInternalFrame clienteBeanSwingJInternalFrameLocal=(ClienteBeanSwingJInternalFrame) ((ClienteDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				clienteBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCliente(clienteBeanSwingJInternalFrameLocal.getcliente(),true);
				clienteBeanSwingJInternalFrameLocal.actualizarLista(clienteBeanSwingJInternalFrameLocal.cliente,this.clientesForeignKey);

				clienteBeanSwingJInternalFrameLocal.actualizarRelaciones(clienteBeanSwingJInternalFrameLocal.cliente);

				pedidoLocal.setCliente(clienteBeanSwingJInternalFrameLocal.cliente);

				this.addItemDefectoCombosForeignKeyCliente();
				this.cargarCombosFrameClientesForeignKey("Formulario");
				this.setActualClienteForeignKey(clienteBeanSwingJInternalFrameLocal.cliente.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(SubClienteDetalleFormJInternalFrame.class)) {
				SubClienteBeanSwingJInternalFrame subclienteBeanSwingJInternalFrameLocal=(SubClienteBeanSwingJInternalFrame) ((SubClienteDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				subclienteBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoSubCliente(subclienteBeanSwingJInternalFrameLocal.getsubcliente(),true);
				subclienteBeanSwingJInternalFrameLocal.actualizarLista(subclienteBeanSwingJInternalFrameLocal.subcliente,this.subclientesForeignKey);

				subclienteBeanSwingJInternalFrameLocal.actualizarRelaciones(subclienteBeanSwingJInternalFrameLocal.subcliente);

				pedidoLocal.setSubCliente(subclienteBeanSwingJInternalFrameLocal.subcliente);

				this.addItemDefectoCombosForeignKeySubCliente();
				this.cargarCombosFrameSubClientesForeignKey("Formulario");
				this.setActualSubClienteForeignKey(subclienteBeanSwingJInternalFrameLocal.subcliente.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(VendedorDetalleFormJInternalFrame.class)) {
				VendedorBeanSwingJInternalFrame vendedorBeanSwingJInternalFrameLocal=(VendedorBeanSwingJInternalFrame) ((VendedorDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				vendedorBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoVendedor(vendedorBeanSwingJInternalFrameLocal.getvendedor(),true);
				vendedorBeanSwingJInternalFrameLocal.actualizarLista(vendedorBeanSwingJInternalFrameLocal.vendedor,this.vendedorsForeignKey);

				vendedorBeanSwingJInternalFrameLocal.actualizarRelaciones(vendedorBeanSwingJInternalFrameLocal.vendedor);

				pedidoLocal.setVendedor(vendedorBeanSwingJInternalFrameLocal.vendedor);

				this.addItemDefectoCombosForeignKeyVendedor();
				this.cargarCombosFrameVendedorsForeignKey("Formulario");
				this.setActualVendedorForeignKey(vendedorBeanSwingJInternalFrameLocal.vendedor.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(ConsultorDetalleFormJInternalFrame.class)) {
				ConsultorBeanSwingJInternalFrame consultorBeanSwingJInternalFrameLocal=(ConsultorBeanSwingJInternalFrame) ((ConsultorDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				consultorBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoConsultor(consultorBeanSwingJInternalFrameLocal.getconsultor(),true);
				consultorBeanSwingJInternalFrameLocal.actualizarLista(consultorBeanSwingJInternalFrameLocal.consultor,this.consultorsForeignKey);

				consultorBeanSwingJInternalFrameLocal.actualizarRelaciones(consultorBeanSwingJInternalFrameLocal.consultor);

				pedidoLocal.setConsultor(consultorBeanSwingJInternalFrameLocal.consultor);

				this.addItemDefectoCombosForeignKeyConsultor();
				this.cargarCombosFrameConsultorsForeignKey("Formulario");
				this.setActualConsultorForeignKey(consultorBeanSwingJInternalFrameLocal.consultor.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(ResponsableDetalleFormJInternalFrame.class)) {
				ResponsableBeanSwingJInternalFrame responsableBeanSwingJInternalFrameLocal=(ResponsableBeanSwingJInternalFrame) ((ResponsableDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				responsableBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoResponsable(responsableBeanSwingJInternalFrameLocal.getresponsable(),true);
				responsableBeanSwingJInternalFrameLocal.actualizarLista(responsableBeanSwingJInternalFrameLocal.responsable,this.responsablesForeignKey);

				responsableBeanSwingJInternalFrameLocal.actualizarRelaciones(responsableBeanSwingJInternalFrameLocal.responsable);

				pedidoLocal.setResponsable(responsableBeanSwingJInternalFrameLocal.responsable);

				this.addItemDefectoCombosForeignKeyResponsable();
				this.cargarCombosFrameResponsablesForeignKey("Formulario");
				this.setActualResponsableForeignKey(responsableBeanSwingJInternalFrameLocal.responsable.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EstadoPedidoDetalleFormJInternalFrame.class)) {
				EstadoPedidoBeanSwingJInternalFrame estadopedidoBeanSwingJInternalFrameLocal=(EstadoPedidoBeanSwingJInternalFrame) ((EstadoPedidoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				estadopedidoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEstadoPedido(estadopedidoBeanSwingJInternalFrameLocal.getestadopedido(),true);
				estadopedidoBeanSwingJInternalFrameLocal.actualizarLista(estadopedidoBeanSwingJInternalFrameLocal.estadopedido,this.estadopedidosForeignKey);

				estadopedidoBeanSwingJInternalFrameLocal.actualizarRelaciones(estadopedidoBeanSwingJInternalFrameLocal.estadopedido);

				pedidoLocal.setEstadoPedido(estadopedidoBeanSwingJInternalFrameLocal.estadopedido);

				this.addItemDefectoCombosForeignKeyEstadoPedido();
				this.cargarCombosFrameEstadoPedidosForeignKey("Formulario");
				this.setActualEstadoPedidoForeignKey(estadopedidoBeanSwingJInternalFrameLocal.estadopedido.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TransporteDetalleFormJInternalFrame.class)) {
				TransporteBeanSwingJInternalFrame transporteBeanSwingJInternalFrameLocal=(TransporteBeanSwingJInternalFrame) ((TransporteDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				transporteBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTransporte(transporteBeanSwingJInternalFrameLocal.gettransporte(),true);
				transporteBeanSwingJInternalFrameLocal.actualizarLista(transporteBeanSwingJInternalFrameLocal.transporte,this.transportesForeignKey);

				transporteBeanSwingJInternalFrameLocal.actualizarRelaciones(transporteBeanSwingJInternalFrameLocal.transporte);

				pedidoLocal.setTransporte(transporteBeanSwingJInternalFrameLocal.transporte);

				this.addItemDefectoCombosForeignKeyTransporte();
				this.cargarCombosFrameTransportesForeignKey("Formulario");
				this.setActualTransporteForeignKey(transporteBeanSwingJInternalFrameLocal.transporte.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(RutaTransporteDetalleFormJInternalFrame.class)) {
				RutaTransporteBeanSwingJInternalFrame rutatransporteBeanSwingJInternalFrameLocal=(RutaTransporteBeanSwingJInternalFrame) ((RutaTransporteDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				rutatransporteBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoRutaTransporte(rutatransporteBeanSwingJInternalFrameLocal.getrutatransporte(),true);
				rutatransporteBeanSwingJInternalFrameLocal.actualizarLista(rutatransporteBeanSwingJInternalFrameLocal.rutatransporte,this.rutatransportesForeignKey);

				rutatransporteBeanSwingJInternalFrameLocal.actualizarRelaciones(rutatransporteBeanSwingJInternalFrameLocal.rutatransporte);

				pedidoLocal.setRutaTransporte(rutatransporteBeanSwingJInternalFrameLocal.rutatransporte);

				this.addItemDefectoCombosForeignKeyRutaTransporte();
				this.cargarCombosFrameRutaTransportesForeignKey("Formulario");
				this.setActualRutaTransporteForeignKey(rutatransporteBeanSwingJInternalFrameLocal.rutatransporte.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoLlamadaDetalleFormJInternalFrame.class)) {
				TipoLlamadaBeanSwingJInternalFrame tipollamadaBeanSwingJInternalFrameLocal=(TipoLlamadaBeanSwingJInternalFrame) ((TipoLlamadaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipollamadaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoLlamada(tipollamadaBeanSwingJInternalFrameLocal.gettipollamada(),true);
				tipollamadaBeanSwingJInternalFrameLocal.actualizarLista(tipollamadaBeanSwingJInternalFrameLocal.tipollamada,this.tipollamadasForeignKey);

				tipollamadaBeanSwingJInternalFrameLocal.actualizarRelaciones(tipollamadaBeanSwingJInternalFrameLocal.tipollamada);

				pedidoLocal.setTipoLlamada(tipollamadaBeanSwingJInternalFrameLocal.tipollamada);

				this.addItemDefectoCombosForeignKeyTipoLlamada();
				this.cargarCombosFrameTipoLlamadasForeignKey("Formulario");
				this.setActualTipoLlamadaForeignKey(tipollamadaBeanSwingJInternalFrameLocal.tipollamada.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TransportistaDetalleFormJInternalFrame.class)) {
				TransportistaBeanSwingJInternalFrame transportistaBeanSwingJInternalFrameLocal=(TransportistaBeanSwingJInternalFrame) ((TransportistaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				transportistaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTransportista(transportistaBeanSwingJInternalFrameLocal.gettransportista(),true);
				transportistaBeanSwingJInternalFrameLocal.actualizarLista(transportistaBeanSwingJInternalFrameLocal.transportista,this.transportistasForeignKey);

				transportistaBeanSwingJInternalFrameLocal.actualizarRelaciones(transportistaBeanSwingJInternalFrameLocal.transportista);

				pedidoLocal.setTransportista(transportistaBeanSwingJInternalFrameLocal.transportista);

				this.addItemDefectoCombosForeignKeyTransportista();
				this.cargarCombosFrameTransportistasForeignKey("Formulario");
				this.setActualTransportistaForeignKey(transportistaBeanSwingJInternalFrameLocal.transportista.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoCambioDetalleFormJInternalFrame.class)) {
				TipoCambioBeanSwingJInternalFrame tipocambioBeanSwingJInternalFrameLocal=(TipoCambioBeanSwingJInternalFrame) ((TipoCambioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipocambioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoCambio(tipocambioBeanSwingJInternalFrameLocal.gettipocambio(),true);
				tipocambioBeanSwingJInternalFrameLocal.actualizarLista(tipocambioBeanSwingJInternalFrameLocal.tipocambio,this.tipocambiosForeignKey);

				tipocambioBeanSwingJInternalFrameLocal.actualizarRelaciones(tipocambioBeanSwingJInternalFrameLocal.tipocambio);

				pedidoLocal.setTipoCambio(tipocambioBeanSwingJInternalFrameLocal.tipocambio);

				this.addItemDefectoCombosForeignKeyTipoCambio();
				this.cargarCombosFrameTipoCambiosForeignKey("Formulario");
				this.setActualTipoCambioForeignKey(tipocambioBeanSwingJInternalFrameLocal.tipocambio.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CentroCostoDetalleFormJInternalFrame.class)) {
				CentroCostoBeanSwingJInternalFrame centrocostoBeanSwingJInternalFrameLocal=(CentroCostoBeanSwingJInternalFrame) ((CentroCostoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				centrocostoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCentroCosto(centrocostoBeanSwingJInternalFrameLocal.getcentrocosto(),true);
				centrocostoBeanSwingJInternalFrameLocal.actualizarLista(centrocostoBeanSwingJInternalFrameLocal.centrocosto,this.centrocostosForeignKey);

				centrocostoBeanSwingJInternalFrameLocal.actualizarRelaciones(centrocostoBeanSwingJInternalFrameLocal.centrocosto);

				pedidoLocal.setCentroCosto(centrocostoBeanSwingJInternalFrameLocal.centrocosto);

				this.addItemDefectoCombosForeignKeyCentroCosto();
				this.cargarCombosFrameCentroCostosForeignKey("Formulario");
				this.setActualCentroCostoForeignKey(centrocostoBeanSwingJInternalFrameLocal.centrocosto.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(ZonaDetalleFormJInternalFrame.class)) {
				ZonaBeanSwingJInternalFrame zonaBeanSwingJInternalFrameLocal=(ZonaBeanSwingJInternalFrame) ((ZonaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				zonaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoZona(zonaBeanSwingJInternalFrameLocal.getzona(),true);
				zonaBeanSwingJInternalFrameLocal.actualizarLista(zonaBeanSwingJInternalFrameLocal.zona,this.zonasForeignKey);

				zonaBeanSwingJInternalFrameLocal.actualizarRelaciones(zonaBeanSwingJInternalFrameLocal.zona);

				pedidoLocal.setZona(zonaBeanSwingJInternalFrameLocal.zona);

				this.addItemDefectoCombosForeignKeyZona();
				this.cargarCombosFrameZonasForeignKey("Formulario");
				this.setActualZonaForeignKey(zonaBeanSwingJInternalFrameLocal.zona.getId(),false,"Formulario");
			}
		
		}
	}
	
	public Boolean validarPedidoActual() throws Exception {
		Boolean estaValidado=false;
		this.inicializarInvalidValues();
		
		/*
		int intSelectedRow = this.jTableDatosPedido.getSelectedRow();
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
			this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
		}
		//ARCHITECTURE
		*/
		
		this.invalidValues = pedidoValidator.getInvalidValues(this.pedido);
					
		if(this.invalidValues==null || this.invalidValues.length<=0) {
			estaValidado=true;
		} else {
			this.mostrarInvalidValues();	
		}
		
		return estaValidado;
	}
	
	public void actualizarLista(Pedido pedido,List<Pedido> pedidos) throws Exception {
		try	{		
			PedidoConstantesFunciones.actualizarLista(pedido,pedidos,this.pedidoSessionBean.getEsGuardarRelacionado());		
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void actualizarSelectedLista(Pedido pedido,List<Pedido> pedidos) throws Exception {
		try	{			
			PedidoConstantesFunciones.actualizarSelectedLista(pedido,pedidos);
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public Boolean tieneElementosSeleccionados() throws Exception {
		Boolean tiene=false;
		
		List<Pedido> pedidosLocal=null;
		
		try	{			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				pedidosLocal=this.pedidoLogic.getPedidos();
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				pedidosLocal=this.pedidos;
			}
			//ARCHITECTURE
		
			for(Pedido pedidoLocal:pedidosLocal) {
				if(this.permiteMantenimiento(pedidoLocal) && pedidoLocal.getIsSelected()) {
					tiene=true;
					break;
				}
			}
		} catch(Exception e) {
			throw e;
		}
		
		return tiene;
	}			
	
	public void mostrarInvalidValues() throws Exception {
		String sMensaje="";
				
		for (InvalidValue invalidValue : this.invalidValues) {
			sMensaje+="\r\n"+PedidoConstantesFunciones.getPedidoLabelDesdeNombre(invalidValue.getPropertyName())+"->"+invalidValue.getMessage();
			
			//MOSTRAR CAMPOS INVALIDOS
			if(invalidValue.getPropertyName().equals(PedidoConstantesFunciones.IDEMPRESA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabelid_empresaPedido,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoConstantesFunciones.IDSUCURSAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabelid_sucursalPedido,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoConstantesFunciones.IDEJERCICIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabelid_ejercicioPedido,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoConstantesFunciones.IDPERIODO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabelid_periodoPedido,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoConstantesFunciones.IDANIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabelid_anioPedido,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoConstantesFunciones.IDMES)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabelid_mesPedido,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoConstantesFunciones.IDUSUARIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabelid_usuarioPedido,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoConstantesFunciones.NUMERO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabelnumeroPedido,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoConstantesFunciones.PREIMPRESO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabelpre_impresoPedido,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoConstantesFunciones.FECHAEMISION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabelfecha_emisionPedido,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoConstantesFunciones.FECHAENTREGA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabelfecha_entregaPedido,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoConstantesFunciones.IDMONEDA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabelid_monedaPedido,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoConstantesFunciones.COTIZACION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabelcotizacionPedido,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoConstantesFunciones.IDEMPLEADO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabelid_empleadoPedido,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoConstantesFunciones.IDTIPOPRECIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabelid_tipo_precioPedido,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoConstantesFunciones.IDFORMATO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabelid_formatoPedido,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoConstantesFunciones.DIRECCION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabeldireccionPedido,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoConstantesFunciones.IDCLIENTE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabelid_clientePedido,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoConstantesFunciones.TELEFONO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabeltelefonoPedido,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoConstantesFunciones.RUC)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabelrucPedido,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoConstantesFunciones.IDSUBCLIENTE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabelid_sub_clientePedido,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoConstantesFunciones.IDVENDEDOR)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabelid_vendedorPedido,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoConstantesFunciones.IDCONSULTOR)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabelid_consultorPedido,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoConstantesFunciones.ORDEN)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabelordenPedido,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoConstantesFunciones.IDRESPONSABLE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabelid_responsablePedido,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoConstantesFunciones.IDESTADOPEDIDO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabelid_estado_pedidoPedido,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoConstantesFunciones.IDTRANSPORTE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabelid_transportePedido,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoConstantesFunciones.IDRUTATRANSPORTE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabelid_ruta_transportePedido,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoConstantesFunciones.VALORRUTA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabelvalor_rutaPedido,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoConstantesFunciones.IDTIPOLLAMADA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabelid_tipo_llamadaPedido,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoConstantesFunciones.IDTRANSPORTISTA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabelid_transportistaPedido,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoConstantesFunciones.HORAINICIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabelhora_inicioPedido,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoConstantesFunciones.HORAFIN)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabelhora_finPedido,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoConstantesFunciones.DESCRIPCION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabeldescripcionPedido,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoConstantesFunciones.CUPO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabelcupoPedido,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoConstantesFunciones.SALDO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabelsaldoPedido,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoConstantesFunciones.PEDIDOS)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabelpedidosPedido,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoConstantesFunciones.DOCUMENTOS)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabeldocumentosPedido,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoConstantesFunciones.DISPONIBLE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabeldisponiblePedido,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoConstantesFunciones.DESCUENTOPORCENTAJE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabeldescuento_porcentajePedido,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoConstantesFunciones.TOTALCONIVA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabeltotal_con_ivaPedido,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoConstantesFunciones.SUMAN)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabelsumanPedido,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoConstantesFunciones.DESCUENTOVALOR)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabeldescuento_valorPedido,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoConstantesFunciones.TOTALSINIVA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabeltotal_sin_ivaPedido,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoConstantesFunciones.DESCUENTOTOTAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabeldescuento_totalPedido,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoConstantesFunciones.FLETE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabelfletePedido,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoConstantesFunciones.TOTAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabeltotalPedido,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoConstantesFunciones.SUBTOTAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabelsubtotalPedido,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoConstantesFunciones.OTRO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabelotroPedido,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoConstantesFunciones.ULTIMOCOSTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabelultimo_costoPedido,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoConstantesFunciones.IVA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabelivaPedido,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoConstantesFunciones.FINANCIAMIENTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabelfinanciamientoPedido,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoConstantesFunciones.MARGENUTILIDAD)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabelmargen_utilidadPedido,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoConstantesFunciones.OTROSVALORES)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabelotros_valoresPedido,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoConstantesFunciones.ANTICIPO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabelanticipoPedido,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoConstantesFunciones.IDTIPOCAMBIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabelid_tipo_cambioPedido,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoConstantesFunciones.IDCENTROCOSTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabelid_centro_costoPedido,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoConstantesFunciones.IDZONA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabelid_zonaPedido,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoConstantesFunciones.FECHA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabelfechaPedido,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoConstantesFunciones.NUMEROFUE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabelnumero_fuePedido,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoConstantesFunciones.FECHASERVIDOR)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabelfecha_servidorPedido,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoConstantesFunciones.MONTORETENCION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabelmonto_retencionPedido,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoConstantesFunciones.ICE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabelicePedido,invalidValue.getMessage());}
        }
		
		
		if(!sMensaje.equals("")) {
			//JOptionPane.showMessageDialog(this,sMensaje,"VALIDACION ",JOptionPane.ERROR_MESSAGE);
			throw new Exception(sMensaje);			
		}
		
		/*
		System.out.println(invalidValue);
        System.out.println("message=" + invalidValue.getMessage());
        System.out.println("propertyName=" + invalidValue.getPropertyName());
        System.out.println("propertyPath=" + invalidValue.getPropertyPath());
        System.out.println("value=" + invalidValue.getValue());
        */
	}		
	
	public void inicializarInvalidValues() throws Exception {
		String sMensaje="";	
		
		if(this.jInternalFrameDetalleFormPedido!=null) {
		
		//MOSTRAR CAMPOS INVALIDOS
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedido.jLabelid_empresaPedido,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedido.jLabelid_sucursalPedido,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedido.jLabelid_ejercicioPedido,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedido.jLabelid_periodoPedido,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedido.jLabelid_anioPedido,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedido.jLabelid_mesPedido,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedido.jLabelid_usuarioPedido,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedido.jLabelnumeroPedido,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedido.jLabelpre_impresoPedido,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedido.jLabelfecha_emisionPedido,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedido.jLabelfecha_entregaPedido,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedido.jLabelid_monedaPedido,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedido.jLabelcotizacionPedido,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedido.jLabelid_empleadoPedido,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedido.jLabelid_tipo_precioPedido,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedido.jLabelid_formatoPedido,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedido.jLabeldireccionPedido,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedido.jLabelid_clientePedido,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedido.jLabeltelefonoPedido,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedido.jLabelrucPedido,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedido.jLabelid_sub_clientePedido,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedido.jLabelid_vendedorPedido,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedido.jLabelid_consultorPedido,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedido.jLabelordenPedido,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedido.jLabelid_responsablePedido,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedido.jLabelid_estado_pedidoPedido,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedido.jLabelid_transportePedido,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedido.jLabelid_ruta_transportePedido,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedido.jLabelvalor_rutaPedido,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedido.jLabelid_tipo_llamadaPedido,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedido.jLabelid_transportistaPedido,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedido.jLabelhora_inicioPedido,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedido.jLabelhora_finPedido,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedido.jLabeldescripcionPedido,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedido.jLabelcupoPedido,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedido.jLabelsaldoPedido,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedido.jLabelpedidosPedido,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedido.jLabeldocumentosPedido,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedido.jLabeldisponiblePedido,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedido.jLabeldescuento_porcentajePedido,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedido.jLabeltotal_con_ivaPedido,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedido.jLabelsumanPedido,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedido.jLabeldescuento_valorPedido,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedido.jLabeltotal_sin_ivaPedido,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedido.jLabeldescuento_totalPedido,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedido.jLabelfletePedido,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedido.jLabeltotalPedido,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedido.jLabelsubtotalPedido,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedido.jLabelotroPedido,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedido.jLabelultimo_costoPedido,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedido.jLabelivaPedido,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedido.jLabelfinanciamientoPedido,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedido.jLabelmargen_utilidadPedido,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedido.jLabelotros_valoresPedido,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedido.jLabelanticipoPedido,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedido.jLabelid_tipo_cambioPedido,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedido.jLabelid_centro_costoPedido,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedido.jLabelid_zonaPedido,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedido.jLabelfechaPedido,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedido.jLabelnumero_fuePedido,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedido.jLabelfecha_servidorPedido,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedido.jLabelmonto_retencionPedido,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedido.jLabelicePedido,"");
		
		}
	}
	
	
	
	public void actualizarObjetoPadreFk(String sTipo)  throws Exception {
		if(sTipo.equals("XXXAuxiliar")) {
		
		}
		
		 else  if(sTipo.equals("DetallePedido")) {
			if(this.pedido==null) {
				this.pedido= new Pedido();
			}

			if(this.pedidoSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoPedido
				this.setVariablesFormularioToObjetoActualPedido(this.pedido,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);

				this.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame.getdetallepedido().setPedido(this.pedido);
			}

			return;
		}
	}
	
	public void nuevoPreparar() throws Exception {
		this.nuevoPreparar(false);
	}
	
	public void nuevoPreparar(Boolean esNuevoGuardarCambios) throws Exception {
		this.iIdNuevoPedido--;	
		
		
		this.pedidoAux=new Pedido();
		
		this.pedidoAux.setId(this.iIdNuevoPedido);
		this.pedidoAux.setIsChanged(true);
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.pedidoLogic.getPedidos().add(this.pedidoAux);
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.pedidos.add(this.pedidoAux);
		}
		//ARCHITECTURE
		
		this.pedido=this.pedidoAux;
		
		if(PedidoJInternalFrame.ISBINDING_MANUAL_TABLA) {
			this.setVariablesObjetoActualToFormularioPedido(this.pedido);
			this.setVariablesObjetoActualToFormularioForeignKeyPedido(this.pedido);
		}
				
		//this.setDefaultControlesPedido();
		
		this.inicializarInvalidValues();
				
		//SELECCIONA ITEM DEFECTO-->SET O SELECTED INDEX
		this.setItemDefectoCombosForeignKeyPedido();
		
		
		//INICIALIZA VARIABLES COMBOS GLOBALES A FORMULARIO(ParametroGeneralUsuario)
		this.setVariablesGlobalesCombosForeignKeyPedido();
		
		//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
		//this.setVariablesGlobalesAuxiliaresCombosForeignKeyPedido();
		
		//SI TIENE FOREIGN KEY CON CAMPO esDefecto=true, SE ACTUALIZA A OBJETO ACTUAL
		this.setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualPedido(this.pedidoBean,this.pedido,false,false);
		
		//ACTUALIZA VALORES PARA EL OBJETO ACTUAL ANTES DE ENVIARLO A ACTUALIZAR
		this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
				
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		if(this.jInternalFrameParent!=null) {
			this.jInternalFrameParent.actualizarObjetoPadreFk(PedidoConstantesFunciones.CLASSNAME);
		}	
		
		
		if(this.pedidoSessionBean.getConGuardarRelaciones()) {
			classes=PedidoConstantesFunciones.getClassesRelationshipsOfPedido(new ArrayList<Classe>(),DeepLoadType.NONE);
		}
		
		this.classesActual=new ArrayList<Classe>();
		this.classesActual.addAll(classes);
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {						
			this.pedidoReturnGeneral=pedidoLogic.procesarEventosPedidosWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,EventoGlobalTipo.FORM_RECARGAR,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.pedidoLogic.getPedidos(),this.pedido,this.pedidoParameterGeneral,this.isEsNuevoPedido,classes);//this.pedidoLogic.getPedido()
						
		} else if(Constantes.ISUSAEJBREMOTE) {
						
		} else if(Constantes.ISUSAEJBHOME) {
		}
		//ARCHITECTURE
		
		//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
		//this.setVariablesObjetoReturnGeneralToBeanPedido(this.pedidoReturnGeneral,this.pedidoBean,false);
		
		if(this.pedidoReturnGeneral.getConRecargarPropiedades()) {
			//INICIALIZA VARIABLES COMBOS NORMALES (FK)
			this.setVariablesObjetoActualToFormularioForeignKeyPedido(this.pedidoReturnGeneral.getPedido());
			
			//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
			this.setVariablesObjetoActualToFormularioPedido(this.pedidoReturnGeneral.getPedido());
		}
		
		if(this.pedidoReturnGeneral.getConRecargarRelaciones()) {
			//INICIALIZA VARIABLES RELACIONES A FORMULARIO
			this.setVariablesRelacionesObjetoActualToFormularioPedido(this.pedidoReturnGeneral.getPedido(),classes);//this.pedidoBean);	
		}
			
		//ACTUALIZA VARIABLES FORMULARIO A OBJETO ACTUAL (PARA NUEVO TABLA O GUARDAR CAMBIOS
		if(esNuevoGuardarCambios) {
			this.setVariablesFormularioToObjetoActualPedido(this.pedido,false);
		}
		
		//INICIALIZA VARIABLES COMBOS DEFAULT DEL PROYECTO(|DEFAULT para FK)
		//this.setVariablesDefaultCombosForeignKeyPedido();
		
		//INICIALIZA VARIABLES COMBOS PARAMETRO DEL PROYECTO(|VALORPARAM Era para ParametroModulo, ahora en logic)
		//this.setVariablesParametroCombosForeignKeyPedido();						
		
		if(!esNuevoGuardarCambios) {
			//INICIALIZA VARIABLES POR OPCION MENU
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			PedidoBeanSwingJInternalFrameAdditional.RecargarFormPedido(this,"NUEVO_PREPARAR","",this.arrDatoGeneral);
		
			//NO FUNCIONA BINDINGS			
			this.inicializarActualizarBindingPedido(false);
						
			if(pedidoSessionBean.getConGuardarRelaciones()) {
				//DEBERIA YA ESTAR CARGADO LOS COMBOS Y SI SE NECESITA ALGO MAS SE DEBE CREAR FUNCION LIMITADA
				//SI DEBE TRAER Y RESETEAR TABLA
				

				if(this.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame.detallepedidoSessionBean.getEsGuardarRelacionado() && DetallePedidoJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonDetallePedidoActionPerformed(null,-1,false,true,null);
				}				
			}
				
			//SI ES MANUAL
			if(PedidoJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualPedido();
			}
			
			this.actualizarVisualTableDatosPedido();
			
			this.jTableDatosPedido.setRowSelectionInterval(this.getIndiceNuevoPedido(), this.getIndiceNuevoPedido());
			
			this.seleccionarFilaTablaPedidoActual();
						
			this.actualizarEstadoCeldasBotonesPedido("a", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		}		
	}
	
	public void habilitarDeshabilitarControlesPedido(Boolean isHabilitar) throws Exception {
		
		this.jInternalFrameDetalleFormPedido.jTextFieldnumeroPedido.setEnabled(isHabilitar && this.pedidoConstantesFunciones.activarnumeroPedido);
		this.jInternalFrameDetalleFormPedido.jTextFieldpre_impresoPedido.setEnabled(isHabilitar && this.pedidoConstantesFunciones.activarpre_impresoPedido);
		this.jInternalFrameDetalleFormPedido.jDateChooserfecha_emisionPedido.setEnabled(isHabilitar && this.pedidoConstantesFunciones.activarfecha_emisionPedido);
		this.jInternalFrameDetalleFormPedido.jDateChooserfecha_entregaPedido.setEnabled(isHabilitar && this.pedidoConstantesFunciones.activarfecha_entregaPedido);
		this.jInternalFrameDetalleFormPedido.jTextFieldcotizacionPedido.setEnabled(isHabilitar && this.pedidoConstantesFunciones.activarcotizacionPedido);
		this.jInternalFrameDetalleFormPedido.jTextAreadireccionPedido.setEnabled(isHabilitar && this.pedidoConstantesFunciones.activardireccionPedido);
		this.jInternalFrameDetalleFormPedido.jTextFieldtelefonoPedido.setEnabled(isHabilitar && this.pedidoConstantesFunciones.activartelefonoPedido);
		this.jInternalFrameDetalleFormPedido.jTextFieldrucPedido.setEnabled(isHabilitar && this.pedidoConstantesFunciones.activarrucPedido);
		this.jInternalFrameDetalleFormPedido.jTextFieldordenPedido.setEnabled(isHabilitar && this.pedidoConstantesFunciones.activarordenPedido);
		this.jInternalFrameDetalleFormPedido.jTextFieldvalor_rutaPedido.setEnabled(isHabilitar && this.pedidoConstantesFunciones.activarvalor_rutaPedido);
		this.jInternalFrameDetalleFormPedido.jSpinnerhora_inicioPedido.setEnabled(isHabilitar && this.pedidoConstantesFunciones.activarhora_inicioPedido);
		this.jInternalFrameDetalleFormPedido.jSpinnerhora_finPedido.setEnabled(isHabilitar && this.pedidoConstantesFunciones.activarhora_finPedido);
		this.jInternalFrameDetalleFormPedido.jTextAreadescripcionPedido.setEnabled(isHabilitar && this.pedidoConstantesFunciones.activardescripcionPedido);
		this.jInternalFrameDetalleFormPedido.jTextFieldcupoPedido.setEnabled(isHabilitar && this.pedidoConstantesFunciones.activarcupoPedido);
		this.jInternalFrameDetalleFormPedido.jTextFieldsaldoPedido.setEnabled(isHabilitar && this.pedidoConstantesFunciones.activarsaldoPedido);
		this.jInternalFrameDetalleFormPedido.jTextFieldpedidosPedido.setEnabled(isHabilitar && this.pedidoConstantesFunciones.activarpedidosPedido);
		this.jInternalFrameDetalleFormPedido.jTextFielddocumentosPedido.setEnabled(isHabilitar && this.pedidoConstantesFunciones.activardocumentosPedido);
		this.jInternalFrameDetalleFormPedido.jTextFielddisponiblePedido.setEnabled(isHabilitar && this.pedidoConstantesFunciones.activardisponiblePedido);
		this.jInternalFrameDetalleFormPedido.jTextFielddescuento_porcentajePedido.setEnabled(isHabilitar && this.pedidoConstantesFunciones.activardescuento_porcentajePedido);
		this.jInternalFrameDetalleFormPedido.jTextFieldtotal_con_ivaPedido.setEnabled(isHabilitar && this.pedidoConstantesFunciones.activartotal_con_ivaPedido);
		this.jInternalFrameDetalleFormPedido.jTextFieldsumanPedido.setEnabled(isHabilitar && this.pedidoConstantesFunciones.activarsumanPedido);
		this.jInternalFrameDetalleFormPedido.jTextFielddescuento_valorPedido.setEnabled(isHabilitar && this.pedidoConstantesFunciones.activardescuento_valorPedido);
		this.jInternalFrameDetalleFormPedido.jTextFieldtotal_sin_ivaPedido.setEnabled(isHabilitar && this.pedidoConstantesFunciones.activartotal_sin_ivaPedido);
		this.jInternalFrameDetalleFormPedido.jTextFielddescuento_totalPedido.setEnabled(isHabilitar && this.pedidoConstantesFunciones.activardescuento_totalPedido);
		this.jInternalFrameDetalleFormPedido.jTextFieldfletePedido.setEnabled(isHabilitar && this.pedidoConstantesFunciones.activarfletePedido);
		this.jInternalFrameDetalleFormPedido.jTextFieldtotalPedido.setEnabled(isHabilitar && this.pedidoConstantesFunciones.activartotalPedido);
		this.jInternalFrameDetalleFormPedido.jTextFieldsubtotalPedido.setEnabled(isHabilitar && this.pedidoConstantesFunciones.activarsubtotalPedido);
		this.jInternalFrameDetalleFormPedido.jTextFieldotroPedido.setEnabled(isHabilitar && this.pedidoConstantesFunciones.activarotroPedido);
		this.jInternalFrameDetalleFormPedido.jTextFieldultimo_costoPedido.setEnabled(isHabilitar && this.pedidoConstantesFunciones.activarultimo_costoPedido);
		this.jInternalFrameDetalleFormPedido.jTextFieldivaPedido.setEnabled(isHabilitar && this.pedidoConstantesFunciones.activarivaPedido);
		this.jInternalFrameDetalleFormPedido.jTextFieldfinanciamientoPedido.setEnabled(isHabilitar && this.pedidoConstantesFunciones.activarfinanciamientoPedido);
		this.jInternalFrameDetalleFormPedido.jTextFieldmargen_utilidadPedido.setEnabled(isHabilitar && this.pedidoConstantesFunciones.activarmargen_utilidadPedido);
		this.jInternalFrameDetalleFormPedido.jTextFieldotros_valoresPedido.setEnabled(isHabilitar && this.pedidoConstantesFunciones.activarotros_valoresPedido);
		this.jInternalFrameDetalleFormPedido.jTextFieldanticipoPedido.setEnabled(isHabilitar && this.pedidoConstantesFunciones.activaranticipoPedido);//
		this.jInternalFrameDetalleFormPedido.jDateChooserfechaPedido.setEnabled(isHabilitar && this.pedidoConstantesFunciones.activarfechaPedido);//
		this.jInternalFrameDetalleFormPedido.jTextFieldnumero_fuePedido.setEnabled(isHabilitar && this.pedidoConstantesFunciones.activarnumero_fuePedido);//
		this.jInternalFrameDetalleFormPedido.jDateChooserfecha_servidorPedido.setEnabled(isHabilitar && this.pedidoConstantesFunciones.activarfecha_servidorPedido);//
		this.jInternalFrameDetalleFormPedido.jTextFieldmonto_retencionPedido.setEnabled(isHabilitar && this.pedidoConstantesFunciones.activarmonto_retencionPedido);//
		this.jInternalFrameDetalleFormPedido.jTextFieldicePedido.setEnabled(isHabilitar && this.pedidoConstantesFunciones.activaricePedido);	
		//
		this.jInternalFrameDetalleFormPedido.jComboBoxid_empresaPedido.setEnabled(isHabilitar && this.pedidoConstantesFunciones.activarid_empresaPedido);//
		this.jInternalFrameDetalleFormPedido.jComboBoxid_sucursalPedido.setEnabled(isHabilitar && this.pedidoConstantesFunciones.activarid_sucursalPedido);//
		this.jInternalFrameDetalleFormPedido.jComboBoxid_ejercicioPedido.setEnabled(isHabilitar && this.pedidoConstantesFunciones.activarid_ejercicioPedido);//
		this.jInternalFrameDetalleFormPedido.jComboBoxid_periodoPedido.setEnabled(isHabilitar && this.pedidoConstantesFunciones.activarid_periodoPedido);//
		this.jInternalFrameDetalleFormPedido.jComboBoxid_anioPedido.setEnabled(isHabilitar && this.pedidoConstantesFunciones.activarid_anioPedido);//
		this.jInternalFrameDetalleFormPedido.jComboBoxid_mesPedido.setEnabled(isHabilitar && this.pedidoConstantesFunciones.activarid_mesPedido);//
		this.jInternalFrameDetalleFormPedido.jComboBoxid_usuarioPedido.setEnabled(isHabilitar && this.pedidoConstantesFunciones.activarid_usuarioPedido);//
		this.jInternalFrameDetalleFormPedido.jComboBoxid_monedaPedido.setEnabled(isHabilitar && this.pedidoConstantesFunciones.activarid_monedaPedido);
		this.jInternalFrameDetalleFormPedido.jComboBoxid_empleadoPedido.setEnabled(isHabilitar && this.pedidoConstantesFunciones.activarid_empleadoPedido);
		this.jInternalFrameDetalleFormPedido.jComboBoxid_tipo_precioPedido.setEnabled(isHabilitar && this.pedidoConstantesFunciones.activarid_tipo_precioPedido);
		this.jInternalFrameDetalleFormPedido.jComboBoxid_formatoPedido.setEnabled(isHabilitar && this.pedidoConstantesFunciones.activarid_formatoPedido);
		this.jInternalFrameDetalleFormPedido.jComboBoxid_clientePedido.setEnabled(isHabilitar && this.pedidoConstantesFunciones.activarid_clientePedido);
		this.jInternalFrameDetalleFormPedido.jComboBoxid_sub_clientePedido.setEnabled(isHabilitar && this.pedidoConstantesFunciones.activarid_sub_clientePedido);
		this.jInternalFrameDetalleFormPedido.jComboBoxid_vendedorPedido.setEnabled(isHabilitar && this.pedidoConstantesFunciones.activarid_vendedorPedido);
		this.jInternalFrameDetalleFormPedido.jComboBoxid_consultorPedido.setEnabled(isHabilitar && this.pedidoConstantesFunciones.activarid_consultorPedido);
		this.jInternalFrameDetalleFormPedido.jComboBoxid_responsablePedido.setEnabled(isHabilitar && this.pedidoConstantesFunciones.activarid_responsablePedido);
		this.jInternalFrameDetalleFormPedido.jComboBoxid_estado_pedidoPedido.setEnabled(isHabilitar && this.pedidoConstantesFunciones.activarid_estado_pedidoPedido);
		this.jInternalFrameDetalleFormPedido.jComboBoxid_transportePedido.setEnabled(isHabilitar && this.pedidoConstantesFunciones.activarid_transportePedido);
		this.jInternalFrameDetalleFormPedido.jComboBoxid_ruta_transportePedido.setEnabled(isHabilitar && this.pedidoConstantesFunciones.activarid_ruta_transportePedido);
		this.jInternalFrameDetalleFormPedido.jComboBoxid_tipo_llamadaPedido.setEnabled(isHabilitar && this.pedidoConstantesFunciones.activarid_tipo_llamadaPedido);
		this.jInternalFrameDetalleFormPedido.jComboBoxid_transportistaPedido.setEnabled(isHabilitar && this.pedidoConstantesFunciones.activarid_transportistaPedido);//
		this.jInternalFrameDetalleFormPedido.jComboBoxid_tipo_cambioPedido.setEnabled(isHabilitar && this.pedidoConstantesFunciones.activarid_tipo_cambioPedido);//
		this.jInternalFrameDetalleFormPedido.jComboBoxid_centro_costoPedido.setEnabled(isHabilitar && this.pedidoConstantesFunciones.activarid_centro_costoPedido);//
		this.jInternalFrameDetalleFormPedido.jComboBoxid_zonaPedido.setEnabled(isHabilitar && this.pedidoConstantesFunciones.activarid_zonaPedido);
	};
	
	public void setDefaultControlesPedido() throws Exception {
			
	};
	
	
	public void habilitarDeshabilitarTipoMantenimientoPedido(Boolean esRelaciones) throws Exception {
		if(esRelaciones) {
			//this.pedidoSessionBean.setConGuardarRelaciones(true);			
			this.pedidoSessionBean.setEstaModoGuardarRelaciones(true);				
			this.jInternalFrameDetalleFormPedido.jTabbedPaneRelacionesPedido.setVisible(true);
			
			

			if(this.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame.detallepedidoSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}		
		} else {
			//this.pedidoSessionBean.setConGuardarRelaciones(false);			
			this.pedidoSessionBean.setEstaModoGuardarRelaciones(false);						
			this.jInternalFrameDetalleFormPedido.jTabbedPaneRelacionesPedido.setVisible(false);
			
			

			if(this.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame.detallepedidoSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}
		}
	};
	
	public int getIndiceNuevoPedido() throws Exception {
		int iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(Pedido pedidoAux:this.pedidoLogic.getPedidos()) {
				if(pedidoAux.getId().equals(this.iIdNuevoPedido)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(Pedido pedidoAux:this.pedidos) {
				if(pedidoAux.getId().equals(this.iIdNuevoPedido)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndice-1;
		}
		
		return iIndice;
	}
	
	public int getIndiceActualPedido(Pedido pedido,Integer iIndiceActual) throws Exception {
		Integer iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(Pedido pedidoAux:this.pedidoLogic.getPedidos()) {
				if(pedidoAux.getId().equals(pedido.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(Pedido pedidoAux:this.pedidos) {
				if(pedidoAux.getId().equals(pedido.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndiceActual;
		}
		
		return iIndice;
	}
	
	public void setCamposBaseDesdeOriginalPedido(Pedido pedidoOriginal) throws Exception {
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(Pedido pedidoAux:this.pedidoLogic.getPedidos()) {
				if(pedidoAux.getPedidoOriginal().getId().equals(pedidoOriginal.getId())) {
					existe=true;
					pedidoOriginal.setId(pedidoAux.getId());
					pedidoOriginal.setVersionRow(pedidoAux.getVersionRow());
					break;
				}
				
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(Pedido pedidoAux:this.pedidos) {
				if(pedidoAux.getPedidoOriginal().getId().equals(pedidoOriginal.getId())) {
					existe=true;
					pedidoOriginal.setId(pedidoAux.getId());
					pedidoOriginal.setVersionRow(pedidoAux.getVersionRow());
					break;
				}				
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
		}
	}
	
	public void cancelarNuevosPedido(Boolean esParaCancelar) throws Exception {
		pedidosAux=new ArrayList<Pedido>();
		pedidoAux=new Pedido();
		
		if(!this.pedidoSessionBean.getEsGuardarRelacionado()) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(Pedido pedidoAux:this.pedidoLogic.getPedidos()) {
					if(pedidoAux.getId()<0) {
						pedidosAux.add(pedidoAux);
					}		
				}
				this.iIdNuevoPedido=0L;
				this.pedidoLogic.getPedidos().removeAll(pedidosAux);
					
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(Pedido pedidoAux:this.pedidos) {
					if(pedidoAux.getId()<0) {
						pedidosAux.add(pedidoAux);
					}		
				}
				this.iIdNuevoPedido=0L;
				this.pedidos.removeAll(pedidosAux);
			}	
		} else {			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				if(esParaCancelar && this.isEsNuevoPedido 
					&& this.pedidoLogic.getPedidos().size()>0
					) {
					pedidoAux=this.pedidoLogic.getPedidos().get(this.pedidoLogic.getPedidos().size() - 1);
				
					if(pedidoAux.getId()<0) {
						this.pedidoLogic.getPedidos().remove(pedidoAux);
					}
				}
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				if(esParaCancelar && this.isEsNuevoPedido && this.pedidos.size()>0) {
					pedidoAux=this.pedidos.get(this.pedidos.size() - 1);
				
					if(pedidoAux.getId()<0) {
						this.pedidos.remove(pedidoAux);
					}
				}
			}	
		}
	}
	
	public void cancelarNuevoPedido(Boolean esParaCancelar) throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			if(pedido.getId()<0) {
				this.pedidoLogic.getPedidos().remove(this.pedido);
			}					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			if(pedido.getId()<0) {
				this.pedidos.remove(this.pedido);
			}
		}			
	}
	
	public void setEstadosInicialesPedido(List<Pedido> pedidosAux) throws Exception {
		PedidoConstantesFunciones.setEstadosInicialesPedido(pedidosAux);
	}
	
	public void setEstadosInicialesPedido(Pedido pedidoAux) throws Exception {
		PedidoConstantesFunciones.setEstadosInicialesPedido(pedidoAux);		
	}
	
	public void nuevo() throws Exception {
		try	{
			//ESTA VALIDADO EN FUNCION ACTUALIZAR
			//if(this.validarPedidoActual()) {
				this.ejecutarMantenimiento(MaintenanceType.NUEVO);
				
				this.actualizarEstadoCeldasBotonesPedido("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
				
			//}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void actualizar() throws Exception {
		try	{
			if(this.validarPedidoActual()) {
				if(!this.isEsNuevoPedido) {
					this.ejecutarMantenimiento(MaintenanceType.ACTUALIZAR);
					
					this.actualizarEstadoCeldasBotonesPedido("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
					
				} else {					
					this.nuevo();
					this.isEsNuevoPedido=false;
				}
				
				//SE CANCELA AL FINAL DEL PROCESO JBUTTONACTUALIZAR
				//this.cancelar(false);
			}		
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void eliminar() throws Exception {
		try	{	
			if(this.validarPedidoActual()) {
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE ELIMINAR EL/LA Pedido ?", "MANTENIMIENTO DE Pedido", JOptionPane.OK_CANCEL_OPTION) == 0) {
					this.ejecutarMantenimiento(MaintenanceType.ELIMINAR);			
					this.actualizarEstadoCeldasBotonesPedido("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
				}
			
			}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void guardarCambios() throws Exception {
		try	{
			this.ejecutarMantenimiento(MaintenanceType.GUARDARCAMBIOS);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarAsignar(Pedido pedido) throws Exception {
		PedidoConstantesFunciones.seleccionarAsignar(this.pedido,pedido);
	}
	
	public void seleccionar() throws Exception {
		try	{
			//ACTUALIZO EL PERMISO ACTUALIZAR CON EL PERMISO ACTUALIZAR ORIGINAL ESTE PERMISO SE UTILIZA PARA EL NUEVO TAMBIEN
			this.isPermisoActualizarPedido=this.isPermisoActualizarOriginalPedido;
			
			
			this.seleccionarAsignar(pedido);
			
			

			idEmpleadoActual=pedido.getid_empleado();
			this.seleccionarEmpleadoActual();

			idClienteActual=pedido.getid_cliente();
			this.seleccionarClienteActual();

			idVendedorActual=pedido.getid_vendedor();
			this.seleccionarVendedorActual();

			idTipoCambioActual=pedido.getid_tipo_cambio();
			this.seleccionarTipoCambioActual();

			idCentroCostoActual=pedido.getid_centro_costo();
			this.seleccionarCentroCostoActual();
			
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			PedidoConstantesFunciones.quitarEspaciosPedido(this.pedido,this.arrDatoGeneral);
			
			
			this.actualizarEstadoCeldasBotonesPedido("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarBusqueda(Long id) throws Exception {
		try	{
			this.pedidoSessionBean.setsFuncionBusquedaRapida(this.pedidoSessionBean.getsFuncionBusquedaRapida().replace("TO_REPLACE", id.toString()));
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
		}
	}
	
	
	//BUSQUEDA INTERNA FK
	public void seleccionarEmpleadoActual() throws Exception {
		try	{
			Empleado empleadoAux=new Empleado();

			if(this.idEmpleadoActual != null && this.idEmpleadoActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					empleadoLogic.getEntityWithConnection(this.idEmpleadoActual);
					empleadoAux= empleadoLogic.getEmpleado();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				empleadosForeignKey=new ArrayList<Empleado>();
				empleadosForeignKey.add(empleadoAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	public void seleccionarClienteActual() throws Exception {
		try	{
			Cliente clienteAux=new Cliente();

			if(this.idClienteActual != null && this.idClienteActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteLogic.getEntityWithConnection(this.idClienteActual);
					clienteAux= clienteLogic.getCliente();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				clientesForeignKey=new ArrayList<Cliente>();
				clientesForeignKey.add(clienteAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	public void seleccionarVendedorActual() throws Exception {
		try	{
			Vendedor vendedorAux=new Vendedor();

			if(this.idVendedorActual != null && this.idVendedorActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					vendedorLogic.getEntityWithConnection(this.idVendedorActual);
					vendedorAux= vendedorLogic.getVendedor();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				vendedorsForeignKey=new ArrayList<Vendedor>();
				vendedorsForeignKey.add(vendedorAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	public void seleccionarTipoCambioActual() throws Exception {
		try	{
			TipoCambio tipocambioAux=new TipoCambio();

			if(this.idTipoCambioActual != null && this.idTipoCambioActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipocambioLogic.getEntityWithConnection(this.idTipoCambioActual);
					tipocambioAux= tipocambioLogic.getTipoCambio();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				tipocambiosForeignKey=new ArrayList<TipoCambio>();
				tipocambiosForeignKey.add(tipocambioAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	public void seleccionarCentroCostoActual() throws Exception {
		try	{
			CentroCosto centrocostoAux=new CentroCosto();

			if(this.idCentroCostoActual != null && this.idCentroCostoActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					centrocostoLogic.getEntityWithConnection(this.idCentroCostoActual);
					centrocostoAux= centrocostoLogic.getCentroCosto();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				centrocostosForeignKey=new ArrayList<CentroCosto>();
				centrocostosForeignKey.add(centrocostoAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	
	public void cancelar() throws Exception {
		this.cancelar(true);
	}
	
	public void cancelar(Boolean esParaCancelar) throws Exception {
		try {
														
			
			//SE UTILIZA COLUMNA ELIMINAR EN TABLA
			if(this.isEsNuevoPedido) {
				//NO CANCELA TODOS NUEVOS POR FUNCIONALIDAD GUARDAR CAMBIOS
				//this.cancelarNuevosPedido(esParaCancelar);				
				this.cancelarNuevoPedido(esParaCancelar);								
			}
			
			this.pedido=new Pedido();
			
			this.inicializarPedido();
			
			this.actualizarEstadoCeldasBotonesPedido("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void inicializarPedido() throws Exception {
		try {
			PedidoConstantesFunciones.inicializarPedido(this.pedido);
			
			} catch(Exception e) {
			throw e;
		}
	}
	
	public void anteriores()throws Exception {
		try	{
			//this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			
			if(this.iNumeroPaginacionPagina-this.iNumeroPaginacion<this.iNumeroPaginacion) {
				this.iNumeroPaginacionPagina=0;		
			} else {
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			}
			
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void siguientes()throws Exception {
		try	{			
			if(this.pedidoLogic.getPedidos().size()>0) {
					
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina+this.iNumeroPaginacion;
			}
				
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void generarReportePedidos(String sAccionBusqueda,List<Pedido> pedidosParaReportes) throws Exception {
		//HttpSession httpSession = httpServletRequest.getSession();
		Long iIdUsuarioSesion=0L;	
		
		
		if(usuarioActual==null) {
			this.usuarioActual=new Usuario();
		}
		
		iIdUsuarioSesion=usuarioActual.getId();
		
		String sPathReportes="";
		
		InputStream reportFile=null;
		InputStream imageFile=null;
			
		imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		String sPathReporteFinal="";
		
		if(!esReporteAccionProceso) {
			if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
				if(!this.esReporteDinamico) {
					sPathReporteFinal="Pedido"+this.sTipoReporteExtra+"Design.jasper";
					reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
				} else {
					sPathReporteFinal=this.sPathReporteDinamico;
					reportFile = new FileInputStream(sPathReporteFinal);
				}
			} else {
				sPathReporteFinal="PedidoMasterRelaciones"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);
				//sPathReportes=reportFile.getPath().replace("PedidoMasterRelacionesDesign.jasper", "");
			}
		} else {
				sPathReporteFinal="Pedido"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
		}
		
		if(reportFile==null) {
			throw new JRRuntimeException(sPathReporteFinal+" no existe");
		}
		
		String sUsuario="";
		
		if(usuarioActual!=null) {
			sUsuario=usuarioActual.getuser_name();
		}
		
		Map<String, Object> parameters = new HashMap<String, Object>();
		parameters.put("usuario", sUsuario);
		
		parameters.put("titulo", Funciones.GetTituloSistemaReporte(this.parametroGeneralSg,this.moduloActual,this.usuarioActual));
		parameters.put("subtitulo", "Reporte De  Pedidos");		
		parameters.put("busquedapor", PedidoConstantesFunciones.getNombreIndice(sAccionBusqueda)+sDetalleReporte);
		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			parameters.put("SUBREPORT_DIR", sPathReportes);
		}
		
		parameters.put("con_grafico", this.conGraficoReporte);
		
		JasperReport jasperReport = (JasperReport)JRLoader.loadObject(reportFile);
				
		this.cargarDatosCliente();
		
		ArrayList<Classe> classes=new ArrayList<Classe>();		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			
			classes.add(new Classe(DetallePedido.class));
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {		
				try	{
					
					PedidoLogic pedidoLogicAuxiliar=new PedidoLogic();
					pedidoLogicAuxiliar.setDatosCliente(pedidoLogic.getDatosCliente());				
					pedidoLogicAuxiliar.setPedidos(pedidosParaReportes);
					
					pedidoLogicAuxiliar.cargarRelacionesLoteForeignKeyPedidoWithConnection(); //deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes, "");
					
					pedidosParaReportes=pedidoLogicAuxiliar.getPedidos();
					
					//pedidoLogic.getNewConnexionToDeep();
					
					//for (Pedido pedido:pedidosParaReportes) {
					//	pedidoLogic.deepLoad(pedido, false, DeepLoadType.INCLUDE, classes);
					//}						
					//pedidoLogic.commitNewConnexionToDeep();
					
						
				} catch(Exception e) {
					throw e;
					
				} finally {
					//pedidoLogic.closeNewConnexionToDeep();
				}
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
			//ARCHITECTURE		
			
		
			
			

			InputStream reportFileDetallePedido = AuxiliarReportes.class.getResourceAsStream("DetallePedidoDetalleRelacionesDesign.jasper");
			parameters.put("subreport_detallepedido", reportFileDetallePedido);
		} else {
			//FK DEBERIA TRAERSE DE ANTEMANO
			
		}
								
		
		//CLASSES PARA REPORTES OBJETOS RELACIONADOS
		if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
			classes=new ArrayList<Classe>();
		}
		
		JRBeanArrayDataSource jrbeanArrayDataSourcePedido=null;
		
		if(this.sTipoReporteExtra!=null && !this.sTipoReporteExtra.equals("")) {
			PedidoConstantesFunciones.S_TIPOREPORTE_EXTRA=this.sTipoReporteExtra;
		} else {
			PedidoConstantesFunciones.S_TIPOREPORTE_EXTRA="";
		}
		
		jrbeanArrayDataSourcePedido=new JRBeanArrayDataSource(PedidoJInternalFrame.TraerPedidoBeans(pedidosParaReportes,classes).toArray());
		
		jasperPrint = JasperFillManager.fillReport(jasperReport,parameters,jrbeanArrayDataSourcePedido);
				
		
		String sPathDest=Constantes.SUNIDAD_ARCHIVOS+":/"+Constantes.SCONTEXTSERVER+"/"+PedidoConstantesFunciones.SCHEMA+"/reportes";
		
		File filePathDest = new File(sPathDest);
		
		if(!filePathDest.exists()) {
			filePathDest.mkdirs();				
		}
				
		String sDestFileName=sPathDest+"/"+PedidoConstantesFunciones.CLASSNAME;
				
		if(this.sTipoArchivoReporte=="VISUALIZAR") {
			JasperViewer jasperViewer = new JasperViewer(jasperPrint,false) ;
			jasperViewer.setVisible(true) ; 

		} else if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML") {	
			//JasperFillManager.fillReportToFile(reportFile.getAbsolutePath(),parameters, new JRBeanArrayDataSource(PedidoBean.TraerPedidoBeans(pedidosParaReportes).toArray()));
							
			if(this.sTipoArchivoReporte=="HTML") {
				sDestFileName+=".html";
				JasperExportManager.exportReportToHtmlFile(jasperPrint,sDestFileName);
					
			} else if(this.sTipoArchivoReporte=="PDF") {
				sDestFileName+=".pdf";
				JasperExportManager.exportReportToPdfFile(jasperPrint,sDestFileName);
			} else {
				sDestFileName+=".xml";
				JasperExportManager.exportReportToXmlFile(jasperPrint,sDestFileName, false);
			}	
			
		} else if(this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {
				
			if(this.sTipoArchivoReporte=="WORD") {
				sDestFileName+=".rtf";
					
				JRRtfExporter exporter = new JRRtfExporter();
		
				exporter.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporter.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
		
				exporter.exportReport();
				
			} else	{
				sDestFileName+=".xls";
					
				JRXlsExporter exporterXls = new JRXlsExporter();
		
				exporterXls.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporterXls.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
				exporterXls.setParameter(JRXlsExporterParameter.IS_ONE_PAGE_PER_SHEET, Boolean.TRUE);
		
				exporterXls.exportReport();
			}
			
		} else if(this.sTipoArchivoReporte=="EXCEL2"||this.sTipoArchivoReporte=="EXCEL2_2") {
			//sDestFileName+=".xlsx";
			
			if(this.sTipoReporte.equals("NORMAL")) {
				this.generarExcelReportePedidos(sAccionBusqueda,sTipoArchivoReporte,pedidosParaReportes);
			
			} else if(this.sTipoReporte.equals("FORMULARIO")){
				this.generarExcelReporteVerticalPedidos(sAccionBusqueda,sTipoArchivoReporte,pedidosParaReportes,false);
			
			} else if(this.sTipoReporte.equals("DINAMICO")){
				
				if(this.sTipoReporteDinamico.equals("NORMAL")) {
					
					this.jButtonGenerarExcelReporteDinamicoPedidoActionPerformed(null);
					//this.generarExcelReportePedidos(sAccionBusqueda,sTipoArchivoReporte,pedidosParaReportes);
					
				
				} else if(this.sTipoReporteDinamico.equals("FORMULARIO")){
					this.generarExcelReporteVerticalPedidos(sAccionBusqueda,sTipoArchivoReporte,pedidosParaReportes,true);
				
				} else if(this.sTipoReporteDinamico.equals("RELACIONES")){
					this.generarExcelReporteRelacionesPedidos(sAccionBusqueda,sTipoArchivoReporte,pedidosParaReportes,true);
				}
				
			} else if(this.sTipoReporte.equals("RELACIONES")){
				this.generarExcelReporteRelacionesPedidos(sAccionBusqueda,sTipoArchivoReporte,pedidosParaReportes,false);
			}
		}
		
		if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML"||this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {				
			JOptionPane.showMessageDialog(this,"REPORTE "+sDestFileName+" GENERADO SATISFACTORIAMENTE","REPORTES ",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReportePedidos(String sAccionBusqueda,String sTipoArchivoReporte,List<Pedido> pedidosParaReportes) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"pedido";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("Pedidos");
         
        int iRow = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderPedido("NORMAL",row,workbook);
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux=null;
		
		int i=0;
		
      	for(Pedido pedido : pedidosParaReportes) {            
			row = sheet.createRow(iRow++);
			iCell = 0;
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				cellStyleDataAux=cellStyleData;
			}
			
			PedidoConstantesFunciones.generarExcelReporteDataPedido("NORMAL",row,workbook,pedido,cellStyleDataAux);
		
			
			/*
            Cell cell0 = row.createCell(0);
            cell0.setCellValue(country.getName());
            Cell cell1 = row.createCell(1);
            cell1.setCellValue(country.getShortCode());
			*/
			
			i++;
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.pedidoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Pedido",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteHeaderPedido(String sTipo,Row row,Workbook workbook) {
		
		PedidoConstantesFunciones.generarExcelReporteHeaderPedido(sTipo,row,workbook);
		
		/*
		Cell cell=null;
		int iCell=0;
		
		CellStyle cellStyle = workbook.createCellStyle();
		cellStyle.setFillBackgroundColor(IndexedColors.GREEN.getIndex());
		cellStyle.setFillPattern(CellStyle.ALIGN_FILL);
		*/
		
	}
	
	public void generarExcelReporteVerticalPedidos(String sAccionBusqueda,String sTipoArchivoReporte,List<Pedido> pedidosParaReportes,Boolean paraDinamico) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"pedido_vertical";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("Pedidos");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		CellStyle cellStyle = Funciones2.getStyleTitulo(workbook,"ZEBRA");;
		
		CellStyle cellStyleTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL_VERTICAL");
		
		
		for(Pedido pedido : pedidosParaReportes) {
			row = sheet.createRow(iRow++);
			iRowLast=iRow - 1;
			
			cell = row.createCell(0);
			cell.setCellValue(PedidoConstantesFunciones.getPedidoDescripcion(pedido));
			cell.setCellStyle(cellStyleTitulo);
			
			sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
	
			


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoConstantesFunciones.LABEL_IDEMPRESA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoConstantesFunciones.LABEL_IDEMPRESA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedido.getempresa_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoConstantesFunciones.LABEL_IDSUCURSAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoConstantesFunciones.LABEL_IDSUCURSAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedido.getsucursal_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoConstantesFunciones.LABEL_IDEJERCICIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoConstantesFunciones.LABEL_IDEJERCICIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedido.getejercicio_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoConstantesFunciones.LABEL_IDPERIODO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoConstantesFunciones.LABEL_IDPERIODO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedido.getperiodo_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoConstantesFunciones.LABEL_IDANIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoConstantesFunciones.LABEL_IDANIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedido.getanio_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoConstantesFunciones.LABEL_IDMES))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoConstantesFunciones.LABEL_IDMES);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedido.getmes_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoConstantesFunciones.LABEL_IDUSUARIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoConstantesFunciones.LABEL_IDUSUARIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedido.getusuario_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoConstantesFunciones.LABEL_NUMERO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoConstantesFunciones.LABEL_NUMERO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedido.getnumero());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoConstantesFunciones.LABEL_PREIMPRESO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoConstantesFunciones.LABEL_PREIMPRESO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedido.getpre_impreso());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoConstantesFunciones.LABEL_FECHAEMISION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoConstantesFunciones.LABEL_FECHAEMISION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedido.getfecha_emision());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoConstantesFunciones.LABEL_FECHAENTREGA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoConstantesFunciones.LABEL_FECHAENTREGA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedido.getfecha_entrega());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoConstantesFunciones.LABEL_IDMONEDA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoConstantesFunciones.LABEL_IDMONEDA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedido.getmoneda_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoConstantesFunciones.LABEL_COTIZACION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoConstantesFunciones.LABEL_COTIZACION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedido.getcotizacion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoConstantesFunciones.LABEL_IDEMPLEADO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoConstantesFunciones.LABEL_IDEMPLEADO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedido.getempleado_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoConstantesFunciones.LABEL_IDTIPOPRECIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoConstantesFunciones.LABEL_IDTIPOPRECIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedido.gettipoprecio_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoConstantesFunciones.LABEL_IDFORMATO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoConstantesFunciones.LABEL_IDFORMATO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedido.getformato_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoConstantesFunciones.LABEL_DIRECCION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoConstantesFunciones.LABEL_DIRECCION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedido.getdireccion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoConstantesFunciones.LABEL_IDCLIENTE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoConstantesFunciones.LABEL_IDCLIENTE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedido.getcliente_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoConstantesFunciones.LABEL_TELEFONO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoConstantesFunciones.LABEL_TELEFONO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedido.gettelefono());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoConstantesFunciones.LABEL_RUC))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoConstantesFunciones.LABEL_RUC);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedido.getruc());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoConstantesFunciones.LABEL_IDSUBCLIENTE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoConstantesFunciones.LABEL_IDSUBCLIENTE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedido.getsubcliente_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoConstantesFunciones.LABEL_IDVENDEDOR))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoConstantesFunciones.LABEL_IDVENDEDOR);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedido.getvendedor_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoConstantesFunciones.LABEL_IDCONSULTOR))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoConstantesFunciones.LABEL_IDCONSULTOR);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedido.getconsultor_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoConstantesFunciones.LABEL_ORDEN))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoConstantesFunciones.LABEL_ORDEN);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedido.getorden());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoConstantesFunciones.LABEL_IDRESPONSABLE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoConstantesFunciones.LABEL_IDRESPONSABLE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedido.getresponsable_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoConstantesFunciones.LABEL_IDESTADOPEDIDO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoConstantesFunciones.LABEL_IDESTADOPEDIDO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedido.getestadopedido_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoConstantesFunciones.LABEL_IDTRANSPORTE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoConstantesFunciones.LABEL_IDTRANSPORTE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedido.gettransporte_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoConstantesFunciones.LABEL_IDRUTATRANSPORTE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoConstantesFunciones.LABEL_IDRUTATRANSPORTE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedido.getrutatransporte_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoConstantesFunciones.LABEL_VALORRUTA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoConstantesFunciones.LABEL_VALORRUTA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedido.getvalor_ruta());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoConstantesFunciones.LABEL_IDTIPOLLAMADA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoConstantesFunciones.LABEL_IDTIPOLLAMADA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedido.gettipollamada_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoConstantesFunciones.LABEL_IDTRANSPORTISTA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoConstantesFunciones.LABEL_IDTRANSPORTISTA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedido.gettransportista_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoConstantesFunciones.LABEL_HORAINICIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoConstantesFunciones.LABEL_HORAINICIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedido.gethora_inicio());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoConstantesFunciones.LABEL_HORAFIN))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoConstantesFunciones.LABEL_HORAFIN);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedido.gethora_fin());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoConstantesFunciones.LABEL_DESCRIPCION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoConstantesFunciones.LABEL_DESCRIPCION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedido.getdescripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoConstantesFunciones.LABEL_CUPO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoConstantesFunciones.LABEL_CUPO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedido.getcupo());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoConstantesFunciones.LABEL_SALDO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoConstantesFunciones.LABEL_SALDO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedido.getsaldo());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoConstantesFunciones.LABEL_PEDIDOS))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoConstantesFunciones.LABEL_PEDIDOS);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedido.getpedidos());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoConstantesFunciones.LABEL_DOCUMENTOS))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoConstantesFunciones.LABEL_DOCUMENTOS);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedido.getdocumentos());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoConstantesFunciones.LABEL_DISPONIBLE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoConstantesFunciones.LABEL_DISPONIBLE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedido.getdisponible());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoConstantesFunciones.LABEL_DESCUENTOPORCENTAJE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoConstantesFunciones.LABEL_DESCUENTOPORCENTAJE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedido.getdescuento_porcentaje());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoConstantesFunciones.LABEL_TOTALCONIVA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoConstantesFunciones.LABEL_TOTALCONIVA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedido.gettotal_con_iva());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoConstantesFunciones.LABEL_SUMAN))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoConstantesFunciones.LABEL_SUMAN);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedido.getsuman());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoConstantesFunciones.LABEL_DESCUENTOVALOR))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoConstantesFunciones.LABEL_DESCUENTOVALOR);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedido.getdescuento_valor());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoConstantesFunciones.LABEL_TOTALSINIVA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoConstantesFunciones.LABEL_TOTALSINIVA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedido.gettotal_sin_iva());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoConstantesFunciones.LABEL_DESCUENTOTOTAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoConstantesFunciones.LABEL_DESCUENTOTOTAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedido.getdescuento_total());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoConstantesFunciones.LABEL_FLETE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoConstantesFunciones.LABEL_FLETE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedido.getflete());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoConstantesFunciones.LABEL_TOTAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoConstantesFunciones.LABEL_TOTAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedido.gettotal());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoConstantesFunciones.LABEL_SUBTOTAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoConstantesFunciones.LABEL_SUBTOTAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedido.getsubtotal());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoConstantesFunciones.LABEL_OTRO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoConstantesFunciones.LABEL_OTRO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedido.getotro());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoConstantesFunciones.LABEL_ULTIMOCOSTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoConstantesFunciones.LABEL_ULTIMOCOSTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedido.getultimo_costo());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoConstantesFunciones.LABEL_IVA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoConstantesFunciones.LABEL_IVA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedido.getiva());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoConstantesFunciones.LABEL_FINANCIAMIENTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoConstantesFunciones.LABEL_FINANCIAMIENTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedido.getfinanciamiento());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoConstantesFunciones.LABEL_MARGENUTILIDAD))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoConstantesFunciones.LABEL_MARGENUTILIDAD);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedido.getmargen_utilidad());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoConstantesFunciones.LABEL_OTROSVALORES))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoConstantesFunciones.LABEL_OTROSVALORES);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedido.getotros_valores());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoConstantesFunciones.LABEL_ANTICIPO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoConstantesFunciones.LABEL_ANTICIPO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedido.getanticipo());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoConstantesFunciones.LABEL_IDTIPOCAMBIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoConstantesFunciones.LABEL_IDTIPOCAMBIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedido.gettipocambio_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoConstantesFunciones.LABEL_IDCENTROCOSTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoConstantesFunciones.LABEL_IDCENTROCOSTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedido.getcentrocosto_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoConstantesFunciones.LABEL_IDZONA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoConstantesFunciones.LABEL_IDZONA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedido.getzona_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoConstantesFunciones.LABEL_FECHA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoConstantesFunciones.LABEL_FECHA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedido.getfecha());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoConstantesFunciones.LABEL_NUMEROFUE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoConstantesFunciones.LABEL_NUMEROFUE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedido.getnumero_fue());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoConstantesFunciones.LABEL_FECHASERVIDOR))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoConstantesFunciones.LABEL_FECHASERVIDOR);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedido.getfecha_servidor());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoConstantesFunciones.LABEL_MONTORETENCION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoConstantesFunciones.LABEL_MONTORETENCION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedido.getmonto_retencion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoConstantesFunciones.LABEL_ICE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoConstantesFunciones.LABEL_ICE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedido.getice());


			}						
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.pedidoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Pedido",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteRelacionesPedidos(String sAccionBusqueda,String sTipoArchivoReporte,List<Pedido> pedidosParaReportes,Boolean paraDinamico) throws Exception {
		
		ArrayList<Classe> classes=new ArrayList<Classe>();
		List<Pedido> pedidosRespaldo=null;
		
		classes=PedidoConstantesFunciones.getClassesRelationshipsOfPedido(new ArrayList<Classe>(),DeepLoadType.NONE,false);
					
		this.datosDeep=new DatosDeep();
		
		this.datosDeep.setIsDeep(false);
		this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
		this.datosDeep.setClases(classes);
			
		this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
		this.datosCliente.setIsConDeep(true);	
		this.datosCliente.setIsConExportar(false);
		
						
		this.pedidoLogic.setDatosCliente(this.datosCliente);
		this.pedidoLogic.setDatosDeep(this.datosDeep);
		this.pedidoLogic.setIsConDeep(true);
		
		pedidosRespaldo=this.pedidoLogic.getPedidos();
		
		this.pedidoLogic.setPedidos(pedidosParaReportes);	
		this.pedidoLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
		
		pedidosParaReportes=this.pedidoLogic.getPedidos();
		this.pedidoLogic.setPedidos(pedidosRespaldo);
		
		
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"pedido_relacion";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("Pedidos");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderPedido("NORMAL",row,workbook);
		
		int i=0;
		int i2=0;
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL");
		CellStyle cellStyleDataZebra = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux =null;
		CellStyle cellStyleDataAuxHijo =null;
		
		for(Pedido pedido : pedidosParaReportes) {			
			if(i!=0) {
				row = sheet.createRow(iRow++);				
				this.generarExcelReporteHeaderPedido("NORMAL",row,workbook);
			}
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				//cellStyleDataAux=cellStyleData;
			}
			
			row = sheet.createRow(iRow++);						
			PedidoConstantesFunciones.generarExcelReporteDataPedido("NORMAL",row,workbook,pedido,cellStyleDataAux);
		
			
			


				//DetallePedido
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(DetallePedidoConstantesFunciones.SCLASSWEBTITULO))) {

				if(pedido.getDetallePedidos()!=null && pedido.getDetallePedidos().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(DetallePedidoConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					DetallePedidoConstantesFunciones.generarExcelReporteHeaderDetallePedido("RELACIONADO",row,workbook);
				}

				if(pedido.getDetallePedidos()!=null) {
					i2=0;
					for(DetallePedido detallepedido : pedido.getDetallePedidos()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						DetallePedidoConstantesFunciones.generarExcelReporteDataDetallePedido("RELACIONADO",row,workbook,detallepedido,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}
			
			i++;
        }
        
		/*
		row = sheet.createRow(iRow++);
		iRowLast=iRow - 1;
			
		cell = row.createCell(0);
		cell.setCellValue(PedidoConstantesFunciones.getPedidoDescripcion(pedido));
		cell.setCellStyle(cellStyleTitulo);
			
		sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
		*/
		
			
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.pedidoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Pedido",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	
	public Boolean existeColumnaReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoPedido.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoPedido.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public Boolean existeRelacionReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoPedido.getjListRelacionesSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoPedido.getjListRelacionesSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public void startProcessPedido() throws Exception {		
		this.startProcessPedido(true);
	}
	
	public void startProcessPedido(Boolean conSplash) throws Exception {		
		//FuncionesSwing.enableDisablePanels(false,this.jTabbedPaneBusquedasPedido ,this.jPanelParametrosReportesPedido, this.jScrollPanelDatosPedido,this.jPanelPaginacionPedido, this.jScrollPanelDatosEdicionPedido, this.jPanelAccionesPedido,this.jPanelAccionesFormularioPedido,this.jmenuBarPedido,this.jmenuBarDetallePedido,this.jTtoolBarPedido,this.jTtoolBarDetallePedido);		
		
		final JTabbedPane jTabbedPaneBusquedasPedido=this.jTabbedPaneBusquedasPedido; 
		
		final JPanel jPanelParametrosReportesPedido=this.jPanelParametrosReportesPedido;
		//final JScrollPane jScrollPanelDatosPedido=this.jScrollPanelDatosPedido;
		final JTable jTableDatosPedido=this.jTableDatosPedido;		
		final JPanel jPanelPaginacionPedido=this.jPanelPaginacionPedido;
		//final JScrollPane jScrollPanelDatosEdicionPedido=this.jScrollPanelDatosEdicionPedido;
		final JPanel jPanelAccionesPedido=this.jPanelAccionesPedido;
		
		JPanel jPanelCamposAuxiliarPedido=new JPanelMe();
		JPanel jPanelAccionesFormularioAuxiliarPedido=new JPanelMe();
		
		if(this.jInternalFrameDetalleFormPedido!=null) {
			jPanelCamposAuxiliarPedido=this.jInternalFrameDetalleFormPedido.jPanelCamposPedido;
			jPanelAccionesFormularioAuxiliarPedido=this.jInternalFrameDetalleFormPedido.jPanelAccionesFormularioPedido;
		}
		
		final JPanel jPanelCamposPedido=jPanelCamposAuxiliarPedido;
		final JPanel jPanelAccionesFormularioPedido=jPanelAccionesFormularioAuxiliarPedido;
		
		
		final JMenuBar jmenuBarPedido=this.jmenuBarPedido;
		final JToolBar jTtoolBarPedido=this.jTtoolBarPedido;		
		
		
		JMenuBar jmenuBarDetalleAuxiliarPedido=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarPedido=new JToolBar();		
		
		if(this.jInternalFrameDetalleFormPedido!=null) {
			jmenuBarDetalleAuxiliarPedido=this.jInternalFrameDetalleFormPedido.jmenuBarDetallePedido;
			jTtoolBarDetalleAuxiliarPedido=this.jInternalFrameDetalleFormPedido.jTtoolBarDetallePedido;
		}
		
		final JMenuBar jmenuBarDetallePedido=jmenuBarDetalleAuxiliarPedido;
		final JToolBar jTtoolBarDetallePedido=jTtoolBarDetalleAuxiliarPedido;		
		
		
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("START");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasPedido;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesPedido;
			processRunnable.jTableDatos=jTableDatosPedido;
			processRunnable.jPanelCampos=jPanelCamposPedido;
			processRunnable.jPanelPaginacion=jPanelPaginacionPedido;
			processRunnable.jPanelAcciones=jPanelAccionesPedido;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioPedido;
			
			
			processRunnable.jmenuBar=jmenuBarPedido;
			processRunnable.jmenuBarDetalle=jmenuBarDetallePedido;
			processRunnable.jTtoolBar=jTtoolBarPedido;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetallePedido;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasPedido ,jPanelParametrosReportesPedido,jTableDatosPedido, /*jScrollPanelDatosPedido,*/jPanelCamposPedido,jPanelPaginacionPedido, /*jScrollPanelDatosEdicionPedido,*/ jPanelAccionesPedido,jPanelAccionesFormularioPedido,jmenuBarPedido,jmenuBarDetallePedido,jTtoolBarPedido,jTtoolBarDetallePedido);
		
			startProcess();//this.
		}
						
		/*
		if(conSplash) {
			SwingUtilities.invokeLater(new Runnable() {
			      public void run() {
			    	  try {
							FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasPedido ,jPanelParametrosReportesPedido, jScrollPanelDatosPedido,jPanelPaginacionPedido, jScrollPanelDatosEdicionPedido, jPanelAccionesPedido,jPanelAccionesFormularioPedido,jmenuBarPedido,jmenuBarDetallePedido,jTtoolBarPedido,jTtoolBarDetallePedido);
						
							startProcess();//this.
							
						} catch (Exception e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
			      }
			});
		}
		*/
	}
	
	public void finishProcessPedido() {// throws Exception 
		this.finishProcessPedido(true);
	}
	
	public void finishProcessPedido(Boolean conSplash) {// throws Exception 
		//FuncionesSwing.enableDisablePanels(true,this.jTabbedPaneBusquedasPedido ,this.jPanelParametrosReportesPedido, this.jScrollPanelDatosPedido,this.jPanelPaginacionPedido, this.jScrollPanelDatosEdicionPedido, this.jPanelAccionesPedido,this.jPanelAccionesFormularioPedido,this.jmenuBarPedido,this.jmenuBarDetallePedido,this.jTtoolBarPedido,this.jTtoolBarDetallePedido);		
		
		final JTabbedPane jTabbedPaneBusquedasPedido=this.jTabbedPaneBusquedasPedido; 
		
		final JPanel jPanelParametrosReportesPedido=this.jPanelParametrosReportesPedido;
		//final JScrollPane jScrollPanelDatosPedido=this.jScrollPanelDatosPedido;
		final JTable jTableDatosPedido=this.jTableDatosPedido;		
		final JPanel jPanelPaginacionPedido=this.jPanelPaginacionPedido;
		//final JScrollPane jScrollPanelDatosEdicionPedido=this.jScrollPanelDatosEdicionPedido;
		final JPanel jPanelAccionesPedido=this.jPanelAccionesPedido;
		
		JPanel jPanelCamposAuxiliarPedido=new JPanel();
		JPanel jPanelAccionesFormularioAuxiliarPedido=new JPanel();
		
		if(this.jInternalFrameDetalleFormPedido!=null) {
			jPanelCamposAuxiliarPedido=this.jInternalFrameDetalleFormPedido.jPanelCamposPedido;
			jPanelAccionesFormularioAuxiliarPedido=this.jInternalFrameDetalleFormPedido.jPanelAccionesFormularioPedido;
		}
		
		final JPanel jPanelCamposPedido=jPanelCamposAuxiliarPedido;
		final JPanel jPanelAccionesFormularioPedido=jPanelAccionesFormularioAuxiliarPedido;
		
		
		final JMenuBar jmenuBarPedido=this.jmenuBarPedido;		
		final JToolBar jTtoolBarPedido=this.jTtoolBarPedido;
				
		JMenuBar jmenuBarDetalleAuxiliarPedido=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarPedido=new JToolBar();
		
		if(this.jInternalFrameDetalleFormPedido!=null) {
			jmenuBarDetalleAuxiliarPedido=this.jInternalFrameDetalleFormPedido.jmenuBarDetallePedido;
			jTtoolBarDetalleAuxiliarPedido=this.jInternalFrameDetalleFormPedido.jTtoolBarDetallePedido;		
		}
		
		final JMenuBar jmenuBarDetallePedido=jmenuBarDetalleAuxiliarPedido;
		final JToolBar jTtoolBarDetallePedido=jTtoolBarDetalleAuxiliarPedido;
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("END");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasPedido;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesPedido;
			processRunnable.jTableDatos=jTableDatosPedido;
			processRunnable.jPanelCampos=jPanelCamposPedido;
			processRunnable.jPanelPaginacion=jPanelPaginacionPedido;
			processRunnable.jPanelAcciones=jPanelAccionesPedido;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioPedido;
			
			
			processRunnable.jmenuBar=jmenuBarPedido;
			processRunnable.jmenuBarDetalle=jmenuBarDetallePedido;
			processRunnable.jTtoolBar=jTtoolBarPedido;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetallePedido;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			if(conSplash) {
				SwingUtilities.invokeLater(new RunnableProceso(true,this,jTabbedPaneBusquedasPedido ,jPanelParametrosReportesPedido, jTableDatosPedido,/*jScrollPanelDatosPedido,*/jPanelCamposPedido,jPanelPaginacionPedido, /*jScrollPanelDatosEdicionPedido,*/ jPanelAccionesPedido,jPanelAccionesFormularioPedido,jmenuBarPedido,jmenuBarDetallePedido,jTtoolBarPedido,jTtoolBarDetallePedido));
			}
		}						
	}
	
	/*
	public void habilitarDeshabilitarControlesPedido(Boolean esHabilitar,Boolean conDetalle) {
		this.habilitarDeshabilitarToolBarPedido(esHabilitar,conDetalle);
		this.habilitarDeshabilitarMenuPedido(esHabilitar,conDetalle);
	}
	
	public void habilitarDeshabilitarToolBarPedido(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jTtoolBarPedido,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jTtoolBarDetallePedido,esHabilitar,1,1);
		}
	}
	
	public void habilitarDeshabilitarMenuPedido(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jmenuBarPedido,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jmenuBarDetallePedido,esHabilitar,1,1);
		}
	}
	*/
	
	
	
	public void procesarBusqueda(String sAccionBusqueda) throws Exception {		
		String  finalQueryPaginacion=this.pedidoConstantesFunciones.getsFinalQueryPedido();
		String  finalQueryPaginacionTodos=this.pedidoConstantesFunciones.getsFinalQueryPedido();
		
		Boolean esBusqueda=false;
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!sAccionBusqueda.equals("Todos"))	{
			esBusqueda=true;
		}
		
		this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
		this.arrDatoGeneralNo= new  ArrayList<String>();
		
		ArrayList<String> arrColumnasGlobalesNo=PedidoConstantesFunciones.getArrayColumnasGlobalesNoPedido(this.arrDatoGeneral);
		ArrayList<String> arrColumnasGlobales=PedidoConstantesFunciones.getArrayColumnasGlobalesPedido(this.arrDatoGeneral,arrColumnasGlobalesNo);
		
			
		String  finalQueryGlobal="";
		
		finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,!esBusqueda,esBusqueda,arrColumnasGlobales,PedidoConstantesFunciones.TABLENAME);
		
		String sOrderBy="";
		
		
		sOrderBy=Funciones2.getFinalQueryOrderBy(this.arrOrderBy);
		
		
		if(!sOrderBy.equals("")) {			
			finalQueryPaginacion=sOrderBy;
			finalQueryPaginacionTodos=sOrderBy;
		}
		
		
		//INICIALIZA ELIMINADOS
		this.pedidosEliminados= new ArrayList<Pedido>();
		
		if(!this.isEntroOnLoad) {
			this.onLoad();
		}/* else {
			this.isEntroOnLoad=false;
		}*/
		
		
		
				
		try	{		
			
			//this.startProcessPedido();
		
				///*PedidoSessionBean*/this.pedidoSessionBean=new PedidoSessionBean();
			
			if(this.pedidoSessionBean==null) {
				this.pedidoSessionBean=new PedidoSessionBean();
			}
			
			//ACTUALIZA EL TAMANIO DE PAGINACION DESDE EL COMBO
			if(this.sTipoPaginacion!=null && !this.sTipoPaginacion.equals("")) {
				if(!this.sTipoPaginacion.equals("TODOS")) {
					this.iNumeroPaginacion=Integer.parseInt(this.sTipoPaginacion);
				} else {
					this.iNumeroPaginacion=-1;
					this.iNumeroPaginacionPagina=-1;
				}
			} else {
				if(this.iNumeroPaginacion==null || (this.iNumeroPaginacion!=null && this.iNumeroPaginacion<=0)) {
					this.iNumeroPaginacion=PedidoConstantesFunciones.INUMEROPAGINACION;
				}
			}
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);
			
			this.cargarDatosCliente();
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			classes=PedidoConstantesFunciones.getClassesForeignKeysOfPedido(new ArrayList<Classe>(),DeepLoadType.NONE);
			
		
			this.datosDeep=new DatosDeep();
			this.datosDeep.setIsDeep(false);
			this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
			this.datosDeep.setClases(classes);
			
			this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
			this.datosCliente.setIsConDeep(true);
			
			if(false) {//this.conExportar
				this.datosCliente.setIsConExportar(true);
				this.datosCliente.setDatosExportarParametros(Funciones2.getTipoExportar(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getcon_exportar_cabecera(),Funciones2.getTipoDelimiter(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getpath_exportar()+"/pedido."+Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario));
			} else {
				this.datosCliente.setIsConExportar(false);
			}
			
			pedidosAux= new ArrayList<Pedido>();
			
				
			pedidoLogic.setDatosCliente(this.datosCliente);
			pedidoLogic.setDatosDeep(this.datosDeep);
			pedidoLogic.setIsConDeep(true);
			
			
			pedidoLogic.getPedidoDataAccess().setIsForForeingsKeysDataRelationships(true);
			
			if(sAccionBusqueda.equals("Todos") || sAccionBusqueda.equals("Query"))	{	
				if(sAccionBusqueda.equals("Todos")) {
					//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
					//this.sFinalQueryGeneral="";
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacionTodos );
					
					pedidoLogic.getTodosPedidos(finalQueryGlobal,pagination);
					
					//pedidoLogic.getTodosPedidosWithConnection(finalQueryGlobal,pagination);										
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
				
				if(pedidoLogic.getPedidos()==null|| pedidoLogic.getPedidos().size()==0)	{
					
				
				}
				
				if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(-1);
						this.pagination.setiMaxResults(-1);
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							pedidosAux= new ArrayList<Pedido>();
							pedidosAux.addAll(pedidoLogic.getPedidos());						
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidosAux= new ArrayList<Pedido>();
							pedidosAux.addAll(pedidos);
						}
						//ARCHITECTURE
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							pedidoLogic.getTodosPedidos(finalQueryGlobal+"",this.pagination);												
							
							//pedidoLogic.getTodosPedidosWithConnection(finalQueryGlobal+"",this.pagination);												
						} else if(Constantes.ISUSAEJBREMOTE) {
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
					}
					
					this.generarReportePedidos("Todos",pedidoLogic.getPedidos() );
					
					if(false) {//isMostrarTodosResultadosReporte						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							pedidoLogic.setPedidos(new ArrayList<Pedido>());					
							pedidoLogic.getPedidos().addAll(pedidosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidos=new ArrayList<Pedido>();
							pedidos.addAll(pedidosAux);
						}
						//ARCHITECTURE
						
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);														
					}
				}
			}
			else if(sAccionBusqueda.equals("PorId")) {
				Long idPedido=0L;
				
				if(this.idActual!=null && this.idActual!=0L) {
					idPedido=this.idActual;
				
				} else if(this.idPedidoActual!=null && this.idPedidoActual!=0L) {
					idPedido=idPedidoActual;
				}
				
					
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndicePorId(idPedido);
				
				this.pedidos=new ArrayList<Pedido>();
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {					
					pedidoLogic.getEntity(idPedido);
					
					//pedidoLogic.getEntityWithConnection(idPedido);
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
								
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidoLogic.setPedidos(new ArrayList<Pedido>());
					pedidoLogic.getPedidos().add(pedidoLogic.getPedido());
				
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pedidos=new ArrayList<Pedido>();
					this.pedidos.add(pedido);
				}
				
				if(pedidoLogic.getPedido()==null)	{
					
				
				}			
			}
			
		
			else if(sAccionBusqueda.equals("FK_IdCentroCosto")) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdCentroCosto(id_centro_costoFK_IdCentroCosto);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					pedidoLogic.getPedidosFK_IdCentroCosto(finalQueryGlobal,pagination,id_centro_costoFK_IdCentroCosto);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdCentroCosto(id_centro_costoFK_IdCentroCosto);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdCentroCosto(id_centro_costoFK_IdCentroCosto);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=pedidoLogic.getPedidos()==null||pedidoLogic.getPedidos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=pedidos==null|| pedidos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidosAux=new ArrayList<Pedido>();
						pedidosAux.addAll(pedidoLogic.getPedidos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidosAux=new ArrayList<Pedido>();
							pedidosAux.addAll(pedidos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							pedidoLogic.getPedidosFK_IdCentroCosto(finalQueryGlobal,pagination,id_centro_costoFK_IdCentroCosto);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdCentroCosto(id_centro_costoFK_IdCentroCosto);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdCentroCosto(id_centro_costoFK_IdCentroCosto);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePedidos("FK_IdCentroCosto",pedidoLogic.getPedidos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePedidos("FK_IdCentroCosto",pedidos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidoLogic.setPedidos(new ArrayList<Pedido>());
						pedidoLogic.getPedidos().addAll(pedidosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidos=new ArrayList<Pedido>();
							pedidos.addAll(pedidosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdCliente")) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					pedidoLogic.getPedidosFK_IdCliente(finalQueryGlobal,pagination,id_clienteFK_IdCliente);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=pedidoLogic.getPedidos()==null||pedidoLogic.getPedidos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=pedidos==null|| pedidos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidosAux=new ArrayList<Pedido>();
						pedidosAux.addAll(pedidoLogic.getPedidos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidosAux=new ArrayList<Pedido>();
							pedidosAux.addAll(pedidos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							pedidoLogic.getPedidosFK_IdCliente(finalQueryGlobal,pagination,id_clienteFK_IdCliente);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePedidos("FK_IdCliente",pedidoLogic.getPedidos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePedidos("FK_IdCliente",pedidos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidoLogic.setPedidos(new ArrayList<Pedido>());
						pedidoLogic.getPedidos().addAll(pedidosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidos=new ArrayList<Pedido>();
							pedidos.addAll(pedidosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdConsultor")) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdConsultor(id_consultorFK_IdConsultor);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					pedidoLogic.getPedidosFK_IdConsultor(finalQueryGlobal,pagination,id_consultorFK_IdConsultor);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdConsultor(id_consultorFK_IdConsultor);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdConsultor(id_consultorFK_IdConsultor);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=pedidoLogic.getPedidos()==null||pedidoLogic.getPedidos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=pedidos==null|| pedidos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidosAux=new ArrayList<Pedido>();
						pedidosAux.addAll(pedidoLogic.getPedidos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidosAux=new ArrayList<Pedido>();
							pedidosAux.addAll(pedidos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							pedidoLogic.getPedidosFK_IdConsultor(finalQueryGlobal,pagination,id_consultorFK_IdConsultor);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdConsultor(id_consultorFK_IdConsultor);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdConsultor(id_consultorFK_IdConsultor);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePedidos("FK_IdConsultor",pedidoLogic.getPedidos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePedidos("FK_IdConsultor",pedidos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidoLogic.setPedidos(new ArrayList<Pedido>());
						pedidoLogic.getPedidos().addAll(pedidosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidos=new ArrayList<Pedido>();
							pedidos.addAll(pedidosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEjercicio")) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					pedidoLogic.getPedidosFK_IdEjercicio(finalQueryGlobal,pagination,id_ejercicioFK_IdEjercicio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=pedidoLogic.getPedidos()==null||pedidoLogic.getPedidos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=pedidos==null|| pedidos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidosAux=new ArrayList<Pedido>();
						pedidosAux.addAll(pedidoLogic.getPedidos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidosAux=new ArrayList<Pedido>();
							pedidosAux.addAll(pedidos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							pedidoLogic.getPedidosFK_IdEjercicio(finalQueryGlobal,pagination,id_ejercicioFK_IdEjercicio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePedidos("FK_IdEjercicio",pedidoLogic.getPedidos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePedidos("FK_IdEjercicio",pedidos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidoLogic.setPedidos(new ArrayList<Pedido>());
						pedidoLogic.getPedidos().addAll(pedidosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidos=new ArrayList<Pedido>();
							pedidos.addAll(pedidosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEmpleado")) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdEmpleado(id_empleadoFK_IdEmpleado);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					pedidoLogic.getPedidosFK_IdEmpleado(finalQueryGlobal,pagination,id_empleadoFK_IdEmpleado);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdEmpleado(id_empleadoFK_IdEmpleado);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdEmpleado(id_empleadoFK_IdEmpleado);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=pedidoLogic.getPedidos()==null||pedidoLogic.getPedidos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=pedidos==null|| pedidos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidosAux=new ArrayList<Pedido>();
						pedidosAux.addAll(pedidoLogic.getPedidos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidosAux=new ArrayList<Pedido>();
							pedidosAux.addAll(pedidos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							pedidoLogic.getPedidosFK_IdEmpleado(finalQueryGlobal,pagination,id_empleadoFK_IdEmpleado);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdEmpleado(id_empleadoFK_IdEmpleado);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdEmpleado(id_empleadoFK_IdEmpleado);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePedidos("FK_IdEmpleado",pedidoLogic.getPedidos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePedidos("FK_IdEmpleado",pedidos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidoLogic.setPedidos(new ArrayList<Pedido>());
						pedidoLogic.getPedidos().addAll(pedidosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidos=new ArrayList<Pedido>();
							pedidos.addAll(pedidosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEmpresa")) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					pedidoLogic.getPedidosFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=pedidoLogic.getPedidos()==null||pedidoLogic.getPedidos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=pedidos==null|| pedidos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidosAux=new ArrayList<Pedido>();
						pedidosAux.addAll(pedidoLogic.getPedidos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidosAux=new ArrayList<Pedido>();
							pedidosAux.addAll(pedidos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							pedidoLogic.getPedidosFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePedidos("FK_IdEmpresa",pedidoLogic.getPedidos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePedidos("FK_IdEmpresa",pedidos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidoLogic.setPedidos(new ArrayList<Pedido>());
						pedidoLogic.getPedidos().addAll(pedidosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidos=new ArrayList<Pedido>();
							pedidos.addAll(pedidosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEstadoPedido")) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdEstadoPedido(id_estado_pedidoFK_IdEstadoPedido);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					pedidoLogic.getPedidosFK_IdEstadoPedido(finalQueryGlobal,pagination,id_estado_pedidoFK_IdEstadoPedido);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdEstadoPedido(id_estado_pedidoFK_IdEstadoPedido);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdEstadoPedido(id_estado_pedidoFK_IdEstadoPedido);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=pedidoLogic.getPedidos()==null||pedidoLogic.getPedidos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=pedidos==null|| pedidos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidosAux=new ArrayList<Pedido>();
						pedidosAux.addAll(pedidoLogic.getPedidos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidosAux=new ArrayList<Pedido>();
							pedidosAux.addAll(pedidos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							pedidoLogic.getPedidosFK_IdEstadoPedido(finalQueryGlobal,pagination,id_estado_pedidoFK_IdEstadoPedido);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdEstadoPedido(id_estado_pedidoFK_IdEstadoPedido);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdEstadoPedido(id_estado_pedidoFK_IdEstadoPedido);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePedidos("FK_IdEstadoPedido",pedidoLogic.getPedidos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePedidos("FK_IdEstadoPedido",pedidos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidoLogic.setPedidos(new ArrayList<Pedido>());
						pedidoLogic.getPedidos().addAll(pedidosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidos=new ArrayList<Pedido>();
							pedidos.addAll(pedidosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdFormato")) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdFormato(id_formatoFK_IdFormato);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					pedidoLogic.getPedidosFK_IdFormato(finalQueryGlobal,pagination,id_formatoFK_IdFormato);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdFormato(id_formatoFK_IdFormato);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdFormato(id_formatoFK_IdFormato);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=pedidoLogic.getPedidos()==null||pedidoLogic.getPedidos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=pedidos==null|| pedidos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidosAux=new ArrayList<Pedido>();
						pedidosAux.addAll(pedidoLogic.getPedidos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidosAux=new ArrayList<Pedido>();
							pedidosAux.addAll(pedidos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							pedidoLogic.getPedidosFK_IdFormato(finalQueryGlobal,pagination,id_formatoFK_IdFormato);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdFormato(id_formatoFK_IdFormato);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdFormato(id_formatoFK_IdFormato);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePedidos("FK_IdFormato",pedidoLogic.getPedidos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePedidos("FK_IdFormato",pedidos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidoLogic.setPedidos(new ArrayList<Pedido>());
						pedidoLogic.getPedidos().addAll(pedidosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidos=new ArrayList<Pedido>();
							pedidos.addAll(pedidosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdMoneda")) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdMoneda(id_monedaFK_IdMoneda);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					pedidoLogic.getPedidosFK_IdMoneda(finalQueryGlobal,pagination,id_monedaFK_IdMoneda);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdMoneda(id_monedaFK_IdMoneda);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdMoneda(id_monedaFK_IdMoneda);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=pedidoLogic.getPedidos()==null||pedidoLogic.getPedidos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=pedidos==null|| pedidos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidosAux=new ArrayList<Pedido>();
						pedidosAux.addAll(pedidoLogic.getPedidos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidosAux=new ArrayList<Pedido>();
							pedidosAux.addAll(pedidos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							pedidoLogic.getPedidosFK_IdMoneda(finalQueryGlobal,pagination,id_monedaFK_IdMoneda);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdMoneda(id_monedaFK_IdMoneda);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdMoneda(id_monedaFK_IdMoneda);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePedidos("FK_IdMoneda",pedidoLogic.getPedidos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePedidos("FK_IdMoneda",pedidos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidoLogic.setPedidos(new ArrayList<Pedido>());
						pedidoLogic.getPedidos().addAll(pedidosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidos=new ArrayList<Pedido>();
							pedidos.addAll(pedidosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdPeriodo")) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					pedidoLogic.getPedidosFK_IdPeriodo(finalQueryGlobal,pagination,id_periodoFK_IdPeriodo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=pedidoLogic.getPedidos()==null||pedidoLogic.getPedidos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=pedidos==null|| pedidos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidosAux=new ArrayList<Pedido>();
						pedidosAux.addAll(pedidoLogic.getPedidos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidosAux=new ArrayList<Pedido>();
							pedidosAux.addAll(pedidos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							pedidoLogic.getPedidosFK_IdPeriodo(finalQueryGlobal,pagination,id_periodoFK_IdPeriodo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePedidos("FK_IdPeriodo",pedidoLogic.getPedidos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePedidos("FK_IdPeriodo",pedidos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidoLogic.setPedidos(new ArrayList<Pedido>());
						pedidoLogic.getPedidos().addAll(pedidosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidos=new ArrayList<Pedido>();
							pedidos.addAll(pedidosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdResponsable")) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdResponsable(id_responsableFK_IdResponsable);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					pedidoLogic.getPedidosFK_IdResponsable(finalQueryGlobal,pagination,id_responsableFK_IdResponsable);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdResponsable(id_responsableFK_IdResponsable);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdResponsable(id_responsableFK_IdResponsable);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=pedidoLogic.getPedidos()==null||pedidoLogic.getPedidos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=pedidos==null|| pedidos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidosAux=new ArrayList<Pedido>();
						pedidosAux.addAll(pedidoLogic.getPedidos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidosAux=new ArrayList<Pedido>();
							pedidosAux.addAll(pedidos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							pedidoLogic.getPedidosFK_IdResponsable(finalQueryGlobal,pagination,id_responsableFK_IdResponsable);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdResponsable(id_responsableFK_IdResponsable);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdResponsable(id_responsableFK_IdResponsable);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePedidos("FK_IdResponsable",pedidoLogic.getPedidos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePedidos("FK_IdResponsable",pedidos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidoLogic.setPedidos(new ArrayList<Pedido>());
						pedidoLogic.getPedidos().addAll(pedidosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidos=new ArrayList<Pedido>();
							pedidos.addAll(pedidosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdRutaTransporte")) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdRutaTransporte(id_ruta_transporteFK_IdRutaTransporte);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					pedidoLogic.getPedidosFK_IdRutaTransporte(finalQueryGlobal,pagination,id_ruta_transporteFK_IdRutaTransporte);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdRutaTransporte(id_ruta_transporteFK_IdRutaTransporte);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdRutaTransporte(id_ruta_transporteFK_IdRutaTransporte);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=pedidoLogic.getPedidos()==null||pedidoLogic.getPedidos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=pedidos==null|| pedidos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidosAux=new ArrayList<Pedido>();
						pedidosAux.addAll(pedidoLogic.getPedidos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidosAux=new ArrayList<Pedido>();
							pedidosAux.addAll(pedidos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							pedidoLogic.getPedidosFK_IdRutaTransporte(finalQueryGlobal,pagination,id_ruta_transporteFK_IdRutaTransporte);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdRutaTransporte(id_ruta_transporteFK_IdRutaTransporte);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdRutaTransporte(id_ruta_transporteFK_IdRutaTransporte);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePedidos("FK_IdRutaTransporte",pedidoLogic.getPedidos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePedidos("FK_IdRutaTransporte",pedidos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidoLogic.setPedidos(new ArrayList<Pedido>());
						pedidoLogic.getPedidos().addAll(pedidosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidos=new ArrayList<Pedido>();
							pedidos.addAll(pedidosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdSubCliente")) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdSubCliente(id_sub_clienteFK_IdSubCliente);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					pedidoLogic.getPedidosFK_IdSubCliente(finalQueryGlobal,pagination,id_sub_clienteFK_IdSubCliente);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdSubCliente(id_sub_clienteFK_IdSubCliente);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdSubCliente(id_sub_clienteFK_IdSubCliente);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=pedidoLogic.getPedidos()==null||pedidoLogic.getPedidos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=pedidos==null|| pedidos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidosAux=new ArrayList<Pedido>();
						pedidosAux.addAll(pedidoLogic.getPedidos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidosAux=new ArrayList<Pedido>();
							pedidosAux.addAll(pedidos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							pedidoLogic.getPedidosFK_IdSubCliente(finalQueryGlobal,pagination,id_sub_clienteFK_IdSubCliente);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdSubCliente(id_sub_clienteFK_IdSubCliente);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdSubCliente(id_sub_clienteFK_IdSubCliente);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePedidos("FK_IdSubCliente",pedidoLogic.getPedidos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePedidos("FK_IdSubCliente",pedidos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidoLogic.setPedidos(new ArrayList<Pedido>());
						pedidoLogic.getPedidos().addAll(pedidosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidos=new ArrayList<Pedido>();
							pedidos.addAll(pedidosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdSucursal")) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					pedidoLogic.getPedidosFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=pedidoLogic.getPedidos()==null||pedidoLogic.getPedidos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=pedidos==null|| pedidos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidosAux=new ArrayList<Pedido>();
						pedidosAux.addAll(pedidoLogic.getPedidos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidosAux=new ArrayList<Pedido>();
							pedidosAux.addAll(pedidos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							pedidoLogic.getPedidosFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePedidos("FK_IdSucursal",pedidoLogic.getPedidos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePedidos("FK_IdSucursal",pedidos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidoLogic.setPedidos(new ArrayList<Pedido>());
						pedidoLogic.getPedidos().addAll(pedidosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidos=new ArrayList<Pedido>();
							pedidos.addAll(pedidosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoCambio")) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdTipoCambio(id_tipo_cambioFK_IdTipoCambio);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					pedidoLogic.getPedidosFK_IdTipoCambio(finalQueryGlobal,pagination,id_tipo_cambioFK_IdTipoCambio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdTipoCambio(id_tipo_cambioFK_IdTipoCambio);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdTipoCambio(id_tipo_cambioFK_IdTipoCambio);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=pedidoLogic.getPedidos()==null||pedidoLogic.getPedidos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=pedidos==null|| pedidos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidosAux=new ArrayList<Pedido>();
						pedidosAux.addAll(pedidoLogic.getPedidos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidosAux=new ArrayList<Pedido>();
							pedidosAux.addAll(pedidos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							pedidoLogic.getPedidosFK_IdTipoCambio(finalQueryGlobal,pagination,id_tipo_cambioFK_IdTipoCambio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdTipoCambio(id_tipo_cambioFK_IdTipoCambio);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdTipoCambio(id_tipo_cambioFK_IdTipoCambio);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePedidos("FK_IdTipoCambio",pedidoLogic.getPedidos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePedidos("FK_IdTipoCambio",pedidos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidoLogic.setPedidos(new ArrayList<Pedido>());
						pedidoLogic.getPedidos().addAll(pedidosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidos=new ArrayList<Pedido>();
							pedidos.addAll(pedidosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoLlamada")) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdTipoLlamada(id_tipo_llamadaFK_IdTipoLlamada);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					pedidoLogic.getPedidosFK_IdTipoLlamada(finalQueryGlobal,pagination,id_tipo_llamadaFK_IdTipoLlamada);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdTipoLlamada(id_tipo_llamadaFK_IdTipoLlamada);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdTipoLlamada(id_tipo_llamadaFK_IdTipoLlamada);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=pedidoLogic.getPedidos()==null||pedidoLogic.getPedidos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=pedidos==null|| pedidos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidosAux=new ArrayList<Pedido>();
						pedidosAux.addAll(pedidoLogic.getPedidos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidosAux=new ArrayList<Pedido>();
							pedidosAux.addAll(pedidos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							pedidoLogic.getPedidosFK_IdTipoLlamada(finalQueryGlobal,pagination,id_tipo_llamadaFK_IdTipoLlamada);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdTipoLlamada(id_tipo_llamadaFK_IdTipoLlamada);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdTipoLlamada(id_tipo_llamadaFK_IdTipoLlamada);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePedidos("FK_IdTipoLlamada",pedidoLogic.getPedidos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePedidos("FK_IdTipoLlamada",pedidos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidoLogic.setPedidos(new ArrayList<Pedido>());
						pedidoLogic.getPedidos().addAll(pedidosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidos=new ArrayList<Pedido>();
							pedidos.addAll(pedidosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoPrecio")) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdTipoPrecio(id_tipo_precioFK_IdTipoPrecio);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					pedidoLogic.getPedidosFK_IdTipoPrecio(finalQueryGlobal,pagination,id_tipo_precioFK_IdTipoPrecio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdTipoPrecio(id_tipo_precioFK_IdTipoPrecio);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdTipoPrecio(id_tipo_precioFK_IdTipoPrecio);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=pedidoLogic.getPedidos()==null||pedidoLogic.getPedidos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=pedidos==null|| pedidos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidosAux=new ArrayList<Pedido>();
						pedidosAux.addAll(pedidoLogic.getPedidos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidosAux=new ArrayList<Pedido>();
							pedidosAux.addAll(pedidos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							pedidoLogic.getPedidosFK_IdTipoPrecio(finalQueryGlobal,pagination,id_tipo_precioFK_IdTipoPrecio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdTipoPrecio(id_tipo_precioFK_IdTipoPrecio);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdTipoPrecio(id_tipo_precioFK_IdTipoPrecio);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePedidos("FK_IdTipoPrecio",pedidoLogic.getPedidos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePedidos("FK_IdTipoPrecio",pedidos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidoLogic.setPedidos(new ArrayList<Pedido>());
						pedidoLogic.getPedidos().addAll(pedidosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidos=new ArrayList<Pedido>();
							pedidos.addAll(pedidosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTransporte")) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdTransporte(id_transporteFK_IdTransporte);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					pedidoLogic.getPedidosFK_IdTransporte(finalQueryGlobal,pagination,id_transporteFK_IdTransporte);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdTransporte(id_transporteFK_IdTransporte);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdTransporte(id_transporteFK_IdTransporte);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=pedidoLogic.getPedidos()==null||pedidoLogic.getPedidos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=pedidos==null|| pedidos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidosAux=new ArrayList<Pedido>();
						pedidosAux.addAll(pedidoLogic.getPedidos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidosAux=new ArrayList<Pedido>();
							pedidosAux.addAll(pedidos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							pedidoLogic.getPedidosFK_IdTransporte(finalQueryGlobal,pagination,id_transporteFK_IdTransporte);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdTransporte(id_transporteFK_IdTransporte);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdTransporte(id_transporteFK_IdTransporte);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePedidos("FK_IdTransporte",pedidoLogic.getPedidos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePedidos("FK_IdTransporte",pedidos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidoLogic.setPedidos(new ArrayList<Pedido>());
						pedidoLogic.getPedidos().addAll(pedidosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidos=new ArrayList<Pedido>();
							pedidos.addAll(pedidosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTransportista")) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdTransportista(id_transportistaFK_IdTransportista);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					pedidoLogic.getPedidosFK_IdTransportista(finalQueryGlobal,pagination,id_transportistaFK_IdTransportista);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdTransportista(id_transportistaFK_IdTransportista);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdTransportista(id_transportistaFK_IdTransportista);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=pedidoLogic.getPedidos()==null||pedidoLogic.getPedidos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=pedidos==null|| pedidos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidosAux=new ArrayList<Pedido>();
						pedidosAux.addAll(pedidoLogic.getPedidos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidosAux=new ArrayList<Pedido>();
							pedidosAux.addAll(pedidos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							pedidoLogic.getPedidosFK_IdTransportista(finalQueryGlobal,pagination,id_transportistaFK_IdTransportista);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdTransportista(id_transportistaFK_IdTransportista);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdTransportista(id_transportistaFK_IdTransportista);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePedidos("FK_IdTransportista",pedidoLogic.getPedidos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePedidos("FK_IdTransportista",pedidos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidoLogic.setPedidos(new ArrayList<Pedido>());
						pedidoLogic.getPedidos().addAll(pedidosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidos=new ArrayList<Pedido>();
							pedidos.addAll(pedidosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdUsuario")) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdUsuario(id_usuarioFK_IdUsuario);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					pedidoLogic.getPedidosFK_IdUsuario(finalQueryGlobal,pagination,id_usuarioFK_IdUsuario);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdUsuario(id_usuarioFK_IdUsuario);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdUsuario(id_usuarioFK_IdUsuario);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=pedidoLogic.getPedidos()==null||pedidoLogic.getPedidos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=pedidos==null|| pedidos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidosAux=new ArrayList<Pedido>();
						pedidosAux.addAll(pedidoLogic.getPedidos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidosAux=new ArrayList<Pedido>();
							pedidosAux.addAll(pedidos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							pedidoLogic.getPedidosFK_IdUsuario(finalQueryGlobal,pagination,id_usuarioFK_IdUsuario);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdUsuario(id_usuarioFK_IdUsuario);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdUsuario(id_usuarioFK_IdUsuario);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePedidos("FK_IdUsuario",pedidoLogic.getPedidos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePedidos("FK_IdUsuario",pedidos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidoLogic.setPedidos(new ArrayList<Pedido>());
						pedidoLogic.getPedidos().addAll(pedidosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidos=new ArrayList<Pedido>();
							pedidos.addAll(pedidosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdVendedor")) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdVendedor(id_vendedorFK_IdVendedor);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					pedidoLogic.getPedidosFK_IdVendedor(finalQueryGlobal,pagination,id_vendedorFK_IdVendedor);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdVendedor(id_vendedorFK_IdVendedor);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdVendedor(id_vendedorFK_IdVendedor);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=pedidoLogic.getPedidos()==null||pedidoLogic.getPedidos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=pedidos==null|| pedidos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidosAux=new ArrayList<Pedido>();
						pedidosAux.addAll(pedidoLogic.getPedidos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidosAux=new ArrayList<Pedido>();
							pedidosAux.addAll(pedidos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							pedidoLogic.getPedidosFK_IdVendedor(finalQueryGlobal,pagination,id_vendedorFK_IdVendedor);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdVendedor(id_vendedorFK_IdVendedor);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdVendedor(id_vendedorFK_IdVendedor);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePedidos("FK_IdVendedor",pedidoLogic.getPedidos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePedidos("FK_IdVendedor",pedidos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidoLogic.setPedidos(new ArrayList<Pedido>());
						pedidoLogic.getPedidos().addAll(pedidosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidos=new ArrayList<Pedido>();
							pedidos.addAll(pedidosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdZona")) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdZona(id_zonaFK_IdZona);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					pedidoLogic.getPedidosFK_IdZona(finalQueryGlobal,pagination,id_zonaFK_IdZona);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdZona(id_zonaFK_IdZona);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdZona(id_zonaFK_IdZona);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=pedidoLogic.getPedidos()==null||pedidoLogic.getPedidos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=pedidos==null|| pedidos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidosAux=new ArrayList<Pedido>();
						pedidosAux.addAll(pedidoLogic.getPedidos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidosAux=new ArrayList<Pedido>();
							pedidosAux.addAll(pedidos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							pedidoLogic.getPedidosFK_IdZona(finalQueryGlobal,pagination,id_zonaFK_IdZona);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdZona(id_zonaFK_IdZona);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoConstantesFunciones.getDetalleIndiceFK_IdZona(id_zonaFK_IdZona);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePedidos("FK_IdZona",pedidoLogic.getPedidos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePedidos("FK_IdZona",pedidos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidoLogic.setPedidos(new ArrayList<Pedido>());
						pedidoLogic.getPedidos().addAll(pedidosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidos=new ArrayList<Pedido>();
							pedidos.addAll(pedidosAux);
						}
						//ARCHITECTURE
					}
				}

			} 
		
		
		
		this.redimensionarTablaDatos();
		//this.refrescarForeignKeysDescripcionesPedido();
		
		
		if(this.conTotales) {
			this.crearFilaTotales();
		}		
		} catch (JRException e) {
			throw e;
		} catch(Exception e) {
			throw e;
      	} finally {
      		//this.finishProcessPedido();
      	}
		
	}				
	
	public void redimensionarTablaDatos() throws Exception {
		int iSizeTabla=0;
				
		iSizeTabla=this.getSizeTablaDatos();
		
		//ARCHITECTURE
		/*
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=pedidoLogic.getPedidos().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=pedidos.size();
		}
		*/
		//ARCHITECTURE
											
		this.redimensionarTablaDatos(iSizeTabla);		
	}
	
	public Integer getSizeTablaDatos() throws Exception {
		Integer iSizeTabla=0;
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=pedidoLogic.getPedidos().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=pedidos.size();
		}
		//ARCHITECTURE
											
		return iSizeTabla;		
	}
	
			
	public Boolean permiteMantenimiento(Pedido pedido) {
		Boolean permite=true;
		
		if(this.pedido.getsType().equals(Constantes2.S_TOTALES)) {
			permite=false;
		}
		
		return permite;
	}
	
	public void traerValoresTablaTotales() throws Exception {
	}
	
	
	public void traerValoresTablaOrderBy() throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.arrOrderBy=PedidoConstantesFunciones.getOrderByListaPedido();							
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.arrOrderBy=PedidoConstantesFunciones.getOrderByListaPedido();
		}		
	}
	
	
	public Boolean existeFilaTotales() throws Exception {
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(Pedido pedido:pedidoLogic.getPedidos()) {
				if(pedido.getsType().equals(Constantes2.S_TOTALES)) {
					pedidoTotales=pedido;
					existe=true;
					break;
				}
			}
								
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(Pedido pedido:this.pedidos) {
				if(pedido.getsType().equals(Constantes2.S_TOTALES)) {
					pedidoTotales=pedido;
					existe=true;
					break;
				}
			}
		}
		
		return existe;
	}
	
	public void crearFilaTotales() throws Exception {
		Boolean existe=false;
		
		existe=this.existeFilaTotales();
		
		if(!existe) {
			//SI NO ES UNO A UNO SE CREA FILA TOTALES
			this.pedidoAux=new Pedido();
			this.pedidoAux.setsType(Constantes2.S_TOTALES);
			this.pedidoAux.setIsNew(false);
			this.pedidoAux.setIsChanged(false);
			this.pedidoAux.setIsDeleted(false);
				
			if(Constantes.ISUSAEJBLOGICLAYER) {
				PedidoConstantesFunciones.TotalizarValoresFilaPedido(this.pedidoLogic.getPedidos(),this.pedidoAux);
				
				this.pedidoLogic.getPedidos().add(this.pedidoAux);
				
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				PedidoConstantesFunciones.TotalizarValoresFilaPedido(this.pedidos,this.pedidoAux);
				
				this.pedidos.add(this.pedidoAux);
			}
		}
	}
	
	public void quitarFilaTotales() throws Exception {
		pedidoTotales=new Pedido();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.pedidoLogic.getPedidos().remove(pedidoTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.pedidos.remove(pedidoTotales);
			}
		}
	}
	
	public void actualizarFilaTotales() throws Exception {
		pedidoTotales=new Pedido();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(Pedido pedido:pedidoLogic.getPedidos()) {
				if(pedido.getsType().equals(Constantes2.S_TOTALES)) {
					pedidoTotales=pedido;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				PedidoConstantesFunciones.TotalizarValoresFilaPedido(this.pedidoLogic.getPedidos(),pedidoTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(Pedido pedido:this.pedidos) {
				if(pedido.getsType().equals(Constantes2.S_TOTALES)) {
					pedidoTotales=pedido;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				PedidoConstantesFunciones.TotalizarValoresFilaPedido(this.pedidos,pedidoTotales);
			}
		}
	}		
	
	public void recargarInformacion()throws Exception {
		try {
			sAccionBusqueda="Todos";
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
		}	
	}		
	
	
	public void getPedidosFK_IdAnio()throws Exception {
		try {
			sAccionBusqueda="FK_IdAnio";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPedidosFK_IdCentroCosto()throws Exception {
		try {
			sAccionBusqueda="FK_IdCentroCosto";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPedidosFK_IdCliente()throws Exception {
		try {
			sAccionBusqueda="FK_IdCliente";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPedidosFK_IdConsultor()throws Exception {
		try {
			sAccionBusqueda="FK_IdConsultor";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPedidosFK_IdEjercicio()throws Exception {
		try {
			sAccionBusqueda="FK_IdEjercicio";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPedidosFK_IdEmpleado()throws Exception {
		try {
			sAccionBusqueda="FK_IdEmpleado";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPedidosFK_IdEmpresa()throws Exception {
		try {
			sAccionBusqueda="FK_IdEmpresa";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPedidosFK_IdEstadoPedido()throws Exception {
		try {
			sAccionBusqueda="FK_IdEstadoPedido";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPedidosFK_IdFormato()throws Exception {
		try {
			sAccionBusqueda="FK_IdFormato";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPedidosFK_IdMes()throws Exception {
		try {
			sAccionBusqueda="FK_IdMes";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPedidosFK_IdMoneda()throws Exception {
		try {
			sAccionBusqueda="FK_IdMoneda";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPedidosFK_IdPeriodo()throws Exception {
		try {
			sAccionBusqueda="FK_IdPeriodo";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPedidosFK_IdResponsable()throws Exception {
		try {
			sAccionBusqueda="FK_IdResponsable";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPedidosFK_IdRutaTransporte()throws Exception {
		try {
			sAccionBusqueda="FK_IdRutaTransporte";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPedidosFK_IdSubCliente()throws Exception {
		try {
			sAccionBusqueda="FK_IdSubCliente";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPedidosFK_IdSucursal()throws Exception {
		try {
			sAccionBusqueda="FK_IdSucursal";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPedidosFK_IdTipoCambio()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoCambio";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPedidosFK_IdTipoLlamada()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoLlamada";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPedidosFK_IdTipoPrecio()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoPrecio";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPedidosFK_IdTransporte()throws Exception {
		try {
			sAccionBusqueda="FK_IdTransporte";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPedidosFK_IdTransportista()throws Exception {
		try {
			sAccionBusqueda="FK_IdTransportista";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPedidosFK_IdUsuario()throws Exception {
		try {
			sAccionBusqueda="FK_IdUsuario";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPedidosFK_IdVendedor()throws Exception {
		try {
			sAccionBusqueda="FK_IdVendedor";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPedidosFK_IdZona()throws Exception {
		try {
			sAccionBusqueda="FK_IdZona";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	
	
	public void getPedidosFK_IdAnio(String sFinalQuery,Long id_anio)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidoLogic.getPedidosFK_IdAnio(sFinalQuery,this.pagination,id_anio);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPedidosFK_IdCentroCosto(String sFinalQuery,Long id_centro_costo)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidoLogic.getPedidosFK_IdCentroCosto(sFinalQuery,this.pagination,id_centro_costo);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPedidosFK_IdCliente(String sFinalQuery,Long id_cliente)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidoLogic.getPedidosFK_IdCliente(sFinalQuery,this.pagination,id_cliente);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPedidosFK_IdConsultor(String sFinalQuery,Long id_consultor)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidoLogic.getPedidosFK_IdConsultor(sFinalQuery,this.pagination,id_consultor);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPedidosFK_IdEjercicio(String sFinalQuery,Long id_ejercicio)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidoLogic.getPedidosFK_IdEjercicio(sFinalQuery,this.pagination,id_ejercicio);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPedidosFK_IdEmpleado(String sFinalQuery,Long id_empleado)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidoLogic.getPedidosFK_IdEmpleado(sFinalQuery,this.pagination,id_empleado);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPedidosFK_IdEmpresa(String sFinalQuery,Long id_empresa)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidoLogic.getPedidosFK_IdEmpresa(sFinalQuery,this.pagination,id_empresa);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPedidosFK_IdEstadoPedido(String sFinalQuery,Long id_estado_pedido)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidoLogic.getPedidosFK_IdEstadoPedido(sFinalQuery,this.pagination,id_estado_pedido);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPedidosFK_IdFormato(String sFinalQuery,Long id_formato)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidoLogic.getPedidosFK_IdFormato(sFinalQuery,this.pagination,id_formato);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPedidosFK_IdMes(String sFinalQuery,Long id_mes)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidoLogic.getPedidosFK_IdMes(sFinalQuery,this.pagination,id_mes);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPedidosFK_IdMoneda(String sFinalQuery,Long id_moneda)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidoLogic.getPedidosFK_IdMoneda(sFinalQuery,this.pagination,id_moneda);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPedidosFK_IdPeriodo(String sFinalQuery,Long id_periodo)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidoLogic.getPedidosFK_IdPeriodo(sFinalQuery,this.pagination,id_periodo);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPedidosFK_IdResponsable(String sFinalQuery,Long id_responsable)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidoLogic.getPedidosFK_IdResponsable(sFinalQuery,this.pagination,id_responsable);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPedidosFK_IdRutaTransporte(String sFinalQuery,Long id_ruta_transporte)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidoLogic.getPedidosFK_IdRutaTransporte(sFinalQuery,this.pagination,id_ruta_transporte);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPedidosFK_IdSubCliente(String sFinalQuery,Long id_sub_cliente)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidoLogic.getPedidosFK_IdSubCliente(sFinalQuery,this.pagination,id_sub_cliente);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPedidosFK_IdSucursal(String sFinalQuery,Long id_sucursal)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidoLogic.getPedidosFK_IdSucursal(sFinalQuery,this.pagination,id_sucursal);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPedidosFK_IdTipoCambio(String sFinalQuery,Long id_tipo_cambio)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidoLogic.getPedidosFK_IdTipoCambio(sFinalQuery,this.pagination,id_tipo_cambio);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPedidosFK_IdTipoLlamada(String sFinalQuery,Long id_tipo_llamada)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidoLogic.getPedidosFK_IdTipoLlamada(sFinalQuery,this.pagination,id_tipo_llamada);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPedidosFK_IdTipoPrecio(String sFinalQuery,Long id_tipo_precio)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidoLogic.getPedidosFK_IdTipoPrecio(sFinalQuery,this.pagination,id_tipo_precio);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPedidosFK_IdTransporte(String sFinalQuery,Long id_transporte)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidoLogic.getPedidosFK_IdTransporte(sFinalQuery,this.pagination,id_transporte);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPedidosFK_IdTransportista(String sFinalQuery,Long id_transportista)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidoLogic.getPedidosFK_IdTransportista(sFinalQuery,this.pagination,id_transportista);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPedidosFK_IdUsuario(String sFinalQuery,Long id_usuario)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidoLogic.getPedidosFK_IdUsuario(sFinalQuery,this.pagination,id_usuario);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPedidosFK_IdVendedor(String sFinalQuery,Long id_vendedor)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidoLogic.getPedidosFK_IdVendedor(sFinalQuery,this.pagination,id_vendedor);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPedidosFK_IdZona(String sFinalQuery,Long id_zona)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidoLogic.getPedidosFK_IdZona(sFinalQuery,this.pagination,id_zona);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	
	public void onLoad()throws Exception {		
		try {		
			isEntroOnLoad=true;
			//INTENTA TRAER DATOS DE BUSQUEDA ANTERIOR
			this.traerDatosBusquedaDesdeSession();
					
			//SINO SE CUMPLE VIENE DE PADRE FOREIGN O BUSQUEDA ANTIGUA
			if(this.sAccionBusqueda.equals("")) {
				this.sAccionBusqueda="Todos";
			}
								
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch (Exception e) {
			throw e;
		}
	}		
	
	public void inicializarPermisosPedido() {
		this.isPermisoTodoPedido=false;
		this.isPermisoNuevoPedido=false;
		this.isPermisoActualizarPedido=false;
		this.isPermisoActualizarOriginalPedido=false;
		this.isPermisoEliminarPedido=false;
		this.isPermisoGuardarCambiosPedido=false;
		this.isPermisoConsultaPedido=false;
		this.isPermisoBusquedaPedido=false;
		this.isPermisoReportePedido=false;		
		this.isPermisoOrdenPedido=false;		
		this.isPermisoPaginacionMedioPedido=false;		
		this.isPermisoPaginacionAltoPedido=false;
		this.isPermisoPaginacionTodoPedido=false;
		this.isPermisoCopiarPedido=false;		
		this.isPermisoVerFormPedido=false;		
		this.isPermisoDuplicarPedido=false;		
		this.isPermisoOrdenPedido=false;		
	}
	
	public void setPermisosUsuarioPedido(Boolean isPermiso) {
		this.isPermisoTodoPedido=isPermiso;
		this.isPermisoNuevoPedido=isPermiso;
		this.isPermisoActualizarPedido=isPermiso;
		this.isPermisoActualizarOriginalPedido=isPermiso;
		this.isPermisoEliminarPedido=isPermiso;
		this.isPermisoGuardarCambiosPedido=isPermiso;
		this.isPermisoConsultaPedido=isPermiso;
		this.isPermisoBusquedaPedido=isPermiso;
		this.isPermisoReportePedido=isPermiso;
		this.isPermisoOrdenPedido=isPermiso;		
		this.isPermisoPaginacionMedioPedido=isPermiso;		
		this.isPermisoPaginacionAltoPedido=isPermiso;		
		this.isPermisoPaginacionTodoPedido=isPermiso;		
		this.isPermisoCopiarPedido=isPermiso;		
		this.isPermisoVerFormPedido=isPermiso;		
		this.isPermisoDuplicarPedido=isPermiso;
		this.isPermisoOrdenPedido=isPermiso;
	}
	
	public void setPermisosMantenimientoUsuarioPedido(Boolean isPermiso) {
		//this.isPermisoTodoPedido=isPermiso;
		this.isPermisoNuevoPedido=isPermiso;
		this.isPermisoActualizarPedido=isPermiso;
		this.isPermisoActualizarOriginalPedido=isPermiso;
		this.isPermisoEliminarPedido=isPermiso;
		this.isPermisoGuardarCambiosPedido=isPermiso;
		//this.isPermisoConsultaPedido=isPermiso;
		//this.isPermisoBusquedaPedido=isPermiso;
		//this.isPermisoReportePedido=isPermiso;
		//this.isPermisoOrdenPedido=isPermiso;		
		//this.isPermisoPaginacionMedioPedido=isPermiso;		
		//this.isPermisoPaginacionAltoPedido=isPermiso;		
		//this.isPermisoPaginacionTodoPedido=isPermiso;		
		//this.isPermisoCopiarPedido=isPermiso;		
		//this.isPermisoDuplicarPedido=isPermiso;
		//this.isPermisoOrdenPedido=isPermiso;
	}
	
	public void inicializarSetPermisosUsuarioPedidoClasesRelacionadas() throws Exception {
		ArrayList<String> arrPaginas=new ArrayList<String>();		
		ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
		
		arrPaginas.add(DetallePedidoConstantesFunciones.SNOMBREOPCION);
		
		if(PedidoJInternalFrame.CON_LLAMADA_SIMPLE) {
			this.opcionsRelacionadas.addAll(this.sistemaReturnGeneral.getOpcionsRelacionadas());
			
		} else {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				opcionsFinal=sistemaLogicAdditional.tienePermisosOpcionesEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, arrPaginas);
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
			
			this.opcionsRelacionadas.addAll(opcionsFinal);
		}
		
		

		this.isTienePermisosDetallePedido=false;
		this.isTienePermisosDetallePedido=this.verificarGetPermisosUsuarioOpcionPedidoClaseRelacionada(this.opcionsRelacionadas,DetallePedidoConstantesFunciones.SNOMBREOPCION);
		
	}
	
	public Boolean tienePermisosUsuarioEnPaginaWebPedido(String sPagina) throws Exception {
		Boolean tienePermisos=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			tienePermisos=sistemaLogicAdditional.tienePermisosEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, sPagina);
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		
		return tienePermisos;
	}
	
	public void inicializarSetPermisosUsuarioPedidoClasesRelacionadas(Boolean conPermiso) throws Exception {
		
		this.isTienePermisosDetallePedido=conPermiso;
	}
	
	public Boolean verificarGetPermisosUsuarioPedidoClaseRelacionada(ArrayList<String> arrPaginasFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioClaseRelacionada(arrPaginasFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public Boolean verificarGetPermisosUsuarioOpcionPedidoClaseRelacionada(List<Opcion> opcionsFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioOpcionClaseRelacionada(opcionsFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public void actualizarTabsSetPermisosUsuarioPedidoClasesRelacionadas() throws Exception {
		

		if(!this.isTienePermisosDetallePedido && this.jInternalFrameDetalleFormPedido!=null && this.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormPedido.jTabbedPaneRelacionesPedido.remove(this.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame.getContentPane());
		}
	}
	
	public void setPermisosUsuarioPedido() throws Exception {
		
		PerfilOpcion perfilOpcionUsuario=new PerfilOpcion();		
		Long idOpcion=this.opcionActual.getId();
		
		if(PedidoJInternalFrame.CON_LLAMADA_SIMPLE) {
			perfilOpcionUsuario=this.sistemaReturnGeneral.getPerfilOpcion();
			
		} else {
			if(this.pedidoSessionBean.getEsGuardarRelacionado()) {
				idOpcion=0L;
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				perfilOpcionUsuario=sistemaLogicAdditional.traerPermisosPaginaWebPerfilOpcion(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, PedidoConstantesFunciones.SNOMBREOPCION,idOpcion);				
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
		}
		
		if(perfilOpcionUsuario!=null && perfilOpcionUsuario.getId()>0) {
			this.isPermisoNuevoPedido=perfilOpcionUsuario.getingreso()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarPedido=perfilOpcionUsuario.getmodificacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarOriginalPedido=this.isPermisoActualizarPedido;
			this.isPermisoEliminarPedido=perfilOpcionUsuario.geteliminacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoGuardarCambiosPedido=perfilOpcionUsuario.getguardar_cambios()||perfilOpcionUsuario.gettodo();
			this.isPermisoConsultaPedido=perfilOpcionUsuario.getconsulta()||perfilOpcionUsuario.gettodo();
			this.isPermisoBusquedaPedido=perfilOpcionUsuario.getbusqueda()||perfilOpcionUsuario.gettodo();
			this.isPermisoTodoPedido=perfilOpcionUsuario.gettodo()||perfilOpcionUsuario.gettodo();
			this.isPermisoReportePedido=perfilOpcionUsuario.getreporte()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenPedido=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionMedioPedido=perfilOpcionUsuario.getpaginacion_medio()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionAltoPedido=perfilOpcionUsuario.getpaginacion_alto()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionTodoPedido=perfilOpcionUsuario.getpaginacion_todo()||perfilOpcionUsuario.gettodo();
			this.isPermisoCopiarPedido=perfilOpcionUsuario.getcopiar()||perfilOpcionUsuario.gettodo();
			this.isPermisoVerFormPedido=true;//perfilOpcionUsuario.getver_form()||perfilOpcionUsuario.gettodo();
			this.isPermisoDuplicarPedido=perfilOpcionUsuario.getduplicar()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenPedido=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			
			if(this.pedidoSessionBean.getEsGuardarRelacionado()) {
				this.opcionActual.setId(perfilOpcionUsuario.getid_opcion());
				
				this.jTableDatosPedido.setToolTipText(this.jTableDatosPedido.getToolTipText()+"_"+perfilOpcionUsuario.getid_opcion());		
			}
		} else {
			this.setPermisosUsuarioPedido(false);
		}
		
		//SI SE NECESITA PONER TODOS LOS PERMISOS POR DEFECTO
		//
		
	}
	
	public void setAccionesUsuarioPedido(Boolean esParaAccionesFormulario) throws Exception {		
		Reporte reporte=null;
		
		if(!esParaAccionesFormulario) {
			this.accions=new ArrayList<Accion>();
			
			if(PedidoJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accions=this.sistemaReturnGeneral.getAccions();
				
				
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accions=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,false);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accions.size()>0) {			
				for(Accion accion:this.accions) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
		
		
					this.tiposAcciones.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAcciones.add(reporte);
			
		} else {
			//ACCIONES FORMULARIO
			this.accionsFormulario=new ArrayList<Accion>();
			
			if(PedidoJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accionsFormulario=this.sistemaReturnGeneral.getAccionsFormulario();
			
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accionsFormulario=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,true);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accionsFormulario.size()>0) {			
				for(Accion accion:this.accionsFormulario) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
					
					this.tiposAccionesFormulario.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAccionesFormulario.add(reporte);
		}				
	}	 	
	
	public void setRelacionesUsuarioPedido() throws Exception {
		Reporte reporte=null;
		
		

		if(this.isTienePermisosDetallePedido && this.pedidoConstantesFunciones.mostrarDetallePedidoPedido && !PedidoConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Detalle Pedido");
			reporte.setsDescripcion("Detalle Pedido");
			this.tiposRelaciones.add(reporte);
		}
		
		
		//ORDENAR ALFABETICAMENTE
		Collections.sort(this.tiposRelaciones, new ReporteComparator());
		/*
		reporte=new Reporte();
		reporte.setsCodigo(accion.getcodigo());
		reporte.setsDescripcion(accion.getnombre());
			
		this.tiposRelaciones.add(reporte);
		*/
	}	
	
		
	@SuppressWarnings({ "unchecked", "rawtypes" } )
	public void inicializarCombosForeignKeyPedidoListas()throws Exception {
		try	{						
			
				this.empresasForeignKey=new ArrayList();
				this.sucursalsForeignKey=new ArrayList();
				this.ejerciciosForeignKey=new ArrayList();
				this.periodosForeignKey=new ArrayList();
				this.aniosForeignKey=new ArrayList();
				this.messForeignKey=new ArrayList();
				this.usuariosForeignKey=new ArrayList();
				this.monedasForeignKey=new ArrayList();
				this.empleadosForeignKey=new ArrayList();
				this.tipopreciosForeignKey=new ArrayList();
				this.formatosForeignKey=new ArrayList();
				this.clientesForeignKey=new ArrayList();
				this.subclientesForeignKey=new ArrayList();
				this.vendedorsForeignKey=new ArrayList();
				this.consultorsForeignKey=new ArrayList();
				this.responsablesForeignKey=new ArrayList();
				this.estadopedidosForeignKey=new ArrayList();
				this.transportesForeignKey=new ArrayList();
				this.rutatransportesForeignKey=new ArrayList();
				this.tipollamadasForeignKey=new ArrayList();
				this.transportistasForeignKey=new ArrayList();
				this.tipocambiosForeignKey=new ArrayList();
				this.centrocostosForeignKey=new ArrayList();
				this.zonasForeignKey=new ArrayList();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void cargarCombosTodosForeignKeyPedidoListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			String sFinalQueryCombo="";
			
			Modulo  moduloActualAux=new Modulo();
			
			if(PedidoJInternalFrame.ISLOAD_FKLOTE) {
				this.cargarCombosLoteForeignKeyPedidoListas(false);
			} else {
			
				this.cargarCombosForeignKeyEmpresaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeySucursalListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEjercicioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyPeriodoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyAnioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyMesListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyUsuarioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyMonedaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEmpleadoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoPrecioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyFormatoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyClienteListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeySubClienteListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyVendedorListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyConsultorListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyResponsableListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEstadoPedidoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTransporteListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyRutaTransporteListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoLlamadaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTransportistaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoCambioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCentroCostoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyZonaListas(cargarCombosDependencia,sFinalQueryCombo);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	

	public void cargarCombosForeignKeyEmpresaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EmpresaConstantesFunciones.SFINALQUERY;

				this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeySucursalListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=SucursalConstantesFunciones.SFINALQUERY;

				this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEjercicioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.ejerciciosForeignKey==null||this.ejerciciosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EjercicioConstantesFunciones.getArrayColumnasGlobalesEjercicio(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EjercicioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EjercicioConstantesFunciones.SFINALQUERY;

				this.cargarCombosEjerciciosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyPeriodoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.periodosForeignKey==null||this.periodosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=PeriodoConstantesFunciones.getArrayColumnasGlobalesPeriodo(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PeriodoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=PeriodoConstantesFunciones.SFINALQUERY;

				this.cargarCombosPeriodosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyAnioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.aniosForeignKey==null||this.aniosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=AnioConstantesFunciones.getArrayColumnasGlobalesAnio(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,AnioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=AnioConstantesFunciones.SFINALQUERY;

				this.cargarCombosAniosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyMesListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.messForeignKey==null||this.messForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=MesConstantesFunciones.getArrayColumnasGlobalesMes(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,MesConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=MesConstantesFunciones.SFINALQUERY;

				this.cargarCombosMessForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyUsuarioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.usuariosForeignKey==null||this.usuariosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=UsuarioConstantesFunciones.getArrayColumnasGlobalesUsuario(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,UsuarioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=UsuarioConstantesFunciones.SFINALQUERY;

				this.cargarCombosUsuariosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyMonedaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.monedasForeignKey==null||this.monedasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=MonedaConstantesFunciones.getArrayColumnasGlobalesMoneda(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,MonedaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=MonedaConstantesFunciones.SFINALQUERY;

				this.cargarCombosMonedasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEmpleadoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.empleadosForeignKey==null||this.empleadosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EmpleadoConstantesFunciones.getArrayColumnasGlobalesEmpleado(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpleadoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EmpleadoConstantesFunciones.SFINALQUERY;

				this.cargarCombosEmpleadosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoPrecioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipopreciosForeignKey==null||this.tipopreciosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoPrecioConstantesFunciones.getArrayColumnasGlobalesTipoPrecio(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoPrecioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoPrecioConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoPreciosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyFormatoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.formatosForeignKey==null||this.formatosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=FormatoConstantesFunciones.getArrayColumnasGlobalesFormato(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,FormatoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=FormatoConstantesFunciones.SFINALQUERY;

				this.cargarCombosFormatosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyClienteListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.clientesForeignKey==null||this.clientesForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=ClienteConstantesFunciones.getArrayColumnasGlobalesCliente(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ClienteConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=ClienteConstantesFunciones.SFINALQUERY;

				this.cargarCombosClientesForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeySubClienteListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.subclientesForeignKey==null||this.subclientesForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=SubClienteConstantesFunciones.getArrayColumnasGlobalesSubCliente(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SubClienteConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=SubClienteConstantesFunciones.SFINALQUERY;

				this.cargarCombosSubClientesForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyVendedorListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.vendedorsForeignKey==null||this.vendedorsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=VendedorConstantesFunciones.getArrayColumnasGlobalesVendedor(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,VendedorConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=VendedorConstantesFunciones.SFINALQUERY;

				this.cargarCombosVendedorsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyConsultorListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.consultorsForeignKey==null||this.consultorsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=ConsultorConstantesFunciones.getArrayColumnasGlobalesConsultor(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ConsultorConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=ConsultorConstantesFunciones.SFINALQUERY;

				this.cargarCombosConsultorsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyResponsableListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.responsablesForeignKey==null||this.responsablesForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=ResponsableConstantesFunciones.getArrayColumnasGlobalesResponsable(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ResponsableConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=ResponsableConstantesFunciones.SFINALQUERY;

				this.cargarCombosResponsablesForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEstadoPedidoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.estadopedidosForeignKey==null||this.estadopedidosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EstadoPedidoConstantesFunciones.getArrayColumnasGlobalesEstadoPedido(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EstadoPedidoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EstadoPedidoConstantesFunciones.SFINALQUERY;

				this.cargarCombosEstadoPedidosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransporteListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.transportesForeignKey==null||this.transportesForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TransporteConstantesFunciones.getArrayColumnasGlobalesTransporte(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransporteConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TransporteConstantesFunciones.SFINALQUERY;

				this.cargarCombosTransportesForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyRutaTransporteListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.rutatransportesForeignKey==null||this.rutatransportesForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=RutaTransporteConstantesFunciones.getArrayColumnasGlobalesRutaTransporte(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,RutaTransporteConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=RutaTransporteConstantesFunciones.SFINALQUERY;

				this.cargarCombosRutaTransportesForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoLlamadaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipollamadasForeignKey==null||this.tipollamadasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoLlamadaConstantesFunciones.getArrayColumnasGlobalesTipoLlamada(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoLlamadaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoLlamadaConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoLlamadasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransportistaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.transportistasForeignKey==null||this.transportistasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TransportistaConstantesFunciones.getArrayColumnasGlobalesTransportista(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransportistaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TransportistaConstantesFunciones.SFINALQUERY;

				this.cargarCombosTransportistasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoCambioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipocambiosForeignKey==null||this.tipocambiosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoCambioConstantesFunciones.getArrayColumnasGlobalesTipoCambio(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoCambioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoCambioConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoCambiosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCentroCostoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.centrocostosForeignKey==null||this.centrocostosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CentroCostoConstantesFunciones.getArrayColumnasGlobalesCentroCosto(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CentroCostoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CentroCostoConstantesFunciones.SFINALQUERY;

				this.cargarCombosCentroCostosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyZonaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.zonasForeignKey==null||this.zonasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=ZonaConstantesFunciones.getArrayColumnasGlobalesZona(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ZonaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=ZonaConstantesFunciones.SFINALQUERY;

				this.cargarCombosZonasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarCombosLoteForeignKeyPedidoListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			Modulo  moduloActualAux=new Modulo();
			
			
			PedidoParameterReturnGeneral pedidoReturnGeneral=new PedidoParameterReturnGeneral();
						
			


				String finalQueryGlobalEmpresa="";

				if(((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0) && this.pedidoConstantesFunciones.cargarid_empresaPedido)
					 || (this.esRecargarFks && this.pedidoConstantesFunciones.cargarid_empresaPedido)) {

					if(!this.pedidoSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEmpresa=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

						finalQueryGlobalEmpresa=Funciones.GetFinalQueryAppend(finalQueryGlobalEmpresa, "");
						finalQueryGlobalEmpresa+=EmpresaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEmpresa=" WHERE " + ConstantesSql.ID + "="+pedidoSessionBean.getlidEmpresaActual();
					}
				} else {
					finalQueryGlobalEmpresa="NONE";
				}


				String finalQueryGlobalSucursal="";

				if(((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0) && this.pedidoConstantesFunciones.cargarid_sucursalPedido)
					 || (this.esRecargarFks && this.pedidoConstantesFunciones.cargarid_sucursalPedido)) {

					if(!this.pedidoSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalSucursal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

						finalQueryGlobalSucursal=Funciones.GetFinalQueryAppend(finalQueryGlobalSucursal, "");
						finalQueryGlobalSucursal+=SucursalConstantesFunciones.SFINALQUERY;

						//this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalSucursal=" WHERE " + ConstantesSql.ID + "="+pedidoSessionBean.getlidSucursalActual();
					}
				} else {
					finalQueryGlobalSucursal="NONE";
				}


				String finalQueryGlobalEjercicio="";

				if(((this.ejerciciosForeignKey==null||this.ejerciciosForeignKey.size()<=0) && this.pedidoConstantesFunciones.cargarid_ejercicioPedido)
					 || (this.esRecargarFks && this.pedidoConstantesFunciones.cargarid_ejercicioPedido)) {

					if(!this.pedidoSessionBean.getisBusquedaDesdeForeignKeySesionEjercicio()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EjercicioConstantesFunciones.getArrayColumnasGlobalesEjercicio(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEjercicio=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EjercicioConstantesFunciones.TABLENAME);

						finalQueryGlobalEjercicio=Funciones.GetFinalQueryAppend(finalQueryGlobalEjercicio, "");
						finalQueryGlobalEjercicio+=EjercicioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEjerciciosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEjercicio=" WHERE " + ConstantesSql.ID + "="+pedidoSessionBean.getlidEjercicioActual();
					}
				} else {
					finalQueryGlobalEjercicio="NONE";
				}


				String finalQueryGlobalPeriodo="";

				if(((this.periodosForeignKey==null||this.periodosForeignKey.size()<=0) && this.pedidoConstantesFunciones.cargarid_periodoPedido)
					 || (this.esRecargarFks && this.pedidoConstantesFunciones.cargarid_periodoPedido)) {

					if(!this.pedidoSessionBean.getisBusquedaDesdeForeignKeySesionPeriodo()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=PeriodoConstantesFunciones.getArrayColumnasGlobalesPeriodo(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalPeriodo=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PeriodoConstantesFunciones.TABLENAME);

						finalQueryGlobalPeriodo=Funciones.GetFinalQueryAppend(finalQueryGlobalPeriodo, "");
						finalQueryGlobalPeriodo+=PeriodoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosPeriodosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalPeriodo=" WHERE " + ConstantesSql.ID + "="+pedidoSessionBean.getlidPeriodoActual();
					}
				} else {
					finalQueryGlobalPeriodo="NONE";
				}


				String finalQueryGlobalAnio="";

				if(((this.aniosForeignKey==null||this.aniosForeignKey.size()<=0) && this.pedidoConstantesFunciones.cargarid_anioPedido)
					 || (this.esRecargarFks && this.pedidoConstantesFunciones.cargarid_anioPedido)) {

					if(!this.pedidoSessionBean.getisBusquedaDesdeForeignKeySesionAnio()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=AnioConstantesFunciones.getArrayColumnasGlobalesAnio(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalAnio=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,AnioConstantesFunciones.TABLENAME);

						finalQueryGlobalAnio=Funciones.GetFinalQueryAppend(finalQueryGlobalAnio, "");
						finalQueryGlobalAnio+=AnioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosAniosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalAnio=" WHERE " + ConstantesSql.ID + "="+pedidoSessionBean.getlidAnioActual();
					}
				} else {
					finalQueryGlobalAnio="NONE";
				}


				String finalQueryGlobalMes="";

				if(((this.messForeignKey==null||this.messForeignKey.size()<=0) && this.pedidoConstantesFunciones.cargarid_mesPedido)
					 || (this.esRecargarFks && this.pedidoConstantesFunciones.cargarid_mesPedido)) {

					if(!this.pedidoSessionBean.getisBusquedaDesdeForeignKeySesionMes()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=MesConstantesFunciones.getArrayColumnasGlobalesMes(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalMes=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,MesConstantesFunciones.TABLENAME);

						finalQueryGlobalMes=Funciones.GetFinalQueryAppend(finalQueryGlobalMes, "");
						finalQueryGlobalMes+=MesConstantesFunciones.SFINALQUERY;

						//this.cargarCombosMessForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalMes=" WHERE " + ConstantesSql.ID + "="+pedidoSessionBean.getlidMesActual();
					}
				} else {
					finalQueryGlobalMes="NONE";
				}


				String finalQueryGlobalUsuario="";

				if(((this.usuariosForeignKey==null||this.usuariosForeignKey.size()<=0) && this.pedidoConstantesFunciones.cargarid_usuarioPedido)
					 || (this.esRecargarFks && this.pedidoConstantesFunciones.cargarid_usuarioPedido)) {

					if(!this.pedidoSessionBean.getisBusquedaDesdeForeignKeySesionUsuario()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=UsuarioConstantesFunciones.getArrayColumnasGlobalesUsuario(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalUsuario=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,UsuarioConstantesFunciones.TABLENAME);

						finalQueryGlobalUsuario=Funciones.GetFinalQueryAppend(finalQueryGlobalUsuario, "");
						finalQueryGlobalUsuario+=UsuarioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosUsuariosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalUsuario=" WHERE " + ConstantesSql.ID + "="+pedidoSessionBean.getlidUsuarioActual();
					}
				} else {
					finalQueryGlobalUsuario="NONE";
				}


				String finalQueryGlobalMoneda="";

				if(((this.monedasForeignKey==null||this.monedasForeignKey.size()<=0) && this.pedidoConstantesFunciones.cargarid_monedaPedido)
					 || (this.esRecargarFks && this.pedidoConstantesFunciones.cargarid_monedaPedido)) {

					if(!this.pedidoSessionBean.getisBusquedaDesdeForeignKeySesionMoneda()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=MonedaConstantesFunciones.getArrayColumnasGlobalesMoneda(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalMoneda=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,MonedaConstantesFunciones.TABLENAME);

						finalQueryGlobalMoneda=Funciones.GetFinalQueryAppend(finalQueryGlobalMoneda, "");
						finalQueryGlobalMoneda+=MonedaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosMonedasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalMoneda=" WHERE " + ConstantesSql.ID + "="+pedidoSessionBean.getlidMonedaActual();
					}
				} else {
					finalQueryGlobalMoneda="NONE";
				}


				String finalQueryGlobalEmpleado="";

				if(((this.empleadosForeignKey==null||this.empleadosForeignKey.size()<=0) && this.pedidoConstantesFunciones.cargarid_empleadoPedido)
					 || (this.esRecargarFks && this.pedidoConstantesFunciones.cargarid_empleadoPedido)) {

					if(!this.pedidoSessionBean.getisBusquedaDesdeForeignKeySesionEmpleado()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EmpleadoConstantesFunciones.getArrayColumnasGlobalesEmpleado(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEmpleado=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpleadoConstantesFunciones.TABLENAME);

						finalQueryGlobalEmpleado=Funciones.GetFinalQueryAppend(finalQueryGlobalEmpleado, "");
						finalQueryGlobalEmpleado+=EmpleadoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEmpleadosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEmpleado=" WHERE " + ConstantesSql.ID + "="+pedidoSessionBean.getlidEmpleadoActual();
					}
				} else {
					finalQueryGlobalEmpleado="NONE";
				}


				String finalQueryGlobalTipoPrecio="";

				if(((this.tipopreciosForeignKey==null||this.tipopreciosForeignKey.size()<=0) && this.pedidoConstantesFunciones.cargarid_tipo_precioPedido)
					 || (this.esRecargarFks && this.pedidoConstantesFunciones.cargarid_tipo_precioPedido)) {

					if(!this.pedidoSessionBean.getisBusquedaDesdeForeignKeySesionTipoPrecio()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoPrecioConstantesFunciones.getArrayColumnasGlobalesTipoPrecio(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoPrecio=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoPrecioConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoPrecio=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoPrecio, "");
						finalQueryGlobalTipoPrecio+=TipoPrecioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoPreciosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoPrecio=" WHERE " + ConstantesSql.ID + "="+pedidoSessionBean.getlidTipoPrecioActual();
					}
				} else {
					finalQueryGlobalTipoPrecio="NONE";
				}


				String finalQueryGlobalFormato="";

				if(((this.formatosForeignKey==null||this.formatosForeignKey.size()<=0) && this.pedidoConstantesFunciones.cargarid_formatoPedido)
					 || (this.esRecargarFks && this.pedidoConstantesFunciones.cargarid_formatoPedido)) {

					if(!this.pedidoSessionBean.getisBusquedaDesdeForeignKeySesionFormato()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=FormatoConstantesFunciones.getArrayColumnasGlobalesFormato(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalFormato=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,FormatoConstantesFunciones.TABLENAME);

						finalQueryGlobalFormato=Funciones.GetFinalQueryAppend(finalQueryGlobalFormato, "");
						finalQueryGlobalFormato+=FormatoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosFormatosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalFormato=" WHERE " + ConstantesSql.ID + "="+pedidoSessionBean.getlidFormatoActual();
					}
				} else {
					finalQueryGlobalFormato="NONE";
				}


				String finalQueryGlobalCliente="";

				if(((this.clientesForeignKey==null||this.clientesForeignKey.size()<=0) && this.pedidoConstantesFunciones.cargarid_clientePedido)
					 || (this.esRecargarFks && this.pedidoConstantesFunciones.cargarid_clientePedido)) {

					if(!this.pedidoSessionBean.getisBusquedaDesdeForeignKeySesionCliente()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=ClienteConstantesFunciones.getArrayColumnasGlobalesCliente(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCliente=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ClienteConstantesFunciones.TABLENAME);

						finalQueryGlobalCliente=Funciones.GetFinalQueryAppend(finalQueryGlobalCliente, "");
						finalQueryGlobalCliente+=ClienteConstantesFunciones.SFINALQUERY;

						//this.cargarCombosClientesForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCliente=" WHERE " + ConstantesSql.ID + "="+pedidoSessionBean.getlidClienteActual();
					}
				} else {
					finalQueryGlobalCliente="NONE";
				}


				String finalQueryGlobalSubCliente="";

				if(((this.subclientesForeignKey==null||this.subclientesForeignKey.size()<=0) && this.pedidoConstantesFunciones.cargarid_sub_clientePedido)
					 || (this.esRecargarFks && this.pedidoConstantesFunciones.cargarid_sub_clientePedido)) {

					if(!this.pedidoSessionBean.getisBusquedaDesdeForeignKeySesionSubCliente()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=SubClienteConstantesFunciones.getArrayColumnasGlobalesSubCliente(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalSubCliente=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SubClienteConstantesFunciones.TABLENAME);

						finalQueryGlobalSubCliente=Funciones.GetFinalQueryAppend(finalQueryGlobalSubCliente, "");
						finalQueryGlobalSubCliente+=SubClienteConstantesFunciones.SFINALQUERY;

						//this.cargarCombosSubClientesForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalSubCliente=" WHERE " + ConstantesSql.ID + "="+pedidoSessionBean.getlidSubClienteActual();
					}
				} else {
					finalQueryGlobalSubCliente="NONE";
				}


				String finalQueryGlobalVendedor="";

				if(((this.vendedorsForeignKey==null||this.vendedorsForeignKey.size()<=0) && this.pedidoConstantesFunciones.cargarid_vendedorPedido)
					 || (this.esRecargarFks && this.pedidoConstantesFunciones.cargarid_vendedorPedido)) {

					if(!this.pedidoSessionBean.getisBusquedaDesdeForeignKeySesionVendedor()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=VendedorConstantesFunciones.getArrayColumnasGlobalesVendedor(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalVendedor=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,VendedorConstantesFunciones.TABLENAME);

						finalQueryGlobalVendedor=Funciones.GetFinalQueryAppend(finalQueryGlobalVendedor, "");
						finalQueryGlobalVendedor+=VendedorConstantesFunciones.SFINALQUERY;

						//this.cargarCombosVendedorsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalVendedor=" WHERE " + ConstantesSql.ID + "="+pedidoSessionBean.getlidVendedorActual();
					}
				} else {
					finalQueryGlobalVendedor="NONE";
				}


				String finalQueryGlobalConsultor="";

				if(((this.consultorsForeignKey==null||this.consultorsForeignKey.size()<=0) && this.pedidoConstantesFunciones.cargarid_consultorPedido)
					 || (this.esRecargarFks && this.pedidoConstantesFunciones.cargarid_consultorPedido)) {

					if(!this.pedidoSessionBean.getisBusquedaDesdeForeignKeySesionConsultor()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=ConsultorConstantesFunciones.getArrayColumnasGlobalesConsultor(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalConsultor=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ConsultorConstantesFunciones.TABLENAME);

						finalQueryGlobalConsultor=Funciones.GetFinalQueryAppend(finalQueryGlobalConsultor, "");
						finalQueryGlobalConsultor+=ConsultorConstantesFunciones.SFINALQUERY;

						//this.cargarCombosConsultorsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalConsultor=" WHERE " + ConstantesSql.ID + "="+pedidoSessionBean.getlidConsultorActual();
					}
				} else {
					finalQueryGlobalConsultor="NONE";
				}


				String finalQueryGlobalResponsable="";

				if(((this.responsablesForeignKey==null||this.responsablesForeignKey.size()<=0) && this.pedidoConstantesFunciones.cargarid_responsablePedido)
					 || (this.esRecargarFks && this.pedidoConstantesFunciones.cargarid_responsablePedido)) {

					if(!this.pedidoSessionBean.getisBusquedaDesdeForeignKeySesionResponsable()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=ResponsableConstantesFunciones.getArrayColumnasGlobalesResponsable(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalResponsable=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ResponsableConstantesFunciones.TABLENAME);

						finalQueryGlobalResponsable=Funciones.GetFinalQueryAppend(finalQueryGlobalResponsable, "");
						finalQueryGlobalResponsable+=ResponsableConstantesFunciones.SFINALQUERY;

						//this.cargarCombosResponsablesForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalResponsable=" WHERE " + ConstantesSql.ID + "="+pedidoSessionBean.getlidResponsableActual();
					}
				} else {
					finalQueryGlobalResponsable="NONE";
				}


				String finalQueryGlobalEstadoPedido="";

				if(((this.estadopedidosForeignKey==null||this.estadopedidosForeignKey.size()<=0) && this.pedidoConstantesFunciones.cargarid_estado_pedidoPedido)
					 || (this.esRecargarFks && this.pedidoConstantesFunciones.cargarid_estado_pedidoPedido)) {

					if(!this.pedidoSessionBean.getisBusquedaDesdeForeignKeySesionEstadoPedido()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EstadoPedidoConstantesFunciones.getArrayColumnasGlobalesEstadoPedido(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEstadoPedido=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EstadoPedidoConstantesFunciones.TABLENAME);

						finalQueryGlobalEstadoPedido=Funciones.GetFinalQueryAppend(finalQueryGlobalEstadoPedido, "");
						finalQueryGlobalEstadoPedido+=EstadoPedidoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEstadoPedidosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEstadoPedido=" WHERE " + ConstantesSql.ID + "="+pedidoSessionBean.getlidEstadoPedidoActual();
					}
				} else {
					finalQueryGlobalEstadoPedido="NONE";
				}


				String finalQueryGlobalTransporte="";

				if(((this.transportesForeignKey==null||this.transportesForeignKey.size()<=0) && this.pedidoConstantesFunciones.cargarid_transportePedido)
					 || (this.esRecargarFks && this.pedidoConstantesFunciones.cargarid_transportePedido)) {

					if(!this.pedidoSessionBean.getisBusquedaDesdeForeignKeySesionTransporte()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TransporteConstantesFunciones.getArrayColumnasGlobalesTransporte(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTransporte=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransporteConstantesFunciones.TABLENAME);

						finalQueryGlobalTransporte=Funciones.GetFinalQueryAppend(finalQueryGlobalTransporte, "");
						finalQueryGlobalTransporte+=TransporteConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTransportesForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTransporte=" WHERE " + ConstantesSql.ID + "="+pedidoSessionBean.getlidTransporteActual();
					}
				} else {
					finalQueryGlobalTransporte="NONE";
				}


				String finalQueryGlobalRutaTransporte="";

				if(((this.rutatransportesForeignKey==null||this.rutatransportesForeignKey.size()<=0) && this.pedidoConstantesFunciones.cargarid_ruta_transportePedido)
					 || (this.esRecargarFks && this.pedidoConstantesFunciones.cargarid_ruta_transportePedido)) {

					if(!this.pedidoSessionBean.getisBusquedaDesdeForeignKeySesionRutaTransporte()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=RutaTransporteConstantesFunciones.getArrayColumnasGlobalesRutaTransporte(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalRutaTransporte=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,RutaTransporteConstantesFunciones.TABLENAME);

						finalQueryGlobalRutaTransporte=Funciones.GetFinalQueryAppend(finalQueryGlobalRutaTransporte, "");
						finalQueryGlobalRutaTransporte+=RutaTransporteConstantesFunciones.SFINALQUERY;

						//this.cargarCombosRutaTransportesForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalRutaTransporte=" WHERE " + ConstantesSql.ID + "="+pedidoSessionBean.getlidRutaTransporteActual();
					}
				} else {
					finalQueryGlobalRutaTransporte="NONE";
				}


				String finalQueryGlobalTipoLlamada="";

				if(((this.tipollamadasForeignKey==null||this.tipollamadasForeignKey.size()<=0) && this.pedidoConstantesFunciones.cargarid_tipo_llamadaPedido)
					 || (this.esRecargarFks && this.pedidoConstantesFunciones.cargarid_tipo_llamadaPedido)) {

					if(!this.pedidoSessionBean.getisBusquedaDesdeForeignKeySesionTipoLlamada()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoLlamadaConstantesFunciones.getArrayColumnasGlobalesTipoLlamada(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoLlamada=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoLlamadaConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoLlamada=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoLlamada, "");
						finalQueryGlobalTipoLlamada+=TipoLlamadaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoLlamadasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoLlamada=" WHERE " + ConstantesSql.ID + "="+pedidoSessionBean.getlidTipoLlamadaActual();
					}
				} else {
					finalQueryGlobalTipoLlamada="NONE";
				}


				String finalQueryGlobalTransportista="";

				if(((this.transportistasForeignKey==null||this.transportistasForeignKey.size()<=0) && this.pedidoConstantesFunciones.cargarid_transportistaPedido)
					 || (this.esRecargarFks && this.pedidoConstantesFunciones.cargarid_transportistaPedido)) {

					if(!this.pedidoSessionBean.getisBusquedaDesdeForeignKeySesionTransportista()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TransportistaConstantesFunciones.getArrayColumnasGlobalesTransportista(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTransportista=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransportistaConstantesFunciones.TABLENAME);

						finalQueryGlobalTransportista=Funciones.GetFinalQueryAppend(finalQueryGlobalTransportista, "");
						finalQueryGlobalTransportista+=TransportistaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTransportistasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTransportista=" WHERE " + ConstantesSql.ID + "="+pedidoSessionBean.getlidTransportistaActual();
					}
				} else {
					finalQueryGlobalTransportista="NONE";
				}


				String finalQueryGlobalTipoCambio="";

				if(((this.tipocambiosForeignKey==null||this.tipocambiosForeignKey.size()<=0) && this.pedidoConstantesFunciones.cargarid_tipo_cambioPedido)
					 || (this.esRecargarFks && this.pedidoConstantesFunciones.cargarid_tipo_cambioPedido)) {

					if(!this.pedidoSessionBean.getisBusquedaDesdeForeignKeySesionTipoCambio()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoCambioConstantesFunciones.getArrayColumnasGlobalesTipoCambio(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoCambio=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoCambioConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoCambio=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoCambio, "");
						finalQueryGlobalTipoCambio+=TipoCambioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoCambiosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoCambio=" WHERE " + ConstantesSql.ID + "="+pedidoSessionBean.getlidTipoCambioActual();
					}
				} else {
					finalQueryGlobalTipoCambio="NONE";
				}


				String finalQueryGlobalCentroCosto="";

				if(((this.centrocostosForeignKey==null||this.centrocostosForeignKey.size()<=0) && this.pedidoConstantesFunciones.cargarid_centro_costoPedido)
					 || (this.esRecargarFks && this.pedidoConstantesFunciones.cargarid_centro_costoPedido)) {

					if(!this.pedidoSessionBean.getisBusquedaDesdeForeignKeySesionCentroCosto()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=CentroCostoConstantesFunciones.getArrayColumnasGlobalesCentroCosto(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCentroCosto=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CentroCostoConstantesFunciones.TABLENAME);

						finalQueryGlobalCentroCosto=Funciones.GetFinalQueryAppend(finalQueryGlobalCentroCosto, "");
						finalQueryGlobalCentroCosto+=CentroCostoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCentroCostosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCentroCosto=" WHERE " + ConstantesSql.ID + "="+pedidoSessionBean.getlidCentroCostoActual();
					}
				} else {
					finalQueryGlobalCentroCosto="NONE";
				}


				String finalQueryGlobalZona="";

				if(((this.zonasForeignKey==null||this.zonasForeignKey.size()<=0) && this.pedidoConstantesFunciones.cargarid_zonaPedido)
					 || (this.esRecargarFks && this.pedidoConstantesFunciones.cargarid_zonaPedido)) {

					if(!this.pedidoSessionBean.getisBusquedaDesdeForeignKeySesionZona()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=ZonaConstantesFunciones.getArrayColumnasGlobalesZona(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalZona=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ZonaConstantesFunciones.TABLENAME);

						finalQueryGlobalZona=Funciones.GetFinalQueryAppend(finalQueryGlobalZona, "");
						finalQueryGlobalZona+=ZonaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosZonasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalZona=" WHERE " + ConstantesSql.ID + "="+pedidoSessionBean.getlidZonaActual();
					}
				} else {
					finalQueryGlobalZona="NONE";
				}
			
			//ARCHITECTURE			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				pedidoReturnGeneral=pedidoLogic.cargarCombosLoteForeignKeyPedido(finalQueryGlobalEmpresa,finalQueryGlobalSucursal,finalQueryGlobalEjercicio,finalQueryGlobalPeriodo,finalQueryGlobalAnio,finalQueryGlobalMes,finalQueryGlobalUsuario,finalQueryGlobalMoneda,finalQueryGlobalEmpleado,finalQueryGlobalTipoPrecio,finalQueryGlobalFormato,finalQueryGlobalCliente,finalQueryGlobalSubCliente,finalQueryGlobalVendedor,finalQueryGlobalConsultor,finalQueryGlobalResponsable,finalQueryGlobalEstadoPedido,finalQueryGlobalTransporte,finalQueryGlobalRutaTransporte,finalQueryGlobalTipoLlamada,finalQueryGlobalTransportista,finalQueryGlobalTipoCambio,finalQueryGlobalCentroCosto,finalQueryGlobalZona);//WithConnection
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}			
			//ARCHITECTURE
			
			

			if(!finalQueryGlobalEmpresa.equals("NONE")) {
				this.empresasForeignKey=pedidoReturnGeneral.getempresasForeignKey();
			}

			if(!finalQueryGlobalSucursal.equals("NONE")) {
				this.sucursalsForeignKey=pedidoReturnGeneral.getsucursalsForeignKey();
			}

			if(!finalQueryGlobalEjercicio.equals("NONE")) {
				this.ejerciciosForeignKey=pedidoReturnGeneral.getejerciciosForeignKey();
			}

			if(!finalQueryGlobalPeriodo.equals("NONE")) {
				this.periodosForeignKey=pedidoReturnGeneral.getperiodosForeignKey();
			}

			if(!finalQueryGlobalAnio.equals("NONE")) {
				this.aniosForeignKey=pedidoReturnGeneral.getaniosForeignKey();
			}

			if(!finalQueryGlobalMes.equals("NONE")) {
				this.messForeignKey=pedidoReturnGeneral.getmessForeignKey();
			}

			if(!finalQueryGlobalUsuario.equals("NONE")) {
				this.usuariosForeignKey=pedidoReturnGeneral.getusuariosForeignKey();
			}

			if(!finalQueryGlobalMoneda.equals("NONE")) {
				this.monedasForeignKey=pedidoReturnGeneral.getmonedasForeignKey();
			}

			if(!finalQueryGlobalEmpleado.equals("NONE")) {
				this.empleadosForeignKey=pedidoReturnGeneral.getempleadosForeignKey();
			}

			if(!finalQueryGlobalTipoPrecio.equals("NONE")) {
				this.tipopreciosForeignKey=pedidoReturnGeneral.gettipopreciosForeignKey();
			}

			if(!finalQueryGlobalFormato.equals("NONE")) {
				this.formatosForeignKey=pedidoReturnGeneral.getformatosForeignKey();
			}

			if(!finalQueryGlobalCliente.equals("NONE")) {
				this.clientesForeignKey=pedidoReturnGeneral.getclientesForeignKey();
			}

			if(!finalQueryGlobalSubCliente.equals("NONE")) {
				this.subclientesForeignKey=pedidoReturnGeneral.getsubclientesForeignKey();
			}

			if(!finalQueryGlobalVendedor.equals("NONE")) {
				this.vendedorsForeignKey=pedidoReturnGeneral.getvendedorsForeignKey();
			}

			if(!finalQueryGlobalConsultor.equals("NONE")) {
				this.consultorsForeignKey=pedidoReturnGeneral.getconsultorsForeignKey();
			}

			if(!finalQueryGlobalResponsable.equals("NONE")) {
				this.responsablesForeignKey=pedidoReturnGeneral.getresponsablesForeignKey();
			}

			if(!finalQueryGlobalEstadoPedido.equals("NONE")) {
				this.estadopedidosForeignKey=pedidoReturnGeneral.getestadopedidosForeignKey();
			}

			if(!finalQueryGlobalTransporte.equals("NONE")) {
				this.transportesForeignKey=pedidoReturnGeneral.gettransportesForeignKey();
			}

			if(!finalQueryGlobalRutaTransporte.equals("NONE")) {
				this.rutatransportesForeignKey=pedidoReturnGeneral.getrutatransportesForeignKey();
			}

			if(!finalQueryGlobalTipoLlamada.equals("NONE")) {
				this.tipollamadasForeignKey=pedidoReturnGeneral.gettipollamadasForeignKey();
			}

			if(!finalQueryGlobalTransportista.equals("NONE")) {
				this.transportistasForeignKey=pedidoReturnGeneral.gettransportistasForeignKey();
			}

			if(!finalQueryGlobalTipoCambio.equals("NONE")) {
				this.tipocambiosForeignKey=pedidoReturnGeneral.gettipocambiosForeignKey();
			}

			if(!finalQueryGlobalCentroCosto.equals("NONE")) {
				this.centrocostosForeignKey=pedidoReturnGeneral.getcentrocostosForeignKey();
			}

			if(!finalQueryGlobalZona.equals("NONE")) {
				this.zonasForeignKey=pedidoReturnGeneral.getzonasForeignKey();
			}
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void addItemDefectoCombosTodosForeignKeyPedido()throws Exception {
		try {
			
			this.addItemDefectoCombosForeignKeyEmpresa();
			this.addItemDefectoCombosForeignKeySucursal();
			this.addItemDefectoCombosForeignKeyEjercicio();
			this.addItemDefectoCombosForeignKeyPeriodo();
			this.addItemDefectoCombosForeignKeyAnio();
			this.addItemDefectoCombosForeignKeyMes();
			this.addItemDefectoCombosForeignKeyUsuario();
			this.addItemDefectoCombosForeignKeyMoneda();
			this.addItemDefectoCombosForeignKeyEmpleado();
			this.addItemDefectoCombosForeignKeyTipoPrecio();
			this.addItemDefectoCombosForeignKeyFormato();
			this.addItemDefectoCombosForeignKeyCliente();
			this.addItemDefectoCombosForeignKeySubCliente();
			this.addItemDefectoCombosForeignKeyVendedor();
			this.addItemDefectoCombosForeignKeyConsultor();
			this.addItemDefectoCombosForeignKeyResponsable();
			this.addItemDefectoCombosForeignKeyEstadoPedido();
			this.addItemDefectoCombosForeignKeyTransporte();
			this.addItemDefectoCombosForeignKeyRutaTransporte();
			this.addItemDefectoCombosForeignKeyTipoLlamada();
			this.addItemDefectoCombosForeignKeyTransportista();
			this.addItemDefectoCombosForeignKeyTipoCambio();
			this.addItemDefectoCombosForeignKeyCentroCosto();
			this.addItemDefectoCombosForeignKeyZona();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	



	public void addItemDefectoCombosForeignKeyEmpresa()throws Exception {
		try {
			if(this.pedidoSessionBean==null) {
				this.pedidoSessionBean=new PedidoSessionBean();
			}

			if(!this.pedidoSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				Empresa empresa=new Empresa();
				EmpresaConstantesFunciones.setEmpresaDescripcion(empresa,Constantes.SMENSAJE_ESCOJA_OPCION);
				empresa.setId(null);

				if(!EmpresaConstantesFunciones.ExisteEnLista(this.empresasForeignKey,empresa,true)) {

					this.empresasForeignKey.add(0,empresa);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeySucursal()throws Exception {
		try {

			if(!this.pedidoSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				Sucursal sucursal=new Sucursal();
				SucursalConstantesFunciones.setSucursalDescripcion(sucursal,Constantes.SMENSAJE_ESCOJA_OPCION);
				sucursal.setId(null);

				if(!SucursalConstantesFunciones.ExisteEnLista(this.sucursalsForeignKey,sucursal,true)) {

					this.sucursalsForeignKey.add(0,sucursal);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEjercicio()throws Exception {
		try {

			if(!this.pedidoSessionBean.getisBusquedaDesdeForeignKeySesionEjercicio()) {
				Ejercicio ejercicio=new Ejercicio();
				EjercicioConstantesFunciones.setEjercicioDescripcion(ejercicio,Constantes.SMENSAJE_ESCOJA_OPCION);
				ejercicio.setId(null);

				if(!EjercicioConstantesFunciones.ExisteEnLista(this.ejerciciosForeignKey,ejercicio,true)) {

					this.ejerciciosForeignKey.add(0,ejercicio);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyPeriodo()throws Exception {
		try {

			if(!this.pedidoSessionBean.getisBusquedaDesdeForeignKeySesionPeriodo()) {
				Periodo periodo=new Periodo();
				PeriodoConstantesFunciones.setPeriodoDescripcion(periodo,Constantes.SMENSAJE_ESCOJA_OPCION);
				periodo.setId(null);

				if(!PeriodoConstantesFunciones.ExisteEnLista(this.periodosForeignKey,periodo,true)) {

					this.periodosForeignKey.add(0,periodo);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyAnio()throws Exception {
		try {

			if(!this.pedidoSessionBean.getisBusquedaDesdeForeignKeySesionAnio()) {
				Anio anio=new Anio();
				AnioConstantesFunciones.setAnioDescripcion(anio,Constantes.SMENSAJE_ESCOJA_OPCION);
				anio.setId(null);

				if(!AnioConstantesFunciones.ExisteEnLista(this.aniosForeignKey,anio,true)) {

					this.aniosForeignKey.add(0,anio);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyMes()throws Exception {
		try {

			if(!this.pedidoSessionBean.getisBusquedaDesdeForeignKeySesionMes()) {
				Mes mes=new Mes();
				MesConstantesFunciones.setMesDescripcion(mes,Constantes.SMENSAJE_ESCOJA_OPCION);
				mes.setId(null);

				if(!MesConstantesFunciones.ExisteEnLista(this.messForeignKey,mes,true)) {

					this.messForeignKey.add(0,mes);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyUsuario()throws Exception {
		try {

			if(!this.pedidoSessionBean.getisBusquedaDesdeForeignKeySesionUsuario()) {
				Usuario usuario=new Usuario();
				UsuarioConstantesFunciones.setUsuarioDescripcion(usuario,Constantes.SMENSAJE_ESCOJA_OPCION);
				usuario.setId(null);

				if(!UsuarioConstantesFunciones.ExisteEnLista(this.usuariosForeignKey,usuario,true)) {

					this.usuariosForeignKey.add(0,usuario);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyMoneda()throws Exception {
		try {

			if(!this.pedidoSessionBean.getisBusquedaDesdeForeignKeySesionMoneda()) {
				Moneda moneda=new Moneda();
				MonedaConstantesFunciones.setMonedaDescripcion(moneda,Constantes.SMENSAJE_ESCOJA_OPCION);
				moneda.setId(null);

				if(!MonedaConstantesFunciones.ExisteEnLista(this.monedasForeignKey,moneda,true)) {

					this.monedasForeignKey.add(0,moneda);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEmpleado()throws Exception {
		try {

			if(!this.pedidoSessionBean.getisBusquedaDesdeForeignKeySesionEmpleado()) {
				Empleado empleado=new Empleado();
				EmpleadoConstantesFunciones.setEmpleadoDescripcion(empleado,Constantes.SMENSAJE_ESCOJA_OPCION);
				empleado.setId(null);

				if(!EmpleadoConstantesFunciones.ExisteEnLista(this.empleadosForeignKey,empleado,true)) {

					this.empleadosForeignKey.add(0,empleado);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoPrecio()throws Exception {
		try {

			if(!this.pedidoSessionBean.getisBusquedaDesdeForeignKeySesionTipoPrecio()) {
				TipoPrecio tipoprecio=new TipoPrecio();
				TipoPrecioConstantesFunciones.setTipoPrecioDescripcion(tipoprecio,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipoprecio.setId(null);

				if(!TipoPrecioConstantesFunciones.ExisteEnLista(this.tipopreciosForeignKey,tipoprecio,true)) {

					this.tipopreciosForeignKey.add(0,tipoprecio);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyFormato()throws Exception {
		try {

			if(!this.pedidoSessionBean.getisBusquedaDesdeForeignKeySesionFormato()) {
				Formato formato=new Formato();
				FormatoConstantesFunciones.setFormatoDescripcion(formato,Constantes.SMENSAJE_ESCOJA_OPCION);
				formato.setId(null);

				if(!FormatoConstantesFunciones.ExisteEnLista(this.formatosForeignKey,formato,true)) {

					this.formatosForeignKey.add(0,formato);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCliente()throws Exception {
		try {

			if(!this.pedidoSessionBean.getisBusquedaDesdeForeignKeySesionCliente()) {
				Cliente cliente=new Cliente();
				ClienteConstantesFunciones.setClienteDescripcion(cliente,Constantes.SMENSAJE_ESCOJA_OPCION);
				cliente.setId(null);

				if(!ClienteConstantesFunciones.ExisteEnLista(this.clientesForeignKey,cliente,true)) {

					this.clientesForeignKey.add(0,cliente);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeySubCliente()throws Exception {
		try {

			if(!this.pedidoSessionBean.getisBusquedaDesdeForeignKeySesionSubCliente()) {
				SubCliente subcliente=new SubCliente();
				SubClienteConstantesFunciones.setSubClienteDescripcion(subcliente,Constantes.SMENSAJE_ESCOJA_OPCION);
				subcliente.setId(null);

				if(!SubClienteConstantesFunciones.ExisteEnLista(this.subclientesForeignKey,subcliente,true)) {

					this.subclientesForeignKey.add(0,subcliente);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyVendedor()throws Exception {
		try {

			if(!this.pedidoSessionBean.getisBusquedaDesdeForeignKeySesionVendedor()) {
				Vendedor vendedor=new Vendedor();
				VendedorConstantesFunciones.setVendedorDescripcion(vendedor,Constantes.SMENSAJE_ESCOJA_OPCION);
				vendedor.setId(null);

				if(!VendedorConstantesFunciones.ExisteEnLista(this.vendedorsForeignKey,vendedor,true)) {

					this.vendedorsForeignKey.add(0,vendedor);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyConsultor()throws Exception {
		try {

			if(!this.pedidoSessionBean.getisBusquedaDesdeForeignKeySesionConsultor()) {
				Consultor consultor=new Consultor();
				ConsultorConstantesFunciones.setConsultorDescripcion(consultor,Constantes.SMENSAJE_ESCOJA_OPCION);
				consultor.setId(null);

				if(!ConsultorConstantesFunciones.ExisteEnLista(this.consultorsForeignKey,consultor,true)) {

					this.consultorsForeignKey.add(0,consultor);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyResponsable()throws Exception {
		try {

			if(!this.pedidoSessionBean.getisBusquedaDesdeForeignKeySesionResponsable()) {
				Responsable responsable=new Responsable();
				ResponsableConstantesFunciones.setResponsableDescripcion(responsable,Constantes.SMENSAJE_ESCOJA_OPCION);
				responsable.setId(null);

				if(!ResponsableConstantesFunciones.ExisteEnLista(this.responsablesForeignKey,responsable,true)) {

					this.responsablesForeignKey.add(0,responsable);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEstadoPedido()throws Exception {
		try {

			if(!this.pedidoSessionBean.getisBusquedaDesdeForeignKeySesionEstadoPedido()) {
				EstadoPedido estadopedido=new EstadoPedido();
				EstadoPedidoConstantesFunciones.setEstadoPedidoDescripcion(estadopedido,Constantes.SMENSAJE_ESCOJA_OPCION);
				estadopedido.setId(null);

				if(!EstadoPedidoConstantesFunciones.ExisteEnLista(this.estadopedidosForeignKey,estadopedido,true)) {

					this.estadopedidosForeignKey.add(0,estadopedido);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTransporte()throws Exception {
		try {

			if(!this.pedidoSessionBean.getisBusquedaDesdeForeignKeySesionTransporte()) {
				Transporte transporte=new Transporte();
				TransporteConstantesFunciones.setTransporteDescripcion(transporte,Constantes.SMENSAJE_ESCOJA_OPCION);
				transporte.setId(null);

				if(!TransporteConstantesFunciones.ExisteEnLista(this.transportesForeignKey,transporte,true)) {

					this.transportesForeignKey.add(0,transporte);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyRutaTransporte()throws Exception {
		try {

			if(!this.pedidoSessionBean.getisBusquedaDesdeForeignKeySesionRutaTransporte()) {
				RutaTransporte rutatransporte=new RutaTransporte();
				RutaTransporteConstantesFunciones.setRutaTransporteDescripcion(rutatransporte,Constantes.SMENSAJE_ESCOJA_OPCION);
				rutatransporte.setId(null);

				if(!RutaTransporteConstantesFunciones.ExisteEnLista(this.rutatransportesForeignKey,rutatransporte,true)) {

					this.rutatransportesForeignKey.add(0,rutatransporte);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoLlamada()throws Exception {
		try {

			if(!this.pedidoSessionBean.getisBusquedaDesdeForeignKeySesionTipoLlamada()) {
				TipoLlamada tipollamada=new TipoLlamada();
				TipoLlamadaConstantesFunciones.setTipoLlamadaDescripcion(tipollamada,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipollamada.setId(null);

				if(!TipoLlamadaConstantesFunciones.ExisteEnLista(this.tipollamadasForeignKey,tipollamada,true)) {

					this.tipollamadasForeignKey.add(0,tipollamada);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTransportista()throws Exception {
		try {

			if(!this.pedidoSessionBean.getisBusquedaDesdeForeignKeySesionTransportista()) {
				Transportista transportista=new Transportista();
				TransportistaConstantesFunciones.setTransportistaDescripcion(transportista,Constantes.SMENSAJE_ESCOJA_OPCION);
				transportista.setId(null);

				if(!TransportistaConstantesFunciones.ExisteEnLista(this.transportistasForeignKey,transportista,true)) {

					this.transportistasForeignKey.add(0,transportista);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoCambio()throws Exception {
		try {

			if(!this.pedidoSessionBean.getisBusquedaDesdeForeignKeySesionTipoCambio()) {
				TipoCambio tipocambio=new TipoCambio();
				TipoCambioConstantesFunciones.setTipoCambioDescripcion(tipocambio,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipocambio.setId(null);

				if(!TipoCambioConstantesFunciones.ExisteEnLista(this.tipocambiosForeignKey,tipocambio,true)) {

					this.tipocambiosForeignKey.add(0,tipocambio);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCentroCosto()throws Exception {
		try {

			if(!this.pedidoSessionBean.getisBusquedaDesdeForeignKeySesionCentroCosto()) {
				CentroCosto centrocosto=new CentroCosto();
				CentroCostoConstantesFunciones.setCentroCostoDescripcion(centrocosto,Constantes.SMENSAJE_ESCOJA_OPCION);
				centrocosto.setId(null);

				if(!CentroCostoConstantesFunciones.ExisteEnLista(this.centrocostosForeignKey,centrocosto,true)) {

					this.centrocostosForeignKey.add(0,centrocosto);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyZona()throws Exception {
		try {

			if(!this.pedidoSessionBean.getisBusquedaDesdeForeignKeySesionZona()) {
				Zona zona=new Zona();
				ZonaConstantesFunciones.setZonaDescripcion(zona,Constantes.SMENSAJE_ESCOJA_OPCION);
				zona.setId(null);

				if(!ZonaConstantesFunciones.ExisteEnLista(this.zonasForeignKey,zona,true)) {

					this.zonasForeignKey.add(0,zona);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void initActionsCombosTodosForeignKeyPedido()throws Exception {
		try {
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void initActionsCombosTodosForeignKeyPedido(String sFormularioTipoBusqueda)throws Exception {
		try {
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	


	
	


	
	public void setVariablesGlobalesCombosForeignKeyPedido()throws Exception {	
		try {
			if(this.parametroGeneralUsuario!=null && this.parametroGeneralUsuario.getId()>0) {
			
				this.setActualEmpresaForeignKey(this.parametroGeneralUsuario.getid_empresa(),false,"Formulario");
				this.setActualSucursalForeignKey(this.parametroGeneralUsuario.getid_sucursal(),false,"Formulario");
				this.setActualEjercicioForeignKey(this.parametroGeneralUsuario.getid_ejercicio(),false,"Formulario");
				this.setActualPeriodoForeignKey(this.parametroGeneralUsuario.getid_periodo(),false,"Formulario");
				this.setActualUsuarioForeignKey(this.parametroGeneralUsuario.getid_usuario(),false,"Formulario");
				this.setActualMonedaForeignKey(this.parametroGeneralUsuario.getid_moneda(),false,"Formulario");
			
			
				this.pedido.setfecha_emision(this.parametroGeneralUsuario.getfecha_sistema());
				this.pedido.setfecha_entrega(this.parametroGeneralUsuario.getfecha_sistema());
				this.pedido.setfecha(this.parametroGeneralUsuario.getfecha_sistema());
				this.pedido.setfecha_servidor(this.parametroGeneralUsuario.getfecha_sistema());
			}
			
			//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
			this.setVariablesGlobalesAuxiliaresCombosForeignKeyPedido();
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToFormularioForeignKeyPedido(Pedido pedido)throws Exception {	
		try {
			
			this.setActualEmpleadoForeignKey(pedido.getid_empleado(),false,"Formulario");
			this.setActualTipoPrecioForeignKey(pedido.getid_tipo_precio(),false,"Formulario");
			this.setActualFormatoForeignKey(pedido.getid_formato(),false,"Formulario");
			this.setActualClienteForeignKey(pedido.getid_cliente(),false,"Formulario");
			this.setActualSubClienteForeignKey(pedido.getid_sub_cliente(),false,"Formulario");
			this.setActualVendedorForeignKey(pedido.getid_vendedor(),false,"Formulario");
			this.setActualConsultorForeignKey(pedido.getid_consultor(),false,"Formulario");
			this.setActualResponsableForeignKey(pedido.getid_responsable(),false,"Formulario");
			this.setActualEstadoPedidoForeignKey(pedido.getid_estado_pedido(),false,"Formulario");
			this.setActualTransporteForeignKey(pedido.getid_transporte(),false,"Formulario");
			this.setActualRutaTransporteForeignKey(pedido.getid_ruta_transporte(),false,"Formulario");
			this.setActualTipoLlamadaForeignKey(pedido.getid_tipo_llamada(),false,"Formulario");
			this.setActualTransportistaForeignKey(pedido.getid_transportista(),false,"Formulario");
			this.setActualTipoCambioForeignKey(pedido.getid_tipo_cambio(),false,"Formulario");
			this.setActualCentroCostoForeignKey(pedido.getid_centro_costo(),false,"Formulario");
			this.setActualZonaForeignKey(pedido.getid_zona(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToListasForeignKeyPedido(Pedido pedido,String sTipoEvento)throws Exception {	
		try {
			
			

				if(pedido.getEmpleado()!=null && !sTipoEvento.equals("id_empleadoPedido")) { //sTipoEvento Evita Bucle Infinito

					this.empleadosForeignKey=new ArrayList<Empleado>();
					this.empleadosForeignKey.add(pedido.getEmpleado());

					this.addItemDefectoCombosForeignKeyEmpleado();
					this.cargarCombosFrameEmpleadosForeignKey("Todos");
				}

				if(pedido.getCliente()!=null && !sTipoEvento.equals("id_clientePedido")) { //sTipoEvento Evita Bucle Infinito

					this.clientesForeignKey=new ArrayList<Cliente>();
					this.clientesForeignKey.add(pedido.getCliente());

					this.addItemDefectoCombosForeignKeyCliente();
					this.cargarCombosFrameClientesForeignKey("Todos");
				}

				if(pedido.getVendedor()!=null && !sTipoEvento.equals("id_vendedorPedido")) { //sTipoEvento Evita Bucle Infinito

					this.vendedorsForeignKey=new ArrayList<Vendedor>();
					this.vendedorsForeignKey.add(pedido.getVendedor());

					this.addItemDefectoCombosForeignKeyVendedor();
					this.cargarCombosFrameVendedorsForeignKey("Todos");
				}

				if(pedido.getTipoCambio()!=null && !sTipoEvento.equals("id_tipo_cambioPedido")) { //sTipoEvento Evita Bucle Infinito

					this.tipocambiosForeignKey=new ArrayList<TipoCambio>();
					this.tipocambiosForeignKey.add(pedido.getTipoCambio());

					this.addItemDefectoCombosForeignKeyTipoCambio();
					this.cargarCombosFrameTipoCambiosForeignKey("Todos");
				}

				if(pedido.getCentroCosto()!=null && !sTipoEvento.equals("id_centro_costoPedido")) { //sTipoEvento Evita Bucle Infinito

					this.centrocostosForeignKey=new ArrayList<CentroCosto>();
					this.centrocostosForeignKey.add(pedido.getCentroCosto());

					this.addItemDefectoCombosForeignKeyCentroCosto();
					this.cargarCombosFrameCentroCostosForeignKey("Todos");
				}
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	/*
	public void setVariablesCombosFromBeanForeignKeyPedido()throws Exception {	
		try {
			
			this.setActualEmpleadoForeignKey(this.pedidoConstantesFunciones.getid_empleado(),false,"Formulario");
			this.setActualTipoPrecioForeignKey(this.pedidoConstantesFunciones.getid_tipo_precio(),false,"Formulario");
			this.setActualFormatoForeignKey(this.pedidoConstantesFunciones.getid_formato(),false,"Formulario");
			this.setActualClienteForeignKey(this.pedidoConstantesFunciones.getid_cliente(),false,"Formulario");
			this.setActualSubClienteForeignKey(this.pedidoConstantesFunciones.getid_sub_cliente(),false,"Formulario");
			this.setActualVendedorForeignKey(this.pedidoConstantesFunciones.getid_vendedor(),false,"Formulario");
			this.setActualConsultorForeignKey(this.pedidoConstantesFunciones.getid_consultor(),false,"Formulario");
			this.setActualResponsableForeignKey(this.pedidoConstantesFunciones.getid_responsable(),false,"Formulario");
			this.setActualEstadoPedidoForeignKey(this.pedidoConstantesFunciones.getid_estado_pedido(),false,"Formulario");
			this.setActualTransporteForeignKey(this.pedidoConstantesFunciones.getid_transporte(),false,"Formulario");
			this.setActualRutaTransporteForeignKey(this.pedidoConstantesFunciones.getid_ruta_transporte(),false,"Formulario");
			this.setActualTipoLlamadaForeignKey(this.pedidoConstantesFunciones.getid_tipo_llamada(),false,"Formulario");
			this.setActualTransportistaForeignKey(this.pedidoConstantesFunciones.getid_transportista(),false,"Formulario");
			this.setActualTipoCambioForeignKey(this.pedidoConstantesFunciones.getid_tipo_cambio(),false,"Formulario");
			this.setActualCentroCostoForeignKey(this.pedidoConstantesFunciones.getid_centro_costo(),false,"Formulario");
			this.setActualZonaForeignKey(this.pedidoConstantesFunciones.getid_zona(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	*/
	
	public void setVariablesGlobalesAuxiliaresCombosForeignKeyPedido()throws Exception {	
		try {
			

				if(this.jInternalFrameDetalleFormPedido!=null) {
					Ejercicio ejercicioActual=(Ejercicio)this.jInternalFrameDetalleFormPedido.jComboBoxid_ejercicioPedido.getSelectedItem();
					this.setActualAnioForeignKey(ejercicioActual.getid_anio(),false,"Formulario");
				}

				if(this.jInternalFrameDetalleFormPedido!=null) {
					Periodo periodoActual=(Periodo)this.jInternalFrameDetalleFormPedido.jComboBoxid_periodoPedido.getSelectedItem();
					this.setActualMesForeignKey(periodoActual.getid_mes(),false,"Formulario");
				}

				this.setActualUsuarioForeignKey(this.usuarioActual.getId(),false,"Formulario");
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesDefaultCombosForeignKeyPedido()throws Exception {	
		try {
			
				this.setActualEstadoPedidoForeignKey(1L,false,"Formulario");
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesParametroCombosForeignKeyPedido()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void cargarCombosParametroPedido()throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			//this.cargarDatosCliente();
			
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
		
	public void cargarCombosFrameForeignKeyPedido()throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey("Todos");
			this.cargarCombosFrameSucursalsForeignKey("Todos");
			this.cargarCombosFrameEjerciciosForeignKey("Todos");
			this.cargarCombosFramePeriodosForeignKey("Todos");
			this.cargarCombosFrameAniosForeignKey("Todos");
			this.cargarCombosFrameMessForeignKey("Todos");
			this.cargarCombosFrameUsuariosForeignKey("Todos");
			this.cargarCombosFrameMonedasForeignKey("Todos");
			this.cargarCombosFrameEmpleadosForeignKey("Todos");
			this.cargarCombosFrameTipoPreciosForeignKey("Todos");
			this.cargarCombosFrameFormatosForeignKey("Todos");
			this.cargarCombosFrameClientesForeignKey("Todos");
			this.cargarCombosFrameSubClientesForeignKey("Todos");
			this.cargarCombosFrameVendedorsForeignKey("Todos");
			this.cargarCombosFrameConsultorsForeignKey("Todos");
			this.cargarCombosFrameResponsablesForeignKey("Todos");
			this.cargarCombosFrameEstadoPedidosForeignKey("Todos");
			this.cargarCombosFrameTransportesForeignKey("Todos");
			this.cargarCombosFrameRutaTransportesForeignKey("Todos");
			this.cargarCombosFrameTipoLlamadasForeignKey("Todos");
			this.cargarCombosFrameTransportistasForeignKey("Todos");
			this.cargarCombosFrameTipoCambiosForeignKey("Todos");
			this.cargarCombosFrameCentroCostosForeignKey("Todos");
			this.cargarCombosFrameZonasForeignKey("Todos");

		} catch(Exception e) {
			throw e;
		}		
	}		
	
	public void cargarCombosFrameForeignKeyPedido(String sFormularioTipoBusqueda)throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameSucursalsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEjerciciosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFramePeriodosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameAniosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameMessForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameUsuariosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameMonedasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEmpleadosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoPreciosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameFormatosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameClientesForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameSubClientesForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameVendedorsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameConsultorsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameResponsablesForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEstadoPedidosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTransportesForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameRutaTransportesForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoLlamadasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTransportistasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoCambiosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCentroCostosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameZonasForeignKey(sFormularioTipoBusqueda);

		} catch(Exception e) {
			throw e;
		}		
	}	
	
	public void setItemDefectoCombosForeignKeyPedido()throws Exception {
		try {
			



			if(this.jInternalFrameDetalleFormPedido.jComboBoxid_empresaPedido!=null && this.jInternalFrameDetalleFormPedido.jComboBoxid_empresaPedido.getItemCount()>0) {
				this.jInternalFrameDetalleFormPedido.jComboBoxid_empresaPedido.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPedido.jComboBoxid_sucursalPedido!=null && this.jInternalFrameDetalleFormPedido.jComboBoxid_sucursalPedido.getItemCount()>0) {
				this.jInternalFrameDetalleFormPedido.jComboBoxid_sucursalPedido.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPedido.jComboBoxid_ejercicioPedido!=null && this.jInternalFrameDetalleFormPedido.jComboBoxid_ejercicioPedido.getItemCount()>0) {
				this.jInternalFrameDetalleFormPedido.jComboBoxid_ejercicioPedido.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPedido.jComboBoxid_periodoPedido!=null && this.jInternalFrameDetalleFormPedido.jComboBoxid_periodoPedido.getItemCount()>0) {
				this.jInternalFrameDetalleFormPedido.jComboBoxid_periodoPedido.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPedido.jComboBoxid_anioPedido!=null && this.jInternalFrameDetalleFormPedido.jComboBoxid_anioPedido.getItemCount()>0) {
				this.jInternalFrameDetalleFormPedido.jComboBoxid_anioPedido.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPedido.jComboBoxid_mesPedido!=null && this.jInternalFrameDetalleFormPedido.jComboBoxid_mesPedido.getItemCount()>0) {
				this.jInternalFrameDetalleFormPedido.jComboBoxid_mesPedido.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPedido.jComboBoxid_usuarioPedido!=null && this.jInternalFrameDetalleFormPedido.jComboBoxid_usuarioPedido.getItemCount()>0) {
				this.jInternalFrameDetalleFormPedido.jComboBoxid_usuarioPedido.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPedido.jComboBoxid_monedaPedido!=null && this.jInternalFrameDetalleFormPedido.jComboBoxid_monedaPedido.getItemCount()>0) {
				this.jInternalFrameDetalleFormPedido.jComboBoxid_monedaPedido.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPedido.jComboBoxid_empleadoPedido!=null && this.jInternalFrameDetalleFormPedido.jComboBoxid_empleadoPedido.getItemCount()>0) {
				this.jInternalFrameDetalleFormPedido.jComboBoxid_empleadoPedido.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPedido.jComboBoxid_tipo_precioPedido!=null && this.jInternalFrameDetalleFormPedido.jComboBoxid_tipo_precioPedido.getItemCount()>0) {
				this.jInternalFrameDetalleFormPedido.jComboBoxid_tipo_precioPedido.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPedido.jComboBoxid_formatoPedido!=null && this.jInternalFrameDetalleFormPedido.jComboBoxid_formatoPedido.getItemCount()>0) {
				this.jInternalFrameDetalleFormPedido.jComboBoxid_formatoPedido.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPedido.jComboBoxid_clientePedido!=null && this.jInternalFrameDetalleFormPedido.jComboBoxid_clientePedido.getItemCount()>0) {
				this.jInternalFrameDetalleFormPedido.jComboBoxid_clientePedido.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPedido.jComboBoxid_sub_clientePedido!=null && this.jInternalFrameDetalleFormPedido.jComboBoxid_sub_clientePedido.getItemCount()>0) {
				this.jInternalFrameDetalleFormPedido.jComboBoxid_sub_clientePedido.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPedido.jComboBoxid_vendedorPedido!=null && this.jInternalFrameDetalleFormPedido.jComboBoxid_vendedorPedido.getItemCount()>0) {
				this.jInternalFrameDetalleFormPedido.jComboBoxid_vendedorPedido.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPedido.jComboBoxid_consultorPedido!=null && this.jInternalFrameDetalleFormPedido.jComboBoxid_consultorPedido.getItemCount()>0) {
				this.jInternalFrameDetalleFormPedido.jComboBoxid_consultorPedido.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPedido.jComboBoxid_responsablePedido!=null && this.jInternalFrameDetalleFormPedido.jComboBoxid_responsablePedido.getItemCount()>0) {
				this.jInternalFrameDetalleFormPedido.jComboBoxid_responsablePedido.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPedido.jComboBoxid_estado_pedidoPedido!=null && this.jInternalFrameDetalleFormPedido.jComboBoxid_estado_pedidoPedido.getItemCount()>0) {
				//this.jInternalFrameDetalleFormPedido.jComboBoxid_estado_pedidoPedido.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPedido.jComboBoxid_transportePedido!=null && this.jInternalFrameDetalleFormPedido.jComboBoxid_transportePedido.getItemCount()>0) {
				this.jInternalFrameDetalleFormPedido.jComboBoxid_transportePedido.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPedido.jComboBoxid_ruta_transportePedido!=null && this.jInternalFrameDetalleFormPedido.jComboBoxid_ruta_transportePedido.getItemCount()>0) {
				this.jInternalFrameDetalleFormPedido.jComboBoxid_ruta_transportePedido.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPedido.jComboBoxid_tipo_llamadaPedido!=null && this.jInternalFrameDetalleFormPedido.jComboBoxid_tipo_llamadaPedido.getItemCount()>0) {
				this.jInternalFrameDetalleFormPedido.jComboBoxid_tipo_llamadaPedido.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPedido.jComboBoxid_transportistaPedido!=null && this.jInternalFrameDetalleFormPedido.jComboBoxid_transportistaPedido.getItemCount()>0) {
				this.jInternalFrameDetalleFormPedido.jComboBoxid_transportistaPedido.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPedido.jComboBoxid_tipo_cambioPedido!=null && this.jInternalFrameDetalleFormPedido.jComboBoxid_tipo_cambioPedido.getItemCount()>0) {
				this.jInternalFrameDetalleFormPedido.jComboBoxid_tipo_cambioPedido.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPedido.jComboBoxid_centro_costoPedido!=null && this.jInternalFrameDetalleFormPedido.jComboBoxid_centro_costoPedido.getItemCount()>0) {
				this.jInternalFrameDetalleFormPedido.jComboBoxid_centro_costoPedido.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPedido.jComboBoxid_zonaPedido!=null && this.jInternalFrameDetalleFormPedido.jComboBoxid_zonaPedido.getItemCount()>0) {
				this.jInternalFrameDetalleFormPedido.jComboBoxid_zonaPedido.setSelectedIndex(0);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	
















































	
	

	public PedidoBeanSwingJInternalFrame() throws Exception {
		super(false,PaginaTipo.PRINCIPAL);
	}
	
	public PedidoBeanSwingJInternalFrame(Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
	}
	
	public PedidoBeanSwingJInternalFrame(Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
		
		this.pedidoSessionBean=new PedidoSessionBean(); 
		this.pedidoConstantesFunciones=new PedidoConstantesFunciones(); 
		this.pedidoBean=new Pedido();//(this.pedidoConstantesFunciones); 		
		this.pedidoReturnGeneral=new PedidoParameterReturnGeneral(); 
		
		this.pedidoSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
		this.pedidoSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
				
	}
	
	public PedidoBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,cargarTodosDatos);
	}
		
	public PedidoBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,false,false,cargarRelaciones,cargarTodosDatos);
	}	
	
	public PedidoBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,PaginaTipo paginaTipo,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos) throws Exception //Boolean esParaBusquedaForeignKey
    {
		super(jdesktopPane,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		try {
			
			this.permiteRecargarForm=false;
			
			this.startProcessPedido(true);
			
			Boolean esParaBusquedaForeignKey=false;//ANTES USADO COMO PARAMETRO DEL CONSTRUCTOR
			
			if(paginaTipo.equals(PaginaTipo.BUSQUEDA)) {
				esParaBusquedaForeignKey=true;
			}
			
			//OBLIGA VALIDA CON GUARDAR RELACIONES, TAMBIEN EN SWING
			conGuardarRelaciones=true;
			
			
			//SE ASIGNA EN CLASE PADRE
			/*
			this.parametroGeneralSg=parametroGeneralSg;		
			this.parametroGeneralUsuario=parametroGeneralUsuario;	
			this.usuarioActual=usuarioActual;
			this.moduloActual=moduloActual;
			*/						
			
			long start_time=0;
			long end_time=0;
			
			if(Constantes2.ISDEVELOPING2) {
				start_time = System.currentTimeMillis();
			}
			
			if(!cargarTodosDatos) {
				this.sAccionBusqueda="NINGUNO";
			}
			
			this.pedidoConstantesFunciones=new PedidoConstantesFunciones(); 
			this.pedidoBean=new Pedido();//this.pedidoConstantesFunciones); 			
			this.pedidoReturnGeneral=new PedidoParameterReturnGeneral(); 
		
			PedidoBeanSwingJInternalFrameAdditional.CargaInicialInicio(this, "NORMAL", null);
			
			this.setTitle(Funciones.GetTituloSistema(this.parametroGeneralSg,this.moduloActual,this.usuarioActual,"Pedido Mantenimiento",paginaTipo));			
			
			this.conTotales=false;
			
			this.conTotales=true;
			
			
			this.pedido=new Pedido();
			this.pedidos = new ArrayList<Pedido>();
			this.pedidosAux = new ArrayList<Pedido>();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic=new PedidoLogic();
				this.pedidoLogic.getNewConnexionToDeep("");
			}
			
			//this.pedidoSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
			//this.pedidoSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
			
			this.jDesktopPane=jdesktopPane;
			
			if(this.jDesktopPane.getClass().equals(JDesktopPaneMe.class)) {
				this.constantes2=((JDesktopPaneMe)this.jDesktopPane).constantes2;
			}
			
			if(!Constantes.CON_VARIAS_VENTANAS) {
    			MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameDetalleFormPedido);
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameReporteDinamicoPedido!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoPedido);	
					}
					
					if(this.jInternalFrameImportacionPedido!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionPedido);							
					}
					
				}
				
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameOrderByPedido!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameOrderByPedido);					
					}
					
				}
			}
			
			//DETALLE DATOS
			if(this.jInternalFrameDetalleFormPedido!=null) { //this.conCargarFormDetalle) {
				this.jDesktopPane.add(this.jInternalFrameDetalleFormPedido);
				this.jInternalFrameDetalleFormPedido.setVisible(false);
				this.jInternalFrameDetalleFormPedido.setSelected(false);						
			}
			
			if(!this.conCargarMinimo) {
				
				//REPORTE DINAMICO
				if(this.jInternalFrameReporteDinamicoPedido!=null) {
					this.jDesktopPane.add(this.jInternalFrameReporteDinamicoPedido);
					this.jInternalFrameReporteDinamicoPedido.setVisible(false);
					this.jInternalFrameReporteDinamicoPedido.setSelected(false);
				}
				
				//IMPORTACION
				if(this.jInternalFrameImportacionPedido!=null) {
					this.jDesktopPane.add(this.jInternalFrameImportacionPedido);
					this.jInternalFrameImportacionPedido.setVisible(false);
					this.jInternalFrameImportacionPedido.setSelected(false);
				}
				
				
			}
			
			
			if(!this.conCargarMinimo) {
				
				if(this.jInternalFrameOrderByPedido!=null) {
					this.jDesktopPane.add(this.jInternalFrameOrderByPedido);
					this.jInternalFrameOrderByPedido.setVisible(false);
					this.jInternalFrameOrderByPedido.setSelected(false);				
				}
				
			}
			
			
			//this.esParaBusquedaForeignKey=false;
			this.esParaBusquedaForeignKey=esParaBusquedaForeignKey;
			
			this.invalidValues=new InvalidValue[0];
			
			
			
			this.idPedidoActual=0L;
			this.rowIndexActual=0;
			
			
			this.iNumeroPaginacionPagina=0;
			this.iNumeroPaginacion=PedidoConstantesFunciones.INUMEROPAGINACION;
			this.pagination=new Pagination();
			this.datosCliente=new DatosCliente();
			this.lIdUsuarioSesion=0L;	
			this.sTipoArchivoReporte="";
			this.sTipoArchivoReporteDinamico="";
			this.sTipoReporte="";
			this.sTipoReporteDinamico="";
			this.sTipoPaginacion="";
			this.sTipoRelacion="";
			this.sTipoAccion="";
			this.sTipoAccionFormulario="";
			this.sTipoSeleccionar="";			
			this.sDetalleReporte="";
			this.sTipoReporteExtra="";
			this.sValorCampoGeneral="";
			this.sPathReporteDinamico="";			
			
			this.isMostrarNumeroPaginacion=false;
			this.isSeleccionarTodos=false;
			this.isSeleccionados=false;
			this.conGraficoReporte=false;
			this.isPostAccionNuevo=false;
			this.isPostAccionSinCerrar=false;
			this.isPostAccionSinMensaje=false;
			this.esReporteDinamico=false;
			this.esRecargarFks=false;
			this.esReporteAccionProceso=false;
			
			this.pedidoReturnGeneral=new PedidoParameterReturnGeneral();
			
			this.pedidoParameterGeneral=new PedidoParameterReturnGeneral();
			
			
			
			this.sistemaLogicAdditional=new SistemaLogicAdditional();
			
			this.sistemaLogicAdditional.setConnexion(this.pedidoLogic.getConnexion());			
			
			
			
			
			
			
			
			//VERIFICAR GLOBAL
			this.cargarDatosCliente();			
			
			
			if(!this.pedidoSessionBean.getEsGuardarRelacionado()) {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarLicenciaCliente(this.datosCliente,this.moduloActual,this.usuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_CONTROLGLOBAL);
					}
					
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}			
			
			//VERIFICAR GLOBAL
			
			//VERIFICAR SESSION ACTUAL
			//this.cargarDatosCliente();
			
			this.sistemaReturnGeneral=new SistemaParameterReturnGeneral();
			
			SistemaParameterReturnGeneralAdditional.inicializarSinSeguridad(this.sistemaReturnGeneral);
			
			if(PedidoJInternalFrame.CON_LLAMADA_SIMPLE) {
				if(this.pedidoSessionBean.getEsGuardarRelacionado()) {
					this.opcionActual.setId(0L);
					
					//idOpcion=0L;					
				}
				
				ArrayList<String> arrPaginas=new ArrayList<String>();		
				ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
				
				arrPaginas.add(DetallePedidoConstantesFunciones.SNOMBREOPCION);
		
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					//this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActualWithConnection(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,PedidoConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.pedidoSessionBean.getEsGuardarRelacionado(),this.pedidoSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,PedidoConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.pedidoSessionBean.getEsGuardarRelacionado(),this.pedidoSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					if(!this.sistemaReturnGeneral.getEsValidado()) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
					//FALTA
				}
			} else { 
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			} 
			//VERIFICAR SESSION ACTUAL
			
			
			this.sVisibilidadTablaBusquedas="table-row";
			this.sVisibilidadTablaElementos="none";
			this.sVisibilidadTablaAcciones="none";
			
			this.isVisibilidadCeldaNuevoPedido=false;
			this.isVisibilidadCeldaDuplicarPedido=true;
			this.isVisibilidadCeldaCopiarPedido=true;
			this.isVisibilidadCeldaVerFormPedido=true;
			this.isVisibilidadCeldaOrdenPedido=true;
			this.isVisibilidadCeldaNuevoRelacionesPedido=false;
			this.isVisibilidadCeldaModificarPedido=false;
			this.isVisibilidadCeldaActualizarPedido=false;
			this.isVisibilidadCeldaEliminarPedido=false;
			this.isVisibilidadCeldaCancelarPedido=false;
			this.isVisibilidadCeldaGuardarPedido=false;
			this.isVisibilidadCeldaGuardarCambiosPedido=false;
			
			
			this.isVisibilidadFK_IdAnio=true;
			this.isVisibilidadFK_IdCentroCosto=true;
			this.isVisibilidadFK_IdCliente=true;
			this.isVisibilidadFK_IdConsultor=true;
			this.isVisibilidadFK_IdEjercicio=true;
			this.isVisibilidadFK_IdEmpleado=true;
			this.isVisibilidadFK_IdEmpresa=true;
			this.isVisibilidadFK_IdEstadoPedido=true;
			this.isVisibilidadFK_IdFormato=true;
			this.isVisibilidadFK_IdMes=true;
			this.isVisibilidadFK_IdMoneda=true;
			this.isVisibilidadFK_IdPeriodo=true;
			this.isVisibilidadFK_IdResponsable=true;
			this.isVisibilidadFK_IdRutaTransporte=true;
			this.isVisibilidadFK_IdSubCliente=true;
			this.isVisibilidadFK_IdSucursal=true;
			this.isVisibilidadFK_IdTipoCambio=true;
			this.isVisibilidadFK_IdTipoLlamada=true;
			this.isVisibilidadFK_IdTipoPrecio=true;
			this.isVisibilidadFK_IdTransporte=true;
			this.isVisibilidadFK_IdTransportista=true;
			this.isVisibilidadFK_IdUsuario=true;
			this.isVisibilidadFK_IdVendedor=true;
			this.isVisibilidadFK_IdZona=true;
			
			//ELEMENTOS TABLAS PARAMETOS
			
			
			
			//ELEMENTOS TABLAS PARAMETOS_FIN
			
			//this.actualizarEstadoCeldasBotonesPedido("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
						
			
			
			this.inicializarPermisosPedido();
			
			//INICIALIZAR FALSE, TALVEZ COMENTAR
			this.setPermisosUsuarioPedido(false);
			
			this.setPermisosUsuarioPedido();
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.pedidoSessionBean.getEsGuardarRelacionado() 
				|| (this.pedidoSessionBean.getEsGuardarRelacionado() && this.pedidoSessionBean.getConGuardarRelaciones())) {
				
				this.inicializarSetPermisosUsuarioPedidoClasesRelacionadas();
			}
			
			if(this.pedidoSessionBean.getConGuardarRelaciones()) {
				this.actualizarTabsSetPermisosUsuarioPedidoClasesRelacionadas();
			}
			
			
			
			//SOLO SE EJECUTA LA PRIMERA VEZ, BINDINGS SI FUNCIONA
			if(!PedidoJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingBotonesPermisosPedido();
			} else {
				this.inicializarActualizarBindingBotonesPermisosManualPedido();
			}
			
			if(!this.isPermisoBusquedaPedido) {
				//BYDAN_BUSQUEDAS
				
				this.jTabbedPaneBusquedasPedido.setVisible(false);				
				
			}
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.pedidoSessionBean.getEsGuardarRelacionado()) {				
				this.tiposArchivosReportes=Funciones.getListTiposArchivosReportes();
				this.tiposArchivosReportesDinamico=Funciones.getListTiposArchivosReportes();
				this.tiposReportes=Funciones.getListTiposReportes(true);
				this.tiposReportesDinamico=Funciones.getListTiposReportesDinamico(true);
				
				
				this.tiposReportes.add(new Reporte("RELACIONES","RELACIONES"));
				this.tiposReportesDinamico.add(new Reporte("RELACIONES","RELACIONES"));
				
				this.tiposGraficosReportes=Funciones2.getListTiposGraficosReportes();
				this.tiposPaginacion=Funciones2.getListTiposPaginacion(this.isPermisoPaginacionMedioPedido,this.isPermisoPaginacionMedioPedido,this.isPermisoPaginacionTodoPedido);
				this.tiposSeleccionar=Funciones2.getListTiposSeleccionar();
				this.tiposSeleccionar.addAll(PedidoConstantesFunciones.getTiposSeleccionarPedido());
				
				this.tiposColumnasSelect=PedidoConstantesFunciones.getTiposSeleccionarPedido(true);
				
				this.tiposRelacionesSelect=new ArrayList<Reporte>();								
				
				this.cargarTiposRelacionesSelectPedido();				
				//this.tiposRelacionesSelect=PedidoConstantesFunciones.getTiposRelacionesPedido(true);
				
			} else {
				this.tiposArchivosReportes=new ArrayList<Reporte>();
				this.tiposArchivosReportesDinamico=new ArrayList<Reporte>();
				this.tiposReportes=new ArrayList<Reporte>();
				this.tiposReportesDinamico=new ArrayList<Reporte>();
				this.tiposGraficosReportes=new ArrayList<Reporte>();
				this.tiposPaginacion=new ArrayList<Reporte>();
				this.tiposSeleccionar=new ArrayList<Reporte>();			
				this.tiposColumnasSelect=new ArrayList<Reporte>();	
				this.tiposRelacionesSelect=new ArrayList<Reporte>();	
			}
						
			
			//FUNCIONALIDAD_RELACIONADO
			//if(!this.pedidoSessionBean.getEsGuardarRelacionado()) {
				//SE ENCUENTRA MAS ADELANTE CON ACCIONES POR USUARIO
				//ACCIONES GENERALES Y POR USUARIO
				this.tiposRelaciones=Funciones2.getListTiposRelaciones();
				this.setRelacionesUsuarioPedido();
				
				this.tiposAcciones=Funciones2.getListTiposAcciones(true,false,true);
				this.setAccionesUsuarioPedido(false);	
				
				this.tiposAccionesFormulario=Funciones2.getListTiposAccionesFormulario(true,false,true);							
				this.setAccionesUsuarioPedido(true);	
				
				this.inicializarActualizarBindingtiposArchivosReportesAccionesPedido() ;
			
			/*
			} else {
				this.tiposAcciones=new ArrayList<Reporte>();
				this.tiposAccionesFormulario=new ArrayList<Reporte>();
			}
			*/						
			
			this.inicializarInvalidValues();
						
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			
			
			this.arrOrderBy= new  ArrayList<OrderBy>();
			
			
			this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
			
			
			this.traerValoresTablaOrderBy();			
			
			
			this.isGuardarCambiosEnLote=false;
			this.isCargarCombosDependencia=false;
			
			
			this.detallepedidoLogic=new DetallePedidoLogic(); 
			jasperPrint = null;												
			
			//FK
			
			this.empresaLogic=new EmpresaLogic();
			this.sucursalLogic=new SucursalLogic();
			this.ejercicioLogic=new EjercicioLogic();
			this.periodoLogic=new PeriodoLogic();
			this.anioLogic=new AnioLogic();
			this.mesLogic=new MesLogic();
			this.usuarioLogic=new UsuarioLogic();
			this.monedaLogic=new MonedaLogic();
			this.empleadoLogic=new EmpleadoLogic();
			this.tipoprecioLogic=new TipoPrecioLogic();
			this.formatoLogic=new FormatoLogic();
			this.clienteLogic=new ClienteLogic();
			this.subclienteLogic=new SubClienteLogic();
			this.vendedorLogic=new VendedorLogic();
			this.consultorLogic=new ConsultorLogic();
			this.responsableLogic=new ResponsableLogic();
			this.estadopedidoLogic=new EstadoPedidoLogic();
			this.transporteLogic=new TransporteLogic();
			this.rutatransporteLogic=new RutaTransporteLogic();
			this.tipollamadaLogic=new TipoLlamadaLogic();
			this.transportistaLogic=new TransportistaLogic();
			this.tipocambioLogic=new TipoCambioLogic();
			this.centrocostoLogic=new CentroCostoLogic();
			this.zonaLogic=new ZonaLogic();
			
			//PARAMETROS
			
			
			/*
			if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {		
				hashtableEnv =  Funciones.getHashtableEnv();		
				initialContext = new InitialContext(hashtableEnv);	
			}
			*/
			/*
			if(Constantes.ISUSAEJBREMOTE) {
				pedidoImplementable= (PedidoImplementable) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+PedidoConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBREMOTE);
			} else if(Constantes.ISUSAEJBHOME) {
				pedidoImplementableHome= (PedidoImplementableHome) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+PedidoConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBLOCAL);
			}			
			*/
			
			
			this.pedidos= new ArrayList<Pedido>();
			this.pedidosEliminados= new ArrayList<Pedido>();
						
			this.isEsNuevoPedido=false;
			this.esParaAccionDesdeFormularioPedido=false;
			this.isEsMantenimientoRelacionesRelacionadoUnico=false;
			this.isEsMantenimientoRelaciones=false;
			this.isEsMantenimientoRelacionado=false;
			this.isContieneImagenes=false;
			
			
			
			
			//BUSQUEDA INTERNA FK
			this.idEmpleadoActual=0L;
			this.idClienteActual=0L;
			this.idVendedorActual=0L;
			this.idTipoCambioActual=0L;
			this.idCentroCostoActual=0L;
			
			//INICIALIZAR LISTAS FK
			
			this.empresasForeignKey=new ArrayList<Empresa>() ;
			this.sucursalsForeignKey=new ArrayList<Sucursal>() ;
			this.ejerciciosForeignKey=new ArrayList<Ejercicio>() ;
			this.periodosForeignKey=new ArrayList<Periodo>() ;
			this.aniosForeignKey=new ArrayList<Anio>() ;
			this.messForeignKey=new ArrayList<Mes>() ;
			this.usuariosForeignKey=new ArrayList<Usuario>() ;
			this.monedasForeignKey=new ArrayList<Moneda>() ;
			this.empleadosForeignKey=new ArrayList<Empleado>() ;
			this.tipopreciosForeignKey=new ArrayList<TipoPrecio>() ;
			this.formatosForeignKey=new ArrayList<Formato>() ;
			this.clientesForeignKey=new ArrayList<Cliente>() ;
			this.subclientesForeignKey=new ArrayList<SubCliente>() ;
			this.vendedorsForeignKey=new ArrayList<Vendedor>() ;
			this.consultorsForeignKey=new ArrayList<Consultor>() ;
			this.responsablesForeignKey=new ArrayList<Responsable>() ;
			this.estadopedidosForeignKey=new ArrayList<EstadoPedido>() ;
			this.transportesForeignKey=new ArrayList<Transporte>() ;
			this.rutatransportesForeignKey=new ArrayList<RutaTransporte>() ;
			this.tipollamadasForeignKey=new ArrayList<TipoLlamada>() ;
			this.transportistasForeignKey=new ArrayList<Transportista>() ;
			this.tipocambiosForeignKey=new ArrayList<TipoCambio>() ;
			this.centrocostosForeignKey=new ArrayList<CentroCosto>() ;
			this.zonasForeignKey=new ArrayList<Zona>() ;
			
			
			
			
			if(blncargarCombostrForeignKey) {
				this.cargarCombosForeignKeyPedido(this.isCargarCombosDependencia);
			}
			
			this.cargarCombosParametroPedido();
			
			
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.pedidoSessionBean.getEsGuardarRelacionado()) {
				this.onLoad();
			}
						
			PedidoBeanSwingJInternalFrameAdditional.RecargarVentanaSegunOpcion(this,opcionActual);
			
			/*
			if(blnCargarInformacionInicial) {
				this.recargarInformacion();
			}
			*/
			//this.iNumeroPaginacionPagina=0;
			//this.iNumeroPaginacion=PedidoConstantesFunciones.INUMEROPAGINACION;
			
			this.actualizarEstadoCeldasBotonesPedido("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			//SOLO LA PRIMERA VEZ HACE LOS BINDINGS, SOLO AHI FUNCIONA
			this.inicializarActualizarBindingPedido(true); 
			
			//SE REDIMENSIONA SINO NO SE ACTUALIZA
			this.redimensionarTablaDatos();
			
			
			this.initActions();
			
			;
						
			if(this.jInternalFrameDetalleFormPedido!=null) {//if(this.conCargarFormDetalle) {
				this.cargarMenuRelaciones();
			}
			
			//OBLIGA CARGAR DETALLE, MEJOR DESHABILITAR, FALTA TALVEZ PONER EN SELECCIONAR
			//MAYBE
			//this.updateControlesFormularioPedido();
			
			if(!this.conCargarMinimo) {
				this.updateBusquedasFormularioPedido();
			}
			
			PedidoBeanSwingJInternalFrameAdditional.CargaInicial(this, "NORMAL", null);
			
			
			//SE REALIZA ESTO PARA QUE SE PUEDA RECORRER TAB SIN IMPORTAR ORDEN
			Boolean existeTabBusqueda=false;
			
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				
				for(int i=0; i<this.jTabbedPaneBusquedasPedido.getTabCount(); i++) {
					this.jTabbedPaneBusquedasPedido.setSelectedIndex(i);
						
					if(!existeTabBusqueda) {
						existeTabBusqueda=true;
					}
				}
					
				if(existeTabBusqueda) {
					this.jTabbedPaneBusquedasPedido.setSelectedIndex(0);
				}	
				
				
			}
			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.commitNewConnexionToDeep();
			}
			
			
			if(Constantes2.ISDEVELOPING2) {
				end_time = System.currentTimeMillis();			
				String sTipo="Load Ventana";
				Funciones2.getMensajeTiempoEjecucion(start_time, end_time, sTipo,false);
			}  
			
			this.finishProcessPedido(true);
			
			this.dEnd=(double)System.currentTimeMillis();
			
			this.dDif=this.dEnd - this.dStart;
			
			if(Constantes.ISDEVELOPING) {
				System.out.println("Tiempo(ms) Carga Pedido: " + this.dDif); 
			}
			
			this.permiteRecargarForm=true;
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.closeNewConnexionToDeep();
			}
		}	 
    }
	
	public void cargarTiposRelacionesSelectPedido() {
		Reporte reporte=new Reporte();
		
	

		reporte=new Reporte();
		reporte.setsCodigo(DetallePedidoConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(DetallePedidoConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);
	}
	
	
	
	public void jTabbedPaneChangeListenerGeneral(String sTipo,ChangeEvent evt) { 	  
		Boolean procesaCargarParteTab=false;
			
		try {
			int iIndex=0;		    			
			String sTitle="";
			
			//TABBED PANE RELACIONES
			if(sTipo.equals("RelacionesPedido")) {
				iIndex=this.jInternalFrameDetalleFormPedido.jTabbedPaneRelacionesPedido.getSelectedIndex();		    
			
				sTitle=this.jInternalFrameDetalleFormPedido.jTabbedPaneRelacionesPedido.getTitleAt(iIndex);
				
				Integer intSelectedRow = 0;	
			
				intSelectedRow = this.jTableDatosPedido.getSelectedRow();	
				
				

				if(sTitle.equals("Detalle Pedidos")) {
					if(!DetallePedidoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessPedido();

						this.cargarParteTabPanelRelacionadaDetallePedido(iIndex,intSelectedRow);
					}
					
				}
				
			}
			
			//TABBED PANE RELACIONES FIN(EXTRA TAB)
			;
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		} finally {
			if(procesaCargarParteTab) {				
				this.finishProcessPedido();	
			}
		}
    }
	
	

	public void cargarParteTabPanelRelacionadaDetallePedido(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormPedido.cargarSessionConBeanSwingJInternalFrameDetallePedido(false,true,iIndex);
		this.jButtonDetallePedidoActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaDetallePedido();

		//this.jTabbedPaneRelacionesPedido.updateUI();
		//this.jTabbedPaneRelacionesPedido.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesPedido.setSelectedIndex(iIndex);


	}
	
	public void jButtonRelacionActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
				 if(sTipo.equals("DetallePedido")) {
				int row=this.jTableDatosPedido.getSelectedRow();
				jButtonDetallePedidoActionPerformed(evt,row,true,false,null);
				}
  		} catch(Exception e) {
  			e.printStackTrace();
  		}
    }
	
	public void cargarMenuRelaciones() {	
		JMenuItem jmenuItem= new JMenuItem("General");
		String sLabelMenu="";
		
		if(!this.pedidoSessionBean.getEsGuardarRelacionado()) {
			for(Reporte reporte:this.tiposRelaciones) {
			

				if(reporte.getsCodigo().equals("Detalle Pedido")) {

					if(this.isTienePermisosDetallePedido && this.pedidoConstantesFunciones.mostrarDetallePedidoPedido && !PedidoConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Detalle Pedidos"+"("+DetallePedidoConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Detalle Pedidos");

						if(pedidoConstantesFunciones.resaltarDetallePedidoPedido!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(pedidoConstantesFunciones.resaltarDetallePedidoPedido);
						}

						jmenuItem.setEnabled(this.pedidoConstantesFunciones.activarDetallePedidoPedido);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"DetallePedido"));

						

						this.jInternalFrameDetalleFormPedido.jmenuDetallePedido.add(jmenuItem);

						
					}

					continue;
				}
			}
		}
	}		
	
	public void cargarCombosForeignKeyPedido(Boolean cargarCombosDependencia) throws Exception {   
		this.cargarCombosForeignKeyPedido(cargarCombosDependencia,true,true);
	}
	
	//CARGAR COMBOS EN LOTE
	public void cargarCombosForeignKeyPedido(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales) throws Exception {   
		this.cargarCombosTodosForeignKeyPedidoListas(cargarCombosDependencia);
				
		this.addItemDefectoCombosTodosForeignKeyPedido();
		
		this.cargarCombosFrameForeignKeyPedido();						
		
		if(conInitActions) {
			this.initActionsCombosTodosForeignKeyPedido();
		}
		
		if(conSetVariablesGlobales) {
			this.setVariablesGlobalesCombosForeignKeyPedido();
		}
	}
	
	

	public void cargarCombosForeignKeyAnio(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyAnioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyAnio();
				this.cargarCombosFrameAniosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaAnio(this.aniosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyMes(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyMesListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyMes();
				this.cargarCombosFrameMessForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaMes(this.messForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEmpleado(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyEmpleadoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyEmpleado();
				this.cargarCombosFrameEmpleadosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaEmpleado(this.empleadosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoPrecio(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoPrecioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoPrecio();
				this.cargarCombosFrameTipoPreciosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTipoPrecio(this.tipopreciosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyFormato(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyFormatoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyFormato();
				this.cargarCombosFrameFormatosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaFormato(this.formatosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCliente(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyClienteListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCliente();
				this.cargarCombosFrameClientesForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaCliente(this.clientesForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeySubCliente(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeySubClienteListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeySubCliente();
				this.cargarCombosFrameSubClientesForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaSubCliente(this.subclientesForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyVendedor(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyVendedorListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyVendedor();
				this.cargarCombosFrameVendedorsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaVendedor(this.vendedorsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyConsultor(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyConsultorListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyConsultor();
				this.cargarCombosFrameConsultorsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaConsultor(this.consultorsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyResponsable(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyResponsableListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyResponsable();
				this.cargarCombosFrameResponsablesForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaResponsable(this.responsablesForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEstadoPedido(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyEstadoPedidoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyEstadoPedido();
				this.cargarCombosFrameEstadoPedidosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaEstadoPedido(this.estadopedidosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransporte(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTransporteListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTransporte();
				this.cargarCombosFrameTransportesForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTransporte(this.transportesForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyRutaTransporte(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyRutaTransporteListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyRutaTransporte();
				this.cargarCombosFrameRutaTransportesForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaRutaTransporte(this.rutatransportesForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoLlamada(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoLlamadaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoLlamada();
				this.cargarCombosFrameTipoLlamadasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTipoLlamada(this.tipollamadasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransportista(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTransportistaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTransportista();
				this.cargarCombosFrameTransportistasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTransportista(this.transportistasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoCambio(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoCambioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoCambio();
				this.cargarCombosFrameTipoCambiosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTipoCambio(this.tipocambiosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCentroCosto(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCentroCostoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCentroCosto();
				this.cargarCombosFrameCentroCostosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaCentroCosto(this.centrocostosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyZona(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyZonaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyZona();
				this.cargarCombosFrameZonasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaZona(this.zonasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void jButtonNuevoPedidoActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.FORM_RECARGAR;
			String sTipo="NUEVO_NORMAL";
			
			this.estaModoNuevo=true;
			
			if(this.pedidoSessionBean.getConGuardarRelaciones()) {
				this.dStart=(double)System.currentTimeMillis();
			}
				
			//if(this.esUsoDesdeHijo) {
			//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			//}
											
			if(this.jInternalFrameDetalleFormPedido==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}			
				
			PedidoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.pedido,new Object(),this.pedidoParameterGeneral,this.pedidoReturnGeneral);
			
			
			if(jTableDatosPedido.getRowCount()>=1) {
				jTableDatosPedido.removeRowSelectionInterval(0, jTableDatosPedido.getRowCount()-1);						
			}
			
			this.isEsNuevoPedido=true;
			
			//ESTABLECE SI ES RELACIONADO O NO 
			this.habilitarDeshabilitarTipoMantenimientoPedido(esRelaciones);
			
			this.nuevoPreparar(false); 
			this.habilitarDeshabilitarControlesPedido(true);			
			//this.pedido=new Pedido();
			//this.pedido.setIsChanged(true);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesPedido(false) ;						
			 
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualPedido() ;
			
			if(PedidoJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetallePedido(esRelaciones);
			}
					
			//Se Duplica, sin sentido
			//this.actualizarInformacion("EVENTO_NUEVO",false,this.pedido);	
			this.actualizarInformacion("INFO_PADRE",false,this.pedido);				
			
			PedidoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.pedido,new Object(),this.pedidoParameterGeneral,this.pedidoReturnGeneral);
			
			if(this.pedidoSessionBean.getConGuardarRelaciones()) {
				this.dEnd=(double)System.currentTimeMillis();					
				this.dDif=this.dEnd - this.dStart;
					
				if(Constantes.ISDEVELOPING) {
					System.out.println("Tiempo(ms) Nuevo Preparar Pedido: " + this.dDif); 
				}
			}
			
			//false para que pueda generar eventos
			this.estaModoNuevo=false;
							
			//Con this.estaModoNuevo=false;, se permite actualizar y usar eventos control al mismo tiempo (FuncionTipo.LAST)			
			PedidoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.LAST,ControlTipo.FORM,EventoTipo.CLIC,EventoSubTipo.NEW,sTipo,this.pedido,new Object(),this.pedidoParameterGeneral,this.pedidoReturnGeneral);
			
		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;			
		}
	}
	
	public void jButtonDuplicarPedidoActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			Boolean soloDuplicarUno=false;
			Boolean conSeleccionarFilaTabla=false;
			
			this.estaModoNuevo=true;
			this.estaModoDuplicar=true;
			
			ArrayList<Pedido> pedidosSeleccionados=new ArrayList<Pedido>();
			int intSelectedRow =-1;
			Integer iNumRowsSeleccionados=0;
			int[] arrNumRowsSeleccionados=null;
			
			//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
			if(conSeleccionarFilaTabla) {
				arrNumRowsSeleccionados=this.jTableDatosPedido.getSelectedRows();
				iNumRowsSeleccionados=this.jTableDatosPedido.getSelectedRows().length;			
			}
			
			pedidosSeleccionados=this.getPedidosSeleccionados(false);
				
			if((soloDuplicarUno && iNumRowsSeleccionados.equals(1)) || !soloDuplicarUno) {
				//LO HACE NUEVOPREPARAR
				//this.iIdNuevoPedido--;			
				//Pedido pedidoAux= new Pedido();			
				//pedidoAux.setId(this.iIdNuevoPedido);																
				
				//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
				//Pedido pedidoOrigen=new Pedido();
				//for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {				
				
				for(Pedido pedidoOrigen : pedidosSeleccionados) {
					if(conSeleccionarFilaTabla) {
						if(!soloDuplicarUno) {
							//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
							//intSelectedRow =iNumRowSeleccionado;
						} else {
							intSelectedRow = this.jTableDatosPedido.getSelectedRow();
						}
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							pedidoOrigen =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidoOrigen =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
						}
					}
					
					this.aumentarTamanioFilaNuevaTablaPedido();
					
					if(this.conTotales) {
						this.quitarFilaTotales();
					}
					
					this.nuevoPreparar(true);
					
					this.pedido.setsType("DUPLICADO");
					
					this.setCopiarVariablesObjetosPedido(pedidoOrigen,this.pedido,true,true);
					
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
					
					//LO HACE NUEVOPREPARAR
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.pedidoLogic.getPedidos().add(this.pedidoAux);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.pedidos.add(this.pedidoAux);				
					}
					*/
				}
				
				this.inicializarActualizarBindingTablaPedido(false);
				
				this.jTableDatosPedido.setRowSelectionInterval(this.getIndiceNuevoPedido(), this.getIndiceNuevoPedido());
				
				int iLastRow =  this.jTableDatosPedido.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosPedido.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosPedido.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaPedido(false);
				}
			} else {
				throw new Exception("DEBE ESTAR SELECCIONADO 1 REGISTRO");
			}
			
		} catch(Exception e) {			
			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
		
		} finally {
			this.estaModoNuevo=false;
			this.estaModoDuplicar=false;
		}
	}
	
	public void jButtonCopiarPedidoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			Boolean conSeleccionarFilaTabla=false;
			Integer iNumRowsSeleccionados=0;
			int[] intSelectedRows =null;
			int intSelectedRow =0;
			
			this.estaModoCopiar=true;
			
			ArrayList<Pedido> pedidosSeleccionados=new ArrayList<Pedido>();									
		
			Pedido pedidoOrigen=new Pedido();
			Pedido pedidoDestino=new Pedido();
				
			pedidosSeleccionados=this.getPedidosSeleccionados(false);
			
			if(conSeleccionarFilaTabla) {
				iNumRowsSeleccionados=this.jTableDatosPedido.getSelectedRows().length;	
			}
			
			if(iNumRowsSeleccionados.equals(2) || pedidosSeleccionados.size()==2) {
				if(conSeleccionarFilaTabla) {
					intSelectedRows =this.jTableDatosPedido.getSelectedRows();
					intSelectedRow = intSelectedRows[0];	
									
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidoOrigen =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						pedidoOrigen =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					intSelectedRow = intSelectedRows[1];
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidoDestino =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						pedidoDestino =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				}
				
				pedidoOrigen =pedidosSeleccionados.get(0);
				pedidoDestino =pedidosSeleccionados.get(1);
				
				this.setCopiarVariablesObjetosPedido(pedidoOrigen,pedidoDestino,true,false);
				
				pedidoDestino.setsType("DUPLICADO");
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(pedidoDestino,pedidoLogic.getPedidos());					
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(pedidoDestino,pedidos);
				}
				//ARCHITECTURE
				
				this.inicializarActualizarBindingTablaPedido(false);
				
				//this.jTableDatosPedido.setRowSelectionInterval(this.getIndiceNuevoPedido(), this.getIndiceNuevoPedido());
				
				int iLastRow =  this.jTableDatosPedido.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosPedido.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosPedido.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					//this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaPedido(false);
				}
			} else {
				throw new Exception("DEBEN ESTAR SELECCIONADOS 2 REGISTROS");
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.estaModoCopiar=false;
		}
	}
	
	public void jButtonVerFormPedidoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormPedido==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.jInternalFrameDetalleFormPedido.setSelected(true);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonMostrarOcultarPedidoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			Boolean isVisible=this.jPanelParametrosReportesPedido.isVisible();
			
			//BYDAN_BUSQUEDAS
			
			this.jTabbedPaneBusquedasPedido.setVisible(!isVisible);			
			
			
			this.jPanelParametrosReportesPedido.setVisible(!isVisible);
			this.jPanelPaginacionPedido.setVisible(!isVisible);
			this.jPanelAccionesPedido.setVisible(!isVisible);
							
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarPedidoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.closingInternalFramePedido();
			
			//if(this.jInternalFrameParent==null) {
				//this.dispose();
			/*} else {
				this.setVisible(false);
	        	this.setSelected(false);	
			}*/			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarReporteDinamicoPedidoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameReporteDinamicoPedido();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarImportacionPedidoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameImportacionPedido();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonAbrirOrderByPedidoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			
			this.abrirInicializarFrameOrderByPedido();
			
			this.abrirFrameOrderByPedido();
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarOrderByPedidoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameOrderByPedido();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void abrirFrameDetallePedido(Boolean esRelaciones) throws Exception {	    	        
	    try {
			//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
			//this.jDesktopPane.add(jInternalFrameDetalleFormPedido);
			
			if(!esRelaciones) {
				if(this.jInternalFrameDetalleFormPedido.isMaximum()) {
					this.jInternalFrameDetalleFormPedido.setMaximum(false);
				}								
				
	    		this.jInternalFrameDetalleFormPedido.setSize(this.jInternalFrameDetalleFormPedido.iWidthFormulario,this.jInternalFrameDetalleFormPedido.iHeightFormulario);
	    	} else {
				if(this.iWidthScroll<this.jInternalFrameDetalleFormPedido.iWidthFormularioMaximo) {
	    			this.jInternalFrameDetalleFormPedido.setSize(this.iWidthScroll,this.iHeightScroll);
				} else {
					if(!this.jInternalFrameDetalleFormPedido.isMaximum()) {
						this.jInternalFrameDetalleFormPedido.setMaximum(true);
					}
				}
				
				if(this.jInternalFrameDetalleFormPedido.jContentPaneDetallePedido.getWidth() > this.getWidth()) {
					this.jInternalFrameDetalleFormPedido.jTabbedPaneRelacionesPedido.setMinimumSize(new Dimension(this.jInternalFrameDetalleFormPedido.jContentPaneDetallePedido.getWidth(),PedidoConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormPedido.jTabbedPaneRelacionesPedido.setMaximumSize(new Dimension(this.jInternalFrameDetalleFormPedido.jContentPaneDetallePedido.getWidth(),PedidoConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormPedido.jTabbedPaneRelacionesPedido.setPreferredSize(new Dimension(this.jInternalFrameDetalleFormPedido.jContentPaneDetallePedido.getWidth(),PedidoConstantesFunciones.ALTO_TABPANE_RELACIONES));
					
					Dimension dimension=new Dimension(); 
					
					

					if(DetallePedidoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaDetallePedido();
					}
					
				}
	    	}
			
		
	       	this.jInternalFrameDetalleFormPedido.setVisible(true);
	        this.jInternalFrameDetalleFormPedido.setSelected(true);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirInicializarFrameOrderByPedido() throws Exception {	    	        
	    try {
			if(this.jInternalFrameOrderByPedido==null) {
				
				if(!this.conCargarMinimo) {
					this.jInternalFrameOrderByPedido=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByPedido,false,this);
				} else {
					this.jInternalFrameOrderByPedido=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByPedido,true,this);
				}
				
				this.jDesktopPane.add(this.jInternalFrameOrderByPedido);
				this.jInternalFrameOrderByPedido.setVisible(false);
				this.jInternalFrameOrderByPedido.setSelected(false);
				
				this.jInternalFrameOrderByPedido.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByPedido"));
				
				this.inicializarActualizarBindingTablaOrderByPedido();
			}
		} catch (final Exception e) {
			
		}
	}
	
	
	
	public void abrirInicializarFrameImportacionPedido() throws Exception {	    	        
	    try {
			if(this.jInternalFrameImportacionPedido==null) {
				
				this.jInternalFrameImportacionPedido=new ImportacionJInternalFrame(PedidoConstantesFunciones.SCLASSWEBTITULO,this);			
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionPedido);							
				
				this.jDesktopPane.add(this.jInternalFrameImportacionPedido);
				this.jInternalFrameImportacionPedido.setVisible(false);
				this.jInternalFrameImportacionPedido.setSelected(false);


				this.jInternalFrameImportacionPedido.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionPedido"));
				this.jInternalFrameImportacionPedido.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionPedido"));
				this.jInternalFrameImportacionPedido.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionPedido"));


			}
		} catch (final Exception e) {
			
		}
	}		
	
	
	
	public void abrirInicializarFrameReporteDinamicoPedido() throws Exception {	    	        
	    try {
			
			if(this.jInternalFrameReporteDinamicoPedido==null) {
				this.jInternalFrameReporteDinamicoPedido=new ReporteDinamicoJInternalFrame(PedidoConstantesFunciones.SCLASSWEBTITULO,this);	
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoPedido);	
	
	
				this.jDesktopPane.add(this.jInternalFrameReporteDinamicoPedido);
				this.jInternalFrameReporteDinamicoPedido.setVisible(false);
				this.jInternalFrameReporteDinamicoPedido.setSelected(false);
	
	
	
				this.jInternalFrameReporteDinamicoPedido.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoPedido"));
				this.jInternalFrameReporteDinamicoPedido.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoPedido"));
				this.jInternalFrameReporteDinamicoPedido.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoPedido"));
	
				this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualPedido();
			}

		} catch (final Exception e) {
			
		}
	}	
	
	
	
		

	public void redimensionarTablaPanelRelacionadaDetallePedido() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame.jScrollPanelDatosDetallePedido.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormPedido.jContentPaneDetallePedido.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame.jScrollPanelDatosDetallePedido.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame.jScrollPanelDatosDetallePedido.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame.jScrollPanelDatosDetallePedido.setPreferredSize(dimension);


	}
					
	public void cerrarFrameDetallePedido() throws Exception {	    	        
	    try {
			//this.jDesktopPane.add(jInternalFrameDetalleFormPedido);
			
	       	this.jInternalFrameDetalleFormPedido.setVisible(false);
	        this.jInternalFrameDetalleFormPedido.setSelected(false);
			
			//this.jInternalFrameDetalleFormPedido.dispose();
			//this.jInternalFrameDetalleFormPedido=null;
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirFrameReporteDinamicoPedido() throws Exception {	    	        
	    try {
			
			this.jInternalFrameReporteDinamicoPedido.setVisible(true);
	        this.jInternalFrameReporteDinamicoPedido.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void abrirFrameImportacionPedido() throws Exception {	    	        		
	    try {			
			this.jInternalFrameImportacionPedido.setVisible(true);
	        this.jInternalFrameImportacionPedido.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
	    }		
	}	
	
	
	
	
	
	public void abrirFrameOrderByPedido() throws Exception {	    	        		
	    try {
			this.jInternalFrameOrderByPedido.setVisible(true);
	        this.jInternalFrameOrderByPedido.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameOrderByPedido() throws Exception {	    	        		
	    try {			
			this.jInternalFrameOrderByPedido.setVisible(false);
	        this.jInternalFrameOrderByPedido.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameReporteDinamicoPedido() throws Exception {			
	    try {
			this.jInternalFrameReporteDinamicoPedido.setVisible(false);
	        this.jInternalFrameReporteDinamicoPedido.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameImportacionPedido() throws Exception {	    	        		
	    try {
			this.jInternalFrameImportacionPedido.setVisible(false);
	        this.jInternalFrameImportacionPedido.setSelected(false);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	

				public void abrirFrameTreeVendedor(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeVendedor);
						VendedorBeanSwingJInternalFrame vendedorBeanSwingJInternalFrame=new VendedorBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						vendedorBeanSwingJInternalFrame.setJInternalFrameParent(this);
						vendedorBeanSwingJInternalFrame.jInternalFrameTreeVendedor.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							vendedorBeanSwingJInternalFrame.jInternalFrameTreeVendedor.sTipoBusqueda="Vendedor";
						}

						vendedorBeanSwingJInternalFrame.getTodosVendedorArbol();
						vendedorBeanSwingJInternalFrame.jInternalFrameTreeVendedor.setVendedors(vendedorBeanSwingJInternalFrame.vendedorsArbol);
						vendedorBeanSwingJInternalFrame.jInternalFrameTreeVendedor.CargarTreeVendedor();
						vendedorBeanSwingJInternalFrame.jInternalFrameTreeVendedor.setVisible(true);
						vendedorBeanSwingJInternalFrame.jInternalFrameTreeVendedor.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						vendedorBeanSwingJInternalFrame.jInternalFrameTreeVendedor.jInternalFrameParent=this;
						TitledBorder titledBorderPedido=(TitledBorder)this.jScrollPanelDatosPedido.getBorder();
						TitledBorder titledBorderVendedor=(TitledBorder)vendedorBeanSwingJInternalFrame.jScrollPanelDatosVendedor.getBorder();

						titledBorderVendedor.setTitle(titledBorderPedido.getTitle() + " -> Vendedor");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,vendedorBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(vendedorBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeVendedor(VendedorBeanSwingJInternalFrame jInternalFrameTreeVendedor) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeVendedor);
						jInternalFrameTreeVendedor.setVisible(false);
						jInternalFrameTreeVendedor.setSelected(false);
						//jInternalFrameTreeVendedor.dispose();
						//jInternalFrameTreeVendedor=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}

				public void abrirFrameTreeCentroCosto(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeCentroCosto);
						CentroCostoBeanSwingJInternalFrame centrocostoBeanSwingJInternalFrame=new CentroCostoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						centrocostoBeanSwingJInternalFrame.setJInternalFrameParent(this);
						centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.sTipoBusqueda="CentroCosto";
						}

						centrocostoBeanSwingJInternalFrame.getTodosCentroCostoArbol();
						centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.setCentroCostos(centrocostoBeanSwingJInternalFrame.centrocostosArbol);
						centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.CargarTreeCentroCosto();
						centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.setVisible(true);
						centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.jInternalFrameParent=this;
						TitledBorder titledBorderPedido=(TitledBorder)this.jScrollPanelDatosPedido.getBorder();
						TitledBorder titledBorderCentroCosto=(TitledBorder)centrocostoBeanSwingJInternalFrame.jScrollPanelDatosCentroCosto.getBorder();

						titledBorderCentroCosto.setTitle(titledBorderPedido.getTitle() + " -> Centro Costo");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,centrocostoBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(centrocostoBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeCentroCosto(CentroCostoBeanSwingJInternalFrame jInternalFrameTreeCentroCosto) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeCentroCosto);
						jInternalFrameTreeCentroCosto.setVisible(false);
						jInternalFrameTreeCentroCosto.setSelected(false);
						//jInternalFrameTreeCentroCosto.dispose();
						//jInternalFrameTreeCentroCosto=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}
	
	public void jButtonModificarPedidoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.modificarPedido(evt,-1,false);
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void modificarPedido(ActionEvent evt,int rowIndex,Boolean esRelaciones) throws Exception {   
		try {
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosPedido.getSelectedRow();
			}
			
			this.habilitarDeshabilitarControlesPedido(true);
			//this.isEsNuevoPedido=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.actualizarEstadoCeldasBotonesPedido("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesPedido(false) ;
			
			if(pedidoSessionBean.getConGuardarRelaciones()) {
			

				if(this.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame.detallepedidoSessionBean.getEsGuardarRelacionado() && DetallePedidoJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonDetallePedidoActionPerformed(null,intSelectedRow,false,true,null);
				}
			}
			
			if(PedidoJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetallePedido(esRelaciones);
			}
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualPedido(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarFilaTablaPedidoActual() { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL
			Integer intSelectedRow = this.jTableDatosPedido.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void seleccionarPedido(ActionEvent evt,int rowIndex) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormPedido==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosPedido.getSelectedRow();
			}
			
			//this.habilitarDeshabilitarControlesPedido(true);
			//this.isEsNuevoPedido=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.jInternalFrameParent.setIdCombosCodigoDesdeBusquedaForeignKey(this.pedido.getId(),this.sTipoBusqueda);
			
			this.dispose();
			
			//this.actualizarEstadoCeldasBotonesPedido("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			/*
			this.inicializarActualizarBindingBotonesPedido(false) ;
			
			if(PedidoJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetallePedido(esRelaciones);
			}
			*/
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualPedido(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void setIdCombosCodigoDesdeBusquedaForeignKey(Long id,String sType)throws Exception{
		
		try {
			
			if(sType.equals("Empleado")) {
				if(!this.pedidoConstantesFunciones.cargarid_empleadoPedido) {
					this.cargarCombosEmpleadosForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingPedido(false,false);
					this.cargarCombosFrameEmpleadosForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_empleado (id);

				this.recargarComboTablaEmpleado(this.empleadosForeignKey);

			}
			
			if(sType.equals("Cliente")) {
				if(!this.pedidoConstantesFunciones.cargarid_clientePedido) {
					this.cargarCombosClientesForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingPedido(false,false);
					this.cargarCombosFrameClientesForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_cliente (id);

				this.recargarComboTablaCliente(this.clientesForeignKey);

			}
			
			if(sType.equals("Vendedor")) {
				if(!this.pedidoConstantesFunciones.cargarid_vendedorPedido) {
					this.cargarCombosVendedorsForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingPedido(false,false);
					this.cargarCombosFrameVendedorsForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_vendedor (id);

				this.recargarComboTablaVendedor(this.vendedorsForeignKey);

			}
			
			if(sType.equals("TipoCambio")) {
				if(!this.pedidoConstantesFunciones.cargarid_tipo_cambioPedido) {
					this.cargarCombosTipoCambiosForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingPedido(false,false);
					this.cargarCombosFrameTipoCambiosForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_tipo_cambio (id);

				this.recargarComboTablaTipoCambio(this.tipocambiosForeignKey);

			}
			
			if(sType.equals("CentroCosto")) {
				if(!this.pedidoConstantesFunciones.cargarid_centro_costoPedido) {
					this.cargarCombosCentroCostosForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingPedido(false,false);
					this.cargarCombosFrameCentroCostosForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_centro_costo (id);

				this.recargarComboTablaCentroCosto(this.centrocostosForeignKey);

			}
		} catch(Exception e) {
			throw e;
		}
	}
	
					
	
	public void recargarComboTablaAnio(List<Anio> aniosForeignKey)throws Exception{
		TableColumn tableColumnAnio=this.jTableDatosPedido.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedido,PedidoConstantesFunciones.LABEL_IDANIO));
		TableCellEditor tableCellEditorAnio =tableColumnAnio.getCellEditor();

		AnioTableCell anioTableCellFk=(AnioTableCell)tableCellEditorAnio;

		if(anioTableCellFk!=null) {
			anioTableCellFk.setaniosForeignKey(aniosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosPedido.getSelectedRow();

		//if(intSelectedRow<=0) {
			//anioTableCellFk.setRowActual(intSelectedRow);
			//anioTableCellFk.setaniosForeignKeyActual(aniosForeignKey);
		//}


		if(anioTableCellFk!=null) {
			anioTableCellFk.RecargarAniosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaMes(List<Mes> messForeignKey)throws Exception{
		TableColumn tableColumnMes=this.jTableDatosPedido.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedido,PedidoConstantesFunciones.LABEL_IDMES));
		TableCellEditor tableCellEditorMes =tableColumnMes.getCellEditor();

		MesTableCell mesTableCellFk=(MesTableCell)tableCellEditorMes;

		if(mesTableCellFk!=null) {
			mesTableCellFk.setmessForeignKey(messForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosPedido.getSelectedRow();

		//if(intSelectedRow<=0) {
			//mesTableCellFk.setRowActual(intSelectedRow);
			//mesTableCellFk.setmessForeignKeyActual(messForeignKey);
		//}


		if(mesTableCellFk!=null) {
			mesTableCellFk.RecargarMessForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
			
	
	public void recargarComboTablaEmpleado(List<Empleado> empleadosForeignKey)throws Exception{
		TableColumn tableColumnEmpleado=this.jTableDatosPedido.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedido,PedidoConstantesFunciones.LABEL_IDEMPLEADO));
		TableCellEditor tableCellEditorEmpleado =tableColumnEmpleado.getCellEditor();

		EmpleadoTableCell empleadoTableCellFk=(EmpleadoTableCell)tableCellEditorEmpleado;

		if(empleadoTableCellFk!=null) {
			empleadoTableCellFk.setempleadosForeignKey(empleadosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosPedido.getSelectedRow();

		//if(intSelectedRow<=0) {
			//empleadoTableCellFk.setRowActual(intSelectedRow);
			//empleadoTableCellFk.setempleadosForeignKeyActual(empleadosForeignKey);
		//}


		if(empleadoTableCellFk!=null) {
			empleadoTableCellFk.RecargarEmpleadosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoPrecio(List<TipoPrecio> tipopreciosForeignKey)throws Exception{
		TableColumn tableColumnTipoPrecio=this.jTableDatosPedido.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedido,PedidoConstantesFunciones.LABEL_IDTIPOPRECIO));
		TableCellEditor tableCellEditorTipoPrecio =tableColumnTipoPrecio.getCellEditor();

		TipoPrecioTableCell tipoprecioTableCellFk=(TipoPrecioTableCell)tableCellEditorTipoPrecio;

		if(tipoprecioTableCellFk!=null) {
			tipoprecioTableCellFk.settipopreciosForeignKey(tipopreciosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosPedido.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipoprecioTableCellFk.setRowActual(intSelectedRow);
			//tipoprecioTableCellFk.settipopreciosForeignKeyActual(tipopreciosForeignKey);
		//}


		if(tipoprecioTableCellFk!=null) {
			tipoprecioTableCellFk.RecargarTipoPreciosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaFormato(List<Formato> formatosForeignKey)throws Exception{
		TableColumn tableColumnFormato=this.jTableDatosPedido.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedido,PedidoConstantesFunciones.LABEL_IDFORMATO));
		TableCellEditor tableCellEditorFormato =tableColumnFormato.getCellEditor();

		FormatoTableCell formatoTableCellFk=(FormatoTableCell)tableCellEditorFormato;

		if(formatoTableCellFk!=null) {
			formatoTableCellFk.setformatosForeignKey(formatosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosPedido.getSelectedRow();

		//if(intSelectedRow<=0) {
			//formatoTableCellFk.setRowActual(intSelectedRow);
			//formatoTableCellFk.setformatosForeignKeyActual(formatosForeignKey);
		//}


		if(formatoTableCellFk!=null) {
			formatoTableCellFk.RecargarFormatosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCliente(List<Cliente> clientesForeignKey)throws Exception{
		TableColumn tableColumnCliente=this.jTableDatosPedido.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedido,PedidoConstantesFunciones.LABEL_IDCLIENTE));
		TableCellEditor tableCellEditorCliente =tableColumnCliente.getCellEditor();

		ClienteTableCell clienteTableCellFk=(ClienteTableCell)tableCellEditorCliente;

		if(clienteTableCellFk!=null) {
			clienteTableCellFk.setclientesForeignKey(clientesForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosPedido.getSelectedRow();

		//if(intSelectedRow<=0) {
			//clienteTableCellFk.setRowActual(intSelectedRow);
			//clienteTableCellFk.setclientesForeignKeyActual(clientesForeignKey);
		//}


		if(clienteTableCellFk!=null) {
			clienteTableCellFk.RecargarClientesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaSubCliente(List<SubCliente> subclientesForeignKey)throws Exception{
		TableColumn tableColumnSubCliente=this.jTableDatosPedido.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedido,PedidoConstantesFunciones.LABEL_IDSUBCLIENTE));
		TableCellEditor tableCellEditorSubCliente =tableColumnSubCliente.getCellEditor();

		SubClienteTableCell subclienteTableCellFk=(SubClienteTableCell)tableCellEditorSubCliente;

		if(subclienteTableCellFk!=null) {
			subclienteTableCellFk.setsubclientesForeignKey(subclientesForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosPedido.getSelectedRow();

		//if(intSelectedRow<=0) {
			//subclienteTableCellFk.setRowActual(intSelectedRow);
			//subclienteTableCellFk.setsubclientesForeignKeyActual(subclientesForeignKey);
		//}


		if(subclienteTableCellFk!=null) {
			subclienteTableCellFk.RecargarSubClientesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaVendedor(List<Vendedor> vendedorsForeignKey)throws Exception{
		TableColumn tableColumnVendedor=this.jTableDatosPedido.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedido,PedidoConstantesFunciones.LABEL_IDVENDEDOR));
		TableCellEditor tableCellEditorVendedor =tableColumnVendedor.getCellEditor();

		VendedorTableCell vendedorTableCellFk=(VendedorTableCell)tableCellEditorVendedor;

		if(vendedorTableCellFk!=null) {
			vendedorTableCellFk.setvendedorsForeignKey(vendedorsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosPedido.getSelectedRow();

		//if(intSelectedRow<=0) {
			//vendedorTableCellFk.setRowActual(intSelectedRow);
			//vendedorTableCellFk.setvendedorsForeignKeyActual(vendedorsForeignKey);
		//}


		if(vendedorTableCellFk!=null) {
			vendedorTableCellFk.RecargarVendedorsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaConsultor(List<Consultor> consultorsForeignKey)throws Exception{
		TableColumn tableColumnConsultor=this.jTableDatosPedido.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedido,PedidoConstantesFunciones.LABEL_IDCONSULTOR));
		TableCellEditor tableCellEditorConsultor =tableColumnConsultor.getCellEditor();

		ConsultorTableCell consultorTableCellFk=(ConsultorTableCell)tableCellEditorConsultor;

		if(consultorTableCellFk!=null) {
			consultorTableCellFk.setconsultorsForeignKey(consultorsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosPedido.getSelectedRow();

		//if(intSelectedRow<=0) {
			//consultorTableCellFk.setRowActual(intSelectedRow);
			//consultorTableCellFk.setconsultorsForeignKeyActual(consultorsForeignKey);
		//}


		if(consultorTableCellFk!=null) {
			consultorTableCellFk.RecargarConsultorsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaResponsable(List<Responsable> responsablesForeignKey)throws Exception{
		TableColumn tableColumnResponsable=this.jTableDatosPedido.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedido,PedidoConstantesFunciones.LABEL_IDRESPONSABLE));
		TableCellEditor tableCellEditorResponsable =tableColumnResponsable.getCellEditor();

		ResponsableTableCell responsableTableCellFk=(ResponsableTableCell)tableCellEditorResponsable;

		if(responsableTableCellFk!=null) {
			responsableTableCellFk.setresponsablesForeignKey(responsablesForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosPedido.getSelectedRow();

		//if(intSelectedRow<=0) {
			//responsableTableCellFk.setRowActual(intSelectedRow);
			//responsableTableCellFk.setresponsablesForeignKeyActual(responsablesForeignKey);
		//}


		if(responsableTableCellFk!=null) {
			responsableTableCellFk.RecargarResponsablesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaEstadoPedido(List<EstadoPedido> estadopedidosForeignKey)throws Exception{
		TableColumn tableColumnEstadoPedido=this.jTableDatosPedido.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedido,PedidoConstantesFunciones.LABEL_IDESTADOPEDIDO));
		TableCellEditor tableCellEditorEstadoPedido =tableColumnEstadoPedido.getCellEditor();

		EstadoPedidoTableCell estadopedidoTableCellFk=(EstadoPedidoTableCell)tableCellEditorEstadoPedido;

		if(estadopedidoTableCellFk!=null) {
			estadopedidoTableCellFk.setestadopedidosForeignKey(estadopedidosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosPedido.getSelectedRow();

		//if(intSelectedRow<=0) {
			//estadopedidoTableCellFk.setRowActual(intSelectedRow);
			//estadopedidoTableCellFk.setestadopedidosForeignKeyActual(estadopedidosForeignKey);
		//}


		if(estadopedidoTableCellFk!=null) {
			estadopedidoTableCellFk.RecargarEstadoPedidosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTransporte(List<Transporte> transportesForeignKey)throws Exception{
		TableColumn tableColumnTransporte=this.jTableDatosPedido.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedido,PedidoConstantesFunciones.LABEL_IDTRANSPORTE));
		TableCellEditor tableCellEditorTransporte =tableColumnTransporte.getCellEditor();

		TransporteTableCell transporteTableCellFk=(TransporteTableCell)tableCellEditorTransporte;

		if(transporteTableCellFk!=null) {
			transporteTableCellFk.settransportesForeignKey(transportesForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosPedido.getSelectedRow();

		//if(intSelectedRow<=0) {
			//transporteTableCellFk.setRowActual(intSelectedRow);
			//transporteTableCellFk.settransportesForeignKeyActual(transportesForeignKey);
		//}


		if(transporteTableCellFk!=null) {
			transporteTableCellFk.RecargarTransportesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaRutaTransporte(List<RutaTransporte> rutatransportesForeignKey)throws Exception{
		TableColumn tableColumnRutaTransporte=this.jTableDatosPedido.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedido,PedidoConstantesFunciones.LABEL_IDRUTATRANSPORTE));
		TableCellEditor tableCellEditorRutaTransporte =tableColumnRutaTransporte.getCellEditor();

		RutaTransporteTableCell rutatransporteTableCellFk=(RutaTransporteTableCell)tableCellEditorRutaTransporte;

		if(rutatransporteTableCellFk!=null) {
			rutatransporteTableCellFk.setrutatransportesForeignKey(rutatransportesForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosPedido.getSelectedRow();

		//if(intSelectedRow<=0) {
			//rutatransporteTableCellFk.setRowActual(intSelectedRow);
			//rutatransporteTableCellFk.setrutatransportesForeignKeyActual(rutatransportesForeignKey);
		//}


		if(rutatransporteTableCellFk!=null) {
			rutatransporteTableCellFk.RecargarRutaTransportesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoLlamada(List<TipoLlamada> tipollamadasForeignKey)throws Exception{
		TableColumn tableColumnTipoLlamada=this.jTableDatosPedido.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedido,PedidoConstantesFunciones.LABEL_IDTIPOLLAMADA));
		TableCellEditor tableCellEditorTipoLlamada =tableColumnTipoLlamada.getCellEditor();

		TipoLlamadaTableCell tipollamadaTableCellFk=(TipoLlamadaTableCell)tableCellEditorTipoLlamada;

		if(tipollamadaTableCellFk!=null) {
			tipollamadaTableCellFk.settipollamadasForeignKey(tipollamadasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosPedido.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipollamadaTableCellFk.setRowActual(intSelectedRow);
			//tipollamadaTableCellFk.settipollamadasForeignKeyActual(tipollamadasForeignKey);
		//}


		if(tipollamadaTableCellFk!=null) {
			tipollamadaTableCellFk.RecargarTipoLlamadasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTransportista(List<Transportista> transportistasForeignKey)throws Exception{
		TableColumn tableColumnTransportista=this.jTableDatosPedido.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedido,PedidoConstantesFunciones.LABEL_IDTRANSPORTISTA));
		TableCellEditor tableCellEditorTransportista =tableColumnTransportista.getCellEditor();

		TransportistaTableCell transportistaTableCellFk=(TransportistaTableCell)tableCellEditorTransportista;

		if(transportistaTableCellFk!=null) {
			transportistaTableCellFk.settransportistasForeignKey(transportistasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosPedido.getSelectedRow();

		//if(intSelectedRow<=0) {
			//transportistaTableCellFk.setRowActual(intSelectedRow);
			//transportistaTableCellFk.settransportistasForeignKeyActual(transportistasForeignKey);
		//}


		if(transportistaTableCellFk!=null) {
			transportistaTableCellFk.RecargarTransportistasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoCambio(List<TipoCambio> tipocambiosForeignKey)throws Exception{
		TableColumn tableColumnTipoCambio=this.jTableDatosPedido.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedido,PedidoConstantesFunciones.LABEL_IDTIPOCAMBIO));
		TableCellEditor tableCellEditorTipoCambio =tableColumnTipoCambio.getCellEditor();

		TipoCambioTableCell tipocambioTableCellFk=(TipoCambioTableCell)tableCellEditorTipoCambio;

		if(tipocambioTableCellFk!=null) {
			tipocambioTableCellFk.settipocambiosForeignKey(tipocambiosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosPedido.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipocambioTableCellFk.setRowActual(intSelectedRow);
			//tipocambioTableCellFk.settipocambiosForeignKeyActual(tipocambiosForeignKey);
		//}


		if(tipocambioTableCellFk!=null) {
			tipocambioTableCellFk.RecargarTipoCambiosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCentroCosto(List<CentroCosto> centrocostosForeignKey)throws Exception{
		TableColumn tableColumnCentroCosto=this.jTableDatosPedido.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedido,PedidoConstantesFunciones.LABEL_IDCENTROCOSTO));
		TableCellEditor tableCellEditorCentroCosto =tableColumnCentroCosto.getCellEditor();

		CentroCostoTableCell centrocostoTableCellFk=(CentroCostoTableCell)tableCellEditorCentroCosto;

		if(centrocostoTableCellFk!=null) {
			centrocostoTableCellFk.setcentrocostosForeignKey(centrocostosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosPedido.getSelectedRow();

		//if(intSelectedRow<=0) {
			//centrocostoTableCellFk.setRowActual(intSelectedRow);
			//centrocostoTableCellFk.setcentrocostosForeignKeyActual(centrocostosForeignKey);
		//}


		if(centrocostoTableCellFk!=null) {
			centrocostoTableCellFk.RecargarCentroCostosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaZona(List<Zona> zonasForeignKey)throws Exception{
		TableColumn tableColumnZona=this.jTableDatosPedido.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedido,PedidoConstantesFunciones.LABEL_IDZONA));
		TableCellEditor tableCellEditorZona =tableColumnZona.getCellEditor();

		ZonaTableCell zonaTableCellFk=(ZonaTableCell)tableCellEditorZona;

		if(zonaTableCellFk!=null) {
			zonaTableCellFk.setzonasForeignKey(zonasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosPedido.getSelectedRow();

		//if(intSelectedRow<=0) {
			//zonaTableCellFk.setRowActual(intSelectedRow);
			//zonaTableCellFk.setzonasForeignKeyActual(zonasForeignKey);
		//}


		if(zonaTableCellFk!=null) {
			zonaTableCellFk.RecargarZonasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	

	public void setCombosCodigoDesdeBusquedaid_empleado (Long id) throws Exception {
		this.setActualEmpleadoForeignKey(id,true,"Todos");

	};
	

	public void setCombosCodigoDesdeBusquedaid_cliente (Long id) throws Exception {
		this.setActualClienteForeignKey(id,true,"Todos");

	};
	

	public void setCombosCodigoDesdeBusquedaid_vendedor (Long id) throws Exception {
		this.setActualVendedorForeignKey(id,true,"Todos");

	};
	

	public void setCombosCodigoDesdeBusquedaid_tipo_cambio (Long id) throws Exception {
		this.setActualTipoCambioForeignKey(id,true,"Todos");

	};
	

	public void setCombosCodigoDesdeBusquedaid_centro_costo (Long id) throws Exception {
		this.setActualCentroCostoForeignKey(id,true,"Todos");

	};
	
	public void jButtonActualizarPedidoActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingParametrosReportesPedido(false);
			
			//if(!this.isEsNuevoPedido) {								
				int intSelectedRow = this.jTableDatosPedido.getSelectedRow();	
				
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
			//}
				
			if(PedidoJInternalFrame.ISBINDING_MANUAL_TABLA) {
				this.setVariablesFormularioToObjetoActualPedido(this.pedido,true);
				this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
				
			}
			
			if(this.permiteMantenimiento(this.pedido)) {	
				this.actualizar();
				
				if(!this.isGuardarCambiosEnLote && !this.pedidoSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
					
					this.isEsNuevoPedido=true;
					this.inicializarActualizarBindingTablaPedido(false);
					this.isEsNuevoPedido=false;
				
				} else {					
					
					//PARA RELACIONADO ACTUALIZAR FILA TOTALES
					this.isEsNuevoPedido=true;
					this.procesoActualizarFilaTotales(false,"MANTENIMIENTO");
					this.isEsNuevoPedido=false;
				}
						
								
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesPedido(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualPedido(false);
				
				this.habilitarDeshabilitarControlesPedido(false);
			
												
				
				if(PedidoJInternalFrame.CON_DATOS_FRAME) {
					if(!this.isPostAccionSinCerrar) {
						this.cerrarFrameDetallePedido();
					}
				}
				
				if(this.isPostAccionNuevo) {
					this.jButtonNuevoPedidoActionPerformed(evt,pedidoSessionBean.getConGuardarRelaciones());
				} else {
					if(this.isPostAccionSinCerrar) {
						Integer intSelectedRowActual=this.getIndiceActualPedido(this.pedido,intSelectedRow);
						
						if(intSelectedRow>-1) {
							this.jTableDatosPedido.setRowSelectionInterval(intSelectedRowActual, intSelectedRowActual);
							this.jButtonIdActionPerformed(evt,intSelectedRowActual,pedidoSessionBean.getConGuardarRelaciones(),false);
						}
					}
				}
				
				this.cancelar(false);
				
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.commitNewConnexionToDeep();
			}
			
			
			if(this.jInternalFrameParent!=null) { //&& this.isEsMantenimientoRelacionado) {
				Boolean esUsoDesdeHijoLocal=true;
				String sTipo="Formulario";
				Boolean conIrServidorAplicacionParent=false;
				Long id=this.pedido.getId();
				ArrayList<String> arrClasses=new ArrayList<String>();
				
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();
				
				generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
				generalEntityParameterGeneral.setsDominio("Formulario");
				generalEntityParameterGeneral.setsDominioTipo(Pedido.class.getName());
				
				this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Pedido.class.getName(),sTipo,"FORMULARIO",esControlTabla,conIrServidorAplicacionParent,
					id,this, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.FORM,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
					evt,generalEntityParameterGeneral,this);
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonEliminarPedidoActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.getNewConnexionToDeep("");
			}
			
			int intSelectedRow = this.jTableDatosPedido.getSelectedRow();	       
							
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
				this.pedido.setIsDeleted(true);
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
				this.pedido.setIsDeleted(true);
			}
			//ARCHITECTURE
			
			if(this.permiteMantenimiento(this.pedido)) {
				this.eliminar();
				
				if(!this.isGuardarCambiosEnLote && !this.pedidoSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
				}
				
				((PedidoModel) this.jTableDatosPedido.getModel()).fireTableRowsDeleted(intSelectedRow,intSelectedRow);
				
				this.isEsNuevoPedido=true;
				this.inicializarActualizarBindingTablaPedido(false);
				this.isEsNuevoPedido=false;									
					
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesPedido(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualPedido(false);
				
				this.habilitarDeshabilitarControlesPedido(false);
				
				
				
				if(PedidoJInternalFrame.CON_DATOS_FRAME) {
					this.cerrarFrameDetallePedido();
				}
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.closeNewConnexionToDeep();
			}
		}		
	}
		
	public void jButtonCancelarPedidoActionPerformed(ActionEvent evt) throws Exception {                                         	   	       
	  	try {
			if(jTableDatosPedido.getRowCount()>=1) {
				jTableDatosPedido.removeRowSelectionInterval(0, jTableDatosPedido.getRowCount()-1);						
			}
						
			this.invalidValues=new InvalidValue[0];
			this.habilitarDeshabilitarControlesPedido(false);
			this.cancelar(true);			
			this.inicializarActualizarBindingTablaPedido(false);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesPedido(false) ;
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualPedido(false) ;
			
			this.isEsNuevoPedido=false;
			
			if(PedidoJInternalFrame.CON_DATOS_FRAME) {
				this.cerrarFrameDetallePedido();
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonGuardarCambiosPedidoActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.getNewConnexionToDeep("");
			}
			
			//this.estaModoGuardarCambios=true;
			
	    	this.guardarCambios();
			
			if(!this.isErrorGuardar) {
				this.procesarBusqueda(this.sAccionBusqueda);
				
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingPedido(false);
				
				//SI ES MANUAL
				if(PedidoJInternalFrame.ISBINDING_MANUAL) {				
					//this.inicializarActualizarBindingManualPedido();				
				}
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.closeNewConnexionToDeep();
			}
			
			//this.estaModoGuardarCambios=false;
		}
	}
	
	public void jButtonNuevoGuardarCambiosPedidoActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			this.estaModoNuevo=true;
			this.estaModoNuevoGuardarCambios=true;
			
			//LO HACE NUEVOPREPARAR
			//this.iIdNuevoPedido--;			
			//Pedido pedidoAux= new Pedido();			
			//pedidoAux.setId(this.iIdNuevoPedido);
			
			if(this.jInternalFrameDetalleFormPedido==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.aumentarTamanioFilaNuevaTablaPedido();
			
			if(this.conTotales) {
				this.quitarFilaTotales();
			}
			
			this.nuevoPreparar(true);
			
			this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
			
			this.pedido.setsType("NUEVO_GUARDAR_CAMBIOS");
			
			//LO HACE NUEVOPREPARAR
			/*
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				this.pedidoLogic.getPedidos().add(this.pedidoAux);
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				this.pedidos.add(this.pedidoAux);				
			}
			*/
			
			this.inicializarActualizarBindingTablaPedido(false);
			
			this.jTableDatosPedido.setRowSelectionInterval(this.getIndiceNuevoPedido(), this.getIndiceNuevoPedido());
			
			int iLastRow =  this.jTableDatosPedido.getRowCount () - 1;
			Rectangle rectangle = this.jTableDatosPedido.getCellRect(iLastRow, 0, true);
			
			this.jTableDatosPedido.scrollRectToVisible(rectangle);
			
			//FILA TOTALES
			if(this.conTotales) {
				this.crearFilaTotales();
				
				this.inicializarActualizarBindingTablaPedido(false);
			}

		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;
			this.estaModoNuevoGuardarCambios=false;
		}
	}		
	
	public void jButtonRecargarInformacionPedidoActionPerformed(ActionEvent evt) throws Exception {    		
		try {
			this.iNumeroPaginacionPagina=0;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingPedido(false,false);
			
	    	this.recargarInformacion();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingPedido(false);
			
			//SI ES MANUAL
			if(PedidoJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualPedido();
			}
			
			//this.abrirFrameTreePedido();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.closeNewConnexionToDeep();
			}
		}	
	}
	
	
	public void jButtonGenerarImportacionPedidoActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedReader bufferedReader = null;
		String sXmlStringFile="";
		String sPath="";
		this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
		DatoGeneralMinimo datoGeneralMinimo=new DatoGeneralMinimo();
		String sLine="";
		
		try {			
			if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR IMPORTACION DE PedidoS ?", "MANTENIMIENTO DE Pedido", JOptionPane.OK_CANCEL_OPTION) == 0) {
				bufferedReader = new BufferedReader(new FileReader(this.jInternalFrameImportacionPedido.getFileImportacion().getAbsolutePath()));
								
				while ((sLine = bufferedReader.readLine()) != null) {
					datoGeneralMinimo=new DatoGeneralMinimo();
					datoGeneralMinimo.setsDescripcion(sLine);
					
					this.arrDatoGeneralMinimos.add(datoGeneralMinimo);
				}
				
				this.actualizarParametrosGeneralPedido();
						
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {						
					this.pedidoReturnGeneral=pedidoLogic.procesarImportacionPedidosWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this.arrDatoGeneralMinimos,this.pedidoParameterGeneral);
						
				} else if(Constantes.ISUSAEJBREMOTE) {
						
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
						
				this.procesarPedidoReturnGeneral();
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedReader != null) {
				bufferedReader.close();
			}	
		}				
	}
	
	
	
	public void jButtonAbrirImportacionPedidoActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {
			int iReturnArchivo = this.jInternalFrameImportacionPedido.getjFileChooserImportacion().showOpenDialog(this);
 
            if (iReturnArchivo == JFileChooser.APPROVE_OPTION) {
            	this.jInternalFrameImportacionPedido.setFileImportacion(this.jInternalFrameImportacionPedido.getjFileChooserImportacion().getSelectedFile());
            	
				this.jInternalFrameImportacionPedido.getjTextFieldPathArchivoImportacion().setText(this.jInternalFrameImportacionPedido.getFileImportacion().getName());
				
				//System.out.println("ARCHIVO ESCOGIDO: "+this.fileImportacionPedido.getName());
				
            } else {
                //System.out.println("CANCELAR SELECCION");
				this.jInternalFrameImportacionPedido.getjTextFieldPathArchivoImportacion().setText("SELECCION CANCELADA");
            }			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}		
	}
	
	
	public void jButtonGenerarReporteDinamicoPedidoActionPerformed(ActionEvent evt) throws Exception {    		
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {	
		
		ArrayList<Pedido> pedidosSeleccionados=new ArrayList<Pedido>();		

		pedidosSeleccionados=this.getPedidosSeleccionados(true);
		
		
		this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoPedido.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();
		
		this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoPedido.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
		
		
		this.sTipoArchivoReporte=this.sTipoArchivoReporteDinamico;
		
		//this.sTipoReporteExtra="Base";
		
			InputStream reportFile=null;
			InputStream imageFile=null;
			
			imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		
			reportFile = AuxiliarReportes.class.getResourceAsStream("PedidoBaseDesign.jrxml");	
			
			sPath=this.parametroGeneralUsuario.getpath_exportar()+"PedidoBaseDesign.jrxml";
			
			sXmlStringFile=Funciones2.getStringFromInputStream(reportFile);
						
			bufferedWriter = new BufferedWriter(new FileWriter(sPath));
			
			
			sXmlStringFile=this.actualizarReporteDinamico(sXmlStringFile);
			
			
			bufferedWriter.write(sXmlStringFile);
			
			bufferedWriter.close();
			
			try{JasperCompileManager.compileReportToFile(sPath);}catch(Exception e){e.printStackTrace();}
			
			this.actualizarVariablesTipoReporte(false,true,false,sPath);
			
			/*
			this.esReporteDinamico=true;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");
			this.sTipoReporteExtra="";
			*/
			
			this.generarReportePedidos("Todos",pedidosSeleccionados );

			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.pedidoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				//DEBE APARECER EL REPORTE DIRECTAMENTE
				//JOptionPane.showMessageDialog(this,"GENERADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Pedido",JOptionPane.INFORMATION_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}
	}		
	
	
	public String actualizarReporteDinamico(String sXmlStringFile) {				
		Reporte reporte=new Reporte();
		Integer iAnchoMaximoVertical=535;//781,782
		Integer iAnchoMaximoHorizontal=782;
		Integer iAnchoSum=0;
		Integer iAnchoColumna=0;
		
		Integer iAnchoMargenes=60;
		String sWidthGrafico="535";
		
		for(int index:this.jInternalFrameReporteDinamicoPedido.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoPedido.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case PedidoConstantesFunciones.LABEL_IDEMPRESA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Empresa_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Empresa_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Empresa_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Empresa_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoConstantesFunciones.LABEL_IDSUCURSAL:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Sucursal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Sucursal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Sucursal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Sucursal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoConstantesFunciones.LABEL_IDEJERCICIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Ejercicio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Ejercicio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Ejercicio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Ejercicio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoConstantesFunciones.LABEL_IDPERIODO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Periodo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Periodo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Periodo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Periodo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoConstantesFunciones.LABEL_IDANIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Anio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Anio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Anio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Anio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoConstantesFunciones.LABEL_IDMES:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Mes_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Mes_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Mes_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Mes_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoConstantesFunciones.LABEL_IDUSUARIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Usuario_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Usuario_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Usuario_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Usuario_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoConstantesFunciones.LABEL_NUMERO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_mero_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_mero_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_mero_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_mero_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoConstantesFunciones.LABEL_PREIMPRESO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_eImpreso_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_eImpreso_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_eImpreso_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_eImpreso_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoConstantesFunciones.LABEL_FECHAEMISION:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_chaEmision_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_chaEmision_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_chaEmision_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_chaEmision_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoConstantesFunciones.LABEL_FECHAENTREGA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_chaEntrega_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_chaEntrega_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_chaEntrega_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_chaEntrega_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoConstantesFunciones.LABEL_IDMONEDA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Moneda_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Moneda_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Moneda_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Moneda_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoConstantesFunciones.LABEL_COTIZACION:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_tizacion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_tizacion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_tizacion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_tizacion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoConstantesFunciones.LABEL_IDEMPLEADO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Empleado_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Empleado_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Empleado_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Empleado_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoConstantesFunciones.LABEL_IDTIPOPRECIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoPrecio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoPrecio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoPrecio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoPrecio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoConstantesFunciones.LABEL_IDFORMATO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Formato_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Formato_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Formato_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Formato_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoConstantesFunciones.LABEL_DIRECCION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_reccion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_reccion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_reccion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_reccion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoConstantesFunciones.LABEL_IDCLIENTE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Cliente_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Cliente_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Cliente_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Cliente_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoConstantesFunciones.LABEL_TELEFONO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_lefono_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_lefono_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_lefono_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_lefono_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoConstantesFunciones.LABEL_RUC:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_c_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_c_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_c_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_c_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoConstantesFunciones.LABEL_IDSUBCLIENTE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_SubCliente_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_SubCliente_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_SubCliente_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_SubCliente_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoConstantesFunciones.LABEL_IDVENDEDOR:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Vendedor_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Vendedor_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Vendedor_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Vendedor_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoConstantesFunciones.LABEL_IDCONSULTOR:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Consultor_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Consultor_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Consultor_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Consultor_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoConstantesFunciones.LABEL_ORDEN:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_den_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_den_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_den_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_den_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoConstantesFunciones.LABEL_IDRESPONSABLE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Responsable_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Responsable_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Responsable_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Responsable_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoConstantesFunciones.LABEL_IDESTADOPEDIDO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_EstadoPedido_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_EstadoPedido_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_EstadoPedido_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_EstadoPedido_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoConstantesFunciones.LABEL_IDTRANSPORTE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Transporte_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Transporte_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Transporte_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Transporte_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoConstantesFunciones.LABEL_IDRUTATRANSPORTE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_RutaTransporte_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_RutaTransporte_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_RutaTransporte_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_RutaTransporte_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoConstantesFunciones.LABEL_VALORRUTA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_lorRuta_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_lorRuta_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_lorRuta_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_lorRuta_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoConstantesFunciones.LABEL_IDTIPOLLAMADA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoLlamada_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoLlamada_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoLlamada_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoLlamada_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoConstantesFunciones.LABEL_IDTRANSPORTISTA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Transportista_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Transportista_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Transportista_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Transportista_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoConstantesFunciones.LABEL_HORAINICIO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_raInicio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_raInicio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_raInicio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_raInicio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoConstantesFunciones.LABEL_HORAFIN:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_raFin_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_raFin_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_raFin_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_raFin_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoConstantesFunciones.LABEL_DESCRIPCION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_scripcion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_scripcion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_scripcion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_scripcion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoConstantesFunciones.LABEL_CUPO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_po_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_po_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_po_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_po_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoConstantesFunciones.LABEL_SALDO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ldo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ldo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ldo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ldo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoConstantesFunciones.LABEL_PEDIDOS:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_didos_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_didos_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_didos_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_didos_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoConstantesFunciones.LABEL_DOCUMENTOS:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_cumentos_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_cumentos_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_cumentos_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_cumentos_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoConstantesFunciones.LABEL_DISPONIBLE:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_sponible_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_sponible_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_sponible_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_sponible_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoConstantesFunciones.LABEL_DESCUENTOPORCENTAJE:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_scuentoPorcentaje_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_scuentoPorcentaje_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_scuentoPorcentaje_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_scuentoPorcentaje_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoConstantesFunciones.LABEL_TOTALCONIVA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_talConIva_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_talConIva_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_talConIva_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_talConIva_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoConstantesFunciones.LABEL_SUMAN:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_man_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_man_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_man_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_man_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoConstantesFunciones.LABEL_DESCUENTOVALOR:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_scuentoValor_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_scuentoValor_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_scuentoValor_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_scuentoValor_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoConstantesFunciones.LABEL_TOTALSINIVA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_talSinIva_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_talSinIva_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_talSinIva_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_talSinIva_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoConstantesFunciones.LABEL_DESCUENTOTOTAL:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_scuentoTotal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_scuentoTotal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_scuentoTotal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_scuentoTotal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoConstantesFunciones.LABEL_FLETE:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ete_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ete_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ete_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ete_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoConstantesFunciones.LABEL_TOTAL:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_tal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_tal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_tal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_tal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoConstantesFunciones.LABEL_SUBTOTAL:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_btotal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_btotal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_btotal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_btotal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoConstantesFunciones.LABEL_OTRO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ro_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ro_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ro_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ro_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoConstantesFunciones.LABEL_ULTIMOCOSTO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_timoCosto_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_timoCosto_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_timoCosto_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_timoCosto_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoConstantesFunciones.LABEL_IVA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_a_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_a_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_a_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_a_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoConstantesFunciones.LABEL_FINANCIAMIENTO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_nanciamiento_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_nanciamiento_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_nanciamiento_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_nanciamiento_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoConstantesFunciones.LABEL_MARGENUTILIDAD:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_rgenUtilidad_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_rgenUtilidad_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_rgenUtilidad_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_rgenUtilidad_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoConstantesFunciones.LABEL_OTROSVALORES:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_rosValores_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_rosValores_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_rosValores_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_rosValores_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoConstantesFunciones.LABEL_ANTICIPO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ticipo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ticipo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ticipo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ticipo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoConstantesFunciones.LABEL_IDTIPOCAMBIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoCambio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoCambio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoCambio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoCambio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoConstantesFunciones.LABEL_IDCENTROCOSTO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_CentroCosto_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_CentroCosto_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_CentroCosto_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_CentroCosto_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoConstantesFunciones.LABEL_IDZONA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Zona_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Zona_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Zona_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Zona_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoConstantesFunciones.LABEL_FECHA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_cha_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_cha_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_cha_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_cha_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoConstantesFunciones.LABEL_NUMEROFUE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_meroFue_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_meroFue_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_meroFue_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_meroFue_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoConstantesFunciones.LABEL_FECHASERVIDOR:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_chaServidor_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_chaServidor_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_chaServidor_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_chaServidor_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoConstantesFunciones.LABEL_MONTORETENCION:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ntoRetencion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ntoRetencion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ntoRetencion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ntoRetencion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoConstantesFunciones.LABEL_ICE:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_e_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_e_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_e_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_e_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;
					
				default :
					break;
			}
		}
		
		iAnchoSum+=iAnchoMargenes;
		
		if(iAnchoSum>iAnchoMaximoVertical) {
			sXmlStringFile=sXmlStringFile.replace("595", "842");
			//sXmlStringFile=sXmlStringFile.replace("842", "595");
			sXmlStringFile=sXmlStringFile.replace("535", "782");
			sXmlStringFile=sXmlStringFile.replace("Portrait", "Landscape");			
			sWidthGrafico="782";
		
		} else {
			sXmlStringFile=sXmlStringFile.replace("842", "595");
			//sXmlStringFile=sXmlStringFile.replace("595", "842");
			sXmlStringFile=sXmlStringFile.replace("782", "535");
			sXmlStringFile=sXmlStringFile.replace("Landscape", "Portrait");
			sWidthGrafico="535";
		}
		
		if(this.jInternalFrameReporteDinamicoPedido.getjCheckBoxConGraficoDinamico().isSelected()) {
			sXmlStringFile=this.actualizarGraficoReporteDinamico(sXmlStringFile,sWidthGrafico);
		} else {
			sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "30");
		}
		
		return sXmlStringFile;
	}
	
	
	
	public String actualizarGraficoReporteDinamico(String sXmlStringFile,String sWidthGrafico) {		
		String strGrafico="";		
		String sTipo="NORMAL";
		String strCategorySeries="";
		String sNombreCampoCategoria="";
		String sNombreCampoCategoriaValor="";
		Reporte reporte=new Reporte();
		Reporte reporteCategoriaValor=new Reporte();
		Reporte reporteTipoGraficoReporte=new Reporte();
		Boolean existe=false;
		
		sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "280");
		
		//CATEGORIA GRAFICO				
		reporte=((Reporte)this.jInternalFrameReporteDinamicoPedido.getjComboBoxColumnaCategoriaGrafico().getSelectedItem());
				
		//TIPO GRAFICO REPORTE
		reporteTipoGraficoReporte=((Reporte)this.jInternalFrameReporteDinamicoPedido.getjComboBoxTiposGraficosReportesDinamico().getSelectedItem());
		
		String sTipoGraficoReporte=reporteTipoGraficoReporte.getsCodigo();
		
		switch(reporte.getsCodigo()) {
			
				case PedidoConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoria="id_empresa";
					break;

				case PedidoConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoria="id_sucursal";
					break;

				case PedidoConstantesFunciones.LABEL_IDEJERCICIO:
					sNombreCampoCategoria="id_ejercicio";
					break;

				case PedidoConstantesFunciones.LABEL_IDPERIODO:
					sNombreCampoCategoria="id_periodo";
					break;

				case PedidoConstantesFunciones.LABEL_IDANIO:
					sNombreCampoCategoria="id_anio";
					break;

				case PedidoConstantesFunciones.LABEL_IDMES:
					sNombreCampoCategoria="id_mes";
					break;

				case PedidoConstantesFunciones.LABEL_IDUSUARIO:
					sNombreCampoCategoria="id_usuario";
					break;

				case PedidoConstantesFunciones.LABEL_NUMERO:
					sNombreCampoCategoria="numero";
					break;

				case PedidoConstantesFunciones.LABEL_PREIMPRESO:
					sNombreCampoCategoria="pre_impreso";
					break;

				case PedidoConstantesFunciones.LABEL_FECHAEMISION:
					sNombreCampoCategoria="fecha_emision";
					break;

				case PedidoConstantesFunciones.LABEL_FECHAENTREGA:
					sNombreCampoCategoria="fecha_entrega";
					break;

				case PedidoConstantesFunciones.LABEL_IDMONEDA:
					sNombreCampoCategoria="id_moneda";
					break;

				case PedidoConstantesFunciones.LABEL_COTIZACION:
					sNombreCampoCategoria="cotizacion";
					break;

				case PedidoConstantesFunciones.LABEL_IDEMPLEADO:
					sNombreCampoCategoria="id_empleado";
					break;

				case PedidoConstantesFunciones.LABEL_IDTIPOPRECIO:
					sNombreCampoCategoria="id_tipo_precio";
					break;

				case PedidoConstantesFunciones.LABEL_IDFORMATO:
					sNombreCampoCategoria="id_formato";
					break;

				case PedidoConstantesFunciones.LABEL_DIRECCION:
					sNombreCampoCategoria="direccion";
					break;

				case PedidoConstantesFunciones.LABEL_IDCLIENTE:
					sNombreCampoCategoria="id_cliente";
					break;

				case PedidoConstantesFunciones.LABEL_TELEFONO:
					sNombreCampoCategoria="telefono";
					break;

				case PedidoConstantesFunciones.LABEL_RUC:
					sNombreCampoCategoria="ruc";
					break;

				case PedidoConstantesFunciones.LABEL_IDSUBCLIENTE:
					sNombreCampoCategoria="id_sub_cliente";
					break;

				case PedidoConstantesFunciones.LABEL_IDVENDEDOR:
					sNombreCampoCategoria="id_vendedor";
					break;

				case PedidoConstantesFunciones.LABEL_IDCONSULTOR:
					sNombreCampoCategoria="id_consultor";
					break;

				case PedidoConstantesFunciones.LABEL_ORDEN:
					sNombreCampoCategoria="orden";
					break;

				case PedidoConstantesFunciones.LABEL_IDRESPONSABLE:
					sNombreCampoCategoria="id_responsable";
					break;

				case PedidoConstantesFunciones.LABEL_IDESTADOPEDIDO:
					sNombreCampoCategoria="id_estado_pedido";
					break;

				case PedidoConstantesFunciones.LABEL_IDTRANSPORTE:
					sNombreCampoCategoria="id_transporte";
					break;

				case PedidoConstantesFunciones.LABEL_IDRUTATRANSPORTE:
					sNombreCampoCategoria="id_ruta_transporte";
					break;

				case PedidoConstantesFunciones.LABEL_VALORRUTA:
					sNombreCampoCategoria="valor_ruta";
					break;

				case PedidoConstantesFunciones.LABEL_IDTIPOLLAMADA:
					sNombreCampoCategoria="id_tipo_llamada";
					break;

				case PedidoConstantesFunciones.LABEL_IDTRANSPORTISTA:
					sNombreCampoCategoria="id_transportista";
					break;

				case PedidoConstantesFunciones.LABEL_HORAINICIO:
					sNombreCampoCategoria="hora_inicio";
					break;

				case PedidoConstantesFunciones.LABEL_HORAFIN:
					sNombreCampoCategoria="hora_fin";
					break;

				case PedidoConstantesFunciones.LABEL_DESCRIPCION:
					sNombreCampoCategoria="descripcion";
					break;

				case PedidoConstantesFunciones.LABEL_CUPO:
					sNombreCampoCategoria="cupo";
					break;

				case PedidoConstantesFunciones.LABEL_SALDO:
					sNombreCampoCategoria="saldo";
					break;

				case PedidoConstantesFunciones.LABEL_PEDIDOS:
					sNombreCampoCategoria="pedidos";
					break;

				case PedidoConstantesFunciones.LABEL_DOCUMENTOS:
					sNombreCampoCategoria="documentos";
					break;

				case PedidoConstantesFunciones.LABEL_DISPONIBLE:
					sNombreCampoCategoria="disponible";
					break;

				case PedidoConstantesFunciones.LABEL_DESCUENTOPORCENTAJE:
					sNombreCampoCategoria="descuento_porcentaje";
					break;

				case PedidoConstantesFunciones.LABEL_TOTALCONIVA:
					sNombreCampoCategoria="total_con_iva";
					break;

				case PedidoConstantesFunciones.LABEL_SUMAN:
					sNombreCampoCategoria="suman";
					break;

				case PedidoConstantesFunciones.LABEL_DESCUENTOVALOR:
					sNombreCampoCategoria="descuento_valor";
					break;

				case PedidoConstantesFunciones.LABEL_TOTALSINIVA:
					sNombreCampoCategoria="total_sin_iva";
					break;

				case PedidoConstantesFunciones.LABEL_DESCUENTOTOTAL:
					sNombreCampoCategoria="descuento_total";
					break;

				case PedidoConstantesFunciones.LABEL_FLETE:
					sNombreCampoCategoria="flete";
					break;

				case PedidoConstantesFunciones.LABEL_TOTAL:
					sNombreCampoCategoria="total";
					break;

				case PedidoConstantesFunciones.LABEL_SUBTOTAL:
					sNombreCampoCategoria="subtotal";
					break;

				case PedidoConstantesFunciones.LABEL_OTRO:
					sNombreCampoCategoria="otro";
					break;

				case PedidoConstantesFunciones.LABEL_ULTIMOCOSTO:
					sNombreCampoCategoria="ultimo_costo";
					break;

				case PedidoConstantesFunciones.LABEL_IVA:
					sNombreCampoCategoria="iva";
					break;

				case PedidoConstantesFunciones.LABEL_FINANCIAMIENTO:
					sNombreCampoCategoria="financiamiento";
					break;

				case PedidoConstantesFunciones.LABEL_MARGENUTILIDAD:
					sNombreCampoCategoria="margen_utilidad";
					break;

				case PedidoConstantesFunciones.LABEL_OTROSVALORES:
					sNombreCampoCategoria="otros_valores";
					break;

				case PedidoConstantesFunciones.LABEL_ANTICIPO:
					sNombreCampoCategoria="anticipo";
					break;

				case PedidoConstantesFunciones.LABEL_IDTIPOCAMBIO:
					sNombreCampoCategoria="id_tipo_cambio";
					break;

				case PedidoConstantesFunciones.LABEL_IDCENTROCOSTO:
					sNombreCampoCategoria="id_centro_costo";
					break;

				case PedidoConstantesFunciones.LABEL_IDZONA:
					sNombreCampoCategoria="id_zona";
					break;

				case PedidoConstantesFunciones.LABEL_FECHA:
					sNombreCampoCategoria="fecha";
					break;

				case PedidoConstantesFunciones.LABEL_NUMEROFUE:
					sNombreCampoCategoria="numero_fue";
					break;

				case PedidoConstantesFunciones.LABEL_FECHASERVIDOR:
					sNombreCampoCategoria="fecha_servidor";
					break;

				case PedidoConstantesFunciones.LABEL_MONTORETENCION:
					sNombreCampoCategoria="monto_retencion";
					break;

				case PedidoConstantesFunciones.LABEL_ICE:
					sNombreCampoCategoria="ice";
					break;
					
			default :
				break;
		}		
		//CATEGORIA GRAFICO
		
		//CATEGORIA VALOR				
		reporteCategoriaValor=((Reporte)this.jInternalFrameReporteDinamicoPedido.getjComboBoxColumnaCategoriaValor().getSelectedItem());
		
		switch(reporteCategoriaValor.getsCodigo()) {
			
				case PedidoConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoriaValor="id_empresa";
					break;

				case PedidoConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoriaValor="id_sucursal";
					break;

				case PedidoConstantesFunciones.LABEL_IDEJERCICIO:
					sNombreCampoCategoriaValor="id_ejercicio";
					break;

				case PedidoConstantesFunciones.LABEL_IDPERIODO:
					sNombreCampoCategoriaValor="id_periodo";
					break;

				case PedidoConstantesFunciones.LABEL_IDANIO:
					sNombreCampoCategoriaValor="id_anio";
					break;

				case PedidoConstantesFunciones.LABEL_IDMES:
					sNombreCampoCategoriaValor="id_mes";
					break;

				case PedidoConstantesFunciones.LABEL_IDUSUARIO:
					sNombreCampoCategoriaValor="id_usuario";
					break;

				case PedidoConstantesFunciones.LABEL_NUMERO:
					sNombreCampoCategoriaValor="numero";
					break;

				case PedidoConstantesFunciones.LABEL_PREIMPRESO:
					sNombreCampoCategoriaValor="pre_impreso";
					break;

				case PedidoConstantesFunciones.LABEL_FECHAEMISION:
					sNombreCampoCategoriaValor="fecha_emision";
					break;

				case PedidoConstantesFunciones.LABEL_FECHAENTREGA:
					sNombreCampoCategoriaValor="fecha_entrega";
					break;

				case PedidoConstantesFunciones.LABEL_IDMONEDA:
					sNombreCampoCategoriaValor="id_moneda";
					break;

				case PedidoConstantesFunciones.LABEL_COTIZACION:
					sNombreCampoCategoriaValor="cotizacion";
					break;

				case PedidoConstantesFunciones.LABEL_IDEMPLEADO:
					sNombreCampoCategoriaValor="id_empleado";
					break;

				case PedidoConstantesFunciones.LABEL_IDTIPOPRECIO:
					sNombreCampoCategoriaValor="id_tipo_precio";
					break;

				case PedidoConstantesFunciones.LABEL_IDFORMATO:
					sNombreCampoCategoriaValor="id_formato";
					break;

				case PedidoConstantesFunciones.LABEL_DIRECCION:
					sNombreCampoCategoriaValor="direccion";
					break;

				case PedidoConstantesFunciones.LABEL_IDCLIENTE:
					sNombreCampoCategoriaValor="id_cliente";
					break;

				case PedidoConstantesFunciones.LABEL_TELEFONO:
					sNombreCampoCategoriaValor="telefono";
					break;

				case PedidoConstantesFunciones.LABEL_RUC:
					sNombreCampoCategoriaValor="ruc";
					break;

				case PedidoConstantesFunciones.LABEL_IDSUBCLIENTE:
					sNombreCampoCategoriaValor="id_sub_cliente";
					break;

				case PedidoConstantesFunciones.LABEL_IDVENDEDOR:
					sNombreCampoCategoriaValor="id_vendedor";
					break;

				case PedidoConstantesFunciones.LABEL_IDCONSULTOR:
					sNombreCampoCategoriaValor="id_consultor";
					break;

				case PedidoConstantesFunciones.LABEL_ORDEN:
					sNombreCampoCategoriaValor="orden";
					break;

				case PedidoConstantesFunciones.LABEL_IDRESPONSABLE:
					sNombreCampoCategoriaValor="id_responsable";
					break;

				case PedidoConstantesFunciones.LABEL_IDESTADOPEDIDO:
					sNombreCampoCategoriaValor="id_estado_pedido";
					break;

				case PedidoConstantesFunciones.LABEL_IDTRANSPORTE:
					sNombreCampoCategoriaValor="id_transporte";
					break;

				case PedidoConstantesFunciones.LABEL_IDRUTATRANSPORTE:
					sNombreCampoCategoriaValor="id_ruta_transporte";
					break;

				case PedidoConstantesFunciones.LABEL_VALORRUTA:
					sNombreCampoCategoriaValor="valor_ruta";
					break;

				case PedidoConstantesFunciones.LABEL_IDTIPOLLAMADA:
					sNombreCampoCategoriaValor="id_tipo_llamada";
					break;

				case PedidoConstantesFunciones.LABEL_IDTRANSPORTISTA:
					sNombreCampoCategoriaValor="id_transportista";
					break;

				case PedidoConstantesFunciones.LABEL_HORAINICIO:
					sNombreCampoCategoriaValor="hora_inicio";
					break;

				case PedidoConstantesFunciones.LABEL_HORAFIN:
					sNombreCampoCategoriaValor="hora_fin";
					break;

				case PedidoConstantesFunciones.LABEL_DESCRIPCION:
					sNombreCampoCategoriaValor="descripcion";
					break;

				case PedidoConstantesFunciones.LABEL_CUPO:
					sNombreCampoCategoriaValor="cupo";
					break;

				case PedidoConstantesFunciones.LABEL_SALDO:
					sNombreCampoCategoriaValor="saldo";
					break;

				case PedidoConstantesFunciones.LABEL_PEDIDOS:
					sNombreCampoCategoriaValor="pedidos";
					break;

				case PedidoConstantesFunciones.LABEL_DOCUMENTOS:
					sNombreCampoCategoriaValor="documentos";
					break;

				case PedidoConstantesFunciones.LABEL_DISPONIBLE:
					sNombreCampoCategoriaValor="disponible";
					break;

				case PedidoConstantesFunciones.LABEL_DESCUENTOPORCENTAJE:
					sNombreCampoCategoriaValor="descuento_porcentaje";
					break;

				case PedidoConstantesFunciones.LABEL_TOTALCONIVA:
					sNombreCampoCategoriaValor="total_con_iva";
					break;

				case PedidoConstantesFunciones.LABEL_SUMAN:
					sNombreCampoCategoriaValor="suman";
					break;

				case PedidoConstantesFunciones.LABEL_DESCUENTOVALOR:
					sNombreCampoCategoriaValor="descuento_valor";
					break;

				case PedidoConstantesFunciones.LABEL_TOTALSINIVA:
					sNombreCampoCategoriaValor="total_sin_iva";
					break;

				case PedidoConstantesFunciones.LABEL_DESCUENTOTOTAL:
					sNombreCampoCategoriaValor="descuento_total";
					break;

				case PedidoConstantesFunciones.LABEL_FLETE:
					sNombreCampoCategoriaValor="flete";
					break;

				case PedidoConstantesFunciones.LABEL_TOTAL:
					sNombreCampoCategoriaValor="total";
					break;

				case PedidoConstantesFunciones.LABEL_SUBTOTAL:
					sNombreCampoCategoriaValor="subtotal";
					break;

				case PedidoConstantesFunciones.LABEL_OTRO:
					sNombreCampoCategoriaValor="otro";
					break;

				case PedidoConstantesFunciones.LABEL_ULTIMOCOSTO:
					sNombreCampoCategoriaValor="ultimo_costo";
					break;

				case PedidoConstantesFunciones.LABEL_IVA:
					sNombreCampoCategoriaValor="iva";
					break;

				case PedidoConstantesFunciones.LABEL_FINANCIAMIENTO:
					sNombreCampoCategoriaValor="financiamiento";
					break;

				case PedidoConstantesFunciones.LABEL_MARGENUTILIDAD:
					sNombreCampoCategoriaValor="margen_utilidad";
					break;

				case PedidoConstantesFunciones.LABEL_OTROSVALORES:
					sNombreCampoCategoriaValor="otros_valores";
					break;

				case PedidoConstantesFunciones.LABEL_ANTICIPO:
					sNombreCampoCategoriaValor="anticipo";
					break;

				case PedidoConstantesFunciones.LABEL_IDTIPOCAMBIO:
					sNombreCampoCategoriaValor="id_tipo_cambio";
					break;

				case PedidoConstantesFunciones.LABEL_IDCENTROCOSTO:
					sNombreCampoCategoriaValor="id_centro_costo";
					break;

				case PedidoConstantesFunciones.LABEL_IDZONA:
					sNombreCampoCategoriaValor="id_zona";
					break;

				case PedidoConstantesFunciones.LABEL_FECHA:
					sNombreCampoCategoriaValor="fecha";
					break;

				case PedidoConstantesFunciones.LABEL_NUMEROFUE:
					sNombreCampoCategoriaValor="numero_fue";
					break;

				case PedidoConstantesFunciones.LABEL_FECHASERVIDOR:
					sNombreCampoCategoriaValor="fecha_servidor";
					break;

				case PedidoConstantesFunciones.LABEL_MONTORETENCION:
					sNombreCampoCategoriaValor="monto_retencion";
					break;

				case PedidoConstantesFunciones.LABEL_ICE:
					sNombreCampoCategoriaValor="ice";
					break;
					
			default :
				break;
		}	
		//CATEGORIA VALOR
		
		//VALORES GRAFICO
		for(int index:this.jInternalFrameReporteDinamicoPedido.getjListColumnasValoresGrafico().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoPedido.getjListColumnasValoresGrafico().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case PedidoConstantesFunciones.LABEL_IDEMPRESA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Empresa",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_empresa");
					break;

				case PedidoConstantesFunciones.LABEL_IDSUCURSAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Sucursal",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_sucursal");
					break;

				case PedidoConstantesFunciones.LABEL_IDEJERCICIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Ejercicio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_ejercicio");
					break;

				case PedidoConstantesFunciones.LABEL_IDPERIODO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Periodo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_periodo");
					break;

				case PedidoConstantesFunciones.LABEL_IDANIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Anio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_anio");
					break;

				case PedidoConstantesFunciones.LABEL_IDMES:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Mes",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_mes");
					break;

				case PedidoConstantesFunciones.LABEL_IDUSUARIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Usuario",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_usuario");
					break;

				case PedidoConstantesFunciones.LABEL_NUMERO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Numero",sNombreCampoCategoria,sNombreCampoCategoriaValor,"numero");
					break;

				case PedidoConstantesFunciones.LABEL_PREIMPRESO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Preimpreso",sNombreCampoCategoria,sNombreCampoCategoriaValor,"pre_impreso");
					break;

				case PedidoConstantesFunciones.LABEL_FECHAEMISION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fecha Emision",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha_emision");
					break;

				case PedidoConstantesFunciones.LABEL_FECHAENTREGA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fecha Entrega",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha_entrega");
					break;

				case PedidoConstantesFunciones.LABEL_IDMONEDA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Moneda",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_moneda");
					break;

				case PedidoConstantesFunciones.LABEL_COTIZACION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cotizacion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"cotizacion");
					break;

				case PedidoConstantesFunciones.LABEL_IDEMPLEADO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Empleado",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_empleado");
					break;

				case PedidoConstantesFunciones.LABEL_IDTIPOPRECIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tipo Precio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_precio");
					break;

				case PedidoConstantesFunciones.LABEL_IDFORMATO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Formato",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_formato");
					break;

				case PedidoConstantesFunciones.LABEL_DIRECCION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Direccion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"direccion");
					break;

				case PedidoConstantesFunciones.LABEL_IDCLIENTE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cliente",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cliente");
					break;

				case PedidoConstantesFunciones.LABEL_TELEFONO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Telefono",sNombreCampoCategoria,sNombreCampoCategoriaValor,"telefono");
					break;

				case PedidoConstantesFunciones.LABEL_RUC:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Ruc",sNombreCampoCategoria,sNombreCampoCategoriaValor,"ruc");
					break;

				case PedidoConstantesFunciones.LABEL_IDSUBCLIENTE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Contacto",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_sub_cliente");
					break;

				case PedidoConstantesFunciones.LABEL_IDVENDEDOR:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Vendedor",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_vendedor");
					break;

				case PedidoConstantesFunciones.LABEL_IDCONSULTOR:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Consultor",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_consultor");
					break;

				case PedidoConstantesFunciones.LABEL_ORDEN:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Orden",sNombreCampoCategoria,sNombreCampoCategoriaValor,"orden");
					break;

				case PedidoConstantesFunciones.LABEL_IDRESPONSABLE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Responsable",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_responsable");
					break;

				case PedidoConstantesFunciones.LABEL_IDESTADOPEDIDO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Estado",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_estado_pedido");
					break;

				case PedidoConstantesFunciones.LABEL_IDTRANSPORTE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Forma Envio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_transporte");
					break;

				case PedidoConstantesFunciones.LABEL_IDRUTATRANSPORTE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Ruta",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_ruta_transporte");
					break;

				case PedidoConstantesFunciones.LABEL_VALORRUTA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Valor Ruta",sNombreCampoCategoria,sNombreCampoCategoriaValor,"valor_ruta");
					break;

				case PedidoConstantesFunciones.LABEL_IDTIPOLLAMADA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Llamada",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_llamada");
					break;

				case PedidoConstantesFunciones.LABEL_IDTRANSPORTISTA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Transportista",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_transportista");
					break;

				case PedidoConstantesFunciones.LABEL_HORAINICIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Hora Inicio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"hora_inicio");
					break;

				case PedidoConstantesFunciones.LABEL_HORAFIN:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Hora Fin",sNombreCampoCategoria,sNombreCampoCategoriaValor,"hora_fin");
					break;

				case PedidoConstantesFunciones.LABEL_DESCRIPCION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Descripcion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"descripcion");
					break;

				case PedidoConstantesFunciones.LABEL_CUPO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cupo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"cupo");
					break;

				case PedidoConstantesFunciones.LABEL_SALDO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Saldo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"saldo");
					break;

				case PedidoConstantesFunciones.LABEL_PEDIDOS:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Pedidos",sNombreCampoCategoria,sNombreCampoCategoriaValor,"pedidos");
					break;

				case PedidoConstantesFunciones.LABEL_DOCUMENTOS:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Documentos",sNombreCampoCategoria,sNombreCampoCategoriaValor,"documentos");
					break;

				case PedidoConstantesFunciones.LABEL_DISPONIBLE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Disponible",sNombreCampoCategoria,sNombreCampoCategoriaValor,"disponible");
					break;

				case PedidoConstantesFunciones.LABEL_DESCUENTOPORCENTAJE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Dscto %",sNombreCampoCategoria,sNombreCampoCategoriaValor,"descuento_porcentaje");
					break;

				case PedidoConstantesFunciones.LABEL_TOTALCONIVA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Monto Con Iva",sNombreCampoCategoria,sNombreCampoCategoriaValor,"total_con_iva");
					break;

				case PedidoConstantesFunciones.LABEL_SUMAN:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Suman",sNombreCampoCategoria,sNombreCampoCategoriaValor,"suman");
					break;

				case PedidoConstantesFunciones.LABEL_DESCUENTOVALOR:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Dscto Valor",sNombreCampoCategoria,sNombreCampoCategoriaValor,"descuento_valor");
					break;

				case PedidoConstantesFunciones.LABEL_TOTALSINIVA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Total Sin Iva",sNombreCampoCategoria,sNombreCampoCategoriaValor,"total_sin_iva");
					break;

				case PedidoConstantesFunciones.LABEL_DESCUENTOTOTAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Descuento Total",sNombreCampoCategoria,sNombreCampoCategoriaValor,"descuento_total");
					break;

				case PedidoConstantesFunciones.LABEL_FLETE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Flete",sNombreCampoCategoria,sNombreCampoCategoriaValor,"flete");
					break;

				case PedidoConstantesFunciones.LABEL_TOTAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Total",sNombreCampoCategoria,sNombreCampoCategoriaValor,"total");
					break;

				case PedidoConstantesFunciones.LABEL_SUBTOTAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Subtotal",sNombreCampoCategoria,sNombreCampoCategoriaValor,"subtotal");
					break;

				case PedidoConstantesFunciones.LABEL_OTRO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Otros Cargos",sNombreCampoCategoria,sNombreCampoCategoriaValor,"otro");
					break;

				case PedidoConstantesFunciones.LABEL_ULTIMOCOSTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Ultimo Costo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"ultimo_costo");
					break;

				case PedidoConstantesFunciones.LABEL_IVA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Iva",sNombreCampoCategoria,sNombreCampoCategoriaValor,"iva");
					break;

				case PedidoConstantesFunciones.LABEL_FINANCIAMIENTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Financiamiento",sNombreCampoCategoria,sNombreCampoCategoriaValor,"financiamiento");
					break;

				case PedidoConstantesFunciones.LABEL_MARGENUTILIDAD:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Margen Utilidad",sNombreCampoCategoria,sNombreCampoCategoriaValor,"margen_utilidad");
					break;

				case PedidoConstantesFunciones.LABEL_OTROSVALORES:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Otros Valores",sNombreCampoCategoria,sNombreCampoCategoriaValor,"otros_valores");
					break;

				case PedidoConstantesFunciones.LABEL_ANTICIPO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Anticipo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"anticipo");
					break;

				case PedidoConstantesFunciones.LABEL_IDTIPOCAMBIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tipo Cambio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_cambio");
					break;

				case PedidoConstantesFunciones.LABEL_IDCENTROCOSTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Centro Costo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_centro_costo");
					break;

				case PedidoConstantesFunciones.LABEL_IDZONA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Zona",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_zona");
					break;

				case PedidoConstantesFunciones.LABEL_FECHA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fecha",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha");
					break;

				case PedidoConstantesFunciones.LABEL_NUMEROFUE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Nro Fue",sNombreCampoCategoria,sNombreCampoCategoriaValor,"numero_fue");
					break;

				case PedidoConstantesFunciones.LABEL_FECHASERVIDOR:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fecha Servidor",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha_servidor");
					break;

				case PedidoConstantesFunciones.LABEL_MONTORETENCION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Monto Retencion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"monto_retencion");
					break;

				case PedidoConstantesFunciones.LABEL_ICE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Ice",sNombreCampoCategoria,sNombreCampoCategoriaValor,"ice");
					break;
					
				default :
					break;
			}
		}
		//VALORES GRAFICO
		//if(sTipoGraficoReporte.equals("BARRAS") || sTipoGraficoReporte.equals("BARRAS_3D") || sTipoGraficoReporte.equals("BARRAS_XY") ||
		//   sTipoGraficoReporte.equals("PASTEL") || sTipoGraficoReporte.equals("PASTEL_3D") || sTipoGraficoReporte.equals("APILADO")) {
			
			existe=true;
			strGrafico=FuncionesReporte.getStringGraficoReporte(sTipoGraficoReporte,sWidthGrafico,strCategorySeries);			
		//}
		
		if(existe) {
			sXmlStringFile=sXmlStringFile.replace("<!--GRAFICO-->", strGrafico);
		}												
		
		return sXmlStringFile;
	}
	
	
	//@SuppressWarnings("deprecation")
	
	public void jButtonGenerarExcelReporteDinamicoPedidoActionPerformed(ActionEvent evt) throws Exception {		
		ArrayList<Pedido> pedidosSeleccionados=new ArrayList<Pedido>();		
		
		pedidosSeleccionados=this.getPedidosSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"pedido";//.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		Boolean existeFilas=false;
		
		Workbook workbook = null;
		FileOutputStream fileOutputStream=null;
		Reporte reporte=new Reporte();
		
		try {
			
			if(sTipoArchivoReporte=="EXCEL2") {
				workbook = new HSSFWorkbook();
				sPath+=".xls";
			
			} else if(sTipoArchivoReporte=="EXCEL2_2") {
				workbook = new XSSFWorkbook();
				sPath+=".xlsx";			
			}
		
			Sheet sheet = workbook.createSheet("Pedidos");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			Row row = sheet.createRow(iRow);
			Cell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");
			
			for(int index:this.jInternalFrameReporteDinamicoPedido.getjListColumnasSelectReporte().getSelectedIndices()) {
				reporte=(Reporte)this.jInternalFrameReporteDinamicoPedido.getjListColumnasSelectReporte().getModel().getElementAt(index);
				
				switch(reporte.getsCodigo()) {
					
				case PedidoConstantesFunciones.LABEL_IDEMPRESA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoConstantesFunciones.LABEL_IDEMPRESA);
					iRow++;

					for(Pedido pedido:pedidosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedido.getempresa_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoConstantesFunciones.LABEL_IDSUCURSAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoConstantesFunciones.LABEL_IDSUCURSAL);
					iRow++;

					for(Pedido pedido:pedidosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedido.getsucursal_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoConstantesFunciones.LABEL_IDEJERCICIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoConstantesFunciones.LABEL_IDEJERCICIO);
					iRow++;

					for(Pedido pedido:pedidosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedido.getejercicio_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoConstantesFunciones.LABEL_IDPERIODO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoConstantesFunciones.LABEL_IDPERIODO);
					iRow++;

					for(Pedido pedido:pedidosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedido.getperiodo_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoConstantesFunciones.LABEL_IDANIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoConstantesFunciones.LABEL_IDANIO);
					iRow++;

					for(Pedido pedido:pedidosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedido.getanio_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoConstantesFunciones.LABEL_IDMES:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoConstantesFunciones.LABEL_IDMES);
					iRow++;

					for(Pedido pedido:pedidosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedido.getmes_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoConstantesFunciones.LABEL_IDUSUARIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoConstantesFunciones.LABEL_IDUSUARIO);
					iRow++;

					for(Pedido pedido:pedidosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedido.getusuario_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoConstantesFunciones.LABEL_NUMERO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoConstantesFunciones.LABEL_NUMERO);
					iRow++;

					for(Pedido pedido:pedidosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedido.getnumero());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoConstantesFunciones.LABEL_PREIMPRESO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoConstantesFunciones.LABEL_PREIMPRESO);
					iRow++;

					for(Pedido pedido:pedidosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedido.getpre_impreso());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoConstantesFunciones.LABEL_FECHAEMISION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoConstantesFunciones.LABEL_FECHAEMISION);
					iRow++;

					for(Pedido pedido:pedidosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedido.getfecha_emision());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoConstantesFunciones.LABEL_FECHAENTREGA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoConstantesFunciones.LABEL_FECHAENTREGA);
					iRow++;

					for(Pedido pedido:pedidosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedido.getfecha_entrega());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoConstantesFunciones.LABEL_IDMONEDA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoConstantesFunciones.LABEL_IDMONEDA);
					iRow++;

					for(Pedido pedido:pedidosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedido.getmoneda_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoConstantesFunciones.LABEL_COTIZACION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoConstantesFunciones.LABEL_COTIZACION);
					iRow++;

					for(Pedido pedido:pedidosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedido.getcotizacion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoConstantesFunciones.LABEL_IDEMPLEADO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoConstantesFunciones.LABEL_IDEMPLEADO);
					iRow++;

					for(Pedido pedido:pedidosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedido.getempleado_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoConstantesFunciones.LABEL_IDTIPOPRECIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoConstantesFunciones.LABEL_IDTIPOPRECIO);
					iRow++;

					for(Pedido pedido:pedidosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedido.gettipoprecio_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoConstantesFunciones.LABEL_IDFORMATO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoConstantesFunciones.LABEL_IDFORMATO);
					iRow++;

					for(Pedido pedido:pedidosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedido.getformato_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoConstantesFunciones.LABEL_DIRECCION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoConstantesFunciones.LABEL_DIRECCION);
					iRow++;

					for(Pedido pedido:pedidosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedido.getdireccion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoConstantesFunciones.LABEL_IDCLIENTE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoConstantesFunciones.LABEL_IDCLIENTE);
					iRow++;

					for(Pedido pedido:pedidosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedido.getcliente_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoConstantesFunciones.LABEL_TELEFONO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoConstantesFunciones.LABEL_TELEFONO);
					iRow++;

					for(Pedido pedido:pedidosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedido.gettelefono());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoConstantesFunciones.LABEL_RUC:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoConstantesFunciones.LABEL_RUC);
					iRow++;

					for(Pedido pedido:pedidosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedido.getruc());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoConstantesFunciones.LABEL_IDSUBCLIENTE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoConstantesFunciones.LABEL_IDSUBCLIENTE);
					iRow++;

					for(Pedido pedido:pedidosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedido.getsubcliente_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoConstantesFunciones.LABEL_IDVENDEDOR:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoConstantesFunciones.LABEL_IDVENDEDOR);
					iRow++;

					for(Pedido pedido:pedidosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedido.getvendedor_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoConstantesFunciones.LABEL_IDCONSULTOR:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoConstantesFunciones.LABEL_IDCONSULTOR);
					iRow++;

					for(Pedido pedido:pedidosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedido.getconsultor_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoConstantesFunciones.LABEL_ORDEN:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoConstantesFunciones.LABEL_ORDEN);
					iRow++;

					for(Pedido pedido:pedidosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedido.getorden());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoConstantesFunciones.LABEL_IDRESPONSABLE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoConstantesFunciones.LABEL_IDRESPONSABLE);
					iRow++;

					for(Pedido pedido:pedidosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedido.getresponsable_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoConstantesFunciones.LABEL_IDESTADOPEDIDO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoConstantesFunciones.LABEL_IDESTADOPEDIDO);
					iRow++;

					for(Pedido pedido:pedidosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedido.getestadopedido_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoConstantesFunciones.LABEL_IDTRANSPORTE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoConstantesFunciones.LABEL_IDTRANSPORTE);
					iRow++;

					for(Pedido pedido:pedidosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedido.gettransporte_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoConstantesFunciones.LABEL_IDRUTATRANSPORTE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoConstantesFunciones.LABEL_IDRUTATRANSPORTE);
					iRow++;

					for(Pedido pedido:pedidosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedido.getrutatransporte_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoConstantesFunciones.LABEL_VALORRUTA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoConstantesFunciones.LABEL_VALORRUTA);
					iRow++;

					for(Pedido pedido:pedidosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedido.getvalor_ruta());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoConstantesFunciones.LABEL_IDTIPOLLAMADA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoConstantesFunciones.LABEL_IDTIPOLLAMADA);
					iRow++;

					for(Pedido pedido:pedidosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedido.gettipollamada_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoConstantesFunciones.LABEL_IDTRANSPORTISTA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoConstantesFunciones.LABEL_IDTRANSPORTISTA);
					iRow++;

					for(Pedido pedido:pedidosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedido.gettransportista_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoConstantesFunciones.LABEL_HORAINICIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoConstantesFunciones.LABEL_HORAINICIO);
					iRow++;

					for(Pedido pedido:pedidosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedido.gethora_inicio());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoConstantesFunciones.LABEL_HORAFIN:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoConstantesFunciones.LABEL_HORAFIN);
					iRow++;

					for(Pedido pedido:pedidosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedido.gethora_fin());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoConstantesFunciones.LABEL_DESCRIPCION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoConstantesFunciones.LABEL_DESCRIPCION);
					iRow++;

					for(Pedido pedido:pedidosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedido.getdescripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoConstantesFunciones.LABEL_CUPO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoConstantesFunciones.LABEL_CUPO);
					iRow++;

					for(Pedido pedido:pedidosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedido.getcupo());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoConstantesFunciones.LABEL_SALDO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoConstantesFunciones.LABEL_SALDO);
					iRow++;

					for(Pedido pedido:pedidosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedido.getsaldo());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoConstantesFunciones.LABEL_PEDIDOS:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoConstantesFunciones.LABEL_PEDIDOS);
					iRow++;

					for(Pedido pedido:pedidosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedido.getpedidos());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoConstantesFunciones.LABEL_DOCUMENTOS:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoConstantesFunciones.LABEL_DOCUMENTOS);
					iRow++;

					for(Pedido pedido:pedidosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedido.getdocumentos());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoConstantesFunciones.LABEL_DISPONIBLE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoConstantesFunciones.LABEL_DISPONIBLE);
					iRow++;

					for(Pedido pedido:pedidosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedido.getdisponible());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoConstantesFunciones.LABEL_DESCUENTOPORCENTAJE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoConstantesFunciones.LABEL_DESCUENTOPORCENTAJE);
					iRow++;

					for(Pedido pedido:pedidosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedido.getdescuento_porcentaje());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoConstantesFunciones.LABEL_TOTALCONIVA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoConstantesFunciones.LABEL_TOTALCONIVA);
					iRow++;

					for(Pedido pedido:pedidosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedido.gettotal_con_iva());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoConstantesFunciones.LABEL_SUMAN:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoConstantesFunciones.LABEL_SUMAN);
					iRow++;

					for(Pedido pedido:pedidosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedido.getsuman());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoConstantesFunciones.LABEL_DESCUENTOVALOR:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoConstantesFunciones.LABEL_DESCUENTOVALOR);
					iRow++;

					for(Pedido pedido:pedidosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedido.getdescuento_valor());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoConstantesFunciones.LABEL_TOTALSINIVA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoConstantesFunciones.LABEL_TOTALSINIVA);
					iRow++;

					for(Pedido pedido:pedidosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedido.gettotal_sin_iva());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoConstantesFunciones.LABEL_DESCUENTOTOTAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoConstantesFunciones.LABEL_DESCUENTOTOTAL);
					iRow++;

					for(Pedido pedido:pedidosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedido.getdescuento_total());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoConstantesFunciones.LABEL_FLETE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoConstantesFunciones.LABEL_FLETE);
					iRow++;

					for(Pedido pedido:pedidosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedido.getflete());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoConstantesFunciones.LABEL_TOTAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoConstantesFunciones.LABEL_TOTAL);
					iRow++;

					for(Pedido pedido:pedidosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedido.gettotal());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoConstantesFunciones.LABEL_SUBTOTAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoConstantesFunciones.LABEL_SUBTOTAL);
					iRow++;

					for(Pedido pedido:pedidosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedido.getsubtotal());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoConstantesFunciones.LABEL_OTRO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoConstantesFunciones.LABEL_OTRO);
					iRow++;

					for(Pedido pedido:pedidosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedido.getotro());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoConstantesFunciones.LABEL_ULTIMOCOSTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoConstantesFunciones.LABEL_ULTIMOCOSTO);
					iRow++;

					for(Pedido pedido:pedidosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedido.getultimo_costo());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoConstantesFunciones.LABEL_IVA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoConstantesFunciones.LABEL_IVA);
					iRow++;

					for(Pedido pedido:pedidosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedido.getiva());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoConstantesFunciones.LABEL_FINANCIAMIENTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoConstantesFunciones.LABEL_FINANCIAMIENTO);
					iRow++;

					for(Pedido pedido:pedidosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedido.getfinanciamiento());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoConstantesFunciones.LABEL_MARGENUTILIDAD:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoConstantesFunciones.LABEL_MARGENUTILIDAD);
					iRow++;

					for(Pedido pedido:pedidosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedido.getmargen_utilidad());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoConstantesFunciones.LABEL_OTROSVALORES:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoConstantesFunciones.LABEL_OTROSVALORES);
					iRow++;

					for(Pedido pedido:pedidosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedido.getotros_valores());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoConstantesFunciones.LABEL_ANTICIPO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoConstantesFunciones.LABEL_ANTICIPO);
					iRow++;

					for(Pedido pedido:pedidosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedido.getanticipo());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoConstantesFunciones.LABEL_IDTIPOCAMBIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoConstantesFunciones.LABEL_IDTIPOCAMBIO);
					iRow++;

					for(Pedido pedido:pedidosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedido.gettipocambio_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoConstantesFunciones.LABEL_IDCENTROCOSTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoConstantesFunciones.LABEL_IDCENTROCOSTO);
					iRow++;

					for(Pedido pedido:pedidosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedido.getcentrocosto_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoConstantesFunciones.LABEL_IDZONA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoConstantesFunciones.LABEL_IDZONA);
					iRow++;

					for(Pedido pedido:pedidosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedido.getzona_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoConstantesFunciones.LABEL_FECHA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoConstantesFunciones.LABEL_FECHA);
					iRow++;

					for(Pedido pedido:pedidosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedido.getfecha());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoConstantesFunciones.LABEL_NUMEROFUE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoConstantesFunciones.LABEL_NUMEROFUE);
					iRow++;

					for(Pedido pedido:pedidosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedido.getnumero_fue());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoConstantesFunciones.LABEL_FECHASERVIDOR:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoConstantesFunciones.LABEL_FECHASERVIDOR);
					iRow++;

					for(Pedido pedido:pedidosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedido.getfecha_servidor());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoConstantesFunciones.LABEL_MONTORETENCION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoConstantesFunciones.LABEL_MONTORETENCION);
					iRow++;

					for(Pedido pedido:pedidosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedido.getmonto_retencion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoConstantesFunciones.LABEL_ICE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoConstantesFunciones.LABEL_ICE);
					iRow++;

					for(Pedido pedido:pedidosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedido.getice());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;
					
					default :
						break;
				}
			}
			
			
			//if(conCabecera) {
			//	this.getFilaCabeceraExportarExcelPedido(row);				
			//	iRow++;
			//}				
			
			//for(Pedido pedidoAux:pedidosSeleccionados) {
			//	row = sheet.createRow(iRow);
				
			//	this.getFilaDatosExportarExcelPedido(pedidoAux,row);
				
			//	iRow++;
			//}
			
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.pedidoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Pedido",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}				
	}	
	
	
	
	
	public void buscarPorId(Long idActual) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.getNewConnexionToDeep("");
			}
			
			this.idActual=idActual;
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda("PorId");
				    	
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingPedido(false);
			
			//SI ES MANUAL
			if(PedidoJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualPedido();
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger);
			
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonAnterioresPedidoActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion-=this.iNumeroPaginacion;
			/*
			if(this.iNumeroPaginacion<0) {
				this.iNumeroPaginacion=0;
			}
			*/
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.getNewConnexionToDeep("");
			}
			
			this.anteriores();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingPedido(false);
			
			//SI ES MANUAL
			if(PedidoJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualPedido();
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonSiguientesPedidoActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion+=this.iNumeroPaginacion;
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.getNewConnexionToDeep("");
			}
			
			this.siguientes();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingPedido(false);
			
			//SI ES MANUAL
			if(PedidoJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualPedido();
			}		
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void aumentarTamanioFilaNuevaTablaPedido() throws Exception {		
		Dimension dimensionMinimum=this.jTableDatosPedido.getMinimumSize();
		Dimension dimensionMaximum=this.jTableDatosPedido.getMaximumSize();
		Dimension dimensionPreferred=this.jTableDatosPedido.getPreferredSize();
	
		double iHeightConFilaNueva=dimensionPreferred.getHeight();
		
		iHeightConFilaNueva+=this.jTableDatosPedido.getRowHeight();
		
		dimensionMinimum.setSize(dimensionMinimum.getWidth(),iHeightConFilaNueva);
		dimensionMaximum.setSize(dimensionMaximum.getWidth(),iHeightConFilaNueva);
		dimensionPreferred.setSize(dimensionPreferred.getWidth(),iHeightConFilaNueva);
		
		this.jTableDatosPedido.setMinimumSize(dimensionMinimum);
		this.jTableDatosPedido.setMaximumSize(dimensionMaximum);
		this.jTableDatosPedido.setPreferredSize(dimensionPreferred);	
	}
	
	public void inicializarActualizarBindingPedido(Boolean esInicializar) throws Exception {
		this.inicializarActualizarBindingPedido(esInicializar,true);
	}
	
	public void inicializarActualizarBindingPedido(Boolean esInicializar,Boolean conTabla) throws Exception {		
		if(conTabla) {
			this.inicializarActualizarBindingTablaPedido(esInicializar);
		}
		
		this.inicializarActualizarBindingBotonesPedido(esInicializar);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.pedidoSessionBean.getEsGuardarRelacionado()) {
			try{this.inicializarActualizarBindingBusquedasPedido(esInicializar);}catch(Exception e){e.printStackTrace();}
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesPedido(esInicializar) ;
			
			this.inicializarActualizarBindingParametrosReportesPedido(esInicializar) ;
		}
		
		if(esInicializar) {
			if( !PedidoJInternalFrame.ISBINDING_MANUAL_TABLA ||
			   	!PedidoJInternalFrame.ISBINDING_MANUAL) {
			   	
			}
		}
	}
	
	public void inicializarActualizarBindingManualPedido() throws Exception {		
		//NO SE NECESITA HACER BINDING OTRA VEZ
		//this.inicializarActualizarBindingTablaPedido();
		
		this.inicializarActualizarBindingBotonesManualPedido(true);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.pedidoSessionBean.getEsGuardarRelacionado()) {
			
			this.inicializarActualizarBindingBusquedasManualPedido();			
			
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesPedido() ;
			
			this.inicializarActualizarBindingParametrosReportesPostAccionesManualPedido(false) ;			
			
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesPostAccionesManualPedido(Boolean esSetControles) throws Exception {
		try	{					
			if(!esSetControles) {
				this.isSeleccionarTodos=this.jCheckBoxSeleccionarTodosPedido.isSelected();
				this.isSeleccionados=this.jCheckBoxSeleccionadosPedido.isSelected();
				
				
				this.conGraficoReporte=this.jCheckBoxConGraficoReportePedido.isSelected();															
				
				
				if(this.jInternalFrameDetalleFormPedido!=null) {
				this.isPostAccionNuevo=this.jInternalFrameDetalleFormPedido.jCheckBoxPostAccionNuevoPedido.isSelected();
				this.isPostAccionSinCerrar=this.jInternalFrameDetalleFormPedido.jCheckBoxPostAccionSinCerrarPedido.isSelected();
				this.isPostAccionSinMensaje=this.jInternalFrameDetalleFormPedido.jCheckBoxPostAccionSinMensajePedido.isSelected();
				}
			
			} else {
				this.jCheckBoxSeleccionarTodosPedido.setSelected(this.isSeleccionarTodos);
				this.jCheckBoxSeleccionadosPedido.setSelected(this.isSeleccionados);
				
				
				this.jCheckBoxConGraficoReportePedido.setSelected(this.conGraficoReporte);				
				
				
				if(this.jInternalFrameDetalleFormPedido!=null) {
				this.jInternalFrameDetalleFormPedido.jCheckBoxPostAccionNuevoPedido.setSelected(this.isPostAccionNuevo);
				this.jInternalFrameDetalleFormPedido.jCheckBoxPostAccionSinCerrarPedido.setSelected(this.isPostAccionSinCerrar);
				this.jInternalFrameDetalleFormPedido.jCheckBoxPostAccionSinMensajePedido.setSelected(this.isPostAccionSinMensaje);
				}
			}
			
			
			if(this.jComboBoxTiposPaginacionPedido.getSelectedItem()!=null) {
				this.sTipoPaginacion=((Reporte)this.jComboBoxTiposPaginacionPedido.getSelectedItem()).getsCodigo();			
			}
			
			
			
			if(this.jInternalFrameDetalleFormPedido!=null) {
			this.sTipoAccionFormulario=((Reporte)this.jInternalFrameDetalleFormPedido.jComboBoxTiposAccionesFormularioPedido.getSelectedItem()).getsCodigo();
			}
			
			
			
			if(!this.conCargarMinimo) {
				this.sTipoArchivoReporte=((Reporte)this.jComboBoxTiposArchivosReportesPedido.getSelectedItem()).getsCodigo();			
				
				if(this.jInternalFrameReporteDinamicoPedido!=null) {
					this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoPedido.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
				}
				
				this.sTipoRelacion=((Reporte)this.jComboBoxTiposRelacionesPedido.getSelectedItem()).getsCodigo();
									
				this.sTipoAccion=((Reporte)this.jComboBoxTiposAccionesPedido.getSelectedItem()).getsCodigo();
													
				this.sTipoSeleccionar=((Reporte)this.jComboBoxTiposSeleccionarPedido.getSelectedItem()).getsCodigo();
									
				this.sTipoReporte=((Reporte)this.jComboBoxTiposReportesPedido.getSelectedItem()).getsCodigo();							
					
				if(this.jInternalFrameReporteDinamicoPedido!=null) {
					this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoPedido.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();							
				}
				
				this.sTipoGraficoReporte=((Reporte)this.jComboBoxTiposGraficosReportesPedido.getSelectedItem()).getsCodigo();											
			}			
			
			this.sValorCampoGeneral=this.jTextFieldValorCampoGeneralPedido.getText();						
			
			
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesPedido(Boolean esInicializar) throws Exception {
		try	{	
			if(PedidoJInternalFrame.ISBINDING_MANUAL) {
				this. inicializarActualizarBindingParametrosReportesPostAccionesManualPedido(false);
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public void inicializarActualizarBindingtiposArchivosReportesAccionesPedido() throws Exception {
		try	{
			if(PedidoJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingtiposArchivosReportesAccionesManualPedido();
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetallePedido() throws Exception {
		//TIPOS ACCIONES FORMULARIO	
		this.jInternalFrameDetalleFormPedido.jComboBoxTiposAccionesFormularioPedido.removeAllItems();
				
		for(Reporte reporte:this.tiposAccionesFormulario) {
			this.jInternalFrameDetalleFormPedido.jComboBoxTiposAccionesFormularioPedido.addItem(reporte);
		}
		
		//TIPOS ACCIONES FORMULARIO
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualPedido() throws Exception {
		try	{
			
			//TIPOS ARCHIVOS REPORTES
			this.jComboBoxTiposArchivosReportesPedido.removeAllItems();
				
			for(Reporte reporte:this.tiposArchivosReportes) {
				this.jComboBoxTiposArchivosReportesPedido.addItem(reporte);
			}
			
			
				
			//TIPOS REPORTES
			this.jComboBoxTiposReportesPedido.removeAllItems();
				
			for(Reporte reporte:this.tiposReportes) {
				this.jComboBoxTiposReportesPedido.addItem(reporte);
			}
			
			
			//TIPOS GRAFICOS REPORTES
			this.jComboBoxTiposGraficosReportesPedido.removeAllItems();
				
			for(Reporte reporte:this.tiposGraficosReportes) {
				this.jComboBoxTiposGraficosReportesPedido.addItem(reporte);
			}
			
			
			//TIPOS PAGINACION
			this.jComboBoxTiposPaginacionPedido.removeAllItems();
				
			for(Reporte reporte:this.tiposPaginacion) {
				this.jComboBoxTiposPaginacionPedido.addItem(reporte);
			}
			
			
			if(!this.pedidoSessionBean.getEsGuardarRelacionado()) {
				this.jComboBoxTiposPaginacionPedido.setSelectedItem(Funciones2.getTipoPaginacionDefecto("NORMAL",this.tiposPaginacion));
			} else {
				this.jComboBoxTiposPaginacionPedido.setSelectedItem(Funciones2.getTipoPaginacionDefecto("RELACIONADO",this.tiposPaginacion));
			}
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposRelacionesPedido.removeAllItems();
				
			for(Reporte reporte:this.tiposRelaciones) {
				this.jComboBoxTiposRelacionesPedido.addItem(reporte);
			}
			
			//TIPOS ACCIONES
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposAccionesPedido.removeAllItems();
				
			for(Reporte reporte:this.tiposAcciones) {
				this.jComboBoxTiposAccionesPedido.addItem(reporte);
			}
			
			//TIPOS ACCIONES			
			
			
			
			//TIPOS ACCIONES FORMULARIO	
			if(this.jInternalFrameDetalleFormPedido!=null) { //if(this.conCargarFormDetalle) {
				this.jInternalFrameDetalleFormPedido.jComboBoxTiposAccionesFormularioPedido.removeAllItems();
				
				for(Reporte reporte:this.tiposAccionesFormulario) {
					this.jInternalFrameDetalleFormPedido.jComboBoxTiposAccionesFormularioPedido.addItem(reporte);
				}
				
			}
			//TIPOS ACCIONES FORMULARIO
			
			
			
			//TIPOS SELECCIONAR
			this.jComboBoxTiposSeleccionarPedido.removeAllItems();
				
			for(Reporte reporte:this.tiposSeleccionar) {
				this.jComboBoxTiposSeleccionarPedido.addItem(reporte);
			}
			
			
			if(this.tiposSeleccionar!=null && this.tiposSeleccionar.size()>1) {
				this.jComboBoxTiposSeleccionarPedido.setSelectedIndex(1);
			}
				
			//REPORTE DINAMICO
			this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualPedido();
							
			//TIPOS COLUMNAS SELECT
			//TIPOS SELECCIONAR
			
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualPedido() throws Exception {
		try	{
			DefaultListModel<Reporte> defaultListModel=new DefaultListModel<Reporte>();
			
			
			//TIPOS ARCHIVOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoPedido!=null) {
				this.jInternalFrameReporteDinamicoPedido.getjComboBoxTiposArchivosReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposArchivosReportesDinamico) {
					this.jInternalFrameReporteDinamicoPedido.getjComboBoxTiposArchivosReportesDinamico().addItem(reporte);
				}
				
			}
			
			//TIPOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoPedido!=null) {
				this.jInternalFrameReporteDinamicoPedido.getjComboBoxTiposReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposReportesDinamico) {
					this.jInternalFrameReporteDinamicoPedido.getjComboBoxTiposReportesDinamico().addItem(reporte);
				}
				
			}
			
			defaultListModel=new DefaultListModel<Reporte>();
			
			if(this.jInternalFrameReporteDinamicoPedido!=null) {
				
				if(this.jInternalFrameReporteDinamicoPedido.getjListColumnasSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoPedido.getjListColumnasSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposColumnasSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoPedido.getjListColumnasSelectReporte().setModel(defaultListModel);									
						
				}	
					
				//TIPOS RELACIONES SELECT
				//TIPOS SELECCIONAR
				defaultListModel=new DefaultListModel<Reporte>();
				if(this.jInternalFrameReporteDinamicoPedido.getjListRelacionesSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoPedido.getjListRelacionesSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposRelacionesSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoPedido.getjListRelacionesSelectReporte().setModel(defaultListModel);									
						
				}	
				
				
				//TIPOS COLUMNAS CATEGORIA DINAMICO
				if(this.jInternalFrameReporteDinamicoPedido.getjComboBoxColumnaCategoriaGrafico()!=null) {
					this.jInternalFrameReporteDinamicoPedido.getjComboBoxColumnaCategoriaGrafico().removeAllItems();
						
					ArrayList<Reporte> tiposColumnasCategoria=PedidoConstantesFunciones.getTiposSeleccionarPedido(true,true,false,true,true);
						
					for(Reporte reporte:tiposColumnasCategoria) {//this.tiposSeleccionar
						this.jInternalFrameReporteDinamicoPedido.getjComboBoxColumnaCategoriaGrafico().addItem(reporte);
					}
					
				}
					
				//TIPOS COLUMNAS CATEGORIA VALOR DINAMICO
				if(this.jInternalFrameReporteDinamicoPedido.getjComboBoxColumnaCategoriaValor()!=null) {
					this.jInternalFrameReporteDinamicoPedido.getjComboBoxColumnaCategoriaValor().removeAllItems();
						
					ArrayList<Reporte> tiposColumnasCategoriaValor=PedidoConstantesFunciones.getTiposSeleccionarPedido(false,false,true,false,false);
						
					for(Reporte reporte:tiposColumnasCategoriaValor) {//this.tiposSeleccionar
						this.jInternalFrameReporteDinamicoPedido.getjComboBoxColumnaCategoriaValor().addItem(reporte);
					}
					
				}
					
				//TIPOS COLUMNAS VALOR
				defaultListModel=new DefaultListModel<Reporte>();
					
				if(this.jInternalFrameReporteDinamicoPedido.getjListColumnasValoresGrafico()!=null) {
					this.jInternalFrameReporteDinamicoPedido.getjListColumnasValoresGrafico().removeAll();
						
					ArrayList<Reporte> tiposColumnasValor=PedidoConstantesFunciones.getTiposSeleccionarPedido(false,false,true,false,false);
						
					for(Reporte reporte:tiposColumnasValor) {//this.tiposSeleccionar
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoPedido.getjListColumnasValoresGrafico().setModel(defaultListModel);									
						
				}
					
				//TIPOS GRAFICOS REPORTES DINAMICOS
				if(this.jInternalFrameReporteDinamicoPedido.getjComboBoxTiposGraficosReportesDinamico()!=null) {
					this.jInternalFrameReporteDinamicoPedido.getjComboBoxTiposGraficosReportesDinamico().removeAllItems();
						
					for(Reporte reporte:this.tiposGraficosReportes) {
						this.jInternalFrameReporteDinamicoPedido.getjComboBoxTiposGraficosReportesDinamico().addItem(reporte);
					}
					
				}
			
			
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	
	
	public void inicializarActualizarBindingBusquedasManualPedido()  throws Exception {				
		//BYDAN_BUSQUEDAS		
		
		if(this.jComboBoxid_centro_costoFK_IdCentroCostoPedido.getSelectedItem()!=null){this.id_centro_costoFK_IdCentroCosto=((CentroCosto)this.jComboBoxid_centro_costoFK_IdCentroCostoPedido.getSelectedItem()).getId();}
		if(this.jComboBoxid_clienteFK_IdClientePedido.getSelectedItem()!=null){this.id_clienteFK_IdCliente=((Cliente)this.jComboBoxid_clienteFK_IdClientePedido.getSelectedItem()).getId();}
		if(this.jComboBoxid_consultorFK_IdConsultorPedido.getSelectedItem()!=null){this.id_consultorFK_IdConsultor=((Consultor)this.jComboBoxid_consultorFK_IdConsultorPedido.getSelectedItem()).getId();}
		if(this.jComboBoxid_empleadoFK_IdEmpleadoPedido.getSelectedItem()!=null){this.id_empleadoFK_IdEmpleado=((Empleado)this.jComboBoxid_empleadoFK_IdEmpleadoPedido.getSelectedItem()).getId();}
		if(this.jComboBoxid_estado_pedidoFK_IdEstadoPedidoPedido.getSelectedItem()!=null){this.id_estado_pedidoFK_IdEstadoPedido=((EstadoPedido)this.jComboBoxid_estado_pedidoFK_IdEstadoPedidoPedido.getSelectedItem()).getId();}
		if(this.jComboBoxid_formatoFK_IdFormatoPedido.getSelectedItem()!=null){this.id_formatoFK_IdFormato=((Formato)this.jComboBoxid_formatoFK_IdFormatoPedido.getSelectedItem()).getId();}
		if(this.jComboBoxid_responsableFK_IdResponsablePedido.getSelectedItem()!=null){this.id_responsableFK_IdResponsable=((Responsable)this.jComboBoxid_responsableFK_IdResponsablePedido.getSelectedItem()).getId();}
		if(this.jComboBoxid_ruta_transporteFK_IdRutaTransportePedido.getSelectedItem()!=null){this.id_ruta_transporteFK_IdRutaTransporte=((RutaTransporte)this.jComboBoxid_ruta_transporteFK_IdRutaTransportePedido.getSelectedItem()).getId();}
		if(this.jComboBoxid_sub_clienteFK_IdSubClientePedido.getSelectedItem()!=null){this.id_sub_clienteFK_IdSubCliente=((SubCliente)this.jComboBoxid_sub_clienteFK_IdSubClientePedido.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_cambioFK_IdTipoCambioPedido.getSelectedItem()!=null){this.id_tipo_cambioFK_IdTipoCambio=((TipoCambio)this.jComboBoxid_tipo_cambioFK_IdTipoCambioPedido.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_llamadaFK_IdTipoLlamadaPedido.getSelectedItem()!=null){this.id_tipo_llamadaFK_IdTipoLlamada=((TipoLlamada)this.jComboBoxid_tipo_llamadaFK_IdTipoLlamadaPedido.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_precioFK_IdTipoPrecioPedido.getSelectedItem()!=null){this.id_tipo_precioFK_IdTipoPrecio=((TipoPrecio)this.jComboBoxid_tipo_precioFK_IdTipoPrecioPedido.getSelectedItem()).getId();}
		if(this.jComboBoxid_transporteFK_IdTransportePedido.getSelectedItem()!=null){this.id_transporteFK_IdTransporte=((Transporte)this.jComboBoxid_transporteFK_IdTransportePedido.getSelectedItem()).getId();}
		if(this.jComboBoxid_transportistaFK_IdTransportistaPedido.getSelectedItem()!=null){this.id_transportistaFK_IdTransportista=((Transportista)this.jComboBoxid_transportistaFK_IdTransportistaPedido.getSelectedItem()).getId();}
		if(this.jComboBoxid_vendedorFK_IdVendedorPedido.getSelectedItem()!=null){this.id_vendedorFK_IdVendedor=((Vendedor)this.jComboBoxid_vendedorFK_IdVendedorPedido.getSelectedItem()).getId();}
		if(this.jComboBoxid_zonaFK_IdZonaPedido.getSelectedItem()!=null){this.id_zonaFK_IdZona=((Zona)this.jComboBoxid_zonaFK_IdZonaPedido.getSelectedItem()).getId();}
		
	}
	
	
	
	
	public void inicializarActualizarBindingBusquedasPedido(Boolean esInicializar) throws Exception {				
		if(PedidoJInternalFrame.ISBINDING_MANUAL) {
			
			this.inicializarActualizarBindingBusquedasManualPedido();			
			
		} else {
		}
	}		
		
	public void inicializarActualizarBindingTablaPedido() throws Exception {
		this.inicializarActualizarBindingTablaPedido(false);
	}
	
	
	public void inicializarActualizarBindingTablaOrderByPedido() {
		//TABLA OrderBy	
		TableColumn tableColumn=new TableColumn();
		Integer iWidthTableDefinicionOrderBy=0;			
			
		this.jInternalFrameOrderByPedido.getjTableDatosOrderBy().setModel(new TablaGeneralOrderByModel(this.arrOrderBy));
					
		//DEFINIR RENDERERS OrderBy
		tableColumn=this.jInternalFrameOrderByPedido.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByPedido.getjTableDatosOrderBy(),OrderBy.ISSELECTED));			
		//tableColumn.addPropertyChangeListener(new PedidoPropertyChangeListener());
					
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		iWidthTableDefinicionOrderBy+=50;
					
		tableColumn=this.jInternalFrameOrderByPedido.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByPedido.getjTableDatosOrderBy(),OrderBy.NOMBRE));
		//tableColumn.addPropertyChangeListener(new PedidoPropertyChangeListener());
					
		tableColumn.setPreferredWidth(150); 	 
		tableColumn.setWidth(150); 	 
		tableColumn.setMinWidth(150);
		tableColumn.setMaxWidth(150);
				
		iWidthTableDefinicionOrderBy+=150;
					
		//tableColumn=this.jTableDatosPedidoOrderBy.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoOrderBy,OrderBy.NOMBREDB));			
		////tableColumn.addPropertyChangeListener(new PedidoPropertyChangeListener());
								
		tableColumn=this.jInternalFrameOrderByPedido.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByPedido.getjTableDatosOrderBy(),OrderBy.ESDESC));
		//tableColumn.addPropertyChangeListener(new PedidoPropertyChangeListener());
												
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		((AbstractTableModel) this.jInternalFrameOrderByPedido.getjTableDatosOrderBy().getModel()).fireTableDataChanged();
				
		iWidthTableDefinicionOrderBy+=50;
	}
	
	
	
	public void inicializarActualizarBindingTablaPedido(Boolean esInicializar) throws Exception {
		Boolean isNoExiste=false;
		Integer iCountNumeroColumnasNormal=0;
		Integer iCountNumeroColumnasFk=0;
		
		this.iWidthTableDefinicion=0;
		
		int iSizeTabla=0;
		
		iSizeTabla=this.getSizeTablaDatos();
		
	if(esInicializar || ConstantesSwing.FORZAR_INICIALIZAR_TABLA) {//esInicializar
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			isNoExiste=pedidoLogic.getPedidos().size()==0;
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			isNoExiste=pedidos.size()==0;
		}
		//ARCHITECTURE
			
		if(isNoExiste) {
			if(this.iNumeroPaginacion-this.iNumeroPaginacion>0) {
				this.iNumeroPaginacion-=this.iNumeroPaginacion;
			}
		}
		
		TableColumn tableColumn=new TableColumn();
		
		if(PedidoJInternalFrame.ISBINDING_MANUAL_TABLA) {
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.jTableDatosPedido.setModel(new PedidoModel(this.pedidoLogic.getPedidos(),this));
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.jTableDatosPedido.setModel(new PedidoModel(this.pedidos,this));
			}
			//ARCHITECTURE
			
							
			
			
			if(this.jInternalFrameOrderByPedido!=null && this.jInternalFrameOrderByPedido.getjTableDatosOrderBy()!=null) {
				this.inicializarActualizarBindingTablaOrderByPedido();
			}
			
								
			//DEFINIR RENDERERS
			tableColumn=this.jTableDatosPedido.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedido,Constantes2.S_SELECCIONAR));
			//tableColumn.addPropertyChangeListener(new PedidoPropertyChangeListener());
			tableColumn.setCellRenderer(new BooleanRenderer(true,"Seleccionar "+PedidoConstantesFunciones.SCLASSWEBTITULO,pedidoConstantesFunciones.resaltarSeleccionarPedido,iSizeTabla,true,false,"","",this));
			tableColumn.setCellEditor(new BooleanEditorRenderer(true,"Seleccionar "+PedidoConstantesFunciones.SCLASSWEBTITULO,pedidoConstantesFunciones.resaltarSeleccionarPedido,false,"","",this));			
			
			tableColumn.setPreferredWidth(50); 	 
			tableColumn.setWidth(50); 	 
			tableColumn.setMinWidth(50); 
			tableColumn.setMaxWidth(50); 
			
			this.iWidthTableDefinicion+=50;
			
			


			tableColumn=this.jTableDatosPedido.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedido,PedidoConstantesFunciones.LABEL_ID));

		if(this.pedidoConstantesFunciones.mostraridPedido && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoConstantesFunciones.LABEL_ID,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.pedidoConstantesFunciones.resaltaridPedido,this.pedidoConstantesFunciones.activaridPedido,iSizeTabla,this,true,"idPedido","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pedidoConstantesFunciones.resaltaridPedido,this.pedidoConstantesFunciones.activaridPedido,this,true,"idPedido","BASICO",false));

			tableColumn.setPreferredWidth(50);
			tableColumn.setWidth(50);
			tableColumn.setMinWidth(50);
			tableColumn.setMaxWidth(50);

			this.iWidthTableDefinicion+=50;
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedido.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedido,PedidoConstantesFunciones.LABEL_IDEMPRESA));

		if(this.pedidoConstantesFunciones.mostrarid_empresaPedido && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoConstantesFunciones.LABEL_IDEMPRESA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new EmpresaTableCell(this.empresasForeignKey,this.pedidoConstantesFunciones.resaltarid_empresaPedido,this,this.pedidoConstantesFunciones.activarid_empresaPedido,iSizeTabla));
			tableColumn.setCellEditor(new EmpresaTableCell(this.empresasForeignKey,this.pedidoConstantesFunciones.resaltarid_empresaPedido,this,this.pedidoConstantesFunciones.activarid_empresaPedido,false,"id_empresaPedido","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedido.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedido,PedidoConstantesFunciones.LABEL_IDSUCURSAL));

		if(this.pedidoConstantesFunciones.mostrarid_sucursalPedido && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoConstantesFunciones.LABEL_IDSUCURSAL,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new SucursalTableCell(this.sucursalsForeignKey,this.pedidoConstantesFunciones.resaltarid_sucursalPedido,this,this.pedidoConstantesFunciones.activarid_sucursalPedido,iSizeTabla));
			tableColumn.setCellEditor(new SucursalTableCell(this.sucursalsForeignKey,this.pedidoConstantesFunciones.resaltarid_sucursalPedido,this,this.pedidoConstantesFunciones.activarid_sucursalPedido,false,"id_sucursalPedido","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedido.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedido,PedidoConstantesFunciones.LABEL_IDEJERCICIO));

		if(this.pedidoConstantesFunciones.mostrarid_ejercicioPedido && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoConstantesFunciones.LABEL_IDEJERCICIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new EjercicioTableCell(this.ejerciciosForeignKey,this.pedidoConstantesFunciones.resaltarid_ejercicioPedido,this,this.pedidoConstantesFunciones.activarid_ejercicioPedido,iSizeTabla));
			tableColumn.setCellEditor(new EjercicioTableCell(this.ejerciciosForeignKey,this.pedidoConstantesFunciones.resaltarid_ejercicioPedido,this,this.pedidoConstantesFunciones.activarid_ejercicioPedido,false,"id_ejercicioPedido","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedido.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedido,PedidoConstantesFunciones.LABEL_IDPERIODO));

		if(this.pedidoConstantesFunciones.mostrarid_periodoPedido && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoConstantesFunciones.LABEL_IDPERIODO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new PeriodoTableCell(this.periodosForeignKey,this.pedidoConstantesFunciones.resaltarid_periodoPedido,this,this.pedidoConstantesFunciones.activarid_periodoPedido,iSizeTabla));
			tableColumn.setCellEditor(new PeriodoTableCell(this.periodosForeignKey,this.pedidoConstantesFunciones.resaltarid_periodoPedido,this,this.pedidoConstantesFunciones.activarid_periodoPedido,false,"id_periodoPedido","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedido.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedido,PedidoConstantesFunciones.LABEL_IDANIO));

		if(this.pedidoConstantesFunciones.mostrarid_anioPedido && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoConstantesFunciones.LABEL_IDANIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new AnioTableCell(this.aniosForeignKey,this.pedidoConstantesFunciones.resaltarid_anioPedido,this,this.pedidoConstantesFunciones.activarid_anioPedido,iSizeTabla));
			tableColumn.setCellEditor(new AnioTableCell(this.aniosForeignKey,this.pedidoConstantesFunciones.resaltarid_anioPedido,this,this.pedidoConstantesFunciones.activarid_anioPedido,true,"id_anioPedido","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedido.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedido,PedidoConstantesFunciones.LABEL_IDMES));

		if(this.pedidoConstantesFunciones.mostrarid_mesPedido && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoConstantesFunciones.LABEL_IDMES,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new MesTableCell(this.messForeignKey,this.pedidoConstantesFunciones.resaltarid_mesPedido,this,this.pedidoConstantesFunciones.activarid_mesPedido,iSizeTabla));
			tableColumn.setCellEditor(new MesTableCell(this.messForeignKey,this.pedidoConstantesFunciones.resaltarid_mesPedido,this,this.pedidoConstantesFunciones.activarid_mesPedido,true,"id_mesPedido","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedido.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedido,PedidoConstantesFunciones.LABEL_IDUSUARIO));

		if(this.pedidoConstantesFunciones.mostrarid_usuarioPedido && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoConstantesFunciones.LABEL_IDUSUARIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new UsuarioTableCell(this.usuariosForeignKey,this.pedidoConstantesFunciones.resaltarid_usuarioPedido,this,this.pedidoConstantesFunciones.activarid_usuarioPedido,iSizeTabla));
			tableColumn.setCellEditor(new UsuarioTableCell(this.usuariosForeignKey,this.pedidoConstantesFunciones.resaltarid_usuarioPedido,this,this.pedidoConstantesFunciones.activarid_usuarioPedido,false,"id_usuarioPedido","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedido.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedido,PedidoConstantesFunciones.LABEL_NUMERO));

		if(this.pedidoConstantesFunciones.mostrarnumeroPedido && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoConstantesFunciones.LABEL_NUMERO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.pedidoConstantesFunciones.resaltarnumeroPedido,this.pedidoConstantesFunciones.activarnumeroPedido,iSizeTabla,this,true,"numeroPedido","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pedidoConstantesFunciones.resaltarnumeroPedido,this.pedidoConstantesFunciones.activarnumeroPedido,this,true,"numeroPedido","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedido.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedido,PedidoConstantesFunciones.LABEL_PREIMPRESO));

		if(this.pedidoConstantesFunciones.mostrarpre_impresoPedido && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoConstantesFunciones.LABEL_PREIMPRESO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.pedidoConstantesFunciones.resaltarpre_impresoPedido,this.pedidoConstantesFunciones.activarpre_impresoPedido,iSizeTabla,this,true,"pre_impresoPedido","BASICO-CON_EVENT_CHANGE"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pedidoConstantesFunciones.resaltarpre_impresoPedido,this.pedidoConstantesFunciones.activarpre_impresoPedido,this,true,"pre_impresoPedido","BASICO-CON_EVENT_CHANGE",true));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedido.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedido,PedidoConstantesFunciones.LABEL_FECHAEMISION));

		if(this.pedidoConstantesFunciones.mostrarfecha_emisionPedido && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoConstantesFunciones.LABEL_FECHAEMISION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new DateRenderer(this.pedidoConstantesFunciones.resaltarfecha_emisionPedido,this.pedidoConstantesFunciones.activarfecha_emisionPedido,iSizeTabla,this,true,"fecha_emisionPedido","BASICO"));
			tableColumn.setCellEditor(new DateEditorRenderer(this.pedidoConstantesFunciones.resaltarfecha_emisionPedido,this.pedidoConstantesFunciones.activarfecha_emisionPedido,this,true,"fecha_emisionPedido","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30);
			//tableColumn.addPropertyChangeListener(new PedidoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedido.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedido,PedidoConstantesFunciones.LABEL_FECHAENTREGA));

		if(this.pedidoConstantesFunciones.mostrarfecha_entregaPedido && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoConstantesFunciones.LABEL_FECHAENTREGA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new DateRenderer(this.pedidoConstantesFunciones.resaltarfecha_entregaPedido,this.pedidoConstantesFunciones.activarfecha_entregaPedido,iSizeTabla,this,true,"fecha_entregaPedido","BASICO"));
			tableColumn.setCellEditor(new DateEditorRenderer(this.pedidoConstantesFunciones.resaltarfecha_entregaPedido,this.pedidoConstantesFunciones.activarfecha_entregaPedido,this,true,"fecha_entregaPedido","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30);
			//tableColumn.addPropertyChangeListener(new PedidoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedido.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedido,PedidoConstantesFunciones.LABEL_IDMONEDA));

		if(this.pedidoConstantesFunciones.mostrarid_monedaPedido && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoConstantesFunciones.LABEL_IDMONEDA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new MonedaTableCell(this.monedasForeignKey,this.pedidoConstantesFunciones.resaltarid_monedaPedido,this,this.pedidoConstantesFunciones.activarid_monedaPedido,iSizeTabla));
			tableColumn.setCellEditor(new MonedaTableCell(this.monedasForeignKey,this.pedidoConstantesFunciones.resaltarid_monedaPedido,this,this.pedidoConstantesFunciones.activarid_monedaPedido,false,"id_monedaPedido","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedido.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedido,PedidoConstantesFunciones.LABEL_COTIZACION));

		if(this.pedidoConstantesFunciones.mostrarcotizacionPedido && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoConstantesFunciones.LABEL_COTIZACION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.pedidoConstantesFunciones.resaltarcotizacionPedido,this.pedidoConstantesFunciones.activarcotizacionPedido,iSizeTabla,this,true,"cotizacionPedido","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pedidoConstantesFunciones.resaltarcotizacionPedido,this.pedidoConstantesFunciones.activarcotizacionPedido,this,true,"cotizacionPedido","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new PedidoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedido.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedido,PedidoConstantesFunciones.LABEL_IDEMPLEADO));

		if(this.pedidoConstantesFunciones.mostrarid_empleadoPedido && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoConstantesFunciones.LABEL_IDEMPLEADO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new EmpleadoTableCell(this.empleadosForeignKey,this.pedidoConstantesFunciones.resaltarid_empleadoPedido,this,this.pedidoConstantesFunciones.activarid_empleadoPedido,iSizeTabla));
			tableColumn.setCellEditor(new EmpleadoTableCell(this.empleadosForeignKey,this.pedidoConstantesFunciones.resaltarid_empleadoPedido,this,this.pedidoConstantesFunciones.activarid_empleadoPedido,true,"id_empleadoPedido","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100);
			//tableColumn.addPropertyChangeListener(new PedidoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedido.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedido,PedidoConstantesFunciones.LABEL_IDTIPOPRECIO));

		if(this.pedidoConstantesFunciones.mostrarid_tipo_precioPedido && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoConstantesFunciones.LABEL_IDTIPOPRECIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoPrecioTableCell(this.tipopreciosForeignKey,this.pedidoConstantesFunciones.resaltarid_tipo_precioPedido,this,this.pedidoConstantesFunciones.activarid_tipo_precioPedido,iSizeTabla));
			tableColumn.setCellEditor(new TipoPrecioTableCell(this.tipopreciosForeignKey,this.pedidoConstantesFunciones.resaltarid_tipo_precioPedido,this,this.pedidoConstantesFunciones.activarid_tipo_precioPedido,true,"id_tipo_precioPedido","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedido.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedido,PedidoConstantesFunciones.LABEL_IDFORMATO));

		if(this.pedidoConstantesFunciones.mostrarid_formatoPedido && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoConstantesFunciones.LABEL_IDFORMATO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new FormatoTableCell(this.formatosForeignKey,this.pedidoConstantesFunciones.resaltarid_formatoPedido,this,this.pedidoConstantesFunciones.activarid_formatoPedido,iSizeTabla));
			tableColumn.setCellEditor(new FormatoTableCell(this.formatosForeignKey,this.pedidoConstantesFunciones.resaltarid_formatoPedido,this,this.pedidoConstantesFunciones.activarid_formatoPedido,true,"id_formatoPedido","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedido.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedido,PedidoConstantesFunciones.LABEL_DIRECCION));

		if(this.pedidoConstantesFunciones.mostrardireccionPedido && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoConstantesFunciones.LABEL_DIRECCION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.pedidoConstantesFunciones.resaltardireccionPedido,this.pedidoConstantesFunciones.activardireccionPedido,iSizeTabla,this,true,"direccionPedido","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pedidoConstantesFunciones.resaltardireccionPedido,this.pedidoConstantesFunciones.activardireccionPedido,this,true,"direccionPedido","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedido.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedido,PedidoConstantesFunciones.LABEL_IDCLIENTE));

		if(this.pedidoConstantesFunciones.mostrarid_clientePedido && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoConstantesFunciones.LABEL_IDCLIENTE,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new ClienteTableCell(this.clientesForeignKey,this.pedidoConstantesFunciones.resaltarid_clientePedido,this,this.pedidoConstantesFunciones.activarid_clientePedido,iSizeTabla));
			tableColumn.setCellEditor(new ClienteTableCell(this.clientesForeignKey,this.pedidoConstantesFunciones.resaltarid_clientePedido,this,this.pedidoConstantesFunciones.activarid_clientePedido,true,"id_clientePedido","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75);
			//tableColumn.addPropertyChangeListener(new PedidoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedido.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedido,PedidoConstantesFunciones.LABEL_TELEFONO));

		if(this.pedidoConstantesFunciones.mostrartelefonoPedido && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoConstantesFunciones.LABEL_TELEFONO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.pedidoConstantesFunciones.resaltartelefonoPedido,this.pedidoConstantesFunciones.activartelefonoPedido,iSizeTabla,this,true,"telefonoPedido","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pedidoConstantesFunciones.resaltartelefonoPedido,this.pedidoConstantesFunciones.activartelefonoPedido,this,true,"telefonoPedido","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedido.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedido,PedidoConstantesFunciones.LABEL_RUC));

		if(this.pedidoConstantesFunciones.mostrarrucPedido && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoConstantesFunciones.LABEL_RUC,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.pedidoConstantesFunciones.resaltarrucPedido,this.pedidoConstantesFunciones.activarrucPedido,iSizeTabla,this,true,"rucPedido","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pedidoConstantesFunciones.resaltarrucPedido,this.pedidoConstantesFunciones.activarrucPedido,this,true,"rucPedido","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedido.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedido,PedidoConstantesFunciones.LABEL_IDSUBCLIENTE));

		if(this.pedidoConstantesFunciones.mostrarid_sub_clientePedido && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoConstantesFunciones.LABEL_IDSUBCLIENTE,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new SubClienteTableCell(this.subclientesForeignKey,this.pedidoConstantesFunciones.resaltarid_sub_clientePedido,this,this.pedidoConstantesFunciones.activarid_sub_clientePedido,iSizeTabla));
			tableColumn.setCellEditor(new SubClienteTableCell(this.subclientesForeignKey,this.pedidoConstantesFunciones.resaltarid_sub_clientePedido,this,this.pedidoConstantesFunciones.activarid_sub_clientePedido,true,"id_sub_clientePedido","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedido.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedido,PedidoConstantesFunciones.LABEL_IDVENDEDOR));

		if(this.pedidoConstantesFunciones.mostrarid_vendedorPedido && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoConstantesFunciones.LABEL_IDVENDEDOR,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new VendedorTableCell(this.vendedorsForeignKey,this.pedidoConstantesFunciones.resaltarid_vendedorPedido,this,this.pedidoConstantesFunciones.activarid_vendedorPedido,iSizeTabla));
			tableColumn.setCellEditor(new VendedorTableCell(this.vendedorsForeignKey,this.pedidoConstantesFunciones.resaltarid_vendedorPedido,this,this.pedidoConstantesFunciones.activarid_vendedorPedido,true,"id_vendedorPedido","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedido.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedido,PedidoConstantesFunciones.LABEL_IDCONSULTOR));

		if(this.pedidoConstantesFunciones.mostrarid_consultorPedido && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoConstantesFunciones.LABEL_IDCONSULTOR,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new ConsultorTableCell(this.consultorsForeignKey,this.pedidoConstantesFunciones.resaltarid_consultorPedido,this,this.pedidoConstantesFunciones.activarid_consultorPedido,iSizeTabla));
			tableColumn.setCellEditor(new ConsultorTableCell(this.consultorsForeignKey,this.pedidoConstantesFunciones.resaltarid_consultorPedido,this,this.pedidoConstantesFunciones.activarid_consultorPedido,true,"id_consultorPedido","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedido.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedido,PedidoConstantesFunciones.LABEL_ORDEN));

		if(this.pedidoConstantesFunciones.mostrarordenPedido && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoConstantesFunciones.LABEL_ORDEN,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.pedidoConstantesFunciones.resaltarordenPedido,this.pedidoConstantesFunciones.activarordenPedido,iSizeTabla,this,true,"ordenPedido","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pedidoConstantesFunciones.resaltarordenPedido,this.pedidoConstantesFunciones.activarordenPedido,this,true,"ordenPedido","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedido.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedido,PedidoConstantesFunciones.LABEL_IDRESPONSABLE));

		if(this.pedidoConstantesFunciones.mostrarid_responsablePedido && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoConstantesFunciones.LABEL_IDRESPONSABLE,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new ResponsableTableCell(this.responsablesForeignKey,this.pedidoConstantesFunciones.resaltarid_responsablePedido,this,this.pedidoConstantesFunciones.activarid_responsablePedido,iSizeTabla));
			tableColumn.setCellEditor(new ResponsableTableCell(this.responsablesForeignKey,this.pedidoConstantesFunciones.resaltarid_responsablePedido,this,this.pedidoConstantesFunciones.activarid_responsablePedido,true,"id_responsablePedido","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedido.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedido,PedidoConstantesFunciones.LABEL_IDESTADOPEDIDO));

		if(this.pedidoConstantesFunciones.mostrarid_estado_pedidoPedido && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoConstantesFunciones.LABEL_IDESTADOPEDIDO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new EstadoPedidoTableCell(this.estadopedidosForeignKey,this.pedidoConstantesFunciones.resaltarid_estado_pedidoPedido,this,this.pedidoConstantesFunciones.activarid_estado_pedidoPedido,iSizeTabla));
			tableColumn.setCellEditor(new EstadoPedidoTableCell(this.estadopedidosForeignKey,this.pedidoConstantesFunciones.resaltarid_estado_pedidoPedido,this,this.pedidoConstantesFunciones.activarid_estado_pedidoPedido,true,"id_estado_pedidoPedido","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedido.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedido,PedidoConstantesFunciones.LABEL_IDTRANSPORTE));

		if(this.pedidoConstantesFunciones.mostrarid_transportePedido && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoConstantesFunciones.LABEL_IDTRANSPORTE,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TransporteTableCell(this.transportesForeignKey,this.pedidoConstantesFunciones.resaltarid_transportePedido,this,this.pedidoConstantesFunciones.activarid_transportePedido,iSizeTabla));
			tableColumn.setCellEditor(new TransporteTableCell(this.transportesForeignKey,this.pedidoConstantesFunciones.resaltarid_transportePedido,this,this.pedidoConstantesFunciones.activarid_transportePedido,true,"id_transportePedido","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedido.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedido,PedidoConstantesFunciones.LABEL_IDRUTATRANSPORTE));

		if(this.pedidoConstantesFunciones.mostrarid_ruta_transportePedido && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoConstantesFunciones.LABEL_IDRUTATRANSPORTE,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new RutaTransporteTableCell(this.rutatransportesForeignKey,this.pedidoConstantesFunciones.resaltarid_ruta_transportePedido,this,this.pedidoConstantesFunciones.activarid_ruta_transportePedido,iSizeTabla));
			tableColumn.setCellEditor(new RutaTransporteTableCell(this.rutatransportesForeignKey,this.pedidoConstantesFunciones.resaltarid_ruta_transportePedido,this,this.pedidoConstantesFunciones.activarid_ruta_transportePedido,true,"id_ruta_transportePedido","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedido.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedido,PedidoConstantesFunciones.LABEL_VALORRUTA));

		if(this.pedidoConstantesFunciones.mostrarvalor_rutaPedido && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoConstantesFunciones.LABEL_VALORRUTA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.pedidoConstantesFunciones.resaltarvalor_rutaPedido,this.pedidoConstantesFunciones.activarvalor_rutaPedido,iSizeTabla,this,true,"valor_rutaPedido","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pedidoConstantesFunciones.resaltarvalor_rutaPedido,this.pedidoConstantesFunciones.activarvalor_rutaPedido,this,true,"valor_rutaPedido","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new PedidoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedido.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedido,PedidoConstantesFunciones.LABEL_IDTIPOLLAMADA));

		if(this.pedidoConstantesFunciones.mostrarid_tipo_llamadaPedido && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoConstantesFunciones.LABEL_IDTIPOLLAMADA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoLlamadaTableCell(this.tipollamadasForeignKey,this.pedidoConstantesFunciones.resaltarid_tipo_llamadaPedido,this,this.pedidoConstantesFunciones.activarid_tipo_llamadaPedido,iSizeTabla));
			tableColumn.setCellEditor(new TipoLlamadaTableCell(this.tipollamadasForeignKey,this.pedidoConstantesFunciones.resaltarid_tipo_llamadaPedido,this,this.pedidoConstantesFunciones.activarid_tipo_llamadaPedido,true,"id_tipo_llamadaPedido","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedido.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedido,PedidoConstantesFunciones.LABEL_IDTRANSPORTISTA));

		if(this.pedidoConstantesFunciones.mostrarid_transportistaPedido && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoConstantesFunciones.LABEL_IDTRANSPORTISTA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TransportistaTableCell(this.transportistasForeignKey,this.pedidoConstantesFunciones.resaltarid_transportistaPedido,this,this.pedidoConstantesFunciones.activarid_transportistaPedido,iSizeTabla));
			tableColumn.setCellEditor(new TransportistaTableCell(this.transportistasForeignKey,this.pedidoConstantesFunciones.resaltarid_transportistaPedido,this,this.pedidoConstantesFunciones.activarid_transportistaPedido,true,"id_transportistaPedido","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedido.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedido,PedidoConstantesFunciones.LABEL_HORAINICIO));

		if(this.pedidoConstantesFunciones.mostrarhora_inicioPedido && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoConstantesFunciones.LABEL_HORAINICIO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TimeRenderer(this.pedidoConstantesFunciones.resaltarhora_inicioPedido,this.pedidoConstantesFunciones.activarhora_inicioPedido,iSizeTabla,this,true,"hora_inicioPedido","BASICO"));
			tableColumn.setCellEditor(new TimeEditorRenderer(this.pedidoConstantesFunciones.resaltarhora_inicioPedido,this.pedidoConstantesFunciones.activarhora_inicioPedido,iSizeTabla,this,true,"hora_inicioPedido","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30);
			//tableColumn.addPropertyChangeListener(new PedidoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedido.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedido,PedidoConstantesFunciones.LABEL_HORAFIN));

		if(this.pedidoConstantesFunciones.mostrarhora_finPedido && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoConstantesFunciones.LABEL_HORAFIN,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TimeRenderer(this.pedidoConstantesFunciones.resaltarhora_finPedido,this.pedidoConstantesFunciones.activarhora_finPedido,iSizeTabla,this,true,"hora_finPedido","BASICO"));
			tableColumn.setCellEditor(new TimeEditorRenderer(this.pedidoConstantesFunciones.resaltarhora_finPedido,this.pedidoConstantesFunciones.activarhora_finPedido,iSizeTabla,this,true,"hora_finPedido","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30);
			//tableColumn.addPropertyChangeListener(new PedidoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedido.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedido,PedidoConstantesFunciones.LABEL_DESCRIPCION));

		if(this.pedidoConstantesFunciones.mostrardescripcionPedido && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoConstantesFunciones.LABEL_DESCRIPCION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.pedidoConstantesFunciones.resaltardescripcionPedido,this.pedidoConstantesFunciones.activardescripcionPedido,iSizeTabla,this,true,"descripcionPedido","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pedidoConstantesFunciones.resaltardescripcionPedido,this.pedidoConstantesFunciones.activardescripcionPedido,this,true,"descripcionPedido","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedido.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedido,PedidoConstantesFunciones.LABEL_CUPO));

		if(this.pedidoConstantesFunciones.mostrarcupoPedido && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoConstantesFunciones.LABEL_CUPO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.pedidoConstantesFunciones.resaltarcupoPedido,this.pedidoConstantesFunciones.activarcupoPedido,iSizeTabla,this,true,"cupoPedido","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pedidoConstantesFunciones.resaltarcupoPedido,this.pedidoConstantesFunciones.activarcupoPedido,this,true,"cupoPedido","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new PedidoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedido.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedido,PedidoConstantesFunciones.LABEL_SALDO));

		if(this.pedidoConstantesFunciones.mostrarsaldoPedido && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoConstantesFunciones.LABEL_SALDO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.pedidoConstantesFunciones.resaltarsaldoPedido,this.pedidoConstantesFunciones.activarsaldoPedido,iSizeTabla,this,true,"saldoPedido","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pedidoConstantesFunciones.resaltarsaldoPedido,this.pedidoConstantesFunciones.activarsaldoPedido,this,true,"saldoPedido","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new PedidoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedido.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedido,PedidoConstantesFunciones.LABEL_PEDIDOS));

		if(this.pedidoConstantesFunciones.mostrarpedidosPedido && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoConstantesFunciones.LABEL_PEDIDOS,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.pedidoConstantesFunciones.resaltarpedidosPedido,this.pedidoConstantesFunciones.activarpedidosPedido,iSizeTabla,this,true,"pedidosPedido","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pedidoConstantesFunciones.resaltarpedidosPedido,this.pedidoConstantesFunciones.activarpedidosPedido,this,true,"pedidosPedido","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new PedidoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedido.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedido,PedidoConstantesFunciones.LABEL_DOCUMENTOS));

		if(this.pedidoConstantesFunciones.mostrardocumentosPedido && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoConstantesFunciones.LABEL_DOCUMENTOS,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.pedidoConstantesFunciones.resaltardocumentosPedido,this.pedidoConstantesFunciones.activardocumentosPedido,iSizeTabla,this,true,"documentosPedido","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pedidoConstantesFunciones.resaltardocumentosPedido,this.pedidoConstantesFunciones.activardocumentosPedido,this,true,"documentosPedido","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new PedidoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedido.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedido,PedidoConstantesFunciones.LABEL_DISPONIBLE));

		if(this.pedidoConstantesFunciones.mostrardisponiblePedido && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoConstantesFunciones.LABEL_DISPONIBLE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.pedidoConstantesFunciones.resaltardisponiblePedido,this.pedidoConstantesFunciones.activardisponiblePedido,iSizeTabla,this,true,"disponiblePedido","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pedidoConstantesFunciones.resaltardisponiblePedido,this.pedidoConstantesFunciones.activardisponiblePedido,this,true,"disponiblePedido","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new PedidoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedido.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedido,PedidoConstantesFunciones.LABEL_DESCUENTOPORCENTAJE));

		if(this.pedidoConstantesFunciones.mostrardescuento_porcentajePedido && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoConstantesFunciones.LABEL_DESCUENTOPORCENTAJE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.pedidoConstantesFunciones.resaltardescuento_porcentajePedido,this.pedidoConstantesFunciones.activardescuento_porcentajePedido,iSizeTabla,this,true,"descuento_porcentajePedido","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pedidoConstantesFunciones.resaltardescuento_porcentajePedido,this.pedidoConstantesFunciones.activardescuento_porcentajePedido,this,true,"descuento_porcentajePedido","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new PedidoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedido.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedido,PedidoConstantesFunciones.LABEL_TOTALCONIVA));

		if(this.pedidoConstantesFunciones.mostrartotal_con_ivaPedido && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoConstantesFunciones.LABEL_TOTALCONIVA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.pedidoConstantesFunciones.resaltartotal_con_ivaPedido,this.pedidoConstantesFunciones.activartotal_con_ivaPedido,iSizeTabla,this,true,"total_con_ivaPedido","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pedidoConstantesFunciones.resaltartotal_con_ivaPedido,this.pedidoConstantesFunciones.activartotal_con_ivaPedido,this,true,"total_con_ivaPedido","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new PedidoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedido.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedido,PedidoConstantesFunciones.LABEL_SUMAN));

		if(this.pedidoConstantesFunciones.mostrarsumanPedido && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoConstantesFunciones.LABEL_SUMAN,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.pedidoConstantesFunciones.resaltarsumanPedido,this.pedidoConstantesFunciones.activarsumanPedido,iSizeTabla,this,true,"sumanPedido","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pedidoConstantesFunciones.resaltarsumanPedido,this.pedidoConstantesFunciones.activarsumanPedido,this,true,"sumanPedido","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new PedidoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedido.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedido,PedidoConstantesFunciones.LABEL_DESCUENTOVALOR));

		if(this.pedidoConstantesFunciones.mostrardescuento_valorPedido && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoConstantesFunciones.LABEL_DESCUENTOVALOR,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.pedidoConstantesFunciones.resaltardescuento_valorPedido,this.pedidoConstantesFunciones.activardescuento_valorPedido,iSizeTabla,this,true,"descuento_valorPedido","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pedidoConstantesFunciones.resaltardescuento_valorPedido,this.pedidoConstantesFunciones.activardescuento_valorPedido,this,true,"descuento_valorPedido","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new PedidoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedido.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedido,PedidoConstantesFunciones.LABEL_TOTALSINIVA));

		if(this.pedidoConstantesFunciones.mostrartotal_sin_ivaPedido && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoConstantesFunciones.LABEL_TOTALSINIVA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.pedidoConstantesFunciones.resaltartotal_sin_ivaPedido,this.pedidoConstantesFunciones.activartotal_sin_ivaPedido,iSizeTabla,this,true,"total_sin_ivaPedido","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pedidoConstantesFunciones.resaltartotal_sin_ivaPedido,this.pedidoConstantesFunciones.activartotal_sin_ivaPedido,this,true,"total_sin_ivaPedido","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new PedidoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedido.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedido,PedidoConstantesFunciones.LABEL_DESCUENTOTOTAL));

		if(this.pedidoConstantesFunciones.mostrardescuento_totalPedido && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoConstantesFunciones.LABEL_DESCUENTOTOTAL,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.pedidoConstantesFunciones.resaltardescuento_totalPedido,this.pedidoConstantesFunciones.activardescuento_totalPedido,iSizeTabla,this,true,"descuento_totalPedido","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pedidoConstantesFunciones.resaltardescuento_totalPedido,this.pedidoConstantesFunciones.activardescuento_totalPedido,this,true,"descuento_totalPedido","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new PedidoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedido.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedido,PedidoConstantesFunciones.LABEL_FLETE));

		if(this.pedidoConstantesFunciones.mostrarfletePedido && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoConstantesFunciones.LABEL_FLETE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.pedidoConstantesFunciones.resaltarfletePedido,this.pedidoConstantesFunciones.activarfletePedido,iSizeTabla,this,true,"fletePedido","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pedidoConstantesFunciones.resaltarfletePedido,this.pedidoConstantesFunciones.activarfletePedido,this,true,"fletePedido","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new PedidoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedido.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedido,PedidoConstantesFunciones.LABEL_TOTAL));

		if(this.pedidoConstantesFunciones.mostrartotalPedido && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoConstantesFunciones.LABEL_TOTAL,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.pedidoConstantesFunciones.resaltartotalPedido,this.pedidoConstantesFunciones.activartotalPedido,iSizeTabla,this,true,"totalPedido","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pedidoConstantesFunciones.resaltartotalPedido,this.pedidoConstantesFunciones.activartotalPedido,this,true,"totalPedido","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new PedidoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedido.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedido,PedidoConstantesFunciones.LABEL_SUBTOTAL));

		if(this.pedidoConstantesFunciones.mostrarsubtotalPedido && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoConstantesFunciones.LABEL_SUBTOTAL,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.pedidoConstantesFunciones.resaltarsubtotalPedido,this.pedidoConstantesFunciones.activarsubtotalPedido,iSizeTabla,this,true,"subtotalPedido","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pedidoConstantesFunciones.resaltarsubtotalPedido,this.pedidoConstantesFunciones.activarsubtotalPedido,this,true,"subtotalPedido","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new PedidoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedido.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedido,PedidoConstantesFunciones.LABEL_OTRO));

		if(this.pedidoConstantesFunciones.mostrarotroPedido && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoConstantesFunciones.LABEL_OTRO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.pedidoConstantesFunciones.resaltarotroPedido,this.pedidoConstantesFunciones.activarotroPedido,iSizeTabla,this,true,"otroPedido","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pedidoConstantesFunciones.resaltarotroPedido,this.pedidoConstantesFunciones.activarotroPedido,this,true,"otroPedido","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new PedidoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedido.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedido,PedidoConstantesFunciones.LABEL_ULTIMOCOSTO));

		if(this.pedidoConstantesFunciones.mostrarultimo_costoPedido && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoConstantesFunciones.LABEL_ULTIMOCOSTO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.pedidoConstantesFunciones.resaltarultimo_costoPedido,this.pedidoConstantesFunciones.activarultimo_costoPedido,iSizeTabla,this,true,"ultimo_costoPedido","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pedidoConstantesFunciones.resaltarultimo_costoPedido,this.pedidoConstantesFunciones.activarultimo_costoPedido,this,true,"ultimo_costoPedido","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new PedidoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedido.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedido,PedidoConstantesFunciones.LABEL_IVA));

		if(this.pedidoConstantesFunciones.mostrarivaPedido && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoConstantesFunciones.LABEL_IVA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.pedidoConstantesFunciones.resaltarivaPedido,this.pedidoConstantesFunciones.activarivaPedido,iSizeTabla,this,true,"ivaPedido","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pedidoConstantesFunciones.resaltarivaPedido,this.pedidoConstantesFunciones.activarivaPedido,this,true,"ivaPedido","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new PedidoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedido.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedido,PedidoConstantesFunciones.LABEL_FINANCIAMIENTO));

		if(this.pedidoConstantesFunciones.mostrarfinanciamientoPedido && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoConstantesFunciones.LABEL_FINANCIAMIENTO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.pedidoConstantesFunciones.resaltarfinanciamientoPedido,this.pedidoConstantesFunciones.activarfinanciamientoPedido,iSizeTabla,this,true,"financiamientoPedido","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pedidoConstantesFunciones.resaltarfinanciamientoPedido,this.pedidoConstantesFunciones.activarfinanciamientoPedido,this,true,"financiamientoPedido","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new PedidoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedido.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedido,PedidoConstantesFunciones.LABEL_MARGENUTILIDAD));

		if(this.pedidoConstantesFunciones.mostrarmargen_utilidadPedido && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoConstantesFunciones.LABEL_MARGENUTILIDAD,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.pedidoConstantesFunciones.resaltarmargen_utilidadPedido,this.pedidoConstantesFunciones.activarmargen_utilidadPedido,iSizeTabla,this,true,"margen_utilidadPedido","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pedidoConstantesFunciones.resaltarmargen_utilidadPedido,this.pedidoConstantesFunciones.activarmargen_utilidadPedido,this,true,"margen_utilidadPedido","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new PedidoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedido.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedido,PedidoConstantesFunciones.LABEL_OTROSVALORES));

		if(this.pedidoConstantesFunciones.mostrarotros_valoresPedido && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoConstantesFunciones.LABEL_OTROSVALORES,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.pedidoConstantesFunciones.resaltarotros_valoresPedido,this.pedidoConstantesFunciones.activarotros_valoresPedido,iSizeTabla,this,true,"otros_valoresPedido","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pedidoConstantesFunciones.resaltarotros_valoresPedido,this.pedidoConstantesFunciones.activarotros_valoresPedido,this,true,"otros_valoresPedido","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new PedidoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedido.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedido,PedidoConstantesFunciones.LABEL_ANTICIPO));

		if(this.pedidoConstantesFunciones.mostraranticipoPedido && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoConstantesFunciones.LABEL_ANTICIPO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.pedidoConstantesFunciones.resaltaranticipoPedido,this.pedidoConstantesFunciones.activaranticipoPedido,iSizeTabla,this,true,"anticipoPedido","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pedidoConstantesFunciones.resaltaranticipoPedido,this.pedidoConstantesFunciones.activaranticipoPedido,this,true,"anticipoPedido","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new PedidoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}
			
		} else {
		}			
					
		if(!this.pedidoSessionBean.getEsGuardarRelacionado()
			&& !this.esParaBusquedaForeignKey) {
			

			if(this.isTienePermisosDetallePedido && this.pedidoConstantesFunciones.mostrarDetallePedidoPedido && !PedidoConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Detalle Pedidos");
				tableColumn.setHeaderValue("Detalle Pedidos");
				tableColumn.setCellRenderer(new DetallePedidoTableCell(pedidoConstantesFunciones.resaltarDetallePedidoPedido,this,this.pedidoConstantesFunciones.activarDetallePedidoPedido));
				tableColumn.setCellEditor(new DetallePedidoTableCell(pedidoConstantesFunciones.resaltarDetallePedidoPedido,this,this.pedidoConstantesFunciones.activarDetallePedidoPedido));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosPedido.addColumn(tableColumn);
			}
		}
		
		if(true) {
			String sLabelColumnAccion="Editar";
			String sLabelColumnAccionEli="Eli";
			
			if(this.esParaBusquedaForeignKey)  {
				sLabelColumnAccion="Seleccionar";
				
				//LO MISMO QUE ELSE
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.pedidoSessionBean.getEsGuardarRelacionado(),iSizeTabla));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.pedidoSessionBean.getEsGuardarRelacionado(),iSizeTabla));
	
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosPedido.addColumn(tableColumn);
			
			} else {				
				
				//LO MISMO QUE IF
				
				//tableColumn= new TableColumn();
				//tableColumn.setIdentifier(sLabelColumnAccion);
				//tableColumn.setHeaderValue(sLabelColumnAccion);
				//tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.pedidoSessionBean.getEsGuardarRelacionado(),iSizeTabla));
				//tableColumn.setCellEditor(new IdTableCell(this,false,false,this.pedidoSessionBean.getEsGuardarRelacionado(),iSizeTabla));
		
				//tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				//tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				//tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				//tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				//this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				//this.jTableDatosPedido.addColumn(tableColumn);				
					
				//ELIMINAR
				if(this.isPermisoEliminarPedido && this.isPermisoGuardarCambiosPedido) {
					//tableColumn= new TableColumn();
					//tableColumn.setIdentifier(Constantes2.S_ELI);
					//tableColumn.setHeaderValue(sLabelColumnAccionEli);
					//tableColumn.setCellRenderer(new IdTableCell(this,false,true,this.pedidoSessionBean.getEsGuardarRelacionado(),iSizeTabla));
					//tableColumn.setCellEditor(new IdTableCell(this,false,true,this.pedidoSessionBean.getEsGuardarRelacionado(),iSizeTabla));
			
					//tableColumn.setPreferredWidth(65); 	 
					//tableColumn.setWidth(65); 	 
					//tableColumn.setMinWidth(65); 
					//tableColumn.setMaxWidth(65);
					
					//this.iWidthTableDefinicion+=65;
						
					//this.jTableDatosPedido.addColumn(tableColumn);
				}
			}			
						
			if(this.conMaximoRelaciones && this.pedidoSessionBean.getConGuardarRelaciones()) {
				if(this.conFuncionalidadRelaciones) {
					tableColumn= new TableColumn();
					tableColumn.setIdentifier("Editar Rel");
					tableColumn.setHeaderValue("Editar Rel");
					tableColumn.setCellRenderer(new IdTableCell(this,true,false,iSizeTabla));
					tableColumn.setCellEditor(new IdTableCell(this,true,false,iSizeTabla));
		
					tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
					tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
					tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
					tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
					
					this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
					this.jTableDatosPedido.addColumn(tableColumn);
				}
			}
			
			/*
			tableColumn= new TableColumn();
			tableColumn.setIdentifier(Constantes2.S_SELECCIONAR);
			tableColumn.setHeaderValue(Constantes2.S_SELECCIONAR);
			tableColumn.setCellRenderer(new IdSeleccionarTableCell(this));
			tableColumn.setCellEditor(new IdSeleccionarTableCell(this));
			
			tableColumn.setPreferredWidth(30); 	 
			tableColumn.setWidth(30); 	 
			tableColumn.setMinWidth(30); 
			
			this.iWidthTableDefinicion+=30;
			
			this.jTableDatosPedido.addColumn(tableColumn);
			*/
		}
		
		Integer iUltimaColumna=0;//1
		Integer iNuevaPosicionColumna=0;
		
		
		//PERMITE ELIMINAR SIMPLE
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarPedido && this.isPermisoGuardarCambiosPedido) {
				//iUltimaColumna++;
			}	
		}
		
		//PERMITE EDITAR SIMPLE
		//iUltimaColumna++;	
		
				
		if(this.conFuncionalidadRelaciones) {
			if(this.conMaximoRelaciones && this.pedidoSessionBean.getConGuardarRelaciones()) {			
				//PERMITE EDITAR RELACIONES
				iUltimaColumna++;//2
			}
		}
		
		//MOVIA SELECCIONAR
		//iUltimaColumna++;
		
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarPedido && this.isPermisoGuardarCambiosPedido) {
				////REUBICA ELIMINAR SIMPLE
				//jTableDatosPedido.moveColumn(this.jTableDatosPedido.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3
					
				//iUltimaColumna--;
			}
		}
		//REUBICA EDITAR SIMPLE
		//jTableDatosPedido.moveColumn(this.jTableDatosPedido.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3				
		
		
		if(this.conFuncionalidadRelaciones) {
			if(this.conMaximoRelaciones && this.pedidoSessionBean.getConGuardarRelaciones()) {	
				if(iUltimaColumna>1) {
					iUltimaColumna--;
				}
				
				//iNuevaPosicionColumna++;
				
				//REUBICA EDITAR RELACIONES
				jTableDatosPedido.moveColumn(this.jTableDatosPedido.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1
			}
		}
		
		
		//REUBICABA SELECCIONAR
		/*
		if(iUltimaColumna>1) {
			iUltimaColumna--;
		}
		
		//iNuevaPosicionColumna++;
			
		//REUBICA SELECCIONAR FILA CHECK
		jTableDatosPedido.moveColumn(this.jTableDatosPedido.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1		
		*/
		
		//DEFINEN HEADERS
		final TableCellRenderer tableHeaderDefaultCellRenderer = this.jTableDatosPedido.getTableHeader().getDefaultRenderer();
		
		this.jTableDatosPedido.getTableHeader().setDefaultRenderer(new TableCellRendererHeader(this.jTableDatosPedido,tableHeaderDefaultCellRenderer));
	    
		TableColumn column=null;
		
		if(!PedidoJInternalFrame.ISBINDING_MANUAL_TABLA) {
			for(int i = 0; i < this.jTableDatosPedido.getColumnModel().getColumnCount(); i++) { 
				column = this.jTableDatosPedido.getColumnModel().getColumn(i); 
				
				if(column.getIdentifier()!=null) {
					//SI SE UTILIZA UN HEADER ES GENERICO
					//column.setHeaderRenderer(new HeaderRenderer(column.getIdentifier().toString()));
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_ELI)) {
					continue;
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_SELECCIONAR)) {
					if(!PedidoJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(50); 	 
						column.setWidth(50); 	 
						column.setMinWidth(50); 	
						column.setMaxWidth(50); 
						
						this.iWidthTableDefinicion+=50;
					}
					
				} else {
					if(!PedidoJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						column.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						
						this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
					}
				}
			}
		}
		
		this.jTableDatosPedido.setSelectionBackground(FuncionesSwing.getColorSelectedBackground());
		this.jTableDatosPedido.setSelectionForeground(FuncionesSwing.getColorSelectedForeground());
		
		/*
		this.jTableDatosPedido.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
			private static final long serialVersionUID = 1L;
			
		    @Override
		    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
		        final Component component= super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
		        //POR DEFECTO ES MEJOR, SE PIERDE DATOS AL SELECCIONAR BLANCO LETRAS BLANCAS
				component.setBackground(row % 2 == 0 ? FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR) : Funciones2.getColorFilaTabla2()); //FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR)
				component.setForeground(Funciones2.getColorTextoFilaTabla1());
				
				try {
		        	int iSize=-999;
		        	
		        	if(conTotales) {
						//FILA TOTALES OTRO COLOR, SI TABLA NO ES UNO A UNO
			        	if(Constantes.ISUSAEJBLOGICLAYER) {
							iSize=pedidoLogic.getPedidos().size()-1;
								
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							iSize=pedidos.size()-1;
						}
						
						if(iSize==row) {
							component.setBackground(Funciones2.getColorFilaTablaTotales());
						}
		        	}
					
					//POR EFICIENCIA NO UTILIZAR					
					//if (component instanceof JComponent) {
		            //    JComponent jcomponent = (JComponent) component;		                 		                
		        	//}				
					
				} catch (Exception e) {
					e.printStackTrace();
				}
				
		        return component;
		    }
		});
		*/
		
		//ESTA EN LA DEFINICION DE LA TABLA
		//this.jTableDatosPedido.setRowHeight(Constantes.ISWING_ALTO_FILA_TABLA);
		
		/*
		column=this.jTableDatosPedido.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSistema,Constantes2.S_SELECCIONAR));
		
		if(column!=null) {
			column.setPreferredWidth(25); 	 
			column.setWidth(25); 	 
			column.setMinWidth(25); 	
		}
		*/
			
			//CopyTableToTableTotal();
		} else {
			
			this.actualizarVisualTableDatosPedido();
			
		}
	}
	
	/*
	//COPY_TABLES
	/* FALTARIA RESOLVER:
	   1 SOLO SCROLL PARA 2 TABLAS
	   COPIA EXACTA DE COLUMNAS DE UNA TABLA A OTRA, SI SE MODIFICA TAMANIO TAMBIEN LA OTRA
	*/
	
	public void jButtonIdActionPerformed(ActionEvent evt,int rowIndex,Boolean esRelaciones,Boolean esEliminar) { 
		try {
			if(!esEliminar) {
				this.estaModoSeleccionar=true;
				
				//this.isEsNuevoPedido=false;
					
				PedidoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.pedido,new Object(),this.pedidoParameterGeneral,this.pedidoReturnGeneral);
			
				if(this.pedidoSessionBean.getConGuardarRelaciones()) {
					this.dStart=(double)System.currentTimeMillis();
				}
				
				if(this.jInternalFrameDetalleFormPedido==null) {
					this.inicializarFormDetalle();
				}
				
				this.inicializarInvalidValues();
				
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosPedido.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosPedido.getSelectedRow();	       
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//PUEDE SER PARA DUPLICADO O NUEVO TABLA
				
				if(this.pedido.getsType().equals("DUPLICADO")
				   || this.pedido.getsType().equals("NUEVO_GUARDAR_CAMBIOS")) {
					
					this.isEsNuevoPedido=true;
				
				} else {
					this.isEsNuevoPedido=false;	
				}
				
				//CONTROL VERSION ANTERIOR
				/*
				if(!this.pedidoSessionBean.getEsGuardarRelacionado()) {
					if(this.pedido.getId()>=0 && !this.pedido.getIsNew()) {						
						this.isEsNuevoPedido=false;
						
					} else {
						this.isEsNuevoPedido=true;
					}
					
				} else {
					//CONTROLAR PARA RELACIONADO
				}
				*/
				
				//ESTABLECE SI ES RELACIONADO O NO 
				this.habilitarDeshabilitarTipoMantenimientoPedido(esRelaciones);						
				
				this.seleccionarPedido(evt,null,rowIndex);
				
				//SELECCIONA ACTUAL PERO AUN NO SE HA INGRESADO AL SISTEMA
				//SE DESHABILITA POR GUARDAR CAMBIOS
				/*
				if(this.pedido.getId()<0) {
					this.isEsNuevoPedido=true;
				}
				*/
				
				if(!this.esParaBusquedaForeignKey) {
					this.modificarPedido(evt,rowIndex,esRelaciones);
				} else {
					this.seleccionarPedido(evt,rowIndex);
				}	
				
				if(this.pedidoSessionBean.getConGuardarRelaciones()) {
					this.dEnd=(double)System.currentTimeMillis();					
					this.dDif=this.dEnd - this.dStart;
					
					if(Constantes.ISDEVELOPING) {
						System.out.println("Tiempo(ms) Seleccion Pedido: " + this.dDif); 
					}
				}								
				
				PedidoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.pedido,new Object(),this.pedidoParameterGeneral,this.pedidoReturnGeneral);
				
			} else {
				this.estaModoEliminarGuardarCambios=true;
				
				this.seleccionarPedido(evt,null,rowIndex);
				
				if(this.permiteMantenimiento(this.pedido)) {
					if(this.pedido.getId()>0) {
						this.pedido.setIsDeleted(true);
						
						this.pedidosEliminados.add(this.pedido);
					}
					
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.pedidoLogic.getPedidos().remove(this.pedido);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.pedidos.remove(this.pedido);				
					}
					
					
					((PedidoModel) this.jTableDatosPedido.getModel()).fireTableRowsDeleted(rowIndex,rowIndex);
					
					this.actualizarFilaTotales();
					
					this.inicializarActualizarBindingTablaPedido(false);					
				}								
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException2(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoSeleccionar=false;				
			this.estaModoEliminarGuardarCambios=false;
		}
	}
	
	
	public void seleccionarPedido(ActionEvent evt,javax.swing.event.ListSelectionEvent evt2,int rowIndex) throws Exception { 
		try {
			//SI PUEDE SER NUEVO Y SELECCIONAR (PARA DUPLICAR Y NUEVO TABLA)
			//if(!this.isEsNuevoPedido) {
			
			if(this.jInternalFrameDetalleFormPedido==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosPedido.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosPedido.getSelectedRow();	       
				}
				
				//CUANDO SE RECARGA TABLA TAMBIEN SE SELECCIONA PERO CON -1 POR LO QUE SE NECESITA VALIDAR ANTES
				if(intSelectedRow<0) {
					return;
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
				}
				
				if(PedidoJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesObjetoActualToFormularioPedido(this.pedido);
				}
				
				//ARCHITECTURE
				try {
					

					//Empresa
					if(!this.pedidoConstantesFunciones.cargarid_empresaPedido || this.pedidoConstantesFunciones.event_dependid_empresaPedido) {
						//this.cargarCombosEmpresasForeignKeyLista(" where id="+this.pedido.getid_empresa());
									//this.inicializarActualizarBindingPedido(false,false);
						this.empresasForeignKey=new ArrayList<Empresa>();

						if(pedido.getEmpresa()!=null) {
							this.empresasForeignKey.add(pedido.getEmpresa());
						}

						this.addItemDefectoCombosForeignKeyEmpresa();
						this.cargarCombosFrameEmpresasForeignKey("Todos");
					}
					this.setActualEmpresaForeignKey(this.pedido.getid_empresa(),false,"Formulario");

					//Sucursal
					if(!this.pedidoConstantesFunciones.cargarid_sucursalPedido || this.pedidoConstantesFunciones.event_dependid_sucursalPedido) {
						//this.cargarCombosSucursalsForeignKeyLista(" where id="+this.pedido.getid_sucursal());
									//this.inicializarActualizarBindingPedido(false,false);
						this.sucursalsForeignKey=new ArrayList<Sucursal>();

						if(pedido.getSucursal()!=null) {
							this.sucursalsForeignKey.add(pedido.getSucursal());
						}

						this.addItemDefectoCombosForeignKeySucursal();
						this.cargarCombosFrameSucursalsForeignKey("Todos");
					}
					this.setActualSucursalForeignKey(this.pedido.getid_sucursal(),false,"Formulario");

					//Ejercicio
					if(!this.pedidoConstantesFunciones.cargarid_ejercicioPedido || this.pedidoConstantesFunciones.event_dependid_ejercicioPedido) {
						//this.cargarCombosEjerciciosForeignKeyLista(" where id="+this.pedido.getid_ejercicio());
									//this.inicializarActualizarBindingPedido(false,false);
						this.ejerciciosForeignKey=new ArrayList<Ejercicio>();

						if(pedido.getEjercicio()!=null) {
							this.ejerciciosForeignKey.add(pedido.getEjercicio());
						}

						this.addItemDefectoCombosForeignKeyEjercicio();
						this.cargarCombosFrameEjerciciosForeignKey("Todos");
					}
					this.setActualEjercicioForeignKey(this.pedido.getid_ejercicio(),false,"Formulario");

					//Periodo
					if(!this.pedidoConstantesFunciones.cargarid_periodoPedido || this.pedidoConstantesFunciones.event_dependid_periodoPedido) {
						//this.cargarCombosPeriodosForeignKeyLista(" where id="+this.pedido.getid_periodo());
									//this.inicializarActualizarBindingPedido(false,false);
						this.periodosForeignKey=new ArrayList<Periodo>();

						if(pedido.getPeriodo()!=null) {
							this.periodosForeignKey.add(pedido.getPeriodo());
						}

						this.addItemDefectoCombosForeignKeyPeriodo();
						this.cargarCombosFramePeriodosForeignKey("Todos");
					}
					this.setActualPeriodoForeignKey(this.pedido.getid_periodo(),false,"Formulario");

					//Anio
					if(!this.pedidoConstantesFunciones.cargarid_anioPedido || this.pedidoConstantesFunciones.event_dependid_anioPedido) {
						//this.cargarCombosAniosForeignKeyLista(" where id="+this.pedido.getid_anio());
									//this.inicializarActualizarBindingPedido(false,false);
						this.aniosForeignKey=new ArrayList<Anio>();

						if(pedido.getAnio()!=null) {
							this.aniosForeignKey.add(pedido.getAnio());
						}

						this.addItemDefectoCombosForeignKeyAnio();
						this.cargarCombosFrameAniosForeignKey("Todos");
					}
					this.setActualAnioForeignKey(this.pedido.getid_anio(),false,"Formulario");

					//Mes
					if(!this.pedidoConstantesFunciones.cargarid_mesPedido || this.pedidoConstantesFunciones.event_dependid_mesPedido) {
						//this.cargarCombosMessForeignKeyLista(" where id="+this.pedido.getid_mes());
									//this.inicializarActualizarBindingPedido(false,false);
						this.messForeignKey=new ArrayList<Mes>();

						if(pedido.getMes()!=null) {
							this.messForeignKey.add(pedido.getMes());
						}

						this.addItemDefectoCombosForeignKeyMes();
						this.cargarCombosFrameMessForeignKey("Todos");
					}
					this.setActualMesForeignKey(this.pedido.getid_mes(),false,"Formulario");

					//Usuario
					if(!this.pedidoConstantesFunciones.cargarid_usuarioPedido || this.pedidoConstantesFunciones.event_dependid_usuarioPedido) {
						//this.cargarCombosUsuariosForeignKeyLista(" where id="+this.pedido.getid_usuario());
									//this.inicializarActualizarBindingPedido(false,false);
						this.usuariosForeignKey=new ArrayList<Usuario>();

						if(pedido.getUsuario()!=null) {
							this.usuariosForeignKey.add(pedido.getUsuario());
						}

						this.addItemDefectoCombosForeignKeyUsuario();
						this.cargarCombosFrameUsuariosForeignKey("Todos");
					}
					this.setActualUsuarioForeignKey(this.pedido.getid_usuario(),false,"Formulario");

					//Moneda
					if(!this.pedidoConstantesFunciones.cargarid_monedaPedido || this.pedidoConstantesFunciones.event_dependid_monedaPedido) {
						//this.cargarCombosMonedasForeignKeyLista(" where id="+this.pedido.getid_moneda());
									//this.inicializarActualizarBindingPedido(false,false);
						this.monedasForeignKey=new ArrayList<Moneda>();

						if(pedido.getMoneda()!=null) {
							this.monedasForeignKey.add(pedido.getMoneda());
						}

						this.addItemDefectoCombosForeignKeyMoneda();
						this.cargarCombosFrameMonedasForeignKey("Todos");
					}
					this.setActualMonedaForeignKey(this.pedido.getid_moneda(),false,"Formulario");

					//Empleado
					if(!this.pedidoConstantesFunciones.cargarid_empleadoPedido || this.pedidoConstantesFunciones.event_dependid_empleadoPedido) {
						//this.cargarCombosEmpleadosForeignKeyLista(" where id="+this.pedido.getid_empleado());
									//this.inicializarActualizarBindingPedido(false,false);
						this.empleadosForeignKey=new ArrayList<Empleado>();

						if(pedido.getEmpleado()!=null) {
							this.empleadosForeignKey.add(pedido.getEmpleado());
						}

						this.addItemDefectoCombosForeignKeyEmpleado();
						this.cargarCombosFrameEmpleadosForeignKey("Todos");
					}
					this.setActualEmpleadoForeignKey(this.pedido.getid_empleado(),false,"Formulario");

					//TipoPrecio
					if(!this.pedidoConstantesFunciones.cargarid_tipo_precioPedido || this.pedidoConstantesFunciones.event_dependid_tipo_precioPedido) {
						//this.cargarCombosTipoPreciosForeignKeyLista(" where id="+this.pedido.getid_tipo_precio());
									//this.inicializarActualizarBindingPedido(false,false);
						this.tipopreciosForeignKey=new ArrayList<TipoPrecio>();

						if(pedido.getTipoPrecio()!=null) {
							this.tipopreciosForeignKey.add(pedido.getTipoPrecio());
						}

						this.addItemDefectoCombosForeignKeyTipoPrecio();
						this.cargarCombosFrameTipoPreciosForeignKey("Todos");
					}
					this.setActualTipoPrecioForeignKey(this.pedido.getid_tipo_precio(),false,"Formulario");

					//Formato
					if(!this.pedidoConstantesFunciones.cargarid_formatoPedido || this.pedidoConstantesFunciones.event_dependid_formatoPedido) {
						//this.cargarCombosFormatosForeignKeyLista(" where id="+this.pedido.getid_formato());
									//this.inicializarActualizarBindingPedido(false,false);
						this.formatosForeignKey=new ArrayList<Formato>();

						if(pedido.getFormato()!=null) {
							this.formatosForeignKey.add(pedido.getFormato());
						}

						this.addItemDefectoCombosForeignKeyFormato();
						this.cargarCombosFrameFormatosForeignKey("Todos");
					}
					this.setActualFormatoForeignKey(this.pedido.getid_formato(),false,"Formulario");

					//Cliente
					if(!this.pedidoConstantesFunciones.cargarid_clientePedido || this.pedidoConstantesFunciones.event_dependid_clientePedido) {
						//this.cargarCombosClientesForeignKeyLista(" where id="+this.pedido.getid_cliente());
									//this.inicializarActualizarBindingPedido(false,false);
						this.clientesForeignKey=new ArrayList<Cliente>();

						if(pedido.getCliente()!=null) {
							this.clientesForeignKey.add(pedido.getCliente());
						}

						this.addItemDefectoCombosForeignKeyCliente();
						this.cargarCombosFrameClientesForeignKey("Todos");
					}
					this.setActualClienteForeignKey(this.pedido.getid_cliente(),false,"Formulario");

					//SubCliente
					if(!this.pedidoConstantesFunciones.cargarid_sub_clientePedido || this.pedidoConstantesFunciones.event_dependid_sub_clientePedido) {
						//this.cargarCombosSubClientesForeignKeyLista(" where id="+this.pedido.getid_sub_cliente());
									//this.inicializarActualizarBindingPedido(false,false);
						this.subclientesForeignKey=new ArrayList<SubCliente>();

						if(pedido.getSubCliente()!=null) {
							this.subclientesForeignKey.add(pedido.getSubCliente());
						}

						this.addItemDefectoCombosForeignKeySubCliente();
						this.cargarCombosFrameSubClientesForeignKey("Todos");
					}
					this.setActualSubClienteForeignKey(this.pedido.getid_sub_cliente(),false,"Formulario");

					//Vendedor
					if(!this.pedidoConstantesFunciones.cargarid_vendedorPedido || this.pedidoConstantesFunciones.event_dependid_vendedorPedido) {
						//this.cargarCombosVendedorsForeignKeyLista(" where id="+this.pedido.getid_vendedor());
									//this.inicializarActualizarBindingPedido(false,false);
						this.vendedorsForeignKey=new ArrayList<Vendedor>();

						if(pedido.getVendedor()!=null) {
							this.vendedorsForeignKey.add(pedido.getVendedor());
						}

						this.addItemDefectoCombosForeignKeyVendedor();
						this.cargarCombosFrameVendedorsForeignKey("Todos");
					}
					this.setActualVendedorForeignKey(this.pedido.getid_vendedor(),false,"Formulario");

					//Consultor
					if(!this.pedidoConstantesFunciones.cargarid_consultorPedido || this.pedidoConstantesFunciones.event_dependid_consultorPedido) {
						//this.cargarCombosConsultorsForeignKeyLista(" where id="+this.pedido.getid_consultor());
									//this.inicializarActualizarBindingPedido(false,false);
						this.consultorsForeignKey=new ArrayList<Consultor>();

						if(pedido.getConsultor()!=null) {
							this.consultorsForeignKey.add(pedido.getConsultor());
						}

						this.addItemDefectoCombosForeignKeyConsultor();
						this.cargarCombosFrameConsultorsForeignKey("Todos");
					}
					this.setActualConsultorForeignKey(this.pedido.getid_consultor(),false,"Formulario");

					//Responsable
					if(!this.pedidoConstantesFunciones.cargarid_responsablePedido || this.pedidoConstantesFunciones.event_dependid_responsablePedido) {
						//this.cargarCombosResponsablesForeignKeyLista(" where id="+this.pedido.getid_responsable());
									//this.inicializarActualizarBindingPedido(false,false);
						this.responsablesForeignKey=new ArrayList<Responsable>();

						if(pedido.getResponsable()!=null) {
							this.responsablesForeignKey.add(pedido.getResponsable());
						}

						this.addItemDefectoCombosForeignKeyResponsable();
						this.cargarCombosFrameResponsablesForeignKey("Todos");
					}
					this.setActualResponsableForeignKey(this.pedido.getid_responsable(),false,"Formulario");

					//EstadoPedido
					if(!this.pedidoConstantesFunciones.cargarid_estado_pedidoPedido || this.pedidoConstantesFunciones.event_dependid_estado_pedidoPedido) {
						//this.cargarCombosEstadoPedidosForeignKeyLista(" where id="+this.pedido.getid_estado_pedido());
									//this.inicializarActualizarBindingPedido(false,false);
						this.estadopedidosForeignKey=new ArrayList<EstadoPedido>();

						if(pedido.getEstadoPedido()!=null) {
							this.estadopedidosForeignKey.add(pedido.getEstadoPedido());
						}

						this.addItemDefectoCombosForeignKeyEstadoPedido();
						this.cargarCombosFrameEstadoPedidosForeignKey("Todos");
					}
					this.setActualEstadoPedidoForeignKey(this.pedido.getid_estado_pedido(),false,"Formulario");

					//Transporte
					if(!this.pedidoConstantesFunciones.cargarid_transportePedido || this.pedidoConstantesFunciones.event_dependid_transportePedido) {
						//this.cargarCombosTransportesForeignKeyLista(" where id="+this.pedido.getid_transporte());
									//this.inicializarActualizarBindingPedido(false,false);
						this.transportesForeignKey=new ArrayList<Transporte>();

						if(pedido.getTransporte()!=null) {
							this.transportesForeignKey.add(pedido.getTransporte());
						}

						this.addItemDefectoCombosForeignKeyTransporte();
						this.cargarCombosFrameTransportesForeignKey("Todos");
					}
					this.setActualTransporteForeignKey(this.pedido.getid_transporte(),false,"Formulario");

					//RutaTransporte
					if(!this.pedidoConstantesFunciones.cargarid_ruta_transportePedido || this.pedidoConstantesFunciones.event_dependid_ruta_transportePedido) {
						//this.cargarCombosRutaTransportesForeignKeyLista(" where id="+this.pedido.getid_ruta_transporte());
									//this.inicializarActualizarBindingPedido(false,false);
						this.rutatransportesForeignKey=new ArrayList<RutaTransporte>();

						if(pedido.getRutaTransporte()!=null) {
							this.rutatransportesForeignKey.add(pedido.getRutaTransporte());
						}

						this.addItemDefectoCombosForeignKeyRutaTransporte();
						this.cargarCombosFrameRutaTransportesForeignKey("Todos");
					}
					this.setActualRutaTransporteForeignKey(this.pedido.getid_ruta_transporte(),false,"Formulario");

					//TipoLlamada
					if(!this.pedidoConstantesFunciones.cargarid_tipo_llamadaPedido || this.pedidoConstantesFunciones.event_dependid_tipo_llamadaPedido) {
						//this.cargarCombosTipoLlamadasForeignKeyLista(" where id="+this.pedido.getid_tipo_llamada());
									//this.inicializarActualizarBindingPedido(false,false);
						this.tipollamadasForeignKey=new ArrayList<TipoLlamada>();

						if(pedido.getTipoLlamada()!=null) {
							this.tipollamadasForeignKey.add(pedido.getTipoLlamada());
						}

						this.addItemDefectoCombosForeignKeyTipoLlamada();
						this.cargarCombosFrameTipoLlamadasForeignKey("Todos");
					}
					this.setActualTipoLlamadaForeignKey(this.pedido.getid_tipo_llamada(),false,"Formulario");

					//Transportista
					if(!this.pedidoConstantesFunciones.cargarid_transportistaPedido || this.pedidoConstantesFunciones.event_dependid_transportistaPedido) {
						//this.cargarCombosTransportistasForeignKeyLista(" where id="+this.pedido.getid_transportista());
									//this.inicializarActualizarBindingPedido(false,false);
						this.transportistasForeignKey=new ArrayList<Transportista>();

						if(pedido.getTransportista()!=null) {
							this.transportistasForeignKey.add(pedido.getTransportista());
						}

						this.addItemDefectoCombosForeignKeyTransportista();
						this.cargarCombosFrameTransportistasForeignKey("Todos");
					}
					this.setActualTransportistaForeignKey(this.pedido.getid_transportista(),false,"Formulario");

					//TipoCambio
					if(!this.pedidoConstantesFunciones.cargarid_tipo_cambioPedido || this.pedidoConstantesFunciones.event_dependid_tipo_cambioPedido) {
						//this.cargarCombosTipoCambiosForeignKeyLista(" where id="+this.pedido.getid_tipo_cambio());
									//this.inicializarActualizarBindingPedido(false,false);
						this.tipocambiosForeignKey=new ArrayList<TipoCambio>();

						if(pedido.getTipoCambio()!=null) {
							this.tipocambiosForeignKey.add(pedido.getTipoCambio());
						}

						this.addItemDefectoCombosForeignKeyTipoCambio();
						this.cargarCombosFrameTipoCambiosForeignKey("Todos");
					}
					this.setActualTipoCambioForeignKey(this.pedido.getid_tipo_cambio(),false,"Formulario");

					//CentroCosto
					if(!this.pedidoConstantesFunciones.cargarid_centro_costoPedido || this.pedidoConstantesFunciones.event_dependid_centro_costoPedido) {
						//this.cargarCombosCentroCostosForeignKeyLista(" where id="+this.pedido.getid_centro_costo());
									//this.inicializarActualizarBindingPedido(false,false);
						this.centrocostosForeignKey=new ArrayList<CentroCosto>();

						if(pedido.getCentroCosto()!=null) {
							this.centrocostosForeignKey.add(pedido.getCentroCosto());
						}

						this.addItemDefectoCombosForeignKeyCentroCosto();
						this.cargarCombosFrameCentroCostosForeignKey("Todos");
					}
					this.setActualCentroCostoForeignKey(this.pedido.getid_centro_costo(),false,"Formulario");

					//Zona
					if(!this.pedidoConstantesFunciones.cargarid_zonaPedido || this.pedidoConstantesFunciones.event_dependid_zonaPedido) {
						//this.cargarCombosZonasForeignKeyLista(" where id="+this.pedido.getid_zona());
									//this.inicializarActualizarBindingPedido(false,false);
						this.zonasForeignKey=new ArrayList<Zona>();

						if(pedido.getZona()!=null) {
							this.zonasForeignKey.add(pedido.getZona());
						}

						this.addItemDefectoCombosForeignKeyZona();
						this.cargarCombosFrameZonasForeignKey("Todos");
					}
					this.setActualZonaForeignKey(this.pedido.getid_zona(),false,"Formulario");
				} catch(Exception e) {
					throw e;
				}
				
				this.actualizarEstadoCeldasBotonesPedido("s", this.isGuardarCambiosEnLote, this.isEsMantenimientoRelacionado);
				
				//NO FUNCIONA BINDING PERO SE MANTIENE
				this.inicializarActualizarBindingBotonesPedido(false) ;
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualPedido() ;
			//}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesObjetoActualToFormularioTodoPedido(Pedido pedido) throws Exception { 
		this.setVariablesObjetoActualToFormularioTodoPedido(pedido,false,"NINGUNO");
	}
	
	public void setVariablesObjetoActualToFormularioTodoPedido(Pedido pedido,Boolean conCargarListasDesdeObjetoActual,String sTipoEvento) throws Exception { 
		this.setVariablesObjetoActualToFormularioPedido(pedido);
		
		if(conCargarListasDesdeObjetoActual) {
			this.setVariablesObjetoActualToListasForeignKeyPedido(pedido,sTipoEvento);
		}
		
		this.setVariablesObjetoActualToFormularioForeignKeyPedido(pedido);
	}
	
	public void setVariablesObjetoActualToFormularioPedido(Pedido pedido) throws Exception { 
		try {			
			Image imageActual=null;
			ImageIcon imageIcon = null;
			
			if(this.jInternalFrameDetalleFormPedido==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			
			this.jInternalFrameDetalleFormPedido.jLabelidPedido.setText(pedido.getId().toString());
			this.jInternalFrameDetalleFormPedido.jTextFieldnumeroPedido.setText(pedido.getnumero());
			this.jInternalFrameDetalleFormPedido.jTextFieldpre_impresoPedido.setText(pedido.getpre_impreso());
			this.jInternalFrameDetalleFormPedido.jDateChooserfecha_emisionPedido.setDate(pedido.getfecha_emision());
			this.jInternalFrameDetalleFormPedido.jDateChooserfecha_entregaPedido.setDate(pedido.getfecha_entrega());
			this.jInternalFrameDetalleFormPedido.jTextFieldcotizacionPedido.setText(pedido.getcotizacion().toString());
			this.jInternalFrameDetalleFormPedido.jTextAreadireccionPedido.setText(pedido.getdireccion());
			this.jInternalFrameDetalleFormPedido.jTextFieldtelefonoPedido.setText(pedido.gettelefono());
			this.jInternalFrameDetalleFormPedido.jTextFieldrucPedido.setText(pedido.getruc());
			this.jInternalFrameDetalleFormPedido.jTextFieldordenPedido.setText(pedido.getorden());
			this.jInternalFrameDetalleFormPedido.jTextFieldvalor_rutaPedido.setText(pedido.getvalor_ruta().toString());
			this.jInternalFrameDetalleFormPedido.jSpinnerhora_inicioPedido.setValue(pedido.gethora_inicio());
			this.jInternalFrameDetalleFormPedido.jSpinnerhora_finPedido.setValue(pedido.gethora_fin());
			this.jInternalFrameDetalleFormPedido.jTextAreadescripcionPedido.setText(pedido.getdescripcion());
			this.jInternalFrameDetalleFormPedido.jTextFieldcupoPedido.setText(pedido.getcupo().toString());
			this.jInternalFrameDetalleFormPedido.jTextFieldsaldoPedido.setText(pedido.getsaldo().toString());
			this.jInternalFrameDetalleFormPedido.jTextFieldpedidosPedido.setText(pedido.getpedidos().toString());
			this.jInternalFrameDetalleFormPedido.jTextFielddocumentosPedido.setText(pedido.getdocumentos().toString());
			this.jInternalFrameDetalleFormPedido.jTextFielddisponiblePedido.setText(pedido.getdisponible().toString());
			this.jInternalFrameDetalleFormPedido.jTextFielddescuento_porcentajePedido.setText(pedido.getdescuento_porcentaje().toString());
			this.jInternalFrameDetalleFormPedido.jTextFieldtotal_con_ivaPedido.setText(pedido.gettotal_con_iva().toString());
			this.jInternalFrameDetalleFormPedido.jTextFieldsumanPedido.setText(pedido.getsuman().toString());
			this.jInternalFrameDetalleFormPedido.jTextFielddescuento_valorPedido.setText(pedido.getdescuento_valor().toString());
			this.jInternalFrameDetalleFormPedido.jTextFieldtotal_sin_ivaPedido.setText(pedido.gettotal_sin_iva().toString());
			this.jInternalFrameDetalleFormPedido.jTextFielddescuento_totalPedido.setText(pedido.getdescuento_total().toString());
			this.jInternalFrameDetalleFormPedido.jTextFieldfletePedido.setText(pedido.getflete().toString());
			this.jInternalFrameDetalleFormPedido.jTextFieldtotalPedido.setText(pedido.gettotal().toString());
			this.jInternalFrameDetalleFormPedido.jTextFieldsubtotalPedido.setText(pedido.getsubtotal().toString());
			this.jInternalFrameDetalleFormPedido.jTextFieldotroPedido.setText(pedido.getotro().toString());
			this.jInternalFrameDetalleFormPedido.jTextFieldultimo_costoPedido.setText(pedido.getultimo_costo().toString());
			this.jInternalFrameDetalleFormPedido.jTextFieldivaPedido.setText(pedido.getiva().toString());
			this.jInternalFrameDetalleFormPedido.jTextFieldfinanciamientoPedido.setText(pedido.getfinanciamiento().toString());
			this.jInternalFrameDetalleFormPedido.jTextFieldmargen_utilidadPedido.setText(pedido.getmargen_utilidad().toString());
			this.jInternalFrameDetalleFormPedido.jTextFieldotros_valoresPedido.setText(pedido.getotros_valores().toString());
			this.jInternalFrameDetalleFormPedido.jTextFieldanticipoPedido.setText(pedido.getanticipo().toString());
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
		}
	}
		
	public void actualizarInformacion(String sTipo,Pedido pedidoLocal) throws Exception {
		this.actualizarInformacion(sTipo,false,pedidoLocal);
	}	
	
	public void actualizarInformacion(String sTipo,Boolean conParametroObjeto,Pedido pedidoLocal) throws Exception {
		
		if(!conParametroObjeto) {
			if(!this.getEsControlTabla()) {
				pedidoLocal=this.pedido;
			} else {
				pedidoLocal=this.pedidoAnterior;
			}
		}
		
		if(this.permiteMantenimiento(pedidoLocal)) {
			if(sTipo.equals("EVENTO_CONTROL")) { // || sTipo.equals("EVENTO_NUEVO")
				if(!this.esControlTabla) {
					this.setVariablesFormularioToObjetoActualTodoPedido(pedidoLocal,true);
					
					if(pedidoSessionBean.getConGuardarRelaciones()) {
						this.actualizarRelaciones(pedidoLocal);
					}
				}
			
			} else if(sTipo.equals("INFO_PADRE")) {
				
				if(this.pedidoSessionBean.getEsGuardarRelacionado()) {
					this.actualizarRelacionFkPadreActual(pedidoLocal);
				}
			}
		}
	}
	
	public void setVariablesFormularioToObjetoActualTodoPedido(Pedido pedido,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualPedido(pedido,conColumnasBase);
		this.setVariablesFormularioToObjetoActualForeignKeysPedido(pedido);
	}
	
	public void setVariablesFormularioToObjetoActualPedido(Pedido pedido,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualPedido(pedido,conColumnasBase,true);
	}
	
	public void setVariablesFormularioToObjetoActualPedido(Pedido pedido,Boolean conColumnasBase,Boolean conInicializarInvalidValues) throws Exception { 
		String sMensajeCampoActual="";
		Boolean estaValidado=true;
		try {
			
			if(this.jInternalFrameDetalleFormPedido==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			if(conInicializarInvalidValues) {
				this.inicializarInvalidValues();
			}
			
			

		try {
			if(this.jInternalFrameDetalleFormPedido.jLabelidPedido.getText()==null || this.jInternalFrameDetalleFormPedido.jLabelidPedido.getText()=="" || this.jInternalFrameDetalleFormPedido.jLabelidPedido.getText()=="Id") {
				this.jInternalFrameDetalleFormPedido.jLabelidPedido.setText("0");
			}

			if(conColumnasBase) {pedido.setId(Long.parseLong(this.jInternalFrameDetalleFormPedido.jLabelidPedido.getText()));}
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoConstantesFunciones.LABEL_ID+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabelIdPedido,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedido.setnumero(this.jInternalFrameDetalleFormPedido.jTextFieldnumeroPedido.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoConstantesFunciones.LABEL_NUMERO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabelnumeroPedido,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedido.setpre_impreso(this.jInternalFrameDetalleFormPedido.jTextFieldpre_impresoPedido.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoConstantesFunciones.LABEL_PREIMPRESO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabelpre_impresoPedido,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedido.setfecha_emision(this.jInternalFrameDetalleFormPedido.jDateChooserfecha_emisionPedido.getDate());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoConstantesFunciones.LABEL_FECHAEMISION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabelfecha_emisionPedido,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedido.setfecha_entrega(this.jInternalFrameDetalleFormPedido.jDateChooserfecha_entregaPedido.getDate());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoConstantesFunciones.LABEL_FECHAENTREGA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabelfecha_entregaPedido,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedido.setcotizacion(Double.parseDouble(this.jInternalFrameDetalleFormPedido.jTextFieldcotizacionPedido.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoConstantesFunciones.LABEL_COTIZACION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabelcotizacionPedido,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedido.setdireccion(this.jInternalFrameDetalleFormPedido.jTextAreadireccionPedido.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoConstantesFunciones.LABEL_DIRECCION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabeldireccionPedido,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedido.settelefono(this.jInternalFrameDetalleFormPedido.jTextFieldtelefonoPedido.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoConstantesFunciones.LABEL_TELEFONO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabeltelefonoPedido,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedido.setruc(this.jInternalFrameDetalleFormPedido.jTextFieldrucPedido.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoConstantesFunciones.LABEL_RUC+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabelrucPedido,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedido.setorden(this.jInternalFrameDetalleFormPedido.jTextFieldordenPedido.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoConstantesFunciones.LABEL_ORDEN+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabelordenPedido,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedido.setvalor_ruta(Double.parseDouble(this.jInternalFrameDetalleFormPedido.jTextFieldvalor_rutaPedido.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoConstantesFunciones.LABEL_VALORRUTA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabelvalor_rutaPedido,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedido.sethora_inicio(new Time(((Date)this.jInternalFrameDetalleFormPedido.jSpinnerhora_inicioPedido.getValue()).getTime()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoConstantesFunciones.LABEL_HORAINICIO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabelhora_inicioPedido,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedido.sethora_fin(new Time(((Date)this.jInternalFrameDetalleFormPedido.jSpinnerhora_finPedido.getValue()).getTime()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoConstantesFunciones.LABEL_HORAFIN+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabelhora_finPedido,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedido.setdescripcion(this.jInternalFrameDetalleFormPedido.jTextAreadescripcionPedido.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoConstantesFunciones.LABEL_DESCRIPCION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabeldescripcionPedido,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedido.setcupo(Double.parseDouble(this.jInternalFrameDetalleFormPedido.jTextFieldcupoPedido.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoConstantesFunciones.LABEL_CUPO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabelcupoPedido,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedido.setsaldo(Double.parseDouble(this.jInternalFrameDetalleFormPedido.jTextFieldsaldoPedido.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoConstantesFunciones.LABEL_SALDO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabelsaldoPedido,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedido.setpedidos(Double.parseDouble(this.jInternalFrameDetalleFormPedido.jTextFieldpedidosPedido.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoConstantesFunciones.LABEL_PEDIDOS+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabelpedidosPedido,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedido.setdocumentos(Double.parseDouble(this.jInternalFrameDetalleFormPedido.jTextFielddocumentosPedido.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoConstantesFunciones.LABEL_DOCUMENTOS+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabeldocumentosPedido,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedido.setdisponible(Double.parseDouble(this.jInternalFrameDetalleFormPedido.jTextFielddisponiblePedido.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoConstantesFunciones.LABEL_DISPONIBLE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabeldisponiblePedido,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedido.setdescuento_porcentaje(Double.parseDouble(this.jInternalFrameDetalleFormPedido.jTextFielddescuento_porcentajePedido.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoConstantesFunciones.LABEL_DESCUENTOPORCENTAJE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabeldescuento_porcentajePedido,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedido.settotal_con_iva(Double.parseDouble(this.jInternalFrameDetalleFormPedido.jTextFieldtotal_con_ivaPedido.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoConstantesFunciones.LABEL_TOTALCONIVA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabeltotal_con_ivaPedido,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedido.setsuman(Double.parseDouble(this.jInternalFrameDetalleFormPedido.jTextFieldsumanPedido.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoConstantesFunciones.LABEL_SUMAN+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabelsumanPedido,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedido.setdescuento_valor(Double.parseDouble(this.jInternalFrameDetalleFormPedido.jTextFielddescuento_valorPedido.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoConstantesFunciones.LABEL_DESCUENTOVALOR+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabeldescuento_valorPedido,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedido.settotal_sin_iva(Double.parseDouble(this.jInternalFrameDetalleFormPedido.jTextFieldtotal_sin_ivaPedido.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoConstantesFunciones.LABEL_TOTALSINIVA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabeltotal_sin_ivaPedido,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedido.setdescuento_total(Double.parseDouble(this.jInternalFrameDetalleFormPedido.jTextFielddescuento_totalPedido.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoConstantesFunciones.LABEL_DESCUENTOTOTAL+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabeldescuento_totalPedido,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedido.setflete(Double.parseDouble(this.jInternalFrameDetalleFormPedido.jTextFieldfletePedido.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoConstantesFunciones.LABEL_FLETE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabelfletePedido,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedido.settotal(Double.parseDouble(this.jInternalFrameDetalleFormPedido.jTextFieldtotalPedido.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoConstantesFunciones.LABEL_TOTAL+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabeltotalPedido,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedido.setsubtotal(Double.parseDouble(this.jInternalFrameDetalleFormPedido.jTextFieldsubtotalPedido.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoConstantesFunciones.LABEL_SUBTOTAL+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabelsubtotalPedido,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedido.setotro(Double.parseDouble(this.jInternalFrameDetalleFormPedido.jTextFieldotroPedido.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoConstantesFunciones.LABEL_OTRO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabelotroPedido,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedido.setultimo_costo(Double.parseDouble(this.jInternalFrameDetalleFormPedido.jTextFieldultimo_costoPedido.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoConstantesFunciones.LABEL_ULTIMOCOSTO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabelultimo_costoPedido,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedido.setiva(Double.parseDouble(this.jInternalFrameDetalleFormPedido.jTextFieldivaPedido.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoConstantesFunciones.LABEL_IVA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabelivaPedido,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedido.setfinanciamiento(Double.parseDouble(this.jInternalFrameDetalleFormPedido.jTextFieldfinanciamientoPedido.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoConstantesFunciones.LABEL_FINANCIAMIENTO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabelfinanciamientoPedido,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedido.setmargen_utilidad(Double.parseDouble(this.jInternalFrameDetalleFormPedido.jTextFieldmargen_utilidadPedido.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoConstantesFunciones.LABEL_MARGENUTILIDAD+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabelmargen_utilidadPedido,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedido.setotros_valores(Double.parseDouble(this.jInternalFrameDetalleFormPedido.jTextFieldotros_valoresPedido.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoConstantesFunciones.LABEL_OTROSVALORES+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabelotros_valoresPedido,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedido.setanticipo(Double.parseDouble(this.jInternalFrameDetalleFormPedido.jTextFieldanticipoPedido.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoConstantesFunciones.LABEL_ANTICIPO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedido.jLabelanticipoPedido,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}
			
			if(!estaValidado) {
				throw new Exception(sMensajeCampoActual);
			}
		} catch(NumberFormatException e) {
			throw new Exception(sMensajeCampoActual);
			//FuncionesSwing.manageException(this, e,logger,MovimientoInventarioConstantesFunciones.CLASSNAME);
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualPedido(Pedido pedidoBean,Pedido pedido,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setCopiarVariablesObjetosPedido(Pedido pedidoOrigen,Pedido pedido,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			if(conColumnasBase) {if(conDefault || (!conDefault && pedidoOrigen.getId()!=null && !pedidoOrigen.getId().equals(0L))) {pedido.setId(pedidoOrigen.getId());}}
			if(conDefault || (!conDefault && pedidoOrigen.getnumero()!=null && !pedidoOrigen.getnumero().equals(""))) {pedido.setnumero(pedidoOrigen.getnumero());}
			if(conDefault || (!conDefault && pedidoOrigen.getpre_impreso()!=null && !pedidoOrigen.getpre_impreso().equals(""))) {pedido.setpre_impreso(pedidoOrigen.getpre_impreso());}
			if(conDefault || (!conDefault && pedidoOrigen.getfecha_emision()!=null && !pedidoOrigen.getfecha_emision().equals(new Date()))) {pedido.setfecha_emision(pedidoOrigen.getfecha_emision());}
			if(conDefault || (!conDefault && pedidoOrigen.getfecha_entrega()!=null && !pedidoOrigen.getfecha_entrega().equals(new Date()))) {pedido.setfecha_entrega(pedidoOrigen.getfecha_entrega());}
			if(conDefault || (!conDefault && pedidoOrigen.getcotizacion()!=null && !pedidoOrigen.getcotizacion().equals(0.0))) {pedido.setcotizacion(pedidoOrigen.getcotizacion());}
			if(conDefault || (!conDefault && pedidoOrigen.getdireccion()!=null && !pedidoOrigen.getdireccion().equals(""))) {pedido.setdireccion(pedidoOrigen.getdireccion());}
			if(conDefault || (!conDefault && pedidoOrigen.gettelefono()!=null && !pedidoOrigen.gettelefono().equals(""))) {pedido.settelefono(pedidoOrigen.gettelefono());}
			if(conDefault || (!conDefault && pedidoOrigen.getruc()!=null && !pedidoOrigen.getruc().equals(""))) {pedido.setruc(pedidoOrigen.getruc());}
			if(conDefault || (!conDefault && pedidoOrigen.getorden()!=null && !pedidoOrigen.getorden().equals(""))) {pedido.setorden(pedidoOrigen.getorden());}
			if(conDefault || (!conDefault && pedidoOrigen.getvalor_ruta()!=null && !pedidoOrigen.getvalor_ruta().equals(0.0))) {pedido.setvalor_ruta(pedidoOrigen.getvalor_ruta());}
			if(conDefault || (!conDefault && pedidoOrigen.gethora_inicio()!=null && !pedidoOrigen.gethora_inicio().equals(new Time((new Date()).getTime())))) {pedido.sethora_inicio(pedidoOrigen.gethora_inicio());}
			if(conDefault || (!conDefault && pedidoOrigen.gethora_fin()!=null && !pedidoOrigen.gethora_fin().equals(new Time((new Date()).getTime())))) {pedido.sethora_fin(pedidoOrigen.gethora_fin());}
			if(conDefault || (!conDefault && pedidoOrigen.getdescripcion()!=null && !pedidoOrigen.getdescripcion().equals(""))) {pedido.setdescripcion(pedidoOrigen.getdescripcion());}
			if(conDefault || (!conDefault && pedidoOrigen.getcupo()!=null && !pedidoOrigen.getcupo().equals(0.0))) {pedido.setcupo(pedidoOrigen.getcupo());}
			if(conDefault || (!conDefault && pedidoOrigen.getsaldo()!=null && !pedidoOrigen.getsaldo().equals(0.0))) {pedido.setsaldo(pedidoOrigen.getsaldo());}
			if(conDefault || (!conDefault && pedidoOrigen.getpedidos()!=null && !pedidoOrigen.getpedidos().equals(0.0))) {pedido.setpedidos(pedidoOrigen.getpedidos());}
			if(conDefault || (!conDefault && pedidoOrigen.getdocumentos()!=null && !pedidoOrigen.getdocumentos().equals(0.0))) {pedido.setdocumentos(pedidoOrigen.getdocumentos());}
			if(conDefault || (!conDefault && pedidoOrigen.getdisponible()!=null && !pedidoOrigen.getdisponible().equals(0.0))) {pedido.setdisponible(pedidoOrigen.getdisponible());}
			if(conDefault || (!conDefault && pedidoOrigen.getdescuento_porcentaje()!=null && !pedidoOrigen.getdescuento_porcentaje().equals(0.0))) {pedido.setdescuento_porcentaje(pedidoOrigen.getdescuento_porcentaje());}
			if(conDefault || (!conDefault && pedidoOrigen.gettotal_con_iva()!=null && !pedidoOrigen.gettotal_con_iva().equals(0.0))) {pedido.settotal_con_iva(pedidoOrigen.gettotal_con_iva());}
			if(conDefault || (!conDefault && pedidoOrigen.getsuman()!=null && !pedidoOrigen.getsuman().equals(0.0))) {pedido.setsuman(pedidoOrigen.getsuman());}
			if(conDefault || (!conDefault && pedidoOrigen.getdescuento_valor()!=null && !pedidoOrigen.getdescuento_valor().equals(0.0))) {pedido.setdescuento_valor(pedidoOrigen.getdescuento_valor());}
			if(conDefault || (!conDefault && pedidoOrigen.gettotal_sin_iva()!=null && !pedidoOrigen.gettotal_sin_iva().equals(0.0))) {pedido.settotal_sin_iva(pedidoOrigen.gettotal_sin_iva());}
			if(conDefault || (!conDefault && pedidoOrigen.getdescuento_total()!=null && !pedidoOrigen.getdescuento_total().equals(0.0))) {pedido.setdescuento_total(pedidoOrigen.getdescuento_total());}
			if(conDefault || (!conDefault && pedidoOrigen.getflete()!=null && !pedidoOrigen.getflete().equals(0.0))) {pedido.setflete(pedidoOrigen.getflete());}
			if(conDefault || (!conDefault && pedidoOrigen.gettotal()!=null && !pedidoOrigen.gettotal().equals(0.0))) {pedido.settotal(pedidoOrigen.gettotal());}
			if(conDefault || (!conDefault && pedidoOrigen.getsubtotal()!=null && !pedidoOrigen.getsubtotal().equals(0.0))) {pedido.setsubtotal(pedidoOrigen.getsubtotal());}
			if(conDefault || (!conDefault && pedidoOrigen.getotro()!=null && !pedidoOrigen.getotro().equals(0.0))) {pedido.setotro(pedidoOrigen.getotro());}
			if(conDefault || (!conDefault && pedidoOrigen.getultimo_costo()!=null && !pedidoOrigen.getultimo_costo().equals(0.0))) {pedido.setultimo_costo(pedidoOrigen.getultimo_costo());}
			if(conDefault || (!conDefault && pedidoOrigen.getiva()!=null && !pedidoOrigen.getiva().equals(0.0))) {pedido.setiva(pedidoOrigen.getiva());}
			if(conDefault || (!conDefault && pedidoOrigen.getfinanciamiento()!=null && !pedidoOrigen.getfinanciamiento().equals(0.0))) {pedido.setfinanciamiento(pedidoOrigen.getfinanciamiento());}
			if(conDefault || (!conDefault && pedidoOrigen.getmargen_utilidad()!=null && !pedidoOrigen.getmargen_utilidad().equals(0.0))) {pedido.setmargen_utilidad(pedidoOrigen.getmargen_utilidad());}
			if(conDefault || (!conDefault && pedidoOrigen.getotros_valores()!=null && !pedidoOrigen.getotros_valores().equals(0.0))) {pedido.setotros_valores(pedidoOrigen.getotros_valores());}
			if(conDefault || (!conDefault && pedidoOrigen.getanticipo()!=null && !pedidoOrigen.getanticipo().equals(0.0))) {pedido.setanticipo(pedidoOrigen.getanticipo());}
			if(conDefault || (!conDefault && pedidoOrigen.getfecha()!=null && !pedidoOrigen.getfecha().equals(new Date()))) {pedido.setfecha(pedidoOrigen.getfecha());}
			if(conDefault || (!conDefault && pedidoOrigen.getnumero_fue()!=null && !pedidoOrigen.getnumero_fue().equals(""))) {pedido.setnumero_fue(pedidoOrigen.getnumero_fue());}
			if(conDefault || (!conDefault && pedidoOrigen.getfecha_servidor()!=null && !pedidoOrigen.getfecha_servidor().equals(new Date()))) {pedido.setfecha_servidor(pedidoOrigen.getfecha_servidor());}
			if(conDefault || (!conDefault && pedidoOrigen.getmonto_retencion()!=null && !pedidoOrigen.getmonto_retencion().equals(0.0))) {pedido.setmonto_retencion(pedidoOrigen.getmonto_retencion());}
			if(conDefault || (!conDefault && pedidoOrigen.getice()!=null && !pedidoOrigen.getice().equals(0.0))) {pedido.setice(pedidoOrigen.getice());}
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
		}
	}
	
	/*
	public void setVariablesObjetoBeanActualToFormularioPedido(Pedido pedido) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormPedido.jLabelidPedido.setText(pedido.getId().toString());
			this.jInternalFrameDetalleFormPedido.jTextFieldnumeroPedido.setText(pedido.getnumero());
			this.jInternalFrameDetalleFormPedido.jTextFieldpre_impresoPedido.setText(pedido.getpre_impreso());
			this.jInternalFrameDetalleFormPedido.jDateChooserfecha_emisionPedido.setDate(pedido.getfecha_emision());
			this.jInternalFrameDetalleFormPedido.jDateChooserfecha_entregaPedido.setDate(pedido.getfecha_entrega());
			this.jInternalFrameDetalleFormPedido.jTextFieldcotizacionPedido.setText(pedido.getcotizacion().toString());
			this.jInternalFrameDetalleFormPedido.jTextAreadireccionPedido.setText(pedido.getdireccion());
			this.jInternalFrameDetalleFormPedido.jTextFieldtelefonoPedido.setText(pedido.gettelefono());
			this.jInternalFrameDetalleFormPedido.jTextFieldrucPedido.setText(pedido.getruc());
			this.jInternalFrameDetalleFormPedido.jTextFieldordenPedido.setText(pedido.getorden());
			this.jInternalFrameDetalleFormPedido.jTextFieldvalor_rutaPedido.setText(pedido.getvalor_ruta().toString());
			this.jInternalFrameDetalleFormPedido.jSpinnerhora_inicioPedido.setValue(pedido.gethora_inicio());
			this.jInternalFrameDetalleFormPedido.jSpinnerhora_finPedido.setValue(pedido.gethora_fin());
			this.jInternalFrameDetalleFormPedido.jTextAreadescripcionPedido.setText(pedido.getdescripcion());
			this.jInternalFrameDetalleFormPedido.jTextFieldcupoPedido.setText(pedido.getcupo().toString());
			this.jInternalFrameDetalleFormPedido.jTextFieldsaldoPedido.setText(pedido.getsaldo().toString());
			this.jInternalFrameDetalleFormPedido.jTextFieldpedidosPedido.setText(pedido.getpedidos().toString());
			this.jInternalFrameDetalleFormPedido.jTextFielddocumentosPedido.setText(pedido.getdocumentos().toString());
			this.jInternalFrameDetalleFormPedido.jTextFielddisponiblePedido.setText(pedido.getdisponible().toString());
			this.jInternalFrameDetalleFormPedido.jTextFielddescuento_porcentajePedido.setText(pedido.getdescuento_porcentaje().toString());
			this.jInternalFrameDetalleFormPedido.jTextFieldtotal_con_ivaPedido.setText(pedido.gettotal_con_iva().toString());
			this.jInternalFrameDetalleFormPedido.jTextFieldsumanPedido.setText(pedido.getsuman().toString());
			this.jInternalFrameDetalleFormPedido.jTextFielddescuento_valorPedido.setText(pedido.getdescuento_valor().toString());
			this.jInternalFrameDetalleFormPedido.jTextFieldtotal_sin_ivaPedido.setText(pedido.gettotal_sin_iva().toString());
			this.jInternalFrameDetalleFormPedido.jTextFielddescuento_totalPedido.setText(pedido.getdescuento_total().toString());
			this.jInternalFrameDetalleFormPedido.jTextFieldfletePedido.setText(pedido.getflete().toString());
			this.jInternalFrameDetalleFormPedido.jTextFieldtotalPedido.setText(pedido.gettotal().toString());
			this.jInternalFrameDetalleFormPedido.jTextFieldsubtotalPedido.setText(pedido.getsubtotal().toString());
			this.jInternalFrameDetalleFormPedido.jTextFieldotroPedido.setText(pedido.getotro().toString());
			this.jInternalFrameDetalleFormPedido.jTextFieldultimo_costoPedido.setText(pedido.getultimo_costo().toString());
			this.jInternalFrameDetalleFormPedido.jTextFieldivaPedido.setText(pedido.getiva().toString());
			this.jInternalFrameDetalleFormPedido.jTextFieldfinanciamientoPedido.setText(pedido.getfinanciamiento().toString());
			this.jInternalFrameDetalleFormPedido.jTextFieldmargen_utilidadPedido.setText(pedido.getmargen_utilidad().toString());
			this.jInternalFrameDetalleFormPedido.jTextFieldotros_valoresPedido.setText(pedido.getotros_valores().toString());
			this.jInternalFrameDetalleFormPedido.jTextFieldanticipoPedido.setText(pedido.getanticipo().toString());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoBeanActualToFormularioPedido(PedidoBean pedidoBean) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormPedido.jLabelidPedido.setText(pedidoBean.getId().toString());
			this.jInternalFrameDetalleFormPedido.jTextFieldnumeroPedido.setText(pedidoBean.getnumero());
			this.jInternalFrameDetalleFormPedido.jTextFieldpre_impresoPedido.setText(pedidoBean.getpre_impreso());
			this.jInternalFrameDetalleFormPedido.jDateChooserfecha_emisionPedido.setDate(pedidoBean.getfecha_emision());
			this.jInternalFrameDetalleFormPedido.jDateChooserfecha_entregaPedido.setDate(pedidoBean.getfecha_entrega());
			this.jInternalFrameDetalleFormPedido.jTextFieldcotizacionPedido.setText(pedidoBean.getcotizacion().toString());
			this.jInternalFrameDetalleFormPedido.jTextAreadireccionPedido.setText(pedidoBean.getdireccion());
			this.jInternalFrameDetalleFormPedido.jTextFieldtelefonoPedido.setText(pedidoBean.gettelefono());
			this.jInternalFrameDetalleFormPedido.jTextFieldrucPedido.setText(pedidoBean.getruc());
			this.jInternalFrameDetalleFormPedido.jTextFieldordenPedido.setText(pedidoBean.getorden());
			this.jInternalFrameDetalleFormPedido.jTextFieldvalor_rutaPedido.setText(pedidoBean.getvalor_ruta().toString());
			this.jInternalFrameDetalleFormPedido.jSpinnerhora_inicioPedido.setValue(pedidoBean.gethora_inicio());
			this.jInternalFrameDetalleFormPedido.jSpinnerhora_finPedido.setValue(pedidoBean.gethora_fin());
			this.jInternalFrameDetalleFormPedido.jTextAreadescripcionPedido.setText(pedidoBean.getdescripcion());
			this.jInternalFrameDetalleFormPedido.jTextFieldcupoPedido.setText(pedidoBean.getcupo().toString());
			this.jInternalFrameDetalleFormPedido.jTextFieldsaldoPedido.setText(pedidoBean.getsaldo().toString());
			this.jInternalFrameDetalleFormPedido.jTextFieldpedidosPedido.setText(pedidoBean.getpedidos().toString());
			this.jInternalFrameDetalleFormPedido.jTextFielddocumentosPedido.setText(pedidoBean.getdocumentos().toString());
			this.jInternalFrameDetalleFormPedido.jTextFielddisponiblePedido.setText(pedidoBean.getdisponible().toString());
			this.jInternalFrameDetalleFormPedido.jTextFielddescuento_porcentajePedido.setText(pedidoBean.getdescuento_porcentaje().toString());
			this.jInternalFrameDetalleFormPedido.jTextFieldtotal_con_ivaPedido.setText(pedidoBean.gettotal_con_iva().toString());
			this.jInternalFrameDetalleFormPedido.jTextFieldsumanPedido.setText(pedidoBean.getsuman().toString());
			this.jInternalFrameDetalleFormPedido.jTextFielddescuento_valorPedido.setText(pedidoBean.getdescuento_valor().toString());
			this.jInternalFrameDetalleFormPedido.jTextFieldtotal_sin_ivaPedido.setText(pedidoBean.gettotal_sin_iva().toString());
			this.jInternalFrameDetalleFormPedido.jTextFielddescuento_totalPedido.setText(pedidoBean.getdescuento_total().toString());
			this.jInternalFrameDetalleFormPedido.jTextFieldfletePedido.setText(pedidoBean.getflete().toString());
			this.jInternalFrameDetalleFormPedido.jTextFieldtotalPedido.setText(pedidoBean.gettotal().toString());
			this.jInternalFrameDetalleFormPedido.jTextFieldsubtotalPedido.setText(pedidoBean.getsubtotal().toString());
			this.jInternalFrameDetalleFormPedido.jTextFieldotroPedido.setText(pedidoBean.getotro().toString());
			this.jInternalFrameDetalleFormPedido.jTextFieldultimo_costoPedido.setText(pedidoBean.getultimo_costo().toString());
			this.jInternalFrameDetalleFormPedido.jTextFieldivaPedido.setText(pedidoBean.getiva().toString());
			this.jInternalFrameDetalleFormPedido.jTextFieldfinanciamientoPedido.setText(pedidoBean.getfinanciamiento().toString());
			this.jInternalFrameDetalleFormPedido.jTextFieldmargen_utilidadPedido.setText(pedidoBean.getmargen_utilidad().toString());
			this.jInternalFrameDetalleFormPedido.jTextFieldotros_valoresPedido.setText(pedidoBean.getotros_valores().toString());
			this.jInternalFrameDetalleFormPedido.jTextFieldanticipoPedido.setText(pedidoBean.getanticipo().toString());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoReturnGeneralToBeanPedido(PedidoParameterReturnGeneral pedidoReturnGeneral,PedidoBean pedidoBean,Boolean conDefault) throws Exception { 
		try {
			Pedido pedidoLocal=new Pedido();
			
			pedidoLocal=pedidoReturnGeneral.getPedido();
			
			
			if(conColumnasBase) {if(conDefault || (!conDefault && pedidoLocal.getId()!=null && !pedidoLocal.getId().equals(0L))) {pedidoBean.setId(pedidoLocal.getId());}}
			if(conDefault || (!conDefault && pedidoLocal.getnumero()!=null && !pedidoLocal.getnumero().equals(""))) {pedidoBean.setnumero(pedidoLocal.getnumero());}
			if(conDefault || (!conDefault && pedidoLocal.getpre_impreso()!=null && !pedidoLocal.getpre_impreso().equals(""))) {pedidoBean.setpre_impreso(pedidoLocal.getpre_impreso());}
			if(conDefault || (!conDefault && pedidoLocal.getfecha_emision()!=null && !pedidoLocal.getfecha_emision().equals(new Date()))) {pedidoBean.setfecha_emision(pedidoLocal.getfecha_emision());}
			if(conDefault || (!conDefault && pedidoLocal.getfecha_entrega()!=null && !pedidoLocal.getfecha_entrega().equals(new Date()))) {pedidoBean.setfecha_entrega(pedidoLocal.getfecha_entrega());}
			if(conDefault || (!conDefault && pedidoLocal.getcotizacion()!=null && !pedidoLocal.getcotizacion().equals(0.0))) {pedidoBean.setcotizacion(pedidoLocal.getcotizacion());}
			if(conDefault || (!conDefault && pedidoLocal.getdireccion()!=null && !pedidoLocal.getdireccion().equals(""))) {pedidoBean.setdireccion(pedidoLocal.getdireccion());}
			if(conDefault || (!conDefault && pedidoLocal.gettelefono()!=null && !pedidoLocal.gettelefono().equals(""))) {pedidoBean.settelefono(pedidoLocal.gettelefono());}
			if(conDefault || (!conDefault && pedidoLocal.getruc()!=null && !pedidoLocal.getruc().equals(""))) {pedidoBean.setruc(pedidoLocal.getruc());}
			if(conDefault || (!conDefault && pedidoLocal.getorden()!=null && !pedidoLocal.getorden().equals(""))) {pedidoBean.setorden(pedidoLocal.getorden());}
			if(conDefault || (!conDefault && pedidoLocal.getvalor_ruta()!=null && !pedidoLocal.getvalor_ruta().equals(0.0))) {pedidoBean.setvalor_ruta(pedidoLocal.getvalor_ruta());}
			if(conDefault || (!conDefault && pedidoLocal.gethora_inicio()!=null && !pedidoLocal.gethora_inicio().equals(new Time((new Date()).getTime())))) {pedidoBean.sethora_inicio(pedidoLocal.gethora_inicio());}
			if(conDefault || (!conDefault && pedidoLocal.gethora_fin()!=null && !pedidoLocal.gethora_fin().equals(new Time((new Date()).getTime())))) {pedidoBean.sethora_fin(pedidoLocal.gethora_fin());}
			if(conDefault || (!conDefault && pedidoLocal.getdescripcion()!=null && !pedidoLocal.getdescripcion().equals(""))) {pedidoBean.setdescripcion(pedidoLocal.getdescripcion());}
			if(conDefault || (!conDefault && pedidoLocal.getcupo()!=null && !pedidoLocal.getcupo().equals(0.0))) {pedidoBean.setcupo(pedidoLocal.getcupo());}
			if(conDefault || (!conDefault && pedidoLocal.getsaldo()!=null && !pedidoLocal.getsaldo().equals(0.0))) {pedidoBean.setsaldo(pedidoLocal.getsaldo());}
			if(conDefault || (!conDefault && pedidoLocal.getpedidos()!=null && !pedidoLocal.getpedidos().equals(0.0))) {pedidoBean.setpedidos(pedidoLocal.getpedidos());}
			if(conDefault || (!conDefault && pedidoLocal.getdocumentos()!=null && !pedidoLocal.getdocumentos().equals(0.0))) {pedidoBean.setdocumentos(pedidoLocal.getdocumentos());}
			if(conDefault || (!conDefault && pedidoLocal.getdisponible()!=null && !pedidoLocal.getdisponible().equals(0.0))) {pedidoBean.setdisponible(pedidoLocal.getdisponible());}
			if(conDefault || (!conDefault && pedidoLocal.getdescuento_porcentaje()!=null && !pedidoLocal.getdescuento_porcentaje().equals(0.0))) {pedidoBean.setdescuento_porcentaje(pedidoLocal.getdescuento_porcentaje());}
			if(conDefault || (!conDefault && pedidoLocal.gettotal_con_iva()!=null && !pedidoLocal.gettotal_con_iva().equals(0.0))) {pedidoBean.settotal_con_iva(pedidoLocal.gettotal_con_iva());}
			if(conDefault || (!conDefault && pedidoLocal.getsuman()!=null && !pedidoLocal.getsuman().equals(0.0))) {pedidoBean.setsuman(pedidoLocal.getsuman());}
			if(conDefault || (!conDefault && pedidoLocal.getdescuento_valor()!=null && !pedidoLocal.getdescuento_valor().equals(0.0))) {pedidoBean.setdescuento_valor(pedidoLocal.getdescuento_valor());}
			if(conDefault || (!conDefault && pedidoLocal.gettotal_sin_iva()!=null && !pedidoLocal.gettotal_sin_iva().equals(0.0))) {pedidoBean.settotal_sin_iva(pedidoLocal.gettotal_sin_iva());}
			if(conDefault || (!conDefault && pedidoLocal.getdescuento_total()!=null && !pedidoLocal.getdescuento_total().equals(0.0))) {pedidoBean.setdescuento_total(pedidoLocal.getdescuento_total());}
			if(conDefault || (!conDefault && pedidoLocal.getflete()!=null && !pedidoLocal.getflete().equals(0.0))) {pedidoBean.setflete(pedidoLocal.getflete());}
			if(conDefault || (!conDefault && pedidoLocal.gettotal()!=null && !pedidoLocal.gettotal().equals(0.0))) {pedidoBean.settotal(pedidoLocal.gettotal());}
			if(conDefault || (!conDefault && pedidoLocal.getsubtotal()!=null && !pedidoLocal.getsubtotal().equals(0.0))) {pedidoBean.setsubtotal(pedidoLocal.getsubtotal());}
			if(conDefault || (!conDefault && pedidoLocal.getotro()!=null && !pedidoLocal.getotro().equals(0.0))) {pedidoBean.setotro(pedidoLocal.getotro());}
			if(conDefault || (!conDefault && pedidoLocal.getultimo_costo()!=null && !pedidoLocal.getultimo_costo().equals(0.0))) {pedidoBean.setultimo_costo(pedidoLocal.getultimo_costo());}
			if(conDefault || (!conDefault && pedidoLocal.getiva()!=null && !pedidoLocal.getiva().equals(0.0))) {pedidoBean.setiva(pedidoLocal.getiva());}
			if(conDefault || (!conDefault && pedidoLocal.getfinanciamiento()!=null && !pedidoLocal.getfinanciamiento().equals(0.0))) {pedidoBean.setfinanciamiento(pedidoLocal.getfinanciamiento());}
			if(conDefault || (!conDefault && pedidoLocal.getmargen_utilidad()!=null && !pedidoLocal.getmargen_utilidad().equals(0.0))) {pedidoBean.setmargen_utilidad(pedidoLocal.getmargen_utilidad());}
			if(conDefault || (!conDefault && pedidoLocal.getotros_valores()!=null && !pedidoLocal.getotros_valores().equals(0.0))) {pedidoBean.setotros_valores(pedidoLocal.getotros_valores());}
			if(conDefault || (!conDefault && pedidoLocal.getanticipo()!=null && !pedidoLocal.getanticipo().equals(0.0))) {pedidoBean.setanticipo(pedidoLocal.getanticipo());}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	@SuppressWarnings("rawtypes")
	public static void setActualComboBoxPedidoGenerico(Long idPedidoSeleccionado,JComboBox jComboBoxPedido,List<Pedido> pedidosLocal)throws Exception {
		try {
			Pedido  pedidoTemp=null;

			for(Pedido pedidoAux:pedidosLocal) {
				if(pedidoAux.getId()!=null && pedidoAux.getId().equals(idPedidoSeleccionado)) {
					pedidoTemp=pedidoAux;
					break;
				}
			}

			jComboBoxPedido.setSelectedItem(pedidoTemp);

		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("rawtypes")
	public static void setHotKeysComboBoxPedidoGenerico(JComboBox jComboBoxPedido,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda)throws Exception {
		try {
			//GLOBAL(id_empresa,id_sucursal,id_ejercicio)
			//BASICO(normal)
			//CON_BUSQUEDA(Permite buscar Fk)
			
			String sKeyStrokeName="";
			KeyStroke keyStrokeControl=null;
			
			if(!sTipoBusqueda.equals("GLOBAL")) {
				
				//BUSCAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSCAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSCAR");
				
				jComboBoxPedido.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxPedido.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Busqueda"));
				//BUSCAR
				
				
				//ACTUALIZAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_ACTUALIZAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_ACTUALIZAR");
				
				jComboBoxPedido.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxPedido.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Update"));
				//ACTUALIZAR
				
				if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxPedido.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
						jComboBoxPedido.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));						
					}
					
					/*
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxPedido.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					} else {
						jComboBoxPedido.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					}
					*/
				}								
				
				//CON_BUSQUEDA								
				if(sTipoBusqueda.contains("CON_BUSQUEDA")) {
					sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSQUEDA");
					keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSQUEDA");
							
					jComboBoxPedido.getInputMap().put(keyStrokeControl, sKeyStrokeName);
					jComboBoxPedido.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction));
				}
				//CON_BUSQUEDA
				
				
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	@SuppressWarnings("rawtypes")
	public void setHotKeysComboBoxGenerico(JComboBox jComboBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
			if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
				jComboBox.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			} else {
				jComboBox.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			}
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextFieldGenerico(JTextField jTextField,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextField.addFocusListener(new TextFieldFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		jTextField.addActionListener(new TextFieldActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextAreaGenerico(JTextArea jTextArea,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextArea.addFocusListener(new TextAreaFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jTextArea.addActionListener(new TextAreaActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJLabelGenerico(JLabel jLabel,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jLabel.addFocusListener(new LabelFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jLabel.addActionListener(new LabelActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJCheckBoxGenerico(JCheckBox jCheckBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jCheckBox.addFocusListener(new CheckBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//SI SE DEFINE AL CAMBIAR VALOR, ESTE NUEVO VALOR NO SE ENVIA AL EVENTO
		//jCheckBox.addItemListener(new CheckBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJDateChooserGenerico(JDateChooser jDateChooser,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		FuncionesSwing.addDateListener(jDateChooser, jInternalFrameBase, sNombreHotKeyAbstractAction);
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJButtonGenerico(JButton jButton,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jButton.addActionListener(new ButtonActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	public void jButtonRelacionActionPerformed(String sTipo,ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado) {
		//ABRIR RELACIONES
		try {
			
		if(sTipo.equals("DetallePedido")) {
			jButtonDetallePedidoActionPerformed(evt,rowIndex,true,false,null);
		}
		} catch (Exception e) {
			FuncionesSwing.manageException2(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
		}
	}
	
	public String getDescripcionFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		String sDescripcion="";
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			pedido=(Pedido) pedidoLogic.getPedidos().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			pedido =(Pedido) pedidos.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		if(sTipo.equals("Empresa")) {
			//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
			if(!pedido.getIsNew() && !pedido.getIsChanged() && !pedido.getIsDeleted()) {
				sDescripcion=pedido.getempresa_descripcion();
			} else {
				//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
				sDescripcion=pedido.getempresa_descripcion();
			}
		}

		if(sTipo.equals("Sucursal")) {
			//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
			if(!pedido.getIsNew() && !pedido.getIsChanged() && !pedido.getIsDeleted()) {
				sDescripcion=pedido.getsucursal_descripcion();
			} else {
				//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
				sDescripcion=pedido.getsucursal_descripcion();
			}
		}

		if(sTipo.equals("Ejercicio")) {
			//sDescripcion=this.getActualEjercicioForeignKeyDescripcion((Long)value);
			if(!pedido.getIsNew() && !pedido.getIsChanged() && !pedido.getIsDeleted()) {
				sDescripcion=pedido.getejercicio_descripcion();
			} else {
				//sDescripcion=this.getActualEjercicioForeignKeyDescripcion((Long)value);
				sDescripcion=pedido.getejercicio_descripcion();
			}
		}

		if(sTipo.equals("Periodo")) {
			//sDescripcion=this.getActualPeriodoForeignKeyDescripcion((Long)value);
			if(!pedido.getIsNew() && !pedido.getIsChanged() && !pedido.getIsDeleted()) {
				sDescripcion=pedido.getperiodo_descripcion();
			} else {
				//sDescripcion=this.getActualPeriodoForeignKeyDescripcion((Long)value);
				sDescripcion=pedido.getperiodo_descripcion();
			}
		}

		if(sTipo.equals("Anio")) {
			//sDescripcion=this.getActualAnioForeignKeyDescripcion((Long)value);
			if(!pedido.getIsNew() && !pedido.getIsChanged() && !pedido.getIsDeleted()) {
				sDescripcion=pedido.getanio_descripcion();
			} else {
				//sDescripcion=this.getActualAnioForeignKeyDescripcion((Long)value);
				sDescripcion=pedido.getanio_descripcion();
			}
		}

		if(sTipo.equals("Mes")) {
			//sDescripcion=this.getActualMesForeignKeyDescripcion((Long)value);
			if(!pedido.getIsNew() && !pedido.getIsChanged() && !pedido.getIsDeleted()) {
				sDescripcion=pedido.getmes_descripcion();
			} else {
				//sDescripcion=this.getActualMesForeignKeyDescripcion((Long)value);
				sDescripcion=pedido.getmes_descripcion();
			}
		}

		if(sTipo.equals("Usuario")) {
			//sDescripcion=this.getActualUsuarioForeignKeyDescripcion((Long)value);
			if(!pedido.getIsNew() && !pedido.getIsChanged() && !pedido.getIsDeleted()) {
				sDescripcion=pedido.getusuario_descripcion();
			} else {
				//sDescripcion=this.getActualUsuarioForeignKeyDescripcion((Long)value);
				sDescripcion=pedido.getusuario_descripcion();
			}
		}

		if(sTipo.equals("Moneda")) {
			//sDescripcion=this.getActualMonedaForeignKeyDescripcion((Long)value);
			if(!pedido.getIsNew() && !pedido.getIsChanged() && !pedido.getIsDeleted()) {
				sDescripcion=pedido.getmoneda_descripcion();
			} else {
				//sDescripcion=this.getActualMonedaForeignKeyDescripcion((Long)value);
				sDescripcion=pedido.getmoneda_descripcion();
			}
		}

		if(sTipo.equals("Empleado")) {
			//sDescripcion=this.getActualEmpleadoForeignKeyDescripcion((Long)value);
			if(!pedido.getIsNew() && !pedido.getIsChanged() && !pedido.getIsDeleted()) {
				sDescripcion=pedido.getempleado_descripcion();
			} else {
				//sDescripcion=this.getActualEmpleadoForeignKeyDescripcion((Long)value);
				sDescripcion=pedido.getempleado_descripcion();
			}
		}

		if(sTipo.equals("TipoPrecio")) {
			//sDescripcion=this.getActualTipoPrecioForeignKeyDescripcion((Long)value);
			if(!pedido.getIsNew() && !pedido.getIsChanged() && !pedido.getIsDeleted()) {
				sDescripcion=pedido.gettipoprecio_descripcion();
			} else {
				//sDescripcion=this.getActualTipoPrecioForeignKeyDescripcion((Long)value);
				sDescripcion=pedido.gettipoprecio_descripcion();
			}
		}

		if(sTipo.equals("Formato")) {
			//sDescripcion=this.getActualFormatoForeignKeyDescripcion((Long)value);
			if(!pedido.getIsNew() && !pedido.getIsChanged() && !pedido.getIsDeleted()) {
				sDescripcion=pedido.getformato_descripcion();
			} else {
				//sDescripcion=this.getActualFormatoForeignKeyDescripcion((Long)value);
				sDescripcion=pedido.getformato_descripcion();
			}
		}

		if(sTipo.equals("Cliente")) {
			//sDescripcion=this.getActualClienteForeignKeyDescripcion((Long)value);
			if(!pedido.getIsNew() && !pedido.getIsChanged() && !pedido.getIsDeleted()) {
				sDescripcion=pedido.getcliente_descripcion();
			} else {
				//sDescripcion=this.getActualClienteForeignKeyDescripcion((Long)value);
				sDescripcion=pedido.getcliente_descripcion();
			}
		}

		if(sTipo.equals("SubCliente")) {
			//sDescripcion=this.getActualSubClienteForeignKeyDescripcion((Long)value);
			if(!pedido.getIsNew() && !pedido.getIsChanged() && !pedido.getIsDeleted()) {
				sDescripcion=pedido.getsubcliente_descripcion();
			} else {
				//sDescripcion=this.getActualSubClienteForeignKeyDescripcion((Long)value);
				sDescripcion=pedido.getsubcliente_descripcion();
			}
		}

		if(sTipo.equals("Vendedor")) {
			//sDescripcion=this.getActualVendedorForeignKeyDescripcion((Long)value);
			if(!pedido.getIsNew() && !pedido.getIsChanged() && !pedido.getIsDeleted()) {
				sDescripcion=pedido.getvendedor_descripcion();
			} else {
				//sDescripcion=this.getActualVendedorForeignKeyDescripcion((Long)value);
				sDescripcion=pedido.getvendedor_descripcion();
			}
		}

		if(sTipo.equals("Consultor")) {
			//sDescripcion=this.getActualConsultorForeignKeyDescripcion((Long)value);
			if(!pedido.getIsNew() && !pedido.getIsChanged() && !pedido.getIsDeleted()) {
				sDescripcion=pedido.getconsultor_descripcion();
			} else {
				//sDescripcion=this.getActualConsultorForeignKeyDescripcion((Long)value);
				sDescripcion=pedido.getconsultor_descripcion();
			}
		}

		if(sTipo.equals("Responsable")) {
			//sDescripcion=this.getActualResponsableForeignKeyDescripcion((Long)value);
			if(!pedido.getIsNew() && !pedido.getIsChanged() && !pedido.getIsDeleted()) {
				sDescripcion=pedido.getresponsable_descripcion();
			} else {
				//sDescripcion=this.getActualResponsableForeignKeyDescripcion((Long)value);
				sDescripcion=pedido.getresponsable_descripcion();
			}
		}

		if(sTipo.equals("EstadoPedido")) {
			//sDescripcion=this.getActualEstadoPedidoForeignKeyDescripcion((Long)value);
			if(!pedido.getIsNew() && !pedido.getIsChanged() && !pedido.getIsDeleted()) {
				sDescripcion=pedido.getestadopedido_descripcion();
			} else {
				//sDescripcion=this.getActualEstadoPedidoForeignKeyDescripcion((Long)value);
				sDescripcion=pedido.getestadopedido_descripcion();
			}
		}

		if(sTipo.equals("Transporte")) {
			//sDescripcion=this.getActualTransporteForeignKeyDescripcion((Long)value);
			if(!pedido.getIsNew() && !pedido.getIsChanged() && !pedido.getIsDeleted()) {
				sDescripcion=pedido.gettransporte_descripcion();
			} else {
				//sDescripcion=this.getActualTransporteForeignKeyDescripcion((Long)value);
				sDescripcion=pedido.gettransporte_descripcion();
			}
		}

		if(sTipo.equals("RutaTransporte")) {
			//sDescripcion=this.getActualRutaTransporteForeignKeyDescripcion((Long)value);
			if(!pedido.getIsNew() && !pedido.getIsChanged() && !pedido.getIsDeleted()) {
				sDescripcion=pedido.getrutatransporte_descripcion();
			} else {
				//sDescripcion=this.getActualRutaTransporteForeignKeyDescripcion((Long)value);
				sDescripcion=pedido.getrutatransporte_descripcion();
			}
		}

		if(sTipo.equals("TipoLlamada")) {
			//sDescripcion=this.getActualTipoLlamadaForeignKeyDescripcion((Long)value);
			if(!pedido.getIsNew() && !pedido.getIsChanged() && !pedido.getIsDeleted()) {
				sDescripcion=pedido.gettipollamada_descripcion();
			} else {
				//sDescripcion=this.getActualTipoLlamadaForeignKeyDescripcion((Long)value);
				sDescripcion=pedido.gettipollamada_descripcion();
			}
		}

		if(sTipo.equals("Transportista")) {
			//sDescripcion=this.getActualTransportistaForeignKeyDescripcion((Long)value);
			if(!pedido.getIsNew() && !pedido.getIsChanged() && !pedido.getIsDeleted()) {
				sDescripcion=pedido.gettransportista_descripcion();
			} else {
				//sDescripcion=this.getActualTransportistaForeignKeyDescripcion((Long)value);
				sDescripcion=pedido.gettransportista_descripcion();
			}
		}

		if(sTipo.equals("TipoCambio")) {
			//sDescripcion=this.getActualTipoCambioForeignKeyDescripcion((Long)value);
			if(!pedido.getIsNew() && !pedido.getIsChanged() && !pedido.getIsDeleted()) {
				sDescripcion=pedido.gettipocambio_descripcion();
			} else {
				//sDescripcion=this.getActualTipoCambioForeignKeyDescripcion((Long)value);
				sDescripcion=pedido.gettipocambio_descripcion();
			}
		}

		if(sTipo.equals("CentroCosto")) {
			//sDescripcion=this.getActualCentroCostoForeignKeyDescripcion((Long)value);
			if(!pedido.getIsNew() && !pedido.getIsChanged() && !pedido.getIsDeleted()) {
				sDescripcion=pedido.getcentrocosto_descripcion();
			} else {
				//sDescripcion=this.getActualCentroCostoForeignKeyDescripcion((Long)value);
				sDescripcion=pedido.getcentrocosto_descripcion();
			}
		}

		if(sTipo.equals("Zona")) {
			//sDescripcion=this.getActualZonaForeignKeyDescripcion((Long)value);
			if(!pedido.getIsNew() && !pedido.getIsChanged() && !pedido.getIsDeleted()) {
				sDescripcion=pedido.getzona_descripcion();
			} else {
				//sDescripcion=this.getActualZonaForeignKeyDescripcion((Long)value);
				sDescripcion=pedido.getzona_descripcion();
			}
		}

		
		return sDescripcion;
	}
	
	public Color getColorFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		Color color=Color.WHITE;
		
		Pedido pedidoRow=new Pedido();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			pedidoRow=(Pedido) pedidoLogic.getPedidos().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			pedidoRow=(Pedido) pedidos.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		if(sTipo.equals("EstadoPedido")) {
			color=FuncionesSwing.getColorGeneral(pedidoRow.getEstadoPedido().getid_color_general());
		}

		
		return color;
	}
	
	
	
	
	public void jButtonDetallePedidoActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Pedido pedido) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormPedido==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedido = (Pedido)this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.pedido = (Pedido)this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(pedido!=null) {
						this.pedido = pedido;
					} else {
						this.pedido = new Pedido();
					}
				}

				if(this.isTienePermisosDetallePedido && this.permiteMantenimiento(this.pedido)) {
					DetallePedidoBeanSwingJInternalFrame detallepedidoBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFramePopup=new DetallePedidoBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						detallepedidoBeanSwingJInternalFrame=this.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFramePopup;
					} else {
						detallepedidoBeanSwingJInternalFrame=this.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame;
					}

					List<Pedido> pedidos=new ArrayList<Pedido>();
					pedidos.add(this.pedido);
					if(!esRelacionado) {
						//detallepedidoBeanSwingJInternalFrame.detallepedidoSessionBean.setConGuardarRelaciones(false);
						//detallepedidoBeanSwingJInternalFrame.detallepedidoSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					detallepedidoBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormPedido.cargarDetallePedidoBeanSwingJInternalFrame(pedidos,this.pedido,detallepedidoBeanSwingJInternalFrame,/*conInicializar,*/detallepedidoBeanSwingJInternalFrame.detallepedidoSessionBean.getConGuardarRelaciones(),detallepedidoBeanSwingJInternalFrame.detallepedidoSessionBean.getEsGuardarRelacionado());
					detallepedidoBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						detallepedidoBeanSwingJInternalFrame.actualizarEstadoPanelsDetallePedido("no_relacionado");

						detallepedidoBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(DetallePedidoConstantesFunciones.ITAMANIOFILATABLA + (DetallePedidoConstantesFunciones.ITAMANIOFILATABLA/2));

						detallepedidoBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderPedido=(TitledBorder)this.jScrollPanelDatosPedido.getBorder();
						TitledBorder titledBorderDetallePedido=(TitledBorder)detallepedidoBeanSwingJInternalFrame.jScrollPanelDatosDetallePedido.getBorder();

						titledBorderDetallePedido.setTitle(titledBorderPedido.getTitle() + " -> Detalle Pedido");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,detallepedidoBeanSwingJInternalFrame);
						}

						detallepedidoBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(detallepedidoBeanSwingJInternalFrame);

						detallepedidoBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.pedidoSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Detalle Pedido",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.closeNewConnexionToDeep();
				}

			}
		}

	
	
	
	public void refrescarBindingTabla(Boolean blnSoloTabla) {
	}
	
	public void inicializarActualizarBindingBotonesManualPedido(Boolean esSetControles) {						
		if(esSetControles) {
			this.jButtonNuevoPedido.setVisible((this.isVisibilidadCeldaNuevoPedido && this.isPermisoNuevoPedido));			
			this.jButtonDuplicarPedido.setVisible((this.isVisibilidadCeldaDuplicarPedido && this.isPermisoDuplicarPedido));			
			this.jButtonCopiarPedido.setVisible((this.isVisibilidadCeldaCopiarPedido && this.isPermisoCopiarPedido));
			this.jButtonVerFormPedido.setVisible((this.isVisibilidadCeldaVerFormPedido && this.isPermisoVerFormPedido));
			
			this.jButtonAbrirOrderByPedido.setVisible((this.isVisibilidadCeldaOrdenPedido && this.isPermisoOrdenPedido));			
			
			this.jButtonNuevoRelacionesPedido.setVisible((this.isVisibilidadCeldaNuevoRelacionesPedido && this.isPermisoNuevoPedido));			
			this.jButtonNuevoGuardarCambiosPedido.setVisible((this.isVisibilidadCeldaNuevoPedido && this.isPermisoNuevoPedido && this.isPermisoGuardarCambiosPedido));
			
			if(this.jInternalFrameDetalleFormPedido!=null) {
			this.jInternalFrameDetalleFormPedido.jButtonModificarPedido.setVisible((this.isVisibilidadCeldaModificarPedido && this.isPermisoActualizarPedido));	
			this.jInternalFrameDetalleFormPedido.jButtonActualizarPedido.setVisible((this.isVisibilidadCeldaActualizarPedido && this.isPermisoActualizarPedido));	
			this.jInternalFrameDetalleFormPedido.jButtonEliminarPedido.setVisible((this.isVisibilidadCeldaEliminarPedido && this.isPermisoEliminarPedido));
			this.jInternalFrameDetalleFormPedido.jButtonCancelarPedido.setVisible(this.isVisibilidadCeldaCancelarPedido);							
			this.jInternalFrameDetalleFormPedido.jButtonGuardarCambiosPedido.setVisible((this.isVisibilidadCeldaGuardarPedido && this.isPermisoGuardarCambiosPedido));			
			
			}
						
			this.jButtonGuardarCambiosTablaPedido.setVisible((this.isVisibilidadCeldaGuardarCambiosPedido && this.isPermisoGuardarCambiosPedido));							
			
			//TOOLBAR
			
			this.jButtonNuevoToolBarPedido.setVisible((this.isVisibilidadCeldaNuevoPedido && this.isPermisoNuevoPedido));						
			this.jButtonDuplicarToolBarPedido.setVisible((this.isVisibilidadCeldaDuplicarPedido && this.isPermisoDuplicarPedido));						
			this.jButtonCopiarToolBarPedido.setVisible((this.isVisibilidadCeldaCopiarPedido && this.isPermisoCopiarPedido));			
			this.jButtonVerFormToolBarPedido.setVisible((this.isVisibilidadCeldaVerFormPedido && this.isPermisoVerFormPedido));			
			this.jButtonAbrirOrderByToolBarPedido.setVisible((this.isVisibilidadCeldaOrdenPedido && this.isPermisoOrdenPedido));
			this.jButtonNuevoRelacionesToolBarPedido.setVisible((this.isVisibilidadCeldaNuevoRelacionesPedido && this.isPermisoNuevoPedido));			
			this.jButtonNuevoGuardarCambiosToolBarPedido.setVisible((this.isVisibilidadCeldaNuevoPedido && this.isPermisoNuevoPedido && this.isPermisoGuardarCambiosPedido));			
			
			if(this.jInternalFrameDetalleFormPedido!=null) {
			this.jInternalFrameDetalleFormPedido.jButtonModificarToolBarPedido.setVisible((this.isVisibilidadCeldaModificarPedido && this.isPermisoActualizarPedido));	
			this.jInternalFrameDetalleFormPedido.jButtonActualizarToolBarPedido.setVisible((this.isVisibilidadCeldaActualizarPedido  && this.isPermisoActualizarPedido));	
			this.jInternalFrameDetalleFormPedido.jButtonEliminarToolBarPedido.setVisible((this.isVisibilidadCeldaEliminarPedido && this.isPermisoEliminarPedido));
			this.jInternalFrameDetalleFormPedido.jButtonCancelarToolBarPedido.setVisible(this.isVisibilidadCeldaCancelarPedido);				
			this.jInternalFrameDetalleFormPedido.jButtonGuardarCambiosToolBarPedido.setVisible((this.isVisibilidadCeldaGuardarPedido && this.isPermisoGuardarCambiosPedido));									
			}
			
			this.jButtonGuardarCambiosTablaToolBarPedido.setVisible((this.isVisibilidadCeldaGuardarCambiosPedido && this.isPermisoGuardarCambiosPedido));									
			
			//TOOLBAR
			
			//MENUS
			
			this.jMenuItemNuevoPedido.setVisible((this.isVisibilidadCeldaNuevoPedido && this.isPermisoNuevoPedido));			
			this.jMenuItemDuplicarPedido.setVisible((this.isVisibilidadCeldaDuplicarPedido && this.isPermisoDuplicarPedido));			
			this.jMenuItemCopiarPedido.setVisible((this.isVisibilidadCeldaCopiarPedido && this.isPermisoCopiarPedido));			
			this.jMenuItemVerFormPedido.setVisible((this.isVisibilidadCeldaVerFormPedido && this.isPermisoVerFormPedido));			
			this.jMenuItemAbrirOrderByPedido.setVisible((this.isVisibilidadCeldaOrdenPedido && this.isPermisoOrdenPedido));			
			//this.jMenuItemMostrarOcultarPedido.setVisible((this.isVisibilidadCeldaOrdenPedido && this.isPermisoOrdenPedido));
			this.jMenuItemDetalleAbrirOrderByPedido.setVisible((this.isVisibilidadCeldaOrdenPedido && this.isPermisoOrdenPedido));			
			//this.jMenuItemDetalleMostrarOcultarPedido.setVisible((this.isVisibilidadCeldaOrdenPedido && this.isPermisoOrdenPedido));			
			this.jMenuItemNuevoRelacionesPedido.setVisible((this.isVisibilidadCeldaNuevoRelacionesPedido && this.isPermisoNuevoPedido));			
			this.jMenuItemNuevoGuardarCambiosPedido.setVisible((this.isVisibilidadCeldaNuevoPedido && this.isPermisoNuevoPedido && this.isPermisoGuardarCambiosPedido));									
			
			if(this.jInternalFrameDetalleFormPedido!=null) {
			this.jInternalFrameDetalleFormPedido.jMenuItemModificarPedido.setVisible((this.isVisibilidadCeldaModificarPedido && this.isPermisoActualizarPedido));	
			this.jInternalFrameDetalleFormPedido.jMenuItemActualizarPedido.setVisible((this.isVisibilidadCeldaActualizarPedido && this.isPermisoActualizarPedido));	
			this.jInternalFrameDetalleFormPedido.jMenuItemEliminarPedido.setVisible((this.isVisibilidadCeldaEliminarPedido && this.isPermisoEliminarPedido));
			this.jInternalFrameDetalleFormPedido.jMenuItemCancelarPedido.setVisible(this.isVisibilidadCeldaCancelarPedido);				
			}
			
			this.jMenuItemGuardarCambiosPedido.setVisible((this.isVisibilidadCeldaGuardarPedido && this.isPermisoGuardarCambiosPedido));						
			this.jMenuItemGuardarCambiosTablaPedido.setVisible((this.isVisibilidadCeldaGuardarCambiosPedido && this.isPermisoGuardarCambiosPedido));						
			
			//MENUS
			
		} else {
			this.isVisibilidadCeldaNuevoPedido=this.jButtonNuevoPedido.isVisible();
			this.isVisibilidadCeldaDuplicarPedido=this.jButtonDuplicarPedido.isVisible();
			this.isVisibilidadCeldaCopiarPedido=this.jButtonCopiarPedido.isVisible();
			this.isVisibilidadCeldaVerFormPedido=this.jButtonVerFormPedido.isVisible();
			
			this.isVisibilidadCeldaOrdenPedido=this.jButtonAbrirOrderByPedido.isVisible();			
			
			this.isVisibilidadCeldaNuevoRelacionesPedido=this.jButtonNuevoRelacionesPedido.isVisible();
			this.isVisibilidadCeldaModificarPedido=this.jButtonModificarPedido.isVisible();
			
			if(this.jInternalFrameDetalleFormPedido!=null) {
			this.isVisibilidadCeldaActualizarPedido=this.jInternalFrameDetalleFormPedido.jButtonActualizarPedido.isVisible();
			this.isVisibilidadCeldaEliminarPedido=this.jInternalFrameDetalleFormPedido.jButtonEliminarPedido.isVisible();
			this.isVisibilidadCeldaCancelarPedido=this.jInternalFrameDetalleFormPedido.jButtonCancelarPedido.isVisible();
			this.isVisibilidadCeldaGuardarPedido=this.jInternalFrameDetalleFormPedido.jButtonGuardarCambiosPedido.isVisible();			
			}
			
			this.isVisibilidadCeldaGuardarCambiosPedido=this.jButtonGuardarCambiosTablaPedido.isVisible();
			
			//TOOLBAR
			
			this.isVisibilidadCeldaNuevoPedido=this.jButtonNuevoToolBarPedido.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesPedido=this.jButtonNuevoRelacionesToolBarPedido.isVisible();
			
			if(this.jInternalFrameDetalleFormPedido!=null) {
			this.isVisibilidadCeldaModificarPedido=this.jInternalFrameDetalleFormPedido.jButtonModificarToolBarPedido.isVisible();
			this.isVisibilidadCeldaActualizarPedido=this.jInternalFrameDetalleFormPedido.jButtonActualizarToolBarPedido.isVisible();
			this.isVisibilidadCeldaEliminarPedido=this.jInternalFrameDetalleFormPedido.jButtonEliminarToolBarPedido.isVisible();
			this.isVisibilidadCeldaCancelarPedido=this.jInternalFrameDetalleFormPedido.jButtonCancelarToolBarPedido.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarPedido=this.jButtonGuardarCambiosToolBarPedido.isVisible();
			this.isVisibilidadCeldaGuardarCambiosPedido=this.jButtonGuardarCambiosTablaToolBarPedido.isVisible();						
			
			//TOOLBAR
			
			//MENUS
			
			this.isVisibilidadCeldaNuevoPedido=this.jMenuItemNuevoPedido.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesPedido=this.jMenuItemNuevoRelacionesPedido.isVisible();
			
			if(this.jInternalFrameDetalleFormPedido!=null) {
			this.isVisibilidadCeldaModificarPedido=this.jInternalFrameDetalleFormPedido.jMenuItemModificarPedido.isVisible();
			this.isVisibilidadCeldaActualizarPedido=this.jInternalFrameDetalleFormPedido.jMenuItemActualizarPedido.isVisible();
			this.isVisibilidadCeldaEliminarPedido=this.jInternalFrameDetalleFormPedido.jMenuItemEliminarPedido.isVisible();
			this.isVisibilidadCeldaCancelarPedido=this.jInternalFrameDetalleFormPedido.jMenuItemCancelarPedido.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarPedido=this.jMenuItemGuardarCambiosPedido.isVisible();
			this.isVisibilidadCeldaGuardarCambiosPedido=this.jMenuItemGuardarCambiosTablaPedido.isVisible();						
			
			//MENUS
		}
	}
	
	public void inicializarActualizarBindingBotonesPedido(Boolean esInicializar) {
		if(PedidoJInternalFrame.ISBINDING_MANUAL) {			
			if(this.pedidoSessionBean.getConGuardarRelaciones()) {
				//if(this.pedidoSessionBean.getEsGuardarRelacionado()) {
				
				this.actualizarEstadoCeldasBotonesConGuardarRelacionesPedido();
			}
			
			this.inicializarActualizarBindingBotonesManualPedido(true);
			
		} else {	
		}
	}		
	
	public void inicializarActualizarBindingBotonesPermisosManualPedido() {
		this.jButtonNuevoPedido.setVisible(this.isPermisoNuevoPedido);			
		this.jButtonDuplicarPedido.setVisible(this.isPermisoDuplicarPedido);			
		this.jButtonCopiarPedido.setVisible(this.isPermisoCopiarPedido);			
		this.jButtonVerFormPedido.setVisible(this.isPermisoVerFormPedido);			
		
		this.jButtonAbrirOrderByPedido.setVisible(this.isPermisoOrdenPedido);					
		
		this.jButtonNuevoRelacionesPedido.setVisible(this.isPermisoNuevoPedido);			
		
		if(this.jInternalFrameDetalleFormPedido!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPedido.jButtonModificarPedido.setVisible(this.isPermisoActualizarPedido);	
			this.jInternalFrameDetalleFormPedido.jButtonActualizarPedido.setVisible(this.isPermisoActualizarPedido);	
			this.jInternalFrameDetalleFormPedido.jButtonEliminarPedido.setVisible(this.isPermisoEliminarPedido);
			this.jInternalFrameDetalleFormPedido.jButtonCancelarPedido.setVisible(this.isVisibilidadCeldaCancelarPedido);						
			this.jInternalFrameDetalleFormPedido.jButtonGuardarCambiosPedido.setVisible(this.isPermisoGuardarCambiosPedido);							
		}
		
		this.jButtonGuardarCambiosTablaPedido.setVisible(this.isPermisoActualizarPedido);
	}
	
	public void inicializarActualizarBindingBotonesPermisosManualFormDetallePedido() {
		this.jInternalFrameDetalleFormPedido.jButtonModificarPedido.setVisible(this.isPermisoActualizarPedido);	
		this.jInternalFrameDetalleFormPedido.jButtonActualizarPedido.setVisible(this.isPermisoActualizarPedido);	
		this.jInternalFrameDetalleFormPedido.jButtonEliminarPedido.setVisible(this.isPermisoEliminarPedido);
		this.jInternalFrameDetalleFormPedido.jButtonCancelarPedido.setVisible(this.isVisibilidadCeldaCancelarPedido);							
		this.jInternalFrameDetalleFormPedido.jButtonGuardarCambiosPedido.setVisible((this.isVisibilidadCeldaGuardarPedido && this.isPermisoGuardarCambiosPedido));			
	}
	
	public void inicializarActualizarBindingBotonesPermisosPedido() {
		if(PedidoJInternalFrame.ISBINDING_MANUAL) {
			this.inicializarActualizarBindingBotonesPermisosManualPedido();
		} else {
		}
	}
	
	
	public void refrescarBindingBotonesPedido() {
	}
	
	public void jTableDatosPedidoListSelectionListener(javax.swing.event.ListSelectionEvent evt) throws Exception { 
		try {
			this.seleccionarPedido(null,evt,-1);
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonidPedidoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedido.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedido(this.getpedido(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedido==null) {
						this.pedido = new Pedido();
					}

					this.setVariablesFormularioToObjetoActualPedido(this.pedido,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
				}

				if(this.pedido.getId()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id = "+this.pedido.getId().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedido(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_empresaPedidoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoempresa=true;

			idTienePermisoempresa=this.tienePermisosUsuarioEnPaginaWebPedido(EmpresaConstantesFunciones.CLASSNAME);

			if(idTienePermisoempresa) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedido.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPedido.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPedido.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPedido(this.getpedido(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);

				this.empresaBeanSwingJInternalFrame=new EmpresaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.empresaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.empresaBeanSwingJInternalFrame.getEmpresaLogic().setConnexion(this.pedidoLogic.getConnexion());

				if(this.pedido.getid_empresa()!=null) {
					this.empresaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.empresaBeanSwingJInternalFrame.setIdActual(this.pedido.getid_empresa());
					this.empresaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpresa();
				}

				JInternalFrameBase jinternalFrame =this.empresaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPedido=(TitledBorder)this.jScrollPanelDatosPedido.getBorder();
				TitledBorder titledBorderempresa=(TitledBorder)this.empresaBeanSwingJInternalFrame.jScrollPanelDatosEmpresa.getBorder();

				titledBorderempresa.setTitle(titledBorderPedido.getTitle() + " -> Empresa");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_empresaPedidoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedido.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedido(this.getpedido(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedido==null) {
						this.pedido = new Pedido();
					}

					this.setVariablesFormularioToObjetoActualPedido(this.pedido,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
				}

				if(this.pedido.getid_empresa()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_empresa = "+this.pedido.getid_empresa().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedido(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_sucursalPedidoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisosucursal=true;

			idTienePermisosucursal=this.tienePermisosUsuarioEnPaginaWebPedido(SucursalConstantesFunciones.CLASSNAME);

			if(idTienePermisosucursal) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedido.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPedido.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPedido.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPedido(this.getpedido(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);

				this.sucursalBeanSwingJInternalFrame=new SucursalBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.sucursalBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.sucursalBeanSwingJInternalFrame.getSucursalLogic().setConnexion(this.pedidoLogic.getConnexion());

				if(this.pedido.getid_sucursal()!=null) {
					this.sucursalBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.sucursalBeanSwingJInternalFrame.setIdActual(this.pedido.getid_sucursal());
					this.sucursalBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.inicializarActualizarBindingTablaSucursal();
				}

				JInternalFrameBase jinternalFrame =this.sucursalBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPedido=(TitledBorder)this.jScrollPanelDatosPedido.getBorder();
				TitledBorder titledBordersucursal=(TitledBorder)this.sucursalBeanSwingJInternalFrame.jScrollPanelDatosSucursal.getBorder();

				titledBordersucursal.setTitle(titledBorderPedido.getTitle() + " -> Sucursal");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_sucursalPedidoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedido.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedido(this.getpedido(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedido==null) {
						this.pedido = new Pedido();
					}

					this.setVariablesFormularioToObjetoActualPedido(this.pedido,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
				}

				if(this.pedido.getid_sucursal()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_sucursal = "+this.pedido.getid_sucursal().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedido(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_ejercicioPedidoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoejercicio=true;

			idTienePermisoejercicio=this.tienePermisosUsuarioEnPaginaWebPedido(EjercicioConstantesFunciones.CLASSNAME);

			if(idTienePermisoejercicio) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedido.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPedido.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPedido.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPedido(this.getpedido(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);

				this.ejercicioBeanSwingJInternalFrame=new EjercicioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.ejercicioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.ejercicioBeanSwingJInternalFrame.getEjercicioLogic().setConnexion(this.pedidoLogic.getConnexion());

				if(this.pedido.getid_ejercicio()!=null) {
					this.ejercicioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.ejercicioBeanSwingJInternalFrame.setIdActual(this.pedido.getid_ejercicio());
					this.ejercicioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.ejercicioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.ejercicioBeanSwingJInternalFrame.inicializarActualizarBindingTablaEjercicio();
				}

				JInternalFrameBase jinternalFrame =this.ejercicioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPedido=(TitledBorder)this.jScrollPanelDatosPedido.getBorder();
				TitledBorder titledBorderejercicio=(TitledBorder)this.ejercicioBeanSwingJInternalFrame.jScrollPanelDatosEjercicio.getBorder();

				titledBorderejercicio.setTitle(titledBorderPedido.getTitle() + " -> Ejercicio");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_ejercicioPedidoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedido.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedido(this.getpedido(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedido==null) {
						this.pedido = new Pedido();
					}

					this.setVariablesFormularioToObjetoActualPedido(this.pedido,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
				}

				if(this.pedido.getid_ejercicio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_ejercicio = "+this.pedido.getid_ejercicio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedido(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_periodoPedidoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoperiodo=true;

			idTienePermisoperiodo=this.tienePermisosUsuarioEnPaginaWebPedido(PeriodoConstantesFunciones.CLASSNAME);

			if(idTienePermisoperiodo) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedido.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPedido.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPedido.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPedido(this.getpedido(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);

				this.periodoBeanSwingJInternalFrame=new PeriodoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.periodoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.periodoBeanSwingJInternalFrame.getPeriodoLogic().setConnexion(this.pedidoLogic.getConnexion());

				if(this.pedido.getid_periodo()!=null) {
					this.periodoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.periodoBeanSwingJInternalFrame.setIdActual(this.pedido.getid_periodo());
					this.periodoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.periodoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.periodoBeanSwingJInternalFrame.inicializarActualizarBindingTablaPeriodo();
				}

				JInternalFrameBase jinternalFrame =this.periodoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPedido=(TitledBorder)this.jScrollPanelDatosPedido.getBorder();
				TitledBorder titledBorderperiodo=(TitledBorder)this.periodoBeanSwingJInternalFrame.jScrollPanelDatosPeriodo.getBorder();

				titledBorderperiodo.setTitle(titledBorderPedido.getTitle() + " -> Periodo");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_periodoPedidoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedido.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedido(this.getpedido(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedido==null) {
						this.pedido = new Pedido();
					}

					this.setVariablesFormularioToObjetoActualPedido(this.pedido,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
				}

				if(this.pedido.getid_periodo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_periodo = "+this.pedido.getid_periodo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedido(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_anioPedidoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoanio=true;

			idTienePermisoanio=this.tienePermisosUsuarioEnPaginaWebPedido(AnioConstantesFunciones.CLASSNAME);

			if(idTienePermisoanio) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedido.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPedido.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPedido.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPedido(this.getpedido(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);

				this.anioBeanSwingJInternalFrame=new AnioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.anioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.anioBeanSwingJInternalFrame.getAnioLogic().setConnexion(this.pedidoLogic.getConnexion());

				if(this.pedido.getid_anio()!=null) {
					this.anioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.anioBeanSwingJInternalFrame.setIdActual(this.pedido.getid_anio());
					this.anioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.anioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.anioBeanSwingJInternalFrame.inicializarActualizarBindingTablaAnio();
				}

				JInternalFrameBase jinternalFrame =this.anioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPedido=(TitledBorder)this.jScrollPanelDatosPedido.getBorder();
				TitledBorder titledBorderanio=(TitledBorder)this.anioBeanSwingJInternalFrame.jScrollPanelDatosAnio.getBorder();

				titledBorderanio.setTitle(titledBorderPedido.getTitle() + " -> Anio");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_anioPedidoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedido.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedido(this.getpedido(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedido==null) {
						this.pedido = new Pedido();
					}

					this.setVariablesFormularioToObjetoActualPedido(this.pedido,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
				}

				if(this.pedido.getid_anio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_anio = "+this.pedido.getid_anio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedido(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_mesPedidoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisomes=true;

			idTienePermisomes=this.tienePermisosUsuarioEnPaginaWebPedido(MesConstantesFunciones.CLASSNAME);

			if(idTienePermisomes) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedido.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPedido.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPedido.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPedido(this.getpedido(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);

				this.mesBeanSwingJInternalFrame=new MesBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.mesBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.mesBeanSwingJInternalFrame.getMesLogic().setConnexion(this.pedidoLogic.getConnexion());

				if(this.pedido.getid_mes()!=null) {
					this.mesBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.mesBeanSwingJInternalFrame.setIdActual(this.pedido.getid_mes());
					this.mesBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.mesBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.mesBeanSwingJInternalFrame.inicializarActualizarBindingTablaMes();
				}

				JInternalFrameBase jinternalFrame =this.mesBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPedido=(TitledBorder)this.jScrollPanelDatosPedido.getBorder();
				TitledBorder titledBordermes=(TitledBorder)this.mesBeanSwingJInternalFrame.jScrollPanelDatosMes.getBorder();

				titledBordermes.setTitle(titledBorderPedido.getTitle() + " -> Mes");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_mesPedidoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedido.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedido(this.getpedido(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedido==null) {
						this.pedido = new Pedido();
					}

					this.setVariablesFormularioToObjetoActualPedido(this.pedido,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
				}

				if(this.pedido.getid_mes()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_mes = "+this.pedido.getid_mes().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedido(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_usuarioPedidoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisousuario=true;

			idTienePermisousuario=this.tienePermisosUsuarioEnPaginaWebPedido(UsuarioConstantesFunciones.CLASSNAME);

			if(idTienePermisousuario) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedido.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPedido.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPedido.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPedido(this.getpedido(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);

				this.usuarioBeanSwingJInternalFrame=new UsuarioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.usuarioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.usuarioBeanSwingJInternalFrame.getUsuarioLogic().setConnexion(this.pedidoLogic.getConnexion());

				if(this.pedido.getid_usuario()!=null) {
					this.usuarioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.usuarioBeanSwingJInternalFrame.setIdActual(this.pedido.getid_usuario());
					this.usuarioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.usuarioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.usuarioBeanSwingJInternalFrame.inicializarActualizarBindingTablaUsuario();
				}

				JInternalFrameBase jinternalFrame =this.usuarioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPedido=(TitledBorder)this.jScrollPanelDatosPedido.getBorder();
				TitledBorder titledBorderusuario=(TitledBorder)this.usuarioBeanSwingJInternalFrame.jScrollPanelDatosUsuario.getBorder();

				titledBorderusuario.setTitle(titledBorderPedido.getTitle() + " -> Usuario");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_usuarioPedidoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedido.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedido(this.getpedido(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedido==null) {
						this.pedido = new Pedido();
					}

					this.setVariablesFormularioToObjetoActualPedido(this.pedido,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
				}

				if(this.pedido.getid_usuario()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_usuario = "+this.pedido.getid_usuario().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedido(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnumeroPedidoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedido.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedido(this.getpedido(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedido==null) {
						this.pedido = new Pedido();
					}

					this.setVariablesFormularioToObjetoActualPedido(this.pedido,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
				}

				if(this.pedido.getnumero()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where numero like '%"+this.pedido.getnumero()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedido(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonpre_impresoPedidoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedido.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedido(this.getpedido(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedido==null) {
						this.pedido = new Pedido();
					}

					this.setVariablesFormularioToObjetoActualPedido(this.pedido,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
				}

				if(this.pedido.getpre_impreso()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where pre_impreso like '%"+this.pedido.getpre_impreso()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedido(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfecha_emisionPedidoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedido.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedido(this.getpedido(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedido==null) {
						this.pedido = new Pedido();
					}

					this.setVariablesFormularioToObjetoActualPedido(this.pedido,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
				}

				if(this.pedido.getfecha_emision()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha_emision = '"+Funciones2.getStringPostgresDate(this.pedido.getfecha_emision())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedido(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfecha_entregaPedidoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedido.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedido(this.getpedido(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedido==null) {
						this.pedido = new Pedido();
					}

					this.setVariablesFormularioToObjetoActualPedido(this.pedido,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
				}

				if(this.pedido.getfecha_entrega()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha_entrega = '"+Funciones2.getStringPostgresDate(this.pedido.getfecha_entrega())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedido(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_monedaPedidoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisomoneda=true;

			idTienePermisomoneda=this.tienePermisosUsuarioEnPaginaWebPedido(MonedaConstantesFunciones.CLASSNAME);

			if(idTienePermisomoneda) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedido.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPedido.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPedido.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPedido(this.getpedido(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);

				this.monedaBeanSwingJInternalFrame=new MonedaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.monedaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.monedaBeanSwingJInternalFrame.getMonedaLogic().setConnexion(this.pedidoLogic.getConnexion());

				if(this.pedido.getid_moneda()!=null) {
					this.monedaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.monedaBeanSwingJInternalFrame.setIdActual(this.pedido.getid_moneda());
					this.monedaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.monedaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.monedaBeanSwingJInternalFrame.inicializarActualizarBindingTablaMoneda();
				}

				JInternalFrameBase jinternalFrame =this.monedaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPedido=(TitledBorder)this.jScrollPanelDatosPedido.getBorder();
				TitledBorder titledBordermoneda=(TitledBorder)this.monedaBeanSwingJInternalFrame.jScrollPanelDatosMoneda.getBorder();

				titledBordermoneda.setTitle(titledBorderPedido.getTitle() + " -> Moneda");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_monedaPedidoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedido.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedido(this.getpedido(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedido==null) {
						this.pedido = new Pedido();
					}

					this.setVariablesFormularioToObjetoActualPedido(this.pedido,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
				}

				if(this.pedido.getid_moneda()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_moneda = "+this.pedido.getid_moneda().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedido(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncotizacionPedidoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedido.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedido(this.getpedido(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedido==null) {
						this.pedido = new Pedido();
					}

					this.setVariablesFormularioToObjetoActualPedido(this.pedido,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
				}

				if(this.pedido.getcotizacion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where cotizacion = "+this.pedido.getcotizacion().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedido(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_empleadoPedidoActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.empleadoBeanSwingJInternalFrame=new EmpleadoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.empleadoBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.empleadoBeanSwingJInternalFrame.sTipoBusqueda="Empleado";

			if(!this.sFinalQueryGeneral_empleado.equals("")) {
				this.empleadoBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_empleado);
				this.empleadoBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.empleadoBeanSwingJInternalFrame.procesarBusqueda(this.empleadoBeanSwingJInternalFrame.sAccionBusqueda);
				this.empleadoBeanSwingJInternalFrame.inicializarActualizarBindingEmpleado(false);
			}

			if(!this.sFinalQueryComboEmpleado.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.empleadoBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderPedido=null;
			TitledBorder titledBorderempleado=null;

			if(!this.jScrollPanelDatosPedido.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderPedido=(TitledBorder)this.jScrollPanelDatosPedido.getBorder();
				titledBorderempleado=(TitledBorder)this.empleadoBeanSwingJInternalFrame.jScrollPanelDatosEmpleado.getBorder();

				titledBorderempleado.setTitle(titledBorderPedido.getTitle() + " -> Empleado");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_empleadoPedidoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoempleado=true;

			idTienePermisoempleado=this.tienePermisosUsuarioEnPaginaWebPedido(EmpleadoConstantesFunciones.CLASSNAME);

			if(idTienePermisoempleado) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedido.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPedido.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPedido.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPedido(this.getpedido(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);

				this.empleadoBeanSwingJInternalFrame=new EmpleadoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.empleadoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.empleadoBeanSwingJInternalFrame.getEmpleadoLogic().setConnexion(this.pedidoLogic.getConnexion());

				if(this.pedido.getid_empleado()!=null) {
					this.empleadoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.empleadoBeanSwingJInternalFrame.setIdActual(this.pedido.getid_empleado());
					this.empleadoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.empleadoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.empleadoBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpleado();
				}

				JInternalFrameBase jinternalFrame =this.empleadoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPedido=(TitledBorder)this.jScrollPanelDatosPedido.getBorder();
				TitledBorder titledBorderempleado=(TitledBorder)this.empleadoBeanSwingJInternalFrame.jScrollPanelDatosEmpleado.getBorder();

				titledBorderempleado.setTitle(titledBorderPedido.getTitle() + " -> Empleado");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_empleadoPedidoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedido.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedido(this.getpedido(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedido==null) {
						this.pedido = new Pedido();
					}

					this.setVariablesFormularioToObjetoActualPedido(this.pedido,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
				}

				if(this.pedido.getid_empleado()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_empleado = "+this.pedido.getid_empleado().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedido(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_precioPedidoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipoprecio=true;

			idTienePermisotipoprecio=this.tienePermisosUsuarioEnPaginaWebPedido(TipoPrecioConstantesFunciones.CLASSNAME);

			if(idTienePermisotipoprecio) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedido.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPedido.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPedido.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPedido(this.getpedido(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);

				this.tipoprecioBeanSwingJInternalFrame=new TipoPrecioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipoprecioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipoprecioBeanSwingJInternalFrame.getTipoPrecioLogic().setConnexion(this.pedidoLogic.getConnexion());

				if(this.pedido.getid_tipo_precio()!=null) {
					this.tipoprecioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipoprecioBeanSwingJInternalFrame.setIdActual(this.pedido.getid_tipo_precio());
					this.tipoprecioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipoprecioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipoprecioBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoPrecio();
				}

				JInternalFrameBase jinternalFrame =this.tipoprecioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPedido=(TitledBorder)this.jScrollPanelDatosPedido.getBorder();
				TitledBorder titledBordertipoprecio=(TitledBorder)this.tipoprecioBeanSwingJInternalFrame.jScrollPanelDatosTipoPrecio.getBorder();

				titledBordertipoprecio.setTitle(titledBorderPedido.getTitle() + " -> Tipo Precio");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_precioPedidoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedido.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedido(this.getpedido(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedido==null) {
						this.pedido = new Pedido();
					}

					this.setVariablesFormularioToObjetoActualPedido(this.pedido,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
				}

				if(this.pedido.getid_tipo_precio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_precio = "+this.pedido.getid_tipo_precio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedido(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_formatoPedidoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoformato=true;

			idTienePermisoformato=this.tienePermisosUsuarioEnPaginaWebPedido(FormatoConstantesFunciones.CLASSNAME);

			if(idTienePermisoformato) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedido.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPedido.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPedido.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPedido(this.getpedido(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);

				this.formatoBeanSwingJInternalFrame=new FormatoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.formatoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.formatoBeanSwingJInternalFrame.getFormatoLogic().setConnexion(this.pedidoLogic.getConnexion());

				if(this.pedido.getid_formato()!=null) {
					this.formatoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.formatoBeanSwingJInternalFrame.setIdActual(this.pedido.getid_formato());
					this.formatoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.formatoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.formatoBeanSwingJInternalFrame.inicializarActualizarBindingTablaFormato();
				}

				JInternalFrameBase jinternalFrame =this.formatoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPedido=(TitledBorder)this.jScrollPanelDatosPedido.getBorder();
				TitledBorder titledBorderformato=(TitledBorder)this.formatoBeanSwingJInternalFrame.jScrollPanelDatosFormato.getBorder();

				titledBorderformato.setTitle(titledBorderPedido.getTitle() + " -> Formato");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_formatoPedidoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedido.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedido(this.getpedido(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedido==null) {
						this.pedido = new Pedido();
					}

					this.setVariablesFormularioToObjetoActualPedido(this.pedido,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
				}

				if(this.pedido.getid_formato()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_formato = "+this.pedido.getid_formato().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedido(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtondireccionPedidoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedido.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedido(this.getpedido(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedido==null) {
						this.pedido = new Pedido();
					}

					this.setVariablesFormularioToObjetoActualPedido(this.pedido,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
				}

				if(this.pedido.getdireccion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where direccion like '%"+this.pedido.getdireccion()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedido(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_clientePedidoActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.clienteBeanSwingJInternalFrame=new ClienteBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.clienteBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.clienteBeanSwingJInternalFrame.sTipoBusqueda="Cliente";

			if(!this.sFinalQueryGeneral_cliente.equals("")) {
				this.clienteBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_cliente);
				this.clienteBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.clienteBeanSwingJInternalFrame.procesarBusqueda(this.clienteBeanSwingJInternalFrame.sAccionBusqueda);
				this.clienteBeanSwingJInternalFrame.inicializarActualizarBindingCliente(false);
			}

			if(!this.sFinalQueryComboCliente.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.clienteBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderPedido=null;
			TitledBorder titledBordercliente=null;

			if(!this.jScrollPanelDatosPedido.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderPedido=(TitledBorder)this.jScrollPanelDatosPedido.getBorder();
				titledBordercliente=(TitledBorder)this.clienteBeanSwingJInternalFrame.jScrollPanelDatosCliente.getBorder();

				titledBordercliente.setTitle(titledBorderPedido.getTitle() + " -> Cliente");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_clientePedidoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocliente=true;

			idTienePermisocliente=this.tienePermisosUsuarioEnPaginaWebPedido(ClienteConstantesFunciones.CLASSNAME);

			if(idTienePermisocliente) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedido.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPedido.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPedido.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPedido(this.getpedido(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);

				this.clienteBeanSwingJInternalFrame=new ClienteBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.clienteBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.clienteBeanSwingJInternalFrame.getClienteLogic().setConnexion(this.pedidoLogic.getConnexion());

				if(this.pedido.getid_cliente()!=null) {
					this.clienteBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.clienteBeanSwingJInternalFrame.setIdActual(this.pedido.getid_cliente());
					this.clienteBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.clienteBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.clienteBeanSwingJInternalFrame.inicializarActualizarBindingTablaCliente();
				}

				JInternalFrameBase jinternalFrame =this.clienteBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPedido=(TitledBorder)this.jScrollPanelDatosPedido.getBorder();
				TitledBorder titledBordercliente=(TitledBorder)this.clienteBeanSwingJInternalFrame.jScrollPanelDatosCliente.getBorder();

				titledBordercliente.setTitle(titledBorderPedido.getTitle() + " -> Cliente");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_clientePedidoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedido.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedido(this.getpedido(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedido==null) {
						this.pedido = new Pedido();
					}

					this.setVariablesFormularioToObjetoActualPedido(this.pedido,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
				}

				if(this.pedido.getid_cliente()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cliente = "+this.pedido.getid_cliente().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedido(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtontelefonoPedidoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedido.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedido(this.getpedido(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedido==null) {
						this.pedido = new Pedido();
					}

					this.setVariablesFormularioToObjetoActualPedido(this.pedido,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
				}

				if(this.pedido.gettelefono()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where telefono like '%"+this.pedido.gettelefono()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedido(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonrucPedidoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedido.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedido(this.getpedido(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedido==null) {
						this.pedido = new Pedido();
					}

					this.setVariablesFormularioToObjetoActualPedido(this.pedido,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
				}

				if(this.pedido.getruc()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where ruc like '%"+this.pedido.getruc()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedido(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_sub_clientePedidoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisosubcliente=true;

			idTienePermisosubcliente=this.tienePermisosUsuarioEnPaginaWebPedido(SubClienteConstantesFunciones.CLASSNAME);

			if(idTienePermisosubcliente) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedido.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPedido.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPedido.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPedido(this.getpedido(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);

				this.subclienteBeanSwingJInternalFrame=new SubClienteBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.subclienteBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.subclienteBeanSwingJInternalFrame.getSubClienteLogic().setConnexion(this.pedidoLogic.getConnexion());

				if(this.pedido.getid_sub_cliente()!=null) {
					this.subclienteBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.subclienteBeanSwingJInternalFrame.setIdActual(this.pedido.getid_sub_cliente());
					this.subclienteBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.subclienteBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.subclienteBeanSwingJInternalFrame.inicializarActualizarBindingTablaSubCliente();
				}

				JInternalFrameBase jinternalFrame =this.subclienteBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPedido=(TitledBorder)this.jScrollPanelDatosPedido.getBorder();
				TitledBorder titledBordersubcliente=(TitledBorder)this.subclienteBeanSwingJInternalFrame.jScrollPanelDatosSubCliente.getBorder();

				titledBordersubcliente.setTitle(titledBorderPedido.getTitle() + " -> Sub Cliente");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_sub_clientePedidoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedido.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedido(this.getpedido(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedido==null) {
						this.pedido = new Pedido();
					}

					this.setVariablesFormularioToObjetoActualPedido(this.pedido,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
				}

				if(this.pedido.getid_sub_cliente()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_sub_cliente = "+this.pedido.getid_sub_cliente().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedido(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_vendedorPedidoActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.vendedorBeanSwingJInternalFrame=new VendedorBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.vendedorBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.vendedorBeanSwingJInternalFrame.sTipoBusqueda="Vendedor";

			if(!this.sFinalQueryGeneral_vendedor.equals("")) {
				this.vendedorBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_vendedor);
				this.vendedorBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.vendedorBeanSwingJInternalFrame.procesarBusqueda(this.vendedorBeanSwingJInternalFrame.sAccionBusqueda);
				this.vendedorBeanSwingJInternalFrame.inicializarActualizarBindingVendedor(false);
			}

			if(!this.sFinalQueryComboVendedor.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.vendedorBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderPedido=null;
			TitledBorder titledBordervendedor=null;

			if(!this.jScrollPanelDatosPedido.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderPedido=(TitledBorder)this.jScrollPanelDatosPedido.getBorder();
				titledBordervendedor=(TitledBorder)this.vendedorBeanSwingJInternalFrame.jScrollPanelDatosVendedor.getBorder();

				titledBordervendedor.setTitle(titledBorderPedido.getTitle() + " -> Vendedor");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_vendedorPedidoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisovendedor=true;

			idTienePermisovendedor=this.tienePermisosUsuarioEnPaginaWebPedido(VendedorConstantesFunciones.CLASSNAME);

			if(idTienePermisovendedor) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedido.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPedido.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPedido.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPedido(this.getpedido(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);

				this.vendedorBeanSwingJInternalFrame=new VendedorBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.vendedorBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.vendedorBeanSwingJInternalFrame.getVendedorLogic().setConnexion(this.pedidoLogic.getConnexion());

				if(this.pedido.getid_vendedor()!=null) {
					this.vendedorBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.vendedorBeanSwingJInternalFrame.setIdActual(this.pedido.getid_vendedor());
					this.vendedorBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.vendedorBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.vendedorBeanSwingJInternalFrame.inicializarActualizarBindingTablaVendedor();
				}

				JInternalFrameBase jinternalFrame =this.vendedorBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPedido=(TitledBorder)this.jScrollPanelDatosPedido.getBorder();
				TitledBorder titledBordervendedor=(TitledBorder)this.vendedorBeanSwingJInternalFrame.jScrollPanelDatosVendedor.getBorder();

				titledBordervendedor.setTitle(titledBorderPedido.getTitle() + " -> Vendedor");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_vendedorPedidoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedido.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedido(this.getpedido(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedido==null) {
						this.pedido = new Pedido();
					}

					this.setVariablesFormularioToObjetoActualPedido(this.pedido,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
				}

				if(this.pedido.getid_vendedor()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_vendedor = "+this.pedido.getid_vendedor().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedido(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_consultorPedidoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoconsultor=true;

			idTienePermisoconsultor=this.tienePermisosUsuarioEnPaginaWebPedido(ConsultorConstantesFunciones.CLASSNAME);

			if(idTienePermisoconsultor) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedido.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPedido.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPedido.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPedido(this.getpedido(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);

				this.consultorBeanSwingJInternalFrame=new ConsultorBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.consultorBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.consultorBeanSwingJInternalFrame.getConsultorLogic().setConnexion(this.pedidoLogic.getConnexion());

				if(this.pedido.getid_consultor()!=null) {
					this.consultorBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.consultorBeanSwingJInternalFrame.setIdActual(this.pedido.getid_consultor());
					this.consultorBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.consultorBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.consultorBeanSwingJInternalFrame.inicializarActualizarBindingTablaConsultor();
				}

				JInternalFrameBase jinternalFrame =this.consultorBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPedido=(TitledBorder)this.jScrollPanelDatosPedido.getBorder();
				TitledBorder titledBorderconsultor=(TitledBorder)this.consultorBeanSwingJInternalFrame.jScrollPanelDatosConsultor.getBorder();

				titledBorderconsultor.setTitle(titledBorderPedido.getTitle() + " -> Consultor");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_consultorPedidoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedido.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedido(this.getpedido(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedido==null) {
						this.pedido = new Pedido();
					}

					this.setVariablesFormularioToObjetoActualPedido(this.pedido,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
				}

				if(this.pedido.getid_consultor()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_consultor = "+this.pedido.getid_consultor().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedido(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonordenPedidoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedido.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedido(this.getpedido(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedido==null) {
						this.pedido = new Pedido();
					}

					this.setVariablesFormularioToObjetoActualPedido(this.pedido,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
				}

				if(this.pedido.getorden()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where orden like '%"+this.pedido.getorden()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedido(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_responsablePedidoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoresponsable=true;

			idTienePermisoresponsable=this.tienePermisosUsuarioEnPaginaWebPedido(ResponsableConstantesFunciones.CLASSNAME);

			if(idTienePermisoresponsable) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedido.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPedido.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPedido.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPedido(this.getpedido(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);

				this.responsableBeanSwingJInternalFrame=new ResponsableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.responsableBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.responsableBeanSwingJInternalFrame.getResponsableLogic().setConnexion(this.pedidoLogic.getConnexion());

				if(this.pedido.getid_responsable()!=null) {
					this.responsableBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.responsableBeanSwingJInternalFrame.setIdActual(this.pedido.getid_responsable());
					this.responsableBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.responsableBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.responsableBeanSwingJInternalFrame.inicializarActualizarBindingTablaResponsable();
				}

				JInternalFrameBase jinternalFrame =this.responsableBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPedido=(TitledBorder)this.jScrollPanelDatosPedido.getBorder();
				TitledBorder titledBorderresponsable=(TitledBorder)this.responsableBeanSwingJInternalFrame.jScrollPanelDatosResponsable.getBorder();

				titledBorderresponsable.setTitle(titledBorderPedido.getTitle() + " -> Responsable");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_responsablePedidoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedido.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedido(this.getpedido(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedido==null) {
						this.pedido = new Pedido();
					}

					this.setVariablesFormularioToObjetoActualPedido(this.pedido,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
				}

				if(this.pedido.getid_responsable()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_responsable = "+this.pedido.getid_responsable().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedido(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_estado_pedidoPedidoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoestadopedido=true;

			idTienePermisoestadopedido=this.tienePermisosUsuarioEnPaginaWebPedido(EstadoPedidoConstantesFunciones.CLASSNAME);

			if(idTienePermisoestadopedido) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedido.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPedido.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPedido.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPedido(this.getpedido(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);

				this.estadopedidoBeanSwingJInternalFrame=new EstadoPedidoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.estadopedidoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.estadopedidoBeanSwingJInternalFrame.getEstadoPedidoLogic().setConnexion(this.pedidoLogic.getConnexion());

				if(this.pedido.getid_estado_pedido()!=null) {
					this.estadopedidoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.estadopedidoBeanSwingJInternalFrame.setIdActual(this.pedido.getid_estado_pedido());
					this.estadopedidoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.estadopedidoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.estadopedidoBeanSwingJInternalFrame.inicializarActualizarBindingTablaEstadoPedido();
				}

				JInternalFrameBase jinternalFrame =this.estadopedidoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPedido=(TitledBorder)this.jScrollPanelDatosPedido.getBorder();
				TitledBorder titledBorderestadopedido=(TitledBorder)this.estadopedidoBeanSwingJInternalFrame.jScrollPanelDatosEstadoPedido.getBorder();

				titledBorderestadopedido.setTitle(titledBorderPedido.getTitle() + " -> Estado Pedido");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_estado_pedidoPedidoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedido.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedido(this.getpedido(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedido==null) {
						this.pedido = new Pedido();
					}

					this.setVariablesFormularioToObjetoActualPedido(this.pedido,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
				}

				if(this.pedido.getid_estado_pedido()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_estado_pedido = "+this.pedido.getid_estado_pedido().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedido(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_transportePedidoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotransporte=true;

			idTienePermisotransporte=this.tienePermisosUsuarioEnPaginaWebPedido(TransporteConstantesFunciones.CLASSNAME);

			if(idTienePermisotransporte) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedido.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPedido.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPedido.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPedido(this.getpedido(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);

				this.transporteBeanSwingJInternalFrame=new TransporteBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.transporteBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.transporteBeanSwingJInternalFrame.getTransporteLogic().setConnexion(this.pedidoLogic.getConnexion());

				if(this.pedido.getid_transporte()!=null) {
					this.transporteBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.transporteBeanSwingJInternalFrame.setIdActual(this.pedido.getid_transporte());
					this.transporteBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.transporteBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.transporteBeanSwingJInternalFrame.inicializarActualizarBindingTablaTransporte();
				}

				JInternalFrameBase jinternalFrame =this.transporteBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPedido=(TitledBorder)this.jScrollPanelDatosPedido.getBorder();
				TitledBorder titledBordertransporte=(TitledBorder)this.transporteBeanSwingJInternalFrame.jScrollPanelDatosTransporte.getBorder();

				titledBordertransporte.setTitle(titledBorderPedido.getTitle() + " -> Transporte");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_transportePedidoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedido.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedido(this.getpedido(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedido==null) {
						this.pedido = new Pedido();
					}

					this.setVariablesFormularioToObjetoActualPedido(this.pedido,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
				}

				if(this.pedido.getid_transporte()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_transporte = "+this.pedido.getid_transporte().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedido(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_ruta_transportePedidoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisorutatransporte=true;

			idTienePermisorutatransporte=this.tienePermisosUsuarioEnPaginaWebPedido(RutaTransporteConstantesFunciones.CLASSNAME);

			if(idTienePermisorutatransporte) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedido.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPedido.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPedido.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPedido(this.getpedido(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);

				this.rutatransporteBeanSwingJInternalFrame=new RutaTransporteBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.rutatransporteBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.rutatransporteBeanSwingJInternalFrame.getRutaTransporteLogic().setConnexion(this.pedidoLogic.getConnexion());

				if(this.pedido.getid_ruta_transporte()!=null) {
					this.rutatransporteBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.rutatransporteBeanSwingJInternalFrame.setIdActual(this.pedido.getid_ruta_transporte());
					this.rutatransporteBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.rutatransporteBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.rutatransporteBeanSwingJInternalFrame.inicializarActualizarBindingTablaRutaTransporte();
				}

				JInternalFrameBase jinternalFrame =this.rutatransporteBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPedido=(TitledBorder)this.jScrollPanelDatosPedido.getBorder();
				TitledBorder titledBorderrutatransporte=(TitledBorder)this.rutatransporteBeanSwingJInternalFrame.jScrollPanelDatosRutaTransporte.getBorder();

				titledBorderrutatransporte.setTitle(titledBorderPedido.getTitle() + " -> Ruta Transporte");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_ruta_transportePedidoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedido.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedido(this.getpedido(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedido==null) {
						this.pedido = new Pedido();
					}

					this.setVariablesFormularioToObjetoActualPedido(this.pedido,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
				}

				if(this.pedido.getid_ruta_transporte()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_ruta_transporte = "+this.pedido.getid_ruta_transporte().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedido(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonvalor_rutaPedidoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedido.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedido(this.getpedido(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedido==null) {
						this.pedido = new Pedido();
					}

					this.setVariablesFormularioToObjetoActualPedido(this.pedido,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
				}

				if(this.pedido.getvalor_ruta()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where valor_ruta = "+this.pedido.getvalor_ruta().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedido(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_llamadaPedidoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipollamada=true;

			idTienePermisotipollamada=this.tienePermisosUsuarioEnPaginaWebPedido(TipoLlamadaConstantesFunciones.CLASSNAME);

			if(idTienePermisotipollamada) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedido.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPedido.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPedido.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPedido(this.getpedido(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);

				this.tipollamadaBeanSwingJInternalFrame=new TipoLlamadaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipollamadaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipollamadaBeanSwingJInternalFrame.getTipoLlamadaLogic().setConnexion(this.pedidoLogic.getConnexion());

				if(this.pedido.getid_tipo_llamada()!=null) {
					this.tipollamadaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipollamadaBeanSwingJInternalFrame.setIdActual(this.pedido.getid_tipo_llamada());
					this.tipollamadaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipollamadaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipollamadaBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoLlamada();
				}

				JInternalFrameBase jinternalFrame =this.tipollamadaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPedido=(TitledBorder)this.jScrollPanelDatosPedido.getBorder();
				TitledBorder titledBordertipollamada=(TitledBorder)this.tipollamadaBeanSwingJInternalFrame.jScrollPanelDatosTipoLlamada.getBorder();

				titledBordertipollamada.setTitle(titledBorderPedido.getTitle() + " -> Tipo Llamada");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_llamadaPedidoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedido.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedido(this.getpedido(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedido==null) {
						this.pedido = new Pedido();
					}

					this.setVariablesFormularioToObjetoActualPedido(this.pedido,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
				}

				if(this.pedido.getid_tipo_llamada()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_llamada = "+this.pedido.getid_tipo_llamada().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedido(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_transportistaPedidoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotransportista=true;

			idTienePermisotransportista=this.tienePermisosUsuarioEnPaginaWebPedido(TransportistaConstantesFunciones.CLASSNAME);

			if(idTienePermisotransportista) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedido.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPedido.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPedido.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPedido(this.getpedido(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);

				this.transportistaBeanSwingJInternalFrame=new TransportistaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.transportistaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.transportistaBeanSwingJInternalFrame.getTransportistaLogic().setConnexion(this.pedidoLogic.getConnexion());

				if(this.pedido.getid_transportista()!=null) {
					this.transportistaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.transportistaBeanSwingJInternalFrame.setIdActual(this.pedido.getid_transportista());
					this.transportistaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.transportistaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.transportistaBeanSwingJInternalFrame.inicializarActualizarBindingTablaTransportista();
				}

				JInternalFrameBase jinternalFrame =this.transportistaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPedido=(TitledBorder)this.jScrollPanelDatosPedido.getBorder();
				TitledBorder titledBordertransportista=(TitledBorder)this.transportistaBeanSwingJInternalFrame.jScrollPanelDatosTransportista.getBorder();

				titledBordertransportista.setTitle(titledBorderPedido.getTitle() + " -> Transportista");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_transportistaPedidoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedido.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedido(this.getpedido(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedido==null) {
						this.pedido = new Pedido();
					}

					this.setVariablesFormularioToObjetoActualPedido(this.pedido,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
				}

				if(this.pedido.getid_transportista()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_transportista = "+this.pedido.getid_transportista().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedido(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonhora_inicioPedidoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedido.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedido(this.getpedido(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedido==null) {
						this.pedido = new Pedido();
					}

					this.setVariablesFormularioToObjetoActualPedido(this.pedido,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
				}

				if(this.pedido.gethora_inicio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where hora_inicio = "+this.pedido.gethora_inicio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedido(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonhora_finPedidoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedido.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedido(this.getpedido(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedido==null) {
						this.pedido = new Pedido();
					}

					this.setVariablesFormularioToObjetoActualPedido(this.pedido,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
				}

				if(this.pedido.gethora_fin()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where hora_fin = "+this.pedido.gethora_fin().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedido(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtondescripcionPedidoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedido.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedido(this.getpedido(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedido==null) {
						this.pedido = new Pedido();
					}

					this.setVariablesFormularioToObjetoActualPedido(this.pedido,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
				}

				if(this.pedido.getdescripcion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where descripcion like '%"+this.pedido.getdescripcion()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedido(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncupoPedidoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedido.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedido(this.getpedido(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedido==null) {
						this.pedido = new Pedido();
					}

					this.setVariablesFormularioToObjetoActualPedido(this.pedido,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
				}

				if(this.pedido.getcupo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where cupo = "+this.pedido.getcupo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedido(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonsaldoPedidoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedido.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedido(this.getpedido(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedido==null) {
						this.pedido = new Pedido();
					}

					this.setVariablesFormularioToObjetoActualPedido(this.pedido,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
				}

				if(this.pedido.getsaldo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where saldo = "+this.pedido.getsaldo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedido(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonpedidosPedidoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedido.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedido(this.getpedido(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedido==null) {
						this.pedido = new Pedido();
					}

					this.setVariablesFormularioToObjetoActualPedido(this.pedido,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
				}

				if(this.pedido.getpedidos()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where pedidos = "+this.pedido.getpedidos().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedido(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtondocumentosPedidoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedido.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedido(this.getpedido(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedido==null) {
						this.pedido = new Pedido();
					}

					this.setVariablesFormularioToObjetoActualPedido(this.pedido,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
				}

				if(this.pedido.getdocumentos()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where documentos = "+this.pedido.getdocumentos().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedido(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtondisponiblePedidoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedido.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedido(this.getpedido(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedido==null) {
						this.pedido = new Pedido();
					}

					this.setVariablesFormularioToObjetoActualPedido(this.pedido,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
				}

				if(this.pedido.getdisponible()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where disponible = "+this.pedido.getdisponible().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedido(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtondescuento_porcentajePedidoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedido.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedido(this.getpedido(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedido==null) {
						this.pedido = new Pedido();
					}

					this.setVariablesFormularioToObjetoActualPedido(this.pedido,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
				}

				if(this.pedido.getdescuento_porcentaje()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where descuento_porcentaje = "+this.pedido.getdescuento_porcentaje().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedido(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtontotal_con_ivaPedidoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedido.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedido(this.getpedido(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedido==null) {
						this.pedido = new Pedido();
					}

					this.setVariablesFormularioToObjetoActualPedido(this.pedido,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
				}

				if(this.pedido.gettotal_con_iva()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where total_con_iva = "+this.pedido.gettotal_con_iva().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedido(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonsumanPedidoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedido.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedido(this.getpedido(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedido==null) {
						this.pedido = new Pedido();
					}

					this.setVariablesFormularioToObjetoActualPedido(this.pedido,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
				}

				if(this.pedido.getsuman()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where suman = "+this.pedido.getsuman().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedido(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtondescuento_valorPedidoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedido.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedido(this.getpedido(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedido==null) {
						this.pedido = new Pedido();
					}

					this.setVariablesFormularioToObjetoActualPedido(this.pedido,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
				}

				if(this.pedido.getdescuento_valor()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where descuento_valor = "+this.pedido.getdescuento_valor().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedido(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtontotal_sin_ivaPedidoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedido.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedido(this.getpedido(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedido==null) {
						this.pedido = new Pedido();
					}

					this.setVariablesFormularioToObjetoActualPedido(this.pedido,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
				}

				if(this.pedido.gettotal_sin_iva()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where total_sin_iva = "+this.pedido.gettotal_sin_iva().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedido(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtondescuento_totalPedidoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedido.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedido(this.getpedido(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedido==null) {
						this.pedido = new Pedido();
					}

					this.setVariablesFormularioToObjetoActualPedido(this.pedido,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
				}

				if(this.pedido.getdescuento_total()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where descuento_total = "+this.pedido.getdescuento_total().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedido(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfletePedidoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedido.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedido(this.getpedido(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedido==null) {
						this.pedido = new Pedido();
					}

					this.setVariablesFormularioToObjetoActualPedido(this.pedido,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
				}

				if(this.pedido.getflete()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where flete = "+this.pedido.getflete().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedido(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtontotalPedidoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedido.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedido(this.getpedido(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedido==null) {
						this.pedido = new Pedido();
					}

					this.setVariablesFormularioToObjetoActualPedido(this.pedido,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
				}

				if(this.pedido.gettotal()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where total = "+this.pedido.gettotal().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedido(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonsubtotalPedidoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedido.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedido(this.getpedido(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedido==null) {
						this.pedido = new Pedido();
					}

					this.setVariablesFormularioToObjetoActualPedido(this.pedido,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
				}

				if(this.pedido.getsubtotal()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where subtotal = "+this.pedido.getsubtotal().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedido(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonotroPedidoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedido.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedido(this.getpedido(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedido==null) {
						this.pedido = new Pedido();
					}

					this.setVariablesFormularioToObjetoActualPedido(this.pedido,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
				}

				if(this.pedido.getotro()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where otro = "+this.pedido.getotro().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedido(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonultimo_costoPedidoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedido.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedido(this.getpedido(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedido==null) {
						this.pedido = new Pedido();
					}

					this.setVariablesFormularioToObjetoActualPedido(this.pedido,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
				}

				if(this.pedido.getultimo_costo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where ultimo_costo = "+this.pedido.getultimo_costo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedido(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonivaPedidoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedido.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedido(this.getpedido(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedido==null) {
						this.pedido = new Pedido();
					}

					this.setVariablesFormularioToObjetoActualPedido(this.pedido,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
				}

				if(this.pedido.getiva()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where iva = "+this.pedido.getiva().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedido(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfinanciamientoPedidoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedido.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedido(this.getpedido(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedido==null) {
						this.pedido = new Pedido();
					}

					this.setVariablesFormularioToObjetoActualPedido(this.pedido,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
				}

				if(this.pedido.getfinanciamiento()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where financiamiento = "+this.pedido.getfinanciamiento().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedido(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonmargen_utilidadPedidoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedido.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedido(this.getpedido(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedido==null) {
						this.pedido = new Pedido();
					}

					this.setVariablesFormularioToObjetoActualPedido(this.pedido,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
				}

				if(this.pedido.getmargen_utilidad()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where margen_utilidad = "+this.pedido.getmargen_utilidad().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedido(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonotros_valoresPedidoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedido.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedido(this.getpedido(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedido==null) {
						this.pedido = new Pedido();
					}

					this.setVariablesFormularioToObjetoActualPedido(this.pedido,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
				}

				if(this.pedido.getotros_valores()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where otros_valores = "+this.pedido.getotros_valores().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedido(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonanticipoPedidoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedido.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedido(this.getpedido(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedido==null) {
						this.pedido = new Pedido();
					}

					this.setVariablesFormularioToObjetoActualPedido(this.pedido,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
				}

				if(this.pedido.getanticipo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where anticipo = "+this.pedido.getanticipo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedido(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_cambioPedidoActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.tipocambioBeanSwingJInternalFrame=new TipoCambioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.tipocambioBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.tipocambioBeanSwingJInternalFrame.sTipoBusqueda="TipoCambio";

			if(!this.sFinalQueryGeneral_tipocambio.equals("")) {
				this.tipocambioBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_tipocambio);
				this.tipocambioBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.tipocambioBeanSwingJInternalFrame.procesarBusqueda(this.tipocambioBeanSwingJInternalFrame.sAccionBusqueda);
				this.tipocambioBeanSwingJInternalFrame.inicializarActualizarBindingTipoCambio(false);
			}

			if(!this.sFinalQueryComboTipoCambio.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.tipocambioBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderPedido=null;
			TitledBorder titledBordertipocambio=null;

			if(!this.jScrollPanelDatosPedido.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderPedido=(TitledBorder)this.jScrollPanelDatosPedido.getBorder();
				titledBordertipocambio=(TitledBorder)this.tipocambioBeanSwingJInternalFrame.jScrollPanelDatosTipoCambio.getBorder();

				titledBordertipocambio.setTitle(titledBorderPedido.getTitle() + " -> Tipo Cambio");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_tipo_cambioPedidoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipocambio=true;

			idTienePermisotipocambio=this.tienePermisosUsuarioEnPaginaWebPedido(TipoCambioConstantesFunciones.CLASSNAME);

			if(idTienePermisotipocambio) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedido.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPedido.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPedido.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPedido(this.getpedido(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);

				this.tipocambioBeanSwingJInternalFrame=new TipoCambioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipocambioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipocambioBeanSwingJInternalFrame.getTipoCambioLogic().setConnexion(this.pedidoLogic.getConnexion());

				if(this.pedido.getid_tipo_cambio()!=null) {
					this.tipocambioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipocambioBeanSwingJInternalFrame.setIdActual(this.pedido.getid_tipo_cambio());
					this.tipocambioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipocambioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipocambioBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoCambio();
				}

				JInternalFrameBase jinternalFrame =this.tipocambioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPedido=(TitledBorder)this.jScrollPanelDatosPedido.getBorder();
				TitledBorder titledBordertipocambio=(TitledBorder)this.tipocambioBeanSwingJInternalFrame.jScrollPanelDatosTipoCambio.getBorder();

				titledBordertipocambio.setTitle(titledBorderPedido.getTitle() + " -> Tipo Cambio");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_cambioPedidoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedido.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedido(this.getpedido(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedido==null) {
						this.pedido = new Pedido();
					}

					this.setVariablesFormularioToObjetoActualPedido(this.pedido,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
				}

				if(this.pedido.getid_tipo_cambio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_cambio = "+this.pedido.getid_tipo_cambio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedido(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_centro_costoPedidoActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.centrocostoBeanSwingJInternalFrame=new CentroCostoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.centrocostoBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.centrocostoBeanSwingJInternalFrame.sTipoBusqueda="CentroCosto";

			if(!this.sFinalQueryGeneral_centrocosto.equals("")) {
				this.centrocostoBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_centrocosto);
				this.centrocostoBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.centrocostoBeanSwingJInternalFrame.procesarBusqueda(this.centrocostoBeanSwingJInternalFrame.sAccionBusqueda);
				this.centrocostoBeanSwingJInternalFrame.inicializarActualizarBindingCentroCosto(false);
			}

			if(!this.sFinalQueryComboCentroCosto.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.centrocostoBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderPedido=null;
			TitledBorder titledBordercentrocosto=null;

			if(!this.jScrollPanelDatosPedido.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderPedido=(TitledBorder)this.jScrollPanelDatosPedido.getBorder();
				titledBordercentrocosto=(TitledBorder)this.centrocostoBeanSwingJInternalFrame.jScrollPanelDatosCentroCosto.getBorder();

				titledBordercentrocosto.setTitle(titledBorderPedido.getTitle() + " -> Centro Costo");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_centro_costoPedidoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocentrocosto=true;

			idTienePermisocentrocosto=this.tienePermisosUsuarioEnPaginaWebPedido(CentroCostoConstantesFunciones.CLASSNAME);

			if(idTienePermisocentrocosto) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedido.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPedido.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPedido.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPedido(this.getpedido(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);

				this.centrocostoBeanSwingJInternalFrame=new CentroCostoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.centrocostoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.centrocostoBeanSwingJInternalFrame.getCentroCostoLogic().setConnexion(this.pedidoLogic.getConnexion());

				if(this.pedido.getid_centro_costo()!=null) {
					this.centrocostoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.centrocostoBeanSwingJInternalFrame.setIdActual(this.pedido.getid_centro_costo());
					this.centrocostoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.centrocostoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.centrocostoBeanSwingJInternalFrame.inicializarActualizarBindingTablaCentroCosto();
				}

				JInternalFrameBase jinternalFrame =this.centrocostoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPedido=(TitledBorder)this.jScrollPanelDatosPedido.getBorder();
				TitledBorder titledBordercentrocosto=(TitledBorder)this.centrocostoBeanSwingJInternalFrame.jScrollPanelDatosCentroCosto.getBorder();

				titledBordercentrocosto.setTitle(titledBorderPedido.getTitle() + " -> Centro Costo");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_centro_costoPedidoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedido.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedido(this.getpedido(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedido==null) {
						this.pedido = new Pedido();
					}

					this.setVariablesFormularioToObjetoActualPedido(this.pedido,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
				}

				if(this.pedido.getid_centro_costo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_centro_costo = "+this.pedido.getid_centro_costo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedido(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_zonaPedidoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisozona=true;

			idTienePermisozona=this.tienePermisosUsuarioEnPaginaWebPedido(ZonaConstantesFunciones.CLASSNAME);

			if(idTienePermisozona) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedido.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPedido.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPedido.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPedido(this.getpedido(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);

				this.zonaBeanSwingJInternalFrame=new ZonaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.zonaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.zonaBeanSwingJInternalFrame.getZonaLogic().setConnexion(this.pedidoLogic.getConnexion());

				if(this.pedido.getid_zona()!=null) {
					this.zonaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.zonaBeanSwingJInternalFrame.setIdActual(this.pedido.getid_zona());
					this.zonaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.zonaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.zonaBeanSwingJInternalFrame.inicializarActualizarBindingTablaZona();
				}

				JInternalFrameBase jinternalFrame =this.zonaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPedido=(TitledBorder)this.jScrollPanelDatosPedido.getBorder();
				TitledBorder titledBorderzona=(TitledBorder)this.zonaBeanSwingJInternalFrame.jScrollPanelDatosZona.getBorder();

				titledBorderzona.setTitle(titledBorderPedido.getTitle() + " -> Zona");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_zonaPedidoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedido.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedido(this.getpedido(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedido==null) {
						this.pedido = new Pedido();
					}

					this.setVariablesFormularioToObjetoActualPedido(this.pedido,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
				}

				if(this.pedido.getid_zona()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_zona = "+this.pedido.getid_zona().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedido(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfechaPedidoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedido.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedido(this.getpedido(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedido==null) {
						this.pedido = new Pedido();
					}

					this.setVariablesFormularioToObjetoActualPedido(this.pedido,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
				}

				if(this.pedido.getfecha()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha = '"+Funciones2.getStringPostgresDate(this.pedido.getfecha())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedido(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnumero_fuePedidoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedido.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedido(this.getpedido(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedido==null) {
						this.pedido = new Pedido();
					}

					this.setVariablesFormularioToObjetoActualPedido(this.pedido,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
				}

				if(this.pedido.getnumero_fue()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where numero_fue like '%"+this.pedido.getnumero_fue()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedido(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfecha_servidorPedidoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedido.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedido(this.getpedido(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedido==null) {
						this.pedido = new Pedido();
					}

					this.setVariablesFormularioToObjetoActualPedido(this.pedido,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
				}

				if(this.pedido.getfecha_servidor()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha_servidor = '"+Funciones2.getStringPostgresDate(this.pedido.getfecha_servidor())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedido(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonmonto_retencionPedidoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedido.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedido(this.getpedido(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedido==null) {
						this.pedido = new Pedido();
					}

					this.setVariablesFormularioToObjetoActualPedido(this.pedido,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
				}

				if(this.pedido.getmonto_retencion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where monto_retencion = "+this.pedido.getmonto_retencion().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedido(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonicePedidoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedido.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedido(this.getpedido(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedido==null) {
						this.pedido = new Pedido();
					}

					this.setVariablesFormularioToObjetoActualPedido(this.pedido,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);
				}

				if(this.pedido.getice()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where ice = "+this.pedido.getice().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedido(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoLogic.closeNewConnexionToDeep();
				}

			}
		}

	
	
	public void jButtonFK_IdAnioPedidoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPedido(false,false);

			this.getPedidosFK_IdAnio();

			this.inicializarActualizarBindingPedido(false);

			//if(PedidoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPedido(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdCentroCostoPedidoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPedido(false,false);

			this.getPedidosFK_IdCentroCosto();

			this.inicializarActualizarBindingPedido(false);

			//if(PedidoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPedido(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdClientePedidoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPedido(false,false);

			this.getPedidosFK_IdCliente();

			this.inicializarActualizarBindingPedido(false);

			//if(PedidoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPedido(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdConsultorPedidoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPedido(false,false);

			this.getPedidosFK_IdConsultor();

			this.inicializarActualizarBindingPedido(false);

			//if(PedidoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPedido(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEjercicioPedidoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPedido(false,false);

			this.getPedidosFK_IdEjercicio();

			this.inicializarActualizarBindingPedido(false);

			//if(PedidoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPedido(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEmpleadoPedidoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPedido(false,false);

			this.getPedidosFK_IdEmpleado();

			this.inicializarActualizarBindingPedido(false);

			//if(PedidoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPedido(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEmpresaPedidoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPedido(false,false);

			this.getPedidosFK_IdEmpresa();

			this.inicializarActualizarBindingPedido(false);

			//if(PedidoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPedido(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEstadoPedidoPedidoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPedido(false,false);

			this.getPedidosFK_IdEstadoPedido();

			this.inicializarActualizarBindingPedido(false);

			//if(PedidoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPedido(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdFormatoPedidoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPedido(false,false);

			this.getPedidosFK_IdFormato();

			this.inicializarActualizarBindingPedido(false);

			//if(PedidoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPedido(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdMesPedidoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPedido(false,false);

			this.getPedidosFK_IdMes();

			this.inicializarActualizarBindingPedido(false);

			//if(PedidoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPedido(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdMonedaPedidoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPedido(false,false);

			this.getPedidosFK_IdMoneda();

			this.inicializarActualizarBindingPedido(false);

			//if(PedidoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPedido(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdPeriodoPedidoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPedido(false,false);

			this.getPedidosFK_IdPeriodo();

			this.inicializarActualizarBindingPedido(false);

			//if(PedidoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPedido(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdResponsablePedidoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPedido(false,false);

			this.getPedidosFK_IdResponsable();

			this.inicializarActualizarBindingPedido(false);

			//if(PedidoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPedido(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdRutaTransportePedidoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPedido(false,false);

			this.getPedidosFK_IdRutaTransporte();

			this.inicializarActualizarBindingPedido(false);

			//if(PedidoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPedido(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdSubClientePedidoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPedido(false,false);

			this.getPedidosFK_IdSubCliente();

			this.inicializarActualizarBindingPedido(false);

			//if(PedidoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPedido(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdSucursalPedidoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPedido(false,false);

			this.getPedidosFK_IdSucursal();

			this.inicializarActualizarBindingPedido(false);

			//if(PedidoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPedido(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoCambioPedidoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPedido(false,false);

			this.getPedidosFK_IdTipoCambio();

			this.inicializarActualizarBindingPedido(false);

			//if(PedidoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPedido(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoLlamadaPedidoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPedido(false,false);

			this.getPedidosFK_IdTipoLlamada();

			this.inicializarActualizarBindingPedido(false);

			//if(PedidoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPedido(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoPrecioPedidoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPedido(false,false);

			this.getPedidosFK_IdTipoPrecio();

			this.inicializarActualizarBindingPedido(false);

			//if(PedidoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPedido(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTransportePedidoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPedido(false,false);

			this.getPedidosFK_IdTransporte();

			this.inicializarActualizarBindingPedido(false);

			//if(PedidoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPedido(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTransportistaPedidoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPedido(false,false);

			this.getPedidosFK_IdTransportista();

			this.inicializarActualizarBindingPedido(false);

			//if(PedidoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPedido(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdUsuarioPedidoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPedido(false,false);

			this.getPedidosFK_IdUsuario();

			this.inicializarActualizarBindingPedido(false);

			//if(PedidoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPedido(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdVendedorPedidoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPedido(false,false);

			this.getPedidosFK_IdVendedor();

			this.inicializarActualizarBindingPedido(false);

			//if(PedidoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPedido(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdZonaPedidoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPedido(false,false);

			this.getPedidosFK_IdZona();

			this.inicializarActualizarBindingPedido(false);

			//if(PedidoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPedido(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoLogic.closeNewConnexionToDeep();
			}
		}
	}

	
	public void closingInternalFramePedido() {
		if(this.jInternalFrameDetalleFormPedido!=null) {
		

		if(this.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFramePopup=null;
		}	
		
		
		}
		
		if(this.jInternalFrameDetalleFormPedido!=null) {
			this.jInternalFrameDetalleFormPedido.setVisible(false);	    			
			this.jInternalFrameDetalleFormPedido.dispose();
			this.jInternalFrameDetalleFormPedido=null;
		}
		
		
		if(this.jInternalFrameReporteDinamicoPedido!=null) {
			this.jInternalFrameReporteDinamicoPedido.setVisible(false);	    			
			this.jInternalFrameReporteDinamicoPedido.dispose();
			this.jInternalFrameReporteDinamicoPedido=null;
		}
		
		if(this.jInternalFrameImportacionPedido!=null) {
			this.jInternalFrameImportacionPedido.setVisible(false);	    			
			this.jInternalFrameImportacionPedido.dispose();
			this.jInternalFrameImportacionPedido=null;
		}		
		
		
		this.setVisible(false);
		this.dispose();
		//this=null;
	}
	
	
	
	public void jButtonActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {			
			this.startProcessPedido();
			
			PedidoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.pedido,new Object(),this.pedidoParameterGeneral,this.pedidoReturnGeneral);
			
			
			if(sTipo.equals("NuevoPedido")) {
				jButtonNuevoPedidoActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarPedido")) {
				jButtonDuplicarPedidoActionPerformed(evt,false);
			} else if(sTipo.equals("CopiarPedido")) {
				jButtonCopiarPedidoActionPerformed(evt);
			} else if(sTipo.equals("VerFormPedido")) {
				jButtonVerFormPedidoActionPerformed(evt);
			} else if(sTipo.equals("NuevoToolBarPedido")) {
				jButtonNuevoPedidoActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarToolBarPedido")) {
				jButtonDuplicarPedidoActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemNuevoPedido")) {
				jButtonNuevoPedidoActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemDuplicarPedido")) {
				jButtonDuplicarPedidoActionPerformed(evt,false);
			} else if(sTipo.equals("NuevoRelacionesPedido")) {
				jButtonNuevoPedidoActionPerformed(evt,true);
			} else if(sTipo.equals("NuevoRelacionesToolBarPedido")) {
				jButtonNuevoPedidoActionPerformed(evt,true);
			} else if(sTipo.equals("MenuItemNuevoRelacionesPedido")) {
				jButtonNuevoPedidoActionPerformed(evt,true);
			} else if(sTipo.equals("ModificarPedido")) {
				jButtonModificarPedidoActionPerformed(evt);
			} else if(sTipo.equals("ModificarToolBarPedido")) {
				jButtonModificarPedidoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemModificarPedido")) {
				jButtonModificarPedidoActionPerformed(evt);
			} else if(sTipo.equals("ActualizarPedido")) {
				jButtonActualizarPedidoActionPerformed(evt);
			} else if(sTipo.equals("ActualizarToolBarPedido")) {
				jButtonActualizarPedidoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemActualizarPedido")) {
				jButtonActualizarPedidoActionPerformed(evt);
			} else if(sTipo.equals("EliminarPedido")) {
				jButtonEliminarPedidoActionPerformed(evt);
			} else if(sTipo.equals("EliminarToolBarPedido")) {
				jButtonEliminarPedidoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemEliminarPedido")) {
				jButtonEliminarPedidoActionPerformed(evt);
			} else if(sTipo.equals("CancelarPedido")) {
				jButtonCancelarPedidoActionPerformed(evt);
			} else if(sTipo.equals("CancelarToolBarPedido")) {
				jButtonCancelarPedidoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCancelarPedido")) {
				jButtonCancelarPedidoActionPerformed(evt);
			} else if(sTipo.equals("CerrarPedido")) {
				jButtonCerrarPedidoActionPerformed(evt);
			} else if(sTipo.equals("CerrarToolBarPedido")) {
				jButtonCerrarPedidoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCerrarPedido")) {
				jButtonCerrarPedidoActionPerformed(evt);
			} else if(sTipo.equals("MostrarOcultarToolBarPedido")) {
				jButtonMostrarOcultarPedidoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemDetalleCerrarPedido")) {
				jButtonCancelarPedidoActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosPedido")) {
				jButtonGuardarCambiosPedidoActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosToolBarPedido")) {
				jButtonGuardarCambiosPedidoActionPerformed(evt);
			} else if(sTipo.equals("CopiarToolBarPedido")) {
				jButtonCopiarPedidoActionPerformed(evt);
			} else if(sTipo.equals("VerFormToolBarPedido")) {
				jButtonVerFormPedidoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosPedido")) {
				jButtonGuardarCambiosPedidoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCopiarPedido")) {
				jButtonCopiarPedidoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemVerFormPedido")) {
				jButtonVerFormPedidoActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaPedido")) {
				jButtonGuardarCambiosPedidoActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaToolBarPedido")) {
				jButtonGuardarCambiosPedidoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosTablaPedido")) {
				jButtonGuardarCambiosPedidoActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionPedido")) {
				jButtonRecargarInformacionPedidoActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionToolBarPedido")) {
				jButtonRecargarInformacionPedidoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemRecargarInformacionPedido")) {
				jButtonRecargarInformacionPedidoActionPerformed(evt);
			}
			else if(sTipo.equals("AnterioresPedido")) {
				jButtonAnterioresPedidoActionPerformed(evt);
			} else if(sTipo.equals("AnterioresToolBarPedido")) {
				jButtonAnterioresPedidoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAnteriorePedido")) {
				jButtonAnterioresPedidoActionPerformed(evt);
			} else if(sTipo.equals("SiguientesPedido")) {
				jButtonSiguientesPedidoActionPerformed(evt);
			} else if(sTipo.equals("SiguientesToolBarPedido")) {
				jButtonSiguientesPedidoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemSiguientesPedido")) {
				jButtonSiguientesPedidoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAbrirOrderByPedido") || sTipo.equals("MenuItemDetalleAbrirOrderByPedido")) {
				jButtonAbrirOrderByPedidoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemMostrarOcultarPedido") || sTipo.equals("MenuItemDetalleMostrarOcultarPedido")) {
				jButtonMostrarOcultarPedidoActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosPedido")) {
				jButtonNuevoGuardarCambiosPedidoActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosToolBarPedido")) {
				jButtonNuevoGuardarCambiosPedidoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemNuevoGuardarCambiosPedido")) {
				jButtonNuevoGuardarCambiosPedidoActionPerformed(evt);
			} 
			else if(sTipo.equals("CerrarReporteDinamicoPedido")) {
				jButtonCerrarReporteDinamicoPedidoActionPerformed(evt);
			} else if(sTipo.equals("GenerarReporteDinamicoPedido")) {
				jButtonGenerarReporteDinamicoPedidoActionPerformed(evt);
			} else if(sTipo.equals("GenerarExcelReporteDinamicoPedido")) {
				
				jButtonGenerarExcelReporteDinamicoPedidoActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarImportacionPedido")) {
				jButtonCerrarImportacionPedidoActionPerformed(evt);
			} else if(sTipo.equals("GenerarImportacionPedido")) {
				
				jButtonGenerarImportacionPedidoActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirImportacionPedido")) {
				
				jButtonAbrirImportacionPedidoActionPerformed(evt);
				
			} else if(sTipo.equals("TiposAccionesPedido")) {
				jComboBoxTiposAccionesPedidoActionListener(evt,false);
			} else if(sTipo.equals("TiposRelacionesPedido")) {
				jComboBoxTiposRelacionesPedidoActionListener(evt);
			} else if(sTipo.equals("TiposAccionesFormularioPedido")) {
				jComboBoxTiposAccionesPedidoActionListener(evt,true);
			} else if(sTipo.equals("TiposSeleccionarPedido")) {
				
				jComboBoxTiposSeleccionarPedidoActionListener(evt);
				
			} else if(sTipo.equals("ValorCampoGeneralPedido")) {
				jTextFieldValorCampoGeneralPedidoActionListener(evt);
			}
			
			
			else if(sTipo.equals("AbrirOrderByPedido")) {
				jButtonAbrirOrderByPedidoActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirOrderByToolBarPedido")) {
				jButtonAbrirOrderByPedidoActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarOrderByPedido")) {
				jButtonCerrarOrderByPedidoActionPerformed(evt);
			} 
						
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idPedidoBusqueda")) {
				this.jButtonidPedidoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaPedidoUpdate")) {
				this.jButtonid_empresaPedidoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaPedidoBusqueda")) {
				this.jButtonid_empresaPedidoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalPedidoUpdate")) {
				this.jButtonid_sucursalPedidoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalPedidoBusqueda")) {
				this.jButtonid_sucursalPedidoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_ejercicioPedidoUpdate")) {
				this.jButtonid_ejercicioPedidoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_ejercicioPedidoBusqueda")) {
				this.jButtonid_ejercicioPedidoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_periodoPedidoUpdate")) {
				this.jButtonid_periodoPedidoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_periodoPedidoBusqueda")) {
				this.jButtonid_periodoPedidoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_anioPedidoUpdate")) {
				this.jButtonid_anioPedidoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_anioPedidoBusqueda")) {
				this.jButtonid_anioPedidoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_mesPedidoUpdate")) {
				this.jButtonid_mesPedidoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_mesPedidoBusqueda")) {
				this.jButtonid_mesPedidoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_usuarioPedidoUpdate")) {
				this.jButtonid_usuarioPedidoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_usuarioPedidoBusqueda")) {
				this.jButtonid_usuarioPedidoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numeroPedidoBusqueda")) {
				this.jButtonnumeroPedidoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("pre_impresoPedidoBusqueda")) {
				this.jButtonpre_impresoPedidoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_emisionPedidoBusqueda")) {
				this.jButtonfecha_emisionPedidoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_entregaPedidoBusqueda")) {
				this.jButtonfecha_entregaPedidoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_monedaPedidoUpdate")) {
				this.jButtonid_monedaPedidoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_monedaPedidoBusqueda")) {
				this.jButtonid_monedaPedidoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("cotizacionPedidoBusqueda")) {
				this.jButtoncotizacionPedidoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_empleadoPedido")) {
				this.jButtonid_empleadoPedidoActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empleadoPedidoUpdate")) {
				this.jButtonid_empleadoPedidoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empleadoPedidoBusqueda")) {
				this.jButtonid_empleadoPedidoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_precioPedidoUpdate")) {
				this.jButtonid_tipo_precioPedidoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_precioPedidoBusqueda")) {
				this.jButtonid_tipo_precioPedidoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_formatoPedidoUpdate")) {
				this.jButtonid_formatoPedidoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_formatoPedidoBusqueda")) {
				this.jButtonid_formatoPedidoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("direccionPedidoBusqueda")) {
				this.jButtondireccionPedidoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_clientePedido")) {
				this.jButtonid_clientePedidoActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_clientePedidoUpdate")) {
				this.jButtonid_clientePedidoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_clientePedidoBusqueda")) {
				this.jButtonid_clientePedidoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("telefonoPedidoBusqueda")) {
				this.jButtontelefonoPedidoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("rucPedidoBusqueda")) {
				this.jButtonrucPedidoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sub_clientePedidoUpdate")) {
				this.jButtonid_sub_clientePedidoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sub_clientePedidoBusqueda")) {
				this.jButtonid_sub_clientePedidoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_vendedorPedido")) {
				this.jButtonid_vendedorPedidoActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_vendedorPedidoArbol")) {
				this.abrirFrameTreeVendedor("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_vendedorPedidoUpdate")) {
				this.jButtonid_vendedorPedidoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_vendedorPedidoBusqueda")) {
				this.jButtonid_vendedorPedidoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_consultorPedidoUpdate")) {
				this.jButtonid_consultorPedidoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_consultorPedidoBusqueda")) {
				this.jButtonid_consultorPedidoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("ordenPedidoBusqueda")) {
				this.jButtonordenPedidoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_responsablePedidoUpdate")) {
				this.jButtonid_responsablePedidoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_responsablePedidoBusqueda")) {
				this.jButtonid_responsablePedidoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_estado_pedidoPedidoUpdate")) {
				this.jButtonid_estado_pedidoPedidoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_estado_pedidoPedidoBusqueda")) {
				this.jButtonid_estado_pedidoPedidoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transportePedidoUpdate")) {
				this.jButtonid_transportePedidoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transportePedidoBusqueda")) {
				this.jButtonid_transportePedidoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_ruta_transportePedidoUpdate")) {
				this.jButtonid_ruta_transportePedidoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_ruta_transportePedidoBusqueda")) {
				this.jButtonid_ruta_transportePedidoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("valor_rutaPedidoBusqueda")) {
				this.jButtonvalor_rutaPedidoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_llamadaPedidoUpdate")) {
				this.jButtonid_tipo_llamadaPedidoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_llamadaPedidoBusqueda")) {
				this.jButtonid_tipo_llamadaPedidoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transportistaPedidoUpdate")) {
				this.jButtonid_transportistaPedidoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transportistaPedidoBusqueda")) {
				this.jButtonid_transportistaPedidoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("hora_inicioPedidoBusqueda")) {
				this.jButtonhora_inicioPedidoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("hora_finPedidoBusqueda")) {
				this.jButtonhora_finPedidoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descripcionPedidoBusqueda")) {
				this.jButtondescripcionPedidoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("cupoPedidoBusqueda")) {
				this.jButtoncupoPedidoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("saldoPedidoBusqueda")) {
				this.jButtonsaldoPedidoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("pedidosPedidoBusqueda")) {
				this.jButtonpedidosPedidoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("documentosPedidoBusqueda")) {
				this.jButtondocumentosPedidoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("disponiblePedidoBusqueda")) {
				this.jButtondisponiblePedidoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descuento_porcentajePedidoBusqueda")) {
				this.jButtondescuento_porcentajePedidoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("total_con_ivaPedidoBusqueda")) {
				this.jButtontotal_con_ivaPedidoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("sumanPedidoBusqueda")) {
				this.jButtonsumanPedidoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descuento_valorPedidoBusqueda")) {
				this.jButtondescuento_valorPedidoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("total_sin_ivaPedidoBusqueda")) {
				this.jButtontotal_sin_ivaPedidoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descuento_totalPedidoBusqueda")) {
				this.jButtondescuento_totalPedidoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fletePedidoBusqueda")) {
				this.jButtonfletePedidoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("totalPedidoBusqueda")) {
				this.jButtontotalPedidoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("subtotalPedidoBusqueda")) {
				this.jButtonsubtotalPedidoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("otroPedidoBusqueda")) {
				this.jButtonotroPedidoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("ultimo_costoPedidoBusqueda")) {
				this.jButtonultimo_costoPedidoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("ivaPedidoBusqueda")) {
				this.jButtonivaPedidoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("financiamientoPedidoBusqueda")) {
				this.jButtonfinanciamientoPedidoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("margen_utilidadPedidoBusqueda")) {
				this.jButtonmargen_utilidadPedidoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("otros_valoresPedidoBusqueda")) {
				this.jButtonotros_valoresPedidoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("anticipoPedidoBusqueda")) {
				this.jButtonanticipoPedidoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_tipo_cambioPedido")) {
				this.jButtonid_tipo_cambioPedidoActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_cambioPedidoUpdate")) {
				this.jButtonid_tipo_cambioPedidoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_cambioPedidoBusqueda")) {
				this.jButtonid_tipo_cambioPedidoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_centro_costoPedido")) {
				this.jButtonid_centro_costoPedidoActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_centro_costoPedidoArbol")) {
				this.abrirFrameTreeCentroCosto("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_centro_costoPedidoUpdate")) {
				this.jButtonid_centro_costoPedidoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_centro_costoPedidoBusqueda")) {
				this.jButtonid_centro_costoPedidoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_zonaPedidoUpdate")) {
				this.jButtonid_zonaPedidoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_zonaPedidoBusqueda")) {
				this.jButtonid_zonaPedidoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fechaPedidoBusqueda")) {
				this.jButtonfechaPedidoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_fuePedidoBusqueda")) {
				this.jButtonnumero_fuePedidoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_servidorPedidoBusqueda")) {
				this.jButtonfecha_servidorPedidoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("monto_retencionPedidoBusqueda")) {
				this.jButtonmonto_retencionPedidoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("icePedidoBusqueda")) {
				this.jButtonicePedidoBusquedaActionPerformed(evt);
			}
			
			
			else if(sTipo.equals("id_centro_costoPedido")) {
				this.jButtonid_centro_costoPedidoActionPerformed(evt);
			}
			else if(sTipo.equals("id_clientePedido")) {
				this.jButtonid_clientePedidoActionPerformed(evt);
			}
			else if(sTipo.equals("id_empleadoPedido")) {
				this.jButtonid_empleadoPedidoActionPerformed(evt);
			}
			else if(sTipo.equals("id_tipo_cambioPedido")) {
				this.jButtonid_tipo_cambioPedidoActionPerformed(evt);
			}
			else if(sTipo.equals("id_vendedorPedido")) {
				this.jButtonid_vendedorPedidoActionPerformed(evt);
			}
			
			
			else if(sTipo.equals("FK_IdCentroCostoPedido")) {
				this.jButtonFK_IdCentroCostoPedidoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdClientePedido")) {
				this.jButtonFK_IdClientePedidoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdConsultorPedido")) {
				this.jButtonFK_IdConsultorPedidoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdEmpleadoPedido")) {
				this.jButtonFK_IdEmpleadoPedidoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdEstadoPedidoPedido")) {
				this.jButtonFK_IdEstadoPedidoPedidoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdFormatoPedido")) {
				this.jButtonFK_IdFormatoPedidoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdResponsablePedido")) {
				this.jButtonFK_IdResponsablePedidoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdRutaTransportePedido")) {
				this.jButtonFK_IdRutaTransportePedidoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdSubClientePedido")) {
				this.jButtonFK_IdSubClientePedidoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTipoCambioPedido")) {
				this.jButtonFK_IdTipoCambioPedidoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTipoLlamadaPedido")) {
				this.jButtonFK_IdTipoLlamadaPedidoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTipoPrecioPedido")) {
				this.jButtonFK_IdTipoPrecioPedidoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTransportePedido")) {
				this.jButtonFK_IdTransportePedidoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTransportistaPedido")) {
				this.jButtonFK_IdTransportistaPedidoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdVendedorPedido")) {
				this.jButtonFK_IdVendedorPedidoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdZonaPedido")) {
				this.jButtonFK_IdZonaPedidoActionPerformed(evt);
			}
			
			;
			
			
			PedidoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.pedido,new Object(),this.pedidoParameterGeneral,this.pedidoReturnGeneral);
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
			
  		} finally {
      		this.finishProcessPedido();
      	}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaPedidoActual();
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				JTextField jTextField=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				if(containerParent!=null && containerParent.getClass().equals(JTableMe.class)) {
					esControlTabla=true;
				}
						
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.pedido);
				
				this.actualizarInformacion("INFO_PADRE",false,this.pedido);
				
				PedidoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pedido,new Object(),this.pedidoParameterGeneral,this.pedidoReturnGeneral);
				
				


			if(sTipo.equals("pre_impresoPedido")) {
				classes.add(new Classe(DetallePedido.class));

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormPedido(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"TEXTBOX",classes,false,esControlTabla);
			}
				
				PedidoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pedido,new Object(),this.pedidoParameterGeneral,this.pedidoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(Pedido.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Pedido.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
				}
				
			} catch(Exception e) {
  				FuncionesSwing.manageException2(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
  			}
    }
	
	public Boolean existeCambioValor(ControlTipo controlTipo,String sTipo) throws Exception {
		Boolean existeCambio=true;
		
		try {
			Pedido pedidoLocal=null;
			
			if(!this.getEsControlTabla()) {
				pedidoLocal=this.pedido;
			} else {
				pedidoLocal=this.pedidoAnterior;
			}
			
			if(controlTipo.equals(ControlTipo.TEXTBOX)) {
				


				if(sTipo.equals("pre_impresoPedido")) {
					if(pedidoLocal.getpre_impreso()==this.jInternalFrameDetalleFormPedido.jTextFieldpre_impresoPedido.getText()){existeCambio=false;}
				}
			}
		
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
  		}
		
		return existeCambio;
	}
	
	public void jTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.pedido);
				
				this.actualizarInformacion("INFO_PADRE",false,this.pedido);
				
				PedidoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pedido,new Object(),this.pedidoParameterGeneral,this.pedidoReturnGeneral);
							
				
				


			if(sTipo.equals("pre_impresoPedido")) {
				classes.add(new Classe(DetallePedido.class));

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormPedido(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"TEXTBOX",classes,false,esControlTabla);
			}
				
				PedidoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pedido,new Object(),this.pedidoParameterGeneral,this.pedidoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(Pedido.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Pedido.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaPedidoActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosPedido.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoAnterior =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.pedidoAnterior =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
  		}
    }	
	
	//CUANDO SE CAMBIA ALGUN FORMATO(TIPO DE LETRA,NEGRILLA,ETC)
	public void jTextFieldChangedUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextField jTextField=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			PedidoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pedido,new Object(),this.pedidoParameterGeneral,this.pedidoReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextField=(JTextField)evt.getSource();
			
			containerParent=jTextField.getParent();
					
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {					
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			if(sTipo.equals("pre_impresoPedido")) {
				classes.add(new Classe(DetallePedido.class));

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormPedido(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"TEXTBOX",classes,false,esControlTabla);
			}
			
			PedidoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pedido,new Object(),this.pedidoParameterGeneral,this.pedidoReturnGeneral);
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE QUITA ALGUN CARACTER
	public void jTextFieldRemoveUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE INGRESA ALGUN CARACTER
	public void jTextFieldInsertUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
  		}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jFormattedTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaPedidoActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				Container containerParentAux=null;
				JFormattedTextField JFormattedTextField=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JFormattedTextField=(JFormattedTextField)evt.getSource();
				
				containerParentAux=JFormattedTextField.getParent();
				
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.pedido);
				
				this.actualizarInformacion("INFO_PADRE",false,this.pedido);
				
				PedidoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pedido,new Object(),this.pedidoParameterGeneral,this.pedidoReturnGeneral);
								
						
				


				
				PedidoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pedido,new Object(),this.pedidoParameterGeneral,this.pedidoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(Pedido.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Pedido.class.getName(),sTipo,"DATE",esControlTabla,conIrServidorAplicacionParent,
							id,JFormattedTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Container containerParentAux=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParentAux=jTextField.getParent();
						
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.pedido);
				
				this.actualizarInformacion("INFO_PADRE",false,this.pedido);
				
				PedidoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pedido,new Object(),this.pedidoParameterGeneral,this.pedidoReturnGeneral);
								
				
				


				
				PedidoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pedido,new Object(),this.pedidoParameterGeneral,this.pedidoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(Pedido.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Pedido.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaPedidoActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosPedido.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoAnterior =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.pedidoAnterior =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.DATE,sTipo)) {
				this.actualizarInformacion("EVENTO_CONTROL",false,this.pedido);
				
				this.actualizarInformacion("INFO_PADRE",false,this.pedido);
			}	
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaPedidoActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosPedido.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoAnterior =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.pedidoAnterior =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaPedidoActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.pedido);
			
			this.actualizarInformacion("INFO_PADRE",false,this.pedido);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jTextAreaFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTAREA,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextArea jTextArea=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextArea=(JTextArea)evt.getSource();
				
				containerParent=jTextArea.getParent();
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.pedido);
				
				this.actualizarInformacion("INFO_PADRE",false,this.pedido);
				
				PedidoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pedido,new Object(),this.pedidoParameterGeneral,this.pedidoReturnGeneral);
							
				
				


			if(sTipo.equals("pre_impresoPedido")) {
				classes.add(new Classe(DetallePedido.class));

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormPedido(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"TEXTAREA",classes,false,esControlTabla);
			}
				
				PedidoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pedido,new Object(),this.pedidoParameterGeneral,this.pedidoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(Pedido.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Pedido.class.getName(),sTipo,"TEXTAREA",esControlTabla,conIrServidorAplicacionParent,
							id,jTextArea, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaPedidoActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosPedido.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidoAnterior =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.pedidoAnterior =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaChangedUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextArea jTextArea=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			PedidoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pedido,new Object(),this.pedidoParameterGeneral,this.pedidoReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextArea=(JTextArea)evt.getSource();
			
			containerParent=jTextArea.getParent();
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			if(sTipo.equals("pre_impresoPedido")) {
				classes.add(new Classe(DetallePedido.class));

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormPedido(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"TEXTAREA",classes,false,esControlTabla);
			}
			
			PedidoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pedido,new Object(),this.pedidoParameterGeneral,this.pedidoReturnGeneral);
			
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaRemoveUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaInsertUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jTextAreaActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaPedidoActual();
			
			this.actualizarInformacion("EVENTO_CONTROL",false,this.pedido);
			
			this.actualizarInformacion("INFO_PADRE",false,this.pedido);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JLabel jLabel=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jLabel=(JLabel)evt.getSource();
				
				containerParent=jLabel.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.pedido);
				
				this.actualizarInformacion("INFO_PADRE",false,this.pedido);
				
				PedidoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pedido,new Object(),this.pedidoParameterGeneral,this.pedidoReturnGeneral);
								
				
				


			if(sTipo.equals("pre_impresoPedido")) {
				classes.add(new Classe(DetallePedido.class));

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormPedido(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.LABEL,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"LABEL",classes,false,esControlTabla);
			}
				
				PedidoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pedido,new Object(),this.pedidoParameterGeneral,this.pedidoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(Pedido.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Pedido.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jLabel, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaPedidoActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosPedido.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoAnterior =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.pedidoAnterior =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jLabelActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaPedidoActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.pedido);
			
			this.actualizarInformacion("INFO_PADRE",false,this.pedido);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxItemListenerGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaPedidoActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
							
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.pedido);
				
				this.actualizarInformacion("INFO_PADRE",false,this.pedido);
				
				PedidoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.pedido,new Object(),this.pedidoParameterGeneral,this.pedidoReturnGeneral);
												
				
				if(sTipo.equals("SeleccionarTodosPedido")) {
					jCheckBoxSeleccionarTodosPedidoItemListener(evt);
				
				} else if(sTipo.equals("SeleccionadosPedido")) {
					jCheckBoxSeleccionadosPedidoItemListener(evt);
				
				} else if(sTipo.equals("NuevoToolBarPedido")) {
					
				}
				
				


				
				
				PedidoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.pedido,new Object(),this.pedidoParameterGeneral,this.pedidoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(Pedido.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Pedido.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.CHECKBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				//this.actualizarInformacion("EVENTO_CONTROL",false,this.pedido);
				
				//this.actualizarInformacion("INFO_PADRE",false,this.pedido);
				
				PedidoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.pedido,new Object(),this.pedidoParameterGeneral,this.pedidoReturnGeneral);
												
				
				


				
				
				PedidoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.pedido,new Object(),this.pedidoParameterGeneral,this.pedidoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(Pedido.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Pedido.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaPedidoActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosPedido.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidoAnterior =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.pedidoAnterior =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaPedidoActual();
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.pedido);
				
				this.actualizarInformacion("INFO_PADRE",false,this.pedido);
				
				PedidoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.pedido,new Object(),this.pedidoParameterGeneral,this.pedidoReturnGeneral);
				
				
				PedidoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.pedido,new Object(),this.pedidoParameterGeneral,this.pedidoReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO SE UTILIZA, SE USA EL DE ABAJO, IGUAL SE DEJA EL CODIGO COMO RESPALDO Y ES CASI IGUAL
	//ERROR:SI SE USA,AL HACER CLIC EN EL MISMO ELEMENTO O EJECUTAR SELECTEDITEM, SIEMPRE SE EJECUTA COMO SI ESCOGIERA OTRO ELEMENTO(NO DEBERIA)
	//@SuppressWarnings("rawtypes")
	public void jComboBoxActionPerformedGeneral(String sTipo,ActionEvent evt) {		
		try {
			/*		
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			Container containerParent=null;
			Component componentOpposite=null;
			Boolean esControlTabla=false;
				
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			PedidoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.pedido,new Object(),this.pedidoParameterGeneral,this.pedidoReturnGeneral);
			JComboBox jComboBoxGenerico=null;						
			
			if(evt.getSource().getClass().equals(JComboBox.class)
				|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
					
				jComboBoxGenerico=(JComboBox)evt.getSource();
				
				containerParent=jComboBoxGenerico.getParent();
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
			}
			
			String sFinalQueryCombo="";
			
			


			
			PedidoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pedido,new Object(),this.pedidoParameterGeneral,this.pedidoReturnGeneral);
			*/						
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
  		}		
    }
	
	@SuppressWarnings("rawtypes")
	public void jComboBoxItemStateChangedGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if (evt.getStateChange() == ItemEvent.SELECTED && this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaPedidoActual();
			
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=null;//evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}		
					
					this.esControlTabla=esControlTabla;
				}
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.pedido);
				
				this.actualizarInformacion("INFO_PADRE",false,this.pedido);
				
				PedidoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.pedido,new Object(),this.pedidoParameterGeneral,this.pedidoReturnGeneral);
				
				
				String sFinalQueryCombo="";
				
				


				
				PedidoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pedido,new Object(),this.pedidoParameterGeneral,this.pedidoReturnGeneral);
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(Pedido.class.getName());
								
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Pedido.class.getName(),sTipo,"COMBOBOX",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
  		}
    }
	
	//@SuppressWarnings("rawtypes")
	public void jComboBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		//MANEJADO EN ITEMLISTENER
		/*
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				
				//if(this.esUsoDesdeHijo) {
				//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				//}
				
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
				this.actualizarInformacion("EVENTO_CONTROL",false,this.pedido);
				
				this.actualizarInformacion("INFO_PADRE",false,this.pedido);
				
				PedidoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.pedido,new Object(),this.pedidoParameterGeneral,this.pedidoReturnGeneral);
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}
					
					this.esControlTabla=esControlTabla;
				}
				
				String sFinalQueryCombo="";
				
				


				
				PedidoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pedido,new Object(),this.pedidoParameterGeneral,this.pedidoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(Pedido.class.getName());
				
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Pedido.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
  		}
		
		*/
    }
	
	public void jComboBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaPedidoActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosPedido.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoAnterior =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.pedidoAnterior =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
  		}
    }		
	
	public void tableValueChangedGeneral(String sTipo,ListSelectionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				PedidoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pedido,new Object(),this.pedidoParameterGeneral,this.pedidoReturnGeneral);
				
				if(sTipo.equals("TableDatosSeleccionarPedido")) {
					//BYDAN_DESHABILITADO
					//try {jTableDatosPedidoListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
					
					//SOLO CUANDO MOUSE ES SOLTADO
					if (!evt.getValueIsAdjusting()) {
						//SELECCIONA FILA A OBJETO ACTUAL
						Integer intSelectedRow = this.jTableDatosPedido.getSelectedRow();
						
						if(intSelectedRow!=null && intSelectedRow>-1) {
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								this.pedido =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
							} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
								this.pedido =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(intSelectedRow)];
							}
							//ARCHITECTURE
							
							//System.out.println(this.pedido);
						}
					}
					
				} else if(sTipo.equals("jButtonCancelarPedido")) {
				
				}
				
				PedidoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pedido,new Object(),this.pedidoParameterGeneral,this.pedidoReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void tableMouseAdapterGeneral(String sTipo,MouseEvent evt) { 	  
		try {
			PedidoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.pedido,new Object(),this.pedidoParameterGeneral,this.pedidoReturnGeneral);
			
			if(sTipo.equals("DatosSeleccionarPedido")) {
				if (evt.getClickCount() == 2) {
					jButtonIdActionPerformed(null,jTableDatosPedido.getSelectedRow(),false,false);
				}	
			} else if(sTipo.equals("jButtonCancelarPedido")) {
			
			}
			
			PedidoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.pedido,new Object(),this.pedidoParameterGeneral,this.pedidoReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
  		}
    }
	
	;
	
	public void jButtonActionPerformedTecladoGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			this.startProcessPedido();
			
			PedidoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.pedido,new Object(),this.pedidoParameterGeneral,this.pedidoReturnGeneral);
			
			if(sTipo.equals("NuevoPedido")) {
				jButtonNuevoPedidoActionPerformed(evt,false);
				
			} else if(sTipo.equals("DuplicarPedido")) {
				jButtonDuplicarPedidoActionPerformed(evt,false);
				
			} else if(sTipo.equals("CopiarPedido")) {
				jButtonCopiarPedidoActionPerformed(evt);
				
			} else if(sTipo.equals("VerFormPedido")) {
				jButtonVerFormPedidoActionPerformed(evt);
				
			} else if(sTipo.equals("NuevoRelacionesPedido")) {
				jButtonNuevoPedidoActionPerformed(evt,true);
				
			} else if(sTipo.equals("ModificarPedido")) {
				jButtonModificarPedidoActionPerformed(evt);
				
			} else if(sTipo.equals("ActualizarPedido")) {
				jButtonActualizarPedidoActionPerformed(evt);
				
			} else if(sTipo.equals("EliminarPedido")) {
				jButtonEliminarPedidoActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosTablaPedido")) {
				jButtonGuardarCambiosPedidoActionPerformed(evt);
				
			} else if(sTipo.equals("CancelarPedido")) {
				jButtonCancelarPedidoActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarPedido")) {
				jButtonCerrarPedidoActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosPedido")) {
				jButtonGuardarCambiosPedidoActionPerformed(evt);
			
			} else if(sTipo.equals("NuevoGuardarCambiosPedido")) {
				jButtonNuevoGuardarCambiosPedidoActionPerformed(evt);
			
			} else if(sTipo.equals("AbrirOrderByPedido")) {
				jButtonAbrirOrderByPedidoActionPerformed(evt);
			
			} else if(sTipo.equals("RecargarInformacionPedido")) {
				jButtonRecargarInformacionPedidoActionPerformed(evt);
			
			} else if(sTipo.equals("AnterioresPedido")) {
				jButtonAnterioresPedidoActionPerformed(evt);			
			
			}  else if(sTipo.equals("SiguientesPedido")) {
				jButtonSiguientesPedidoActionPerformed(evt);			
			} 
			
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idPedidoBusqueda")) {
				this.jButtonidPedidoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaPedidoUpdate")) {
				this.jButtonid_empresaPedidoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaPedidoBusqueda")) {
				this.jButtonid_empresaPedidoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalPedidoUpdate")) {
				this.jButtonid_sucursalPedidoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalPedidoBusqueda")) {
				this.jButtonid_sucursalPedidoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_ejercicioPedidoUpdate")) {
				this.jButtonid_ejercicioPedidoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_ejercicioPedidoBusqueda")) {
				this.jButtonid_ejercicioPedidoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_periodoPedidoUpdate")) {
				this.jButtonid_periodoPedidoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_periodoPedidoBusqueda")) {
				this.jButtonid_periodoPedidoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_anioPedidoUpdate")) {
				this.jButtonid_anioPedidoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_anioPedidoBusqueda")) {
				this.jButtonid_anioPedidoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_mesPedidoUpdate")) {
				this.jButtonid_mesPedidoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_mesPedidoBusqueda")) {
				this.jButtonid_mesPedidoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_usuarioPedidoUpdate")) {
				this.jButtonid_usuarioPedidoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_usuarioPedidoBusqueda")) {
				this.jButtonid_usuarioPedidoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numeroPedidoBusqueda")) {
				this.jButtonnumeroPedidoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("pre_impresoPedidoBusqueda")) {
				this.jButtonpre_impresoPedidoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_emisionPedidoBusqueda")) {
				this.jButtonfecha_emisionPedidoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_entregaPedidoBusqueda")) {
				this.jButtonfecha_entregaPedidoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_monedaPedidoUpdate")) {
				this.jButtonid_monedaPedidoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_monedaPedidoBusqueda")) {
				this.jButtonid_monedaPedidoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("cotizacionPedidoBusqueda")) {
				this.jButtoncotizacionPedidoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_empleadoPedido")) {
				this.jButtonid_empleadoPedidoActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empleadoPedidoUpdate")) {
				this.jButtonid_empleadoPedidoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empleadoPedidoBusqueda")) {
				this.jButtonid_empleadoPedidoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_precioPedidoUpdate")) {
				this.jButtonid_tipo_precioPedidoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_precioPedidoBusqueda")) {
				this.jButtonid_tipo_precioPedidoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_formatoPedidoUpdate")) {
				this.jButtonid_formatoPedidoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_formatoPedidoBusqueda")) {
				this.jButtonid_formatoPedidoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("direccionPedidoBusqueda")) {
				this.jButtondireccionPedidoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_clientePedido")) {
				this.jButtonid_clientePedidoActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_clientePedidoUpdate")) {
				this.jButtonid_clientePedidoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_clientePedidoBusqueda")) {
				this.jButtonid_clientePedidoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("telefonoPedidoBusqueda")) {
				this.jButtontelefonoPedidoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("rucPedidoBusqueda")) {
				this.jButtonrucPedidoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sub_clientePedidoUpdate")) {
				this.jButtonid_sub_clientePedidoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sub_clientePedidoBusqueda")) {
				this.jButtonid_sub_clientePedidoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_vendedorPedido")) {
				this.jButtonid_vendedorPedidoActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_vendedorPedidoArbol")) {
				this.abrirFrameTreeVendedor("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_vendedorPedidoUpdate")) {
				this.jButtonid_vendedorPedidoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_vendedorPedidoBusqueda")) {
				this.jButtonid_vendedorPedidoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_consultorPedidoUpdate")) {
				this.jButtonid_consultorPedidoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_consultorPedidoBusqueda")) {
				this.jButtonid_consultorPedidoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("ordenPedidoBusqueda")) {
				this.jButtonordenPedidoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_responsablePedidoUpdate")) {
				this.jButtonid_responsablePedidoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_responsablePedidoBusqueda")) {
				this.jButtonid_responsablePedidoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_estado_pedidoPedidoUpdate")) {
				this.jButtonid_estado_pedidoPedidoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_estado_pedidoPedidoBusqueda")) {
				this.jButtonid_estado_pedidoPedidoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transportePedidoUpdate")) {
				this.jButtonid_transportePedidoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transportePedidoBusqueda")) {
				this.jButtonid_transportePedidoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_ruta_transportePedidoUpdate")) {
				this.jButtonid_ruta_transportePedidoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_ruta_transportePedidoBusqueda")) {
				this.jButtonid_ruta_transportePedidoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("valor_rutaPedidoBusqueda")) {
				this.jButtonvalor_rutaPedidoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_llamadaPedidoUpdate")) {
				this.jButtonid_tipo_llamadaPedidoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_llamadaPedidoBusqueda")) {
				this.jButtonid_tipo_llamadaPedidoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transportistaPedidoUpdate")) {
				this.jButtonid_transportistaPedidoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transportistaPedidoBusqueda")) {
				this.jButtonid_transportistaPedidoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("hora_inicioPedidoBusqueda")) {
				this.jButtonhora_inicioPedidoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("hora_finPedidoBusqueda")) {
				this.jButtonhora_finPedidoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descripcionPedidoBusqueda")) {
				this.jButtondescripcionPedidoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("cupoPedidoBusqueda")) {
				this.jButtoncupoPedidoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("saldoPedidoBusqueda")) {
				this.jButtonsaldoPedidoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("pedidosPedidoBusqueda")) {
				this.jButtonpedidosPedidoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("documentosPedidoBusqueda")) {
				this.jButtondocumentosPedidoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("disponiblePedidoBusqueda")) {
				this.jButtondisponiblePedidoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descuento_porcentajePedidoBusqueda")) {
				this.jButtondescuento_porcentajePedidoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("total_con_ivaPedidoBusqueda")) {
				this.jButtontotal_con_ivaPedidoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("sumanPedidoBusqueda")) {
				this.jButtonsumanPedidoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descuento_valorPedidoBusqueda")) {
				this.jButtondescuento_valorPedidoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("total_sin_ivaPedidoBusqueda")) {
				this.jButtontotal_sin_ivaPedidoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descuento_totalPedidoBusqueda")) {
				this.jButtondescuento_totalPedidoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fletePedidoBusqueda")) {
				this.jButtonfletePedidoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("totalPedidoBusqueda")) {
				this.jButtontotalPedidoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("subtotalPedidoBusqueda")) {
				this.jButtonsubtotalPedidoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("otroPedidoBusqueda")) {
				this.jButtonotroPedidoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("ultimo_costoPedidoBusqueda")) {
				this.jButtonultimo_costoPedidoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("ivaPedidoBusqueda")) {
				this.jButtonivaPedidoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("financiamientoPedidoBusqueda")) {
				this.jButtonfinanciamientoPedidoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("margen_utilidadPedidoBusqueda")) {
				this.jButtonmargen_utilidadPedidoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("otros_valoresPedidoBusqueda")) {
				this.jButtonotros_valoresPedidoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("anticipoPedidoBusqueda")) {
				this.jButtonanticipoPedidoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_tipo_cambioPedido")) {
				this.jButtonid_tipo_cambioPedidoActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_cambioPedidoUpdate")) {
				this.jButtonid_tipo_cambioPedidoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_cambioPedidoBusqueda")) {
				this.jButtonid_tipo_cambioPedidoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_centro_costoPedido")) {
				this.jButtonid_centro_costoPedidoActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_centro_costoPedidoArbol")) {
				this.abrirFrameTreeCentroCosto("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_centro_costoPedidoUpdate")) {
				this.jButtonid_centro_costoPedidoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_centro_costoPedidoBusqueda")) {
				this.jButtonid_centro_costoPedidoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_zonaPedidoUpdate")) {
				this.jButtonid_zonaPedidoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_zonaPedidoBusqueda")) {
				this.jButtonid_zonaPedidoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fechaPedidoBusqueda")) {
				this.jButtonfechaPedidoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_fuePedidoBusqueda")) {
				this.jButtonnumero_fuePedidoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_servidorPedidoBusqueda")) {
				this.jButtonfecha_servidorPedidoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("monto_retencionPedidoBusqueda")) {
				this.jButtonmonto_retencionPedidoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("icePedidoBusqueda")) {
				this.jButtonicePedidoBusquedaActionPerformed(evt);
			}
			
			PedidoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.pedido,new Object(),this.pedidoParameterGeneral,this.pedidoReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
			
  		}  finally {
      		this.finishProcessPedido();
      	}
    }
	
	public void internalFrameClosingInternalFrameGeneral(String sTipo,InternalFrameEvent evt) { 	  
		try {
			PedidoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.pedido,new Object(),this.pedidoParameterGeneral,this.pedidoReturnGeneral);
			
			if(sTipo.equals("CloseInternalFramePedido")) {
				closingInternalFramePedido();
				
			} else if(sTipo.equals("jButtonCancelarPedido")) {
				JInternalFrameBase jInternalFrameDetalleFormPedido = (JInternalFrameBase)evt.getSource();
	            	
	            PedidoBeanSwingJInternalFrame jInternalFrameParent=(PedidoBeanSwingJInternalFrame)jInternalFrameDetalleFormPedido.getjInternalFrameParent();
	            
				jInternalFrameParent.jButtonCancelarPedidoActionPerformed(null);
			}
			
			PedidoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.pedido,new Object(),this.pedidoParameterGeneral,this.pedidoReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void recargarFormPedido(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion) throws Exception {
		this.recargarFormPedido(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,false);
	}
	
	public void recargarFormPedido(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion,Boolean esControlTabla) throws Exception {
		if(this.permiteRecargarForm && this.permiteMantenimiento(this.pedido)) {
			if(!esControlTabla) {
				if(PedidoJInternalFrame.ISBINDING_MANUAL_TABLA) {			
					this.setVariablesFormularioToObjetoActualPedido(this.pedido,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);			
				}
				
				if(this.pedidoSessionBean.getEstaModoGuardarRelaciones()) {
					this.setVariablesFormularioRelacionesToObjetoActualPedido(this.pedido,classes);				
				}
			
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.pedidoReturnGeneral=pedidoLogic.procesarEventosPedidosWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.pedidoLogic.getPedidos(),this.pedido,this.pedidoParameterGeneral,this.isEsNuevoPedido,classes);//this.pedidoLogic.getPedido()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
					
					//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					//this.setVariablesObjetoReturnGeneralToBeanPedido(this.pedidoReturnGeneral,this.pedidoBean,false);
						
					//ACTUALIZA VARIABLES RELACIONES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					if(this.pedidoSessionBean.getEstaModoGuardarRelaciones()) {
						//this.setVariablesRelacionesObjetoReturnGeneralToBeanPedido(classes,this.pedidoReturnGeneral,this.pedidoBean,false);
					}
						
					if(this.pedidoReturnGeneral.getConRecargarPropiedades()) {
						//INICIALIZA VARIABLES COMBOS NORMALES (FK)
						this.setVariablesObjetoActualToFormularioForeignKeyPedido(this.pedidoReturnGeneral.getPedido());
							
						//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
						this.setVariablesObjetoActualToFormularioPedido(this.pedidoReturnGeneral.getPedido());	
					}
						
					if(this.pedidoReturnGeneral.getConRecargarRelaciones()) {
						//INICIALIZA VARIABLES RELACIONES A FORMULARIO
						this.setVariablesRelacionesObjetoActualToFormularioPedido(this.pedidoReturnGeneral.getPedido(),classes);//this.pedidoBean);	
					}									
					
				} else {				
					//INICIALIZA VARIABLES RELACIONES A FORMULARIO
					this.setVariablesRelacionesObjetoActualToFormularioPedido(this.pedido,classes);//this.pedidoBean);									
				}
			
				if(PedidoJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesFormularioToObjetoActualPedido(this.pedido,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysPedido(this.pedido);				
				}
				
			} else {
				
				if(((controlTipo.equals(ControlTipo.TEXTBOX) || controlTipo.equals(ControlTipo.DATE)
					|| controlTipo.equals(ControlTipo.TEXTAREA) || controlTipo.equals(ControlTipo.COMBOBOX)
					)				
					&& eventoTipo.equals(EventoTipo.CHANGE)
					)
					
					|| (controlTipo.equals(ControlTipo.CHECKBOX) && eventoTipo.equals(EventoTipo.CLIC))
					
				) { // && sTipoGeneral.equals("TEXTBOX")
					
					if(this.pedidoAnterior!=null) {
						this.pedido=this.pedidoAnterior;
					}
				}
				
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.pedidoReturnGeneral=pedidoLogic.procesarEventosPedidosWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.pedidoLogic.getPedidos(),this.pedido,this.pedidoParameterGeneral,this.isEsNuevoPedido,classes);//this.pedidoLogic.getPedido()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.pedidoSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.pedidoSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(this.pedidoReturnGeneral.getPedido(),pedidoLogic.getPedidos());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(this.pedidoReturnGeneral.getPedido(),this.pedidos);
				}
				//ARCHITECTURE
				
				//this.jTableDatosPedido.repaint();
				
				//((AbstractTableModel) this.jTableDatosPedido.getModel()).fireTableDataChanged();
				
				this.actualizarVisualTableDatosPedido();
			}
		}
	}
	
	public void actualizarVisualTableDatosPedido() throws Exception {
		
		PedidoModel pedidoModel=(PedidoModel)this.jTableDatosPedido.getModel();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			pedidoModel.pedidos=this.pedidoLogic.getPedidos();
		
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
			pedidoModel.pedidos=this.pedidos;
		}
		
		
		((PedidoModel) this.jTableDatosPedido.getModel()).fireTableDataChanged();
	}
	
	public void actualizarVisualTableDatosEventosVistaPedido() throws Exception {
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.actualizarLista(this.getpedidoAnterior(),this.pedidoLogic.getPedidos());
					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			this.actualizarLista(this.getpedidoAnterior(),this.pedidos);
		}
		//ARCHITECTURE
						
		this.actualizarFilaTotales();
						
		this.actualizarVisualTableDatosPedido();	
	}
	
	public void setVariablesRelacionesObjetoActualToFormularioPedido(Pedido pedido,ArrayList<Classe> classes) throws Exception { 
		try {
			
			for(Classe clas:classes) {
				if(clas.clas.equals(DetallePedido.class)) {
					this.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame.detallepedidoLogic.setDetallePedidos(pedido.getDetallePedidos());
					this.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame.inicializarActualizarBindingTablaDetallePedido(false);
					break;
				}
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setEventoParentGeneral(Boolean esUsoDesdeHijo,String sDominio,String sDominioTipo,String sTipo,String sTipoGeneral,Boolean esControlTabla,Boolean conIrServidorAplicacion,
						Long id,Component control, EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,ArrayList<String> arrClasses,
						Object evt,GeneralEntityParameterReturnGeneral generalEntityParameterGeneral,Object otro) { 	  
		try {
			
			if(this.permiteManejarEventosControl()) {
				
				//BASE COPIADO DESDE TEXTFIELLOSTFOCUS
				
				//EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				Boolean conTodasRelaciones=false;
				
				this.esUsoDesdeHijo=esUsoDesdeHijo;
										
				PedidoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.pedido,new Object(),generalEntityParameterGeneral,this.pedidoReturnGeneral);
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				for(String sClasse:arrClasses) {
					if(sClasse.equals("TODOS")) {
						conTodasRelaciones=true;
						break;
					}
				}
				
				if(this.pedidoSessionBean.getConGuardarRelaciones()) {
					if(conTodasRelaciones) {
						classes=PedidoConstantesFunciones.getClassesRelationshipsOfPedido(new ArrayList<Classe>(),DeepLoadType.NONE);
					} else {
						classes=PedidoConstantesFunciones.getClassesRelationshipsFromStringsOfPedido(arrClasses,DeepLoadType.NONE);
					}
				}
	
				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);
	
				this.recargarFormPedido(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,esControlTabla);
										
				PedidoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.pedido,new Object(),generalEntityParameterGeneral,this.pedidoReturnGeneral);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
  		}
    }
	
	/*
	public void setVariablesRelacionesObjetoBeanActualToFormularioPedido(PedidoBean pedidoBean) throws Exception { 
		try {
			
			for(Classe clas:classes) {
				if(clas.clas.equals(DetallePedido.class)) {
					this.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame.detallepedidoLogic.setDetallePedidos(pedido.getDetallePedidos());
					this.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame.inicializarActualizarBindingTablaDetallePedido(false);
					break;
				}
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesRelacionesObjetoReturnGeneralToBeanPedido(ArrayList<Classe> classes,PedidoReturnGeneral pedidoReturnGeneral,PedidoBean pedidoBean,Boolean conDefault) throws Exception {
		
			this.pedidoBean.setDetallePedidos(pedidoReturnGeneral.getPedido().getDetallePedidos());
	}
	*/
	
	public void setVariablesFormularioRelacionesToObjetoActualPedido(Pedido pedido,ArrayList<Classe> classes) throws Exception {
		
			for(Classe clas:classes) {
				if(clas.clas.equals(DetallePedido.class)) {
					pedido.setDetallePedidos(this.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame.detallepedidoLogic.getDetallePedidos());
					break;
				}
			}
	}
	
	public Boolean permiteManejarEventosControl() {
		Boolean permite=true;				
		
		if(this.estaModoNuevo || this.estaModoSeleccionar || this.estaModoEliminarGuardarCambios) {
			permite=false;
			
		} 
		
		//NO DEBE MEZCLARSE CONCEPTOS
		/*	
		if(!paraTabla && !this.permiteMantenimiento(this.pedido)) {
			System.out.println("ERROR:EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES");
				
			//JOptionPane.showMessageDialog(this,"EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES","EVENTO",JOptionPane.ERROR_MESSAGE);			
		}
		*/
		
		return permite;
	}
	
	public void inicializarFormDetalle() throws Exception {
		
		this.jInternalFrameDetalleFormPedido = new PedidoDetalleFormJInternalFrame(jDesktopPane,this.pedidoSessionBean.getConGuardarRelaciones(),this.pedidoSessionBean.getEsGuardarRelacionado(),this.cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		this.jDesktopPane.add(this.jInternalFrameDetalleFormPedido);
		this.jInternalFrameDetalleFormPedido.setVisible(false);
		this.jInternalFrameDetalleFormPedido.setSelected(false);						
		
		this.jInternalFrameDetalleFormPedido.setJInternalFrameParent(this);
		
		this.jInternalFrameDetalleFormPedido.pedidoLogic=this.pedidoLogic;
		
		this.cargarCombosFrameForeignKeyPedido("Formulario");
		
		this.inicializarActualizarBindingBotonesPermisosManualFormDetallePedido();
		this.inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetallePedido();
		
		this.initActionsFormDetalle();		
		
		this.initActionsCombosTodosForeignKeyPedido("Formulario");
		
		//TALVEZ conSetVariablesGlobales COMO if() 
		this.setVariablesGlobalesCombosForeignKeyPedido();
		
		this.cargarMenuRelaciones();
		
	}
	
	public void initActionsFormDetalle() {	
		
		this.jInternalFrameDetalleFormPedido.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarPedido"));
		
		this.jInternalFrameDetalleFormPedido.jButtonModificarPedido.addActionListener(new ButtonActionListener(this,"ModificarPedido"));

		
		this.jInternalFrameDetalleFormPedido.jButtonModificarToolBarPedido.addActionListener(new ButtonActionListener(this,"ModificarToolBarPedido"));
					
		this.jInternalFrameDetalleFormPedido.jMenuItemModificarPedido.addActionListener(new ButtonActionListener(this,"MenuItemModificarPedido"));		
		
		
		
		this.jInternalFrameDetalleFormPedido.jButtonActualizarPedido.addActionListener (new ButtonActionListener(this,"ActualizarPedido"));
		
		
		this.jInternalFrameDetalleFormPedido.jButtonActualizarToolBarPedido.addActionListener(new ButtonActionListener(this,"ActualizarToolBarPedido"));
						
		this.jInternalFrameDetalleFormPedido.jMenuItemActualizarPedido.addActionListener (new ButtonActionListener(this,"MenuItemActualizarPedido"));		
		
		
		
		this.jInternalFrameDetalleFormPedido.jButtonEliminarPedido.addActionListener (new ButtonActionListener(this,"EliminarPedido"));
		
		
		this.jInternalFrameDetalleFormPedido.jButtonEliminarToolBarPedido.addActionListener (new ButtonActionListener(this,"EliminarToolBarPedido"));
								
		this.jInternalFrameDetalleFormPedido.jMenuItemEliminarPedido.addActionListener (new ButtonActionListener(this,"MenuItemEliminarPedido"));		
		
		
		
		this.jInternalFrameDetalleFormPedido.jButtonCancelarPedido.addActionListener (new ButtonActionListener(this,"CancelarPedido"));
		
		
		this.jInternalFrameDetalleFormPedido.jButtonCancelarToolBarPedido.addActionListener (new ButtonActionListener(this,"CancelarToolBarPedido"));
					
		this.jInternalFrameDetalleFormPedido.jMenuItemCancelarPedido.addActionListener (new ButtonActionListener(this,"MenuItemCancelarPedido"));		
		
		
		
		
		
		this.jInternalFrameDetalleFormPedido.jMenuItemDetalleCerrarPedido.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarPedido"));		
		
		
		
		this.jInternalFrameDetalleFormPedido.jButtonGuardarCambiosToolBarPedido.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarPedido"));
		
		
		
		this.jInternalFrameDetalleFormPedido.jButtonGuardarCambiosToolBarPedido.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarPedido"));
		
		
		
		this.jInternalFrameDetalleFormPedido.jComboBoxTiposAccionesFormularioPedido.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioPedido"));
		
		
		//CAMPO EVENTO
		this.jInternalFrameDetalleFormPedido.jTextFieldpre_impresoPedido.addFocusListener(new TextFieldFocusListener(this,"pre_impresoPedido"));
		this.jInternalFrameDetalleFormPedido.jTextFieldpre_impresoPedido.addActionListener(new TextFieldActionListener(this,"pre_impresoPedido"));
		//this.jInternalFrameDetalleFormPedido.jTextFieldpre_impresoPedido.getDocument().addDocumentListener(new TextFieldDocumentListener(this,this.jTextFieldpre_impresoPedido,"pre_impresoPedido"));


				
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonidPedidoBusqueda.addActionListener(new ButtonActionListener(this,"idPedidoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedido.jButtonid_empresaPedidoUpdate.addActionListener(new ButtonActionListener(this,"id_empresaPedidoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonid_empresaPedidoBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaPedidoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedido.jButtonid_sucursalPedidoUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalPedidoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonid_sucursalPedidoBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalPedidoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedido.jButtonid_ejercicioPedidoUpdate.addActionListener(new ButtonActionListener(this,"id_ejercicioPedidoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonid_ejercicioPedidoBusqueda.addActionListener(new ButtonActionListener(this,"id_ejercicioPedidoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedido.jButtonid_periodoPedidoUpdate.addActionListener(new ButtonActionListener(this,"id_periodoPedidoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonid_periodoPedidoBusqueda.addActionListener(new ButtonActionListener(this,"id_periodoPedidoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedido.jButtonid_anioPedidoUpdate.addActionListener(new ButtonActionListener(this,"id_anioPedidoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonid_anioPedidoBusqueda.addActionListener(new ButtonActionListener(this,"id_anioPedidoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedido.jButtonid_mesPedidoUpdate.addActionListener(new ButtonActionListener(this,"id_mesPedidoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonid_mesPedidoBusqueda.addActionListener(new ButtonActionListener(this,"id_mesPedidoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedido.jButtonid_usuarioPedidoUpdate.addActionListener(new ButtonActionListener(this,"id_usuarioPedidoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonid_usuarioPedidoBusqueda.addActionListener(new ButtonActionListener(this,"id_usuarioPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonnumeroPedidoBusqueda.addActionListener(new ButtonActionListener(this,"numeroPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonpre_impresoPedidoBusqueda.addActionListener(new ButtonActionListener(this,"pre_impresoPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonfecha_emisionPedidoBusqueda.addActionListener(new ButtonActionListener(this,"fecha_emisionPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonfecha_entregaPedidoBusqueda.addActionListener(new ButtonActionListener(this,"fecha_entregaPedidoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedido.jButtonid_monedaPedidoUpdate.addActionListener(new ButtonActionListener(this,"id_monedaPedidoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonid_monedaPedidoBusqueda.addActionListener(new ButtonActionListener(this,"id_monedaPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtoncotizacionPedidoBusqueda.addActionListener(new ButtonActionListener(this,"cotizacionPedidoBusqueda"));
		//jButtonid_empleadoPedido.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_empleadoPedidoActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormPedido.jButtonid_empleadoPedido.addActionListener(new ButtonActionListener(this,"id_empleadoPedido"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedido.jButtonid_empleadoPedidoUpdate.addActionListener(new ButtonActionListener(this,"id_empleadoPedidoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonid_empleadoPedidoBusqueda.addActionListener(new ButtonActionListener(this,"id_empleadoPedidoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedido.jButtonid_tipo_precioPedidoUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_precioPedidoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonid_tipo_precioPedidoBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_precioPedidoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedido.jButtonid_formatoPedidoUpdate.addActionListener(new ButtonActionListener(this,"id_formatoPedidoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonid_formatoPedidoBusqueda.addActionListener(new ButtonActionListener(this,"id_formatoPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtondireccionPedidoBusqueda.addActionListener(new ButtonActionListener(this,"direccionPedidoBusqueda"));
		//jButtonid_clientePedido.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_clientePedidoActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormPedido.jButtonid_clientePedido.addActionListener(new ButtonActionListener(this,"id_clientePedido"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedido.jButtonid_clientePedidoUpdate.addActionListener(new ButtonActionListener(this,"id_clientePedidoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonid_clientePedidoBusqueda.addActionListener(new ButtonActionListener(this,"id_clientePedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtontelefonoPedidoBusqueda.addActionListener(new ButtonActionListener(this,"telefonoPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonrucPedidoBusqueda.addActionListener(new ButtonActionListener(this,"rucPedidoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedido.jButtonid_sub_clientePedidoUpdate.addActionListener(new ButtonActionListener(this,"id_sub_clientePedidoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonid_sub_clientePedidoBusqueda.addActionListener(new ButtonActionListener(this,"id_sub_clientePedidoBusqueda"));
		//jButtonid_vendedorPedido.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_vendedorPedidoActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormPedido.jButtonid_vendedorPedido.addActionListener(new ButtonActionListener(this,"id_vendedorPedido"));
		//jButtonid_vendedorPedidoArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeVendedor("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormPedido.jButtonid_vendedorPedidoArbol.addActionListener(new ButtonActionListener(this,"id_vendedorPedidoArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedido.jButtonid_vendedorPedidoUpdate.addActionListener(new ButtonActionListener(this,"id_vendedorPedidoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonid_vendedorPedidoBusqueda.addActionListener(new ButtonActionListener(this,"id_vendedorPedidoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedido.jButtonid_consultorPedidoUpdate.addActionListener(new ButtonActionListener(this,"id_consultorPedidoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonid_consultorPedidoBusqueda.addActionListener(new ButtonActionListener(this,"id_consultorPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonordenPedidoBusqueda.addActionListener(new ButtonActionListener(this,"ordenPedidoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedido.jButtonid_responsablePedidoUpdate.addActionListener(new ButtonActionListener(this,"id_responsablePedidoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonid_responsablePedidoBusqueda.addActionListener(new ButtonActionListener(this,"id_responsablePedidoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedido.jButtonid_estado_pedidoPedidoUpdate.addActionListener(new ButtonActionListener(this,"id_estado_pedidoPedidoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonid_estado_pedidoPedidoBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_pedidoPedidoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedido.jButtonid_transportePedidoUpdate.addActionListener(new ButtonActionListener(this,"id_transportePedidoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonid_transportePedidoBusqueda.addActionListener(new ButtonActionListener(this,"id_transportePedidoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedido.jButtonid_ruta_transportePedidoUpdate.addActionListener(new ButtonActionListener(this,"id_ruta_transportePedidoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonid_ruta_transportePedidoBusqueda.addActionListener(new ButtonActionListener(this,"id_ruta_transportePedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonvalor_rutaPedidoBusqueda.addActionListener(new ButtonActionListener(this,"valor_rutaPedidoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedido.jButtonid_tipo_llamadaPedidoUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_llamadaPedidoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonid_tipo_llamadaPedidoBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_llamadaPedidoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedido.jButtonid_transportistaPedidoUpdate.addActionListener(new ButtonActionListener(this,"id_transportistaPedidoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonid_transportistaPedidoBusqueda.addActionListener(new ButtonActionListener(this,"id_transportistaPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonhora_inicioPedidoBusqueda.addActionListener(new ButtonActionListener(this,"hora_inicioPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonhora_finPedidoBusqueda.addActionListener(new ButtonActionListener(this,"hora_finPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtondescripcionPedidoBusqueda.addActionListener(new ButtonActionListener(this,"descripcionPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtoncupoPedidoBusqueda.addActionListener(new ButtonActionListener(this,"cupoPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonsaldoPedidoBusqueda.addActionListener(new ButtonActionListener(this,"saldoPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonpedidosPedidoBusqueda.addActionListener(new ButtonActionListener(this,"pedidosPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtondocumentosPedidoBusqueda.addActionListener(new ButtonActionListener(this,"documentosPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtondisponiblePedidoBusqueda.addActionListener(new ButtonActionListener(this,"disponiblePedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtondescuento_porcentajePedidoBusqueda.addActionListener(new ButtonActionListener(this,"descuento_porcentajePedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtontotal_con_ivaPedidoBusqueda.addActionListener(new ButtonActionListener(this,"total_con_ivaPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonsumanPedidoBusqueda.addActionListener(new ButtonActionListener(this,"sumanPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtondescuento_valorPedidoBusqueda.addActionListener(new ButtonActionListener(this,"descuento_valorPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtontotal_sin_ivaPedidoBusqueda.addActionListener(new ButtonActionListener(this,"total_sin_ivaPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtondescuento_totalPedidoBusqueda.addActionListener(new ButtonActionListener(this,"descuento_totalPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonfletePedidoBusqueda.addActionListener(new ButtonActionListener(this,"fletePedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtontotalPedidoBusqueda.addActionListener(new ButtonActionListener(this,"totalPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonsubtotalPedidoBusqueda.addActionListener(new ButtonActionListener(this,"subtotalPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonotroPedidoBusqueda.addActionListener(new ButtonActionListener(this,"otroPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonultimo_costoPedidoBusqueda.addActionListener(new ButtonActionListener(this,"ultimo_costoPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonivaPedidoBusqueda.addActionListener(new ButtonActionListener(this,"ivaPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonfinanciamientoPedidoBusqueda.addActionListener(new ButtonActionListener(this,"financiamientoPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonmargen_utilidadPedidoBusqueda.addActionListener(new ButtonActionListener(this,"margen_utilidadPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonotros_valoresPedidoBusqueda.addActionListener(new ButtonActionListener(this,"otros_valoresPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonanticipoPedidoBusqueda.addActionListener(new ButtonActionListener(this,"anticipoPedidoBusqueda"));
		//jButtonid_tipo_cambioPedido.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_tipo_cambioPedidoActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormPedido.jButtonid_tipo_cambioPedido.addActionListener(new ButtonActionListener(this,"id_tipo_cambioPedido"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedido.jButtonid_tipo_cambioPedidoUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_cambioPedidoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonid_tipo_cambioPedidoBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_cambioPedidoBusqueda"));
		//jButtonid_centro_costoPedido.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_centro_costoPedidoActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormPedido.jButtonid_centro_costoPedido.addActionListener(new ButtonActionListener(this,"id_centro_costoPedido"));
		//jButtonid_centro_costoPedidoArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCentroCosto("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormPedido.jButtonid_centro_costoPedidoArbol.addActionListener(new ButtonActionListener(this,"id_centro_costoPedidoArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedido.jButtonid_centro_costoPedidoUpdate.addActionListener(new ButtonActionListener(this,"id_centro_costoPedidoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonid_centro_costoPedidoBusqueda.addActionListener(new ButtonActionListener(this,"id_centro_costoPedidoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedido.jButtonid_zonaPedidoUpdate.addActionListener(new ButtonActionListener(this,"id_zonaPedidoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonid_zonaPedidoBusqueda.addActionListener(new ButtonActionListener(this,"id_zonaPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonfechaPedidoBusqueda.addActionListener(new ButtonActionListener(this,"fechaPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonnumero_fuePedidoBusqueda.addActionListener(new ButtonActionListener(this,"numero_fuePedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonfecha_servidorPedidoBusqueda.addActionListener(new ButtonActionListener(this,"fecha_servidorPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonmonto_retencionPedidoBusqueda.addActionListener(new ButtonActionListener(this,"monto_retencionPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonicePedidoBusqueda.addActionListener(new ButtonActionListener(this,"icePedidoBusqueda"));
		
		
		;

		//TABBED PANE RELACIONES
		this.jInternalFrameDetalleFormPedido.jTabbedPaneRelacionesPedido.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesPedido"));
		
		;		
		//TABBED PANE RELACIONES FIN(EXTRA TAB)	
	}
	
	public void initActions() {				
		this.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"CloseInternalFramePedido"));
		
		if(this.jInternalFrameDetalleFormPedido!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPedido.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarPedido"));
		}
		
		this.jTableDatosPedido.getSelectionModel().addListSelectionListener(new TableListSelectionListener(this,"TableDatosSeleccionarPedido"));
		
		this.jTableDatosPedido.addMouseListener(new TableMouseAdapter(this,"DatosSeleccionarPedido"));
		
		this.jButtonNuevoPedido.addActionListener(new ButtonActionListener(this,"NuevoPedido"));
		
		this.jButtonDuplicarPedido.addActionListener(new ButtonActionListener(this,"DuplicarPedido"));
		
		this.jButtonCopiarPedido.addActionListener(new ButtonActionListener(this,"CopiarPedido"));
		
		this.jButtonVerFormPedido.addActionListener(new ButtonActionListener(this,"VerFormPedido"));
		
		
		this.jButtonNuevoToolBarPedido.addActionListener(new ButtonActionListener(this,"NuevoToolBarPedido"));
			
		this.jButtonDuplicarToolBarPedido.addActionListener(new ButtonActionListener(this,"DuplicarToolBarPedido"));
			
		this.jMenuItemNuevoPedido.addActionListener (new ButtonActionListener(this,"MenuItemNuevoPedido"));
			
		this.jMenuItemDuplicarPedido.addActionListener (new ButtonActionListener(this,"MenuItemDuplicarPedido"));		
		
		
		this.jButtonNuevoRelacionesPedido.addActionListener (new ButtonActionListener(this,"NuevoRelacionesPedido"));
		
		
		this.jButtonNuevoRelacionesToolBarPedido.addActionListener(new ButtonActionListener(this,"NuevoRelacionesToolBarPedido"));
			
		this.jMenuItemNuevoRelacionesPedido.addActionListener(new ButtonActionListener(this,"MenuItemNuevoRelacionesPedido"));		
		
		
		if(this.jInternalFrameDetalleFormPedido!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPedido.jButtonModificarPedido.addActionListener(new ButtonActionListener(this,"ModificarPedido"));
		}
		
		
		if(this.jInternalFrameDetalleFormPedido!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPedido.jButtonModificarToolBarPedido.addActionListener(new ButtonActionListener(this,"ModificarToolBarPedido"));
			
			this.jInternalFrameDetalleFormPedido.jMenuItemModificarPedido.addActionListener(new ButtonActionListener(this,"MenuItemModificarPedido"));		
		}
		
		
		if(this.jInternalFrameDetalleFormPedido!=null) { //if(this.conCargarFormDetalle) {			
			this.jInternalFrameDetalleFormPedido.jButtonActualizarPedido.addActionListener (new ButtonActionListener(this,"ActualizarPedido"));
		}
		
		
		if(this.jInternalFrameDetalleFormPedido!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPedido.jButtonActualizarToolBarPedido.addActionListener(new ButtonActionListener(this,"ActualizarToolBarPedido"));
				
			this.jInternalFrameDetalleFormPedido.jMenuItemActualizarPedido.addActionListener (new ButtonActionListener(this,"MenuItemActualizarPedido"));		
		}
		
		
		if(this.jInternalFrameDetalleFormPedido!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPedido.jButtonEliminarPedido.addActionListener (new ButtonActionListener(this,"EliminarPedido"));
		}
		
		
		if(this.jInternalFrameDetalleFormPedido!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPedido.jButtonEliminarToolBarPedido.addActionListener (new ButtonActionListener(this,"EliminarToolBarPedido"));
						
			this.jInternalFrameDetalleFormPedido.jMenuItemEliminarPedido.addActionListener (new ButtonActionListener(this,"MenuItemEliminarPedido"));		
		}
		
		
		if(this.jInternalFrameDetalleFormPedido!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPedido.jButtonCancelarPedido.addActionListener (new ButtonActionListener(this,"CancelarPedido"));
		}
		
		
		if(this.jInternalFrameDetalleFormPedido!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPedido.jButtonCancelarToolBarPedido.addActionListener (new ButtonActionListener(this,"CancelarToolBarPedido"));
			
			this.jInternalFrameDetalleFormPedido.jMenuItemCancelarPedido.addActionListener (new ButtonActionListener(this,"MenuItemCancelarPedido"));		
		}
		
		this.jButtonMostrarOcultarTablaToolBarPedido.addActionListener (new ButtonActionListener(this,"MostrarOcultarToolBarPedido"));		
		
		
		this.jButtonCerrarPedido.addActionListener (new ButtonActionListener(this,"CerrarPedido"));
		
		
		this.jButtonCerrarToolBarPedido.addActionListener (new ButtonActionListener(this,"CerrarToolBarPedido"));
			
		this.jMenuItemCerrarPedido.addActionListener (new ButtonActionListener(this,"MenuItemCerrarPedido"));
			
		if(this.jInternalFrameDetalleFormPedido!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPedido.jMenuItemDetalleCerrarPedido.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarPedido"));		
		}
		
		
		if(this.jInternalFrameDetalleFormPedido!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPedido.jButtonGuardarCambiosPedido.addActionListener (new ButtonActionListener(this,"GuardarCambiosPedido"));
		}
		
		
		if(this.jInternalFrameDetalleFormPedido!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPedido.jButtonGuardarCambiosToolBarPedido.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarPedido"));
		}
		
		this.jButtonCopiarToolBarPedido.addActionListener (new ButtonActionListener(this,"CopiarToolBarPedido"));
			
		this.jButtonVerFormToolBarPedido.addActionListener (new ButtonActionListener(this,"VerFormToolBarPedido"));
		
		this.jMenuItemGuardarCambiosPedido.addActionListener (new ButtonActionListener(this,"MenuItemGuardarCambiosPedido"));
			
		this.jMenuItemCopiarPedido.addActionListener (new ButtonActionListener(this,"MenuItemCopiarPedido"));		
		
		this.jMenuItemVerFormPedido.addActionListener (new ButtonActionListener(this,"MenuItemVerFormPedido"));		
		
		
		this.jButtonGuardarCambiosTablaPedido.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaPedido"));
		
		
		this.jButtonGuardarCambiosTablaToolBarPedido.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaToolBarPedido"));
			
		this.jMenuItemGuardarCambiosTablaPedido.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaPedido"));		
		
		
		
		this.jButtonRecargarInformacionPedido.addActionListener (new ButtonActionListener(this,"RecargarInformacionPedido"));
					
		this.jButtonRecargarInformacionToolBarPedido.addActionListener (new ButtonActionListener(this,"RecargarInformacionToolBarPedido"));
		
		this.jMenuItemRecargarInformacionPedido.addActionListener (new ButtonActionListener(this,"MenuItemRecargarInformacionPedido"));		
		
		
		
		this.jButtonAnterioresPedido.addActionListener (new ButtonActionListener(this,"AnterioresPedido"));
		
		
		this.jButtonAnterioresToolBarPedido.addActionListener (new ButtonActionListener(this,"AnterioresToolBarPedido"));
		
		this.jMenuItemAnterioresPedido.addActionListener (new ButtonActionListener(this,"MenuItemAnterioresPedido"));		
		
		
		this.jButtonSiguientesPedido.addActionListener (new ButtonActionListener(this,"SiguientesPedido"));
		
		
		this.jButtonSiguientesToolBarPedido.addActionListener (new ButtonActionListener(this,"SiguientesToolBarPedido"));
			
		this.jMenuItemSiguientesPedido.addActionListener (new ButtonActionListener(this,"MenuItemSiguientesPedido"));
			
		this.jMenuItemAbrirOrderByPedido.addActionListener (new ButtonActionListener(this,"MenuItemAbrirOrderByPedido"));
			
		this.jMenuItemMostrarOcultarPedido.addActionListener (new ButtonActionListener(this,"MenuItemMostrarOcultarPedido"));
			
		this.jMenuItemDetalleAbrirOrderByPedido.addActionListener (new ButtonActionListener(this,"MenuItemDetalleAbrirOrderByPedido"));
			
		this.jMenuItemDetalleMostarOcultarPedido.addActionListener (new ButtonActionListener(this,"MenuItemDetalleMostrarOcultarPedido"));		
		
		
		this.jButtonNuevoGuardarCambiosPedido.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosPedido"));
		
		
		this.jButtonNuevoGuardarCambiosToolBarPedido.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosToolBarPedido"));
			
		this.jMenuItemNuevoGuardarCambiosPedido.addActionListener (new ButtonActionListener(this,"MenuItemNuevoGuardarCambiosPedido"));		
		
		
		
		//SELECCIONAR TODOS
		
		this.jCheckBoxSeleccionarTodosPedido.addItemListener(new CheckBoxItemListener(this,"SeleccionarTodosPedido"));

		this.jCheckBoxSeleccionadosPedido.addItemListener(new CheckBoxItemListener(this,"SeleccionadosPedido"));
		
		if(this.jInternalFrameDetalleFormPedido!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPedido.jComboBoxTiposAccionesFormularioPedido.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioPedido"));
		}
		
		
		this.jComboBoxTiposRelacionesPedido.addActionListener (new ButtonActionListener(this,"TiposRelacionesPedido"));
			
		this.jComboBoxTiposAccionesPedido.addActionListener (new ButtonActionListener(this,"TiposAccionesPedido"));
					
		this.jComboBoxTiposSeleccionarPedido.addActionListener (new ButtonActionListener(this,"TiposSeleccionarPedido"));
			
		this.jTextFieldValorCampoGeneralPedido.addActionListener (new ButtonActionListener(this,"ValorCampoGeneralPedido"));		
		
		
		if(this.jInternalFrameDetalleFormPedido!=null) { //if(this.conCargarFormDetalle) {
		
		//CAMPO EVENTO
		this.jInternalFrameDetalleFormPedido.jTextFieldpre_impresoPedido.addFocusListener(new TextFieldFocusListener(this,"pre_impresoPedido"));
		this.jInternalFrameDetalleFormPedido.jTextFieldpre_impresoPedido.addActionListener(new TextFieldActionListener(this,"pre_impresoPedido"));
		//this.jInternalFrameDetalleFormPedido.jTextFieldpre_impresoPedido.getDocument().addDocumentListener(new TextFieldDocumentListener(this,this.jTextFieldpre_impresoPedido,"pre_impresoPedido"));


		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonidPedidoBusqueda.addActionListener(new ButtonActionListener(this,"idPedidoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedido.jButtonid_empresaPedidoUpdate.addActionListener(new ButtonActionListener(this,"id_empresaPedidoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonid_empresaPedidoBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaPedidoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedido.jButtonid_sucursalPedidoUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalPedidoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonid_sucursalPedidoBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalPedidoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedido.jButtonid_ejercicioPedidoUpdate.addActionListener(new ButtonActionListener(this,"id_ejercicioPedidoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonid_ejercicioPedidoBusqueda.addActionListener(new ButtonActionListener(this,"id_ejercicioPedidoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedido.jButtonid_periodoPedidoUpdate.addActionListener(new ButtonActionListener(this,"id_periodoPedidoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonid_periodoPedidoBusqueda.addActionListener(new ButtonActionListener(this,"id_periodoPedidoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedido.jButtonid_anioPedidoUpdate.addActionListener(new ButtonActionListener(this,"id_anioPedidoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonid_anioPedidoBusqueda.addActionListener(new ButtonActionListener(this,"id_anioPedidoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedido.jButtonid_mesPedidoUpdate.addActionListener(new ButtonActionListener(this,"id_mesPedidoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonid_mesPedidoBusqueda.addActionListener(new ButtonActionListener(this,"id_mesPedidoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedido.jButtonid_usuarioPedidoUpdate.addActionListener(new ButtonActionListener(this,"id_usuarioPedidoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonid_usuarioPedidoBusqueda.addActionListener(new ButtonActionListener(this,"id_usuarioPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonnumeroPedidoBusqueda.addActionListener(new ButtonActionListener(this,"numeroPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonpre_impresoPedidoBusqueda.addActionListener(new ButtonActionListener(this,"pre_impresoPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonfecha_emisionPedidoBusqueda.addActionListener(new ButtonActionListener(this,"fecha_emisionPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonfecha_entregaPedidoBusqueda.addActionListener(new ButtonActionListener(this,"fecha_entregaPedidoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedido.jButtonid_monedaPedidoUpdate.addActionListener(new ButtonActionListener(this,"id_monedaPedidoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonid_monedaPedidoBusqueda.addActionListener(new ButtonActionListener(this,"id_monedaPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtoncotizacionPedidoBusqueda.addActionListener(new ButtonActionListener(this,"cotizacionPedidoBusqueda"));
		//jButtonid_empleadoPedido.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_empleadoPedidoActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormPedido.jButtonid_empleadoPedido.addActionListener(new ButtonActionListener(this,"id_empleadoPedido"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedido.jButtonid_empleadoPedidoUpdate.addActionListener(new ButtonActionListener(this,"id_empleadoPedidoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonid_empleadoPedidoBusqueda.addActionListener(new ButtonActionListener(this,"id_empleadoPedidoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedido.jButtonid_tipo_precioPedidoUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_precioPedidoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonid_tipo_precioPedidoBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_precioPedidoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedido.jButtonid_formatoPedidoUpdate.addActionListener(new ButtonActionListener(this,"id_formatoPedidoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonid_formatoPedidoBusqueda.addActionListener(new ButtonActionListener(this,"id_formatoPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtondireccionPedidoBusqueda.addActionListener(new ButtonActionListener(this,"direccionPedidoBusqueda"));
		//jButtonid_clientePedido.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_clientePedidoActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormPedido.jButtonid_clientePedido.addActionListener(new ButtonActionListener(this,"id_clientePedido"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedido.jButtonid_clientePedidoUpdate.addActionListener(new ButtonActionListener(this,"id_clientePedidoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonid_clientePedidoBusqueda.addActionListener(new ButtonActionListener(this,"id_clientePedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtontelefonoPedidoBusqueda.addActionListener(new ButtonActionListener(this,"telefonoPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonrucPedidoBusqueda.addActionListener(new ButtonActionListener(this,"rucPedidoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedido.jButtonid_sub_clientePedidoUpdate.addActionListener(new ButtonActionListener(this,"id_sub_clientePedidoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonid_sub_clientePedidoBusqueda.addActionListener(new ButtonActionListener(this,"id_sub_clientePedidoBusqueda"));
		//jButtonid_vendedorPedido.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_vendedorPedidoActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormPedido.jButtonid_vendedorPedido.addActionListener(new ButtonActionListener(this,"id_vendedorPedido"));
		//jButtonid_vendedorPedidoArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeVendedor("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormPedido.jButtonid_vendedorPedidoArbol.addActionListener(new ButtonActionListener(this,"id_vendedorPedidoArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedido.jButtonid_vendedorPedidoUpdate.addActionListener(new ButtonActionListener(this,"id_vendedorPedidoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonid_vendedorPedidoBusqueda.addActionListener(new ButtonActionListener(this,"id_vendedorPedidoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedido.jButtonid_consultorPedidoUpdate.addActionListener(new ButtonActionListener(this,"id_consultorPedidoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonid_consultorPedidoBusqueda.addActionListener(new ButtonActionListener(this,"id_consultorPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonordenPedidoBusqueda.addActionListener(new ButtonActionListener(this,"ordenPedidoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedido.jButtonid_responsablePedidoUpdate.addActionListener(new ButtonActionListener(this,"id_responsablePedidoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonid_responsablePedidoBusqueda.addActionListener(new ButtonActionListener(this,"id_responsablePedidoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedido.jButtonid_estado_pedidoPedidoUpdate.addActionListener(new ButtonActionListener(this,"id_estado_pedidoPedidoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonid_estado_pedidoPedidoBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_pedidoPedidoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedido.jButtonid_transportePedidoUpdate.addActionListener(new ButtonActionListener(this,"id_transportePedidoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonid_transportePedidoBusqueda.addActionListener(new ButtonActionListener(this,"id_transportePedidoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedido.jButtonid_ruta_transportePedidoUpdate.addActionListener(new ButtonActionListener(this,"id_ruta_transportePedidoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonid_ruta_transportePedidoBusqueda.addActionListener(new ButtonActionListener(this,"id_ruta_transportePedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonvalor_rutaPedidoBusqueda.addActionListener(new ButtonActionListener(this,"valor_rutaPedidoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedido.jButtonid_tipo_llamadaPedidoUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_llamadaPedidoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonid_tipo_llamadaPedidoBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_llamadaPedidoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedido.jButtonid_transportistaPedidoUpdate.addActionListener(new ButtonActionListener(this,"id_transportistaPedidoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonid_transportistaPedidoBusqueda.addActionListener(new ButtonActionListener(this,"id_transportistaPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonhora_inicioPedidoBusqueda.addActionListener(new ButtonActionListener(this,"hora_inicioPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonhora_finPedidoBusqueda.addActionListener(new ButtonActionListener(this,"hora_finPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtondescripcionPedidoBusqueda.addActionListener(new ButtonActionListener(this,"descripcionPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtoncupoPedidoBusqueda.addActionListener(new ButtonActionListener(this,"cupoPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonsaldoPedidoBusqueda.addActionListener(new ButtonActionListener(this,"saldoPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonpedidosPedidoBusqueda.addActionListener(new ButtonActionListener(this,"pedidosPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtondocumentosPedidoBusqueda.addActionListener(new ButtonActionListener(this,"documentosPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtondisponiblePedidoBusqueda.addActionListener(new ButtonActionListener(this,"disponiblePedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtondescuento_porcentajePedidoBusqueda.addActionListener(new ButtonActionListener(this,"descuento_porcentajePedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtontotal_con_ivaPedidoBusqueda.addActionListener(new ButtonActionListener(this,"total_con_ivaPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonsumanPedidoBusqueda.addActionListener(new ButtonActionListener(this,"sumanPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtondescuento_valorPedidoBusqueda.addActionListener(new ButtonActionListener(this,"descuento_valorPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtontotal_sin_ivaPedidoBusqueda.addActionListener(new ButtonActionListener(this,"total_sin_ivaPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtondescuento_totalPedidoBusqueda.addActionListener(new ButtonActionListener(this,"descuento_totalPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonfletePedidoBusqueda.addActionListener(new ButtonActionListener(this,"fletePedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtontotalPedidoBusqueda.addActionListener(new ButtonActionListener(this,"totalPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonsubtotalPedidoBusqueda.addActionListener(new ButtonActionListener(this,"subtotalPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonotroPedidoBusqueda.addActionListener(new ButtonActionListener(this,"otroPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonultimo_costoPedidoBusqueda.addActionListener(new ButtonActionListener(this,"ultimo_costoPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonivaPedidoBusqueda.addActionListener(new ButtonActionListener(this,"ivaPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonfinanciamientoPedidoBusqueda.addActionListener(new ButtonActionListener(this,"financiamientoPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonmargen_utilidadPedidoBusqueda.addActionListener(new ButtonActionListener(this,"margen_utilidadPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonotros_valoresPedidoBusqueda.addActionListener(new ButtonActionListener(this,"otros_valoresPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonanticipoPedidoBusqueda.addActionListener(new ButtonActionListener(this,"anticipoPedidoBusqueda"));
		//jButtonid_tipo_cambioPedido.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_tipo_cambioPedidoActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormPedido.jButtonid_tipo_cambioPedido.addActionListener(new ButtonActionListener(this,"id_tipo_cambioPedido"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedido.jButtonid_tipo_cambioPedidoUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_cambioPedidoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonid_tipo_cambioPedidoBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_cambioPedidoBusqueda"));
		//jButtonid_centro_costoPedido.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_centro_costoPedidoActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormPedido.jButtonid_centro_costoPedido.addActionListener(new ButtonActionListener(this,"id_centro_costoPedido"));
		//jButtonid_centro_costoPedidoArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCentroCosto("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormPedido.jButtonid_centro_costoPedidoArbol.addActionListener(new ButtonActionListener(this,"id_centro_costoPedidoArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedido.jButtonid_centro_costoPedidoUpdate.addActionListener(new ButtonActionListener(this,"id_centro_costoPedidoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonid_centro_costoPedidoBusqueda.addActionListener(new ButtonActionListener(this,"id_centro_costoPedidoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedido.jButtonid_zonaPedidoUpdate.addActionListener(new ButtonActionListener(this,"id_zonaPedidoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonid_zonaPedidoBusqueda.addActionListener(new ButtonActionListener(this,"id_zonaPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonfechaPedidoBusqueda.addActionListener(new ButtonActionListener(this,"fechaPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonnumero_fuePedidoBusqueda.addActionListener(new ButtonActionListener(this,"numero_fuePedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonfecha_servidorPedidoBusqueda.addActionListener(new ButtonActionListener(this,"fecha_servidorPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonmonto_retencionPedidoBusqueda.addActionListener(new ButtonActionListener(this,"monto_retencionPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonicePedidoBusqueda.addActionListener(new ButtonActionListener(this,"icePedidoBusqueda"));
		}
		
		if(!this.conCargarMinimo) {
		//BYDAN_BUSQUEDAS
		
		
			this.jButtonFK_IdCentroCostoPedido.addActionListener(new ButtonActionListener(this,"FK_IdCentroCostoPedido"));

			this.jButtonBuscarFK_IdCentroCostoid_centro_costoPedido.addActionListener(new ButtonActionListener(this,"id_centro_costoPedido"));

			this.jButtonFK_IdClientePedido.addActionListener(new ButtonActionListener(this,"FK_IdClientePedido"));

			this.jButtonBuscarFK_IdClienteid_clientePedido.addActionListener(new ButtonActionListener(this,"id_clientePedido"));

			this.jButtonFK_IdConsultorPedido.addActionListener(new ButtonActionListener(this,"FK_IdConsultorPedido"));

			this.jButtonFK_IdEmpleadoPedido.addActionListener(new ButtonActionListener(this,"FK_IdEmpleadoPedido"));

			this.jButtonBuscarFK_IdEmpleadoid_empleadoPedido.addActionListener(new ButtonActionListener(this,"id_empleadoPedido"));

			this.jButtonFK_IdEstadoPedidoPedido.addActionListener(new ButtonActionListener(this,"FK_IdEstadoPedidoPedido"));

			this.jButtonFK_IdFormatoPedido.addActionListener(new ButtonActionListener(this,"FK_IdFormatoPedido"));

			this.jButtonFK_IdResponsablePedido.addActionListener(new ButtonActionListener(this,"FK_IdResponsablePedido"));

			this.jButtonFK_IdRutaTransportePedido.addActionListener(new ButtonActionListener(this,"FK_IdRutaTransportePedido"));

			this.jButtonFK_IdSubClientePedido.addActionListener(new ButtonActionListener(this,"FK_IdSubClientePedido"));

			this.jButtonFK_IdTipoCambioPedido.addActionListener(new ButtonActionListener(this,"FK_IdTipoCambioPedido"));

			this.jButtonBuscarFK_IdTipoCambioid_tipo_cambioPedido.addActionListener(new ButtonActionListener(this,"id_tipo_cambioPedido"));

			this.jButtonFK_IdTipoLlamadaPedido.addActionListener(new ButtonActionListener(this,"FK_IdTipoLlamadaPedido"));

			this.jButtonFK_IdTipoPrecioPedido.addActionListener(new ButtonActionListener(this,"FK_IdTipoPrecioPedido"));

			this.jButtonFK_IdTransportePedido.addActionListener(new ButtonActionListener(this,"FK_IdTransportePedido"));

			this.jButtonFK_IdTransportistaPedido.addActionListener(new ButtonActionListener(this,"FK_IdTransportistaPedido"));

			this.jButtonFK_IdVendedorPedido.addActionListener(new ButtonActionListener(this,"FK_IdVendedorPedido"));

			this.jButtonBuscarFK_IdVendedorid_vendedorPedido.addActionListener(new ButtonActionListener(this,"id_vendedorPedido"));

			this.jButtonFK_IdZonaPedido.addActionListener(new ButtonActionListener(this,"FK_IdZonaPedido"));
		
		
		
			//REPORTE DINAMICO
			
			if(this.jInternalFrameReporteDinamicoPedido!=null) {
				this.jInternalFrameReporteDinamicoPedido.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoPedido"));
				this.jInternalFrameReporteDinamicoPedido.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoPedido"));
				this.jInternalFrameReporteDinamicoPedido.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoPedido"));
			}
			
			//this.jButtonCerrarReporteDinamicoPedido.addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoPedido"));				
			//this.jButtonGenerarReporteDinamicoPedido.addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoPedido"));
			//this.jButtonGenerarExcelReporteDinamicoPedido.addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoPedido"));
				
				
			//IMPORTACION			
			if(this.jInternalFrameImportacionPedido!=null) {
				this.jInternalFrameImportacionPedido.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionPedido"));
				this.jInternalFrameImportacionPedido.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionPedido"));
				this.jInternalFrameImportacionPedido.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionPedido"));
			}
			
			//ORDER BY
			this.jButtonAbrirOrderByPedido.addActionListener (new ButtonActionListener(this,"AbrirOrderByPedido"));
			
			this.jButtonAbrirOrderByToolBarPedido.addActionListener (new ButtonActionListener(this,"AbrirOrderByToolBarPedido"));			
			
			if(this.jInternalFrameOrderByPedido!=null) {
				this.jInternalFrameOrderByPedido.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByPedido"));				
			}
			
			
		}
		
		
		
		if(!this.conCargarMinimo) {
			if(this.jInternalFrameDetalleFormPedido!=null) { //if(this.conCargarFormDetalle) {
			;
			}
		}
		
		
		//TABBED PANE RELACIONES
		if(this.jInternalFrameDetalleFormPedido!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPedido.jTabbedPaneRelacionesPedido.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesPedido"));
		
		;
		}
		//TABBED PANE RELACIONES FIN(EXTRA TAB)		
	}
	
	/*
	public void initActions() {
		String sMapKey = "";
		InputMap inputMap =null;
		
		this.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
            public void internalFrameClosing(InternalFrameEvent event) {          	
            	try {
            		closingInternalFramePedido();
				} catch (Exception e) {
					e.printStackTrace();
				}
            }
        });
		
		this.jInternalFrameDetalleFormPedido.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
	        public void internalFrameClosing(InternalFrameEvent event) {
	            JInternalFrameBase jInternalFrameDetalleFormPedido = (JInternalFrameBase)event.getSource();
	            	
	            PedidoBeanSwingJInternalFrame jInternalFrameParent=(PedidoBeanSwingJInternalFrame)jInternalFrameDetalleFormPedido.getjInternalFrameParent();
	                
	            try {
					jInternalFrameParent.jButtonCancelarPedidoActionPerformed(null);
					
					//jInternalFrameParent.dispose();
					//jInternalFrameParent=null;
					
				} catch (Exception e) {
					e.printStackTrace();
				}
	        }
	    });
			
		this.jTableDatosPedido.getSelectionModel().addListSelectionListener (
	                new ListSelectionListener() {
	                    public void valueChanged(ListSelectionEvent e) {
							//BYDAN_DESHABILITADO
	                    	//try {jTableDatosPedidoListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
	                    }
	                }
	     );
		
		this.jTableDatosPedido.addMouseListener(new MouseAdapter() {
			   public void mouseClicked(MouseEvent evt) {
				      if (evt.getClickCount() == 2) {
				    	  jButtonIdActionPerformed(null,jTableDatosPedido.getSelectedRow(),false,false);
				      }
				   }
		});
		
		this.jButtonNuevoPedido.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoPedidoActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoToolBarPedido.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoPedidoActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoPedido.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoPedidoActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoPedido";
		inputMap = this.jButtonNuevoPedido.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_N , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoPedido.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoPedidoActionPerformed(evt,false);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonNuevoRelacionesPedido.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoPedidoActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoRelacionesToolBarPedido.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoPedidoActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoRelacionesPedido.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoPedidoActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoRelacionesPedido";
		inputMap = this.jButtonNuevoRelacionesPedido.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_R , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoRelacionesPedido.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoPedidoActionPerformed(evt,true);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonModificarPedido.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarPedidoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonModificarToolBarPedido.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarPedidoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemModificarPedido.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarPedidoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ModificarPedido";
		inputMap = this.jButtonModificarPedido.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_M , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonModificarPedido.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonModificarPedidoActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonActualizarPedido.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarPedidoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonActualizarToolBarPedido.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarPedidoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemActualizarPedido.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarPedidoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ActualizarPedido";
		inputMap = this.jButtonActualizarPedido.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonActualizarPedido.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonActualizarPedidoActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonEliminarPedido.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarPedidoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonEliminarToolBarPedido.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarPedidoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
				
		this.jMenuItemEliminarPedido.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarPedidoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "EliminarPedido";
		inputMap = this.jButtonEliminarPedido.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_E , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonEliminarPedido.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonEliminarPedidoActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCancelarPedido.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarPedidoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCancelarToolBarPedido.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarPedidoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCancelarPedido.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarPedidoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CancelarPedido";
		inputMap = this.jButtonCancelarPedido.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_Q , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonCancelarPedido.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCancelarPedidoActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCerrarPedido.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarPedidoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCerrarToolBarPedido.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarPedidoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCerrarPedido.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarPedidoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemDetalleCerrarPedido.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  //try {jButtonCerrarPedidoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
					try {jButtonCancelarPedidoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CerrarPedido";
		inputMap = this.jButtonCerrarPedido.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_C , KeyEvent.ALT_MASK), sMapKey);
			
		this.jButtonCerrarPedido.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCerrarPedidoActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jInternalFrameDetalleFormPedido.jButtonGuardarCambiosPedido.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosPedidoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosToolBarPedido.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosPedidoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosPedido.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosPedidoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaPedido.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosPedidoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaToolBarPedido.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosPedidoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosTablaPedido.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosPedidoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "GuardarCambiosPedido";
		inputMap = this.jInternalFrameDetalleFormPedido.jButtonGuardarCambiosPedido.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jInternalFrameDetalleFormPedido.jButtonGuardarCambiosPedido.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonGuardarCambiosPedidoActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonRecargarInformacionPedido.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionPedidoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonRecargarInformacionToolBarPedido.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionPedidoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemRecargarInformacionPedido.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionPedidoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		this.jButtonAnterioresPedido.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresPedidoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAnterioresToolBarPedido.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresPedidoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemAnterioresPedido.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresPedidoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesPedido.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesPedidoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesToolBarPedido.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesPedidoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemSiguientesPedido.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesPedidoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosPedido.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosPedidoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosToolBarPedido.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosPedidoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoGuardarCambiosPedido.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosPedidoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		//SELECCIONAR TODOS
		this.jCheckBoxSeleccionarTodosPedido.addItemListener(new ItemListener() {		
			public void itemStateChanged(ItemEvent evt) {
				try {jCheckBoxSeleccionarTodosPedidoItemListener(evt);}catch(Exception e){e.printStackTrace();}
			}
		});

		this.jComboBoxTiposAccionesPedido.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposAccionesPedidoActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jComboBoxTiposSeleccionarPedido.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposSeleccionarPedidoActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jTextFieldValorCampoGeneralPedido.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jTextFieldValorCampoGeneralPedidoActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonidPedidoBusqueda.addActionListener(new ButtonActionListener(this,"idPedidoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedido.jButtonid_empresaPedidoUpdate.addActionListener(new ButtonActionListener(this,"id_empresaPedidoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonid_empresaPedidoBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaPedidoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedido.jButtonid_sucursalPedidoUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalPedidoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonid_sucursalPedidoBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalPedidoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedido.jButtonid_ejercicioPedidoUpdate.addActionListener(new ButtonActionListener(this,"id_ejercicioPedidoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonid_ejercicioPedidoBusqueda.addActionListener(new ButtonActionListener(this,"id_ejercicioPedidoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedido.jButtonid_periodoPedidoUpdate.addActionListener(new ButtonActionListener(this,"id_periodoPedidoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonid_periodoPedidoBusqueda.addActionListener(new ButtonActionListener(this,"id_periodoPedidoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedido.jButtonid_anioPedidoUpdate.addActionListener(new ButtonActionListener(this,"id_anioPedidoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonid_anioPedidoBusqueda.addActionListener(new ButtonActionListener(this,"id_anioPedidoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedido.jButtonid_mesPedidoUpdate.addActionListener(new ButtonActionListener(this,"id_mesPedidoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonid_mesPedidoBusqueda.addActionListener(new ButtonActionListener(this,"id_mesPedidoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedido.jButtonid_usuarioPedidoUpdate.addActionListener(new ButtonActionListener(this,"id_usuarioPedidoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonid_usuarioPedidoBusqueda.addActionListener(new ButtonActionListener(this,"id_usuarioPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonnumeroPedidoBusqueda.addActionListener(new ButtonActionListener(this,"numeroPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonpre_impresoPedidoBusqueda.addActionListener(new ButtonActionListener(this,"pre_impresoPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonfecha_emisionPedidoBusqueda.addActionListener(new ButtonActionListener(this,"fecha_emisionPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonfecha_entregaPedidoBusqueda.addActionListener(new ButtonActionListener(this,"fecha_entregaPedidoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedido.jButtonid_monedaPedidoUpdate.addActionListener(new ButtonActionListener(this,"id_monedaPedidoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonid_monedaPedidoBusqueda.addActionListener(new ButtonActionListener(this,"id_monedaPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtoncotizacionPedidoBusqueda.addActionListener(new ButtonActionListener(this,"cotizacionPedidoBusqueda"));
		//jButtonid_empleadoPedido.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_empleadoPedidoActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormPedido.jButtonid_empleadoPedido.addActionListener(new ButtonActionListener(this,"id_empleadoPedido"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedido.jButtonid_empleadoPedidoUpdate.addActionListener(new ButtonActionListener(this,"id_empleadoPedidoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonid_empleadoPedidoBusqueda.addActionListener(new ButtonActionListener(this,"id_empleadoPedidoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedido.jButtonid_tipo_precioPedidoUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_precioPedidoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonid_tipo_precioPedidoBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_precioPedidoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedido.jButtonid_formatoPedidoUpdate.addActionListener(new ButtonActionListener(this,"id_formatoPedidoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonid_formatoPedidoBusqueda.addActionListener(new ButtonActionListener(this,"id_formatoPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtondireccionPedidoBusqueda.addActionListener(new ButtonActionListener(this,"direccionPedidoBusqueda"));
		//jButtonid_clientePedido.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_clientePedidoActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormPedido.jButtonid_clientePedido.addActionListener(new ButtonActionListener(this,"id_clientePedido"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedido.jButtonid_clientePedidoUpdate.addActionListener(new ButtonActionListener(this,"id_clientePedidoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonid_clientePedidoBusqueda.addActionListener(new ButtonActionListener(this,"id_clientePedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtontelefonoPedidoBusqueda.addActionListener(new ButtonActionListener(this,"telefonoPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonrucPedidoBusqueda.addActionListener(new ButtonActionListener(this,"rucPedidoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedido.jButtonid_sub_clientePedidoUpdate.addActionListener(new ButtonActionListener(this,"id_sub_clientePedidoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonid_sub_clientePedidoBusqueda.addActionListener(new ButtonActionListener(this,"id_sub_clientePedidoBusqueda"));
		//jButtonid_vendedorPedido.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_vendedorPedidoActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormPedido.jButtonid_vendedorPedido.addActionListener(new ButtonActionListener(this,"id_vendedorPedido"));
		//jButtonid_vendedorPedidoArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeVendedor("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormPedido.jButtonid_vendedorPedidoArbol.addActionListener(new ButtonActionListener(this,"id_vendedorPedidoArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedido.jButtonid_vendedorPedidoUpdate.addActionListener(new ButtonActionListener(this,"id_vendedorPedidoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonid_vendedorPedidoBusqueda.addActionListener(new ButtonActionListener(this,"id_vendedorPedidoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedido.jButtonid_consultorPedidoUpdate.addActionListener(new ButtonActionListener(this,"id_consultorPedidoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonid_consultorPedidoBusqueda.addActionListener(new ButtonActionListener(this,"id_consultorPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonordenPedidoBusqueda.addActionListener(new ButtonActionListener(this,"ordenPedidoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedido.jButtonid_responsablePedidoUpdate.addActionListener(new ButtonActionListener(this,"id_responsablePedidoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonid_responsablePedidoBusqueda.addActionListener(new ButtonActionListener(this,"id_responsablePedidoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedido.jButtonid_estado_pedidoPedidoUpdate.addActionListener(new ButtonActionListener(this,"id_estado_pedidoPedidoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonid_estado_pedidoPedidoBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_pedidoPedidoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedido.jButtonid_transportePedidoUpdate.addActionListener(new ButtonActionListener(this,"id_transportePedidoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonid_transportePedidoBusqueda.addActionListener(new ButtonActionListener(this,"id_transportePedidoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedido.jButtonid_ruta_transportePedidoUpdate.addActionListener(new ButtonActionListener(this,"id_ruta_transportePedidoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonid_ruta_transportePedidoBusqueda.addActionListener(new ButtonActionListener(this,"id_ruta_transportePedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonvalor_rutaPedidoBusqueda.addActionListener(new ButtonActionListener(this,"valor_rutaPedidoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedido.jButtonid_tipo_llamadaPedidoUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_llamadaPedidoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonid_tipo_llamadaPedidoBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_llamadaPedidoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedido.jButtonid_transportistaPedidoUpdate.addActionListener(new ButtonActionListener(this,"id_transportistaPedidoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonid_transportistaPedidoBusqueda.addActionListener(new ButtonActionListener(this,"id_transportistaPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonhora_inicioPedidoBusqueda.addActionListener(new ButtonActionListener(this,"hora_inicioPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonhora_finPedidoBusqueda.addActionListener(new ButtonActionListener(this,"hora_finPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtondescripcionPedidoBusqueda.addActionListener(new ButtonActionListener(this,"descripcionPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtoncupoPedidoBusqueda.addActionListener(new ButtonActionListener(this,"cupoPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonsaldoPedidoBusqueda.addActionListener(new ButtonActionListener(this,"saldoPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonpedidosPedidoBusqueda.addActionListener(new ButtonActionListener(this,"pedidosPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtondocumentosPedidoBusqueda.addActionListener(new ButtonActionListener(this,"documentosPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtondisponiblePedidoBusqueda.addActionListener(new ButtonActionListener(this,"disponiblePedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtondescuento_porcentajePedidoBusqueda.addActionListener(new ButtonActionListener(this,"descuento_porcentajePedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtontotal_con_ivaPedidoBusqueda.addActionListener(new ButtonActionListener(this,"total_con_ivaPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonsumanPedidoBusqueda.addActionListener(new ButtonActionListener(this,"sumanPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtondescuento_valorPedidoBusqueda.addActionListener(new ButtonActionListener(this,"descuento_valorPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtontotal_sin_ivaPedidoBusqueda.addActionListener(new ButtonActionListener(this,"total_sin_ivaPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtondescuento_totalPedidoBusqueda.addActionListener(new ButtonActionListener(this,"descuento_totalPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonfletePedidoBusqueda.addActionListener(new ButtonActionListener(this,"fletePedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtontotalPedidoBusqueda.addActionListener(new ButtonActionListener(this,"totalPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonsubtotalPedidoBusqueda.addActionListener(new ButtonActionListener(this,"subtotalPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonotroPedidoBusqueda.addActionListener(new ButtonActionListener(this,"otroPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonultimo_costoPedidoBusqueda.addActionListener(new ButtonActionListener(this,"ultimo_costoPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonivaPedidoBusqueda.addActionListener(new ButtonActionListener(this,"ivaPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonfinanciamientoPedidoBusqueda.addActionListener(new ButtonActionListener(this,"financiamientoPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonmargen_utilidadPedidoBusqueda.addActionListener(new ButtonActionListener(this,"margen_utilidadPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonotros_valoresPedidoBusqueda.addActionListener(new ButtonActionListener(this,"otros_valoresPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonanticipoPedidoBusqueda.addActionListener(new ButtonActionListener(this,"anticipoPedidoBusqueda"));
		//jButtonid_tipo_cambioPedido.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_tipo_cambioPedidoActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormPedido.jButtonid_tipo_cambioPedido.addActionListener(new ButtonActionListener(this,"id_tipo_cambioPedido"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedido.jButtonid_tipo_cambioPedidoUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_cambioPedidoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonid_tipo_cambioPedidoBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_cambioPedidoBusqueda"));
		//jButtonid_centro_costoPedido.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_centro_costoPedidoActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormPedido.jButtonid_centro_costoPedido.addActionListener(new ButtonActionListener(this,"id_centro_costoPedido"));
		//jButtonid_centro_costoPedidoArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCentroCosto("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormPedido.jButtonid_centro_costoPedidoArbol.addActionListener(new ButtonActionListener(this,"id_centro_costoPedidoArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedido.jButtonid_centro_costoPedidoUpdate.addActionListener(new ButtonActionListener(this,"id_centro_costoPedidoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonid_centro_costoPedidoBusqueda.addActionListener(new ButtonActionListener(this,"id_centro_costoPedidoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedido.jButtonid_zonaPedidoUpdate.addActionListener(new ButtonActionListener(this,"id_zonaPedidoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonid_zonaPedidoBusqueda.addActionListener(new ButtonActionListener(this,"id_zonaPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonfechaPedidoBusqueda.addActionListener(new ButtonActionListener(this,"fechaPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonnumero_fuePedidoBusqueda.addActionListener(new ButtonActionListener(this,"numero_fuePedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonfecha_servidorPedidoBusqueda.addActionListener(new ButtonActionListener(this,"fecha_servidorPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonmonto_retencionPedidoBusqueda.addActionListener(new ButtonActionListener(this,"monto_retencionPedidoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedido.jButtonicePedidoBusqueda.addActionListener(new ButtonActionListener(this,"icePedidoBusqueda"));
		
		
		this.jButtonFK_IdCentroCostoPedido.addActionListener(new ButtonActionListener(this,"FK_IdCentroCostoPedido"));

		this.jButtonBuscarFK_IdCentroCostoid_centro_costoPedido.addActionListener(new ButtonActionListener(this,"id_centro_costoPedido"));

		this.jButtonFK_IdClientePedido.addActionListener(new ButtonActionListener(this,"FK_IdClientePedido"));

		this.jButtonBuscarFK_IdClienteid_clientePedido.addActionListener(new ButtonActionListener(this,"id_clientePedido"));

		this.jButtonFK_IdConsultorPedido.addActionListener(new ButtonActionListener(this,"FK_IdConsultorPedido"));

		this.jButtonFK_IdEmpleadoPedido.addActionListener(new ButtonActionListener(this,"FK_IdEmpleadoPedido"));

		this.jButtonBuscarFK_IdEmpleadoid_empleadoPedido.addActionListener(new ButtonActionListener(this,"id_empleadoPedido"));

		this.jButtonFK_IdEstadoPedidoPedido.addActionListener(new ButtonActionListener(this,"FK_IdEstadoPedidoPedido"));

		this.jButtonFK_IdFormatoPedido.addActionListener(new ButtonActionListener(this,"FK_IdFormatoPedido"));

		this.jButtonFK_IdResponsablePedido.addActionListener(new ButtonActionListener(this,"FK_IdResponsablePedido"));

		this.jButtonFK_IdRutaTransportePedido.addActionListener(new ButtonActionListener(this,"FK_IdRutaTransportePedido"));

		this.jButtonFK_IdSubClientePedido.addActionListener(new ButtonActionListener(this,"FK_IdSubClientePedido"));

		this.jButtonFK_IdTipoCambioPedido.addActionListener(new ButtonActionListener(this,"FK_IdTipoCambioPedido"));

		this.jButtonBuscarFK_IdTipoCambioid_tipo_cambioPedido.addActionListener(new ButtonActionListener(this,"id_tipo_cambioPedido"));

		this.jButtonFK_IdTipoLlamadaPedido.addActionListener(new ButtonActionListener(this,"FK_IdTipoLlamadaPedido"));

		this.jButtonFK_IdTipoPrecioPedido.addActionListener(new ButtonActionListener(this,"FK_IdTipoPrecioPedido"));

		this.jButtonFK_IdTransportePedido.addActionListener(new ButtonActionListener(this,"FK_IdTransportePedido"));

		this.jButtonFK_IdTransportistaPedido.addActionListener(new ButtonActionListener(this,"FK_IdTransportistaPedido"));

		this.jButtonFK_IdVendedorPedido.addActionListener(new ButtonActionListener(this,"FK_IdVendedorPedido"));

		this.jButtonBuscarFK_IdVendedorid_vendedorPedido.addActionListener(new ButtonActionListener(this,"id_vendedorPedido"));

		this.jButtonFK_IdZonaPedido.addActionListener(new ButtonActionListener(this,"FK_IdZonaPedido"));

		
		//REPORTE DINAMICO
		this.jButtonCerrarReporteDinamicoPedido.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarReporteDinamicoPedidoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarReporteDinamicoPedido.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarReporteDinamicoPedidoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarExcelReporteDinamicoPedido.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarExcelReporteDinamicoPedidoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		//IMPORTACION
		this.jButtonCerrarImportacionPedido.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarImportacionPedidoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarImportacionPedido.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarImportacionPedidoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAbrirImportacionPedido.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAbrirImportacionPedidoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
	}
	*/
	
	
	public void jComboBoxTiposSeleccionarPedidoActionListener(ActionEvent evt) throws Exception {    		
		try {			
			Reporte reporte=(Reporte)this.jComboBoxTiposSeleccionarPedido.getSelectedItem();
			
			//if(reporte.getsCodigo().equals("SELECCIONAR")) {
			//}					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
		}
	}	
	
	
	
	public void seleccionarTodosPedido(Boolean conSeleccionarTodos) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				for(Pedido pedidoAux:this.pedidoLogic.getPedidos()) {
					pedidoAux.setIsSelected(conSeleccionarTodos);
				}			
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(Pedido pedidoAux:pedidos) {
					pedidoAux.setIsSelected(conSeleccionarTodos);
				}
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarTodosPedidoItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingPedido(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			
			if(sTipoSeleccionar.equals("COLUMNAS")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(Pedido pedidoAux:this.pedidoLogic.getPedidos()) {
						pedidoAux.setIsSelected(this.isSeleccionarTodos);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(Pedido pedidoAux:pedidos) {
						pedidoAux.setIsSelected(this.isSeleccionarTodos);
					}
				}
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					for(Pedido pedidoAux:this.pedidoLogic.getPedidos()) {
					
					}	
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(Pedido pedidoAux:pedidos) {
						
					}
				}
			}
					
			if(existe) {
				this.inicializarActualizarBindingTablaPedido(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosPedido.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosPedido.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosPedido,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionadosPedidoItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingPedido(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			int[] arrNumRowsSeleccionados=null;
			
			arrNumRowsSeleccionados=this.jTableDatosPedido.getSelectedRows();
			
			Pedido pedidoLocal=new Pedido();
			
			//this.seleccionarTodosPedido(false);
			
			for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidoLocal =(Pedido) this.pedidoLogic.getPedidos().toArray()[this.jTableDatosPedido.convertRowIndexToModel(iNumRowSeleccionado)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					pedidoLocal =(Pedido) this.pedidos.toArray()[this.jTableDatosPedido.convertRowIndexToModel(iNumRowSeleccionado)];
				}
				
				pedidoLocal.setIsSelected(this.isSeleccionados);
			}
			
			/*
			if(sTipoSeleccionar.equals("SELECCIONAR")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(Pedido pedidoAux:this.pedidoLogic.getPedidos()) {
						pedidoAux.setIsSelected(this.isSeleccionados);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(Pedido pedidoAux:pedidos) {
						pedidoAux.setIsSelected(this.isSeleccionados);
					}
				}
			}
			*/
			
			//if(existe) {
				this.inicializarActualizarBindingTablaPedido(false);
			/*
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			*/
			
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosPedido.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosPedido.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosPedido,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarActualPedidoItemListener(ItemEvent evt,Long idActual) throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void ejecutarAuxiliarPedidoParaAjaxPostBack() throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jTextFieldValorCampoGeneralPedidoActionListener(ActionEvent evt) throws Exception {    		
		try {
			this.inicializarActualizarBindingPedido(false,false);
			
			//System.out.println(this.jTextFieldValorCampoGeneralPedido.getText());		
			
			Boolean existe=false;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(Pedido pedidoAux:this.pedidoLogic.getPedidos()) {
				
						if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_NUMERO)) {
							existe=true;
							pedidoAux.setnumero(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_PREIMPRESO)) {
							existe=true;
							pedidoAux.setpre_impreso(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_FECHAEMISION)) {
							existe=true;
							pedidoAux.setfecha_emision(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_FECHAENTREGA)) {
							existe=true;
							pedidoAux.setfecha_entrega(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_COTIZACION)) {
							existe=true;
							pedidoAux.setcotizacion(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_DIRECCION)) {
							existe=true;
							pedidoAux.setdireccion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_TELEFONO)) {
							existe=true;
							pedidoAux.settelefono(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_RUC)) {
							existe=true;
							pedidoAux.setruc(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_ORDEN)) {
							existe=true;
							pedidoAux.setorden(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_VALORRUTA)) {
							existe=true;
							pedidoAux.setvalor_ruta(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_HORAINICIO)) {
							existe=true;
							pedidoAux.sethora_inicio(Time.valueOf(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_HORAFIN)) {
							existe=true;
							pedidoAux.sethora_fin(Time.valueOf(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_DESCRIPCION)) {
							existe=true;
							pedidoAux.setdescripcion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_CUPO)) {
							existe=true;
							pedidoAux.setcupo(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_SALDO)) {
							existe=true;
							pedidoAux.setsaldo(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_PEDIDOS)) {
							existe=true;
							pedidoAux.setpedidos(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_DOCUMENTOS)) {
							existe=true;
							pedidoAux.setdocumentos(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_DISPONIBLE)) {
							existe=true;
							pedidoAux.setdisponible(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_DESCUENTOPORCENTAJE)) {
							existe=true;
							pedidoAux.setdescuento_porcentaje(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_TOTALCONIVA)) {
							existe=true;
							pedidoAux.settotal_con_iva(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_SUMAN)) {
							existe=true;
							pedidoAux.setsuman(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_DESCUENTOVALOR)) {
							existe=true;
							pedidoAux.setdescuento_valor(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_TOTALSINIVA)) {
							existe=true;
							pedidoAux.settotal_sin_iva(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_DESCUENTOTOTAL)) {
							existe=true;
							pedidoAux.setdescuento_total(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_FLETE)) {
							existe=true;
							pedidoAux.setflete(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_TOTAL)) {
							existe=true;
							pedidoAux.settotal(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_SUBTOTAL)) {
							existe=true;
							pedidoAux.setsubtotal(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_OTRO)) {
							existe=true;
							pedidoAux.setotro(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_ULTIMOCOSTO)) {
							existe=true;
							pedidoAux.setultimo_costo(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_IVA)) {
							existe=true;
							pedidoAux.setiva(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_FINANCIAMIENTO)) {
							existe=true;
							pedidoAux.setfinanciamiento(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_MARGENUTILIDAD)) {
							existe=true;
							pedidoAux.setmargen_utilidad(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_OTROSVALORES)) {
							existe=true;
							pedidoAux.setotros_valores(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_ANTICIPO)) {
							existe=true;
							pedidoAux.setanticipo(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_FECHA)) {
							existe=true;
							pedidoAux.setfecha(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_NUMEROFUE)) {
							existe=true;
							pedidoAux.setnumero_fue(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_FECHASERVIDOR)) {
							existe=true;
							pedidoAux.setfecha_servidor(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_MONTORETENCION)) {
							existe=true;
							pedidoAux.setmonto_retencion(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_ICE)) {
							existe=true;
							pedidoAux.setice(Double.parseDouble(this.sValorCampoGeneral));
						}
				}	
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(Pedido pedidoAux:pedidos) {
					
						if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_NUMERO)) {
							existe=true;
							pedidoAux.setnumero(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_PREIMPRESO)) {
							existe=true;
							pedidoAux.setpre_impreso(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_FECHAEMISION)) {
							existe=true;
							pedidoAux.setfecha_emision(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_FECHAENTREGA)) {
							existe=true;
							pedidoAux.setfecha_entrega(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_COTIZACION)) {
							existe=true;
							pedidoAux.setcotizacion(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_DIRECCION)) {
							existe=true;
							pedidoAux.setdireccion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_TELEFONO)) {
							existe=true;
							pedidoAux.settelefono(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_RUC)) {
							existe=true;
							pedidoAux.setruc(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_ORDEN)) {
							existe=true;
							pedidoAux.setorden(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_VALORRUTA)) {
							existe=true;
							pedidoAux.setvalor_ruta(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_HORAINICIO)) {
							existe=true;
							pedidoAux.sethora_inicio(Time.valueOf(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_HORAFIN)) {
							existe=true;
							pedidoAux.sethora_fin(Time.valueOf(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_DESCRIPCION)) {
							existe=true;
							pedidoAux.setdescripcion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_CUPO)) {
							existe=true;
							pedidoAux.setcupo(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_SALDO)) {
							existe=true;
							pedidoAux.setsaldo(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_PEDIDOS)) {
							existe=true;
							pedidoAux.setpedidos(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_DOCUMENTOS)) {
							existe=true;
							pedidoAux.setdocumentos(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_DISPONIBLE)) {
							existe=true;
							pedidoAux.setdisponible(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_DESCUENTOPORCENTAJE)) {
							existe=true;
							pedidoAux.setdescuento_porcentaje(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_TOTALCONIVA)) {
							existe=true;
							pedidoAux.settotal_con_iva(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_SUMAN)) {
							existe=true;
							pedidoAux.setsuman(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_DESCUENTOVALOR)) {
							existe=true;
							pedidoAux.setdescuento_valor(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_TOTALSINIVA)) {
							existe=true;
							pedidoAux.settotal_sin_iva(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_DESCUENTOTOTAL)) {
							existe=true;
							pedidoAux.setdescuento_total(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_FLETE)) {
							existe=true;
							pedidoAux.setflete(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_TOTAL)) {
							existe=true;
							pedidoAux.settotal(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_SUBTOTAL)) {
							existe=true;
							pedidoAux.setsubtotal(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_OTRO)) {
							existe=true;
							pedidoAux.setotro(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_ULTIMOCOSTO)) {
							existe=true;
							pedidoAux.setultimo_costo(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_IVA)) {
							existe=true;
							pedidoAux.setiva(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_FINANCIAMIENTO)) {
							existe=true;
							pedidoAux.setfinanciamiento(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_MARGENUTILIDAD)) {
							existe=true;
							pedidoAux.setmargen_utilidad(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_OTROSVALORES)) {
							existe=true;
							pedidoAux.setotros_valores(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_ANTICIPO)) {
							existe=true;
							pedidoAux.setanticipo(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_FECHA)) {
							existe=true;
							pedidoAux.setfecha(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_NUMEROFUE)) {
							existe=true;
							pedidoAux.setnumero_fue(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_FECHASERVIDOR)) {
							existe=true;
							pedidoAux.setfecha_servidor(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_MONTORETENCION)) {
							existe=true;
							pedidoAux.setmonto_retencion(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_ICE)) {
							existe=true;
							pedidoAux.setice(Double.parseDouble(this.sValorCampoGeneral));
						}
				}
			}
								
			if(existe) {
				this.inicializarActualizarBindingTablaPedido(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jComboBoxTiposAccionesPedidoActionListener(ActionEvent evt,Boolean esParaAccionDesdeFormulario) throws Exception {    				
		Boolean conSplash=true;
		
		try {							
		
			this.inicializarActualizarBindingPedido(false,false);
			
			Reporte reporte=new Reporte();
			
			this.esParaAccionDesdeFormularioPedido=esParaAccionDesdeFormulario;
			
			if(!esParaAccionDesdeFormulario) {
				
				reporte=(Reporte)this.jComboBoxTiposAccionesPedido.getSelectedItem();
				
			} else {
				reporte=(Reporte)this.jInternalFrameDetalleFormPedido.jComboBoxTiposAccionesFormularioPedido.getSelectedItem();
			}
			String sTipoAccionLocal=this.sTipoAccion;
			
			if(!esParaAccionDesdeFormulario) {
				sTipoAccionLocal=this.sTipoAccion;
			} else {
				sTipoAccionLocal=this.sTipoAccionFormulario;
			}
			
			if(sTipoAccionLocal.equals("GENERAR REPORTE")) {//reporte.getsCodigo().equals("GENERAR REPORTE")) {
				if(this.isPermisoReportePedido) {				
					conSplash=true;//false;										
					
					//this.startProcessPedido(conSplash);
				
					this.generarReportePedidosSeleccionados();
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesPedido.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormPedido.jComboBoxTiposAccionesFormularioPedido.setSelectedIndex(0);					
				}
			} else if(sTipoAccionLocal.equals("GENERAR REPORTE DINAMICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.mostrarReporteDinamicoPedidosSeleccionados();
				//this.jComboBoxTiposAccionesPedido.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("GENERAR_REPORTE_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoPedidosSeleccionados(false);
				//this.jComboBoxTiposAccionesPedido.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("GENERAR_REPORTE_TOTALES_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoPedidosSeleccionados(true);
				//this.jComboBoxTiposAccionesPedido.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessPedido();
				
				this.exportarPedidosSeleccionados();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesPedido.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormPedido.jComboBoxTiposAccionesFormularioPedido.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("IMPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				this.mostrarImportacionPedidos();
				//this.importarPedidos();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesPedido.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormPedido.jComboBoxTiposAccionesFormularioPedido.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS_EXCEL")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessPedido();
				//SE EXPORTA SEGUN TIPO ARCHIVO SELECCIONADO
				//this.exportarExcelPedidosSeleccionados();
				//this.jComboBoxTiposAccionesPedido.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("RECARGAR_FK")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {								
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE RECARGAR REFERENCIAS ?", "MANTENIMIENTO DE Pedido", JOptionPane.OK_CANCEL_OPTION) == 0) {
				
				//this.startProcessPedido();
				
					if(!esParaAccionDesdeFormulario || (esParaAccionDesdeFormulario && this.isEsNuevoPedido)) {
						this.esRecargarFks=true;
						this.cargarCombosForeignKeyPedido(false,false,false);
						this.esRecargarFks=false;
						
						JOptionPane.showMessageDialog(this,"PROCESO EJECUTADO CORRECTAMENTE","MANTENIMIENTO DE Pedido",JOptionPane.INFORMATION_MESSAGE);
					} else {
						JOptionPane.showMessageDialog(this,"ESTE PROCESO SOLO FUNCIONA AL INGRESAR UN NUEVO ELEMENTO","MANTENIMIENTO",JOptionPane.ERROR_MESSAGE);	
					}
					
					
				}
				
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesPedido.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormPedido.jComboBoxTiposAccionesFormularioPedido.setSelectedIndex(0);					
				}	
			} 			
			else if(PedidoBeanSwingJInternalFrame.EsProcesoReporte(reporte.getsCodigo())){
				if(this.isPermisoReportePedido) {				
					if(this.tieneElementosSeleccionados()) {
						this.quitarFilaTotales();
						
						conSplash=false;
						
						//this.startProcessPedido(conSplash);
					
						//this.actualizarParametrosGeneralPedido();
						
						this.generarReporteProcesoAccionPedidosSeleccionados(reporte.getsCodigo());
						
						if(!esParaAccionDesdeFormulario) {
							
							this.jComboBoxTiposAccionesPedido.setSelectedIndex(0);					
							
						} else {
							this.jInternalFrameDetalleFormPedido.jComboBoxTiposAccionesFormularioPedido.setSelectedIndex(0);					
						}
					} else {
						JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
			} 
			else if(PedidoBeanSwingJInternalFrameAdditional.EsProcesoAccionNormal(reporte.getsCodigo())){
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR "+reporte.getsDescripcion()+" EN PROCESO PedidoS SELECCIONADOS?", "MANTENIMIENTO DE Pedido", JOptionPane.OK_CANCEL_OPTION) == 0) {
						//this.startProcessPedido();
				
						this.actualizarParametrosGeneralPedido();
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {						
							this.pedidoReturnGeneral=pedidoLogic.procesarAccionPedidosWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,sTipoAccionLocal,this.pedidoLogic.getPedidos(),this.pedidoParameterGeneral);
						
						} else if(Constantes.ISUSAEJBREMOTE) {
						
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
						this.procesarPedidoReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesPedido.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormPedido.jComboBoxTiposAccionesFormularioPedido.setSelectedIndex(0);					
					}
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}				
			} 
			else {
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					this.actualizarParametrosGeneralPedido();
					
					PedidoBeanSwingJInternalFrameAdditional.ProcesarAccion(reporte.getsCodigo(),reporte.getsDescripcion(),this);
					
					this.procesarPedidoReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesPedido.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormPedido.jComboBoxTiposAccionesFormularioPedido.setSelectedIndex(0);					
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}
			}
		} catch(Exception e) {
			this.esRecargarFks=false;
			
			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
		
		}  finally {
      		//this.finishProcessPedido(conSplash);
      	}
	}
	
	public void jComboBoxTiposRelacionesPedidoActionListener(ActionEvent evt) throws Exception {    				
		Boolean conSplash=true;
		
		try {			
			this.startProcessPedido();
			
			if(this.jInternalFrameDetalleFormPedido==null) { //if(!this.conCargarFormDetalle) {			
				this.inicializarFormDetalle();
			}
			
			ArrayList<Pedido> pedidosSeleccionados=new ArrayList<Pedido>();		
			Pedido pedido=new Pedido();
			
			int rowIndex=-1;//CON ESTO SE DESHABILITA SELECCION POR INDICE
			
			this.inicializarActualizarBindingPedido(false,false);
			
			Reporte reporte=new Reporte();
			
			
			reporte=(Reporte)this.jComboBoxTiposRelacionesPedido.getSelectedItem();
			
			
			
			
			pedidosSeleccionados=this.getPedidosSeleccionados(true);
			//this.sTipoAccion;
			
			if(pedidosSeleccionados.size()==1) {
				for(Pedido pedidoAux:pedidosSeleccionados) {
					pedido=pedidoAux;
				}
				
				if(this.sTipoAccion.equals("NONE")) {
				
				}
				
				else if(this.sTipoRelacion.equals("Detalle Pedido")) {
					jButtonDetallePedidoActionPerformed(null,rowIndex,true,false,pedido);
				}
			} else {
				JOptionPane.showMessageDialog(this,"SELECCIONE SOLO UN REGISTRO","RELACIONES",JOptionPane.ERROR_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.finishProcessPedido();
			
      		//this.finishProcessPedido(conSplash);
      	}
	}
			
	public static Boolean EsProcesoReporte(String sTipoProceso) throws Exception {
		Boolean esProcesoAccionRepoorte=false;

		if(sTipoProceso.contains("REPORTE_")) {
			 esProcesoAccionRepoorte=true;
		}

		return esProcesoAccionRepoorte;
	}
	
	public void procesarPedidoReturnGeneral() throws Exception {
		if(this.pedidoReturnGeneral.getConRetornoEstaProcesado()) {
			JOptionPane.showMessageDialog(this,this.pedidoReturnGeneral.getsMensajeProceso(),"PROCESO",JOptionPane.INFORMATION_MESSAGE);
		}
		
		if(this.pedidoReturnGeneral.getConMostrarMensaje()) {
			JOptionPane.showMessageDialog(this,this.pedidoReturnGeneral.getsMensajeProceso(),"PROCESO",FuncionesSwing.getColorSelectedBackground(this.pedidoReturnGeneral.getsTipoMensaje()));
		}
		
		if(this.pedidoReturnGeneral.getConRecargarInformacion()) {
			this.procesarBusqueda(this.sAccionBusqueda);
			
			this.inicializarActualizarBindingPedido(false);
		}
		
		if(this.pedidoReturnGeneral.getConRetornoLista() || this.pedidoReturnGeneral.getConRetornoObjeto()) {
			if(this.pedidoReturnGeneral.getConRetornoLista()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.pedidoLogic.setPedidos(this.pedidoReturnGeneral.getPedidos());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			if(this.pedidoReturnGeneral.getConRetornoObjeto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.pedidoLogic.setPedido(this.pedidoReturnGeneral.getPedido());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			this.inicializarActualizarBindingPedido(false);
		}
	}
	
	public void actualizarParametrosGeneralPedido() throws Exception {
		
		
	}
	
	public ArrayList<Pedido> getPedidosSeleccionados(Boolean conSeleccionarTodosAutomatico) throws Exception {
		ArrayList<Pedido> pedidosSeleccionados=new ArrayList<Pedido>();
		Boolean existe=false;
		
		if(!this.esParaAccionDesdeFormularioPedido) {
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				
				for(Pedido pedidoAux:pedidoLogic.getPedidos()) {
					if(pedidoAux.getIsSelected()) {
						pedidosSeleccionados.add(pedidoAux);				
					}
				}
				
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(Pedido pedidoAux:this.pedidos) {
					if(pedidoAux.getIsSelected()) {
						pedidosSeleccionados.add(pedidoAux);				
					}
				}
			}
			
			if(pedidosSeleccionados.size()>0) {
				existe=true;
			}
			
			//SI NO ESTA NINGUNO SELECCIONADO SE SELECCIONA TODOS
			if(!existe) {
				if(conSeleccionarTodosAutomatico) {
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						pedidosSeleccionados.addAll(this.pedidoLogic.getPedidos());
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						pedidosSeleccionados.addAll(this.pedidos);				
					}
				}
			}
		} else {
			pedidosSeleccionados.add(this.pedido);
		}
		
		return pedidosSeleccionados;
	}
	
	public void actualizarVariablesTipoReporte(Boolean esReporteNormal,Boolean esReporteDinamico,Boolean esReporteAccionProceso,String sPath) {
		if(esReporteNormal) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=false;
			
		} else if(esReporteAccionProceso) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=true;
			
		} else if(esReporteDinamico) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=true;
			this.esReporteAccionProceso=false;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");			
		}
	}
	
	public void generarReportePedidosSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoReporte.equals("NORMAL") || this.sTipoReporte.equals("FORMULARIO")) {
			existe=true;								
			this.generarReporteNormalPedidosSeleccionados();
			
		} else if(this.sTipoReporte.equals("DINAMICO")) {
			existe=true;
			this.mostrarReporteDinamicoPedidosSeleccionados();
			
		} else if(this.sTipoReporte.equals("GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoPedidosSeleccionados(false);
			
		} else if(this.sTipoReporte.equals("TOTALES_GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoPedidosSeleccionados(true);
		}
		else if(this.sTipoReporte.equals("RELACIONES")) {
			//SI SE GENERA REPORTE RELACIONES
			existe=true;
			this.generarReporteRelacionesPedidosSeleccionados();
		}					
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE REPORTE VALIDO","REPORTE DE Pedido",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void generarReporteRelacionesPedidosSeleccionados() throws Exception {
		ArrayList<Pedido> pedidosSeleccionados=new ArrayList<Pedido>();		
		
		pedidosSeleccionados=this.getPedidosSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
					
		//this.sTipoReporteExtra="MasterRelaciones";
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		
		this.generarReportePedidos("Todos",pedidosSeleccionados);
		
	}	
	
	public void generarReporteNormalPedidosSeleccionados() throws Exception {
		ArrayList<Pedido> pedidosSeleccionados=new ArrayList<Pedido>();		
		
		pedidosSeleccionados=this.getPedidosSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
								
		if(this.sTipoReporte.equals("FORMULARIO")) {
			this.sTipoReporteExtra="Vertical";					
		}
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.generarReportePedidos("Todos",pedidosSeleccionados);
	}		
	
	public void generarReporteProcesoAccionPedidosSeleccionados(String sProcesoReporte) throws Exception {
		ArrayList<Pedido> pedidosSeleccionados=new ArrayList<Pedido>();
		
		pedidosSeleccionados=this.getPedidosSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(false,false,true,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.sTipoReporteExtra=sProcesoReporte.toLowerCase();
		
		this.esReporteAccionProceso=true;
		this.generarReportePedidos("Todos",pedidosSeleccionados);
		this.esReporteAccionProceso=false;
	}
	
	
	public void mostrarReporteDinamicoPedidosSeleccionados() throws Exception {
		ArrayList<Pedido> pedidosSeleccionados=new ArrayList<Pedido>();		
		
		
		this.abrirInicializarFrameReporteDinamicoPedido();
		
		
		pedidosSeleccionados=this.getPedidosSeleccionados(true);
		
		this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirFrameReporteDinamicoPedido();
		
		
		//this.generarReportePedidos("Todos",pedidosSeleccionados ,pedidoImplementable,pedidoImplementableHome);
	}
	
	public void mostrarImportacionPedidos() throws Exception {
		//this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirInicializarFrameImportacionPedido();
		
		this.abrirFrameImportacionPedido();		
		
			
		//this.generarReportePedidos("Todos",pedidosSeleccionados ,pedidoImplementable,pedidoImplementableHome);
	}
	
	public void importarPedidos() throws Exception {		
	
	}
	
	public void exportarPedidosSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoArchivoReporte.equals("EXCEL")) {
			existe=true;
			this.exportarExcelPedidosSeleccionados();
			
		} else if(this.sTipoArchivoReporte.equals("TEXTO")) {
			existe=true;
			this.exportarTextoPedidosSeleccionados();
		
		} else if(this.sTipoArchivoReporte.equals("XML")) {
			existe=true;
			this.exportarXmlPedidosSeleccionados();
		} 
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE ARCHIVO VALIDO","EXPORTACION DE Pedido",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void exportarTextoPedidosSeleccionados() throws Exception {
		ArrayList<Pedido> pedidosSeleccionados=new ArrayList<Pedido>();		
		
		pedidosSeleccionados=this.getPedidosSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"pedido."+"txt";//Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario);
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		BufferedWriter bufferedWriter = null;
		FileWriter fileWriter=null;
		
		fileWriter=new FileWriter(sPath);
		
		bufferedWriter = new BufferedWriter(fileWriter);
		
		try {
			if(conCabecera) {
				sFilaCabecera=this.getFilaCabeceraExportarPedido(sDelimiter);
				
				bufferedWriter.write(sFilaCabecera);
			}				
			
			for(Pedido pedidoAux:pedidosSeleccionados) {
				sFilaDatos=this.getFilaDatosExportarPedido(pedidoAux,sDelimiter);
				
				bufferedWriter.write(sFilaDatos);
				
				//pedidoAux.setsDetalleGeneralEntityReporte(pedidoAux.toString());			
			}
			
			bufferedWriter.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.pedidoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Pedido",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {
       		if (bufferedWriter != null) {
				bufferedWriter.close();
			}
		}
	}
	
	public String getFilaCabeceraExportarPedido(String sDelimiter) {
		String sFilaCabecera="";
		
		
		sFilaCabecera+=PedidoConstantesFunciones.LABEL_ID;

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoConstantesFunciones.LABEL_VERSIONROW;
		}

		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoConstantesFunciones.LABEL_IDEMPRESA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoConstantesFunciones.LABEL_IDSUCURSAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoConstantesFunciones.LABEL_IDEJERCICIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoConstantesFunciones.LABEL_IDPERIODO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoConstantesFunciones.LABEL_IDANIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoConstantesFunciones.LABEL_IDMES;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoConstantesFunciones.LABEL_IDUSUARIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoConstantesFunciones.LABEL_NUMERO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoConstantesFunciones.LABEL_PREIMPRESO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoConstantesFunciones.LABEL_FECHAEMISION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoConstantesFunciones.LABEL_FECHAENTREGA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoConstantesFunciones.LABEL_IDMONEDA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoConstantesFunciones.LABEL_COTIZACION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoConstantesFunciones.LABEL_IDEMPLEADO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoConstantesFunciones.LABEL_IDTIPOPRECIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoConstantesFunciones.LABEL_IDFORMATO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoConstantesFunciones.LABEL_DIRECCION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoConstantesFunciones.LABEL_IDCLIENTE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoConstantesFunciones.LABEL_TELEFONO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoConstantesFunciones.LABEL_RUC;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoConstantesFunciones.LABEL_IDSUBCLIENTE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoConstantesFunciones.LABEL_IDVENDEDOR;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoConstantesFunciones.LABEL_IDCONSULTOR;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoConstantesFunciones.LABEL_ORDEN;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoConstantesFunciones.LABEL_IDRESPONSABLE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoConstantesFunciones.LABEL_IDESTADOPEDIDO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoConstantesFunciones.LABEL_IDTRANSPORTE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoConstantesFunciones.LABEL_IDRUTATRANSPORTE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoConstantesFunciones.LABEL_VALORRUTA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoConstantesFunciones.LABEL_IDTIPOLLAMADA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoConstantesFunciones.LABEL_IDTRANSPORTISTA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoConstantesFunciones.LABEL_HORAINICIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoConstantesFunciones.LABEL_HORAFIN;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoConstantesFunciones.LABEL_DESCRIPCION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoConstantesFunciones.LABEL_CUPO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoConstantesFunciones.LABEL_SALDO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoConstantesFunciones.LABEL_PEDIDOS;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoConstantesFunciones.LABEL_DOCUMENTOS;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoConstantesFunciones.LABEL_DISPONIBLE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoConstantesFunciones.LABEL_DESCUENTOPORCENTAJE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoConstantesFunciones.LABEL_TOTALCONIVA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoConstantesFunciones.LABEL_SUMAN;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoConstantesFunciones.LABEL_DESCUENTOVALOR;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoConstantesFunciones.LABEL_TOTALSINIVA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoConstantesFunciones.LABEL_DESCUENTOTOTAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoConstantesFunciones.LABEL_FLETE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoConstantesFunciones.LABEL_TOTAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoConstantesFunciones.LABEL_SUBTOTAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoConstantesFunciones.LABEL_OTRO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoConstantesFunciones.LABEL_ULTIMOCOSTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoConstantesFunciones.LABEL_IVA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoConstantesFunciones.LABEL_FINANCIAMIENTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoConstantesFunciones.LABEL_MARGENUTILIDAD;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoConstantesFunciones.LABEL_OTROSVALORES;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoConstantesFunciones.LABEL_ANTICIPO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoConstantesFunciones.LABEL_IDTIPOCAMBIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoConstantesFunciones.LABEL_IDCENTROCOSTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoConstantesFunciones.LABEL_IDZONA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoConstantesFunciones.LABEL_FECHA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoConstantesFunciones.LABEL_NUMEROFUE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoConstantesFunciones.LABEL_FECHASERVIDOR;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoConstantesFunciones.LABEL_MONTORETENCION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoConstantesFunciones.LABEL_ICE;
		
		return sFilaCabecera;
	}
	
	public String getFilaDatosExportarPedido(Pedido pedido,String sDelimiter) {
		String sFilaDatos="";
		
		sFilaDatos+="\r\n";
		
		
		sFilaDatos+=pedido.getId().toString();

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaDatos+=sDelimiter;
		sFilaDatos+=pedido.getVersionRow().toString();
		}

		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedido.getempresa_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedido.getsucursal_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedido.getejercicio_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedido.getperiodo_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedido.getanio_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedido.getmes_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedido.getusuario_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedido.getnumero();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedido.getpre_impreso();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedido.getfecha_emision().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedido.getfecha_entrega().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedido.getmoneda_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedido.getcotizacion().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedido.getempleado_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedido.gettipoprecio_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedido.getformato_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedido.getdireccion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedido.getcliente_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedido.gettelefono();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedido.getruc();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedido.getsubcliente_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedido.getvendedor_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedido.getconsultor_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedido.getorden();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedido.getresponsable_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedido.getestadopedido_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedido.gettransporte_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedido.getrutatransporte_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedido.getvalor_ruta().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedido.gettipollamada_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedido.gettransportista_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedido.gethora_inicio().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedido.gethora_fin().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedido.getdescripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedido.getcupo().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedido.getsaldo().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedido.getpedidos().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedido.getdocumentos().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedido.getdisponible().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedido.getdescuento_porcentaje().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedido.gettotal_con_iva().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedido.getsuman().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedido.getdescuento_valor().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedido.gettotal_sin_iva().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedido.getdescuento_total().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedido.getflete().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedido.gettotal().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedido.getsubtotal().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedido.getotro().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedido.getultimo_costo().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedido.getiva().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedido.getfinanciamiento().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedido.getmargen_utilidad().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedido.getotros_valores().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedido.getanticipo().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedido.gettipocambio_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedido.getcentrocosto_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedido.getzona_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedido.getfecha().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedido.getnumero_fue();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedido.getfecha_servidor().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedido.getmonto_retencion().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedido.getice().toString();
		
		return sFilaDatos;
	}
	
	//@SuppressWarnings("deprecation")
	public void exportarExcelPedidosSeleccionados() throws Exception {
		ArrayList<Pedido> pedidosSeleccionados=new ArrayList<Pedido>();		
		
		pedidosSeleccionados=this.getPedidosSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"pedido.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		FileOutputStream fileOutputStream=null;
		
		try {
			HSSFWorkbook workbook = new HSSFWorkbook();
			HSSFSheet sheet = workbook.createSheet("Pedidos");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			HSSFRow row = sheet.createRow(iRow);
			HSSFCell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");

			if(conCabecera) {
				this.getFilaCabeceraExportarExcelPedido(row);				
				iRow++;
			}				
			
			for(Pedido pedidoAux:pedidosSeleccionados) {
				row = sheet.createRow(iRow);
				
				this.getFilaDatosExportarExcelPedido(pedidoAux,row);
				
				iRow++;
			}
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.pedidoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Pedido",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}
	}		
	
	public void exportarXmlPedidosSeleccionados() throws Exception {
		ArrayList<Pedido> pedidosSeleccionados=new ArrayList<Pedido>();		
		
		pedidosSeleccionados=this.getPedidosSeleccionados(true);
		
		//String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		//Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		//String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"pedido.xml";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		DocumentBuilderFactory documentBuilderFactory=null;
		DocumentBuilder documentBuilder =null;
		
		try {
			documentBuilderFactory = DocumentBuilderFactory.newInstance();
			documentBuilder = documentBuilderFactory.newDocumentBuilder();
	
			Document document = documentBuilder.newDocument();
			Element elementRoot = document.createElement("pedidos");
			
			document.appendChild(elementRoot);
		    			
												
			Element element = null;//document.createElement("pedido");
			//elementRoot.appendChild(element);
		
			for(Pedido pedidoAux:pedidosSeleccionados) {
				element = document.createElement("pedido");
				elementRoot.appendChild(element);
			
				this.setFilaDatosExportarXmlPedido(pedidoAux,document,element);
			}
			
			TransformerFactory transformerFactory = TransformerFactory.newInstance();
			Transformer transformer = transformerFactory.newTransformer();
			DOMSource domSource = new DOMSource(document);
			
			StreamResult streamResult = new StreamResult(new File(sPath));
	
			transformer.transform(domSource, streamResult);
						
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.pedidoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Pedido",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			       				
		}
	}	
	
	//@SuppressWarnings("deprecation")
	public void getFilaCabeceraExportarExcelPedido(HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoConstantesFunciones.LABEL_ID);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoConstantesFunciones.LABEL_VERSIONROW);
		}

		cell = row.createCell(iColumn++);cell.setCellValue(PedidoConstantesFunciones.LABEL_IDEMPRESA);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoConstantesFunciones.LABEL_IDSUCURSAL);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoConstantesFunciones.LABEL_IDEJERCICIO);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoConstantesFunciones.LABEL_IDPERIODO);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoConstantesFunciones.LABEL_IDANIO);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoConstantesFunciones.LABEL_IDMES);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoConstantesFunciones.LABEL_IDUSUARIO);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoConstantesFunciones.LABEL_NUMERO);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoConstantesFunciones.LABEL_PREIMPRESO);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoConstantesFunciones.LABEL_FECHAEMISION);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoConstantesFunciones.LABEL_FECHAENTREGA);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoConstantesFunciones.LABEL_IDMONEDA);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoConstantesFunciones.LABEL_COTIZACION);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoConstantesFunciones.LABEL_IDEMPLEADO);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoConstantesFunciones.LABEL_IDTIPOPRECIO);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoConstantesFunciones.LABEL_IDFORMATO);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoConstantesFunciones.LABEL_DIRECCION);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoConstantesFunciones.LABEL_IDCLIENTE);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoConstantesFunciones.LABEL_TELEFONO);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoConstantesFunciones.LABEL_RUC);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoConstantesFunciones.LABEL_IDSUBCLIENTE);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoConstantesFunciones.LABEL_IDVENDEDOR);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoConstantesFunciones.LABEL_IDCONSULTOR);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoConstantesFunciones.LABEL_ORDEN);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoConstantesFunciones.LABEL_IDRESPONSABLE);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoConstantesFunciones.LABEL_IDESTADOPEDIDO);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoConstantesFunciones.LABEL_IDTRANSPORTE);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoConstantesFunciones.LABEL_IDRUTATRANSPORTE);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoConstantesFunciones.LABEL_VALORRUTA);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoConstantesFunciones.LABEL_IDTIPOLLAMADA);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoConstantesFunciones.LABEL_IDTRANSPORTISTA);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoConstantesFunciones.LABEL_HORAINICIO);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoConstantesFunciones.LABEL_HORAFIN);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoConstantesFunciones.LABEL_DESCRIPCION);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoConstantesFunciones.LABEL_CUPO);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoConstantesFunciones.LABEL_SALDO);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoConstantesFunciones.LABEL_PEDIDOS);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoConstantesFunciones.LABEL_DOCUMENTOS);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoConstantesFunciones.LABEL_DISPONIBLE);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoConstantesFunciones.LABEL_DESCUENTOPORCENTAJE);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoConstantesFunciones.LABEL_TOTALCONIVA);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoConstantesFunciones.LABEL_SUMAN);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoConstantesFunciones.LABEL_DESCUENTOVALOR);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoConstantesFunciones.LABEL_TOTALSINIVA);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoConstantesFunciones.LABEL_DESCUENTOTOTAL);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoConstantesFunciones.LABEL_FLETE);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoConstantesFunciones.LABEL_TOTAL);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoConstantesFunciones.LABEL_SUBTOTAL);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoConstantesFunciones.LABEL_OTRO);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoConstantesFunciones.LABEL_ULTIMOCOSTO);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoConstantesFunciones.LABEL_IVA);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoConstantesFunciones.LABEL_FINANCIAMIENTO);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoConstantesFunciones.LABEL_MARGENUTILIDAD);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoConstantesFunciones.LABEL_OTROSVALORES);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoConstantesFunciones.LABEL_ANTICIPO);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoConstantesFunciones.LABEL_IDTIPOCAMBIO);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoConstantesFunciones.LABEL_IDCENTROCOSTO);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoConstantesFunciones.LABEL_IDZONA);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoConstantesFunciones.LABEL_FECHA);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoConstantesFunciones.LABEL_NUMEROFUE);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoConstantesFunciones.LABEL_FECHASERVIDOR);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoConstantesFunciones.LABEL_MONTORETENCION);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoConstantesFunciones.LABEL_ICE);
	}
	
	//@SuppressWarnings("deprecation")
	public void getFilaDatosExportarExcelPedido(Pedido pedido,HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(pedido.getId());
		cell = row.createCell(iColumn++);cell.setCellValue(pedido.getempresa_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pedido.getsucursal_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pedido.getejercicio_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pedido.getperiodo_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pedido.getanio_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pedido.getmes_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pedido.getusuario_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pedido.getnumero());
		cell = row.createCell(iColumn++);cell.setCellValue(pedido.getpre_impreso());
		cell = row.createCell(iColumn++);cell.setCellValue(pedido.getfecha_emision());
		cell = row.createCell(iColumn++);cell.setCellValue(pedido.getfecha_entrega());
		cell = row.createCell(iColumn++);cell.setCellValue(pedido.getmoneda_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pedido.getcotizacion());
		cell = row.createCell(iColumn++);cell.setCellValue(pedido.getempleado_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pedido.gettipoprecio_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pedido.getformato_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pedido.getdireccion());
		cell = row.createCell(iColumn++);cell.setCellValue(pedido.getcliente_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pedido.gettelefono());
		cell = row.createCell(iColumn++);cell.setCellValue(pedido.getruc());
		cell = row.createCell(iColumn++);cell.setCellValue(pedido.getsubcliente_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pedido.getvendedor_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pedido.getconsultor_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pedido.getorden());
		cell = row.createCell(iColumn++);cell.setCellValue(pedido.getresponsable_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pedido.getestadopedido_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pedido.gettransporte_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pedido.getrutatransporte_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pedido.getvalor_ruta());
		cell = row.createCell(iColumn++);cell.setCellValue(pedido.gettipollamada_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pedido.gettransportista_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pedido.gethora_inicio());
		cell = row.createCell(iColumn++);cell.setCellValue(pedido.gethora_fin());
		cell = row.createCell(iColumn++);cell.setCellValue(pedido.getdescripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pedido.getcupo());
		cell = row.createCell(iColumn++);cell.setCellValue(pedido.getsaldo());
		cell = row.createCell(iColumn++);cell.setCellValue(pedido.getpedidos());
		cell = row.createCell(iColumn++);cell.setCellValue(pedido.getdocumentos());
		cell = row.createCell(iColumn++);cell.setCellValue(pedido.getdisponible());
		cell = row.createCell(iColumn++);cell.setCellValue(pedido.getdescuento_porcentaje());
		cell = row.createCell(iColumn++);cell.setCellValue(pedido.gettotal_con_iva());
		cell = row.createCell(iColumn++);cell.setCellValue(pedido.getsuman());
		cell = row.createCell(iColumn++);cell.setCellValue(pedido.getdescuento_valor());
		cell = row.createCell(iColumn++);cell.setCellValue(pedido.gettotal_sin_iva());
		cell = row.createCell(iColumn++);cell.setCellValue(pedido.getdescuento_total());
		cell = row.createCell(iColumn++);cell.setCellValue(pedido.getflete());
		cell = row.createCell(iColumn++);cell.setCellValue(pedido.gettotal());
		cell = row.createCell(iColumn++);cell.setCellValue(pedido.getsubtotal());
		cell = row.createCell(iColumn++);cell.setCellValue(pedido.getotro());
		cell = row.createCell(iColumn++);cell.setCellValue(pedido.getultimo_costo());
		cell = row.createCell(iColumn++);cell.setCellValue(pedido.getiva());
		cell = row.createCell(iColumn++);cell.setCellValue(pedido.getfinanciamiento());
		cell = row.createCell(iColumn++);cell.setCellValue(pedido.getmargen_utilidad());
		cell = row.createCell(iColumn++);cell.setCellValue(pedido.getotros_valores());
		cell = row.createCell(iColumn++);cell.setCellValue(pedido.getanticipo());
		cell = row.createCell(iColumn++);cell.setCellValue(pedido.gettipocambio_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pedido.getcentrocosto_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pedido.getzona_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pedido.getfecha());
		cell = row.createCell(iColumn++);cell.setCellValue(pedido.getnumero_fue());
		cell = row.createCell(iColumn++);cell.setCellValue(pedido.getfecha_servidor());
		cell = row.createCell(iColumn++);cell.setCellValue(pedido.getmonto_retencion());
		cell = row.createCell(iColumn++);cell.setCellValue(pedido.getice());				
	}
	
	public void setFilaDatosExportarXmlPedido(Pedido pedido,Document document,Element element) {
		/*
		Element lastname = document.createElement("lastname");
		lastname.appendChild(document.createTextNode("mook kim"));
		element.appendChild(lastname);
		*/
		

		Element elementId = document.createElement(PedidoConstantesFunciones.ID);
		elementId.appendChild(document.createTextNode(pedido.getId().toString().trim()));
		element.appendChild(elementId);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){

		Element elementVersionRow = document.createElement(PedidoConstantesFunciones.VERSIONROW);
		elementVersionRow.appendChild(document.createTextNode(pedido.getVersionRow().toString().trim()));
		element.appendChild(elementVersionRow);
		}


		Element elementempresa_descripcion = document.createElement(PedidoConstantesFunciones.IDEMPRESA);
		elementempresa_descripcion.appendChild(document.createTextNode(pedido.getempresa_descripcion()));
		element.appendChild(elementempresa_descripcion);

		Element elementsucursal_descripcion = document.createElement(PedidoConstantesFunciones.IDSUCURSAL);
		elementsucursal_descripcion.appendChild(document.createTextNode(pedido.getsucursal_descripcion()));
		element.appendChild(elementsucursal_descripcion);

		Element elementejercicio_descripcion = document.createElement(PedidoConstantesFunciones.IDEJERCICIO);
		elementejercicio_descripcion.appendChild(document.createTextNode(pedido.getejercicio_descripcion()));
		element.appendChild(elementejercicio_descripcion);

		Element elementperiodo_descripcion = document.createElement(PedidoConstantesFunciones.IDPERIODO);
		elementperiodo_descripcion.appendChild(document.createTextNode(pedido.getperiodo_descripcion()));
		element.appendChild(elementperiodo_descripcion);

		Element elementanio_descripcion = document.createElement(PedidoConstantesFunciones.IDANIO);
		elementanio_descripcion.appendChild(document.createTextNode(pedido.getanio_descripcion()));
		element.appendChild(elementanio_descripcion);

		Element elementmes_descripcion = document.createElement(PedidoConstantesFunciones.IDMES);
		elementmes_descripcion.appendChild(document.createTextNode(pedido.getmes_descripcion()));
		element.appendChild(elementmes_descripcion);

		Element elementusuario_descripcion = document.createElement(PedidoConstantesFunciones.IDUSUARIO);
		elementusuario_descripcion.appendChild(document.createTextNode(pedido.getusuario_descripcion()));
		element.appendChild(elementusuario_descripcion);

		Element elementnumero = document.createElement(PedidoConstantesFunciones.NUMERO);
		elementnumero.appendChild(document.createTextNode(pedido.getnumero().trim()));
		element.appendChild(elementnumero);

		Element elementpre_impreso = document.createElement(PedidoConstantesFunciones.PREIMPRESO);
		elementpre_impreso.appendChild(document.createTextNode(pedido.getpre_impreso().trim()));
		element.appendChild(elementpre_impreso);

		Element elementfecha_emision = document.createElement(PedidoConstantesFunciones.FECHAEMISION);
		elementfecha_emision.appendChild(document.createTextNode(pedido.getfecha_emision().toString().trim()));
		element.appendChild(elementfecha_emision);

		Element elementfecha_entrega = document.createElement(PedidoConstantesFunciones.FECHAENTREGA);
		elementfecha_entrega.appendChild(document.createTextNode(pedido.getfecha_entrega().toString().trim()));
		element.appendChild(elementfecha_entrega);

		Element elementmoneda_descripcion = document.createElement(PedidoConstantesFunciones.IDMONEDA);
		elementmoneda_descripcion.appendChild(document.createTextNode(pedido.getmoneda_descripcion()));
		element.appendChild(elementmoneda_descripcion);

		Element elementcotizacion = document.createElement(PedidoConstantesFunciones.COTIZACION);
		elementcotizacion.appendChild(document.createTextNode(pedido.getcotizacion().toString().trim()));
		element.appendChild(elementcotizacion);

		Element elementempleado_descripcion = document.createElement(PedidoConstantesFunciones.IDEMPLEADO);
		elementempleado_descripcion.appendChild(document.createTextNode(pedido.getempleado_descripcion()));
		element.appendChild(elementempleado_descripcion);

		Element elementtipoprecio_descripcion = document.createElement(PedidoConstantesFunciones.IDTIPOPRECIO);
		elementtipoprecio_descripcion.appendChild(document.createTextNode(pedido.gettipoprecio_descripcion()));
		element.appendChild(elementtipoprecio_descripcion);

		Element elementformato_descripcion = document.createElement(PedidoConstantesFunciones.IDFORMATO);
		elementformato_descripcion.appendChild(document.createTextNode(pedido.getformato_descripcion()));
		element.appendChild(elementformato_descripcion);

		Element elementdireccion = document.createElement(PedidoConstantesFunciones.DIRECCION);
		elementdireccion.appendChild(document.createTextNode(pedido.getdireccion().trim()));
		element.appendChild(elementdireccion);

		Element elementcliente_descripcion = document.createElement(PedidoConstantesFunciones.IDCLIENTE);
		elementcliente_descripcion.appendChild(document.createTextNode(pedido.getcliente_descripcion()));
		element.appendChild(elementcliente_descripcion);

		Element elementtelefono = document.createElement(PedidoConstantesFunciones.TELEFONO);
		elementtelefono.appendChild(document.createTextNode(pedido.gettelefono().trim()));
		element.appendChild(elementtelefono);

		Element elementruc = document.createElement(PedidoConstantesFunciones.RUC);
		elementruc.appendChild(document.createTextNode(pedido.getruc().trim()));
		element.appendChild(elementruc);

		Element elementsubcliente_descripcion = document.createElement(PedidoConstantesFunciones.IDSUBCLIENTE);
		elementsubcliente_descripcion.appendChild(document.createTextNode(pedido.getsubcliente_descripcion()));
		element.appendChild(elementsubcliente_descripcion);

		Element elementvendedor_descripcion = document.createElement(PedidoConstantesFunciones.IDVENDEDOR);
		elementvendedor_descripcion.appendChild(document.createTextNode(pedido.getvendedor_descripcion()));
		element.appendChild(elementvendedor_descripcion);

		Element elementconsultor_descripcion = document.createElement(PedidoConstantesFunciones.IDCONSULTOR);
		elementconsultor_descripcion.appendChild(document.createTextNode(pedido.getconsultor_descripcion()));
		element.appendChild(elementconsultor_descripcion);

		Element elementorden = document.createElement(PedidoConstantesFunciones.ORDEN);
		elementorden.appendChild(document.createTextNode(pedido.getorden().trim()));
		element.appendChild(elementorden);

		Element elementresponsable_descripcion = document.createElement(PedidoConstantesFunciones.IDRESPONSABLE);
		elementresponsable_descripcion.appendChild(document.createTextNode(pedido.getresponsable_descripcion()));
		element.appendChild(elementresponsable_descripcion);

		Element elementestadopedido_descripcion = document.createElement(PedidoConstantesFunciones.IDESTADOPEDIDO);
		elementestadopedido_descripcion.appendChild(document.createTextNode(pedido.getestadopedido_descripcion()));
		element.appendChild(elementestadopedido_descripcion);

		Element elementtransporte_descripcion = document.createElement(PedidoConstantesFunciones.IDTRANSPORTE);
		elementtransporte_descripcion.appendChild(document.createTextNode(pedido.gettransporte_descripcion()));
		element.appendChild(elementtransporte_descripcion);

		Element elementrutatransporte_descripcion = document.createElement(PedidoConstantesFunciones.IDRUTATRANSPORTE);
		elementrutatransporte_descripcion.appendChild(document.createTextNode(pedido.getrutatransporte_descripcion()));
		element.appendChild(elementrutatransporte_descripcion);

		Element elementvalor_ruta = document.createElement(PedidoConstantesFunciones.VALORRUTA);
		elementvalor_ruta.appendChild(document.createTextNode(pedido.getvalor_ruta().toString().trim()));
		element.appendChild(elementvalor_ruta);

		Element elementtipollamada_descripcion = document.createElement(PedidoConstantesFunciones.IDTIPOLLAMADA);
		elementtipollamada_descripcion.appendChild(document.createTextNode(pedido.gettipollamada_descripcion()));
		element.appendChild(elementtipollamada_descripcion);

		Element elementtransportista_descripcion = document.createElement(PedidoConstantesFunciones.IDTRANSPORTISTA);
		elementtransportista_descripcion.appendChild(document.createTextNode(pedido.gettransportista_descripcion()));
		element.appendChild(elementtransportista_descripcion);

		Element elementhora_inicio = document.createElement(PedidoConstantesFunciones.HORAINICIO);
		elementhora_inicio.appendChild(document.createTextNode(pedido.gethora_inicio().toString().trim()));
		element.appendChild(elementhora_inicio);

		Element elementhora_fin = document.createElement(PedidoConstantesFunciones.HORAFIN);
		elementhora_fin.appendChild(document.createTextNode(pedido.gethora_fin().toString().trim()));
		element.appendChild(elementhora_fin);

		Element elementdescripcion = document.createElement(PedidoConstantesFunciones.DESCRIPCION);
		elementdescripcion.appendChild(document.createTextNode(pedido.getdescripcion().trim()));
		element.appendChild(elementdescripcion);

		Element elementcupo = document.createElement(PedidoConstantesFunciones.CUPO);
		elementcupo.appendChild(document.createTextNode(pedido.getcupo().toString().trim()));
		element.appendChild(elementcupo);

		Element elementsaldo = document.createElement(PedidoConstantesFunciones.SALDO);
		elementsaldo.appendChild(document.createTextNode(pedido.getsaldo().toString().trim()));
		element.appendChild(elementsaldo);

		Element elementpedidos = document.createElement(PedidoConstantesFunciones.PEDIDOS);
		elementpedidos.appendChild(document.createTextNode(pedido.getpedidos().toString().trim()));
		element.appendChild(elementpedidos);

		Element elementdocumentos = document.createElement(PedidoConstantesFunciones.DOCUMENTOS);
		elementdocumentos.appendChild(document.createTextNode(pedido.getdocumentos().toString().trim()));
		element.appendChild(elementdocumentos);

		Element elementdisponible = document.createElement(PedidoConstantesFunciones.DISPONIBLE);
		elementdisponible.appendChild(document.createTextNode(pedido.getdisponible().toString().trim()));
		element.appendChild(elementdisponible);

		Element elementdescuento_porcentaje = document.createElement(PedidoConstantesFunciones.DESCUENTOPORCENTAJE);
		elementdescuento_porcentaje.appendChild(document.createTextNode(pedido.getdescuento_porcentaje().toString().trim()));
		element.appendChild(elementdescuento_porcentaje);

		Element elementtotal_con_iva = document.createElement(PedidoConstantesFunciones.TOTALCONIVA);
		elementtotal_con_iva.appendChild(document.createTextNode(pedido.gettotal_con_iva().toString().trim()));
		element.appendChild(elementtotal_con_iva);

		Element elementsuman = document.createElement(PedidoConstantesFunciones.SUMAN);
		elementsuman.appendChild(document.createTextNode(pedido.getsuman().toString().trim()));
		element.appendChild(elementsuman);

		Element elementdescuento_valor = document.createElement(PedidoConstantesFunciones.DESCUENTOVALOR);
		elementdescuento_valor.appendChild(document.createTextNode(pedido.getdescuento_valor().toString().trim()));
		element.appendChild(elementdescuento_valor);

		Element elementtotal_sin_iva = document.createElement(PedidoConstantesFunciones.TOTALSINIVA);
		elementtotal_sin_iva.appendChild(document.createTextNode(pedido.gettotal_sin_iva().toString().trim()));
		element.appendChild(elementtotal_sin_iva);

		Element elementdescuento_total = document.createElement(PedidoConstantesFunciones.DESCUENTOTOTAL);
		elementdescuento_total.appendChild(document.createTextNode(pedido.getdescuento_total().toString().trim()));
		element.appendChild(elementdescuento_total);

		Element elementflete = document.createElement(PedidoConstantesFunciones.FLETE);
		elementflete.appendChild(document.createTextNode(pedido.getflete().toString().trim()));
		element.appendChild(elementflete);

		Element elementtotal = document.createElement(PedidoConstantesFunciones.TOTAL);
		elementtotal.appendChild(document.createTextNode(pedido.gettotal().toString().trim()));
		element.appendChild(elementtotal);

		Element elementsubtotal = document.createElement(PedidoConstantesFunciones.SUBTOTAL);
		elementsubtotal.appendChild(document.createTextNode(pedido.getsubtotal().toString().trim()));
		element.appendChild(elementsubtotal);

		Element elementotro = document.createElement(PedidoConstantesFunciones.OTRO);
		elementotro.appendChild(document.createTextNode(pedido.getotro().toString().trim()));
		element.appendChild(elementotro);

		Element elementultimo_costo = document.createElement(PedidoConstantesFunciones.ULTIMOCOSTO);
		elementultimo_costo.appendChild(document.createTextNode(pedido.getultimo_costo().toString().trim()));
		element.appendChild(elementultimo_costo);

		Element elementiva = document.createElement(PedidoConstantesFunciones.IVA);
		elementiva.appendChild(document.createTextNode(pedido.getiva().toString().trim()));
		element.appendChild(elementiva);

		Element elementfinanciamiento = document.createElement(PedidoConstantesFunciones.FINANCIAMIENTO);
		elementfinanciamiento.appendChild(document.createTextNode(pedido.getfinanciamiento().toString().trim()));
		element.appendChild(elementfinanciamiento);

		Element elementmargen_utilidad = document.createElement(PedidoConstantesFunciones.MARGENUTILIDAD);
		elementmargen_utilidad.appendChild(document.createTextNode(pedido.getmargen_utilidad().toString().trim()));
		element.appendChild(elementmargen_utilidad);

		Element elementotros_valores = document.createElement(PedidoConstantesFunciones.OTROSVALORES);
		elementotros_valores.appendChild(document.createTextNode(pedido.getotros_valores().toString().trim()));
		element.appendChild(elementotros_valores);

		Element elementanticipo = document.createElement(PedidoConstantesFunciones.ANTICIPO);
		elementanticipo.appendChild(document.createTextNode(pedido.getanticipo().toString().trim()));
		element.appendChild(elementanticipo);

		Element elementtipocambio_descripcion = document.createElement(PedidoConstantesFunciones.IDTIPOCAMBIO);
		elementtipocambio_descripcion.appendChild(document.createTextNode(pedido.gettipocambio_descripcion()));
		element.appendChild(elementtipocambio_descripcion);

		Element elementcentrocosto_descripcion = document.createElement(PedidoConstantesFunciones.IDCENTROCOSTO);
		elementcentrocosto_descripcion.appendChild(document.createTextNode(pedido.getcentrocosto_descripcion()));
		element.appendChild(elementcentrocosto_descripcion);

		Element elementzona_descripcion = document.createElement(PedidoConstantesFunciones.IDZONA);
		elementzona_descripcion.appendChild(document.createTextNode(pedido.getzona_descripcion()));
		element.appendChild(elementzona_descripcion);

		Element elementfecha = document.createElement(PedidoConstantesFunciones.FECHA);
		elementfecha.appendChild(document.createTextNode(pedido.getfecha().toString().trim()));
		element.appendChild(elementfecha);

		Element elementnumero_fue = document.createElement(PedidoConstantesFunciones.NUMEROFUE);
		elementnumero_fue.appendChild(document.createTextNode(pedido.getnumero_fue().trim()));
		element.appendChild(elementnumero_fue);

		Element elementfecha_servidor = document.createElement(PedidoConstantesFunciones.FECHASERVIDOR);
		elementfecha_servidor.appendChild(document.createTextNode(pedido.getfecha_servidor().toString().trim()));
		element.appendChild(elementfecha_servidor);

		Element elementmonto_retencion = document.createElement(PedidoConstantesFunciones.MONTORETENCION);
		elementmonto_retencion.appendChild(document.createTextNode(pedido.getmonto_retencion().toString().trim()));
		element.appendChild(elementmonto_retencion);

		Element elementice = document.createElement(PedidoConstantesFunciones.ICE);
		elementice.appendChild(document.createTextNode(pedido.getice().toString().trim()));
		element.appendChild(elementice);
	}
	
	public void generarReporteGroupGenericoPedidosSeleccionados(Boolean soloTotales) throws Exception {
		ArrayList<Pedido> pedidosSeleccionados=new ArrayList<Pedido>();
		
		pedidosSeleccionados=this.getPedidosSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!soloTotales) {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_GENERICO;
		} else {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_TOTALES_GENERICO;
		}
		
		this.setColumnaDescripcionReporteGroupGenericoPedido(pedidosSeleccionados);
		
		this.generarReportePedidos("Todos",pedidosSeleccionados);
	}
	
	public void setColumnaDescripcionReporteGroupGenericoPedido(ArrayList<Pedido> pedidosSeleccionados) throws Exception {    		
		try {
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			
			Boolean existe=false;
			
			for(Pedido pedidoAux:pedidosSeleccionados) {
				pedidoAux.setsDetalleGeneralEntityReporte(pedidoAux.toString());
			
				if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_IDEMPRESA)) {
					existe=true;
					pedidoAux.setsDescripcionGeneralEntityReporte1(pedidoAux.getempresa_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_IDSUCURSAL)) {
					existe=true;
					pedidoAux.setsDescripcionGeneralEntityReporte1(pedidoAux.getsucursal_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_IDEJERCICIO)) {
					existe=true;
					pedidoAux.setsDescripcionGeneralEntityReporte1(pedidoAux.getejercicio_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_IDPERIODO)) {
					existe=true;
					pedidoAux.setsDescripcionGeneralEntityReporte1(pedidoAux.getperiodo_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_IDANIO)) {
					existe=true;
					pedidoAux.setsDescripcionGeneralEntityReporte1(pedidoAux.getanio_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_IDMES)) {
					existe=true;
					pedidoAux.setsDescripcionGeneralEntityReporte1(pedidoAux.getmes_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_IDUSUARIO)) {
					existe=true;
					pedidoAux.setsDescripcionGeneralEntityReporte1(pedidoAux.getusuario_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_NUMERO)) {
					existe=true;
					pedidoAux.setsDescripcionGeneralEntityReporte1(pedidoAux.getnumero());
				}
				 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_PREIMPRESO)) {
					existe=true;
					pedidoAux.setsDescripcionGeneralEntityReporte1(pedidoAux.getpre_impreso());
				}
				 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_FECHAEMISION)) {
					existe=true;
					pedidoAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(pedidoAux.getfecha_emision()));
				}
				 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_FECHAENTREGA)) {
					existe=true;
					pedidoAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(pedidoAux.getfecha_entrega()));
				}
				 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_IDMONEDA)) {
					existe=true;
					pedidoAux.setsDescripcionGeneralEntityReporte1(pedidoAux.getmoneda_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_IDEMPLEADO)) {
					existe=true;
					pedidoAux.setsDescripcionGeneralEntityReporte1(pedidoAux.getempleado_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_IDTIPOPRECIO)) {
					existe=true;
					pedidoAux.setsDescripcionGeneralEntityReporte1(pedidoAux.gettipoprecio_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_IDFORMATO)) {
					existe=true;
					pedidoAux.setsDescripcionGeneralEntityReporte1(pedidoAux.getformato_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_DIRECCION)) {
					existe=true;
					pedidoAux.setsDescripcionGeneralEntityReporte1(pedidoAux.getdireccion());
				}
				 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_IDCLIENTE)) {
					existe=true;
					pedidoAux.setsDescripcionGeneralEntityReporte1(pedidoAux.getcliente_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_TELEFONO)) {
					existe=true;
					pedidoAux.setsDescripcionGeneralEntityReporte1(pedidoAux.gettelefono());
				}
				 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_RUC)) {
					existe=true;
					pedidoAux.setsDescripcionGeneralEntityReporte1(pedidoAux.getruc());
				}
				 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_IDSUBCLIENTE)) {
					existe=true;
					pedidoAux.setsDescripcionGeneralEntityReporte1(pedidoAux.getsubcliente_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_IDVENDEDOR)) {
					existe=true;
					pedidoAux.setsDescripcionGeneralEntityReporte1(pedidoAux.getvendedor_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_IDCONSULTOR)) {
					existe=true;
					pedidoAux.setsDescripcionGeneralEntityReporte1(pedidoAux.getconsultor_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_ORDEN)) {
					existe=true;
					pedidoAux.setsDescripcionGeneralEntityReporte1(pedidoAux.getorden());
				}
				 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_IDRESPONSABLE)) {
					existe=true;
					pedidoAux.setsDescripcionGeneralEntityReporte1(pedidoAux.getresponsable_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_IDESTADOPEDIDO)) {
					existe=true;
					pedidoAux.setsDescripcionGeneralEntityReporte1(pedidoAux.getestadopedido_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_IDTRANSPORTE)) {
					existe=true;
					pedidoAux.setsDescripcionGeneralEntityReporte1(pedidoAux.gettransporte_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_IDRUTATRANSPORTE)) {
					existe=true;
					pedidoAux.setsDescripcionGeneralEntityReporte1(pedidoAux.getrutatransporte_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_IDTIPOLLAMADA)) {
					existe=true;
					pedidoAux.setsDescripcionGeneralEntityReporte1(pedidoAux.gettipollamada_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_IDTRANSPORTISTA)) {
					existe=true;
					pedidoAux.setsDescripcionGeneralEntityReporte1(pedidoAux.gettransportista_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_HORAINICIO)) {
					existe=true;
					pedidoAux.setsDescripcionGeneralEntityReporte1(pedidoAux.gethora_inicio().toString());
				}
				 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_HORAFIN)) {
					existe=true;
					pedidoAux.setsDescripcionGeneralEntityReporte1(pedidoAux.gethora_fin().toString());
				}
				 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_DESCRIPCION)) {
					existe=true;
					pedidoAux.setsDescripcionGeneralEntityReporte1(pedidoAux.getdescripcion());
				}
				 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_IDTIPOCAMBIO)) {
					existe=true;
					pedidoAux.setsDescripcionGeneralEntityReporte1(pedidoAux.gettipocambio_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_IDCENTROCOSTO)) {
					existe=true;
					pedidoAux.setsDescripcionGeneralEntityReporte1(pedidoAux.getcentrocosto_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_IDZONA)) {
					existe=true;
					pedidoAux.setsDescripcionGeneralEntityReporte1(pedidoAux.getzona_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_FECHA)) {
					existe=true;
					pedidoAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(pedidoAux.getfecha()));
				}
				 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_NUMEROFUE)) {
					existe=true;
					pedidoAux.setsDescripcionGeneralEntityReporte1(pedidoAux.getnumero_fue());
				}
				 else if(sTipoSeleccionar.equals(PedidoConstantesFunciones.LABEL_FECHASERVIDOR)) {
					existe=true;
					pedidoAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(pedidoAux.getfecha_servidor()));
				}
			}	
											
			if(!existe) {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}										
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void actualizarEstadoCeldasBotonesPedido(String sAccion,Boolean isGuardarCambiosEnLote,Boolean isEsMantenimientoRelacionado) throws Exception {
		if(sAccion=="n") {
			if(!this.esParaBusquedaForeignKey) {
				this.isVisibilidadCeldaNuevoPedido=true;
				this.isVisibilidadCeldaNuevoRelacionesPedido=true;
				this.isVisibilidadCeldaGuardarCambiosPedido=true;
			}
			
			this.isVisibilidadCeldaModificarPedido=false;
			this.isVisibilidadCeldaActualizarPedido=false;
			this.isVisibilidadCeldaEliminarPedido=false;
			this.isVisibilidadCeldaCancelarPedido=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarPedido=true;
				} else {
					this.isVisibilidadCeldaGuardarPedido=false;
				}
			}
		} else if(sAccion=="a") {
			this.isVisibilidadCeldaNuevoPedido=false;
			this.isVisibilidadCeldaNuevoRelacionesPedido=false;
			this.isVisibilidadCeldaGuardarCambiosPedido=false;
			this.isVisibilidadCeldaModificarPedido=false;
			this.isVisibilidadCeldaActualizarPedido=true;
			this.isVisibilidadCeldaEliminarPedido=false;
			this.isVisibilidadCeldaCancelarPedido=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarPedido=true;
				} else {
					this.isVisibilidadCeldaGuardarPedido=false;
				}
			}
		} else if(sAccion=="ae") {
			this.isVisibilidadCeldaNuevoPedido=false;
			this.isVisibilidadCeldaNuevoRelacionesPedido=false;
			this.isVisibilidadCeldaGuardarCambiosPedido=false;
			this.isVisibilidadCeldaModificarPedido=false;
			this.isVisibilidadCeldaActualizarPedido=true;
			this.isVisibilidadCeldaEliminarPedido=true;
			this.isVisibilidadCeldaCancelarPedido=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarPedido=true;
				} else {
					this.isVisibilidadCeldaGuardarPedido=false;
				}
			}
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {
			this.isVisibilidadCeldaNuevoPedido=false;
			this.isVisibilidadCeldaNuevoRelacionesPedido=false;
			this.isVisibilidadCeldaGuardarCambiosPedido=false;
			this.isVisibilidadCeldaModificarPedido=false;
			this.isVisibilidadCeldaActualizarPedido=true;
			this.isVisibilidadCeldaEliminarPedido=false;
			this.isVisibilidadCeldaCancelarPedido=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarPedido=false;
				} else {
					this.isVisibilidadCeldaGuardarPedido=false;
				}
			}
		} else if(sAccion=="c") {
			this.isVisibilidadCeldaNuevoPedido=true;
			this.isVisibilidadCeldaNuevoRelacionesPedido=true;
			this.isVisibilidadCeldaGuardarCambiosPedido=true;
			this.isVisibilidadCeldaModificarPedido=false;
			this.isVisibilidadCeldaActualizarPedido=false;
			this.isVisibilidadCeldaEliminarPedido=false;
			this.isVisibilidadCeldaCancelarPedido=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarPedido=true;
				} else {
					this.isVisibilidadCeldaGuardarPedido=false;
				}
			}
		} else if(sAccion=="t") {
			this.isVisibilidadCeldaNuevoPedido=false;
			this.isVisibilidadCeldaNuevoRelacionesPedido=false;
			this.isVisibilidadCeldaGuardarCambiosPedido=false;
			this.isVisibilidadCeldaActualizarPedido=false;
			this.isVisibilidadCeldaEliminarPedido=false;
			this.isVisibilidadCeldaCancelarPedido=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarPedido=false;
				} else {
					this.isVisibilidadCeldaGuardarPedido=false;
				}
			}
		}  else if(sAccion=="s"||sAccion=="s2") {
			this.isVisibilidadCeldaNuevoPedido=false;
			this.isVisibilidadCeldaNuevoRelacionesPedido=false;
			this.isVisibilidadCeldaGuardarCambiosPedido=false;
			this.isVisibilidadCeldaModificarPedido=true;
			this.isVisibilidadCeldaActualizarPedido=false;
			this.isVisibilidadCeldaEliminarPedido=false;
			this.isVisibilidadCeldaCancelarPedido=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarPedido=false;
				} else {
					this.isVisibilidadCeldaGuardarPedido=false;
				}
			}
		}
		
		//ACTUALIZA VISIBILIDAD PANELES
		if(PedidoJInternalFrame.CON_DATOS_FRAME && !this.esParaBusquedaForeignKey) {
			//SIEMPRE VISIBLE
			this.isVisibilidadCeldaNuevoPedido=true;
			this.isVisibilidadCeldaNuevoRelacionesPedido=true;
			this.isVisibilidadCeldaGuardarCambiosPedido=true;
		} else {
			this.actualizarEstadoPanelsPedido(sAccion);						
		}
		
		if(this.esParaBusquedaForeignKey) {
			this.isVisibilidadCeldaCopiarPedido=false;
			//this.isVisibilidadCeldaVerFormPedido=false;
			this.isVisibilidadCeldaDuplicarPedido=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONES
		if(!pedidoSessionBean.getConGuardarRelaciones()) {
			this.isVisibilidadCeldaNuevoRelacionesPedido=false;
		} else {
			this.isVisibilidadCeldaNuevoPedido=false;
			this.isVisibilidadCeldaGuardarCambiosPedido=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONADO
		if(pedidoSessionBean.getEsGuardarRelacionado()) {
			if(!pedidoSessionBean.getConGuardarRelaciones()) {	
				this.isVisibilidadCeldaNuevoRelacionesPedido=false;												
			}
			
			this.jButtonCerrarPedido.setVisible(false);
		}
		
		//SI NO TIENE MAXIMO DE RELACIONES PERMITIDAS
		if(!this.conMaximoRelaciones) {
			this.isVisibilidadCeldaNuevoRelacionesPedido=false;
		}
		
		if(!this.permiteMantenimiento(this.pedido)) {
			this.isVisibilidadCeldaActualizarPedido=false;
			this.isVisibilidadCeldaEliminarPedido=false;
		}
		
		
		
	}
	
	public void actualizarEstadoCeldasBotonesConGuardarRelacionesPedido() {
		this.isVisibilidadCeldaNuevoPedido=false;
		this.isVisibilidadCeldaGuardarCambiosPedido=false;
	}
	
	public void actualizarEstadoPanelsPedido(String sAccion) {
		if(sAccion=="n") {
			if(this.jScrollPanelDatosEdicionPedido!=null) {
				this.jScrollPanelDatosEdicionPedido.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasPedido!=null) {
				this.jTabbedPaneBusquedasPedido.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosPedido!=null) {
				this.jScrollPanelDatosPedido.setVisible(true);
			}
			
			if(this.jPanelPaginacionPedido!=null) {
				this.jPanelPaginacionPedido.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesPedido!=null) {
				this.jPanelParametrosReportesPedido.setVisible(true);		    
			}
			
		} else if(sAccion=="a") {				
			if(this.jScrollPanelDatosEdicionPedido!=null) {
				this.jScrollPanelDatosEdicionPedido.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasPedido!=null) {
				this.jTabbedPaneBusquedasPedido.setVisible(false);			
			}
			
			
			
			if(this.jScrollPanelDatosPedido!=null) {
				this.jScrollPanelDatosPedido.setVisible(false);
			}
			
			if(this.jPanelPaginacionPedido!=null) {
				this.jPanelPaginacionPedido.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesPedido!=null) {
				this.jPanelParametrosReportesPedido.setVisible(false);
			}
						
		} else if(sAccion=="ae") {		
			if(this.jScrollPanelDatosEdicionPedido!=null) {
				this.jScrollPanelDatosEdicionPedido.setVisible(true);		
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasPedido!=null) {
				this.jTabbedPaneBusquedasPedido.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosPedido!=null) {
				this.jScrollPanelDatosPedido.setVisible(false);
			}
			
			if(this.jPanelPaginacionPedido!=null) {
				this.jPanelPaginacionPedido.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesPedido!=null) {
				this.jPanelParametrosReportesPedido.setVisible(false);
			}
						
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {	
			if(this.jScrollPanelDatosEdicionPedido!=null) {
				this.jScrollPanelDatosEdicionPedido.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasPedido!=null) {
				this.jTabbedPaneBusquedasPedido.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosPedido!=null) {
				this.jScrollPanelDatosPedido.setVisible(false);
			}
			
			if(this.jPanelPaginacionPedido!=null) {
				this.jPanelPaginacionPedido.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesPedido!=null) {
				this.jPanelParametrosReportesPedido.setVisible(false);
			}
						
		} else if(sAccion=="c") {	
			if(this.jScrollPanelDatosEdicionPedido!=null) {
				this.jScrollPanelDatosEdicionPedido.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasPedido!=null) {
				this.jTabbedPaneBusquedasPedido.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosPedido!=null) {
				this.jScrollPanelDatosPedido.setVisible(true);
			}
			
			if(this.jPanelPaginacionPedido!=null) {
				this.jPanelPaginacionPedido.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesPedido!=null) {
				this.jPanelParametrosReportesPedido.setVisible(true);
			}
						
		} else if(sAccion=="t") {
			
			if(this.jScrollPanelDatosEdicionPedido!=null) {
				this.jScrollPanelDatosEdicionPedido.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasPedido!=null) {
				this.jTabbedPaneBusquedasPedido.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosPedido!=null) {
				this.jScrollPanelDatosPedido.setVisible(true);
			}
			
			if(this.jPanelPaginacionPedido!=null) {
				this.jPanelPaginacionPedido.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesPedido!=null) {
				this.jPanelParametrosReportesPedido.setVisible(true);
			}
						
		}  else if(sAccion=="s"||sAccion=="s2") {
			if(this.jScrollPanelDatosEdicionPedido!=null) {
				this.jScrollPanelDatosEdicionPedido.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasPedido!=null) {
				this.jTabbedPaneBusquedasPedido.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosPedido!=null) {
				this.jScrollPanelDatosPedido.setVisible(true);
			}
			
			if(this.jPanelPaginacionPedido!=null) {
				this.jPanelPaginacionPedido.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesPedido!=null) {
				this.jPanelParametrosReportesPedido.setVisible(true);
			}
			
		} 
		
		if(sAccion.equals("relacionado") || this.pedidoSessionBean.getEsGuardarRelacionado()) {
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				if(this.jTabbedPaneBusquedasPedido!=null) {
					this.jTabbedPaneBusquedasPedido.setVisible(false);				
				}
				
			}
			
			if(this.jPanelParametrosReportesPedido!=null) {
				this.jPanelParametrosReportesPedido.setVisible(false);
			}
		
		} else if(sAccion.equals("no_relacionado") && !this.pedidoSessionBean.getEsGuardarRelacionado()) {
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasPedido!=null) {
				this.jTabbedPaneBusquedasPedido.setVisible(true);			
			}
			
			if(this.jPanelParametrosReportesPedido!=null) {
				this.jPanelParametrosReportesPedido.setVisible(true);
			}
		}
	}	
	
	

	public void setVisibilidadBusquedasParaEmpresa(Boolean isParaEmpresa){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEmpresaNegation=!isParaEmpresa;

			this.isVisibilidadFK_IdCentroCosto=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdCentroCostoPedido);}

			this.isVisibilidadFK_IdCliente=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdClientePedido);}

			this.isVisibilidadFK_IdConsultor=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdConsultor) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdConsultorPedido);}

			this.isVisibilidadFK_IdEmpleado=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdEmpleadoPedido);}

			this.isVisibilidadFK_IdEstadoPedido=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdEstadoPedido) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdEstadoPedidoPedido);}

			this.isVisibilidadFK_IdFormato=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdFormatoPedido);}

			this.isVisibilidadFK_IdResponsable=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdResponsable) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdResponsablePedido);}

			this.isVisibilidadFK_IdRutaTransporte=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdRutaTransporte) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdRutaTransportePedido);}

			this.isVisibilidadFK_IdSubCliente=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdSubClientePedido);}

			this.isVisibilidadFK_IdTipoCambio=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTipoCambioPedido);}

			this.isVisibilidadFK_IdTipoLlamada=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoLlamada) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTipoLlamadaPedido);}

			this.isVisibilidadFK_IdTipoPrecio=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTipoPrecioPedido);}

			this.isVisibilidadFK_IdTransporte=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTransportePedido);}

			this.isVisibilidadFK_IdTransportista=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTransportista) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTransportistaPedido);}

			this.isVisibilidadFK_IdVendedor=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdVendedorPedido);}

			this.isVisibilidadFK_IdZona=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdZonaPedido);}
		}
		
	}

	public void setVisibilidadBusquedasParaSucursal(Boolean isParaSucursal){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaSucursalNegation=!isParaSucursal;

			this.isVisibilidadFK_IdCentroCosto=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdCentroCostoPedido);}

			this.isVisibilidadFK_IdCliente=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdClientePedido);}

			this.isVisibilidadFK_IdConsultor=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdConsultor) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdConsultorPedido);}

			this.isVisibilidadFK_IdEmpleado=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdEmpleadoPedido);}

			this.isVisibilidadFK_IdEstadoPedido=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdEstadoPedido) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdEstadoPedidoPedido);}

			this.isVisibilidadFK_IdFormato=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdFormatoPedido);}

			this.isVisibilidadFK_IdResponsable=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdResponsable) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdResponsablePedido);}

			this.isVisibilidadFK_IdRutaTransporte=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdRutaTransporte) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdRutaTransportePedido);}

			this.isVisibilidadFK_IdSubCliente=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdSubClientePedido);}

			this.isVisibilidadFK_IdTipoCambio=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTipoCambioPedido);}

			this.isVisibilidadFK_IdTipoLlamada=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTipoLlamada) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTipoLlamadaPedido);}

			this.isVisibilidadFK_IdTipoPrecio=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTipoPrecioPedido);}

			this.isVisibilidadFK_IdTransporte=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTransportePedido);}

			this.isVisibilidadFK_IdTransportista=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTransportista) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTransportistaPedido);}

			this.isVisibilidadFK_IdVendedor=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdVendedorPedido);}

			this.isVisibilidadFK_IdZona=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdZonaPedido);}
		}
		
	}

	public void setVisibilidadBusquedasParaEjercicio(Boolean isParaEjercicio){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEjercicioNegation=!isParaEjercicio;

			this.isVisibilidadFK_IdCentroCosto=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdCentroCostoPedido);}

			this.isVisibilidadFK_IdCliente=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdClientePedido);}

			this.isVisibilidadFK_IdConsultor=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdConsultor) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdConsultorPedido);}

			this.isVisibilidadFK_IdEmpleado=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdEmpleadoPedido);}

			this.isVisibilidadFK_IdEstadoPedido=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdEstadoPedido) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdEstadoPedidoPedido);}

			this.isVisibilidadFK_IdFormato=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdFormatoPedido);}

			this.isVisibilidadFK_IdResponsable=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdResponsable) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdResponsablePedido);}

			this.isVisibilidadFK_IdRutaTransporte=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdRutaTransporte) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdRutaTransportePedido);}

			this.isVisibilidadFK_IdSubCliente=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdSubClientePedido);}

			this.isVisibilidadFK_IdTipoCambio=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTipoCambioPedido);}

			this.isVisibilidadFK_IdTipoLlamada=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdTipoLlamada) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTipoLlamadaPedido);}

			this.isVisibilidadFK_IdTipoPrecio=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTipoPrecioPedido);}

			this.isVisibilidadFK_IdTransporte=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTransportePedido);}

			this.isVisibilidadFK_IdTransportista=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdTransportista) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTransportistaPedido);}

			this.isVisibilidadFK_IdVendedor=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdVendedorPedido);}

			this.isVisibilidadFK_IdZona=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdZonaPedido);}
		}
		
	}

	public void setVisibilidadBusquedasParaPeriodo(Boolean isParaPeriodo){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaPeriodoNegation=!isParaPeriodo;

			this.isVisibilidadFK_IdCentroCosto=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdCentroCostoPedido);}

			this.isVisibilidadFK_IdCliente=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdClientePedido);}

			this.isVisibilidadFK_IdConsultor=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdConsultor) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdConsultorPedido);}

			this.isVisibilidadFK_IdEmpleado=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdEmpleadoPedido);}

			this.isVisibilidadFK_IdEstadoPedido=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdEstadoPedido) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdEstadoPedidoPedido);}

			this.isVisibilidadFK_IdFormato=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdFormatoPedido);}

			this.isVisibilidadFK_IdResponsable=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdResponsable) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdResponsablePedido);}

			this.isVisibilidadFK_IdRutaTransporte=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdRutaTransporte) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdRutaTransportePedido);}

			this.isVisibilidadFK_IdSubCliente=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdSubClientePedido);}

			this.isVisibilidadFK_IdTipoCambio=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTipoCambioPedido);}

			this.isVisibilidadFK_IdTipoLlamada=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdTipoLlamada) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTipoLlamadaPedido);}

			this.isVisibilidadFK_IdTipoPrecio=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTipoPrecioPedido);}

			this.isVisibilidadFK_IdTransporte=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTransportePedido);}

			this.isVisibilidadFK_IdTransportista=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdTransportista) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTransportistaPedido);}

			this.isVisibilidadFK_IdVendedor=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdVendedorPedido);}

			this.isVisibilidadFK_IdZona=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdZonaPedido);}
		}
		
	}

	public void setVisibilidadBusquedasParaAnio(Boolean isParaAnio){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaAnioNegation=!isParaAnio;

			this.isVisibilidadFK_IdCentroCosto=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdCentroCostoPedido);}

			this.isVisibilidadFK_IdCliente=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdClientePedido);}

			this.isVisibilidadFK_IdConsultor=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdConsultor) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdConsultorPedido);}

			this.isVisibilidadFK_IdEmpleado=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdEmpleadoPedido);}

			this.isVisibilidadFK_IdEstadoPedido=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdEstadoPedido) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdEstadoPedidoPedido);}

			this.isVisibilidadFK_IdFormato=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdFormatoPedido);}

			this.isVisibilidadFK_IdResponsable=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdResponsable) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdResponsablePedido);}

			this.isVisibilidadFK_IdRutaTransporte=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdRutaTransporte) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdRutaTransportePedido);}

			this.isVisibilidadFK_IdSubCliente=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdSubClientePedido);}

			this.isVisibilidadFK_IdTipoCambio=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTipoCambioPedido);}

			this.isVisibilidadFK_IdTipoLlamada=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdTipoLlamada) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTipoLlamadaPedido);}

			this.isVisibilidadFK_IdTipoPrecio=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTipoPrecioPedido);}

			this.isVisibilidadFK_IdTransporte=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTransportePedido);}

			this.isVisibilidadFK_IdTransportista=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdTransportista) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTransportistaPedido);}

			this.isVisibilidadFK_IdVendedor=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdVendedorPedido);}

			this.isVisibilidadFK_IdZona=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdZonaPedido);}
		}
		
	}

	public void setVisibilidadBusquedasParaMes(Boolean isParaMes){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaMesNegation=!isParaMes;

			this.isVisibilidadFK_IdCentroCosto=isParaMesNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdCentroCostoPedido);}

			this.isVisibilidadFK_IdCliente=isParaMesNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdClientePedido);}

			this.isVisibilidadFK_IdConsultor=isParaMesNegation;
			if(!this.isVisibilidadFK_IdConsultor) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdConsultorPedido);}

			this.isVisibilidadFK_IdEmpleado=isParaMesNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdEmpleadoPedido);}

			this.isVisibilidadFK_IdEstadoPedido=isParaMesNegation;
			if(!this.isVisibilidadFK_IdEstadoPedido) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdEstadoPedidoPedido);}

			this.isVisibilidadFK_IdFormato=isParaMesNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdFormatoPedido);}

			this.isVisibilidadFK_IdResponsable=isParaMesNegation;
			if(!this.isVisibilidadFK_IdResponsable) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdResponsablePedido);}

			this.isVisibilidadFK_IdRutaTransporte=isParaMesNegation;
			if(!this.isVisibilidadFK_IdRutaTransporte) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdRutaTransportePedido);}

			this.isVisibilidadFK_IdSubCliente=isParaMesNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdSubClientePedido);}

			this.isVisibilidadFK_IdTipoCambio=isParaMesNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTipoCambioPedido);}

			this.isVisibilidadFK_IdTipoLlamada=isParaMesNegation;
			if(!this.isVisibilidadFK_IdTipoLlamada) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTipoLlamadaPedido);}

			this.isVisibilidadFK_IdTipoPrecio=isParaMesNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTipoPrecioPedido);}

			this.isVisibilidadFK_IdTransporte=isParaMesNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTransportePedido);}

			this.isVisibilidadFK_IdTransportista=isParaMesNegation;
			if(!this.isVisibilidadFK_IdTransportista) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTransportistaPedido);}

			this.isVisibilidadFK_IdVendedor=isParaMesNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdVendedorPedido);}

			this.isVisibilidadFK_IdZona=isParaMesNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdZonaPedido);}
		}
		
	}

	public void setVisibilidadBusquedasParaUsuario(Boolean isParaUsuario){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaUsuarioNegation=!isParaUsuario;

			this.isVisibilidadFK_IdCentroCosto=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdCentroCostoPedido);}

			this.isVisibilidadFK_IdCliente=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdClientePedido);}

			this.isVisibilidadFK_IdConsultor=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdConsultor) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdConsultorPedido);}

			this.isVisibilidadFK_IdEmpleado=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdEmpleadoPedido);}

			this.isVisibilidadFK_IdEstadoPedido=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdEstadoPedido) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdEstadoPedidoPedido);}

			this.isVisibilidadFK_IdFormato=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdFormatoPedido);}

			this.isVisibilidadFK_IdResponsable=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdResponsable) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdResponsablePedido);}

			this.isVisibilidadFK_IdRutaTransporte=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdRutaTransporte) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdRutaTransportePedido);}

			this.isVisibilidadFK_IdSubCliente=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdSubClientePedido);}

			this.isVisibilidadFK_IdTipoCambio=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTipoCambioPedido);}

			this.isVisibilidadFK_IdTipoLlamada=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdTipoLlamada) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTipoLlamadaPedido);}

			this.isVisibilidadFK_IdTipoPrecio=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTipoPrecioPedido);}

			this.isVisibilidadFK_IdTransporte=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTransportePedido);}

			this.isVisibilidadFK_IdTransportista=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdTransportista) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTransportistaPedido);}

			this.isVisibilidadFK_IdVendedor=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdVendedorPedido);}

			this.isVisibilidadFK_IdZona=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdZonaPedido);}
		}
		
	}

	public void setVisibilidadBusquedasParaMoneda(Boolean isParaMoneda){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaMonedaNegation=!isParaMoneda;

			this.isVisibilidadFK_IdCentroCosto=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdCentroCostoPedido);}

			this.isVisibilidadFK_IdCliente=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdClientePedido);}

			this.isVisibilidadFK_IdConsultor=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdConsultor) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdConsultorPedido);}

			this.isVisibilidadFK_IdEmpleado=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdEmpleadoPedido);}

			this.isVisibilidadFK_IdEstadoPedido=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdEstadoPedido) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdEstadoPedidoPedido);}

			this.isVisibilidadFK_IdFormato=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdFormatoPedido);}

			this.isVisibilidadFK_IdResponsable=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdResponsable) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdResponsablePedido);}

			this.isVisibilidadFK_IdRutaTransporte=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdRutaTransporte) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdRutaTransportePedido);}

			this.isVisibilidadFK_IdSubCliente=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdSubClientePedido);}

			this.isVisibilidadFK_IdTipoCambio=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTipoCambioPedido);}

			this.isVisibilidadFK_IdTipoLlamada=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdTipoLlamada) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTipoLlamadaPedido);}

			this.isVisibilidadFK_IdTipoPrecio=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTipoPrecioPedido);}

			this.isVisibilidadFK_IdTransporte=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTransportePedido);}

			this.isVisibilidadFK_IdTransportista=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdTransportista) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTransportistaPedido);}

			this.isVisibilidadFK_IdVendedor=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdVendedorPedido);}

			this.isVisibilidadFK_IdZona=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdZonaPedido);}
		}
		
	}

	public void setVisibilidadBusquedasParaEmpleado(Boolean isParaEmpleado){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEmpleadoNegation=!isParaEmpleado;

			this.isVisibilidadFK_IdCentroCosto=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdCentroCostoPedido);}

			this.isVisibilidadFK_IdCliente=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdClientePedido);}

			this.isVisibilidadFK_IdConsultor=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdConsultor) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdConsultorPedido);}

			this.isVisibilidadFK_IdEmpleado=isParaEmpleado;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdEmpleadoPedido);}

			this.isVisibilidadFK_IdEstadoPedido=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdEstadoPedido) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdEstadoPedidoPedido);}

			this.isVisibilidadFK_IdFormato=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdFormatoPedido);}

			this.isVisibilidadFK_IdResponsable=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdResponsable) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdResponsablePedido);}

			this.isVisibilidadFK_IdRutaTransporte=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdRutaTransporte) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdRutaTransportePedido);}

			this.isVisibilidadFK_IdSubCliente=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdSubClientePedido);}

			this.isVisibilidadFK_IdTipoCambio=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTipoCambioPedido);}

			this.isVisibilidadFK_IdTipoLlamada=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdTipoLlamada) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTipoLlamadaPedido);}

			this.isVisibilidadFK_IdTipoPrecio=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTipoPrecioPedido);}

			this.isVisibilidadFK_IdTransporte=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTransportePedido);}

			this.isVisibilidadFK_IdTransportista=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdTransportista) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTransportistaPedido);}

			this.isVisibilidadFK_IdVendedor=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdVendedorPedido);}

			this.isVisibilidadFK_IdZona=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdZonaPedido);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoPrecio(Boolean isParaTipoPrecio){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoPrecioNegation=!isParaTipoPrecio;

			this.isVisibilidadFK_IdCentroCosto=isParaTipoPrecioNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdCentroCostoPedido);}

			this.isVisibilidadFK_IdCliente=isParaTipoPrecioNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdClientePedido);}

			this.isVisibilidadFK_IdConsultor=isParaTipoPrecioNegation;
			if(!this.isVisibilidadFK_IdConsultor) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdConsultorPedido);}

			this.isVisibilidadFK_IdEmpleado=isParaTipoPrecioNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdEmpleadoPedido);}

			this.isVisibilidadFK_IdEstadoPedido=isParaTipoPrecioNegation;
			if(!this.isVisibilidadFK_IdEstadoPedido) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdEstadoPedidoPedido);}

			this.isVisibilidadFK_IdFormato=isParaTipoPrecioNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdFormatoPedido);}

			this.isVisibilidadFK_IdResponsable=isParaTipoPrecioNegation;
			if(!this.isVisibilidadFK_IdResponsable) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdResponsablePedido);}

			this.isVisibilidadFK_IdRutaTransporte=isParaTipoPrecioNegation;
			if(!this.isVisibilidadFK_IdRutaTransporte) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdRutaTransportePedido);}

			this.isVisibilidadFK_IdSubCliente=isParaTipoPrecioNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdSubClientePedido);}

			this.isVisibilidadFK_IdTipoCambio=isParaTipoPrecioNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTipoCambioPedido);}

			this.isVisibilidadFK_IdTipoLlamada=isParaTipoPrecioNegation;
			if(!this.isVisibilidadFK_IdTipoLlamada) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTipoLlamadaPedido);}

			this.isVisibilidadFK_IdTipoPrecio=isParaTipoPrecio;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTipoPrecioPedido);}

			this.isVisibilidadFK_IdTransporte=isParaTipoPrecioNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTransportePedido);}

			this.isVisibilidadFK_IdTransportista=isParaTipoPrecioNegation;
			if(!this.isVisibilidadFK_IdTransportista) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTransportistaPedido);}

			this.isVisibilidadFK_IdVendedor=isParaTipoPrecioNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdVendedorPedido);}

			this.isVisibilidadFK_IdZona=isParaTipoPrecioNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdZonaPedido);}
		}
		
	}

	public void setVisibilidadBusquedasParaFormato(Boolean isParaFormato){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaFormatoNegation=!isParaFormato;

			this.isVisibilidadFK_IdCentroCosto=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdCentroCostoPedido);}

			this.isVisibilidadFK_IdCliente=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdClientePedido);}

			this.isVisibilidadFK_IdConsultor=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdConsultor) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdConsultorPedido);}

			this.isVisibilidadFK_IdEmpleado=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdEmpleadoPedido);}

			this.isVisibilidadFK_IdEstadoPedido=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdEstadoPedido) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdEstadoPedidoPedido);}

			this.isVisibilidadFK_IdFormato=isParaFormato;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdFormatoPedido);}

			this.isVisibilidadFK_IdResponsable=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdResponsable) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdResponsablePedido);}

			this.isVisibilidadFK_IdRutaTransporte=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdRutaTransporte) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdRutaTransportePedido);}

			this.isVisibilidadFK_IdSubCliente=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdSubClientePedido);}

			this.isVisibilidadFK_IdTipoCambio=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTipoCambioPedido);}

			this.isVisibilidadFK_IdTipoLlamada=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdTipoLlamada) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTipoLlamadaPedido);}

			this.isVisibilidadFK_IdTipoPrecio=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTipoPrecioPedido);}

			this.isVisibilidadFK_IdTransporte=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTransportePedido);}

			this.isVisibilidadFK_IdTransportista=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdTransportista) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTransportistaPedido);}

			this.isVisibilidadFK_IdVendedor=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdVendedorPedido);}

			this.isVisibilidadFK_IdZona=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdZonaPedido);}
		}
		
	}

	public void setVisibilidadBusquedasParaCliente(Boolean isParaCliente){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaClienteNegation=!isParaCliente;

			this.isVisibilidadFK_IdCentroCosto=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdCentroCostoPedido);}

			this.isVisibilidadFK_IdCliente=isParaCliente;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdClientePedido);}

			this.isVisibilidadFK_IdConsultor=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdConsultor) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdConsultorPedido);}

			this.isVisibilidadFK_IdEmpleado=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdEmpleadoPedido);}

			this.isVisibilidadFK_IdEstadoPedido=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdEstadoPedido) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdEstadoPedidoPedido);}

			this.isVisibilidadFK_IdFormato=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdFormatoPedido);}

			this.isVisibilidadFK_IdResponsable=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdResponsable) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdResponsablePedido);}

			this.isVisibilidadFK_IdRutaTransporte=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdRutaTransporte) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdRutaTransportePedido);}

			this.isVisibilidadFK_IdSubCliente=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdSubClientePedido);}

			this.isVisibilidadFK_IdTipoCambio=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTipoCambioPedido);}

			this.isVisibilidadFK_IdTipoLlamada=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdTipoLlamada) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTipoLlamadaPedido);}

			this.isVisibilidadFK_IdTipoPrecio=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTipoPrecioPedido);}

			this.isVisibilidadFK_IdTransporte=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTransportePedido);}

			this.isVisibilidadFK_IdTransportista=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdTransportista) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTransportistaPedido);}

			this.isVisibilidadFK_IdVendedor=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdVendedorPedido);}

			this.isVisibilidadFK_IdZona=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdZonaPedido);}
		}
		
	}

	public void setVisibilidadBusquedasParaSubCliente(Boolean isParaSubCliente){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaSubClienteNegation=!isParaSubCliente;

			this.isVisibilidadFK_IdCentroCosto=isParaSubClienteNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdCentroCostoPedido);}

			this.isVisibilidadFK_IdCliente=isParaSubClienteNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdClientePedido);}

			this.isVisibilidadFK_IdConsultor=isParaSubClienteNegation;
			if(!this.isVisibilidadFK_IdConsultor) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdConsultorPedido);}

			this.isVisibilidadFK_IdEmpleado=isParaSubClienteNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdEmpleadoPedido);}

			this.isVisibilidadFK_IdEstadoPedido=isParaSubClienteNegation;
			if(!this.isVisibilidadFK_IdEstadoPedido) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdEstadoPedidoPedido);}

			this.isVisibilidadFK_IdFormato=isParaSubClienteNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdFormatoPedido);}

			this.isVisibilidadFK_IdResponsable=isParaSubClienteNegation;
			if(!this.isVisibilidadFK_IdResponsable) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdResponsablePedido);}

			this.isVisibilidadFK_IdRutaTransporte=isParaSubClienteNegation;
			if(!this.isVisibilidadFK_IdRutaTransporte) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdRutaTransportePedido);}

			this.isVisibilidadFK_IdSubCliente=isParaSubCliente;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdSubClientePedido);}

			this.isVisibilidadFK_IdTipoCambio=isParaSubClienteNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTipoCambioPedido);}

			this.isVisibilidadFK_IdTipoLlamada=isParaSubClienteNegation;
			if(!this.isVisibilidadFK_IdTipoLlamada) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTipoLlamadaPedido);}

			this.isVisibilidadFK_IdTipoPrecio=isParaSubClienteNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTipoPrecioPedido);}

			this.isVisibilidadFK_IdTransporte=isParaSubClienteNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTransportePedido);}

			this.isVisibilidadFK_IdTransportista=isParaSubClienteNegation;
			if(!this.isVisibilidadFK_IdTransportista) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTransportistaPedido);}

			this.isVisibilidadFK_IdVendedor=isParaSubClienteNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdVendedorPedido);}

			this.isVisibilidadFK_IdZona=isParaSubClienteNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdZonaPedido);}
		}
		
	}

	public void setVisibilidadBusquedasParaVendedor(Boolean isParaVendedor){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaVendedorNegation=!isParaVendedor;

			this.isVisibilidadFK_IdCentroCosto=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdCentroCostoPedido);}

			this.isVisibilidadFK_IdCliente=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdClientePedido);}

			this.isVisibilidadFK_IdConsultor=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdConsultor) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdConsultorPedido);}

			this.isVisibilidadFK_IdEmpleado=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdEmpleadoPedido);}

			this.isVisibilidadFK_IdEstadoPedido=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdEstadoPedido) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdEstadoPedidoPedido);}

			this.isVisibilidadFK_IdFormato=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdFormatoPedido);}

			this.isVisibilidadFK_IdResponsable=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdResponsable) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdResponsablePedido);}

			this.isVisibilidadFK_IdRutaTransporte=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdRutaTransporte) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdRutaTransportePedido);}

			this.isVisibilidadFK_IdSubCliente=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdSubClientePedido);}

			this.isVisibilidadFK_IdTipoCambio=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTipoCambioPedido);}

			this.isVisibilidadFK_IdTipoLlamada=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdTipoLlamada) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTipoLlamadaPedido);}

			this.isVisibilidadFK_IdTipoPrecio=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTipoPrecioPedido);}

			this.isVisibilidadFK_IdTransporte=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTransportePedido);}

			this.isVisibilidadFK_IdTransportista=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdTransportista) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTransportistaPedido);}

			this.isVisibilidadFK_IdVendedor=isParaVendedor;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdVendedorPedido);}

			this.isVisibilidadFK_IdZona=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdZonaPedido);}
		}
		
	}

	public void setVisibilidadBusquedasParaConsultor(Boolean isParaConsultor){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaConsultorNegation=!isParaConsultor;

			this.isVisibilidadFK_IdCentroCosto=isParaConsultorNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdCentroCostoPedido);}

			this.isVisibilidadFK_IdCliente=isParaConsultorNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdClientePedido);}

			this.isVisibilidadFK_IdConsultor=isParaConsultor;
			if(!this.isVisibilidadFK_IdConsultor) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdConsultorPedido);}

			this.isVisibilidadFK_IdEmpleado=isParaConsultorNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdEmpleadoPedido);}

			this.isVisibilidadFK_IdEstadoPedido=isParaConsultorNegation;
			if(!this.isVisibilidadFK_IdEstadoPedido) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdEstadoPedidoPedido);}

			this.isVisibilidadFK_IdFormato=isParaConsultorNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdFormatoPedido);}

			this.isVisibilidadFK_IdResponsable=isParaConsultorNegation;
			if(!this.isVisibilidadFK_IdResponsable) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdResponsablePedido);}

			this.isVisibilidadFK_IdRutaTransporte=isParaConsultorNegation;
			if(!this.isVisibilidadFK_IdRutaTransporte) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdRutaTransportePedido);}

			this.isVisibilidadFK_IdSubCliente=isParaConsultorNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdSubClientePedido);}

			this.isVisibilidadFK_IdTipoCambio=isParaConsultorNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTipoCambioPedido);}

			this.isVisibilidadFK_IdTipoLlamada=isParaConsultorNegation;
			if(!this.isVisibilidadFK_IdTipoLlamada) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTipoLlamadaPedido);}

			this.isVisibilidadFK_IdTipoPrecio=isParaConsultorNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTipoPrecioPedido);}

			this.isVisibilidadFK_IdTransporte=isParaConsultorNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTransportePedido);}

			this.isVisibilidadFK_IdTransportista=isParaConsultorNegation;
			if(!this.isVisibilidadFK_IdTransportista) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTransportistaPedido);}

			this.isVisibilidadFK_IdVendedor=isParaConsultorNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdVendedorPedido);}

			this.isVisibilidadFK_IdZona=isParaConsultorNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdZonaPedido);}
		}
		
	}

	public void setVisibilidadBusquedasParaResponsable(Boolean isParaResponsable){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaResponsableNegation=!isParaResponsable;

			this.isVisibilidadFK_IdCentroCosto=isParaResponsableNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdCentroCostoPedido);}

			this.isVisibilidadFK_IdCliente=isParaResponsableNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdClientePedido);}

			this.isVisibilidadFK_IdConsultor=isParaResponsableNegation;
			if(!this.isVisibilidadFK_IdConsultor) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdConsultorPedido);}

			this.isVisibilidadFK_IdEmpleado=isParaResponsableNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdEmpleadoPedido);}

			this.isVisibilidadFK_IdEstadoPedido=isParaResponsableNegation;
			if(!this.isVisibilidadFK_IdEstadoPedido) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdEstadoPedidoPedido);}

			this.isVisibilidadFK_IdFormato=isParaResponsableNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdFormatoPedido);}

			this.isVisibilidadFK_IdResponsable=isParaResponsable;
			if(!this.isVisibilidadFK_IdResponsable) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdResponsablePedido);}

			this.isVisibilidadFK_IdRutaTransporte=isParaResponsableNegation;
			if(!this.isVisibilidadFK_IdRutaTransporte) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdRutaTransportePedido);}

			this.isVisibilidadFK_IdSubCliente=isParaResponsableNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdSubClientePedido);}

			this.isVisibilidadFK_IdTipoCambio=isParaResponsableNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTipoCambioPedido);}

			this.isVisibilidadFK_IdTipoLlamada=isParaResponsableNegation;
			if(!this.isVisibilidadFK_IdTipoLlamada) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTipoLlamadaPedido);}

			this.isVisibilidadFK_IdTipoPrecio=isParaResponsableNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTipoPrecioPedido);}

			this.isVisibilidadFK_IdTransporte=isParaResponsableNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTransportePedido);}

			this.isVisibilidadFK_IdTransportista=isParaResponsableNegation;
			if(!this.isVisibilidadFK_IdTransportista) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTransportistaPedido);}

			this.isVisibilidadFK_IdVendedor=isParaResponsableNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdVendedorPedido);}

			this.isVisibilidadFK_IdZona=isParaResponsableNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdZonaPedido);}
		}
		
	}

	public void setVisibilidadBusquedasParaEstadoPedido(Boolean isParaEstadoPedido){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEstadoPedidoNegation=!isParaEstadoPedido;

			this.isVisibilidadFK_IdCentroCosto=isParaEstadoPedidoNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdCentroCostoPedido);}

			this.isVisibilidadFK_IdCliente=isParaEstadoPedidoNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdClientePedido);}

			this.isVisibilidadFK_IdConsultor=isParaEstadoPedidoNegation;
			if(!this.isVisibilidadFK_IdConsultor) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdConsultorPedido);}

			this.isVisibilidadFK_IdEmpleado=isParaEstadoPedidoNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdEmpleadoPedido);}

			this.isVisibilidadFK_IdEstadoPedido=isParaEstadoPedido;
			if(!this.isVisibilidadFK_IdEstadoPedido) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdEstadoPedidoPedido);}

			this.isVisibilidadFK_IdFormato=isParaEstadoPedidoNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdFormatoPedido);}

			this.isVisibilidadFK_IdResponsable=isParaEstadoPedidoNegation;
			if(!this.isVisibilidadFK_IdResponsable) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdResponsablePedido);}

			this.isVisibilidadFK_IdRutaTransporte=isParaEstadoPedidoNegation;
			if(!this.isVisibilidadFK_IdRutaTransporte) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdRutaTransportePedido);}

			this.isVisibilidadFK_IdSubCliente=isParaEstadoPedidoNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdSubClientePedido);}

			this.isVisibilidadFK_IdTipoCambio=isParaEstadoPedidoNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTipoCambioPedido);}

			this.isVisibilidadFK_IdTipoLlamada=isParaEstadoPedidoNegation;
			if(!this.isVisibilidadFK_IdTipoLlamada) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTipoLlamadaPedido);}

			this.isVisibilidadFK_IdTipoPrecio=isParaEstadoPedidoNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTipoPrecioPedido);}

			this.isVisibilidadFK_IdTransporte=isParaEstadoPedidoNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTransportePedido);}

			this.isVisibilidadFK_IdTransportista=isParaEstadoPedidoNegation;
			if(!this.isVisibilidadFK_IdTransportista) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTransportistaPedido);}

			this.isVisibilidadFK_IdVendedor=isParaEstadoPedidoNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdVendedorPedido);}

			this.isVisibilidadFK_IdZona=isParaEstadoPedidoNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdZonaPedido);}
		}
		
	}

	public void setVisibilidadBusquedasParaTransporte(Boolean isParaTransporte){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTransporteNegation=!isParaTransporte;

			this.isVisibilidadFK_IdCentroCosto=isParaTransporteNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdCentroCostoPedido);}

			this.isVisibilidadFK_IdCliente=isParaTransporteNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdClientePedido);}

			this.isVisibilidadFK_IdConsultor=isParaTransporteNegation;
			if(!this.isVisibilidadFK_IdConsultor) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdConsultorPedido);}

			this.isVisibilidadFK_IdEmpleado=isParaTransporteNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdEmpleadoPedido);}

			this.isVisibilidadFK_IdEstadoPedido=isParaTransporteNegation;
			if(!this.isVisibilidadFK_IdEstadoPedido) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdEstadoPedidoPedido);}

			this.isVisibilidadFK_IdFormato=isParaTransporteNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdFormatoPedido);}

			this.isVisibilidadFK_IdResponsable=isParaTransporteNegation;
			if(!this.isVisibilidadFK_IdResponsable) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdResponsablePedido);}

			this.isVisibilidadFK_IdRutaTransporte=isParaTransporteNegation;
			if(!this.isVisibilidadFK_IdRutaTransporte) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdRutaTransportePedido);}

			this.isVisibilidadFK_IdSubCliente=isParaTransporteNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdSubClientePedido);}

			this.isVisibilidadFK_IdTipoCambio=isParaTransporteNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTipoCambioPedido);}

			this.isVisibilidadFK_IdTipoLlamada=isParaTransporteNegation;
			if(!this.isVisibilidadFK_IdTipoLlamada) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTipoLlamadaPedido);}

			this.isVisibilidadFK_IdTipoPrecio=isParaTransporteNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTipoPrecioPedido);}

			this.isVisibilidadFK_IdTransporte=isParaTransporte;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTransportePedido);}

			this.isVisibilidadFK_IdTransportista=isParaTransporteNegation;
			if(!this.isVisibilidadFK_IdTransportista) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTransportistaPedido);}

			this.isVisibilidadFK_IdVendedor=isParaTransporteNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdVendedorPedido);}

			this.isVisibilidadFK_IdZona=isParaTransporteNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdZonaPedido);}
		}
		
	}

	public void setVisibilidadBusquedasParaRutaTransporte(Boolean isParaRutaTransporte){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaRutaTransporteNegation=!isParaRutaTransporte;

			this.isVisibilidadFK_IdCentroCosto=isParaRutaTransporteNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdCentroCostoPedido);}

			this.isVisibilidadFK_IdCliente=isParaRutaTransporteNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdClientePedido);}

			this.isVisibilidadFK_IdConsultor=isParaRutaTransporteNegation;
			if(!this.isVisibilidadFK_IdConsultor) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdConsultorPedido);}

			this.isVisibilidadFK_IdEmpleado=isParaRutaTransporteNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdEmpleadoPedido);}

			this.isVisibilidadFK_IdEstadoPedido=isParaRutaTransporteNegation;
			if(!this.isVisibilidadFK_IdEstadoPedido) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdEstadoPedidoPedido);}

			this.isVisibilidadFK_IdFormato=isParaRutaTransporteNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdFormatoPedido);}

			this.isVisibilidadFK_IdResponsable=isParaRutaTransporteNegation;
			if(!this.isVisibilidadFK_IdResponsable) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdResponsablePedido);}

			this.isVisibilidadFK_IdRutaTransporte=isParaRutaTransporte;
			if(!this.isVisibilidadFK_IdRutaTransporte) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdRutaTransportePedido);}

			this.isVisibilidadFK_IdSubCliente=isParaRutaTransporteNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdSubClientePedido);}

			this.isVisibilidadFK_IdTipoCambio=isParaRutaTransporteNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTipoCambioPedido);}

			this.isVisibilidadFK_IdTipoLlamada=isParaRutaTransporteNegation;
			if(!this.isVisibilidadFK_IdTipoLlamada) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTipoLlamadaPedido);}

			this.isVisibilidadFK_IdTipoPrecio=isParaRutaTransporteNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTipoPrecioPedido);}

			this.isVisibilidadFK_IdTransporte=isParaRutaTransporteNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTransportePedido);}

			this.isVisibilidadFK_IdTransportista=isParaRutaTransporteNegation;
			if(!this.isVisibilidadFK_IdTransportista) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTransportistaPedido);}

			this.isVisibilidadFK_IdVendedor=isParaRutaTransporteNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdVendedorPedido);}

			this.isVisibilidadFK_IdZona=isParaRutaTransporteNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdZonaPedido);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoLlamada(Boolean isParaTipoLlamada){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoLlamadaNegation=!isParaTipoLlamada;

			this.isVisibilidadFK_IdCentroCosto=isParaTipoLlamadaNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdCentroCostoPedido);}

			this.isVisibilidadFK_IdCliente=isParaTipoLlamadaNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdClientePedido);}

			this.isVisibilidadFK_IdConsultor=isParaTipoLlamadaNegation;
			if(!this.isVisibilidadFK_IdConsultor) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdConsultorPedido);}

			this.isVisibilidadFK_IdEmpleado=isParaTipoLlamadaNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdEmpleadoPedido);}

			this.isVisibilidadFK_IdEstadoPedido=isParaTipoLlamadaNegation;
			if(!this.isVisibilidadFK_IdEstadoPedido) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdEstadoPedidoPedido);}

			this.isVisibilidadFK_IdFormato=isParaTipoLlamadaNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdFormatoPedido);}

			this.isVisibilidadFK_IdResponsable=isParaTipoLlamadaNegation;
			if(!this.isVisibilidadFK_IdResponsable) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdResponsablePedido);}

			this.isVisibilidadFK_IdRutaTransporte=isParaTipoLlamadaNegation;
			if(!this.isVisibilidadFK_IdRutaTransporte) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdRutaTransportePedido);}

			this.isVisibilidadFK_IdSubCliente=isParaTipoLlamadaNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdSubClientePedido);}

			this.isVisibilidadFK_IdTipoCambio=isParaTipoLlamadaNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTipoCambioPedido);}

			this.isVisibilidadFK_IdTipoLlamada=isParaTipoLlamada;
			if(!this.isVisibilidadFK_IdTipoLlamada) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTipoLlamadaPedido);}

			this.isVisibilidadFK_IdTipoPrecio=isParaTipoLlamadaNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTipoPrecioPedido);}

			this.isVisibilidadFK_IdTransporte=isParaTipoLlamadaNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTransportePedido);}

			this.isVisibilidadFK_IdTransportista=isParaTipoLlamadaNegation;
			if(!this.isVisibilidadFK_IdTransportista) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTransportistaPedido);}

			this.isVisibilidadFK_IdVendedor=isParaTipoLlamadaNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdVendedorPedido);}

			this.isVisibilidadFK_IdZona=isParaTipoLlamadaNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdZonaPedido);}
		}
		
	}

	public void setVisibilidadBusquedasParaTransportista(Boolean isParaTransportista){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTransportistaNegation=!isParaTransportista;

			this.isVisibilidadFK_IdCentroCosto=isParaTransportistaNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdCentroCostoPedido);}

			this.isVisibilidadFK_IdCliente=isParaTransportistaNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdClientePedido);}

			this.isVisibilidadFK_IdConsultor=isParaTransportistaNegation;
			if(!this.isVisibilidadFK_IdConsultor) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdConsultorPedido);}

			this.isVisibilidadFK_IdEmpleado=isParaTransportistaNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdEmpleadoPedido);}

			this.isVisibilidadFK_IdEstadoPedido=isParaTransportistaNegation;
			if(!this.isVisibilidadFK_IdEstadoPedido) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdEstadoPedidoPedido);}

			this.isVisibilidadFK_IdFormato=isParaTransportistaNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdFormatoPedido);}

			this.isVisibilidadFK_IdResponsable=isParaTransportistaNegation;
			if(!this.isVisibilidadFK_IdResponsable) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdResponsablePedido);}

			this.isVisibilidadFK_IdRutaTransporte=isParaTransportistaNegation;
			if(!this.isVisibilidadFK_IdRutaTransporte) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdRutaTransportePedido);}

			this.isVisibilidadFK_IdSubCliente=isParaTransportistaNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdSubClientePedido);}

			this.isVisibilidadFK_IdTipoCambio=isParaTransportistaNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTipoCambioPedido);}

			this.isVisibilidadFK_IdTipoLlamada=isParaTransportistaNegation;
			if(!this.isVisibilidadFK_IdTipoLlamada) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTipoLlamadaPedido);}

			this.isVisibilidadFK_IdTipoPrecio=isParaTransportistaNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTipoPrecioPedido);}

			this.isVisibilidadFK_IdTransporte=isParaTransportistaNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTransportePedido);}

			this.isVisibilidadFK_IdTransportista=isParaTransportista;
			if(!this.isVisibilidadFK_IdTransportista) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTransportistaPedido);}

			this.isVisibilidadFK_IdVendedor=isParaTransportistaNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdVendedorPedido);}

			this.isVisibilidadFK_IdZona=isParaTransportistaNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdZonaPedido);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoCambio(Boolean isParaTipoCambio){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoCambioNegation=!isParaTipoCambio;

			this.isVisibilidadFK_IdCentroCosto=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdCentroCostoPedido);}

			this.isVisibilidadFK_IdCliente=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdClientePedido);}

			this.isVisibilidadFK_IdConsultor=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdConsultor) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdConsultorPedido);}

			this.isVisibilidadFK_IdEmpleado=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdEmpleadoPedido);}

			this.isVisibilidadFK_IdEstadoPedido=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdEstadoPedido) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdEstadoPedidoPedido);}

			this.isVisibilidadFK_IdFormato=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdFormatoPedido);}

			this.isVisibilidadFK_IdResponsable=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdResponsable) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdResponsablePedido);}

			this.isVisibilidadFK_IdRutaTransporte=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdRutaTransporte) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdRutaTransportePedido);}

			this.isVisibilidadFK_IdSubCliente=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdSubClientePedido);}

			this.isVisibilidadFK_IdTipoCambio=isParaTipoCambio;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTipoCambioPedido);}

			this.isVisibilidadFK_IdTipoLlamada=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdTipoLlamada) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTipoLlamadaPedido);}

			this.isVisibilidadFK_IdTipoPrecio=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTipoPrecioPedido);}

			this.isVisibilidadFK_IdTransporte=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTransportePedido);}

			this.isVisibilidadFK_IdTransportista=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdTransportista) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTransportistaPedido);}

			this.isVisibilidadFK_IdVendedor=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdVendedorPedido);}

			this.isVisibilidadFK_IdZona=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdZonaPedido);}
		}
		
	}

	public void setVisibilidadBusquedasParaCentroCosto(Boolean isParaCentroCosto){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCentroCostoNegation=!isParaCentroCosto;

			this.isVisibilidadFK_IdCentroCosto=isParaCentroCosto;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdCentroCostoPedido);}

			this.isVisibilidadFK_IdCliente=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdClientePedido);}

			this.isVisibilidadFK_IdConsultor=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdConsultor) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdConsultorPedido);}

			this.isVisibilidadFK_IdEmpleado=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdEmpleadoPedido);}

			this.isVisibilidadFK_IdEstadoPedido=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdEstadoPedido) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdEstadoPedidoPedido);}

			this.isVisibilidadFK_IdFormato=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdFormatoPedido);}

			this.isVisibilidadFK_IdResponsable=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdResponsable) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdResponsablePedido);}

			this.isVisibilidadFK_IdRutaTransporte=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdRutaTransporte) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdRutaTransportePedido);}

			this.isVisibilidadFK_IdSubCliente=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdSubClientePedido);}

			this.isVisibilidadFK_IdTipoCambio=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTipoCambioPedido);}

			this.isVisibilidadFK_IdTipoLlamada=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdTipoLlamada) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTipoLlamadaPedido);}

			this.isVisibilidadFK_IdTipoPrecio=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTipoPrecioPedido);}

			this.isVisibilidadFK_IdTransporte=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTransportePedido);}

			this.isVisibilidadFK_IdTransportista=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdTransportista) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTransportistaPedido);}

			this.isVisibilidadFK_IdVendedor=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdVendedorPedido);}

			this.isVisibilidadFK_IdZona=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdZonaPedido);}
		}
		
	}

	public void setVisibilidadBusquedasParaZona(Boolean isParaZona){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaZonaNegation=!isParaZona;

			this.isVisibilidadFK_IdCentroCosto=isParaZonaNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdCentroCostoPedido);}

			this.isVisibilidadFK_IdCliente=isParaZonaNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdClientePedido);}

			this.isVisibilidadFK_IdConsultor=isParaZonaNegation;
			if(!this.isVisibilidadFK_IdConsultor) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdConsultorPedido);}

			this.isVisibilidadFK_IdEmpleado=isParaZonaNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdEmpleadoPedido);}

			this.isVisibilidadFK_IdEstadoPedido=isParaZonaNegation;
			if(!this.isVisibilidadFK_IdEstadoPedido) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdEstadoPedidoPedido);}

			this.isVisibilidadFK_IdFormato=isParaZonaNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdFormatoPedido);}

			this.isVisibilidadFK_IdResponsable=isParaZonaNegation;
			if(!this.isVisibilidadFK_IdResponsable) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdResponsablePedido);}

			this.isVisibilidadFK_IdRutaTransporte=isParaZonaNegation;
			if(!this.isVisibilidadFK_IdRutaTransporte) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdRutaTransportePedido);}

			this.isVisibilidadFK_IdSubCliente=isParaZonaNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdSubClientePedido);}

			this.isVisibilidadFK_IdTipoCambio=isParaZonaNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTipoCambioPedido);}

			this.isVisibilidadFK_IdTipoLlamada=isParaZonaNegation;
			if(!this.isVisibilidadFK_IdTipoLlamada) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTipoLlamadaPedido);}

			this.isVisibilidadFK_IdTipoPrecio=isParaZonaNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTipoPrecioPedido);}

			this.isVisibilidadFK_IdTransporte=isParaZonaNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTransportePedido);}

			this.isVisibilidadFK_IdTransportista=isParaZonaNegation;
			if(!this.isVisibilidadFK_IdTransportista) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdTransportistaPedido);}

			this.isVisibilidadFK_IdVendedor=isParaZonaNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdVendedorPedido);}

			this.isVisibilidadFK_IdZona=isParaZona;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasPedido.remove(jPanelFK_IdZonaPedido);}
		}
		
	}
	
	

	public String registrarSesionPedidoParaDetallePedidos() throws Exception {
		Boolean isPaginaPopupDetallePedido=false;

		try {

			if(this.pedidoSessionBean==null) {
				this.pedidoSessionBean=new PedidoSessionBean();
			}

			if(this.jInternalFrameDetalleFormPedido.detallepedidoSessionBean==null) {
				this.jInternalFrameDetalleFormPedido.detallepedidoSessionBean=new DetallePedidoSessionBean();
			}

			this.jInternalFrameDetalleFormPedido.detallepedidoSessionBean.setsPathNavegacionActual(pedidoSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+DetallePedidoConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormPedido.detallepedidoSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupDetallePedido=this.jInternalFrameDetalleFormPedido.detallepedidoSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormPedido.detallepedidoSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeDetallePedido(true);
			this.jInternalFrameDetalleFormPedido.detallepedidoSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeDetallePedido(PedidoConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormPedido.detallepedidoSessionBean.setisBusquedaDesdeForeignKeySesionPedido(true);
			this.jInternalFrameDetalleFormPedido.detallepedidoSessionBean.setlidPedidoActual(this.idPedidoActual);
			this.jInternalFrameDetalleFormPedido.detallepedidoSessionBean.setNoMantenimiento(true);

			pedidoSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyPedido(true);
			pedidoSessionBean.setlIdPedidoActualForeignKey(this.idPedidoActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}
	
	

	public String registrarSesionPedidoParaBusquedaEmpleados() throws Exception {
		Boolean isPaginaPopupEmpleado=false;

		try {

			if(pedidoSessionBean==null) {
				pedidoSessionBean=new PedidoSessionBean();
			}

			if(empleadoSessionBean==null) {
				empleadoSessionBean=new EmpleadoSessionBean();
			}

			empleadoSessionBean.setsPathNavegacionActual(pedidoSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+EmpleadoConstantesFunciones.SCLASSWEBTITULO);
			empleadoSessionBean.setisPermiteRecargarInformacion(false);
			empleadoSessionBean.setisPaginaPopup(true);
			isPaginaPopupEmpleado=empleadoSessionBean.getisPaginaPopup();
			empleadoSessionBean.setisPaginaPopup(false);
			empleadoSessionBean.setEstaModoBusqueda(true);
			empleadoSessionBean.setsFuncionBusquedaRapida("window.opener.pedidoFuncionGeneral.setCombosCodigoDesdeBusquedaid_empleado(TO_REPLACE);");
			empleadoSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeEmpleado(true);
			empleadoSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeEmpleado(PedidoConstantesFunciones.SNOMBREOPCION);
			//empleadoSessionBean.setisBusquedaDesdeForeignKeySesionPedido(true);
			//empleadoSessionBean.setlidPedidoActual(this.idPedidoActual);

			pedidoSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyPedido(true);
			pedidoSessionBean.setlIdPedidoActualForeignKey(this.idPedidoActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}

	public String registrarSesionPedidoParaBusquedaClientes() throws Exception {
		Boolean isPaginaPopupCliente=false;

		try {

			if(pedidoSessionBean==null) {
				pedidoSessionBean=new PedidoSessionBean();
			}

			if(clienteSessionBean==null) {
				clienteSessionBean=new ClienteSessionBean();
			}

			clienteSessionBean.setsPathNavegacionActual(pedidoSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+ClienteConstantesFunciones.SCLASSWEBTITULO);
			clienteSessionBean.setisPermiteRecargarInformacion(false);
			clienteSessionBean.setisPaginaPopup(true);
			isPaginaPopupCliente=clienteSessionBean.getisPaginaPopup();
			clienteSessionBean.setisPaginaPopup(false);
			clienteSessionBean.setEstaModoBusqueda(true);
			clienteSessionBean.setsFuncionBusquedaRapida("window.opener.pedidoFuncionGeneral.setCombosCodigoDesdeBusquedaid_cliente(TO_REPLACE);");
			clienteSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeCliente(true);
			clienteSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeCliente(PedidoConstantesFunciones.SNOMBREOPCION);
			//clienteSessionBean.setisBusquedaDesdeForeignKeySesionPedido(true);
			//clienteSessionBean.setlidPedidoActual(this.idPedidoActual);

			pedidoSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyPedido(true);
			pedidoSessionBean.setlIdPedidoActualForeignKey(this.idPedidoActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}

	public String registrarSesionPedidoParaBusquedaVendedores() throws Exception {
		Boolean isPaginaPopupVendedor=false;

		try {

			if(pedidoSessionBean==null) {
				pedidoSessionBean=new PedidoSessionBean();
			}

			if(vendedorSessionBean==null) {
				vendedorSessionBean=new VendedorSessionBean();
			}

			vendedorSessionBean.setsPathNavegacionActual(pedidoSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+VendedorConstantesFunciones.SCLASSWEBTITULO);
			vendedorSessionBean.setisPermiteRecargarInformacion(false);
			vendedorSessionBean.setisPaginaPopup(true);
			isPaginaPopupVendedor=vendedorSessionBean.getisPaginaPopup();
			vendedorSessionBean.setisPaginaPopup(false);
			vendedorSessionBean.setEstaModoBusqueda(true);
			vendedorSessionBean.setsFuncionBusquedaRapida("window.opener.pedidoFuncionGeneral.setCombosCodigoDesdeBusquedaid_vendedor(TO_REPLACE);");
			vendedorSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeVendedor(true);
			vendedorSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeVendedor(PedidoConstantesFunciones.SNOMBREOPCION);
			//vendedorSessionBean.setisBusquedaDesdeForeignKeySesionPedido(true);
			//vendedorSessionBean.setlidPedidoActual(this.idPedidoActual);

			pedidoSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyPedido(true);
			pedidoSessionBean.setlIdPedidoActualForeignKey(this.idPedidoActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}

	public String registrarSesionPedidoParaBusquedaTipoCambios() throws Exception {
		Boolean isPaginaPopupTipoCambio=false;

		try {

			if(pedidoSessionBean==null) {
				pedidoSessionBean=new PedidoSessionBean();
			}

			if(tipocambioSessionBean==null) {
				tipocambioSessionBean=new TipoCambioSessionBean();
			}

			tipocambioSessionBean.setsPathNavegacionActual(pedidoSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+TipoCambioConstantesFunciones.SCLASSWEBTITULO);
			tipocambioSessionBean.setisPermiteRecargarInformacion(false);
			tipocambioSessionBean.setisPaginaPopup(true);
			isPaginaPopupTipoCambio=tipocambioSessionBean.getisPaginaPopup();
			tipocambioSessionBean.setisPaginaPopup(false);
			tipocambioSessionBean.setEstaModoBusqueda(true);
			tipocambioSessionBean.setsFuncionBusquedaRapida("window.opener.pedidoFuncionGeneral.setCombosCodigoDesdeBusquedaid_tipo_cambio(TO_REPLACE);");
			tipocambioSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeTipoCambio(true);
			tipocambioSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeTipoCambio(PedidoConstantesFunciones.SNOMBREOPCION);
			//tipocambioSessionBean.setisBusquedaDesdeForeignKeySesionPedido(true);
			//tipocambioSessionBean.setlidPedidoActual(this.idPedidoActual);

			pedidoSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyPedido(true);
			pedidoSessionBean.setlIdPedidoActualForeignKey(this.idPedidoActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}

	public String registrarSesionPedidoParaBusquedaCentroCostos() throws Exception {
		Boolean isPaginaPopupCentroCosto=false;

		try {

			if(pedidoSessionBean==null) {
				pedidoSessionBean=new PedidoSessionBean();
			}

			if(centrocostoSessionBean==null) {
				centrocostoSessionBean=new CentroCostoSessionBean();
			}

			centrocostoSessionBean.setsPathNavegacionActual(pedidoSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+CentroCostoConstantesFunciones.SCLASSWEBTITULO);
			centrocostoSessionBean.setisPermiteRecargarInformacion(false);
			centrocostoSessionBean.setisPaginaPopup(true);
			isPaginaPopupCentroCosto=centrocostoSessionBean.getisPaginaPopup();
			centrocostoSessionBean.setisPaginaPopup(false);
			centrocostoSessionBean.setEstaModoBusqueda(true);
			centrocostoSessionBean.setsFuncionBusquedaRapida("window.opener.pedidoFuncionGeneral.setCombosCodigoDesdeBusquedaid_centro_costo(TO_REPLACE);");
			centrocostoSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeCentroCosto(true);
			centrocostoSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeCentroCosto(PedidoConstantesFunciones.SNOMBREOPCION);
			//centrocostoSessionBean.setisBusquedaDesdeForeignKeySesionPedido(true);
			//centrocostoSessionBean.setlidPedidoActual(this.idPedidoActual);

			pedidoSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyPedido(true);
			pedidoSessionBean.setlIdPedidoActualForeignKey(this.idPedidoActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}
	
	
	public void guardarDatosBusquedaSession() throws Exception {
		
		//PedidoSessionBean pedidoSessionBean=new PedidoSessionBean();
		
		if(this.pedidoSessionBean==null) {
			this.pedidoSessionBean=new PedidoSessionBean();
		}
		
		this.pedidoSessionBean.setsUltimaBusquedaPedido(this.getsAccionBusqueda());
		this.pedidoSessionBean.setiNumeroPaginacion(this.getiNumeroPaginacion());
		this.pedidoSessionBean.setiNumeroPaginacionPagina(this.getiNumeroPaginacionPagina());
		
		if(this.getsAccionBusqueda().equals("Todos")) {
			;
		}
		

		else if(this.getsAccionBusqueda().equals("FK_IdCentroCosto")) {
			pedidoSessionBean.setid_centro_costo(this.getid_centro_costoFK_IdCentroCosto());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdCliente")) {
			pedidoSessionBean.setid_cliente(this.getid_clienteFK_IdCliente());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdConsultor")) {
			pedidoSessionBean.setid_consultor(this.getid_consultorFK_IdConsultor());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEjercicio")) {
			pedidoSessionBean.setid_ejercicio(this.getid_ejercicioFK_IdEjercicio());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEmpleado")) {
			pedidoSessionBean.setid_empleado(this.getid_empleadoFK_IdEmpleado());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
			pedidoSessionBean.setid_empresa(this.getid_empresaFK_IdEmpresa());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEstadoPedido")) {
			pedidoSessionBean.setid_estado_pedido(this.getid_estado_pedidoFK_IdEstadoPedido());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdFormato")) {
			pedidoSessionBean.setid_formato(this.getid_formatoFK_IdFormato());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdMoneda")) {
			pedidoSessionBean.setid_moneda(this.getid_monedaFK_IdMoneda());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdPeriodo")) {
			pedidoSessionBean.setid_periodo(this.getid_periodoFK_IdPeriodo());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdResponsable")) {
			pedidoSessionBean.setid_responsable(this.getid_responsableFK_IdResponsable());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdRutaTransporte")) {
			pedidoSessionBean.setid_ruta_transporte(this.getid_ruta_transporteFK_IdRutaTransporte());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdSubCliente")) {
			pedidoSessionBean.setid_sub_cliente(this.getid_sub_clienteFK_IdSubCliente());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
			pedidoSessionBean.setid_sucursal(this.getid_sucursalFK_IdSucursal());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoCambio")) {
			pedidoSessionBean.setid_tipo_cambio(this.getid_tipo_cambioFK_IdTipoCambio());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoLlamada")) {
			pedidoSessionBean.setid_tipo_llamada(this.getid_tipo_llamadaFK_IdTipoLlamada());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoPrecio")) {
			pedidoSessionBean.setid_tipo_precio(this.getid_tipo_precioFK_IdTipoPrecio());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTransporte")) {
			pedidoSessionBean.setid_transporte(this.getid_transporteFK_IdTransporte());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTransportista")) {
			pedidoSessionBean.setid_transportista(this.getid_transportistaFK_IdTransportista());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdUsuario")) {
			pedidoSessionBean.setid_usuario(this.getid_usuarioFK_IdUsuario());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdVendedor")) {
			pedidoSessionBean.setid_vendedor(this.getid_vendedorFK_IdVendedor());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdZona")) {
			pedidoSessionBean.setid_zona(this.getid_zonaFK_IdZona());	
		}
		
	}
	
	public void traerDatosBusquedaDesdeSession() throws Exception {
		//PedidoSessionBean pedidoSessionBean=new PedidoSessionBean();
		
		if(this.pedidoSessionBean==null) {
			this.pedidoSessionBean=new PedidoSessionBean();
		}
		
		if(this.pedidoSessionBean.getsUltimaBusquedaPedido()!=null&&!this.pedidoSessionBean.getsUltimaBusquedaPedido().equals("")) {
			this.setsAccionBusqueda(pedidoSessionBean.getsUltimaBusquedaPedido());
			this.setiNumeroPaginacion(pedidoSessionBean.getiNumeroPaginacion());
			this.setiNumeroPaginacionPagina(pedidoSessionBean.getiNumeroPaginacionPagina());		
				
			if(this.getsAccionBusqueda().equals("Todos")) {
				;
			}
			

			 else if(this.getsAccionBusqueda().equals("FK_IdCentroCosto")) {
				this.setid_centro_costoFK_IdCentroCosto(pedidoSessionBean.getid_centro_costo());
				pedidoSessionBean.setid_centro_costo(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdCliente")) {
				this.setid_clienteFK_IdCliente(pedidoSessionBean.getid_cliente());
				pedidoSessionBean.setid_cliente(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdConsultor")) {
				this.setid_consultorFK_IdConsultor(pedidoSessionBean.getid_consultor());
				pedidoSessionBean.setid_consultor(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEjercicio")) {
				this.setid_ejercicioFK_IdEjercicio(pedidoSessionBean.getid_ejercicio());
				pedidoSessionBean.setid_ejercicio(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEmpleado")) {
				this.setid_empleadoFK_IdEmpleado(pedidoSessionBean.getid_empleado());
				pedidoSessionBean.setid_empleado(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
				this.setid_empresaFK_IdEmpresa(pedidoSessionBean.getid_empresa());
				pedidoSessionBean.setid_empresa(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEstadoPedido")) {
				this.setid_estado_pedidoFK_IdEstadoPedido(pedidoSessionBean.getid_estado_pedido());
				pedidoSessionBean.setid_estado_pedido(1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdFormato")) {
				this.setid_formatoFK_IdFormato(pedidoSessionBean.getid_formato());
				pedidoSessionBean.setid_formato(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdMoneda")) {
				this.setid_monedaFK_IdMoneda(pedidoSessionBean.getid_moneda());
				pedidoSessionBean.setid_moneda(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdPeriodo")) {
				this.setid_periodoFK_IdPeriodo(pedidoSessionBean.getid_periodo());
				pedidoSessionBean.setid_periodo(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdResponsable")) {
				this.setid_responsableFK_IdResponsable(pedidoSessionBean.getid_responsable());
				pedidoSessionBean.setid_responsable(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdRutaTransporte")) {
				this.setid_ruta_transporteFK_IdRutaTransporte(pedidoSessionBean.getid_ruta_transporte());
				pedidoSessionBean.setid_ruta_transporte(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdSubCliente")) {
				this.setid_sub_clienteFK_IdSubCliente(pedidoSessionBean.getid_sub_cliente());
				pedidoSessionBean.setid_sub_cliente(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
				this.setid_sucursalFK_IdSucursal(pedidoSessionBean.getid_sucursal());
				pedidoSessionBean.setid_sucursal(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoCambio")) {
				this.setid_tipo_cambioFK_IdTipoCambio(pedidoSessionBean.getid_tipo_cambio());
				pedidoSessionBean.setid_tipo_cambio(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoLlamada")) {
				this.setid_tipo_llamadaFK_IdTipoLlamada(pedidoSessionBean.getid_tipo_llamada());
				pedidoSessionBean.setid_tipo_llamada(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoPrecio")) {
				this.setid_tipo_precioFK_IdTipoPrecio(pedidoSessionBean.getid_tipo_precio());
				pedidoSessionBean.setid_tipo_precio(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTransporte")) {
				this.setid_transporteFK_IdTransporte(pedidoSessionBean.getid_transporte());
				pedidoSessionBean.setid_transporte(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTransportista")) {
				this.setid_transportistaFK_IdTransportista(pedidoSessionBean.getid_transportista());
				pedidoSessionBean.setid_transportista(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdUsuario")) {
				this.setid_usuarioFK_IdUsuario(pedidoSessionBean.getid_usuario());
				pedidoSessionBean.setid_usuario(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdVendedor")) {
				this.setid_vendedorFK_IdVendedor(pedidoSessionBean.getid_vendedor());
				pedidoSessionBean.setid_vendedor(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdZona")) {
				this.setid_zonaFK_IdZona(pedidoSessionBean.getid_zona());
				pedidoSessionBean.setid_zona(null);
			}
		}
		
		this.pedidoSessionBean.setsUltimaBusquedaPedido("");
		this.pedidoSessionBean.setiNumeroPaginacion(PedidoConstantesFunciones.INUMEROPAGINACION);
		this.pedidoSessionBean.setiNumeroPaginacionPagina(0);
		
	}
	
	public void procesoActualizarFilaTotales(Boolean esCampoValor,String sTipo) {
		try {
			this.actualizarFilaTotales();
				
			this.traerValoresTablaTotales();
			
			this.inicializarActualizarBindingTablaPedido(false);
			
			
			
			
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	
	public void updateBusquedasFormularioPedido() {
		this.updateBorderResaltarBusquedasFormularioPedido();
		this.updateVisibilidadBusquedasFormularioPedido();
		this.updateHabilitarBusquedasFormularioPedido();
	}
	
	public void updateBorderResaltarBusquedasFormularioPedido() {					
	//BYDAN_BUSQUEDAS
		
	int index=0;
		
	if(this.jTabbedPaneBusquedasPedido.getComponents().length>0) {
	

		if(this.pedidoConstantesFunciones.resaltarFK_IdCentroCostoPedido!=null) {
			index= this.jTabbedPaneBusquedasPedido.indexOfComponent(this.jPanelFK_IdCentroCostoPedido);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPedido.getComponent(index);
				jPanel.setBorder(this.pedidoConstantesFunciones.resaltarFK_IdCentroCostoPedido);
			}
		}

		if(this.pedidoConstantesFunciones.resaltarFK_IdClientePedido!=null) {
			index= this.jTabbedPaneBusquedasPedido.indexOfComponent(this.jPanelFK_IdClientePedido);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPedido.getComponent(index);
				jPanel.setBorder(this.pedidoConstantesFunciones.resaltarFK_IdClientePedido);
			}
		}

		if(this.pedidoConstantesFunciones.resaltarFK_IdConsultorPedido!=null) {
			index= this.jTabbedPaneBusquedasPedido.indexOfComponent(this.jPanelFK_IdConsultorPedido);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPedido.getComponent(index);
				jPanel.setBorder(this.pedidoConstantesFunciones.resaltarFK_IdConsultorPedido);
			}
		}

		if(this.pedidoConstantesFunciones.resaltarFK_IdEmpleadoPedido!=null) {
			index= this.jTabbedPaneBusquedasPedido.indexOfComponent(this.jPanelFK_IdEmpleadoPedido);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPedido.getComponent(index);
				jPanel.setBorder(this.pedidoConstantesFunciones.resaltarFK_IdEmpleadoPedido);
			}
		}

		if(this.pedidoConstantesFunciones.resaltarFK_IdEstadoPedidoPedido!=null) {
			index= this.jTabbedPaneBusquedasPedido.indexOfComponent(this.jPanelFK_IdEstadoPedidoPedido);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPedido.getComponent(index);
				jPanel.setBorder(this.pedidoConstantesFunciones.resaltarFK_IdEstadoPedidoPedido);
			}
		}

		if(this.pedidoConstantesFunciones.resaltarFK_IdFormatoPedido!=null) {
			index= this.jTabbedPaneBusquedasPedido.indexOfComponent(this.jPanelFK_IdFormatoPedido);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPedido.getComponent(index);
				jPanel.setBorder(this.pedidoConstantesFunciones.resaltarFK_IdFormatoPedido);
			}
		}

		if(this.pedidoConstantesFunciones.resaltarFK_IdResponsablePedido!=null) {
			index= this.jTabbedPaneBusquedasPedido.indexOfComponent(this.jPanelFK_IdResponsablePedido);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPedido.getComponent(index);
				jPanel.setBorder(this.pedidoConstantesFunciones.resaltarFK_IdResponsablePedido);
			}
		}

		if(this.pedidoConstantesFunciones.resaltarFK_IdRutaTransportePedido!=null) {
			index= this.jTabbedPaneBusquedasPedido.indexOfComponent(this.jPanelFK_IdRutaTransportePedido);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPedido.getComponent(index);
				jPanel.setBorder(this.pedidoConstantesFunciones.resaltarFK_IdRutaTransportePedido);
			}
		}

		if(this.pedidoConstantesFunciones.resaltarFK_IdSubClientePedido!=null) {
			index= this.jTabbedPaneBusquedasPedido.indexOfComponent(this.jPanelFK_IdSubClientePedido);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPedido.getComponent(index);
				jPanel.setBorder(this.pedidoConstantesFunciones.resaltarFK_IdSubClientePedido);
			}
		}

		if(this.pedidoConstantesFunciones.resaltarFK_IdTipoCambioPedido!=null) {
			index= this.jTabbedPaneBusquedasPedido.indexOfComponent(this.jPanelFK_IdTipoCambioPedido);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPedido.getComponent(index);
				jPanel.setBorder(this.pedidoConstantesFunciones.resaltarFK_IdTipoCambioPedido);
			}
		}

		if(this.pedidoConstantesFunciones.resaltarFK_IdTipoLlamadaPedido!=null) {
			index= this.jTabbedPaneBusquedasPedido.indexOfComponent(this.jPanelFK_IdTipoLlamadaPedido);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPedido.getComponent(index);
				jPanel.setBorder(this.pedidoConstantesFunciones.resaltarFK_IdTipoLlamadaPedido);
			}
		}

		if(this.pedidoConstantesFunciones.resaltarFK_IdTipoPrecioPedido!=null) {
			index= this.jTabbedPaneBusquedasPedido.indexOfComponent(this.jPanelFK_IdTipoPrecioPedido);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPedido.getComponent(index);
				jPanel.setBorder(this.pedidoConstantesFunciones.resaltarFK_IdTipoPrecioPedido);
			}
		}

		if(this.pedidoConstantesFunciones.resaltarFK_IdTransportePedido!=null) {
			index= this.jTabbedPaneBusquedasPedido.indexOfComponent(this.jPanelFK_IdTransportePedido);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPedido.getComponent(index);
				jPanel.setBorder(this.pedidoConstantesFunciones.resaltarFK_IdTransportePedido);
			}
		}

		if(this.pedidoConstantesFunciones.resaltarFK_IdTransportistaPedido!=null) {
			index= this.jTabbedPaneBusquedasPedido.indexOfComponent(this.jPanelFK_IdTransportistaPedido);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPedido.getComponent(index);
				jPanel.setBorder(this.pedidoConstantesFunciones.resaltarFK_IdTransportistaPedido);
			}
		}

		if(this.pedidoConstantesFunciones.resaltarFK_IdVendedorPedido!=null) {
			index= this.jTabbedPaneBusquedasPedido.indexOfComponent(this.jPanelFK_IdVendedorPedido);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPedido.getComponent(index);
				jPanel.setBorder(this.pedidoConstantesFunciones.resaltarFK_IdVendedorPedido);
			}
		}

		if(this.pedidoConstantesFunciones.resaltarFK_IdZonaPedido!=null) {
			index= this.jTabbedPaneBusquedasPedido.indexOfComponent(this.jPanelFK_IdZonaPedido);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPedido.getComponent(index);
				jPanel.setBorder(this.pedidoConstantesFunciones.resaltarFK_IdZonaPedido);
			}
		}
	}	
	
	}
	
	public void updateVisibilidadBusquedasFormularioPedido() {
	//BYDAN_BUSQUEDAS
	
	int index=0;
	JPanel jPanel=null;
		
	if(this.jTabbedPaneBusquedasPedido.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasPedido.indexOfComponent(this.jPanelFK_IdCentroCostoPedido);
			jPanel=(JPanel)this.jTabbedPaneBusquedasPedido.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.pedidoConstantesFunciones.mostrarFK_IdCentroCostoPedido);
			if(!this.pedidoConstantesFunciones.mostrarFK_IdCentroCostoPedido && index>-1) {
				this.jTabbedPaneBusquedasPedido.remove(index);
			}

			index= this.jTabbedPaneBusquedasPedido.indexOfComponent(this.jPanelFK_IdClientePedido);
			jPanel=(JPanel)this.jTabbedPaneBusquedasPedido.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.pedidoConstantesFunciones.mostrarFK_IdClientePedido);
			if(!this.pedidoConstantesFunciones.mostrarFK_IdClientePedido && index>-1) {
				this.jTabbedPaneBusquedasPedido.remove(index);
			}

			index= this.jTabbedPaneBusquedasPedido.indexOfComponent(this.jPanelFK_IdConsultorPedido);
			jPanel=(JPanel)this.jTabbedPaneBusquedasPedido.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.pedidoConstantesFunciones.mostrarFK_IdConsultorPedido);
			if(!this.pedidoConstantesFunciones.mostrarFK_IdConsultorPedido && index>-1) {
				this.jTabbedPaneBusquedasPedido.remove(index);
			}

			index= this.jTabbedPaneBusquedasPedido.indexOfComponent(this.jPanelFK_IdEmpleadoPedido);
			jPanel=(JPanel)this.jTabbedPaneBusquedasPedido.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.pedidoConstantesFunciones.mostrarFK_IdEmpleadoPedido);
			if(!this.pedidoConstantesFunciones.mostrarFK_IdEmpleadoPedido && index>-1) {
				this.jTabbedPaneBusquedasPedido.remove(index);
			}

			index= this.jTabbedPaneBusquedasPedido.indexOfComponent(this.jPanelFK_IdEstadoPedidoPedido);
			jPanel=(JPanel)this.jTabbedPaneBusquedasPedido.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.pedidoConstantesFunciones.mostrarFK_IdEstadoPedidoPedido);
			if(!this.pedidoConstantesFunciones.mostrarFK_IdEstadoPedidoPedido && index>-1) {
				this.jTabbedPaneBusquedasPedido.remove(index);
			}

			index= this.jTabbedPaneBusquedasPedido.indexOfComponent(this.jPanelFK_IdFormatoPedido);
			jPanel=(JPanel)this.jTabbedPaneBusquedasPedido.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.pedidoConstantesFunciones.mostrarFK_IdFormatoPedido);
			if(!this.pedidoConstantesFunciones.mostrarFK_IdFormatoPedido && index>-1) {
				this.jTabbedPaneBusquedasPedido.remove(index);
			}

			index= this.jTabbedPaneBusquedasPedido.indexOfComponent(this.jPanelFK_IdResponsablePedido);
			jPanel=(JPanel)this.jTabbedPaneBusquedasPedido.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.pedidoConstantesFunciones.mostrarFK_IdResponsablePedido);
			if(!this.pedidoConstantesFunciones.mostrarFK_IdResponsablePedido && index>-1) {
				this.jTabbedPaneBusquedasPedido.remove(index);
			}

			index= this.jTabbedPaneBusquedasPedido.indexOfComponent(this.jPanelFK_IdRutaTransportePedido);
			jPanel=(JPanel)this.jTabbedPaneBusquedasPedido.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.pedidoConstantesFunciones.mostrarFK_IdRutaTransportePedido);
			if(!this.pedidoConstantesFunciones.mostrarFK_IdRutaTransportePedido && index>-1) {
				this.jTabbedPaneBusquedasPedido.remove(index);
			}

			index= this.jTabbedPaneBusquedasPedido.indexOfComponent(this.jPanelFK_IdSubClientePedido);
			jPanel=(JPanel)this.jTabbedPaneBusquedasPedido.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.pedidoConstantesFunciones.mostrarFK_IdSubClientePedido);
			if(!this.pedidoConstantesFunciones.mostrarFK_IdSubClientePedido && index>-1) {
				this.jTabbedPaneBusquedasPedido.remove(index);
			}

			index= this.jTabbedPaneBusquedasPedido.indexOfComponent(this.jPanelFK_IdTipoCambioPedido);
			jPanel=(JPanel)this.jTabbedPaneBusquedasPedido.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.pedidoConstantesFunciones.mostrarFK_IdTipoCambioPedido);
			if(!this.pedidoConstantesFunciones.mostrarFK_IdTipoCambioPedido && index>-1) {
				this.jTabbedPaneBusquedasPedido.remove(index);
			}

			index= this.jTabbedPaneBusquedasPedido.indexOfComponent(this.jPanelFK_IdTipoLlamadaPedido);
			jPanel=(JPanel)this.jTabbedPaneBusquedasPedido.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.pedidoConstantesFunciones.mostrarFK_IdTipoLlamadaPedido);
			if(!this.pedidoConstantesFunciones.mostrarFK_IdTipoLlamadaPedido && index>-1) {
				this.jTabbedPaneBusquedasPedido.remove(index);
			}

			index= this.jTabbedPaneBusquedasPedido.indexOfComponent(this.jPanelFK_IdTipoPrecioPedido);
			jPanel=(JPanel)this.jTabbedPaneBusquedasPedido.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.pedidoConstantesFunciones.mostrarFK_IdTipoPrecioPedido);
			if(!this.pedidoConstantesFunciones.mostrarFK_IdTipoPrecioPedido && index>-1) {
				this.jTabbedPaneBusquedasPedido.remove(index);
			}

			index= this.jTabbedPaneBusquedasPedido.indexOfComponent(this.jPanelFK_IdTransportePedido);
			jPanel=(JPanel)this.jTabbedPaneBusquedasPedido.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.pedidoConstantesFunciones.mostrarFK_IdTransportePedido);
			if(!this.pedidoConstantesFunciones.mostrarFK_IdTransportePedido && index>-1) {
				this.jTabbedPaneBusquedasPedido.remove(index);
			}

			index= this.jTabbedPaneBusquedasPedido.indexOfComponent(this.jPanelFK_IdTransportistaPedido);
			jPanel=(JPanel)this.jTabbedPaneBusquedasPedido.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.pedidoConstantesFunciones.mostrarFK_IdTransportistaPedido);
			if(!this.pedidoConstantesFunciones.mostrarFK_IdTransportistaPedido && index>-1) {
				this.jTabbedPaneBusquedasPedido.remove(index);
			}

			index= this.jTabbedPaneBusquedasPedido.indexOfComponent(this.jPanelFK_IdVendedorPedido);
			jPanel=(JPanel)this.jTabbedPaneBusquedasPedido.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.pedidoConstantesFunciones.mostrarFK_IdVendedorPedido);
			if(!this.pedidoConstantesFunciones.mostrarFK_IdVendedorPedido && index>-1) {
				this.jTabbedPaneBusquedasPedido.remove(index);
			}

			index= this.jTabbedPaneBusquedasPedido.indexOfComponent(this.jPanelFK_IdZonaPedido);
			jPanel=(JPanel)this.jTabbedPaneBusquedasPedido.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.pedidoConstantesFunciones.mostrarFK_IdZonaPedido);
			if(!this.pedidoConstantesFunciones.mostrarFK_IdZonaPedido && index>-1) {
				this.jTabbedPaneBusquedasPedido.remove(index);
			}
	}	
	
	}
	
	public void updateHabilitarBusquedasFormularioPedido() {
	
	//BYDAN_BUSQUEDAS		
		int index=0;
		JPanel jPanel=null;
			
		if(this.jTabbedPaneBusquedasPedido.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasPedido.indexOfComponent(this.jPanelFK_IdCentroCostoPedido);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasPedido.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.pedidoConstantesFunciones.activarFK_IdCentroCostoPedido);
				this.jTabbedPaneBusquedasPedido.setEnabledAt(index,this.pedidoConstantesFunciones.activarFK_IdCentroCostoPedido);
			}

			index= this.jTabbedPaneBusquedasPedido.indexOfComponent(this.jPanelFK_IdClientePedido);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasPedido.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.pedidoConstantesFunciones.activarFK_IdClientePedido);
				this.jTabbedPaneBusquedasPedido.setEnabledAt(index,this.pedidoConstantesFunciones.activarFK_IdClientePedido);
			}

			index= this.jTabbedPaneBusquedasPedido.indexOfComponent(this.jPanelFK_IdConsultorPedido);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasPedido.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.pedidoConstantesFunciones.activarFK_IdConsultorPedido);
				this.jTabbedPaneBusquedasPedido.setEnabledAt(index,this.pedidoConstantesFunciones.activarFK_IdConsultorPedido);
			}

			index= this.jTabbedPaneBusquedasPedido.indexOfComponent(this.jPanelFK_IdEmpleadoPedido);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasPedido.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.pedidoConstantesFunciones.activarFK_IdEmpleadoPedido);
				this.jTabbedPaneBusquedasPedido.setEnabledAt(index,this.pedidoConstantesFunciones.activarFK_IdEmpleadoPedido);
			}

			index= this.jTabbedPaneBusquedasPedido.indexOfComponent(this.jPanelFK_IdEstadoPedidoPedido);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasPedido.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.pedidoConstantesFunciones.activarFK_IdEstadoPedidoPedido);
				this.jTabbedPaneBusquedasPedido.setEnabledAt(index,this.pedidoConstantesFunciones.activarFK_IdEstadoPedidoPedido);
			}

			index= this.jTabbedPaneBusquedasPedido.indexOfComponent(this.jPanelFK_IdFormatoPedido);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasPedido.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.pedidoConstantesFunciones.activarFK_IdFormatoPedido);
				this.jTabbedPaneBusquedasPedido.setEnabledAt(index,this.pedidoConstantesFunciones.activarFK_IdFormatoPedido);
			}

			index= this.jTabbedPaneBusquedasPedido.indexOfComponent(this.jPanelFK_IdResponsablePedido);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasPedido.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.pedidoConstantesFunciones.activarFK_IdResponsablePedido);
				this.jTabbedPaneBusquedasPedido.setEnabledAt(index,this.pedidoConstantesFunciones.activarFK_IdResponsablePedido);
			}

			index= this.jTabbedPaneBusquedasPedido.indexOfComponent(this.jPanelFK_IdRutaTransportePedido);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasPedido.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.pedidoConstantesFunciones.activarFK_IdRutaTransportePedido);
				this.jTabbedPaneBusquedasPedido.setEnabledAt(index,this.pedidoConstantesFunciones.activarFK_IdRutaTransportePedido);
			}

			index= this.jTabbedPaneBusquedasPedido.indexOfComponent(this.jPanelFK_IdSubClientePedido);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasPedido.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.pedidoConstantesFunciones.activarFK_IdSubClientePedido);
				this.jTabbedPaneBusquedasPedido.setEnabledAt(index,this.pedidoConstantesFunciones.activarFK_IdSubClientePedido);
			}

			index= this.jTabbedPaneBusquedasPedido.indexOfComponent(this.jPanelFK_IdTipoCambioPedido);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasPedido.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.pedidoConstantesFunciones.activarFK_IdTipoCambioPedido);
				this.jTabbedPaneBusquedasPedido.setEnabledAt(index,this.pedidoConstantesFunciones.activarFK_IdTipoCambioPedido);
			}

			index= this.jTabbedPaneBusquedasPedido.indexOfComponent(this.jPanelFK_IdTipoLlamadaPedido);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasPedido.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.pedidoConstantesFunciones.activarFK_IdTipoLlamadaPedido);
				this.jTabbedPaneBusquedasPedido.setEnabledAt(index,this.pedidoConstantesFunciones.activarFK_IdTipoLlamadaPedido);
			}

			index= this.jTabbedPaneBusquedasPedido.indexOfComponent(this.jPanelFK_IdTipoPrecioPedido);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasPedido.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.pedidoConstantesFunciones.activarFK_IdTipoPrecioPedido);
				this.jTabbedPaneBusquedasPedido.setEnabledAt(index,this.pedidoConstantesFunciones.activarFK_IdTipoPrecioPedido);
			}

			index= this.jTabbedPaneBusquedasPedido.indexOfComponent(this.jPanelFK_IdTransportePedido);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasPedido.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.pedidoConstantesFunciones.activarFK_IdTransportePedido);
				this.jTabbedPaneBusquedasPedido.setEnabledAt(index,this.pedidoConstantesFunciones.activarFK_IdTransportePedido);
			}

			index= this.jTabbedPaneBusquedasPedido.indexOfComponent(this.jPanelFK_IdTransportistaPedido);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasPedido.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.pedidoConstantesFunciones.activarFK_IdTransportistaPedido);
				this.jTabbedPaneBusquedasPedido.setEnabledAt(index,this.pedidoConstantesFunciones.activarFK_IdTransportistaPedido);
			}

			index= this.jTabbedPaneBusquedasPedido.indexOfComponent(this.jPanelFK_IdVendedorPedido);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasPedido.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.pedidoConstantesFunciones.activarFK_IdVendedorPedido);
				this.jTabbedPaneBusquedasPedido.setEnabledAt(index,this.pedidoConstantesFunciones.activarFK_IdVendedorPedido);
			}

			index= this.jTabbedPaneBusquedasPedido.indexOfComponent(this.jPanelFK_IdZonaPedido);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasPedido.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.pedidoConstantesFunciones.activarFK_IdZonaPedido);
				this.jTabbedPaneBusquedasPedido.setEnabledAt(index,this.pedidoConstantesFunciones.activarFK_IdZonaPedido);
			}
		}	
	
	}
	
	
	public void resaltarPanelBusquedaPedido(String sTipoBusqueda) {
		Boolean existe=false;
		//BYDAN_BUSQUEDAS
		
		int index=0;
		Border resaltar = Funciones2.getBorderResaltar(this.parametroGeneralUsuario,"TAB");

		if(sTipoBusqueda.equals("FK_IdCentroCosto")) {
			index= this.jTabbedPaneBusquedasPedido.indexOfComponent(this.jPanelFK_IdCentroCostoPedido);

			this.jTabbedPaneBusquedasPedido.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPedido.getComponent(index);

			this.pedidoConstantesFunciones.setResaltarFK_IdCentroCostoPedido(resaltar);

			jPanel.setBorder(this.pedidoConstantesFunciones.resaltarFK_IdCentroCostoPedido);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdCliente")) {
			index= this.jTabbedPaneBusquedasPedido.indexOfComponent(this.jPanelFK_IdClientePedido);

			this.jTabbedPaneBusquedasPedido.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPedido.getComponent(index);

			this.pedidoConstantesFunciones.setResaltarFK_IdClientePedido(resaltar);

			jPanel.setBorder(this.pedidoConstantesFunciones.resaltarFK_IdClientePedido);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdConsultor")) {
			index= this.jTabbedPaneBusquedasPedido.indexOfComponent(this.jPanelFK_IdConsultorPedido);

			this.jTabbedPaneBusquedasPedido.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPedido.getComponent(index);

			this.pedidoConstantesFunciones.setResaltarFK_IdConsultorPedido(resaltar);

			jPanel.setBorder(this.pedidoConstantesFunciones.resaltarFK_IdConsultorPedido);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdEmpleado")) {
			index= this.jTabbedPaneBusquedasPedido.indexOfComponent(this.jPanelFK_IdEmpleadoPedido);

			this.jTabbedPaneBusquedasPedido.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPedido.getComponent(index);

			this.pedidoConstantesFunciones.setResaltarFK_IdEmpleadoPedido(resaltar);

			jPanel.setBorder(this.pedidoConstantesFunciones.resaltarFK_IdEmpleadoPedido);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdEstadoPedido")) {
			index= this.jTabbedPaneBusquedasPedido.indexOfComponent(this.jPanelFK_IdEstadoPedidoPedido);

			this.jTabbedPaneBusquedasPedido.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPedido.getComponent(index);

			this.pedidoConstantesFunciones.setResaltarFK_IdEstadoPedidoPedido(resaltar);

			jPanel.setBorder(this.pedidoConstantesFunciones.resaltarFK_IdEstadoPedidoPedido);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdFormato")) {
			index= this.jTabbedPaneBusquedasPedido.indexOfComponent(this.jPanelFK_IdFormatoPedido);

			this.jTabbedPaneBusquedasPedido.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPedido.getComponent(index);

			this.pedidoConstantesFunciones.setResaltarFK_IdFormatoPedido(resaltar);

			jPanel.setBorder(this.pedidoConstantesFunciones.resaltarFK_IdFormatoPedido);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdResponsable")) {
			index= this.jTabbedPaneBusquedasPedido.indexOfComponent(this.jPanelFK_IdResponsablePedido);

			this.jTabbedPaneBusquedasPedido.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPedido.getComponent(index);

			this.pedidoConstantesFunciones.setResaltarFK_IdResponsablePedido(resaltar);

			jPanel.setBorder(this.pedidoConstantesFunciones.resaltarFK_IdResponsablePedido);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdRutaTransporte")) {
			index= this.jTabbedPaneBusquedasPedido.indexOfComponent(this.jPanelFK_IdRutaTransportePedido);

			this.jTabbedPaneBusquedasPedido.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPedido.getComponent(index);

			this.pedidoConstantesFunciones.setResaltarFK_IdRutaTransportePedido(resaltar);

			jPanel.setBorder(this.pedidoConstantesFunciones.resaltarFK_IdRutaTransportePedido);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdSubCliente")) {
			index= this.jTabbedPaneBusquedasPedido.indexOfComponent(this.jPanelFK_IdSubClientePedido);

			this.jTabbedPaneBusquedasPedido.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPedido.getComponent(index);

			this.pedidoConstantesFunciones.setResaltarFK_IdSubClientePedido(resaltar);

			jPanel.setBorder(this.pedidoConstantesFunciones.resaltarFK_IdSubClientePedido);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoCambio")) {
			index= this.jTabbedPaneBusquedasPedido.indexOfComponent(this.jPanelFK_IdTipoCambioPedido);

			this.jTabbedPaneBusquedasPedido.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPedido.getComponent(index);

			this.pedidoConstantesFunciones.setResaltarFK_IdTipoCambioPedido(resaltar);

			jPanel.setBorder(this.pedidoConstantesFunciones.resaltarFK_IdTipoCambioPedido);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoLlamada")) {
			index= this.jTabbedPaneBusquedasPedido.indexOfComponent(this.jPanelFK_IdTipoLlamadaPedido);

			this.jTabbedPaneBusquedasPedido.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPedido.getComponent(index);

			this.pedidoConstantesFunciones.setResaltarFK_IdTipoLlamadaPedido(resaltar);

			jPanel.setBorder(this.pedidoConstantesFunciones.resaltarFK_IdTipoLlamadaPedido);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoPrecio")) {
			index= this.jTabbedPaneBusquedasPedido.indexOfComponent(this.jPanelFK_IdTipoPrecioPedido);

			this.jTabbedPaneBusquedasPedido.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPedido.getComponent(index);

			this.pedidoConstantesFunciones.setResaltarFK_IdTipoPrecioPedido(resaltar);

			jPanel.setBorder(this.pedidoConstantesFunciones.resaltarFK_IdTipoPrecioPedido);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTransporte")) {
			index= this.jTabbedPaneBusquedasPedido.indexOfComponent(this.jPanelFK_IdTransportePedido);

			this.jTabbedPaneBusquedasPedido.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPedido.getComponent(index);

			this.pedidoConstantesFunciones.setResaltarFK_IdTransportePedido(resaltar);

			jPanel.setBorder(this.pedidoConstantesFunciones.resaltarFK_IdTransportePedido);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTransportista")) {
			index= this.jTabbedPaneBusquedasPedido.indexOfComponent(this.jPanelFK_IdTransportistaPedido);

			this.jTabbedPaneBusquedasPedido.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPedido.getComponent(index);

			this.pedidoConstantesFunciones.setResaltarFK_IdTransportistaPedido(resaltar);

			jPanel.setBorder(this.pedidoConstantesFunciones.resaltarFK_IdTransportistaPedido);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdVendedor")) {
			index= this.jTabbedPaneBusquedasPedido.indexOfComponent(this.jPanelFK_IdVendedorPedido);

			this.jTabbedPaneBusquedasPedido.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPedido.getComponent(index);

			this.pedidoConstantesFunciones.setResaltarFK_IdVendedorPedido(resaltar);

			jPanel.setBorder(this.pedidoConstantesFunciones.resaltarFK_IdVendedorPedido);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdZona")) {
			index= this.jTabbedPaneBusquedasPedido.indexOfComponent(this.jPanelFK_IdZonaPedido);

			this.jTabbedPaneBusquedasPedido.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPedido.getComponent(index);

			this.pedidoConstantesFunciones.setResaltarFK_IdZonaPedido(resaltar);

			jPanel.setBorder(this.pedidoConstantesFunciones.resaltarFK_IdZonaPedido);
			existe=true;
		}
		

		if(existe) {
			
			this.jTtoolBarPedido.setBorder(resaltar);
			
		}
	}	
	
	//NO FUNCIONA
	public void windowClosed(WindowEvent e) {	
	}
		
	public void windowClosing(WindowEvent e) {	    	    
	}

	public void windowOpened(WindowEvent e) {	    
	}

	public void windowIconified(WindowEvent e) {	    
	}

	public void windowDeiconified(WindowEvent e) {	    
	}

	public void windowActivated(WindowEvent e) {	    
	}

	public void windowDeactivated(WindowEvent e) {	    
	}

	public void windowGainedFocus(WindowEvent e) {	    
	}

	public void windowLostFocus(WindowEvent e) {	    
	}
	
	public void updateControlesFormularioPedido() throws Exception {

		if(this.jInternalFrameDetalleFormPedido==null) { //if(!this.conCargarFormDetalle) {			
			this.inicializarFormDetalle();
		}
		
		this.updateBorderResaltarControlesFormularioPedido();
		this.updateVisibilidadResaltarControlesFormularioPedido();
		this.updateHabilitarResaltarControlesFormularioPedido();
		
	}
	
	public void updateBorderResaltarControlesFormularioPedido() throws Exception {
		if(this.jInternalFrameDetalleFormPedido==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
	
		if(this.pedidoConstantesFunciones.resaltaridPedido!=null && this.jInternalFrameDetalleFormPedido!=null) {this.jInternalFrameDetalleFormPedido.jLabelidPedido.setBorder(this.pedidoConstantesFunciones.resaltaridPedido);}
		if(this.pedidoConstantesFunciones.resaltarid_empresaPedido!=null && this.jInternalFrameDetalleFormPedido!=null) {this.jInternalFrameDetalleFormPedido.jComboBoxid_empresaPedido.setBorder(this.pedidoConstantesFunciones.resaltarid_empresaPedido);}
		if(this.pedidoConstantesFunciones.resaltarid_sucursalPedido!=null && this.jInternalFrameDetalleFormPedido!=null) {this.jInternalFrameDetalleFormPedido.jComboBoxid_sucursalPedido.setBorder(this.pedidoConstantesFunciones.resaltarid_sucursalPedido);}
		if(this.pedidoConstantesFunciones.resaltarid_ejercicioPedido!=null && this.jInternalFrameDetalleFormPedido!=null) {this.jInternalFrameDetalleFormPedido.jComboBoxid_ejercicioPedido.setBorder(this.pedidoConstantesFunciones.resaltarid_ejercicioPedido);}
		if(this.pedidoConstantesFunciones.resaltarid_periodoPedido!=null && this.jInternalFrameDetalleFormPedido!=null) {this.jInternalFrameDetalleFormPedido.jComboBoxid_periodoPedido.setBorder(this.pedidoConstantesFunciones.resaltarid_periodoPedido);}
		if(this.pedidoConstantesFunciones.resaltarid_anioPedido!=null && this.jInternalFrameDetalleFormPedido!=null) {this.jInternalFrameDetalleFormPedido.jComboBoxid_anioPedido.setBorder(this.pedidoConstantesFunciones.resaltarid_anioPedido);}
		if(this.pedidoConstantesFunciones.resaltarid_mesPedido!=null && this.jInternalFrameDetalleFormPedido!=null) {this.jInternalFrameDetalleFormPedido.jComboBoxid_mesPedido.setBorder(this.pedidoConstantesFunciones.resaltarid_mesPedido);}
		if(this.pedidoConstantesFunciones.resaltarid_usuarioPedido!=null && this.jInternalFrameDetalleFormPedido!=null) {this.jInternalFrameDetalleFormPedido.jComboBoxid_usuarioPedido.setBorder(this.pedidoConstantesFunciones.resaltarid_usuarioPedido);}
		if(this.pedidoConstantesFunciones.resaltarnumeroPedido!=null && this.jInternalFrameDetalleFormPedido!=null) {this.jInternalFrameDetalleFormPedido.jTextFieldnumeroPedido.setBorder(this.pedidoConstantesFunciones.resaltarnumeroPedido);}
		if(this.pedidoConstantesFunciones.resaltarpre_impresoPedido!=null && this.jInternalFrameDetalleFormPedido!=null) {this.jInternalFrameDetalleFormPedido.jTextFieldpre_impresoPedido.setBorder(this.pedidoConstantesFunciones.resaltarpre_impresoPedido);}
		if(this.pedidoConstantesFunciones.resaltarfecha_emisionPedido!=null && this.jInternalFrameDetalleFormPedido!=null) {this.jInternalFrameDetalleFormPedido.jDateChooserfecha_emisionPedido.setBorder(this.pedidoConstantesFunciones.resaltarfecha_emisionPedido);}
		if(this.pedidoConstantesFunciones.resaltarfecha_entregaPedido!=null && this.jInternalFrameDetalleFormPedido!=null) {this.jInternalFrameDetalleFormPedido.jDateChooserfecha_entregaPedido.setBorder(this.pedidoConstantesFunciones.resaltarfecha_entregaPedido);}
		if(this.pedidoConstantesFunciones.resaltarid_monedaPedido!=null && this.jInternalFrameDetalleFormPedido!=null) {this.jInternalFrameDetalleFormPedido.jComboBoxid_monedaPedido.setBorder(this.pedidoConstantesFunciones.resaltarid_monedaPedido);}
		if(this.pedidoConstantesFunciones.resaltarcotizacionPedido!=null && this.jInternalFrameDetalleFormPedido!=null) {this.jInternalFrameDetalleFormPedido.jTextFieldcotizacionPedido.setBorder(this.pedidoConstantesFunciones.resaltarcotizacionPedido);}
		if(this.pedidoConstantesFunciones.resaltarid_empleadoPedido!=null && this.jInternalFrameDetalleFormPedido!=null) {this.jInternalFrameDetalleFormPedido.jComboBoxid_empleadoPedido.setBorder(this.pedidoConstantesFunciones.resaltarid_empleadoPedido);}
		if(this.pedidoConstantesFunciones.resaltarid_tipo_precioPedido!=null && this.jInternalFrameDetalleFormPedido!=null) {this.jInternalFrameDetalleFormPedido.jComboBoxid_tipo_precioPedido.setBorder(this.pedidoConstantesFunciones.resaltarid_tipo_precioPedido);}
		if(this.pedidoConstantesFunciones.resaltarid_formatoPedido!=null && this.jInternalFrameDetalleFormPedido!=null) {this.jInternalFrameDetalleFormPedido.jComboBoxid_formatoPedido.setBorder(this.pedidoConstantesFunciones.resaltarid_formatoPedido);}
		if(this.pedidoConstantesFunciones.resaltardireccionPedido!=null && this.jInternalFrameDetalleFormPedido!=null) {this.jInternalFrameDetalleFormPedido.jTextAreadireccionPedido.setBorder(this.pedidoConstantesFunciones.resaltardireccionPedido);}
		if(this.pedidoConstantesFunciones.resaltarid_clientePedido!=null && this.jInternalFrameDetalleFormPedido!=null) {this.jInternalFrameDetalleFormPedido.jComboBoxid_clientePedido.setBorder(this.pedidoConstantesFunciones.resaltarid_clientePedido);}
		if(this.pedidoConstantesFunciones.resaltartelefonoPedido!=null && this.jInternalFrameDetalleFormPedido!=null) {this.jInternalFrameDetalleFormPedido.jTextFieldtelefonoPedido.setBorder(this.pedidoConstantesFunciones.resaltartelefonoPedido);}
		if(this.pedidoConstantesFunciones.resaltarrucPedido!=null && this.jInternalFrameDetalleFormPedido!=null) {this.jInternalFrameDetalleFormPedido.jTextFieldrucPedido.setBorder(this.pedidoConstantesFunciones.resaltarrucPedido);}
		if(this.pedidoConstantesFunciones.resaltarid_sub_clientePedido!=null && this.jInternalFrameDetalleFormPedido!=null) {this.jInternalFrameDetalleFormPedido.jComboBoxid_sub_clientePedido.setBorder(this.pedidoConstantesFunciones.resaltarid_sub_clientePedido);}
		if(this.pedidoConstantesFunciones.resaltarid_vendedorPedido!=null && this.jInternalFrameDetalleFormPedido!=null) {this.jInternalFrameDetalleFormPedido.jComboBoxid_vendedorPedido.setBorder(this.pedidoConstantesFunciones.resaltarid_vendedorPedido);}
		if(this.pedidoConstantesFunciones.resaltarid_consultorPedido!=null && this.jInternalFrameDetalleFormPedido!=null) {this.jInternalFrameDetalleFormPedido.jComboBoxid_consultorPedido.setBorder(this.pedidoConstantesFunciones.resaltarid_consultorPedido);}
		if(this.pedidoConstantesFunciones.resaltarordenPedido!=null && this.jInternalFrameDetalleFormPedido!=null) {this.jInternalFrameDetalleFormPedido.jTextFieldordenPedido.setBorder(this.pedidoConstantesFunciones.resaltarordenPedido);}
		if(this.pedidoConstantesFunciones.resaltarid_responsablePedido!=null && this.jInternalFrameDetalleFormPedido!=null) {this.jInternalFrameDetalleFormPedido.jComboBoxid_responsablePedido.setBorder(this.pedidoConstantesFunciones.resaltarid_responsablePedido);}
		if(this.pedidoConstantesFunciones.resaltarid_estado_pedidoPedido!=null && this.jInternalFrameDetalleFormPedido!=null) {this.jInternalFrameDetalleFormPedido.jComboBoxid_estado_pedidoPedido.setBorder(this.pedidoConstantesFunciones.resaltarid_estado_pedidoPedido);}
		if(this.pedidoConstantesFunciones.resaltarid_transportePedido!=null && this.jInternalFrameDetalleFormPedido!=null) {this.jInternalFrameDetalleFormPedido.jComboBoxid_transportePedido.setBorder(this.pedidoConstantesFunciones.resaltarid_transportePedido);}
		if(this.pedidoConstantesFunciones.resaltarid_ruta_transportePedido!=null && this.jInternalFrameDetalleFormPedido!=null) {this.jInternalFrameDetalleFormPedido.jComboBoxid_ruta_transportePedido.setBorder(this.pedidoConstantesFunciones.resaltarid_ruta_transportePedido);}
		if(this.pedidoConstantesFunciones.resaltarvalor_rutaPedido!=null && this.jInternalFrameDetalleFormPedido!=null) {this.jInternalFrameDetalleFormPedido.jTextFieldvalor_rutaPedido.setBorder(this.pedidoConstantesFunciones.resaltarvalor_rutaPedido);}
		if(this.pedidoConstantesFunciones.resaltarid_tipo_llamadaPedido!=null && this.jInternalFrameDetalleFormPedido!=null) {this.jInternalFrameDetalleFormPedido.jComboBoxid_tipo_llamadaPedido.setBorder(this.pedidoConstantesFunciones.resaltarid_tipo_llamadaPedido);}
		if(this.pedidoConstantesFunciones.resaltarid_transportistaPedido!=null && this.jInternalFrameDetalleFormPedido!=null) {this.jInternalFrameDetalleFormPedido.jComboBoxid_transportistaPedido.setBorder(this.pedidoConstantesFunciones.resaltarid_transportistaPedido);}
		if(this.pedidoConstantesFunciones.resaltarhora_inicioPedido!=null && this.jInternalFrameDetalleFormPedido!=null) {this.jInternalFrameDetalleFormPedido.jSpinnerhora_inicioPedido.setBorder(this.pedidoConstantesFunciones.resaltarhora_inicioPedido);}
		if(this.pedidoConstantesFunciones.resaltarhora_finPedido!=null && this.jInternalFrameDetalleFormPedido!=null) {this.jInternalFrameDetalleFormPedido.jSpinnerhora_finPedido.setBorder(this.pedidoConstantesFunciones.resaltarhora_finPedido);}
		if(this.pedidoConstantesFunciones.resaltardescripcionPedido!=null && this.jInternalFrameDetalleFormPedido!=null) {this.jInternalFrameDetalleFormPedido.jTextAreadescripcionPedido.setBorder(this.pedidoConstantesFunciones.resaltardescripcionPedido);}
		if(this.pedidoConstantesFunciones.resaltarcupoPedido!=null && this.jInternalFrameDetalleFormPedido!=null) {this.jInternalFrameDetalleFormPedido.jTextFieldcupoPedido.setBorder(this.pedidoConstantesFunciones.resaltarcupoPedido);}
		if(this.pedidoConstantesFunciones.resaltarsaldoPedido!=null && this.jInternalFrameDetalleFormPedido!=null) {this.jInternalFrameDetalleFormPedido.jTextFieldsaldoPedido.setBorder(this.pedidoConstantesFunciones.resaltarsaldoPedido);}
		if(this.pedidoConstantesFunciones.resaltarpedidosPedido!=null && this.jInternalFrameDetalleFormPedido!=null) {this.jInternalFrameDetalleFormPedido.jTextFieldpedidosPedido.setBorder(this.pedidoConstantesFunciones.resaltarpedidosPedido);}
		if(this.pedidoConstantesFunciones.resaltardocumentosPedido!=null && this.jInternalFrameDetalleFormPedido!=null) {this.jInternalFrameDetalleFormPedido.jTextFielddocumentosPedido.setBorder(this.pedidoConstantesFunciones.resaltardocumentosPedido);}
		if(this.pedidoConstantesFunciones.resaltardisponiblePedido!=null && this.jInternalFrameDetalleFormPedido!=null) {this.jInternalFrameDetalleFormPedido.jTextFielddisponiblePedido.setBorder(this.pedidoConstantesFunciones.resaltardisponiblePedido);}
		if(this.pedidoConstantesFunciones.resaltardescuento_porcentajePedido!=null && this.jInternalFrameDetalleFormPedido!=null) {this.jInternalFrameDetalleFormPedido.jTextFielddescuento_porcentajePedido.setBorder(this.pedidoConstantesFunciones.resaltardescuento_porcentajePedido);}
		if(this.pedidoConstantesFunciones.resaltartotal_con_ivaPedido!=null && this.jInternalFrameDetalleFormPedido!=null) {this.jInternalFrameDetalleFormPedido.jTextFieldtotal_con_ivaPedido.setBorder(this.pedidoConstantesFunciones.resaltartotal_con_ivaPedido);}
		if(this.pedidoConstantesFunciones.resaltarsumanPedido!=null && this.jInternalFrameDetalleFormPedido!=null) {this.jInternalFrameDetalleFormPedido.jTextFieldsumanPedido.setBorder(this.pedidoConstantesFunciones.resaltarsumanPedido);}
		if(this.pedidoConstantesFunciones.resaltardescuento_valorPedido!=null && this.jInternalFrameDetalleFormPedido!=null) {this.jInternalFrameDetalleFormPedido.jTextFielddescuento_valorPedido.setBorder(this.pedidoConstantesFunciones.resaltardescuento_valorPedido);}
		if(this.pedidoConstantesFunciones.resaltartotal_sin_ivaPedido!=null && this.jInternalFrameDetalleFormPedido!=null) {this.jInternalFrameDetalleFormPedido.jTextFieldtotal_sin_ivaPedido.setBorder(this.pedidoConstantesFunciones.resaltartotal_sin_ivaPedido);}
		if(this.pedidoConstantesFunciones.resaltardescuento_totalPedido!=null && this.jInternalFrameDetalleFormPedido!=null) {this.jInternalFrameDetalleFormPedido.jTextFielddescuento_totalPedido.setBorder(this.pedidoConstantesFunciones.resaltardescuento_totalPedido);}
		if(this.pedidoConstantesFunciones.resaltarfletePedido!=null && this.jInternalFrameDetalleFormPedido!=null) {this.jInternalFrameDetalleFormPedido.jTextFieldfletePedido.setBorder(this.pedidoConstantesFunciones.resaltarfletePedido);}
		if(this.pedidoConstantesFunciones.resaltartotalPedido!=null && this.jInternalFrameDetalleFormPedido!=null) {this.jInternalFrameDetalleFormPedido.jTextFieldtotalPedido.setBorder(this.pedidoConstantesFunciones.resaltartotalPedido);}
		if(this.pedidoConstantesFunciones.resaltarsubtotalPedido!=null && this.jInternalFrameDetalleFormPedido!=null) {this.jInternalFrameDetalleFormPedido.jTextFieldsubtotalPedido.setBorder(this.pedidoConstantesFunciones.resaltarsubtotalPedido);}
		if(this.pedidoConstantesFunciones.resaltarotroPedido!=null && this.jInternalFrameDetalleFormPedido!=null) {this.jInternalFrameDetalleFormPedido.jTextFieldotroPedido.setBorder(this.pedidoConstantesFunciones.resaltarotroPedido);}
		if(this.pedidoConstantesFunciones.resaltarultimo_costoPedido!=null && this.jInternalFrameDetalleFormPedido!=null) {this.jInternalFrameDetalleFormPedido.jTextFieldultimo_costoPedido.setBorder(this.pedidoConstantesFunciones.resaltarultimo_costoPedido);}
		if(this.pedidoConstantesFunciones.resaltarivaPedido!=null && this.jInternalFrameDetalleFormPedido!=null) {this.jInternalFrameDetalleFormPedido.jTextFieldivaPedido.setBorder(this.pedidoConstantesFunciones.resaltarivaPedido);}
		if(this.pedidoConstantesFunciones.resaltarfinanciamientoPedido!=null && this.jInternalFrameDetalleFormPedido!=null) {this.jInternalFrameDetalleFormPedido.jTextFieldfinanciamientoPedido.setBorder(this.pedidoConstantesFunciones.resaltarfinanciamientoPedido);}
		if(this.pedidoConstantesFunciones.resaltarmargen_utilidadPedido!=null && this.jInternalFrameDetalleFormPedido!=null) {this.jInternalFrameDetalleFormPedido.jTextFieldmargen_utilidadPedido.setBorder(this.pedidoConstantesFunciones.resaltarmargen_utilidadPedido);}
		if(this.pedidoConstantesFunciones.resaltarotros_valoresPedido!=null && this.jInternalFrameDetalleFormPedido!=null) {this.jInternalFrameDetalleFormPedido.jTextFieldotros_valoresPedido.setBorder(this.pedidoConstantesFunciones.resaltarotros_valoresPedido);}
		if(this.pedidoConstantesFunciones.resaltaranticipoPedido!=null && this.jInternalFrameDetalleFormPedido!=null) {this.jInternalFrameDetalleFormPedido.jTextFieldanticipoPedido.setBorder(this.pedidoConstantesFunciones.resaltaranticipoPedido);}
		if(this.pedidoConstantesFunciones.resaltarid_tipo_cambioPedido!=null && this.jInternalFrameDetalleFormPedido!=null) {this.jInternalFrameDetalleFormPedido.jComboBoxid_tipo_cambioPedido.setBorder(this.pedidoConstantesFunciones.resaltarid_tipo_cambioPedido);}
		if(this.pedidoConstantesFunciones.resaltarid_centro_costoPedido!=null && this.jInternalFrameDetalleFormPedido!=null) {this.jInternalFrameDetalleFormPedido.jComboBoxid_centro_costoPedido.setBorder(this.pedidoConstantesFunciones.resaltarid_centro_costoPedido);}
		if(this.pedidoConstantesFunciones.resaltarid_zonaPedido!=null && this.jInternalFrameDetalleFormPedido!=null) {this.jInternalFrameDetalleFormPedido.jComboBoxid_zonaPedido.setBorder(this.pedidoConstantesFunciones.resaltarid_zonaPedido);}
		if(this.pedidoConstantesFunciones.resaltarfechaPedido!=null && this.jInternalFrameDetalleFormPedido!=null) {this.jInternalFrameDetalleFormPedido.jDateChooserfechaPedido.setBorder(this.pedidoConstantesFunciones.resaltarfechaPedido);}
		if(this.pedidoConstantesFunciones.resaltarnumero_fuePedido!=null && this.jInternalFrameDetalleFormPedido!=null) {this.jInternalFrameDetalleFormPedido.jTextFieldnumero_fuePedido.setBorder(this.pedidoConstantesFunciones.resaltarnumero_fuePedido);}
		if(this.pedidoConstantesFunciones.resaltarfecha_servidorPedido!=null && this.jInternalFrameDetalleFormPedido!=null) {this.jInternalFrameDetalleFormPedido.jDateChooserfecha_servidorPedido.setBorder(this.pedidoConstantesFunciones.resaltarfecha_servidorPedido);}
		if(this.pedidoConstantesFunciones.resaltarmonto_retencionPedido!=null && this.jInternalFrameDetalleFormPedido!=null) {this.jInternalFrameDetalleFormPedido.jTextFieldmonto_retencionPedido.setBorder(this.pedidoConstantesFunciones.resaltarmonto_retencionPedido);}
		if(this.pedidoConstantesFunciones.resaltaricePedido!=null && this.jInternalFrameDetalleFormPedido!=null) {this.jInternalFrameDetalleFormPedido.jTextFieldicePedido.setBorder(this.pedidoConstantesFunciones.resaltaricePedido);}
	}
	
	public void updateVisibilidadResaltarControlesFormularioPedido() throws Exception {		
		if(this.jInternalFrameDetalleFormPedido==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormPedido!=null) {
	
		//this.jInternalFrameDetalleFormPedido.jLabelidPedido.setVisible(this.pedidoConstantesFunciones.mostraridPedido);
		this.jInternalFrameDetalleFormPedido.jPanelidPedido.setVisible(this.pedidoConstantesFunciones.mostraridPedido);
		//this.jInternalFrameDetalleFormPedido.jComboBoxid_empresaPedido.setVisible(this.pedidoConstantesFunciones.mostrarid_empresaPedido);
		this.jInternalFrameDetalleFormPedido.jPanelid_empresaPedido.setVisible(this.pedidoConstantesFunciones.mostrarid_empresaPedido);
		//this.jInternalFrameDetalleFormPedido.jComboBoxid_sucursalPedido.setVisible(this.pedidoConstantesFunciones.mostrarid_sucursalPedido);
		this.jInternalFrameDetalleFormPedido.jPanelid_sucursalPedido.setVisible(this.pedidoConstantesFunciones.mostrarid_sucursalPedido);
		//this.jInternalFrameDetalleFormPedido.jComboBoxid_ejercicioPedido.setVisible(this.pedidoConstantesFunciones.mostrarid_ejercicioPedido);
		this.jInternalFrameDetalleFormPedido.jPanelid_ejercicioPedido.setVisible(this.pedidoConstantesFunciones.mostrarid_ejercicioPedido);
		//this.jInternalFrameDetalleFormPedido.jComboBoxid_periodoPedido.setVisible(this.pedidoConstantesFunciones.mostrarid_periodoPedido);
		this.jInternalFrameDetalleFormPedido.jPanelid_periodoPedido.setVisible(this.pedidoConstantesFunciones.mostrarid_periodoPedido);
		//this.jInternalFrameDetalleFormPedido.jComboBoxid_anioPedido.setVisible(this.pedidoConstantesFunciones.mostrarid_anioPedido);
		this.jInternalFrameDetalleFormPedido.jPanelid_anioPedido.setVisible(this.pedidoConstantesFunciones.mostrarid_anioPedido);
		//this.jInternalFrameDetalleFormPedido.jComboBoxid_mesPedido.setVisible(this.pedidoConstantesFunciones.mostrarid_mesPedido);
		this.jInternalFrameDetalleFormPedido.jPanelid_mesPedido.setVisible(this.pedidoConstantesFunciones.mostrarid_mesPedido);
		//this.jInternalFrameDetalleFormPedido.jComboBoxid_usuarioPedido.setVisible(this.pedidoConstantesFunciones.mostrarid_usuarioPedido);
		this.jInternalFrameDetalleFormPedido.jPanelid_usuarioPedido.setVisible(this.pedidoConstantesFunciones.mostrarid_usuarioPedido);
		//this.jInternalFrameDetalleFormPedido.jTextFieldnumeroPedido.setVisible(this.pedidoConstantesFunciones.mostrarnumeroPedido);
		this.jInternalFrameDetalleFormPedido.jPanelnumeroPedido.setVisible(this.pedidoConstantesFunciones.mostrarnumeroPedido);
		//this.jInternalFrameDetalleFormPedido.jTextFieldpre_impresoPedido.setVisible(this.pedidoConstantesFunciones.mostrarpre_impresoPedido);
		this.jInternalFrameDetalleFormPedido.jPanelpre_impresoPedido.setVisible(this.pedidoConstantesFunciones.mostrarpre_impresoPedido);
		//this.jInternalFrameDetalleFormPedido.jDateChooserfecha_emisionPedido.setVisible(this.pedidoConstantesFunciones.mostrarfecha_emisionPedido);
		this.jInternalFrameDetalleFormPedido.jPanelfecha_emisionPedido.setVisible(this.pedidoConstantesFunciones.mostrarfecha_emisionPedido);
		//this.jInternalFrameDetalleFormPedido.jDateChooserfecha_entregaPedido.setVisible(this.pedidoConstantesFunciones.mostrarfecha_entregaPedido);
		this.jInternalFrameDetalleFormPedido.jPanelfecha_entregaPedido.setVisible(this.pedidoConstantesFunciones.mostrarfecha_entregaPedido);
		//this.jInternalFrameDetalleFormPedido.jComboBoxid_monedaPedido.setVisible(this.pedidoConstantesFunciones.mostrarid_monedaPedido);
		this.jInternalFrameDetalleFormPedido.jPanelid_monedaPedido.setVisible(this.pedidoConstantesFunciones.mostrarid_monedaPedido);
		//this.jInternalFrameDetalleFormPedido.jTextFieldcotizacionPedido.setVisible(this.pedidoConstantesFunciones.mostrarcotizacionPedido);
		this.jInternalFrameDetalleFormPedido.jPanelcotizacionPedido.setVisible(this.pedidoConstantesFunciones.mostrarcotizacionPedido);
		//this.jInternalFrameDetalleFormPedido.jComboBoxid_empleadoPedido.setVisible(this.pedidoConstantesFunciones.mostrarid_empleadoPedido);
		this.jInternalFrameDetalleFormPedido.jPanelid_empleadoPedido.setVisible(this.pedidoConstantesFunciones.mostrarid_empleadoPedido);
			this.jInternalFrameDetalleFormPedido.jButtonid_empleadoPedido.setVisible(this.pedidoConstantesFunciones.mostrarid_empleadoPedido);
		//this.jInternalFrameDetalleFormPedido.jComboBoxid_tipo_precioPedido.setVisible(this.pedidoConstantesFunciones.mostrarid_tipo_precioPedido);
		this.jInternalFrameDetalleFormPedido.jPanelid_tipo_precioPedido.setVisible(this.pedidoConstantesFunciones.mostrarid_tipo_precioPedido);
		//this.jInternalFrameDetalleFormPedido.jComboBoxid_formatoPedido.setVisible(this.pedidoConstantesFunciones.mostrarid_formatoPedido);
		this.jInternalFrameDetalleFormPedido.jPanelid_formatoPedido.setVisible(this.pedidoConstantesFunciones.mostrarid_formatoPedido);
		//this.jInternalFrameDetalleFormPedido.jTextAreadireccionPedido.setVisible(this.pedidoConstantesFunciones.mostrardireccionPedido);
		this.jInternalFrameDetalleFormPedido.jPaneldireccionPedido.setVisible(this.pedidoConstantesFunciones.mostrardireccionPedido);
		//this.jInternalFrameDetalleFormPedido.jComboBoxid_clientePedido.setVisible(this.pedidoConstantesFunciones.mostrarid_clientePedido);
		this.jInternalFrameDetalleFormPedido.jPanelid_clientePedido.setVisible(this.pedidoConstantesFunciones.mostrarid_clientePedido);
			this.jInternalFrameDetalleFormPedido.jButtonid_clientePedido.setVisible(this.pedidoConstantesFunciones.mostrarid_clientePedido);
		//this.jInternalFrameDetalleFormPedido.jTextFieldtelefonoPedido.setVisible(this.pedidoConstantesFunciones.mostrartelefonoPedido);
		this.jInternalFrameDetalleFormPedido.jPaneltelefonoPedido.setVisible(this.pedidoConstantesFunciones.mostrartelefonoPedido);
		//this.jInternalFrameDetalleFormPedido.jTextFieldrucPedido.setVisible(this.pedidoConstantesFunciones.mostrarrucPedido);
		this.jInternalFrameDetalleFormPedido.jPanelrucPedido.setVisible(this.pedidoConstantesFunciones.mostrarrucPedido);
		//this.jInternalFrameDetalleFormPedido.jComboBoxid_sub_clientePedido.setVisible(this.pedidoConstantesFunciones.mostrarid_sub_clientePedido);
		this.jInternalFrameDetalleFormPedido.jPanelid_sub_clientePedido.setVisible(this.pedidoConstantesFunciones.mostrarid_sub_clientePedido);
		//this.jInternalFrameDetalleFormPedido.jComboBoxid_vendedorPedido.setVisible(this.pedidoConstantesFunciones.mostrarid_vendedorPedido);
		this.jInternalFrameDetalleFormPedido.jPanelid_vendedorPedido.setVisible(this.pedidoConstantesFunciones.mostrarid_vendedorPedido);
			this.jInternalFrameDetalleFormPedido.jButtonid_vendedorPedido.setVisible(this.pedidoConstantesFunciones.mostrarid_vendedorPedido);
		//this.jInternalFrameDetalleFormPedido.jComboBoxid_consultorPedido.setVisible(this.pedidoConstantesFunciones.mostrarid_consultorPedido);
		this.jInternalFrameDetalleFormPedido.jPanelid_consultorPedido.setVisible(this.pedidoConstantesFunciones.mostrarid_consultorPedido);
		//this.jInternalFrameDetalleFormPedido.jTextFieldordenPedido.setVisible(this.pedidoConstantesFunciones.mostrarordenPedido);
		this.jInternalFrameDetalleFormPedido.jPanelordenPedido.setVisible(this.pedidoConstantesFunciones.mostrarordenPedido);
		//this.jInternalFrameDetalleFormPedido.jComboBoxid_responsablePedido.setVisible(this.pedidoConstantesFunciones.mostrarid_responsablePedido);
		this.jInternalFrameDetalleFormPedido.jPanelid_responsablePedido.setVisible(this.pedidoConstantesFunciones.mostrarid_responsablePedido);
		//this.jInternalFrameDetalleFormPedido.jComboBoxid_estado_pedidoPedido.setVisible(this.pedidoConstantesFunciones.mostrarid_estado_pedidoPedido);
		this.jInternalFrameDetalleFormPedido.jPanelid_estado_pedidoPedido.setVisible(this.pedidoConstantesFunciones.mostrarid_estado_pedidoPedido);
		//this.jInternalFrameDetalleFormPedido.jComboBoxid_transportePedido.setVisible(this.pedidoConstantesFunciones.mostrarid_transportePedido);
		this.jInternalFrameDetalleFormPedido.jPanelid_transportePedido.setVisible(this.pedidoConstantesFunciones.mostrarid_transportePedido);
		//this.jInternalFrameDetalleFormPedido.jComboBoxid_ruta_transportePedido.setVisible(this.pedidoConstantesFunciones.mostrarid_ruta_transportePedido);
		this.jInternalFrameDetalleFormPedido.jPanelid_ruta_transportePedido.setVisible(this.pedidoConstantesFunciones.mostrarid_ruta_transportePedido);
		//this.jInternalFrameDetalleFormPedido.jTextFieldvalor_rutaPedido.setVisible(this.pedidoConstantesFunciones.mostrarvalor_rutaPedido);
		this.jInternalFrameDetalleFormPedido.jPanelvalor_rutaPedido.setVisible(this.pedidoConstantesFunciones.mostrarvalor_rutaPedido);
		//this.jInternalFrameDetalleFormPedido.jComboBoxid_tipo_llamadaPedido.setVisible(this.pedidoConstantesFunciones.mostrarid_tipo_llamadaPedido);
		this.jInternalFrameDetalleFormPedido.jPanelid_tipo_llamadaPedido.setVisible(this.pedidoConstantesFunciones.mostrarid_tipo_llamadaPedido);
		//this.jInternalFrameDetalleFormPedido.jComboBoxid_transportistaPedido.setVisible(this.pedidoConstantesFunciones.mostrarid_transportistaPedido);
		this.jInternalFrameDetalleFormPedido.jPanelid_transportistaPedido.setVisible(this.pedidoConstantesFunciones.mostrarid_transportistaPedido);
		//this.jInternalFrameDetalleFormPedido.jSpinnerhora_inicioPedido.setVisible(this.pedidoConstantesFunciones.mostrarhora_inicioPedido);
		this.jInternalFrameDetalleFormPedido.jPanelhora_inicioPedido.setVisible(this.pedidoConstantesFunciones.mostrarhora_inicioPedido);
		//this.jInternalFrameDetalleFormPedido.jSpinnerhora_finPedido.setVisible(this.pedidoConstantesFunciones.mostrarhora_finPedido);
		this.jInternalFrameDetalleFormPedido.jPanelhora_finPedido.setVisible(this.pedidoConstantesFunciones.mostrarhora_finPedido);
		//this.jInternalFrameDetalleFormPedido.jTextAreadescripcionPedido.setVisible(this.pedidoConstantesFunciones.mostrardescripcionPedido);
		this.jInternalFrameDetalleFormPedido.jPaneldescripcionPedido.setVisible(this.pedidoConstantesFunciones.mostrardescripcionPedido);
		//this.jInternalFrameDetalleFormPedido.jTextFieldcupoPedido.setVisible(this.pedidoConstantesFunciones.mostrarcupoPedido);
		this.jInternalFrameDetalleFormPedido.jPanelcupoPedido.setVisible(this.pedidoConstantesFunciones.mostrarcupoPedido);
		//this.jInternalFrameDetalleFormPedido.jTextFieldsaldoPedido.setVisible(this.pedidoConstantesFunciones.mostrarsaldoPedido);
		this.jInternalFrameDetalleFormPedido.jPanelsaldoPedido.setVisible(this.pedidoConstantesFunciones.mostrarsaldoPedido);
		//this.jInternalFrameDetalleFormPedido.jTextFieldpedidosPedido.setVisible(this.pedidoConstantesFunciones.mostrarpedidosPedido);
		this.jInternalFrameDetalleFormPedido.jPanelpedidosPedido.setVisible(this.pedidoConstantesFunciones.mostrarpedidosPedido);
		//this.jInternalFrameDetalleFormPedido.jTextFielddocumentosPedido.setVisible(this.pedidoConstantesFunciones.mostrardocumentosPedido);
		this.jInternalFrameDetalleFormPedido.jPaneldocumentosPedido.setVisible(this.pedidoConstantesFunciones.mostrardocumentosPedido);
		//this.jInternalFrameDetalleFormPedido.jTextFielddisponiblePedido.setVisible(this.pedidoConstantesFunciones.mostrardisponiblePedido);
		this.jInternalFrameDetalleFormPedido.jPaneldisponiblePedido.setVisible(this.pedidoConstantesFunciones.mostrardisponiblePedido);
		//this.jInternalFrameDetalleFormPedido.jTextFielddescuento_porcentajePedido.setVisible(this.pedidoConstantesFunciones.mostrardescuento_porcentajePedido);
		this.jInternalFrameDetalleFormPedido.jPaneldescuento_porcentajePedido.setVisible(this.pedidoConstantesFunciones.mostrardescuento_porcentajePedido);
		//this.jInternalFrameDetalleFormPedido.jTextFieldtotal_con_ivaPedido.setVisible(this.pedidoConstantesFunciones.mostrartotal_con_ivaPedido);
		this.jInternalFrameDetalleFormPedido.jPaneltotal_con_ivaPedido.setVisible(this.pedidoConstantesFunciones.mostrartotal_con_ivaPedido);
		//this.jInternalFrameDetalleFormPedido.jTextFieldsumanPedido.setVisible(this.pedidoConstantesFunciones.mostrarsumanPedido);
		this.jInternalFrameDetalleFormPedido.jPanelsumanPedido.setVisible(this.pedidoConstantesFunciones.mostrarsumanPedido);
		//this.jInternalFrameDetalleFormPedido.jTextFielddescuento_valorPedido.setVisible(this.pedidoConstantesFunciones.mostrardescuento_valorPedido);
		this.jInternalFrameDetalleFormPedido.jPaneldescuento_valorPedido.setVisible(this.pedidoConstantesFunciones.mostrardescuento_valorPedido);
		//this.jInternalFrameDetalleFormPedido.jTextFieldtotal_sin_ivaPedido.setVisible(this.pedidoConstantesFunciones.mostrartotal_sin_ivaPedido);
		this.jInternalFrameDetalleFormPedido.jPaneltotal_sin_ivaPedido.setVisible(this.pedidoConstantesFunciones.mostrartotal_sin_ivaPedido);
		//this.jInternalFrameDetalleFormPedido.jTextFielddescuento_totalPedido.setVisible(this.pedidoConstantesFunciones.mostrardescuento_totalPedido);
		this.jInternalFrameDetalleFormPedido.jPaneldescuento_totalPedido.setVisible(this.pedidoConstantesFunciones.mostrardescuento_totalPedido);
		//this.jInternalFrameDetalleFormPedido.jTextFieldfletePedido.setVisible(this.pedidoConstantesFunciones.mostrarfletePedido);
		this.jInternalFrameDetalleFormPedido.jPanelfletePedido.setVisible(this.pedidoConstantesFunciones.mostrarfletePedido);
		//this.jInternalFrameDetalleFormPedido.jTextFieldtotalPedido.setVisible(this.pedidoConstantesFunciones.mostrartotalPedido);
		this.jInternalFrameDetalleFormPedido.jPaneltotalPedido.setVisible(this.pedidoConstantesFunciones.mostrartotalPedido);
		//this.jInternalFrameDetalleFormPedido.jTextFieldsubtotalPedido.setVisible(this.pedidoConstantesFunciones.mostrarsubtotalPedido);
		this.jInternalFrameDetalleFormPedido.jPanelsubtotalPedido.setVisible(this.pedidoConstantesFunciones.mostrarsubtotalPedido);
		//this.jInternalFrameDetalleFormPedido.jTextFieldotroPedido.setVisible(this.pedidoConstantesFunciones.mostrarotroPedido);
		this.jInternalFrameDetalleFormPedido.jPanelotroPedido.setVisible(this.pedidoConstantesFunciones.mostrarotroPedido);
		//this.jInternalFrameDetalleFormPedido.jTextFieldultimo_costoPedido.setVisible(this.pedidoConstantesFunciones.mostrarultimo_costoPedido);
		this.jInternalFrameDetalleFormPedido.jPanelultimo_costoPedido.setVisible(this.pedidoConstantesFunciones.mostrarultimo_costoPedido);
		//this.jInternalFrameDetalleFormPedido.jTextFieldivaPedido.setVisible(this.pedidoConstantesFunciones.mostrarivaPedido);
		this.jInternalFrameDetalleFormPedido.jPanelivaPedido.setVisible(this.pedidoConstantesFunciones.mostrarivaPedido);
		//this.jInternalFrameDetalleFormPedido.jTextFieldfinanciamientoPedido.setVisible(this.pedidoConstantesFunciones.mostrarfinanciamientoPedido);
		this.jInternalFrameDetalleFormPedido.jPanelfinanciamientoPedido.setVisible(this.pedidoConstantesFunciones.mostrarfinanciamientoPedido);
		//this.jInternalFrameDetalleFormPedido.jTextFieldmargen_utilidadPedido.setVisible(this.pedidoConstantesFunciones.mostrarmargen_utilidadPedido);
		this.jInternalFrameDetalleFormPedido.jPanelmargen_utilidadPedido.setVisible(this.pedidoConstantesFunciones.mostrarmargen_utilidadPedido);
		//this.jInternalFrameDetalleFormPedido.jTextFieldotros_valoresPedido.setVisible(this.pedidoConstantesFunciones.mostrarotros_valoresPedido);
		this.jInternalFrameDetalleFormPedido.jPanelotros_valoresPedido.setVisible(this.pedidoConstantesFunciones.mostrarotros_valoresPedido);
		//this.jInternalFrameDetalleFormPedido.jTextFieldanticipoPedido.setVisible(this.pedidoConstantesFunciones.mostraranticipoPedido);
		this.jInternalFrameDetalleFormPedido.jPanelanticipoPedido.setVisible(this.pedidoConstantesFunciones.mostraranticipoPedido);
		//this.jInternalFrameDetalleFormPedido.jComboBoxid_tipo_cambioPedido.setVisible(this.pedidoConstantesFunciones.mostrarid_tipo_cambioPedido);
		this.jInternalFrameDetalleFormPedido.jPanelid_tipo_cambioPedido.setVisible(this.pedidoConstantesFunciones.mostrarid_tipo_cambioPedido);
			this.jInternalFrameDetalleFormPedido.jButtonid_tipo_cambioPedido.setVisible(this.pedidoConstantesFunciones.mostrarid_tipo_cambioPedido);
		//this.jInternalFrameDetalleFormPedido.jComboBoxid_centro_costoPedido.setVisible(this.pedidoConstantesFunciones.mostrarid_centro_costoPedido);
		this.jInternalFrameDetalleFormPedido.jPanelid_centro_costoPedido.setVisible(this.pedidoConstantesFunciones.mostrarid_centro_costoPedido);
			this.jInternalFrameDetalleFormPedido.jButtonid_centro_costoPedido.setVisible(this.pedidoConstantesFunciones.mostrarid_centro_costoPedido);
		//this.jInternalFrameDetalleFormPedido.jComboBoxid_zonaPedido.setVisible(this.pedidoConstantesFunciones.mostrarid_zonaPedido);
		this.jInternalFrameDetalleFormPedido.jPanelid_zonaPedido.setVisible(this.pedidoConstantesFunciones.mostrarid_zonaPedido);
		//this.jInternalFrameDetalleFormPedido.jDateChooserfechaPedido.setVisible(this.pedidoConstantesFunciones.mostrarfechaPedido);
		this.jInternalFrameDetalleFormPedido.jPanelfechaPedido.setVisible(this.pedidoConstantesFunciones.mostrarfechaPedido);
		//this.jInternalFrameDetalleFormPedido.jTextFieldnumero_fuePedido.setVisible(this.pedidoConstantesFunciones.mostrarnumero_fuePedido);
		this.jInternalFrameDetalleFormPedido.jPanelnumero_fuePedido.setVisible(this.pedidoConstantesFunciones.mostrarnumero_fuePedido);
		//this.jInternalFrameDetalleFormPedido.jDateChooserfecha_servidorPedido.setVisible(this.pedidoConstantesFunciones.mostrarfecha_servidorPedido);
		this.jInternalFrameDetalleFormPedido.jPanelfecha_servidorPedido.setVisible(this.pedidoConstantesFunciones.mostrarfecha_servidorPedido);
		//this.jInternalFrameDetalleFormPedido.jTextFieldmonto_retencionPedido.setVisible(this.pedidoConstantesFunciones.mostrarmonto_retencionPedido);
		this.jInternalFrameDetalleFormPedido.jPanelmonto_retencionPedido.setVisible(this.pedidoConstantesFunciones.mostrarmonto_retencionPedido);
		//this.jInternalFrameDetalleFormPedido.jTextFieldicePedido.setVisible(this.pedidoConstantesFunciones.mostraricePedido);
		this.jInternalFrameDetalleFormPedido.jPanelicePedido.setVisible(this.pedidoConstantesFunciones.mostraricePedido);
		}
	}
	
	public void updateHabilitarResaltarControlesFormularioPedido() throws Exception {
		if(this.jInternalFrameDetalleFormPedido==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormPedido!=null) {
	
		this.jInternalFrameDetalleFormPedido.jLabelidPedido.setEnabled(this.pedidoConstantesFunciones.activaridPedido);
		this.jInternalFrameDetalleFormPedido.jComboBoxid_empresaPedido.setEnabled(this.pedidoConstantesFunciones.activarid_empresaPedido);
		this.jInternalFrameDetalleFormPedido.jComboBoxid_sucursalPedido.setEnabled(this.pedidoConstantesFunciones.activarid_sucursalPedido);
		this.jInternalFrameDetalleFormPedido.jComboBoxid_ejercicioPedido.setEnabled(this.pedidoConstantesFunciones.activarid_ejercicioPedido);
		this.jInternalFrameDetalleFormPedido.jComboBoxid_periodoPedido.setEnabled(this.pedidoConstantesFunciones.activarid_periodoPedido);
		this.jInternalFrameDetalleFormPedido.jComboBoxid_anioPedido.setEnabled(this.pedidoConstantesFunciones.activarid_anioPedido);
		this.jInternalFrameDetalleFormPedido.jComboBoxid_mesPedido.setEnabled(this.pedidoConstantesFunciones.activarid_mesPedido);
		this.jInternalFrameDetalleFormPedido.jComboBoxid_usuarioPedido.setEnabled(this.pedidoConstantesFunciones.activarid_usuarioPedido);
		this.jInternalFrameDetalleFormPedido.jTextFieldnumeroPedido.setEnabled(this.pedidoConstantesFunciones.activarnumeroPedido);
		this.jInternalFrameDetalleFormPedido.jTextFieldpre_impresoPedido.setEnabled(this.pedidoConstantesFunciones.activarpre_impresoPedido);
		this.jInternalFrameDetalleFormPedido.jDateChooserfecha_emisionPedido.setEnabled(this.pedidoConstantesFunciones.activarfecha_emisionPedido);
		this.jInternalFrameDetalleFormPedido.jDateChooserfecha_entregaPedido.setEnabled(this.pedidoConstantesFunciones.activarfecha_entregaPedido);
		this.jInternalFrameDetalleFormPedido.jComboBoxid_monedaPedido.setEnabled(this.pedidoConstantesFunciones.activarid_monedaPedido);
		this.jInternalFrameDetalleFormPedido.jTextFieldcotizacionPedido.setEnabled(this.pedidoConstantesFunciones.activarcotizacionPedido);
		this.jInternalFrameDetalleFormPedido.jComboBoxid_empleadoPedido.setEnabled(this.pedidoConstantesFunciones.activarid_empleadoPedido);
			this.jInternalFrameDetalleFormPedido.jButtonid_empleadoPedido.setEnabled(this.pedidoConstantesFunciones.activarid_empleadoPedido);
		this.jInternalFrameDetalleFormPedido.jComboBoxid_tipo_precioPedido.setEnabled(this.pedidoConstantesFunciones.activarid_tipo_precioPedido);
		this.jInternalFrameDetalleFormPedido.jComboBoxid_formatoPedido.setEnabled(this.pedidoConstantesFunciones.activarid_formatoPedido);
		this.jInternalFrameDetalleFormPedido.jTextAreadireccionPedido.setEnabled(this.pedidoConstantesFunciones.activardireccionPedido);
		this.jInternalFrameDetalleFormPedido.jComboBoxid_clientePedido.setEnabled(this.pedidoConstantesFunciones.activarid_clientePedido);
			this.jInternalFrameDetalleFormPedido.jButtonid_clientePedido.setEnabled(this.pedidoConstantesFunciones.activarid_clientePedido);
		this.jInternalFrameDetalleFormPedido.jTextFieldtelefonoPedido.setEnabled(this.pedidoConstantesFunciones.activartelefonoPedido);
		this.jInternalFrameDetalleFormPedido.jTextFieldrucPedido.setEnabled(this.pedidoConstantesFunciones.activarrucPedido);
		this.jInternalFrameDetalleFormPedido.jComboBoxid_sub_clientePedido.setEnabled(this.pedidoConstantesFunciones.activarid_sub_clientePedido);
		this.jInternalFrameDetalleFormPedido.jComboBoxid_vendedorPedido.setEnabled(this.pedidoConstantesFunciones.activarid_vendedorPedido);
			this.jInternalFrameDetalleFormPedido.jButtonid_vendedorPedido.setEnabled(this.pedidoConstantesFunciones.activarid_vendedorPedido);
		this.jInternalFrameDetalleFormPedido.jComboBoxid_consultorPedido.setEnabled(this.pedidoConstantesFunciones.activarid_consultorPedido);
		this.jInternalFrameDetalleFormPedido.jTextFieldordenPedido.setEnabled(this.pedidoConstantesFunciones.activarordenPedido);
		this.jInternalFrameDetalleFormPedido.jComboBoxid_responsablePedido.setEnabled(this.pedidoConstantesFunciones.activarid_responsablePedido);
		this.jInternalFrameDetalleFormPedido.jComboBoxid_estado_pedidoPedido.setEnabled(this.pedidoConstantesFunciones.activarid_estado_pedidoPedido);
		this.jInternalFrameDetalleFormPedido.jComboBoxid_transportePedido.setEnabled(this.pedidoConstantesFunciones.activarid_transportePedido);
		this.jInternalFrameDetalleFormPedido.jComboBoxid_ruta_transportePedido.setEnabled(this.pedidoConstantesFunciones.activarid_ruta_transportePedido);
		this.jInternalFrameDetalleFormPedido.jTextFieldvalor_rutaPedido.setEnabled(this.pedidoConstantesFunciones.activarvalor_rutaPedido);
		this.jInternalFrameDetalleFormPedido.jComboBoxid_tipo_llamadaPedido.setEnabled(this.pedidoConstantesFunciones.activarid_tipo_llamadaPedido);
		this.jInternalFrameDetalleFormPedido.jComboBoxid_transportistaPedido.setEnabled(this.pedidoConstantesFunciones.activarid_transportistaPedido);
		this.jInternalFrameDetalleFormPedido.jSpinnerhora_inicioPedido.setEnabled(this.pedidoConstantesFunciones.activarhora_inicioPedido);
		this.jInternalFrameDetalleFormPedido.jSpinnerhora_finPedido.setEnabled(this.pedidoConstantesFunciones.activarhora_finPedido);
		this.jInternalFrameDetalleFormPedido.jTextAreadescripcionPedido.setEnabled(this.pedidoConstantesFunciones.activardescripcionPedido);
		this.jInternalFrameDetalleFormPedido.jTextFieldcupoPedido.setEnabled(this.pedidoConstantesFunciones.activarcupoPedido);
		this.jInternalFrameDetalleFormPedido.jTextFieldsaldoPedido.setEnabled(this.pedidoConstantesFunciones.activarsaldoPedido);
		this.jInternalFrameDetalleFormPedido.jTextFieldpedidosPedido.setEnabled(this.pedidoConstantesFunciones.activarpedidosPedido);
		this.jInternalFrameDetalleFormPedido.jTextFielddocumentosPedido.setEnabled(this.pedidoConstantesFunciones.activardocumentosPedido);
		this.jInternalFrameDetalleFormPedido.jTextFielddisponiblePedido.setEnabled(this.pedidoConstantesFunciones.activardisponiblePedido);
		this.jInternalFrameDetalleFormPedido.jTextFielddescuento_porcentajePedido.setEnabled(this.pedidoConstantesFunciones.activardescuento_porcentajePedido);
		this.jInternalFrameDetalleFormPedido.jTextFieldtotal_con_ivaPedido.setEnabled(this.pedidoConstantesFunciones.activartotal_con_ivaPedido);
		this.jInternalFrameDetalleFormPedido.jTextFieldsumanPedido.setEnabled(this.pedidoConstantesFunciones.activarsumanPedido);
		this.jInternalFrameDetalleFormPedido.jTextFielddescuento_valorPedido.setEnabled(this.pedidoConstantesFunciones.activardescuento_valorPedido);
		this.jInternalFrameDetalleFormPedido.jTextFieldtotal_sin_ivaPedido.setEnabled(this.pedidoConstantesFunciones.activartotal_sin_ivaPedido);
		this.jInternalFrameDetalleFormPedido.jTextFielddescuento_totalPedido.setEnabled(this.pedidoConstantesFunciones.activardescuento_totalPedido);
		this.jInternalFrameDetalleFormPedido.jTextFieldfletePedido.setEnabled(this.pedidoConstantesFunciones.activarfletePedido);
		this.jInternalFrameDetalleFormPedido.jTextFieldtotalPedido.setEnabled(this.pedidoConstantesFunciones.activartotalPedido);
		this.jInternalFrameDetalleFormPedido.jTextFieldsubtotalPedido.setEnabled(this.pedidoConstantesFunciones.activarsubtotalPedido);
		this.jInternalFrameDetalleFormPedido.jTextFieldotroPedido.setEnabled(this.pedidoConstantesFunciones.activarotroPedido);
		this.jInternalFrameDetalleFormPedido.jTextFieldultimo_costoPedido.setEnabled(this.pedidoConstantesFunciones.activarultimo_costoPedido);
		this.jInternalFrameDetalleFormPedido.jTextFieldivaPedido.setEnabled(this.pedidoConstantesFunciones.activarivaPedido);
		this.jInternalFrameDetalleFormPedido.jTextFieldfinanciamientoPedido.setEnabled(this.pedidoConstantesFunciones.activarfinanciamientoPedido);
		this.jInternalFrameDetalleFormPedido.jTextFieldmargen_utilidadPedido.setEnabled(this.pedidoConstantesFunciones.activarmargen_utilidadPedido);
		this.jInternalFrameDetalleFormPedido.jTextFieldotros_valoresPedido.setEnabled(this.pedidoConstantesFunciones.activarotros_valoresPedido);
		this.jInternalFrameDetalleFormPedido.jTextFieldanticipoPedido.setEnabled(this.pedidoConstantesFunciones.activaranticipoPedido);
		this.jInternalFrameDetalleFormPedido.jComboBoxid_tipo_cambioPedido.setEnabled(this.pedidoConstantesFunciones.activarid_tipo_cambioPedido);
			this.jInternalFrameDetalleFormPedido.jButtonid_tipo_cambioPedido.setEnabled(this.pedidoConstantesFunciones.activarid_tipo_cambioPedido);
		this.jInternalFrameDetalleFormPedido.jComboBoxid_centro_costoPedido.setEnabled(this.pedidoConstantesFunciones.activarid_centro_costoPedido);
			this.jInternalFrameDetalleFormPedido.jButtonid_centro_costoPedido.setEnabled(this.pedidoConstantesFunciones.activarid_centro_costoPedido);
		this.jInternalFrameDetalleFormPedido.jComboBoxid_zonaPedido.setEnabled(this.pedidoConstantesFunciones.activarid_zonaPedido);
		this.jInternalFrameDetalleFormPedido.jDateChooserfechaPedido.setEnabled(this.pedidoConstantesFunciones.activarfechaPedido);
		this.jInternalFrameDetalleFormPedido.jTextFieldnumero_fuePedido.setEnabled(this.pedidoConstantesFunciones.activarnumero_fuePedido);
		this.jInternalFrameDetalleFormPedido.jDateChooserfecha_servidorPedido.setEnabled(this.pedidoConstantesFunciones.activarfecha_servidorPedido);
		this.jInternalFrameDetalleFormPedido.jTextFieldmonto_retencionPedido.setEnabled(this.pedidoConstantesFunciones.activarmonto_retencionPedido);
		this.jInternalFrameDetalleFormPedido.jTextFieldicePedido.setEnabled(this.pedidoConstantesFunciones.activaricePedido);
		}
	}
	
		
}